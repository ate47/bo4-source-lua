-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:35
require( "ui/uieditor/actions_helper" ) --[[ @ 0]]

function GridForceMenuOpened( f1_arg0, f1_arg1, f1_arg2 )
	if f1_arg0.isGridLayout then
		f1_arg0:menuOpened( f1_arg1, f1_arg2, true ) --[[ @ 0]]
	end
end

function OpenErrorPopup( f2_arg0, f2_arg1 )
	LuaUtils.UI_ShowErrorMessageDialog( f2_arg0, Engine[@"hash_4F9F1239CFD921FE"]( f2_arg1 ) ) --[[ @ 0]]
end

function UpdateState( f3_arg0, f3_arg1 )
	local f3_local0 = {} --[[ @ 0]]
	if f3_arg1 ~= nil then
		f3_local0 = LUI.ShallowCopy( f3_arg1 ) --[[ @ 0]]
	end
	f3_local0.name = "update_state" --[[ @ 0]]
	f3_local0.forceDispatch = true --[[ @ 0]]
	f3_arg0:processEvent( f3_local0 ) --[[ @ 0]]
end

function UpdateElementState( f4_arg0, f4_arg1, f4_arg2 )
	if f4_arg0[f4_arg1] then
		f4_arg0[f4_arg1]:processEvent( {
			name = "update_state",
			controller = f4_arg2,
			forceDispatch = true
		} ) --[[ @ 0]]
	end
end

function UpdateSelfElementState( f5_arg0, f5_arg1, f5_arg2 )
	f5_arg1:processEvent( {
		name = "update_state",
		menu = f5_arg0,
		controller = f5_arg2,
		forceDispatch = true
	} ) --[[ @ 0]]
end

function UpdateSelfState( f6_arg0, f6_arg1 )
	f6_arg0:processEvent( {
		name = "update_state",
		controller = f6_arg1,
		forceDispatch = true
	} ) --[[ @ 0]]
end

function UpdateElementStateWithoutChildren( f7_arg0, f7_arg1, f7_arg2 )
	f7_arg0:updateElementState( f7_arg1, {
		name = "update_state",
		menu = f7_arg0,
		controller = f7_arg2
	} ) --[[ @ 0]]
end

function SetLuiKeyCatcher( f8_arg0 )
	Engine[@"SetLuiKeyCatcher"]( f8_arg0 ) --[[ @ 0]]
end

function EngineExec( f9_arg0, f9_arg1 )
	Engine[@"exec"]( f9_arg0, f9_arg1 ) --[[ @ 0]]
end

function UpdateAllMenuButtonPrompts( f10_arg0, f10_arg1 )
	f10_arg0:UpdateAllButtonPrompts( f10_arg1 ) --[[ @ 0]]
end

function UpdateButtonPromptState( f11_arg0, f11_arg1, f11_arg2, f11_arg3 )
	CoD.Menu.UpdateButtonShownState( f11_arg1, f11_arg0, f11_arg2, f11_arg3 ) --[[ @ 0]]
end

function ClearButtonsFlags( f12_arg0, f12_arg1, f12_arg2 )
	CoD.Menu.ClearButtonLabel( f12_arg0, f12_arg1, f12_arg2 ) --[[ @ 0]]
end

function SendButtonPressToSiblingMenu( f13_arg0, f13_arg1, f13_arg2, f13_arg3, f13_arg4 )
	local f13_local0 = f13_arg0:getParent() --[[ @ 0]]
	f13_local0 = f13_local0 and f13_local0[f13_arg1] --[[ @ 0]]
	if f13_local0 then
		CoD.Menu.HandleButtonPress( f13_local0, f13_arg2, f13_arg4, f13_arg3 ) --[[ @ 0]]
	end
end

function SendButtonPressToMenu( f14_arg0, f14_arg1, f14_arg2, f14_arg3 )
	CoD.Menu.HandleButtonPress( f14_arg0, f14_arg1, f14_arg3, f14_arg2 ) --[[ @ 0]]
end

function SendButtonPressToMenuEx( f15_arg0, f15_arg1, f15_arg2 )
	local f15_local0 = Engine[@"GetModel"]( Engine[@"GetModelForController"]( f15_arg1 ), "ButtonBits." .. f15_arg2 ) --[[ @ 0]]
	if f15_local0 then
		Engine[@"SetModelValue"]( f15_local0, Enum[@"LUIButtonFlags"][@"hash_5253A6F6CAAAE464"] ) --[[ @ 0]]
		Engine[@"SetModelValue"]( f15_local0, 0 ) --[[ @ 0]]
	end
end

function DisableAutoButtonCallback( f16_arg0, f16_arg1, f16_arg2 )
	if CoD.isPC then
		f16_arg1.__disableAutoButtonCallback = true --[[ @ 0]]
		if f16_arg1.__autoButtonCallback then
			for f16_local3, f16_local4 in pairs( f16_arg1.__autoButtonCallback ) --[[ @ 0]] do
				if f16_local4 then
					f16_arg0:AddButtonCallbackFunction( f16_arg1, f16_arg2, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], f16_local3, nil, nil, nil ) --[[ @ 0]]
				end
			end
		end
	end
end

function SetProperty( f17_arg0, f17_arg1, f17_arg2 )
	f17_arg0[f17_arg1] = f17_arg2 --[[ @ 0]]
end

function SetElementProperty( f18_arg0, f18_arg1, f18_arg2 )
	f18_arg0[f18_arg1] = f18_arg2 --[[ @ 0]]
end

function SetMenuProperty( f19_arg0, f19_arg1, f19_arg2 )
	f19_arg0[f19_arg1] = f19_arg2 --[[ @ 0]]
end

function SetElementPropertyEnum( f20_arg0, f20_arg1, f20_arg2 )
	f20_arg0[f20_arg1] = f20_arg2 --[[ @ 0]]
end

function ForceNotifyModel( f21_arg0, f21_arg1 )
	Engine[@"ForceNotifyModelSubscriptions"]( Engine[@"GetModel"]( Engine[@"GetModelForController"]( f21_arg0 ), f21_arg1 ) ) --[[ @ 0]]
end

function SetControllerModelValue( f22_arg0, f22_arg1, f22_arg2 )
	Engine[@"SetModelValue"]( Engine[@"CreateModel"]( Engine[@"GetModelForController"]( f22_arg0 ), f22_arg1 ), f22_arg2 ) --[[ @ 0]]
end

function ToggleControllerModelValueBoolean( f23_arg0, f23_arg1 )
	local f23_local0 = Engine[@"GetModel"]( Engine[@"GetModelForController"]( f23_arg0 ), f23_arg1 ) --[[ @ 0]]
	Engine[@"SetModelValue"]( f23_local0, not Engine[@"GetModelValue"]( f23_local0 ) ) --[[ @ 0]]
end

function ToggleControllerModelValueNumber( f24_arg0, f24_arg1 )
	local f24_local0 = Engine[@"GetModel"]( Engine[@"GetModelForController"]( f24_arg0 ), f24_arg1 ) --[[ @ 0]]
	Engine[@"SetModelValue"]( f24_local0, 1 - Engine[@"GetModelValue"]( f24_local0 ) ) --[[ @ 0]]
end

function SetControllerModelValueNumberIncrement( f25_arg0, f25_arg1, f25_arg2 )
	local f25_local0 = Engine[@"GetModel"]( Engine[@"GetModelForController"]( f25_arg0 ), f25_arg1 ) --[[ @ 0]]
	local f25_local1 = Engine[@"GetModelValue"]( f25_local0 ) + 1 --[[ @ 0]]
	if f25_arg2 then
		f25_local1 = math.min( f25_local1, f25_arg2 ) --[[ @ 0]]
	end
	Engine[@"SetModelValue"]( f25_local0, f25_local1 ) --[[ @ 0]]
end

function SetControllerModelValueNumberDecrement( f26_arg0, f26_arg1, f26_arg2 )
	local f26_local0 = Engine[@"GetModel"]( Engine[@"GetModelForController"]( f26_arg0 ), f26_arg1 ) --[[ @ 0]]
	local f26_local1 = Engine[@"GetModelValue"]( f26_local0 ) - 1 --[[ @ 0]]
	if f26_arg2 then
		f26_local1 = math.max( f26_local1, f26_arg2 ) --[[ @ 0]]
	end
	Engine[@"SetModelValue"]( f26_local0, f26_local1 ) --[[ @ 0]]
end

function ToggleGlobalModelValueBoolean( f27_arg0 )
	local f27_local0 = Engine[@"CreateModel"]( Engine[@"GetGlobalModel"](), f27_arg0 ) --[[ @ 0]]
	Engine[@"SetModelValue"]( f27_local0, not Engine[@"GetModelValue"]( f27_local0 ) ) --[[ @ 0]]
end

function SetListDataSource( f28_arg0, f28_arg1 )
	f28_arg0:setDataSource( f28_arg1 ) --[[ @ 0]]
end

function SetGlobalModelValueTrue( f29_arg0 )
	Engine[@"SetModelValue"]( Engine[@"CreateModel"]( Engine[@"GetGlobalModel"](), f29_arg0 ), true ) --[[ @ 0]]
end

function SetGlobalModelValueFalse( f30_arg0 )
	Engine[@"SetModelValue"]( Engine[@"CreateModel"]( Engine[@"GetGlobalModel"](), f30_arg0 ), false ) --[[ @ 0]]
end

function SetGlobalModelValue( f31_arg0, f31_arg1 )
	Engine[@"SetModelValue"]( Engine[@"CreateModel"]( Engine[@"GetGlobalModel"](), f31_arg0 ), f31_arg1 ) --[[ @ 0]]
end

function SetGlobalModelValueLocString( f32_arg0, f32_arg1 )
	local f32_local0 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f32_local0 = f32_local0:create( f32_arg0 ) --[[ @ 0]]
	f32_local0:set( f32_arg1 ) --[[ @ 0]]
end

function SetGlobalModelValueArg( f33_arg0, f33_arg1 )
	Engine[@"SetModelValue"]( Engine[@"CreateModel"]( Engine[@"GetGlobalModel"](), f33_arg0 ), f33_arg1 ) --[[ @ 0]]
end

function SetElementModelValue( f34_arg0, f34_arg1, f34_arg2 )
	Engine[@"SetModelValue"]( Engine[@"GetModel"]( f34_arg0:getModel(), f34_arg1 ), f34_arg2 ) --[[ @ 0]]
end

function DispatchEventToChildren( f35_arg0, f35_arg1, f35_arg2 )
	return f35_arg0:dispatchEventToChildren( {
		name = f35_arg1,
		controller = f35_arg2
	} )
end

function DispatchEventToParent( f36_arg0, f36_arg1, f36_arg2 )
	return f36_arg0:dispatchEventToParent( {
		name = f36_arg1,
		controller = f36_arg2
	} )
end

function DispatchEventToRoot( f37_arg0, f37_arg1, f37_arg2 )
	return f37_arg0:dispatchEventToRoot( {
		name = f37_arg1,
		controller = f37_arg2
	} )
end

function SetPerControllerTableProperty( f38_arg0, f38_arg1, f38_arg2 )
	CoD.perController[f38_arg0][f38_arg1] = f38_arg2 --[[ @ 0]]
end

function SetModelToGlobalDataSource( f39_arg0, f39_arg1, f39_arg2 )
	if DataSources[f39_arg2] then
		f39_arg1:setModel( DataSources[f39_arg2].getModel( f39_arg0 ), f39_arg0 ) --[[ @ 0]]
	end
end

function CopyElementToPerControllerTable( f40_arg0, f40_arg1, f40_arg2 )
	CoD.perController[f40_arg0][f40_arg2] = f40_arg1 --[[ @ 0]]
end

function SendClientScriptNotify( f41_arg0, f41_arg1, f41_arg2 )
	Engine[@"SendClientScriptNotify"]( f41_arg0, f41_arg1, {
		param1 = f41_arg2
	} ) --[[ @ 0]]
end

function SendClientScriptNotifyForAdjustedClient( f42_arg0, f42_arg1, f42_arg2 )
	Engine[@"SendClientScriptNotify"]( f42_arg0, f42_arg1, {
		param1 = f42_arg2 .. CoD.GetLocalClientAdjustedNum( f42_arg0 )
	} ) --[[ @ 0]]
end

function SendCustomClientScriptNotifyForAdjustedClient( f43_arg0, f43_arg1, ... )
	Engine[@"SendClientScriptNotify"]( f43_arg0, f43_arg1 .. CoD.GetLocalClientAdjustedNum( f43_arg0 ), ... ) --[[ @ 0]]
end

function SendClientScriptMenuChangeNotify( f44_arg0, f44_arg1, f44_arg2 )
	SendClientScriptMenuChangeNotifyHelper( f44_arg0, f44_arg1.menuName, f44_arg2 ) --[[ @ 0]]
end

function SendCustomClientScriptMenuChangeNotify( f45_arg0, f45_arg1, f45_arg2 )
	SendClientScriptMenuChangeNotifyHelper( f45_arg0, f45_arg1, f45_arg2 ) --[[ @ 0]]
end

function SendClientScriptMenuChangeNotifyWithState( f46_arg0, f46_arg1, f46_arg2, f46_arg3 )
	SendClientScriptMenuChangeNotifyHelper( f46_arg0, f46_arg1.menuName, f46_arg2, f46_arg3 ) --[[ @ 0]]
end

function SendCustomClientScriptMenuStateChangeNotify( f47_arg0, f47_arg1, f47_arg2, f47_arg3 )
	SendClientScriptMenuChangeNotifyHelper( f47_arg0, f47_arg1, f47_arg2, f47_arg3 ) --[[ @ 0]]
end

function SendCustomClientScriptMenuExpressionStateChangeNotify( f48_arg0, f48_arg1, f48_arg2, f48_arg3 )
	SendClientScriptMenuChangeNotifyHelper( f48_arg0, f48_arg1, f48_arg2, f48_arg3 ) --[[ @ 0]]
end

function SendClientScriptMenuExpressionStateChangeNotify( f49_arg0, f49_arg1, f49_arg2, f49_arg3 )
	SendClientScriptMenuChangeNotifyHelper( f49_arg0, f49_arg1.menuName, f49_arg2, f49_arg3 ) --[[ @ 0]]
end

function CallCustomElementFunction_Self( f50_arg0, f50_arg1, ... )
	local f50_local0 = {
		n = select( "#", ... ),
		...
	} --[[ @ 0]]
	if f50_arg0[f50_arg1] then
		if not f50_local0 or #f50_local0 == 1 and f50_local0[1] == nil then
			f50_arg0[f50_arg1]( f50_arg0 ) --[[ @ 0]]
		else
			f50_arg0[f50_arg1]( f50_arg0, ... ) --[[ @ 0]]
		end
	end
end

function CallCustomElementFunction_Element( f51_arg0, f51_arg1, ... )
	if f51_arg0[f51_arg1] then
		f51_arg0[f51_arg1]( f51_arg0, ... ) --[[ @ 0]]
	end
end

function SetProfileVar( f52_arg0, f52_arg1, f52_arg2 )
	Engine[@"SetProfileVar"]( f52_arg0, f52_arg1, f52_arg2 ) --[[ @ 0]]
end

function SetupDynamicContainer( f53_arg0 )
	LUI.OverrideFunction_CallOriginalSecond( f53_arg0, "close", function ( element )
		local f54_local0 = element:getFirstChild() --[[ @ 0]]
		while f54_local0 ~= nil do
			local f54_local1 = f54_local0:getNextSibling() --[[ @ 0]]
			f54_local0:close() --[[ @ 0]]
			f54_local0 = f54_local1 --[[ @ 0]]
		end
	end ) --[[ @ 0]]
end

function UseFirstElementAsBacking( f55_arg0, f55_arg1 )
	f55_arg0:setupResizingUIHorizontalList( f55_arg1 ) --[[ @ 0]]
	f55_arg0.__ignoreFirstElement = f55_arg1 --[[ @ 0]]
end

function OpenGameSettingsOptionsMenu( f56_arg0, f56_arg1, f56_arg2, f56_arg3 )
	CoD.perController[f56_arg2].selectedGameSettingElement = f56_arg1 --[[ @ 0]]
	f56_arg3:saveState( f56_arg2 ) --[[ @ 0]]
	OpenPopup( f56_arg3, "GameSettings_OptionsMenu", f56_arg2 ) --[[ @ 0]]
end

function ResetGameSettings()
	Engine[@"SetGametype"]( Engine[@"hash_169811927938FCD7"]() ) --[[ @ 0]]
	Engine[@"SetDvar"]( "bot_maxFree", 0 ) --[[ @ 0]]
	Engine[@"SetDvar"]( "bot_maxAllies", 0 ) --[[ @ 0]]
	Engine[@"SetDvar"]( "bot_maxAxis", 0 ) --[[ @ 0]]
	Engine[@"SetDvar"]( "bot_difficulty", 1 ) --[[ @ 0]]
	Engine[@"ForceNotifyModelSubscriptions"]( Engine[@"CreateModel"]( Engine[@"GetGlobalModel"](), "GametypeSettings.Update" ) ) --[[ @ 0]]
	Engine[@"ForceNotifyModelSubscriptions"]( Engine[@"CreateModel"]( Engine[@"GetGlobalModel"](), "GametypeSettings.Reset" ) ) --[[ @ 0]]
end

function SetCTDifficultyEasy()
	Engine[@"SetDvar"]( "overrideDifficulty", "easy" ) --[[ @ 0]]
end

function SetCTDifficultyMedium()
	Engine[@"SetDvar"]( "overrideDifficulty", "medium" ) --[[ @ 0]]
end

function SetCTDifficultyHard()
	Engine[@"SetDvar"]( "overrideDifficulty", "hard" ) --[[ @ 0]]
end

function SetCTDifficultyTutorial()
	Engine[@"SetDvar"]( "overrideDifficulty", "tutorial" ) --[[ @ 0]]
end

function ResetSelectedGameSetting( f62_arg0, f62_arg1, f62_arg2, f62_arg3 )
	local f62_local0 = CoD.perController[f62_arg2].selectedGameSettingElement --[[ @ 0]]
	if f62_local0 and f62_local0.revert then
		f62_local0:revert() --[[ @ 0]]
	end
	Engine[@"ForceNotifyModelSubscriptions"]( Engine[@"CreateModel"]( Engine[@"GetGlobalModel"](), "GametypeSettings.Update" ) ) --[[ @ 0]]
end

function GameSettingsMenuClosed( f63_arg0, f63_arg1 )
	if CoD.perController[f63_arg1].editingPresetClass then
		Engine[@"StopEditingPresetClass"]() --[[ @ 0]]
		CoD.perController[f63_arg1].isPreset = nil --[[ @ 0]]
	end
end

function ButtonListFocused( f64_arg0, f64_arg1, f64_arg2 )
	if f64_arg1.isClassButton then
		local f64_local0 = CoD.perController[f64_arg2] --[[ @ 0]]
		f64_local0.classNum = f64_arg1.actionParam --[[ @ 0]]
		f64_local0.isPreset = true --[[ @ 0]]
		f64_local0.weaponSlot = nil --[[ @ 0]]
		f64_local0.grenadeSlot = nil --[[ @ 0]]
		f64_local0.perkCategory = nil --[[ @ 0]]
		f64_local0.slotIndex = nil --[[ @ 0]]
	end
end

function GameSettingsButtonGainFocus( f65_arg0, f65_arg1, f65_arg2 )
	CoD.OptionsUtility.UpdateInfoModels( f65_arg1 ) --[[ @ 0]]
end

function PlaySoundSetSound( f66_arg0, f66_arg1 )
	f66_arg0:playSound( f66_arg1 ) --[[ @ 0]]
end

function SetIgnorePlaySoundSetSound( f67_arg0, f67_arg1 )
	f67_arg0:setIgnorePlaySound( f67_arg1 ) --[[ @ 0]]
end

function PlaySoundAlias( f68_arg0 )
	Engine[@"playsound"]( f68_arg0 ) --[[ @ 0]]
end

function DelayedPlaySoundAlias( f69_arg0, f69_arg1, f69_arg2 )
	f69_arg0:addElement( LUI.UITimer.newElementTimer( f69_arg1, true, function ()
		PlaySoundAlias( f69_arg2 ) --[[ @ 0]]
	end ) ) --[[ @ 0]]
end

function StopSoundAlias( f71_arg0 )
	Engine[@"stopsound"]( f71_arg0 ) --[[ @ 0]]
end

function PlayMPMusicPreview( f72_arg0, f72_arg1 )
	local f72_local0 = CoD.SafeGetModelValue( f72_arg1:getModel(), "alias" ) --[[ @ 0]]
	if f72_local0 and f72_local0 ~= "" then
		CoD.StopFrontendMusic() --[[ @ 0]]
		Engine[@"playsound"]( f72_local0 ) --[[ @ 0]]
		if not f72_arg1.soundTimer then
			f72_arg1.soundTimer = LUI.UITimer.newElementTimer( Engine[@"GetSoundPlaybackTime"]( f72_local0 ), true, function ()
				StopMPMusicPreview( f72_arg0, f72_arg1 ) --[[ @ 0]]
			end ) --[[ @ 0]]
			f72_arg1:addElement( f72_arg1.soundTimer ) --[[ @ 0]]
		else
			f72_arg1.soundTimer:reset() --[[ @ 0]]
		end
	end
end

function StopMPMusicPreview( f74_arg0, f74_arg1 )
	local f74_local0 = CoD.SafeGetModelValue( f74_arg1:getModel(), "alias" ) --[[ @ 0]]
	if f74_local0 and f74_local0 ~= "" then
		Engine[@"stopsound"]( f74_local0 ) --[[ @ 0]]
		CoD.ResetFrontendMusic() --[[ @ 0]]
		if f74_arg1.soundTimer then
			f74_arg1.soundTimer:close() --[[ @ 0]]
			f74_arg1.soundTimer = nil --[[ @ 0]]
		end
	end
end

function PlayMenuMusic( f75_arg0, f75_arg1, f75_arg2 )
	if not f75_arg2 then
		f75_arg2 = 0 --[[ @ 0]]
	end
	local f75_local0 = Engine[@"GetModelForController"]( f75_arg0 ) --[[ @ 0]]
	f75_local0.MenuMusic.musicStateName:set( f75_arg1 ) --[[ @ 0]]
	f75_local0.MenuMusic.delayInMS:set( f75_arg2 ) --[[ @ 0]]
	f75_local0.MenuMusic:forceNotifySubscriptions() --[[ @ 0]]
end

function ResetFrontendMusic( f76_arg0 )
	local f76_local0 = Engine[@"GetModelForController"]( f76_arg0 ) --[[ @ 0]]
	f76_local0.MenuMusic.musicStateName:set( "" ) --[[ @ 0]]
	f76_local0.MenuMusic.delayInMS:set( 0 ) --[[ @ 0]]
	f76_local0.MenuMusic:forceNotifySubscriptions() --[[ @ 0]]
	CoD.ResetFrontendMusic() --[[ @ 0]]
end

function SetElementModelToFocusedElementModel( f77_arg0, f77_arg1, f77_arg2, f77_arg3 )
	local f77_local0 = f77_arg2:getModel() --[[ @ 0]]
	if f77_arg1[f77_arg3] and f77_local0 then
		f77_arg1[f77_arg3]:setModel( f77_local0, f77_arg0 ) --[[ @ 0]]
	end
end

function SetElementModelToFocusedElementSubModel( f78_arg0, f78_arg1, f78_arg2, f78_arg3, f78_arg4 )
	local f78_local0 = f78_arg2:getModel() --[[ @ 0]]
	if f78_local0 then
		local f78_local1 = f78_local0[f78_arg4] --[[ @ 0]]
		if f78_arg3 and f78_local1 then
			f78_arg3:setModel( f78_local1, f78_arg1 ) --[[ @ 0]]
		end
	end
end

function SetAncestorsElementModelToFocusedElementSubModel( f79_arg0, f79_arg1, f79_arg2, f79_arg3, f79_arg4 )
	local f79_local0 = nil --[[ @ 0]]
	local f79_local1 = f79_arg2:getParent() --[[ @ 0]]
	while f79_local1 and not f79_local0 do
		if f79_local1[f79_arg3] then
			f79_local0 = f79_local1[f79_arg3] --[[ @ 0]]
		else
			f79_local1 = f79_local1:getParent() --[[ @ 0]]
		end
	end
	local f79_local2 = f79_arg2:getModel() --[[ @ 0]]
	if f79_local2 then
		local f79_local3 = f79_local2[f79_arg4] --[[ @ 0]]
		if f79_local0 and f79_local3 then
			f79_local0:setModel( f79_local3, f79_arg1 ) --[[ @ 0]]
		end
	end
end

function SetElementModelToSelfModelValue( f80_arg0, f80_arg1, f80_arg2, f80_arg3 )
	local f80_local0 = f80_arg0:getModel() --[[ @ 0]]
	f80_local0 = f80_local0 and f80_local0[f80_arg3] --[[ @ 0]]
	if f80_local0 then
		local f80_local1 = f80_local0:get() --[[ @ 0]]
		if type( f80_local1 ) == "userdata" then
			f80_arg1:setModel( f80_local1, f80_arg2 ) --[[ @ 0]]
		end
	end
end

function ForceNotifyGlobalModel( f81_arg0, f81_arg1 )
	Engine[@"ForceNotifyModelSubscriptions"]( Engine[@"GetModel"]( Engine[@"GetGlobalModel"](), f81_arg1 ) ) --[[ @ 0]]
end

function ForceNotifyControllerModel( f82_arg0, f82_arg1 )
	local f82_local0 = Engine[@"GetModel"]( Engine[@"GetModelForController"]( f82_arg0 ), f82_arg1 ) --[[ @ 0]]
	if f82_local0 then
		Engine[@"ForceNotifyModelSubscriptions"]( f82_local0 ) --[[ @ 0]]
	end
end

function DelayForceNotifyControllerModel( f83_arg0, f83_arg1, f83_arg2, f83_arg3 )
	if not f83_arg3 then
		f83_arg3 = 0 --[[ @ 0]]
	end
	f83_arg0:addElement( LUI.UITimer.newElementTimer( f83_arg3, true, function ( f84_arg0 )
		local f84_local0 = Engine[@"GetModel"]( Engine[@"GetModelForController"]( f83_arg1 ), f83_arg2 ) --[[ @ 0]]
		if f84_local0 then
			Engine[@"ForceNotifyModelSubscriptions"]( f84_local0 ) --[[ @ 0]]
		end
	end ) ) --[[ @ 0]]
end

function InitDataSourceModel( f85_arg0, f85_arg1 )
	DataSources[f85_arg1].getModel( f85_arg0 ) --[[ @ 0]]
end

function DataSourceHelperRecreate( f86_arg0, f86_arg1 )
	DataSources[f86_arg1].recreate( f86_arg0 ) --[[ @ 0]]
end

function DataSourceHelperGetModel( f87_arg0, f87_arg1 )
	if DataSources[f87_arg1] then
		DataSources[f87_arg1].getModel( f87_arg0 ) --[[ @ 0]]
	end
end

function ShowKeyboard( f88_arg0, f88_arg1, f88_arg2, f88_arg3 )
	Engine[@"exec"]( f88_arg2, "ui_keyboard_new " .. Enum[@"KeyboardType"][Engine[@"hash_1C53F8D38DF9042B"]( f88_arg3 )] ) --[[ @ 0]]
end

function RefreshLobbyGameClient( f89_arg0, f89_arg1 )
	local f89_local0 = Engine[@"GetModel"]( Engine[@"GetGlobalModel"](), "lobbyRoot.gameClient.update" ) --[[ @ 0]]
	local f89_local1 --[[ @ 0]]
	if Engine[@"GetModelValue"]( f89_local0 ) == 0 then
		f89_local1 = 1 --[[ @ 0]]
	else
		f89_local1 = 0 --[[ @ 0]]
	end
	Engine[@"SetModelValue"]( f89_local0, f89_local1 ) --[[ @ 0]]
end

function ShowHeaderIconOnly( f90_arg0 )
	f90_arg0.showHeaderKicker = false --[[ @ 0]]
	f90_arg0.showHeaderIcon = true --[[ @ 0]]
end

function ShowHeaderKickerAndIcon( f91_arg0 )
	f91_arg0.showHeaderKicker = true --[[ @ 0]]
	f91_arg0.showHeaderIcon = true --[[ @ 0]]
end

function SetHeadingKickerText( f92_arg0 )
	local f92_local0 = Engine[@"CreateModel"]( Engine[@"GetGlobalModel"](), "lobbyRoot.headingKickerText" ) --[[ @ 0]]
	if f92_local0 then
		Engine[@"SetModelValue"]( f92_local0, Engine[@"hash_4F9F1239CFD921FE"]( f92_arg0 ) ) --[[ @ 0]]
	end
end

function SetHeadingKickerTextToGameMode()
	if CoD.PrestigeUtility.isInPermanentUnlockMenu then
		SetHeadingKickerText( @"hash_556F8CED179E36FD" ) --[[ @ 0]]
		return 
	elseif PregameActive() then
		SetHeadingKickerText( GetGameMode() ) --[[ @ 0]]
		return 
	end
	local f93_local0 = Engine[@"CreateModel"]( Engine[@"GetGlobalModel"](), "lobbyRoot.headingKickerMode" ) --[[ @ 0]]
	local f93_local1 = Engine[@"CreateModel"]( Engine[@"GetGlobalModel"](), "lobbyRoot.headingKickerText" ) --[[ @ 0]]
	if f93_local1 then
		local f93_local2 = Engine[@"SetModelValue"] --[[ @ 0]]
		local f93_local3 = f93_local1 --[[ @ 0]]
		local f93_local4 --[[ @ 0]]
		if f93_local0 then
			f93_local4 = Engine[@"GetModelValue"]( f93_local0 ) --[[ @ 0]]
			if not f93_local4 then
			
			else
				f93_local2( f93_local3, f93_local4 ) --[[ @ 0]]
			end
		end
		f93_local4 = "" --[[ @ 0]]
	end
end

function SetHeadingKickerTextToSelectedWeapon( f94_arg0 )
	local f94_local0 = CoD.GetCustomization( f94_arg0, "weapon_index" ) --[[ @ 0]]
	local f94_local1 = Engine[@"CreateModel"]( Engine[@"GetGlobalModel"](), "lobbyRoot.headingKickerText" ) --[[ @ 0]]
	if f94_local1 and f94_local0 ~= CoD.CACUtility.EmptyItemIndex then
		local f94_local2 = Engine[@"GetItemRef"]( f94_local0 ) --[[ @ 0]]
		local f94_local3 = Engine[@"ToUpper"]( Engine[@"hash_4F9F1239CFD921FE"]( Engine[@"GetItemName"]( f94_local0 ) ) ) --[[ @ 0]]
		if f94_local1 and f94_local3 then
			Engine[@"SetModelValue"]( f94_local1, f94_local3 ) --[[ @ 0]]
		end
	end
end

function ForceLobbyButtonUpdate( f95_arg0 )
	LuaUtils.ForceLobbyButtonUpdate() --[[ @ 0]]
end

function RefreshServerList( f96_arg0, f96_arg1 )
	Engine[@"hash_2BF0D3F261D1B32A"]( f96_arg1 ) --[[ @ 0]]
end

function JoinSystemLinkServer( f97_arg0, f97_arg1, f97_arg2 )
	if not f97_arg1.gridInfoTable then
		return 
	end
	local f97_local0 = f97_arg1.gridInfoTable.zeroBasedIndex --[[ @ 0]]
	local f97_local1 = Engine[@"GetModelValue"]( Engine[@"CreateModel"]( Engine[@"CreateModel"]( Engine[@"CreateModel"]( Engine[@"GetGlobalModel"](), "serverListRoot" ), "server" .. tostring( f97_local0 ) ), "sessionMode" ) ) --[[ @ 0]]
	local f97_local2 = nil --[[ @ 0]]
	if f97_local1 == Enum[@"eModes"][@"hash_360063C67132EB69"] then
		local f97_local3 = LobbyData.GetLobbyMenuByName( LuaEnum.UI.DIRECTOR_LAN_CP ) --[[ @ 0]]
		f97_local2 = f97_local3[@"hash_C45968D6338650E"] --[[ @ 0]]
	elseif f97_local1 == Enum[@"eModes"][@"hash_383EBA96F36BC4E5"] then
		local f97_local3 = LobbyData.GetLobbyMenuByName( LuaEnum.UI.DIRECTOR_LAN_MP ) --[[ @ 0]]
		f97_local2 = f97_local3[@"hash_C45968D6338650E"] --[[ @ 0]]
	elseif f97_local1 == Enum[@"eModes"][@"hash_73723205FAE52C4A"] then
		local f97_local3 = LobbyData.GetLobbyMenuByName( LuaEnum.UI.DIRECTOR_LAN_ZM ) --[[ @ 0]]
		f97_local2 = f97_local3[@"hash_C45968D6338650E"] --[[ @ 0]]
	end
	if f97_local2 == nil then
		f97_local2 = 1 --[[ @ 0]]
	end
	local f97_local3 = function ( f98_arg0 )
		if f98_arg0 then
			Engine[@"hash_7A44CDBD19FD7613"]( f98_arg0.controller, f98_arg0.index ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	if f97_local2 < Engine[@"GetUsedControllerCount"]() then
		CoD.OverlayUtility.CreateOverlay( f97_arg2, f97_arg0, "LobbyLocalClientWarning", {
			controller = f97_arg2,
			navToMenu = nil,
			popupName = nil,
			openFromMenu = nil,
			actionFunc = f97_local3,
			index = f97_local0
		} ) --[[ @ 0]]
		return 
	end
	f97_local3( {
		controller = f97_arg2,
		index = f97_local0
	} ) --[[ @ 0]]
end

function LobbyAddLocalClient( f99_arg0, f99_arg1 )
	if LuaUtils.OnlineOnlyDemo() then
		return 
	elseif Engine[@"hash_5CB675CA7856DA25"]() and not LuaUtils.TrialAllowSplitscreen() then
		return false
	elseif Engine[@"hash_7A63E42B2FB6EC02"]() == Enum[@"LobbyNetworkMode"][@"hash_2E99F41098B71960"] then
		if CoD.isPS4 then
			if Engine[@"DisplayNpAvailabilityErrors"]( f99_arg1 ) then
				return 
			elseif LuaUtils.RequirePaidSubscriptionForOnlinePlay() then
				local f99_local0, f99_local1 = Engine[@"CheckPSPlus"]( f99_arg1 ) --[[ @ 0]]
				if f99_local0 == true then
					if f99_local1 == false and not LuaUtils.PlayStationPlusUpsell( f99_arg1 ) then
						return 
					end
				else
					return 
				end
			end
		end
		if CoD.isDurango and not Engine[@"IsUserGuest"]( f99_arg1 ) and not Engine[@"HasMPPrivileges"]( f99_arg1 ) then
			Engine[@"PrivilegeForceCheck"]( f99_arg1, 254, true ) --[[ @ 0]]
			return 
		end
	end
	local f99_local0 = Enum[@"LobbyType"][@"hash_20A1647599284110"] --[[ @ 0]]
	if Engine[@"hash_23E68E350BEFE50D"]( Enum[@"LobbyModule"][@"hash_40C46B73E8E18BA2"], Enum[@"LobbyType"][@"hash_692676CF5B6FCD43"] ) then
		f99_local0 = Enum[@"LobbyType"][@"hash_692676CF5B6FCD43"] --[[ @ 0]]
	end
	if Engine[@"GetUsedControllerCount"]() < Dvar[@"hash_66BAC8B42067D2C5"]:get() then
		local f99_local2 = Engine[@"GetModelValue"]( Engine[@"GetModel"]( Engine[@"GetGlobalModel"](), "lobbyRoot.lobbyMainMode" ) ) --[[ @ 0]]
		local f99_local3 = -1 --[[ @ 0]]
		if f99_local2 == Enum[@"LobbyMainMode"][@"hash_37E41449995CD57E"] then
			f99_local3 = LuaEnum.FEATURE_BAN.MP_SPLIT_SCREEN --[[ @ 0]]
		elseif f99_local2 == Enum[@"LobbyMainMode"][@"hash_379D01499920B292"] then
			f99_local3 = LuaEnum.FEATURE_BAN.ZM_SPLIT_SCREEN --[[ @ 0]]
		elseif f99_local2 == Enum[@"LobbyMainMode"][@"hash_37B50049993542C0"] then
			f99_local3 = LuaEnum.FEATURE_BAN.CP_SPLIT_SCREEN --[[ @ 0]]
		end
		if f99_local3 >= 0 then
			for f99_local4 = 0 --[[ @ 0]], LuaDefine.MAX_CONTROLLER_COUNT - 1, 1 do
				if CheckIfFeatureIsBanned( f99_local4, f99_local3 ) then
					LuaUtils.UI_ShowErrorMessageDialog( f99_arg1, GetFeatureBanInfo( f99_local4, f99_local3 ) ) --[[ @ 0]]
					return 
				end
			end
		end
		CoD.LobbyUtility.UnusedGamepadButton( f99_arg0, f99_arg1 ) --[[ @ 0]]
		if Engine[@"GetUsedControllerCount"]() == 3 then
			Engine[@"ExecNow"]( nil, "canceldemonwareconnect" ) --[[ @ 0]]
			LuaUtils.UI_ShowWarningMessageDialog( f99_arg1, Engine[@"hash_4F9F1239CFD921FE"]( @"hash_706B651D2751797A" ) ) --[[ @ 0]]
		end
		local f99_local4 = Engine[@"hash_622EAAB59AA27E9B"]( "bot_maxAllies" ) --[[ @ 0]]
		local f99_local5 = Engine[@"hash_622EAAB59AA27E9B"]( "bot_maxAxis" ) --[[ @ 0]]
		local f99_local6 = Engine[@"hash_622EAAB59AA27E9B"]( "bot_maxFree" ) --[[ @ 0]]
		local f99_local7 = CoD.OptionsUtility.MaxSplitscreenBots --[[ @ 0]]
		if f99_local7 < f99_local4 + f99_local5 then
			Engine[@"SetDvar"]( "bot_maxAllies", f99_local7 / 2 ) --[[ @ 0]]
			Engine[@"SetDvar"]( "bot_maxAxis", f99_local7 / 2 ) --[[ @ 0]]
		end
		if f99_local7 < f99_local6 then
			Engine[@"SetDvar"]( "bot_maxFree", f99_local7 ) --[[ @ 0]]
		end
		CoD.perController[Engine[@"GetPrimaryController"]()].localClientChanged = true --[[ @ 0]]
		ForceLobbyButtonUpdate( f99_arg1 ) --[[ @ 0]]
	end
end

function LobbyLANServerPlayerListRefresh( f100_arg0, f100_arg1, f100_arg2 )
	Engine[@"SetModelValue"]( Engine[@"CreateModel"]( Engine[@"CreateModel"]( Engine[@"GetGlobalModel"](), "serverPlayerListRoot" ), "selectedServer" ), f100_arg1.gridInfoTable.zeroBasedIndex ) --[[ @ 0]]
	if f100_arg0.LANServerBrowserDetails and f100_arg0.LANServerBrowserDetails.PlayerList then
		f100_arg0.LANServerBrowserDetails.PlayerList:updateDataSource() --[[ @ 0]]
	end
end

function UploadStats( f101_arg0, f101_arg1 )
	Engine[@"exec"]( f101_arg1, "uploadstats" ) --[[ @ 0]]
	Engine[@"exec"]( f101_arg1, "savegamerprofilestats" ) --[[ @ 0]]
end

function SaveLoadout( f102_arg0, f102_arg1 )
	local f102_local0 = CoD.PlayerRoleUtility.customizationMode --[[ @ 0]]
	if not f102_local0 then
		f102_local0 = CoD.PrestigeUtility.GetPermanentUnlockMode() --[[ @ 0]]
	end
	Engine[@"hash_2E6C09FDF6C8D188"]( f102_arg1, f102_local0 ) --[[ @ 0]]
	if f102_local0 == Enum[@"eModes"][@"hash_383EBA96F36BC4E5"] then
		CoD.BreadcrumbUtility.UploadBuffer( f102_arg1, Enum[@"StorageFileType"][@"hash_6FDE358A242AFA2C"] ) --[[ @ 0]]
	elseif f102_local0 == Enum[@"eModes"][@"hash_3BF1DCC8138A9D39"] then
		CoD.BreadcrumbUtility.UploadBuffer( f102_arg1, Enum[@"StorageFileType"][@"hash_7D1A0F784B3C95A0"] ) --[[ @ 0]]
	elseif f102_local0 == Enum[@"eModes"][@"hash_73723205FAE52C4A"] then
		CoD.BreadcrumbUtility.UploadBuffer( f102_arg1, Enum[@"StorageFileType"][@"hash_2EC77AD28A19F8E0"] ) --[[ @ 0]]
	end
end

function SaveLoadoutGeneric( f103_arg0 )
	local f103_local0 = CoD.PlayerRoleUtility.customizationMode --[[ @ 0]]
	if not f103_local0 then
		f103_local0 = CoD.PrestigeUtility.GetPermanentUnlockMode() --[[ @ 0]]
	end
	Engine[@"hash_2E6C09FDF6C8D188"]( f103_arg0, f103_local0 ) --[[ @ 0]]
	if f103_local0 == Enum[@"eModes"][@"hash_383EBA96F36BC4E5"] then
		CoD.BreadcrumbUtility.UploadBuffer( f103_arg0, Enum[@"StorageFileType"][@"hash_6FDE358A242AFA2C"] ) --[[ @ 0]]
	elseif f103_local0 == Enum[@"eModes"][@"hash_3BF1DCC8138A9D39"] then
		CoD.BreadcrumbUtility.UploadBuffer( f103_arg0, Enum[@"StorageFileType"][@"hash_7D1A0F784B3C95A0"] ) --[[ @ 0]]
	elseif f103_local0 == Enum[@"eModes"][@"hash_73723205FAE52C4A"] then
		CoD.BreadcrumbUtility.UploadBuffer( f103_arg0, Enum[@"StorageFileType"][@"hash_2EC77AD28A19F8E0"] ) --[[ @ 0]]
	end
end

function ChangeCharacter( f104_arg0, f104_arg1, f104_arg2, f104_arg3 )
	Engine[@"SendMenuResponse"]( f104_arg2, CoD.CACUtility.PositionDraftMenuName, "changecharacter", 0 ) --[[ @ 0]]
	local f104_local0 = Engine[@"GetModelForController"]( f104_arg2 ) --[[ @ 0]]
	f104_local0 = f104_local0:create( "PositionDraft.focusedCharacterIndex" ) --[[ @ 0]]
	f104_local0:set( 0 ) --[[ @ 0]]
	f104_local0 = Engine[@"GetModelForController"]( f104_arg2 ) --[[ @ 0]]
	f104_local0 = f104_local0:create( "PositionDraft.focusedCharacterWeapon" ) --[[ @ 0]]
	f104_local0:set( "" ) --[[ @ 0]]
	Engine[@"SendClientScriptNotify"]( f104_arg2, "PositionDraft_Update", {
		localClientNum = Engine[@"GetLocalClientNum"]( f104_arg2 )
	} ) --[[ @ 0]]
end

function PositionDraftOnChangingCharacter( f105_arg0 )
	Engine[@"SendClientScriptNotify"]( f105_arg0, "PositionDraft_ChangingCharacter", {
		localClientNum = Engine[@"GetLocalClientNum"]( f105_arg0 )
	} ) --[[ @ 0]]
end

function PositionDraftOnChangingCharacterComplete( f106_arg0 )
	Engine[@"SendClientScriptNotify"]( f106_arg0, "PositionDraft_ChangingCharacterComplete", {
		localClientNum = Engine[@"GetLocalClientNum"]( f106_arg0 )
	} ) --[[ @ 0]]
end

function PositionDraftResetCharacterScene( f107_arg0 )
	Engine[@"SendClientScriptNotify"]( f107_arg0, "PositionDraft_ResetCharacterScene", {
		localClientNum = Engine[@"GetLocalClientNum"]( f107_arg0 )
	} ) --[[ @ 0]]
end

function PositionDraftReady( f108_arg0, f108_arg1, f108_arg2 )
	Engine[@"SendMenuResponse"]( f108_arg2, CoD.CACUtility.PositionDraftMenuName, "ready", 0 ) --[[ @ 0]]
	local f108_local0 = Engine[@"hash_E4D2F32833CFA6C"]( Engine[@"GetClientNum"]( f108_arg2 ) ) --[[ @ 0]]
	if f108_local0 ~= nil then
		f108_local0.ready:set( 1 ) --[[ @ 0]]
	end
end

function PositionDraftOnFocusCharacter( f109_arg0, f109_arg1, f109_arg2 )
	local f109_local0 = "" --[[ @ 0]]
	local f109_local1 = Engine[@"CurrentSessionMode"]() --[[ @ 0]]
	local f109_local2 = CoD.CACUtility.GetSelectedCustomClass( f109_arg2, f109_local1 ) --[[ @ 0]]
	if not CoD.BaseUtility.IsCurrentSessionModeEqualTo( Enum[@"eModes"][@"hash_3BF1DCC8138A9D39"] ) and f109_local2 and f109_local2 >= 0 then
		local f109_local3 = CoD.CACUtility.GetClassItem( f109_arg2, f109_local2, "primary", f109_local1 ) --[[ @ 0]]
		if f109_local3 and f109_local3 > CoDShared.EmptyItemIndex then
			f109_local0 = Engine[@"GetItemRef"]( f109_local3, Enum[@"hash_6EB546760F890D2"][@"hash_6569E84652131CD7"], f109_local1 ) --[[ @ 0]]
		end
	end
	local f109_local3 = f109_arg1.characterIndex --[[ @ 0]]
	if not f109_local3 then
		local f109_local4 = f109_arg1:getModel() --[[ @ 0]]
		f109_local3 = f109_local4.characterIndex and f109_local4 and f109_local4.characterIndex:get() --[[ @ 0]]
	end
	local f109_local4 = Engine[@"GetModelForController"]( f109_arg2 ) --[[ @ 0]]
	f109_local4 = f109_local4:create( "PositionDraft.focusedCharacterIndex" ) --[[ @ 0]]
	f109_local4:set( f109_local3 ) --[[ @ 0]]
	f109_local4 = Engine[@"GetModelForController"]( f109_arg2 ) --[[ @ 0]]
	f109_local4 = f109_local4:create( "PositionDraft.focusedCharacterWeapon" ) --[[ @ 0]]
	f109_local4:set( f109_local0 ) --[[ @ 0]]
	f109_local4 = Engine[@"GetModelForController"]( f109_arg2 ) --[[ @ 0]]
	f109_local4 = f109_local4:create( "PositionDraft.focusedCharacterHasRestriction" ) --[[ @ 0]]
	f109_local4:set( CoD.PlayerRoleUtility.IsAnyAbilityRestricted( f109_arg1 ) ) --[[ @ 0]]
	f109_local4 = Engine[@"GetModelForController"]( f109_arg2 ) --[[ @ 0]]
	f109_local4 = f109_local4:create( "PositionDraft.focusedCharacterIsRestricted" ) --[[ @ 0]]
	f109_local4:set( CoD.PlayerRoleUtility.IsCharacterRestricted( f109_local1, f109_local3 ) ) --[[ @ 0]]
	Engine[@"SendClientScriptNotify"]( f109_arg2, "PositionDraft_Update", {
		localClientNum = Engine[@"GetLocalClientNum"]( f109_arg2 )
	} ) --[[ @ 0]]
end

function PositionDraftOnFocusCharacterLost( f110_arg0, f110_arg1, f110_arg2, f110_arg3 )
	if not (not f110_arg1 or f110_arg1.gridInfoTable == nil or f110_arg1.gridInfoTable.parentGrid.activeWidget ~= f110_arg1) or f110_arg3 == true then
		PositionDraftClearFocusedCharacter( f110_arg2 ) --[[ @ 0]]
	end
end

function PositionDraftClearFocusedCharacter( f111_arg0 )
	local f111_local0 = Engine[@"GetModelForController"]( f111_arg0 ) --[[ @ 0]]
	f111_local0 = f111_local0:create( "PositionDraft.focusedCharacterIndex" ) --[[ @ 0]]
	f111_local0:set( 0 ) --[[ @ 0]]
	f111_local0 = Engine[@"GetModelForController"]( f111_arg0 ) --[[ @ 0]]
	f111_local0 = f111_local0:create( "PositionDraft.focusedCharacterWeapon" ) --[[ @ 0]]
	f111_local0:set( "" ) --[[ @ 0]]
	f111_local0 = Engine[@"GetModelForController"]( f111_arg0 ) --[[ @ 0]]
	f111_local0 = f111_local0:create( "PositionDraft.focusedCharacterHasRestriction" ) --[[ @ 0]]
	f111_local0:set( false ) --[[ @ 0]]
	f111_local0 = Engine[@"GetModelForController"]( f111_arg0 ) --[[ @ 0]]
	f111_local0 = f111_local0:create( "PositionDraft.focusedCharacterIsRestricted" ) --[[ @ 0]]
	f111_local0:set( false ) --[[ @ 0]]
	Engine[@"SendClientScriptNotify"]( f111_arg0, "PositionDraft_Update", {
		localClientNum = Engine[@"GetLocalClientNum"]( f111_arg0 )
	} ) --[[ @ 0]]
end

function PositionDraftSelectCharacter( f112_arg0, f112_arg1, f112_arg2 )
	local f112_local0 = f112_arg1:getModel() --[[ @ 0]]
	f112_local0 = f112_local0:create( "disabled" ) --[[ @ 0]]
	if f112_local0:get() == false then
		Engine[@"SendMenuResponse"]( f112_arg2, CoD.CACUtility.PositionDraftMenuName, "draft", f112_arg1.characterIndex ) --[[ @ 0]]
		Engine[@"SendClientScriptNotify"]( f112_arg2, "PositionDraft_CharacterSelected", {
			localClientNum = Engine[@"GetLocalClientNum"]( f112_arg2 )
		} ) --[[ @ 0]]
		CoD.perController[f112_arg2].classNum = Engine[@"hash_76C0CB7BD099633F"]( Engine[@"CurrentSessionMode"](), f112_arg1.characterIndex ) --[[ @ 0]]
		f112_local0 = Engine[@"GetModelForController"]( f112_arg2 ) --[[ @ 0]]
		f112_local0 = f112_local0:create( "PositionDraft.focusedCharacterIndex" ) --[[ @ 0]]
		f112_local0:set( 0 ) --[[ @ 0]]
		f112_local0 = Engine[@"GetModelForController"]( f112_arg2 ) --[[ @ 0]]
		f112_local0 = f112_local0:create( "PositionDraft.focusedCharacterWeapon" ) --[[ @ 0]]
		f112_local0:set( "" ) --[[ @ 0]]
	end
end

function PositionDraftSelectCharacterFrontend( f113_arg0, f113_arg1, f113_arg2 )
	local f113_local0 = f113_arg1:getModel() --[[ @ 0]]
	f113_local0 = f113_local0:create( "disabled" ) --[[ @ 0]]
	if f113_local0:get() == false then
		f113_local0 = f113_arg1.characterIndex --[[ @ 0]]
		if not f113_local0 then
			local f113_local1 = f113_arg1:getModel() --[[ @ 0]]
			f113_local0 = f113_local1.characterIndex and f113_local1 and f113_local1.characterIndex:get() --[[ @ 0]]
		end
		Engine[@"hash_211D727BB83FE0C5"]( f113_arg2, Engine[@"hash_3C3DF042E7492B66"]( Enum[@"LobbyModule"][@"hash_40C46B73E8E18BA2"] ), f113_local0 ) --[[ @ 0]]
		LuaUtils.SetLastSelectedSpecialist( f113_arg2, f113_local0 ) --[[ @ 0]]
		Engine[@"SendClientScriptNotify"]( f113_arg2, "PositionDraft_CharacterSelected", {
			characterIndex = f113_local0,
			localClientNum = Engine[@"GetLocalClientNum"]( f113_arg2 )
		} ) --[[ @ 0]]
		CoD.perController[f113_arg2].classNum = Engine[@"hash_76C0CB7BD099633F"]( Engine[@"CurrentSessionMode"](), f113_local0 ) --[[ @ 0]]
		local f113_local2 = Engine[@"GetModelForController"]( f113_arg2 ) --[[ @ 0]]
		f113_local2 = f113_local2:create( "PositionDraft.focusedCharacterIndex" ) --[[ @ 0]]
		f113_local2:set( 0 ) --[[ @ 0]]
		f113_local2 = Engine[@"GetModelForController"]( f113_arg2 ) --[[ @ 0]]
		f113_local2 = f113_local2:create( "PositionDraft.focusedCharacterWeapon" ) --[[ @ 0]]
		f113_local2:set( "" ) --[[ @ 0]]
	end
end

function PositionDraftOnCloseCharacterSelection( f114_arg0 )
	if CoD.SafeGetModelValue( Engine[@"GetModelForController"]( f114_arg0 ), "PositionDraft.ResetOnCloseCharacterSelection" ) == 1 then
		PositionDraftResetCharacterScene( f114_arg0 ) --[[ @ 0]]
	else
		PositionDraftOnChangingCharacterComplete( f114_arg0 ) --[[ @ 0]]
	end
end

function CustomGameSettingsMenuClosed( f115_arg0, f115_arg1 )
	local f115_local0 = Engine[@"hash_3C3DF042E7492B66"]( Enum[@"LobbyModule"][@"hash_298EA1BB7164D103"] ) --[[ @ 0]]
	Engine[@"hash_787AE7E64BA5AD61"]( "OnGametypeSettingsChange", {
		lobbyModule = Enum[@"LobbyModule"][@"hash_298EA1BB7164D103"],
		lobbyType = f115_local0,
		fromUI = true
	} ) --[[ @ 0]]
	Engine[@"hash_2202BEB9A6859B8B"]( f115_local0, Enum[@"SessionDirty"][@"hash_29EC6BB6276BDCE6"] ) --[[ @ 0]]
end

function LobbyToggleNetwork( f116_arg0, f116_arg1, f116_arg2, f116_arg3 )
	for f116_local0 = 1 --[[ @ 0]], Engine[@"GetMaxControllerCount"]() - 1, 1 do
		LobbyRemoveLocalClientFromLobby( f116_arg0, f116_local0 ) --[[ @ 0]]
	end
	if f116_arg3 == Enum[@"LobbyNetworkMode"][@"hash_2E99F41098B71960"] then
		if IsOrbis() then
			if Engine[@"DisplayNpAvailabilityErrors"]( f116_arg2 ) then
				return 
			elseif not LuaUtils.PlayStationPlusUpsell( f116_arg2 ) then
				return 
			end
		end
		if CoD.LobbyUtility.ForceOffline() == true then
			CoD.OverlayUtility.CreateOverlay( f116_arg2, f116_arg0, "UpdateNeeded" ) --[[ @ 0]]
			return 
		elseif not Engine[@"IsDemonwareFetchingDone"]( f116_arg2 ) then
			Engine[@"LiveConnectEnableDemonwareConnect"]() --[[ @ 0]]
			CoD.OverlayUtility.CreateOverlay( f116_arg2, f116_arg0, "ConnectingToDemonware" ) --[[ @ 0]]
			return 
		end
	end
	local f116_local0 = LuaEnum.UI.DIRECTOR_LAN --[[ @ 0]]
	if f116_arg3 == Enum[@"LobbyNetworkMode"][@"hash_2E99F41098B71960"] then
		f116_local0 = LuaEnum.UI.DIRECTOR_ONLINE --[[ @ 0]]
	end
	Engine[@"hash_787AE7E64BA5AD61"]( "OnGoForward", {
		controller = f116_arg2,
		navToMenu = f116_local0
	} ) --[[ @ 0]]
	local f116_local2 = f116_arg0:getParent() --[[ @ 0]]
	f116_arg0:close() --[[ @ 0]]
end

function LaunchGamePrototype( f117_arg0, f117_arg1, f117_arg2 )
	local f117_local0 = Engine[@"GetModelValue"]( Engine[@"CreateModel"]( Engine[@"GetGlobalModel"](), "lobbyRoot.lobbyNav" ) ) --[[ @ 0]]
	local f117_local1 = {} --[[ @ 0]]
	local f117_local2 = function ( f118_arg0, f118_arg1 )
		local f118_local0 = LobbyData.GetLobbyMenuByName( f118_arg0 ) --[[ @ 0]]
		if f118_local0 then
			f117_local1[f118_local0[@"id"]] = f118_arg1 --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	f117_local2( LuaEnum.UI.DIRECTOR_ONLINE_CP_STORY, LobbyOnlineCustomLaunchGame_SelectionList ) --[[ @ 0]]
	f117_local2( LuaEnum.UI.DIRECTOR_ONLINE_CP_CUSTOM, LobbyOnlineCustomLaunchGame_SelectionList ) --[[ @ 0]]
	f117_local2( LuaEnum.UI.DIRECTOR_ONLINE_MP_CUSTOM, LobbyOnlineCustomLaunchGame_SelectionList ) --[[ @ 0]]
	f117_local2( LuaEnum.UI.DIRECTOR_ONLINE_MP_ARENA_CUSTOM, LobbyOnlineCustomLaunchGame_SelectionList ) --[[ @ 0]]
	f117_local2( LuaEnum.UI.DIRECTOR_ONLINE_MP_TRAINING, LobbyOnlineCustomLaunchGame_SelectionList ) --[[ @ 0]]
	f117_local2( LuaEnum.UI.DIRECTOR_ONLINE_ZM_CUSTOM, LobbyOnlineCustomLaunchGame_SelectionList ) --[[ @ 0]]
	f117_local2( LuaEnum.UI.DIRECTOR_ONLINE_WZ_CUSTOM, LobbyOnlineCustomLaunchGame_SelectionList ) --[[ @ 0]]
	f117_local2( LuaEnum.UI.DIRECTOR_LAN_CP, LobbyOnlineCustomLaunchGame_SelectionList ) --[[ @ 0]]
	f117_local2( LuaEnum.UI.DIRECTOR_LAN_MP, LobbyOnlineCustomLaunchGame_SelectionList ) --[[ @ 0]]
	f117_local2( LuaEnum.UI.DIRECTOR_LAN_MP_ARENA, LobbyOnlineCustomLaunchGame_SelectionList ) --[[ @ 0]]
	f117_local2( LuaEnum.UI.DIRECTOR_LAN_MP_TRAINING, LobbyOnlineCustomLaunchGame_SelectionList ) --[[ @ 0]]
	f117_local2( LuaEnum.UI.DIRECTOR_LAN_ZM, LobbyOnlineCustomLaunchGame_SelectionList ) --[[ @ 0]]
	f117_local2( LuaEnum.UI.DIRECTOR_LAN_WZ, LobbyOnlineCustomLaunchGame_SelectionList ) --[[ @ 0]]
	if f117_local1[f117_local0] then
		f117_local1[f117_local0]( f117_arg0, f117_arg1, f117_arg2 ) --[[ @ 0]]
	end
end

function LobbyNoAction( f119_arg0, f119_arg1, f119_arg2, f119_arg3, f119_arg4 )
	
end

function OpenMPFirstTimeFlow( f120_arg0, f120_arg1, f120_arg2, f120_arg3, f120_arg4 )
	Engine[@"SetModelValue"]( Engine[@"CreateModel"]( Engine[@"GetGlobalModel"](), "heroSelectionTutorial" ), true ) --[[ @ 0]]
	if f120_arg3 == "goBackFirst" then
		f120_arg4 = GoBack( f120_arg0, f120_arg2 ) --[[ @ 0]]
	end
	f120_arg4.openOverlayAfterSpinner = "WelcomeMenu" --[[ @ 0]]
	f120_arg4.openOverlayAfterSpinnerController = f120_arg2 --[[ @ 0]]
	NavigateToLobby_FirstTimeFlowMP( f120_arg0, f120_arg1, f120_arg2, f120_arg4 ) --[[ @ 0]]
end

function FirstTimeSetup_SetNone( f121_arg0 )
	Engine[@"SetModelValue"]( Engine[@"CreateModel"]( Engine[@"GetModelForController"]( f121_arg0 ), "firstTimeFlowState" ), CoD.PlayerRoleUtility.FirstTimeFlowState.None ) --[[ @ 0]]
end

function ShowReportPlayerDialogTargetingKiller( f122_arg0, f122_arg1 )
	local f122_local0 = Engine[@"GetModelForController"]( f122_arg1 ) --[[ @ 0]]
	f122_local0 = f122_local0.Attacker --[[ @ 0]]
	if f122_local0 then
		local f122_local1 = f122_local0.xuid --[[ @ 0]]
		if f122_local1 then
			f122_local1 = f122_local0.xuid:get() --[[ @ 0]]
		end
		if f122_local1 then
			local f122_local2 = Engine[@"GetPlayerInfo"]( f122_arg1, f122_local1 ) --[[ @ 0]]
			CoD.OverlayUtility.CreateOverlay( f122_arg1, f122_arg0, "ReportPlayer", f122_arg1, f122_arg0, {
				controller = f122_arg1,
				xuid = f122_local1,
				gamertag = f122_local2.info.gamertag,
				clantag = f122_local2.info.clantag,
				emblemBacking = f122_local2.info.emblemBacking
			} ) --[[ @ 0]]
		end
	end
end

function ShowReportPlayerDialog( f123_arg0, f123_arg1, f123_arg2, f123_arg3 )
	local f123_local0 = f123_arg3.controller --[[ @ 0]]
	local f123_local1 = f123_arg3.xuid --[[ @ 0]]
	local f123_local2 = Engine[@"GetPlayerInfo"]( f123_local0, f123_local1 ) --[[ @ 0]]
	local f123_local3 = f123_local2.info.gamertag --[[ @ 0]]
	if not f123_local3 or f123_local3 == "" then
		f123_local3 = f123_arg3.gamertag --[[ @ 0]]
	end
	CoD.OverlayUtility.CreateOverlay( f123_local0, f123_arg0, "ReportPlayer", f123_local0, f123_arg1, {
		controller = f123_local0,
		xuid = f123_local1,
		gamertag = f123_local3,
		clantag = f123_local2.info.clantag,
		emblemBacking = f123_local2.info.emblemBacking
	} ) --[[ @ 0]]
end

function CheckIfFeatureIsBanned( f124_arg0, f124_arg1 )
	if Engine[@"hash_5E39F1F30B306065"]() then
		return false
	else
		local f124_local0, f124_local1 = Engine[@"IsFeatureBanned"]( f124_arg0, f124_arg1 ) --[[ @ 0]]
		if f124_local0 then
			return true
		else
			return false
		end
	end
end

function GetFeatureBanInfo( f125_arg0, f125_arg1 )
	if Engine[@"hash_5E39F1F30B306065"]() then
		return ""
	end
	local f125_local0 = Engine[@"IsFeaturePermaBanned"]( f125_arg0, f125_arg1 ) --[[ @ 0]]
	local f125_local1 = LuaUtils.GetBanMessageForFeature( f125_arg0, f125_arg1, f125_local0 ) --[[ @ 0]]
	local f125_local2 = "" --[[ @ 0]]
	if not f125_local0 then
		local f125_local3 = CoD.SafeGetModelValue( Engine[@"GetModel"]( Engine[@"GetModel"]( Engine[@"GetModelForController"]( f125_arg0 ), "lobbyRoot.anticheat" ), "featureBans" ), "feature_" .. f125_arg1 .. "_end" ) --[[ @ 0]]
		if f125_local3 then
			f125_local2 = Engine[@"GetTimeRemainingString"]( f125_local3 - Engine[@"SystemTimeUInt64"]() ) --[[ @ 0]]
		end
	end
	return string.format( "%s\n\n%s", f125_local1, f125_local2 )
end

function PopAnticheatMessageAndGoForward_MP( f126_arg0, f126_arg1, f126_arg2, f126_arg3 )
	local f126_local0 = GoBack( f126_arg0, f126_arg2 ) --[[ @ 0]]
	Engine[@"PopAnticheatMessage"]( f126_arg2, LuaEnum.ANTICHEAT_MESSAGE_GROUPS.MP ) --[[ @ 0]]
	NavigateCheckForFirstTime( f126_local0, f126_arg1, f126_arg2, {
		targetName = "MPLobbyMain",
		mode = Enum[@"eModes"][@"hash_383EBA96F36BC4E5"],
		firstTimeFlowAction = OpenMPFirstTimeFlow
	}, f126_local0 ) --[[ @ 0]]
end

function PopAnticheatMessageAndGoForward_ZM( f127_arg0, f127_arg1, f127_arg2, f127_arg3 )
	local f127_local0 = GoBack( f127_arg0, f127_arg2 ) --[[ @ 0]]
	Engine[@"PopAnticheatMessage"]( f127_arg2, LuaEnum.ANTICHEAT_MESSAGE_GROUPS.ZM ) --[[ @ 0]]
	NavigateToLobby_SelectionList( f127_local0, f127_arg1, f127_arg2, "ZMLobbyOnline", f127_local0 ) --[[ @ 0]]
end

function PopAnticheatMessageAndGoForward_Paintshop( f128_arg0, f128_arg1, f128_arg2, f128_arg3 )
	local f128_local0 = GoBack( f128_arg0, f128_arg2 ) --[[ @ 0]]
	Engine[@"PopAnticheatMessage"]( f128_arg2, LuaEnum.ANTICHEAT_MESSAGE_GROUPS.UGC ) --[[ @ 0]]
	CoD.CraftUtility.OpenPaintjobWeaponSelection( f128_local0, f128_arg1, f128_arg2, "", f128_local0 ) --[[ @ 0]]
end

function PopAnticheatMessageAndGoForward_EmblemEditor( f129_arg0, f129_arg1, f129_arg2, f129_arg3 )
	local f129_local0 = GoBack( f129_arg0, f129_arg2 ) --[[ @ 0]]
	Engine[@"PopAnticheatMessage"]( f129_arg2, LuaEnum.ANTICHEAT_MESSAGE_GROUPS.UGC ) --[[ @ 0]]
	OpenEmblemEditor( f129_arg1, f129_local0, f129_arg2, nil ) --[[ @ 0]]
end

function PopAnticheatMessageAndGoForward_PaintjobEditor( f130_arg0, f130_arg1, f130_arg2, f130_arg3 )
	local f130_local0 = GoBack( f130_arg0, f130_arg2 ) --[[ @ 0]]
	Engine[@"PopAnticheatMessage"]( f130_arg2, LuaEnum.ANTICHEAT_MESSAGE_GROUPS.UGC ) --[[ @ 0]]
	OpenPaintjobEditor( f130_arg1, f130_local0, f130_arg2, nil ) --[[ @ 0]]
end

function PopAnticheatMessageAndGoForward_Loot( f131_arg0, f131_arg1, f131_arg2, f131_arg3 )
	local f131_local0 = GoBack( f131_arg0, f131_arg2 ) --[[ @ 0]]
	Engine[@"PopAnticheatMessage"]( f131_arg2, LuaEnum.ANTICHEAT_MESSAGE_GROUPS.LOOT ) --[[ @ 0]]
	OpenBlackMarket( f131_local0, nil, f131_arg2 ) --[[ @ 0]]
end

function PopAnticheatMessageAndGoForward_Arena( f132_arg0, f132_arg1, f132_arg2, f132_arg3 )
	local f132_local0 = GoBack( f132_arg0, f132_arg2 ) --[[ @ 0]]
	Engine[@"PopAnticheatMessage"]( f132_arg2, LuaEnum.ANTICHEAT_MESSAGE_GROUPS.ARENA ) --[[ @ 0]]
	NavigateToLobby_SelectionList( f132_local0, f132_arg1, f132_arg2, "MPLobbyOnlineArena", f132_local0 ) --[[ @ 0]]
end

function GetAnticheatMessageForwardFunction( f133_arg0, f133_arg1, f133_arg2 )
	if f133_arg0 == LuaEnum.ANTICHEAT_MESSAGE_GROUPS.MP then
		return PopAnticheatMessageAndGoForward_MP
	elseif f133_arg0 == LuaEnum.ANTICHEAT_MESSAGE_GROUPS.ZM then
		return PopAnticheatMessageAndGoForward_ZM
	elseif f133_arg0 == LuaEnum.ANTICHEAT_MESSAGE_GROUPS.UGC then
		if f133_arg1 == "EmblemEditor" then
			return PopAnticheatMessageAndGoForward_EmblemEditor
		elseif f133_arg1 == "PaintjobEditor" then
			return PopAnticheatMessageAndGoForward_PaintjobEditor
		elseif f133_arg1 == "Paintshop" then
			return PopAnticheatMessageAndGoForward_Paintshop
		end
	elseif f133_arg0 == LuaEnum.ANTICHEAT_MESSAGE_GROUPS.LOOT then
		return PopAnticheatMessageAndGoForward_Loot
	elseif f133_arg0 == LuaEnum.ANTICHEAT_MESSAGE_GROUPS.ARENA then
		return PopAnticheatMessageAndGoForward_Arena
	end
end

function DisplayAnticheatMessage( f134_arg0, f134_arg1, f134_arg2, f134_arg3, f134_arg4 )
	if Engine[@"hash_5E39F1F30B306065"]() then
		return 
	else
		local f134_local0 = GetAnticheatMessageForwardFunction( f134_arg2, f134_arg3, f134_arg4 ) --[[ @ 0]]
		local f134_local1 = Engine[@"GetModel"]( Engine[@"GetModel"]( Engine[@"GetModelForController"]( f134_arg1 ), "lobbyRoot.anticheat" ), "message" ) --[[ @ 0]]
		CoD.OverlayUtility.CreateOverlay( f134_arg1, f134_arg0, "AnticheatMessage", Engine[@"GetModelValue"]( Engine[@"GetModel"]( f134_local1, "string" ) ), Engine[@"GetModelValue"]( Engine[@"GetModel"]( f134_local1, "url" ) ), f134_local0 ) --[[ @ 0]]
	end
end

function OpenAnticheatPolicyInBrowser( f135_arg0, f135_arg1, f135_arg2, f135_arg3 )
	if Engine[@"hash_5E39F1F30B306065"]() then
		return 
	else
		Engine[@"OpenAnticheatPolicyInBrowser"]( f135_arg2, Engine[@"GetModelValue"]( Engine[@"GetModel"]( Engine[@"GetModel"]( Engine[@"GetModel"]( Engine[@"GetModelForController"]( f135_arg2 ), "lobbyRoot.anticheat" ), "message" ), "url" ) ) ) --[[ @ 0]]
	end
end

function NavigateCheckForFirstTime( f136_arg0, f136_arg1, f136_arg2, f136_arg3, f136_arg4 )
	if IsFirstTimeSetup( f136_arg2, f136_arg3.mode ) then
		f136_arg3.firstTimeFlowAction( f136_arg0, f136_arg1, f136_arg2, f136_arg3.targetName, f136_arg4 ) --[[ @ 0]]
	else
		NavigateToLobby_SelectionList( f136_arg0, f136_arg1, f136_arg2, f136_arg3.targetName, f136_arg4 ) --[[ @ 0]]
	end
end

function SetCharacterModeToSessionMode( f137_arg0, f137_arg1, f137_arg2 )
	CoD.PlayerRoleUtility.customizationMode = f137_arg2 --[[ @ 0]]
end

function SetCharacterModeToCurrentSessionMode( f138_arg0, f138_arg1, f138_arg2 )
	CoD.PlayerRoleUtility.customizationMode = Engine[@"CurrentSessionMode"]() --[[ @ 0]]
end

function SetFirstTimeSetupComplete_MP( f139_arg0, f139_arg1, f139_arg2, f139_arg3, f139_arg4 )
	Engine[@"SetFirstTimeComplete"]( f139_arg2, Enum[@"eModes"][@"hash_383EBA96F36BC4E5"], true ) --[[ @ 0]]
	FirstTimeSetup_SetNone( f139_arg2 ) --[[ @ 0]]
end

function OpenMegaChewFactorymenu( f140_arg0, f140_arg1, f140_arg2, f140_arg3, f140_arg4 )
	CoD.LobbyUtility.OpenMegaChewFactory( f140_arg4, f140_arg2 ) --[[ @ 0]]
end

function OpenBotSettings( f141_arg0, f141_arg1 )
	CoD.LobbyUtility.OpenBotSettings( f141_arg0, f141_arg1 ) --[[ @ 0]]
end

function AddLobbyBots( f142_arg0, f142_arg1 )
	CoD.LobbyUtility.AddLobbyBot( f142_arg0, f142_arg1 ) --[[ @ 0]]
end

function RemoveLobbyBots( f143_arg0, f143_arg1, f143_arg2, f143_arg3, f143_arg4 )
	CoD.LobbyUtility.RemoveLobbyBot( f143_arg4, f143_arg2 ) --[[ @ 0]]
end

function SetFillParty( f144_arg0, f144_arg1, f144_arg2, f144_arg3 )
	Engine[@"hash_5F6CE659F166033E"]( f144_arg3 ) --[[ @ 0]]
end

function ResetClientLoadouts( f145_arg0 )
	if Engine[@"hash_10EA2BE00F49480D"]( Enum[@"LobbyType"][@"hash_20A1647599284110"] ) then
		Engine[@"hash_787AE7E64BA5AD61"]( "ResetClientLoadouts", {} ) --[[ @ 0]]
	end
end

function OpenStore( f146_arg0, f146_arg1, f146_arg2, f146_arg3, f146_arg4 )
	if CoD.isPS4 and Engine[@"DisplayNpAvailabilityErrors"]( f146_arg2 ) then
		return 
	elseif not CoD.StoreUtility.IsStoreEnabled( f146_arg2 ) then
		return 
	else
		local f146_local0 = LobbyData.GetCurrentMenuTarget() --[[ @ 0]]
		CoD.MetricsUtility.StoreEntry( f146_arg4, f146_arg2, f146_arg3, f146_local0 ) --[[ @ 0]]
		local f146_local1 = DataSources.StoreRoot.getModel( f146_arg2 ) --[[ @ 0]]
		f146_local1.ready:set( false ) --[[ @ 0]]
		f146_local1.actionSource:set( f146_arg3 ) --[[ @ 0]]
		f146_local1.storeSource:set( f146_local0[@"name"] ) --[[ @ 0]]
		OpenOverlay( f146_arg4, "Store", f146_arg2 ) --[[ @ 0]]
	end
end

function OpenCredits( f147_arg0, f147_arg1, f147_arg2, f147_arg3, f147_arg4 )
	OpenOverlay( f147_arg4, "Credit_Fullscreen", f147_arg2 ) --[[ @ 0]]
end

function OpenQuarterMaster( f148_arg0, f148_arg1, f148_arg2, f148_arg3, f148_arg4 )
	if not Engine[@"IsUserGuest"]( f148_arg2 ) then
		OpenOverlay( f148_arg4, "QuarterMasterMenu", f148_arg2, {
			_tab = f148_arg3
		} ) --[[ @ 0]]
		CoD.SurveyUtility.OpenSurvey( f148_arg4, f148_arg2, Enum[@"hash_2C20EF6D686D1E5F"][@"hash_251C2AA5FA0D8715"] ) --[[ @ 0]]
	end
end

function OpenSteamStore( f149_arg0, f149_arg1, f149_arg2, f149_arg3, f149_arg4 )
	if not DisableSteamStore() then
		Engine[@"SteamStore"]( f149_arg2 ) --[[ @ 0]]
	end
end

function OpenScorestreaks( f150_arg0, f150_arg1, f150_arg2, f150_arg3, f150_arg4 )
	CoD.LobbyUtility.OpenScorestreaks( f150_arg4, f150_arg2 ) --[[ @ 0]]
end

function PromoteToLeader( f151_arg0, f151_arg1, f151_arg2, f151_arg3, f151_arg4, f151_arg5 )
	Engine[@"hash_73CDCDFD486E97B7"]( f151_arg3.controller, Enum[@"LobbyType"][@"hash_20A1647599284110"], f151_arg3.xuid ) --[[ @ 0]]
	if not f151_arg5 then
		f151_arg4:goBack( f151_arg2 ) --[[ @ 0]]
	end
end

function DisconnectClient( f152_arg0, f152_arg1, f152_arg2, f152_arg3, f152_arg4, f152_arg5 )
	if Engine[@"hash_65CB8E6B7FBBFFD5"]( f152_arg3.xuid ) then
		Engine[@"hash_3D79B00C4CCE228B"]( Enum[@"LobbyType"][@"hash_20A1647599284110"], f152_arg3.xuid ) --[[ @ 0]]
	else
		Engine[@"hash_40E75D3BFE7A2FD4"]( f152_arg3.controller, Enum[@"LobbyType"][@"hash_20A1647599284110"], f152_arg3.xuid, Enum[@"LobbyDisconnectClient"][@"hash_475E935EEE527F8B"] ) --[[ @ 0]]
		if CoD.isPC then
			CoD.PCUtility.ShowPlayerKickGameEvent( f152_arg3.xuid ) --[[ @ 0]]
		end
	end
	if not f152_arg5 then
		f152_arg4:goBack( f152_arg2 ) --[[ @ 0]]
	end
end

function MutePlayer( f153_arg0, f153_arg1, f153_arg2, f153_arg3, f153_arg4, f153_arg5 )
	if Engine[@"hash_686E64DD1C270046"]( Enum[@"LobbyModule"][@"hash_40C46B73E8E18BA2"], Enum[@"LobbyType"][@"hash_20A1647599284110"], f153_arg3.xuid ) then
		Engine[@"hash_4E129224E5340749"]( f153_arg3.controller, Enum[@"LobbyType"][@"hash_20A1647599284110"], f153_arg3.xuid ) --[[ @ 0]]
	end
	if Engine[@"hash_686E64DD1C270046"]( Enum[@"LobbyModule"][@"hash_40C46B73E8E18BA2"], Enum[@"LobbyType"][@"hash_692676CF5B6FCD43"], f153_arg3.xuid ) then
		Engine[@"hash_4E129224E5340749"]( f153_arg3.controller, Enum[@"LobbyType"][@"hash_692676CF5B6FCD43"], f153_arg3.xuid ) --[[ @ 0]]
	end
	if not f153_arg5 then
		f153_arg4:goBack( f153_arg2 ) --[[ @ 0]]
	end
end

function UnMutePlayer( f154_arg0, f154_arg1, f154_arg2, f154_arg3, f154_arg4, f154_arg5 )
	if Engine[@"hash_686E64DD1C270046"]( Enum[@"LobbyModule"][@"hash_40C46B73E8E18BA2"], Enum[@"LobbyType"][@"hash_20A1647599284110"], f154_arg3.xuid ) then
		Engine[@"hash_3C2DA90B55A135AA"]( f154_arg3.controller, Enum[@"LobbyType"][@"hash_20A1647599284110"], f154_arg3.xuid ) --[[ @ 0]]
	end
	if Engine[@"hash_686E64DD1C270046"]( Enum[@"LobbyModule"][@"hash_40C46B73E8E18BA2"], Enum[@"LobbyType"][@"hash_692676CF5B6FCD43"], f154_arg3.xuid ) then
		Engine[@"hash_3C2DA90B55A135AA"]( f154_arg3.controller, Enum[@"LobbyType"][@"hash_692676CF5B6FCD43"], f154_arg3.xuid ) --[[ @ 0]]
	end
	if not f154_arg5 then
		f154_arg4:goBack( f154_arg2 ) --[[ @ 0]]
	end
end

function ShowSocialPartyWidget( f155_arg0 )
	if CoD.perController[f155_arg0].Social_Party then
		CoD.perController[f155_arg0].Social_Party:setState( f155_arg0, "DefaultState" ) --[[ @ 0]]
	end
end

function LobbyOnlineCustomLaunchGame_SelectionList( f156_arg0, f156_arg1, f156_arg2 )
	local f156_local0 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f156_local0 = f156_local0.MapVote.timerActive --[[ @ 0]]
	if f156_local0 ~= nil then
		f156_local0:set( 1 ) --[[ @ 0]]
	end
	Engine[@"SetDvar"]( "skipto", "" ) --[[ @ 0]]
	Engine[@"SetDvar"]( "sv_saveGameSkipto", "" ) --[[ @ 0]]
	CoD.LobbyUtility.LaunchGame( f156_arg0, f156_arg2, Enum[@"LobbyType"][@"hash_692676CF5B6FCD43"] ) --[[ @ 0]]
end

function LobbyOnlineStartMatchMaking( f157_arg0, f157_arg1, f157_arg2, f157_arg3 )
	CoD.LobbyUtility.StartSearch( f157_arg0, f157_arg1, f157_arg3 ) --[[ @ 0]]
end

function OpenTheaterSelectFilm( f158_arg0, f158_arg1 )
	CoD.FileshareUtility.SetFileshareMode( f158_arg1, Enum[@"FileshareMode"][@"hash_39F4C8230B0A89F2"] ) --[[ @ 0]]
	CoD.FileshareUtility.SetCurrentUser( Engine[@"GetXUID64"]( f158_arg1 ) ) --[[ @ 0]]
	CoD.FileshareUtility.SetDirty() --[[ @ 0]]
	CoD.LobbyUtility.OpenTheaterSelectFilm( f158_arg0, f158_arg1 ) --[[ @ 0]]
end

function LobbyTheaterStartFilm( f159_arg0, f159_arg1 )
	LobbyTheaterLaunchDemo( f159_arg0, f159_arg1 ) --[[ @ 0]]
end

function GoBackAndDisplayModalDialog( f160_arg0, f160_arg1, f160_arg2 )
	f160_arg2( GoBack( f160_arg0, f160_arg1 ), f160_arg1 ) --[[ @ 0]]
end

function DisplayPlayGoJoinError( f161_arg0, f161_arg1 )
	LuaUtils.UI_ShowWarningMessageDialog( f161_arg1, Engine[@"hash_4F9F1239CFD921FE"]( @"hash_798057596B3D3C6B" ) ) --[[ @ 0]]
	GoBack( f161_arg0, f161_arg1 ) --[[ @ 0]]
end

function LobbyQuickJoin( f162_arg0, f162_arg1, f162_arg2, f162_arg3, f162_arg4, f162_arg5 )
	if CoD.isPC then
		LobbyQuickJoinPC( f162_arg1, f162_arg2, f162_arg3, f162_arg4 ) --[[ @ 0]]
		return 
	elseif LobbyData.GetLobbyNav() == LobbyData.GetLobbyMenuIDByName( LuaEnum.UI.DIRECTOR_ONLINE ) and IsFirstTimeSetup( f162_arg3, Enum[@"eModes"][@"hash_383EBA96F36BC4E5"] ) then
		local f162_local0 = Engine[@"GetModel"]( f162_arg2:getModel(), "activity" ) --[[ @ 0]]
		if f162_local0 and GetSessionModeFromPresenceActivity( Engine[@"GetModelValue"]( f162_local0 ) ) == Enum[@"eModes"][@"hash_383EBA96F36BC4E5"] then
			if booleanArg == true then
				GoBackAndOpenOverlayOnParent( f162_arg1, "MPIntroRequired", f162_arg3 ) --[[ @ 0]]
			else
				OpenOverlay( f162_arg1, "MPIntroRequired", f162_arg3 ) --[[ @ 0]]
			end
			return 
		end
	end
	local f162_local1 = false --[[ @ 0]]
	local f162_local0 = f162_arg2:getModel( f162_arg3, "joinable" ) --[[ @ 0]]
	if not f162_local0 then
		f162_local0 = f162_arg2:getModel( f162_arg3, "isJoinable" ) --[[ @ 0]]
	end
	if f162_local0 ~= nil then
		local f162_local2 = Engine[@"GetModelValue"]( f162_local0 ) --[[ @ 0]]
		if f162_local2 ~= nil and (f162_local2 == Enum[@"LobbyJoinable"][@"hash_61FD2A499E7CD0E4"] or f162_local2 == Enum[@"LobbyJoinable"][@"hash_30BFB4278A2E811D"]) then
			f162_local1 = true --[[ @ 0]]
		end
	end
	if Dvar.twitchcon:exists() then
		f162_local1 = true --[[ @ 0]]
	end
	if not f162_local1 then
		return 
	end
	f162_local0 = f162_arg2:getModel( f162_arg3, "xuid" ) --[[ @ 0]]
	if f162_local0 == nil then
		return 
	end
	local f162_local2 = Engine[@"GetModelValue"]( f162_local0 ) --[[ @ 0]]
	if f162_local2 == nil then
		return 
	end
	local f162_local3 = nil --[[ @ 0]]
	if f162_arg4 ~= nil and f162_arg4 >= 0 and f162_arg4 < Enum[@"JoinType"][@"hash_1E22E4B4DDD5B19E"] then
		f162_local3 = f162_arg4 --[[ @ 0]]
	else
		f162_local3 = Enum[@"JoinType"][@"hash_304F9C7D45FC8CB0"] --[[ @ 0]]
	end
	local f162_local4 = {
		controller = f162_arg3,
		xuid = f162_local2,
		joinType = f162_local3,
		platform = false
	} --[[ @ 0]]
	if f162_arg5 ~= nil and f162_arg5 == true then
		GoBack( f162_arg1, f162_arg3 ) --[[ @ 0]]
	end
	if Engine[@"IsInGame"]() then
		if not Engine[@"hash_686E64DD1C270046"]( Enum[@"LobbyModule"][@"hash_40C46B73E8E18BA2"], Enum[@"LobbyType"][@"hash_692676CF5B6FCD43"], f162_local4.xuid ) then
			f162_local4.migrating = not CoDShared.QuitGame( f162_arg3 ) --[[ @ 0]]
			Engine[@"hash_787AE7E64BA5AD61"]( "OnInGameJoin", f162_local4 ) --[[ @ 0]]
		end
	else
		Engine[@"hash_787AE7E64BA5AD61"]( "OnJoin", f162_local4 ) --[[ @ 0]]
	end
end

function LobbyQuickJoinPC( f163_arg0, f163_arg1, f163_arg2, f163_arg3 )
	local f163_local0 = f163_arg1:getModel( f163_arg2, "joinable" ) --[[ @ 0]]
	if not f163_local0 then
		f163_local0 = f163_arg1:getModel( f163_arg2, "isJoinable" ) --[[ @ 0]]
	end
	local f163_local1 = f163_local0 and Engine[@"GetModelValue"]( f163_local0 ) --[[ @ 0]]
	local f163_local2 = f163_arg1:getModel( f163_arg2, "xuid" ) --[[ @ 0]]
	local f163_local3 = f163_local2 and Engine[@"GetModelValue"]( f163_local2 ) --[[ @ 0]]
	local f163_local4 = nil --[[ @ 0]]
	if f163_arg3 and f163_arg3 >= 0 and f163_arg3 < Enum[@"JoinType"][@"hash_1E22E4B4DDD5B19E"] then
		f163_local4 = f163_arg3 --[[ @ 0]]
	else
		f163_local4 = Enum[@"JoinType"][@"hash_304F9C7D45FC8CB0"] --[[ @ 0]]
	end
	local f163_local5 = LobbyQuickJoinFinal( f163_arg0, f163_arg2, f163_local4, f163_local3, f163_local1 ) --[[ @ 0]]
	if f163_local5 and CoD.isPC then
		CoD.PCNotificationsUtility.HideNotificationWidget( f163_arg2 ) --[[ @ 0]]
		CoD.PCNotificationsUtility.CancelAllPartyInvites( f163_arg2 ) --[[ @ 0]]
	end
	return f163_local5
end

function LobbyQuickJoinWithXuid( f164_arg0, f164_arg1, f164_arg2 )
	local f164_local0 = Engine[@"GetPlayerInfo"]( f164_arg1, f164_arg2 ) --[[ @ 0]]
	return LobbyQuickJoinFinal( f164_arg0, f164_arg1, Enum[@"JoinType"][@"hash_40D4D58772DE8652"], f164_arg2, f164_local0.info.joinable )
end

function LobbyQuickJoinFinal( f165_arg0, f165_arg1, f165_arg2, f165_arg3, f165_arg4 )
	if not f165_arg0 or not f165_arg0:getMenu() then
		return false
	elseif CoD.isPC and f165_arg4 == Enum[@"LobbyJoinable"][@"hash_16252239318EF8A5"] and not Engine[@"hash_D3DDFE2224597C2"]( f165_arg1, f165_arg3 ) then
		return false
	elseif f165_arg4 ~= Enum[@"LobbyJoinable"][@"hash_61FD2A499E7CD0E4"] and f165_arg4 ~= Enum[@"LobbyJoinable"][@"hash_30BFB4278A2E811D"] and f165_arg4 ~= Enum[@"LobbyJoinable"][@"hash_16252239318EF8A5"] then
		return false
	elseif InFrontend() then
		local f165_local0 = f165_arg0:getMenu() --[[ @ 0]]
		SendClientScriptMenuChangeNotify( f165_arg1, f165_local0, false ) --[[ @ 0]]
		GoBackToMenu( f165_local0, f165_arg1, "Director" ) --[[ @ 0]]
	end
	local f165_local0 = {
		controller = f165_arg1,
		xuid = f165_arg3,
		joinType = f165_arg2,
		platform = false
	} --[[ @ 0]]
	if Engine[@"IsInGame"]() then
		if not Engine[@"hash_686E64DD1C270046"]( Enum[@"LobbyModule"][@"hash_40C46B73E8E18BA2"], Enum[@"LobbyType"][@"hash_692676CF5B6FCD43"], f165_arg3 ) then
			f165_local0.migrating = not CoDShared.QuitGame( f165_arg1 ) --[[ @ 0]]
			Engine[@"hash_787AE7E64BA5AD61"]( "OnInGameJoin", f165_local0 ) --[[ @ 0]]
		end
	else
		Engine[@"hash_787AE7E64BA5AD61"]( "OnJoin", f165_local0 ) --[[ @ 0]]
	end
	return true
end

function LobbyInviteFriend( f166_arg0, f166_arg1, f166_arg2, f166_arg3 )
	local f166_local0, f166_local1 = nil --[[ @ 0]]
	if f166_arg3 then
		f166_local0 = f166_arg3.xuid --[[ @ 0]]
		f166_local1 = f166_arg3.gamertag --[[ @ 0]]
	else
		f166_local0 = Engine[@"GetModelValue"]( f166_arg1:getModel( f166_arg2, "xuid" ) ) --[[ @ 0]]
		f166_local1 = Engine[@"GetModelValue"]( f166_arg1:getModel( f166_arg2, "gamertag" ) ) --[[ @ 0]]
	end
	if f166_local0 ~= nil then
		if CoD.isPC then
			CoD.invitePlayer( f166_arg2, f166_local0 ) --[[ @ 0]]
		else
			CoD.invitePlayerByGamertag( f166_arg2, f166_local0, f166_local1 ) --[[ @ 0]]
		end
	end
end

function LobbyInviteFriendGoBack( f167_arg0, f167_arg1, f167_arg2, f167_arg3, f167_arg4, f167_arg5 )
	LobbyInviteFriend( f167_arg0, f167_arg1, f167_arg2, f167_arg3 ) --[[ @ 0]]
	if not f167_arg5 then
		GoBack( f167_arg0, f167_arg2 ) --[[ @ 0]]
	end
end

function LobbyInviteFriendByXuid( f168_arg0, f168_arg1, f168_arg2 )
	if CoD.isPC then
		LobbyInviteFriend( f168_arg0, f168_arg1, f168_arg2, {
			xuid = Engine[@"GetModelValue"]( f168_arg1:getModel( f168_arg2, "xuid" ) )
		} ) --[[ @ 0]]
	end
end

function CancelPartyInvite( f169_arg0, f169_arg1, f169_arg2 )
	Engine[@"hash_2406FC054276FCE6"]( f169_arg2, Engine[@"GetModelValue"]( f169_arg1:getModel( f169_arg2, "xuid" ) ) ) --[[ @ 0]]
end

function LobbyRemoveLocalClientFromLobby( f170_arg0, f170_arg1 )
	if not Engine[@"IsControllerBeingUsed"]( f170_arg1 ) or f170_arg1 == Engine[@"GetPrimaryController"]() then
		return 
	else
		CoD.LobbyUtility.RemoveLocalPlayerFromTheLobby( f170_arg0, f170_arg1 ) --[[ @ 0]]
		CoD.perController[Engine[@"GetPrimaryController"]()].localClientChanged = true --[[ @ 0]]
		ForceLobbyButtonUpdate( f170_arg1 ) --[[ @ 0]]
	end
end

function CheckModeAvailableAndBackOut_ZM( f171_arg0, f171_arg1, f171_arg2 )
	local f171_local0 = f171_arg0 --[[ @ 0]]
	local f171_local1 = f171_arg0.subscribeToModel --[[ @ 0]]
	local f171_local2 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f171_local1( f171_local0, f171_local2["lobbyRoot.lobbyNav"], function ( f172_arg0 )
		if IsZombies() and (CoD.PCKoreaUtility.ShowKorea15Plus() or Engine[@"hash_45405A6484A88367"]() or Engine[@"hash_5CB675CA7856DA25"]()) then
			GoBackAndLeaveParty( f171_arg1, f171_arg2, LuaEnum.LEAVE_WITH_PARTY.WITHOUT ) --[[ @ 0]]
		end
	end, false ) --[[ @ 0]]
end

function GoBackAndLeaveParty( f173_arg0, f173_arg1, f173_arg2 )
	local f173_local0 = GoBackToMenu( f173_arg0, f173_arg1, "Director" ) --[[ @ 0]]
	DisableAllMenuInput( f173_local0, nil ) --[[ @ 0]]
	if f173_local0.ClientList ~= nil then
		f173_local0.ClientList:processEvent( {
			name = "lose_focus",
			controller = f173_arg1
		} ) --[[ @ 0]]
	end
	local f173_local1 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f173_local1 = f173_local1.lobbyRoot.lobbyNav:get() --[[ @ 0]]
	if f173_local1 == LobbyData.GetLobbyMenuIDByName( LuaEnum.UI.DIRECTOR_ONLINE ) then
		CoD.LobbyUtility.DisbandParty( f173_arg0, f173_arg1, f173_local1 ) --[[ @ 0]]
	else
		Engine[@"hash_787AE7E64BA5AD61"]( "OnGoBack", {
			controller = f173_arg1,
			withParty = f173_arg2
		} ) --[[ @ 0]]
	end
end

function SetState( f174_arg0, f174_arg1, f174_arg2 )
	f174_arg0:setState( f174_arg2, f174_arg1 ) --[[ @ 0]]
end

function PulseElementToStateAndBack( f175_arg0, f175_arg1, f175_arg2 )
	local f175_local0 = f175_arg0.currentState --[[ @ 0]]
	f175_arg0:setState( f175_arg2, f175_arg1 ) --[[ @ 0]]
	f175_arg0:setState( f175_arg2, f175_local0 ) --[[ @ 0]]
end

function SetMenuState( f176_arg0, f176_arg1, f176_arg2 )
	f176_arg0:setState( f176_arg2, f176_arg1 ) --[[ @ 0]]
end

function SetElementState( f177_arg0, f177_arg1, f177_arg2, f177_arg3 )
	f177_arg1:setState( f177_arg2, f177_arg3 ) --[[ @ 0]]
end

function SetElementStateByElementName( f178_arg0, f178_arg1, f178_arg2, f178_arg3 )
	if f178_arg0[f178_arg1] then
		f178_arg0[f178_arg1]:setState( f178_arg2, f178_arg3 ) --[[ @ 0]]
	end
end

function SetStateByElementModel( f179_arg0, f179_arg1, f179_arg2, f179_arg3 )
	local f179_local0 = CoD.SafeGetModelValue( f179_arg1:getModel(), f179_arg3 ) --[[ @ 0]]
	if f179_local0 then
		f179_arg0:setState( f179_arg2, f179_local0 ) --[[ @ 0]]
	end
end

function LockInput( f180_arg0, f180_arg1, f180_arg2 )
	if f180_arg2 ~= nil then
		Engine[@"LockInput"]( f180_arg1, f180_arg2 ) --[[ @ 0]]
	end
end

function LockInputHUD( f181_arg0, f181_arg1, f181_arg2 )
	if f181_arg2 ~= nil then
		Engine[@"LockInput"]( f181_arg1, f181_arg2, Enum[@"hash_39061B48916076D5"][@"hash_59FF6C7FED5C383"] ) --[[ @ 0]]
	end
end

function EnableMouseLockInputBinding( f182_arg0, f182_arg1, f182_arg2, f182_arg3 )
	if CoD.isPC then
		if IsMouseOrKeyboard( f182_arg1 ) and f182_arg2 then
			Engine[@"hash_16C9FBEF14D7451D"]( true ) --[[ @ 0]]
			if f182_arg3 then
				Dvar[@"hash_26A8F90E2C78062E"]:set( true ) --[[ @ 0]]
			end
			if not f182_arg0._mouseLockInputInputChangeSubscription then
				local f182_local0 = f182_arg0 --[[ @ 0]]
				local f182_local1 = f182_arg0.subscribeToModel --[[ @ 0]]
				local f182_local2 = Engine[@"GetModelForController"]( f182_arg1 ) --[[ @ 0]]
				f182_arg0._mouseLockInputInputChangeSubscription = f182_local1( f182_local0, f182_local2.LastInput, function ()
					if IsGamepad( f182_arg1 ) then
						EnableMouseLockInputBinding( f182_arg0, f182_arg1, false, f182_arg3 ) --[[ @ 0]]
					end
				end, false ) --[[ @ 0]]
			end
			SetAllowCursorMovement( f182_arg0, true ) --[[ @ 0]]
		else
			Engine[@"hash_16C9FBEF14D7451D"]( false ) --[[ @ 0]]
			SetAllowCursorMovement( f182_arg0, false ) --[[ @ 0]]
			if f182_arg0._mouseLockInputInputChangeSubscription then
				f182_arg0:removeSubscription( f182_arg0._mouseLockInputInputChangeSubscription ) --[[ @ 0]]
				f182_arg0._mouseLockInputInputChangeSubscription = nil --[[ @ 0]]
			end
		end
	end
end

function EnableMouseLockInputForMap( f184_arg0, f184_arg1, f184_arg2 )
	EnableMouseLockInputBinding( f184_arg0, f184_arg1, f184_arg2, Engine[@"ProfileInt"]( f184_arg1, @"hash_2908DA91B796EF6C" ) == 1 ) --[[ @ 0]]
end

function EnableMouseLockInputForInventory( f185_arg0, f185_arg1, f185_arg2 )
	EnableMouseLockInputBinding( f185_arg0, f185_arg1, f185_arg2, Engine[@"ProfileInt"]( f185_arg1, @"hash_54AE3D347A07EF76" ) == 1 ) --[[ @ 0]]
end

function ScaleWidgetToLabelCentered( f186_arg0, f186_arg1, f186_arg2 )
	if f186_arg1 == nil then
		return 
	else
		local f186_local0, f186_local1, f186_local2, f186_local3 = f186_arg0:getLocalLeftRight() --[[ @ 0]]
		local f186_local4, f186_local5, f186_local6, f186_local7 = f186_arg1:getLocalLeftRight() --[[ @ 0]]
		local f186_local8 = f186_arg1:getTextWidth() --[[ @ 0]]
		local f186_local9 = (f186_local3 + f186_local2) / 2 --[[ @ 0]]
		local f186_local10 = f186_local8 + f186_arg2 * 2 --[[ @ 0]]
		f186_arg0:setLeftRight( f186_local0, f186_local1, f186_local9 - f186_local10 / 2, f186_local9 + f186_local10 / 2 ) --[[ @ 0]]
	end
end

function ScaleWidgetToLabelCenteredWithMinimum( f187_arg0, f187_arg1, f187_arg2, f187_arg3 )
	if f187_arg1 == nil then
		return 
	else
		local f187_local0, f187_local1, f187_local2, f187_local3 = f187_arg0:getLocalLeftRight() --[[ @ 0]]
		local f187_local4 = f187_arg1:getTextWidth() --[[ @ 0]]
		local f187_local5 = (f187_local3 + f187_local2) / 2 --[[ @ 0]]
		local f187_local6 = math.max( f187_local4 + f187_arg2 * 2, f187_arg3 ) --[[ @ 0]]
		f187_arg0:setLeftRight( f187_local0, f187_local1, f187_local5 - f187_local6 / 2, f187_local5 + f187_local6 / 2 ) --[[ @ 0]]
	end
end

function ScaleWidgetToLabelCenteredWrapped( f188_arg0, f188_arg1, f188_arg2, f188_arg3 )
	if f188_arg1 == nil then
		return 
	end
	local f188_local0, f188_local1, f188_local2, f188_local3 = f188_arg0:getLocalLeftRight() --[[ @ 0]]
	local f188_local4, f188_local5, f188_local6, f188_local7 = f188_arg1:getLocalLeftRight() --[[ @ 0]]
	if not f188_arg0._originalWidth then
		if f188_local4 == 0 and f188_local5 == 1 then
			f188_arg0._originalWidth = f188_local3 - f188_local2 + f188_local7 - f188_local6 --[[ @ 0]]
		else
			f188_arg0._originalWidth = f188_local7 - f188_local6 --[[ @ 0]]
		end
	end
	local f188_local8, f188_local9 = f188_arg1:getTextWidthAndHeight( f188_arg0._originalWidth ) --[[ @ 0]]
	local f188_local10 = (f188_local3 + f188_local2) / 2 --[[ @ 0]]
	local f188_local11 = f188_local8 + f188_arg2 * 2 --[[ @ 0]]
	f188_arg0:setLeftRight( f188_local0, f188_local1, f188_local10 - f188_local11 / 2, f188_local10 + f188_local11 / 2 ) --[[ @ 0]]
	local f188_local12, f188_local13, f188_local14, f188_local15 = f188_arg0:getLocalTopBottom() --[[ @ 0]]
	f188_arg0:setTopBottom( f188_local12, f188_local13, f188_local14, f188_local9 + f188_local14 + f188_arg3 ) --[[ @ 0]]
end

function ScaleWidgetToLabelGlobalTextWidthCentered( f189_arg0, f189_arg1, f189_arg2 )
	if f189_arg1 == nil then
		return 
	else
		local f189_local0, f189_local1, f189_local2, f189_local3 = f189_arg0:getLocalLeftRight() --[[ @ 0]]
		local f189_local4 = f189_arg1:getGlobalTextWidth() --[[ @ 0]]
		local f189_local5 = (f189_local3 + f189_local2) / 2 --[[ @ 0]]
		local f189_local6 = f189_local4 + f189_arg2 * 2 --[[ @ 0]]
		f189_arg0:setLeftRight( f189_local0, f189_local1, f189_local5 - f189_local6 / 2, f189_local5 + f189_local6 / 2 ) --[[ @ 0]]
	end
end

function ScaleWidgetToLabelCore( f190_arg0, f190_arg1, f190_arg2, f190_arg3 )
	if f190_arg1 == nil then
		return 
	end
	local f190_local0, f190_local1, f190_local2, f190_local3 = f190_arg0:getLocalLeftRight() --[[ @ 0]]
	local f190_local4, f190_local5, f190_local6, f190_local7 = f190_arg0:getNextRect() --[[ @ 0]]
	local f190_local8 = f190_arg1:getTextWidth() --[[ @ 0]]
	if not f190_arg0.customGetWidth then
		f190_arg0.customGetWidth = CoD.FreeCursorUtility.GetWidthBySavedWidth --[[ @ 0]]
	end
	local f190_local9, f190_local10, f190_local11, f190_local12 = f190_arg1:getLocalLeftRight() --[[ @ 0]]
	if f190_local8 > 0 then
		f190_arg0.savedWidth = f190_local8 + 2 * f190_local11 + f190_arg2 --[[ @ 0]]
		if not f190_arg0.widthOverridden then
			f190_arg0:setLeftRight( f190_local0, f190_local1, f190_local4, f190_local4 + f190_arg0.savedWidth ) --[[ @ 0]]
		end
	else
		f190_arg0:setLeftRight( f190_local0, f190_local1, f190_local4, f190_local4 ) --[[ @ 0]]
	end
end

function SetStateFromText( f191_arg0, f191_arg1, f191_arg2, f191_arg3, f191_arg4 )
	local f191_local0 = f191_arg3 --[[ @ 0]]
	if f191_arg1 and f191_arg1:getTextWidth() ~= 0 then
		f191_local0 = f191_arg2 --[[ @ 0]]
	end
	f191_arg0:setState( f191_arg4, f191_local0 ) --[[ @ 0]]
end

function ScaleWidgetToLabel( f192_arg0, f192_arg1, f192_arg2 )
	ScaleWidgetToLabelCore( f192_arg0, f192_arg1, f192_arg2, true ) --[[ @ 0]]
end

function ScaleWidgetToLabelLeftJustify( f193_arg0, f193_arg1, f193_arg2 )
	ScaleWidgetToLabelCore( f193_arg0, f193_arg1, f193_arg2, false ) --[[ @ 0]]
end

function ScaleWidgetToLabelWrapped( f194_arg0, f194_arg1, f194_arg2, f194_arg3 )
	if f194_arg1 == nil then
		return 
	end
	local f194_local0, f194_local1, f194_local2, f194_local3 = f194_arg0:getLocalLeftRight() --[[ @ 0]]
	local f194_local4, f194_local5, f194_local6, f194_local7 = f194_arg1:getLocalLeftRight() --[[ @ 0]]
	if not f194_arg0._originalWidth then
		f194_arg0._originalWidth = f194_local3 - f194_local2 --[[ @ 0]]
	end
	f194_arg1:setLeftRight( true, false, f194_local6, f194_local6 + f194_arg0._originalWidth ) --[[ @ 0]]
	local f194_local8, f194_local9 = f194_arg1:getTextWidthAndHeight( f194_arg0._originalWidth ) --[[ @ 0]]
	if f194_arg0._originalWidth < f194_local8 then
		f194_local8 = f194_arg0._originalWidth --[[ @ 0]]
	end
	if f194_local8 > 0 then
		f194_arg0.savedWidth = f194_local8 + 2 * f194_local6 + f194_arg2 --[[ @ 0]]
		f194_arg0:setLeftRight( f194_local0, f194_local1, f194_local2, f194_local2 + f194_arg0.savedWidth ) --[[ @ 0]]
	else
		f194_arg0:setLeftRight( f194_local0, f194_local1, f194_local2, f194_local2 ) --[[ @ 0]]
	end
	local f194_local10, f194_local11, f194_local12, f194_local13 = f194_arg0:getLocalTopBottom() --[[ @ 0]]
	f194_arg0:setTopBottom( f194_local10, f194_local11, f194_local12, f194_local12 + f194_local9 + f194_arg3 ) --[[ @ 0]]
end

function ScaleWidgetToLabelWrappedUp( f195_arg0, f195_arg1, f195_arg2, f195_arg3 )
	if f195_arg1 == nil then
		return 
	end
	local f195_local0, f195_local1, f195_local2, f195_local3 = f195_arg0:getLocalLeftRight() --[[ @ 0]]
	local f195_local4, f195_local5, f195_local6, f195_local7 = f195_arg1:getLocalLeftRight() --[[ @ 0]]
	if not f195_arg0._originalWidth then
		f195_arg0._originalWidth = f195_local3 - f195_local2 --[[ @ 0]]
	end
	local f195_local8, f195_local9 = f195_arg1:getTextWidthAndHeight( f195_arg0._originalWidth ) --[[ @ 0]]
	if f195_arg0._originalWidth < f195_local8 then
		f195_arg0:setLeftRight( f195_local0, f195_local1, f195_local2, f195_local2 + f195_arg0._originalWidth ) --[[ @ 0]]
	elseif f195_local8 > 0 then
		f195_arg0.savedWidth = f195_local8 + 2 * f195_local6 + f195_arg2 --[[ @ 0]]
		f195_arg0:setLeftRight( f195_local0, f195_local1, f195_local2, f195_local2 + f195_arg0.savedWidth ) --[[ @ 0]]
	else
		f195_arg0:setLeftRight( f195_local0, f195_local1, f195_local2, f195_local2 ) --[[ @ 0]]
	end
	local f195_local10, f195_local11, f195_local12, f195_local13 = f195_arg0:getLocalTopBottom() --[[ @ 0]]
	f195_arg0:setTopBottom( f195_local10, f195_local11, f195_local13 - f195_local9 - f195_arg3, f195_local13 ) --[[ @ 0]]
end

function SetContainerHeightToMultilineText( f196_arg0, f196_arg1, f196_arg2 )
	local f196_local0 = f196_arg0:getParent() --[[ @ 0]]
	if f196_local0 ~= nil then
		local f196_local1, f196_local2 = f196_arg1:getTextWidthAndHeight() --[[ @ 0]]
		if f196_local2 > 0 then
			f196_local0:setHeight( f196_local2 + f196_arg2 * 2 ) --[[ @ 0]]
		else
			f196_local0:setHeight( 0 ) --[[ @ 0]]
		end
	end
end

function SetContainerWidthToText( f197_arg0, f197_arg1, f197_arg2 )
	local f197_local0 = f197_arg0:getParent() --[[ @ 0]]
	if f197_local0 ~= nil then
		local f197_local1, f197_local2 = f197_arg1:getTextWidthAndHeight() --[[ @ 0]]
		if f197_local1 > 0 then
			f197_local0:setWidth( f197_local1 ) --[[ @ 0]]
			f197_local0.savedWidth = f197_local1 + f197_arg2 * 4 --[[ @ 0]]
		else
			f197_local0:setWidth( 0 ) --[[ @ 0]]
			f197_local0.savedWidth = f197_arg2 * 4 --[[ @ 0]]
		end
		f197_local0.customGetWidth = CoD.FreeCursorUtility.GetWidthBySavedWidth --[[ @ 0]]
	end
end

function UpdateWidgetHeightToMultilineText( f198_arg0, f198_arg1, f198_arg2 )
	local f198_local0, f198_local1 = f198_arg1:getTextWidthAndHeight() --[[ @ 0]]
	if f198_local1 > 0 then
		f198_arg0:setHeight( f198_local1 + f198_arg2 * 2 ) --[[ @ 0]]
	else
		f198_arg0:setHeight( 0 ) --[[ @ 0]]
	end
end

function UpdateWidgetHeightToMultilineTextWithMinimum( f199_arg0, f199_arg1, f199_arg2, f199_arg3 )
	local f199_local0, f199_local1 = f199_arg1:getTextWidthAndHeight() --[[ @ 0]]
	f199_arg0:setHeight( math.max( f199_local1 + f199_arg2 * 2, f199_arg3 ) ) --[[ @ 0]]
end

function OverrideWidgetWidth( f200_arg0, f200_arg1 )
	local f200_local0, f200_local1, f200_local2, f200_local3 = f200_arg0:getLocalLeftRight() --[[ @ 0]]
	f200_arg0.savedWidth = f200_local3 - f200_local2 --[[ @ 0]]
	f200_arg0.widthOverridden = true --[[ @ 0]]
	f200_arg0:setWidth( f200_arg1 ) --[[ @ 0]]
end

function RestoreWidgetWidth( f201_arg0 )
	if f201_arg0.savedWidth == nil then
		return 
	else
		f201_arg0.widthOverridden = nil --[[ @ 0]]
		f201_arg0:setWidth( f201_arg0.savedWidth ) --[[ @ 0]]
		f201_arg0.savedWidth = nil --[[ @ 0]]
	end
end

function SetWidth( f202_arg0, f202_arg1 )
	f202_arg0.savedWidth = f202_arg0:getWidth() --[[ @ 0]]
	f202_arg0:setWidth( f202_arg1 ) --[[ @ 0]]
end

function RestoreWidgetHeight( f203_arg0 )
	if f203_arg0.__savedHeight then
		f203_arg0:setHeight( f203_arg0.__savedHeight ) --[[ @ 0]]
		f203_arg0.__savedHeight = nil --[[ @ 0]]
	end
end

function SetHeight( f204_arg0, f204_arg1 )
	local f204_local0, f204_local1 = f204_arg0:getLocalSize() --[[ @ 0]]
	f204_arg0.__savedHeight = f204_local1 --[[ @ 0]]
	f204_arg0:setHeight( f204_arg1 ) --[[ @ 0]]
end

function ScaleToElementWidth( f205_arg0, f205_arg1, f205_arg2 )
	local f205_local0, f205_local1, f205_local2, f205_local3 = f205_arg1:getLocalLeftRight() --[[ @ 0]]
	f205_arg0:setWidth( f205_local3 - f205_local2 + f205_arg2 ) --[[ @ 0]]
end

function ScaleToElementHeight( f206_arg0, f206_arg1, f206_arg2 )
	local f206_local0, f206_local1, f206_local2, f206_local3 = f206_arg1:getLocalTopBottom() --[[ @ 0]]
	f206_arg0:setHeight( f206_local3 - f206_local2 + f206_arg2 ) --[[ @ 0]]
end

function RecalculateScaleToElementHeight( f207_arg0, f207_arg1 )
	local f207_local0 = 0 --[[ @ 0]]
	local f207_local1 = f207_arg1:getSpacing() --[[ @ 0]]
	local f207_local2 = f207_arg1:getFirstChild() --[[ @ 0]]
	while f207_local2 ~= nil do
		local f207_local3, f207_local4, f207_local5, f207_local6 = f207_local2:getLocalTopBottom() --[[ @ 0]]
		if f207_local2:isVisible() then
			f207_local0 = f207_local0 + f207_local6 - f207_local5 + f207_local1 --[[ @ 0]]
		end
		f207_local2 = f207_local2:getNextSibling() --[[ @ 0]]
	end
	if f207_local1 < f207_local0 then
		f207_local0 = f207_local0 - f207_local1 --[[ @ 0]]
	end
	f207_arg0:setHeight( f207_local0 ) --[[ @ 0]]
end

function RecalculateScaleToElementWidth( f208_arg0, f208_arg1 )
	local f208_local0 = 0 --[[ @ 0]]
	local f208_local1 = f208_arg1:getSpacing() --[[ @ 0]]
	local f208_local2 = f208_arg1:getFirstChild() --[[ @ 0]]
	while f208_local2 ~= nil do
		if f208_local2:isVisible() then
			if f208_local2.id == "LUIText" then
				f208_local0 = f208_local0 + f208_local2:getTextWidth() + f208_local1 --[[ @ 0]]
			else
				local f208_local3, f208_local4, f208_local5, f208_local6 = f208_local2:getLocalLeftRight() --[[ @ 0]]
				f208_local0 = f208_local0 + f208_local6 - f208_local5 + f208_local1 --[[ @ 0]]
			end
		end
		f208_local2 = f208_local2:getNextSibling() --[[ @ 0]]
	end
	if f208_local1 < f208_local0 then
		f208_local0 = f208_local0 - f208_local1 --[[ @ 0]]
	end
	f208_arg0:setWidth( f208_local0 ) --[[ @ 0]]
end

function ScaleWidthToWidestChildElement( f209_arg0 )
	local f209_local0 = nil --[[ @ 0]]
	local f209_local1 = f209_arg0:getFirstChild() --[[ @ 0]]
	while f209_local1 ~= nil do
		if f209_local1:isVisible() then
			local f209_local2, f209_local3, f209_local4, f209_local5 = f209_local1:getLocalLeftRight() --[[ @ 0]]
			local f209_local6 = f209_local5 - f209_local4 --[[ @ 0]]
			if not f209_local0 or f209_local0 < f209_local6 then
				f209_local0 = f209_local6 --[[ @ 0]]
			end
		end
		f209_local1 = f209_local1:getNextSibling() --[[ @ 0]]
	end
	if f209_local0 then
		f209_arg0:setWidth( f209_local0 ) --[[ @ 0]]
	end
end

function TrimLabelIfLanguageReversed( f210_arg0, f210_arg1 )
	if Engine[@"IsCurrentLanguageReversed"]() then
		if f210_arg1 == nil then
			return 
		else
			local f210_local0, f210_local1, f210_local2, f210_local3 = f210_arg1:getLocalLeftRight() --[[ @ 0]]
			f210_arg1:setLeftRight( f210_local0, f210_local1, f210_local2, f210_local2 + f210_arg1:getTextWidth() + 2 ) --[[ @ 0]]
			return 
		end
	else
		
	end
end

function ScaleParentWidgetToLabel( f211_arg0, f211_arg1, f211_arg2 )
	local f211_local0 = f211_arg0 and f211_arg0:getParent() --[[ @ 0]]
	if f211_arg1 == nil or f211_local0 == nil then
		return 
	elseif f211_local0._originalWidth == nil then
		local f211_local1, f211_local2, f211_local3, f211_local4 = f211_local0:getLocalLeftRight() --[[ @ 0]]
		f211_local0._originalWidth = f211_local4 - f211_local3 --[[ @ 0]]
	end
	local f211_local1, f211_local2, f211_local3, f211_local4 = f211_arg0:getLocalLeftRight() --[[ @ 0]]
	local f211_local5, f211_local6, f211_local7, f211_local8 = f211_local0:getLocalLeftRight() --[[ @ 0]]
	local f211_local9, f211_local10, f211_local11, f211_local12 = f211_arg1:getLocalLeftRight() --[[ @ 0]]
	f211_local0:setLeftRight( f211_local5, f211_local6, f211_local7, f211_local7 + f211_arg1:getTextWidth() + 2 * (f211_local3 + f211_local11) + f211_arg2 ) --[[ @ 0]]
end

function ScaleParentWidgetToElementLabel( f212_arg0, f212_arg1, f212_arg2 )
	if f212_arg0[f212_arg1] then
		ScaleParentWidgetToLabel( f212_arg0, f212_arg0[f212_arg1], f212_arg2 ) --[[ @ 0]]
	end
end

function RestoreParentToOriginalWidth( f213_arg0 )
	local f213_local0 = f213_arg0 and f213_arg0:getParent() --[[ @ 0]]
	if f213_local0 and f213_local0._originalWidth ~= nil then
		local f213_local1, f213_local2, f213_local3, f213_local4 = f213_local0:getLocalLeftRight() --[[ @ 0]]
		f213_local0:setLeftRight( f213_local1, f213_local2, f213_local3, f213_local3 + f213_local0._originalWidth ) --[[ @ 0]]
	end
end

function ScaleWidgetToLabelRightAligned( f214_arg0, f214_arg1, f214_arg2 )
	if f214_arg1 == nil then
		return 
	else
		local f214_local0, f214_local1, f214_local2, f214_local3 = f214_arg0:getLocalLeftRight() --[[ @ 0]]
		local f214_local4, f214_local5, f214_local6, f214_local7 = f214_arg1:getLocalLeftRight() --[[ @ 0]]
		f214_arg0:setLeftRight( f214_local0, f214_local1, f214_local3 - f214_arg1:getTextWidth() + 2 * f214_local7 - f214_arg2, f214_local3 ) --[[ @ 0]]
	end
end

function ScaleToFitImageElement( f215_arg0, f215_arg1, f215_arg2 )
	local f215_local0 = f215_arg0[f215_arg2] --[[ @ 0]]
	if f215_local0 then
		local f215_local1, f215_local2 = f215_local0:getImageDimensions() --[[ @ 0]]
		if f215_local1 > 0 and f215_local2 > 0 then
			local f215_local3, f215_local4, f215_local5 = f215_local0:getLocalLeftRight() --[[ @ 0]]
			local f215_local6, f215_local7, f215_local8, f215_local9 = f215_local0:getLocalTopBottom() --[[ @ 0]]
			local f215_local10, f215_local11, f215_local12, f215_local13 = f215_arg1:getLocalLeftRight() --[[ @ 0]]
			local f215_local14, f215_local15, f215_local16, f215_local17 = f215_arg1:getLocalTopBottom() --[[ @ 0]]
			f215_arg1:setLeftRight( true, false, f215_local12, math.floor( (f215_local5 * 2 + (f215_local17 + f215_local9 - f215_local8) * f215_local1 / f215_local2 - 1) / 2 ) * 2 ) --[[ @ 0]]
			f215_arg1:setTopBottom( true, false, f215_local16, f215_local17 ) --[[ @ 0]]
		end
	end
end

function GoBackThroughAllAndClose( f216_arg0, f216_arg1 )
	while f216_arg0 do
		while not f216_arg0.menuName do
			f216_arg0 = f216_arg0:getParent() --[[ @ 0]]
		end
		local f216_local0, f216_local1 = CoD.Menu.GetNavigationForMenu( f216_arg1, f216_arg0.menuName ) --[[ @ 0]]
		if f216_local0 == 1 then
			Close( f216_arg0, f216_arg1 ) --[[ @ 0]]
			return 
		end
		f216_arg0 = GoBack( f216_arg0, f216_arg1 ) --[[ @ 0]]
	end
	while not f216_arg0.menuName do
		f216_arg0 = f216_arg0:getParent() --[[ @ 0]]
	end
	local f216_local0, f216_local1 = CoD.Menu.GetNavigationForMenu( f216_arg1, f216_arg0.menuName ) --[[ @ 0]]
	if f216_local0 == 1 then
		Close( f216_arg0, f216_arg1 ) --[[ @ 0]]
		return 
	end
	f216_arg0 = GoBack( f216_arg0, f216_arg1 ) --[[ @ 0]]
end

function LobbyGoBack( f217_arg0, f217_arg1 )
	if not f217_arg0:getParent() then
		return 
	end
	local f217_local0 = Engine[@"CreateModel"]( Engine[@"GetGlobalModel"](), "lobbyRoot.lobbyNav" ) --[[ @ 0]]
	local f217_local1 = Engine[@"GetModelValue"]( f217_local0 ) --[[ @ 0]]
	local f217_local2 = Engine[@"CreateModel"]( Engine[@"GetGlobalModel"](), "lobbyRoot.showSelect" ) --[[ @ 0]]
	if f217_local0 and (f217_local1 == LobbyData.GetLobbyMenuIDByName( LuaEnum.UI.DIRECTOR_LAN ) or f217_local1 == LobbyData.GetLobbyMenuIDByName( LuaEnum.UI.DIRECTOR_ONLINE ) and f217_local2:get()) then
		DisableAllMenuInput( f217_arg0, true ) --[[ @ 0]]
	end
	CoD.LobbyUtility.LobbyGoBack( f217_arg0, f217_arg1 ) --[[ @ 0]]
	f217_arg0:playSound( "menu_go_back" ) --[[ @ 0]]
end

function DisplayPlayGoWarning( f218_arg0, f218_arg1 )
	local f218_local0 = CoD.OverlayUtility.CreateOverlay( f218_arg1, f218_arg0, "GenericModalDialog", "", "MENU/STILLDOWNLOADING", "t7_icon_connect_overlays_bkg", {
		@"hash_1154E30A1DF77FF1"
	}, function ( f219_arg0 )
		return true
	end ) --[[ @ 0]]
	f218_local0.anyControllerAllowed = true --[[ @ 0]]
	f218_local0.unusedControllerAllowed = true --[[ @ 0]]
end

function EnableAnyController( f220_arg0, f220_arg1 )
	f220_arg0.anyControllerAllowed = true --[[ @ 0]]
end

function LobbyBeginPlay( f221_arg0, f221_arg1 )
	if (IsOrbis() or IsDurango() and not Engine[@"hash_5CB675CA7856DA25"]()) and Engine[@"hash_77D47312EBA41751"]() and not CoD.perController[f221_arg1].hasShownPlaygoWarning then
		CoD.perController[f221_arg1].hasShownPlaygoWarning = true --[[ @ 0]]
		DisplayPlayGoWarning( f221_arg0, f221_arg1 ) --[[ @ 0]]
		return false
	else
		CoD.LobbyUtility.BeginPlay( f221_arg0, f221_arg1 ) --[[ @ 0]]
		return true
	end
end

function SizeToSafeArea( f222_arg0, f222_arg1 )
	f222_arg0:sizeToSafeArea( f222_arg1, false ) --[[ @ 0]]
end

function SizeToHudArea( f223_arg0, f223_arg1 )
	f223_arg0:sizeToSafeArea( f223_arg1, true ) --[[ @ 0]]
end

function SizeToWidthOfScreen( f224_arg0, f224_arg1 )
	f224_arg0:sizeToWidthOfScreen( f224_arg1 ) --[[ @ 0]]
end

function GoBackMultiple( f225_arg0, f225_arg1, f225_arg2 )
	while 0 < f225_arg2 do
		f225_arg0 = GoBack( f225_arg0, f225_arg1 ) --[[ @ 0]]
		f225_arg2 = f225_arg2 - 1 --[[ @ 0]]
	end
	return f225_arg0
end

function GoBack( f226_arg0, f226_arg1 )
	if not f226_arg0 or Rat and Rat.DisableGoBack then
		return 
	end
	while not f226_arg0.menuName do
		f226_arg0 = f226_arg0:getParent() --[[ @ 0]]
	end
	local f226_local0, f226_local1 = CoD.Menu.GetNavigationForMenu( f226_arg1, f226_arg0.menuName ) --[[ @ 0]]
	if f226_local0 and f226_local1 then
		f226_arg0.previousMenuName = CoD.MenuNavigation[f226_arg1][f226_local0][f226_local1 - 1] --[[ @ 0]]
		CoD.MenuNavigation[f226_arg1][f226_local0][f226_local1] = nil --[[ @ 0]]
		if #CoD.MenuNavigation[f226_arg1][f226_local0] == 0 then
			table.remove( CoD.MenuNavigation[f226_arg1], f226_local0 ) --[[ @ 0]]
		else
			
		end
	end
	f226_arg0:saveState( f226_arg1 ) --[[ @ 0]]
	return f226_arg0:goBack( f226_arg1 )
end

function DelayGoBack( f227_arg0, f227_arg1, f227_arg2 )
	if not f227_arg2 then
		f227_arg2 = 0 --[[ @ 0]]
	end
	f227_arg0:addElement( LUI.UITimer.newElementTimer( f227_arg2, true, function ()
		GoBack( f227_arg0, f227_arg1 ) --[[ @ 0]]
	end ) ) --[[ @ 0]]
end

function DelayUnhideFreecursorGoBack( f229_arg0, f229_arg1, f229_arg2 )
	if not f229_arg2 then
		f229_arg2 = 0 --[[ @ 0]]
	end
	f229_arg0:addElement( LUI.UITimer.newElementTimer( f229_arg2, true, function ()
		MenuUnhideFreeCursor( f229_arg0, f229_arg1 ) --[[ @ 0]]
		GoBack( f229_arg0, f229_arg1 ) --[[ @ 0]]
	end ) ) --[[ @ 0]]
end

function DelayCloseAndGoBack( f231_arg0, f231_arg1, f231_arg2 )
	if not f231_arg2 then
		f231_arg2 = 0 --[[ @ 0]]
	end
	f231_arg0:addElement( LUI.UITimer.newElementTimer( f231_arg2, true, function ()
		GoBack( GoBack( f231_arg0, f231_arg1 ), f231_arg1 ) --[[ @ 0]]
	end ) ) --[[ @ 0]]
end

function PrepareNavigationInDirectorRoot( f233_arg0 )
	if not CoD.MenuNavigation then
		CoD.MenuNavigation = {} --[[ @ 0]]
	end
	if not CoD.MenuNavigation[f233_arg0] or #CoD.MenuNavigation[f233_arg0] == 0 then
		CoD.MenuNavigation[f233_arg0] = {
			{
				"Director"
			}
		} --[[ @ 0]]
	end
end

function GoBackToMenu( f234_arg0, f234_arg1, f234_arg2 )
	local f234_local0, f234_local1 = CoD.Menu.GetNavigationForMenuToMenu( f234_arg1, f234_arg0.menuName, f234_arg2 ) --[[ @ 0]]
	local f234_local2, f234_local3 = CoD.Menu.GetNavigationForMenu( f234_arg1, f234_arg0.menuName ) --[[ @ 0]]
	local f234_local4, f234_local5 = CoD.Menu.GetNavigationForMenu( f234_arg1, f234_arg2 ) --[[ @ 0]]
	if not f234_local2 or not f234_local3 or not f234_local4 or not f234_local5 then
		if CoD.isPC and f234_arg0.id == "Menu.Director" and f234_arg2 == "Director" then
			return f234_arg0
		else
			return GoBack( f234_arg0, f234_arg1 )
		end
	elseif f234_arg0.menuName == f234_arg2 then
		return f234_arg0
	elseif f234_arg0.occludedMenu and f234_arg0.occludedMenu.menuName == f234_arg2 then
		f234_arg0.previousMenuName = nil --[[ @ 0]]
		table.remove( CoD.MenuNavigation[f234_arg1], f234_local2 ) --[[ @ 0]]
	elseif f234_local0 and f234_local1 then
		f234_arg0.previousMenuName = CoD.MenuNavigation[f234_arg1][f234_local0][f234_local1] --[[ @ 0]]
		local f234_local6 = #CoD.MenuNavigation[f234_arg1][f234_local0] --[[ @ 0]]
		for f234_local7 = f234_local1 + 1 --[[ @ 0]], f234_local6, 1 do
			CoD.MenuNavigation[f234_arg1][f234_local0][f234_local7] = nil --[[ @ 0]]
		end
		if #CoD.MenuNavigation[f234_arg1][f234_local0] == 0 then
			table.remove( CoD.MenuNavigation[f234_arg1], f234_local0 ) --[[ @ 0]]
		end
		if f234_local2 ~= f234_local0 then
			table.remove( CoD.MenuNavigation[f234_arg1], f234_local2 ) --[[ @ 0]]
		end
	elseif f234_arg0.occludedMenu then
		local f234_local6 = f234_arg0 --[[ @ 0]]
		for f234_local7 = f234_local2 --[[ @ 0]], f234_local4 + 1, -1 do
			local f234_local10 = f234_local7 --[[ @ 0]]
			if not f234_local6.occludedMenu then
				return f234_local6
			end
			f234_local6 = GoBackToMenu( f234_local6, f234_arg1, f234_local6.occludedMenu.menuName ) --[[ @ 0]]
			if not f234_local6 then
				break
			end
		end
		if f234_local6 == nil or f234_local6.menuName == f234_arg2 then
			return f234_local6
		end
		return GoBackToMenu( f234_local6, f234_arg1, f234_arg2 )
	end
	f234_arg0:saveState( f234_arg1 ) --[[ @ 0]]
	return CoD.Menu.goBack( f234_arg0, f234_arg1 )
end

function GoBackAndUpdateStateOnPreviousMenu( f235_arg0, f235_arg1 )
	local f235_local0 = GoBack( f235_arg0, f235_arg1 ) --[[ @ 0]]
	f235_local0:processEvent( {
		name = "update_state",
		controller = f235_arg1,
		forceDispatch = true
	} ) --[[ @ 0]]
	return f235_local0
end

function Close( f236_arg0, f236_arg1 )
	while not f236_arg0.menuName do
		f236_arg0 = f236_arg0:getParent() --[[ @ 0]]
	end
	local f236_local0, f236_local1 = CoD.Menu.GetNavigationForMenu( f236_arg1, f236_arg0.menuName ) --[[ @ 0]]
	if f236_local0 and f236_local1 then
		f236_arg0.previousMenuName = CoD.MenuNavigation[f236_arg1][f236_local0][f236_local1 - 1] --[[ @ 0]]
		CoD.MenuNavigation[f236_arg1][f236_local0][f236_local1] = nil --[[ @ 0]]
		if #CoD.MenuNavigation[f236_arg1][f236_local0] == 0 then
			table.remove( CoD.MenuNavigation[f236_arg1], f236_local0 ) --[[ @ 0]]
		end
	end
	f236_arg0:saveState( f236_arg1 ) --[[ @ 0]]
	f236_arg0:close() --[[ @ 0]]
end

function NavigateToLobby_SelectionList( f237_arg0, f237_arg1, f237_arg2, f237_arg3, f237_arg4 )
	if f237_arg3 == LuaEnum.UI.DIRECTOR_ONLINE_ZM_CUSTOM then
		Dvar[@"zm_private_rankedmatch"]:set( Engine[@"GetProfileVarInt"]( f237_arg2, "com_privategame_ranked_zm" ) ~= 0 ) --[[ @ 0]]
		Engine[@"hash_195FA783443EBEC3"]( f237_arg2 ) --[[ @ 0]]
	end
	local f237_local0 = LobbyData.GetLobbyMenuByName( f237_arg3 ) --[[ @ 0]]
	if f237_local0[@"eGameModes"] == Enum[@"eGameModes"][@"hash_158ECA70A244C08F"] and Engine[@"hash_49E5BE3B4BBA4E0E"]( "arena_maintenance" ) == true then
		LuaUtils.UI_ShowErrorMessageDialog( f237_arg2, @"hash_2DD0FACA77FB825A", @"hash_12DF6ED539CA406A" ) --[[ @ 0]]
		return 
	end
	local f237_local1 = Engine[@"hash_49E5BE3B4BBA4E0E"]( "probation_public_enabled" ) --[[ @ 0]]
	local f237_local2 = Engine[@"hash_49E5BE3B4BBA4E0E"]( "probation_league_enabled" ) --[[ @ 0]]
	if f237_local0[@"hash_64CB6F0DC5F1CA97"] and (f237_local0[@"eGameModes"] == Enum[@"eGameModes"][@"hash_795910ACF90F64AD"] or f237_local0[@"eGameModes"] == Enum[@"eGameModes"][@"hash_158ECA70A244C08F"]) then
		Engine[@"ProbationCheckForProbation"]( f237_arg2, f237_local0[@"eGameModes"] ) --[[ @ 0]]
		local f237_local3 = Engine[@"LobbyClient_GetProbationTime"]( f237_arg2, f237_local0[@"eGameModes"] ) --[[ @ 0]]
		if f237_local3 > 0 then
			local f237_local4 = Engine[@"SecondsAsTime"]( f237_local3 ) --[[ @ 0]]
			if f237_local1 and f237_local0[@"eGameModes"] == Enum[@"eGameModes"][@"hash_795910ACF90F64AD"] then
				LuaUtils.UI_ShowErrorMessageDialog( f237_arg2, Engine[@"hash_4F9F1239CFD921FE"]( @"hash_A5BCA09BFBE90BB", f237_local4 ), @"hash_309AEEA73CA9BBA3" ) --[[ @ 0]]
				return 
			elseif f237_local2 and f237_local0[@"eGameModes"] == Enum[@"eGameModes"][@"hash_158ECA70A244C08F"] then
				LuaUtils.UI_ShowErrorMessageDialog( f237_arg2, Engine[@"hash_4F9F1239CFD921FE"]( @"hash_31E60B8AE3979C41", f237_local4 ), @"hash_309AEEA73CA9BBA3" ) --[[ @ 0]]
				return 
			end
		elseif Engine[@"LobbyHost_AnyClientInProbationForGameMode"]( f237_local0[@"eGameModes"] ) then
			if f237_local1 and f237_local0[@"eGameModes"] == Enum[@"eGameModes"][@"hash_795910ACF90F64AD"] then
				LuaUtils.UI_ShowErrorMessageDialog( f237_arg2, @"hash_68F60BFC521CBE84" ) --[[ @ 0]]
				return 
			elseif f237_local2 and f237_local0[@"eGameModes"] == Enum[@"eGameModes"][@"hash_158ECA70A244C08F"] then
				LuaUtils.UI_ShowErrorMessageDialog( f237_arg2, @"hash_22B597460DFBDD08" ) --[[ @ 0]]
				return 
			end
		end
	end
	UpdateDifficulty( f237_arg0, f237_arg3, f237_arg2 ) --[[ @ 0]]
	CoD.LobbyUtility.NavigateToLobby( f237_arg4, f237_arg3, false, f237_arg2 ) --[[ @ 0]]
end

function NavigateToLobby_FirstTimeFlowMP( f238_arg0, f238_arg1, f238_arg2, f238_arg3 )
	
end

function NavigateToMenu( f239_arg0, f239_arg1, f239_arg2, f239_arg3 )
	while f239_arg0 and not f239_arg0.openMenu do
		f239_arg0 = f239_arg0:getParent() --[[ @ 0]]
	end
	if not f239_arg0 then
		return 
	elseif not CoD.MenuNavigation then
		CoD.MenuNavigation = {} --[[ @ 0]]
	end
	if not CoD.MenuNavigation[f239_arg3] then
		CoD.MenuNavigation[f239_arg3] = {
			{
				f239_arg0.menuName
			}
		} --[[ @ 0]]
	end
	local f239_local0, f239_local1 = CoD.Menu.GetNavigationForMenu( f239_arg3, f239_arg0.menuName ) --[[ @ 0]]
	if not f239_local0 or not f239_local1 then
		CoD.MenuNavigation[f239_arg3] = {
			{
				f239_arg0.menuName
			}
		} --[[ @ 0]]
		f239_local0, f239_local1 = CoD.Menu.GetNavigationForMenu( f239_arg3, f239_arg0.menuName ) --[[ @ 0]]
	end
	local f239_local2 = f239_arg0.userData --[[ @ 0]]
	local f239_local3 = f239_arg0.menuName --[[ @ 0]]
	local f239_local4 = f239_arg0.occludedMenu --[[ @ 0]]
	local f239_local5 = f239_arg0:getParent() --[[ @ 0]]
	f239_arg0:saveState( f239_arg3 ) --[[ @ 0]]
	f239_arg0:close() --[[ @ 0]]
	local f239_local6 = f239_arg0:replaceMenu( f239_arg1, f239_arg3, nil, f239_local2, f239_local3, f239_local4, f239_local5 ) --[[ @ 0]]
	if f239_local0 and f239_local1 then
		if f239_arg2 then
			table.insert( CoD.MenuNavigation[f239_arg3][f239_local0], f239_local1 + 1, f239_local6.menuName ) --[[ @ 0]]
		else
			CoD.MenuNavigation[f239_arg3][f239_local0][f239_local1] = f239_local6.menuName --[[ @ 0]]
		end
	end
	return f239_local6
end

function OpenPopup( f240_arg0, f240_arg1, f240_arg2, f240_arg3 )
	local f240_local0 = f240_arg0 --[[ @ 0]]
	while f240_local0 and not f240_local0.openMenu do
		f240_local0 = f240_local0:getParent() --[[ @ 0]]
	end
	local f240_local1 = f240_local0:openPopup( f240_arg1, f240_arg2, f240_arg3 ) --[[ @ 0]]
	if not CoD.MenuNavigation then
		CoD.MenuNavigation = {} --[[ @ 0]]
	end
	if not CoD.MenuNavigation[f240_arg2] then
		CoD.MenuNavigation[f240_arg2] = {} --[[ @ 0]]
	end
	local f240_local2, f240_local3 = CoD.Menu.GetNavigationForMenu( f240_arg2, f240_arg0.menuName ) --[[ @ 0]]
	if f240_local2 and f240_local3 then
		table.insert( CoD.MenuNavigation[f240_arg2], f240_local2 + 1, {
			f240_local1.menuName
		} ) --[[ @ 0]]
	else
		table.insert( CoD.MenuNavigation[f240_arg2], {
			f240_local1.menuName
		} ) --[[ @ 0]]
	end
	return f240_local1
end

function SetElementPriority( f241_arg0, f241_arg1 )
	f241_arg0:setPriority( f241_arg1 ) --[[ @ 0]]
end

function OpenPopupWithPriority( f242_arg0, f242_arg1, f242_arg2, f242_arg3 )
	local f242_local0 = OpenPopup( f242_arg0, f242_arg1, f242_arg2 ) --[[ @ 0]]
	f242_local0:setPriority( f242_arg3 ) --[[ @ 0]]
end

function OpenOverlay( f243_arg0, f243_arg1, f243_arg2, f243_arg3 )
	local f243_local0 = f243_arg0 --[[ @ 0]]
	while f243_local0 and not f243_local0.openMenu do
		f243_local0 = f243_local0:getParent() --[[ @ 0]]
	end
	local f243_local1 = f243_local0:openOverlay( f243_arg1, f243_arg2, f243_arg3 ) --[[ @ 0]]
	if not CoD.MenuNavigation then
		CoD.MenuNavigation = {} --[[ @ 0]]
	end
	if not CoD.MenuNavigation[f243_arg2] then
		CoD.MenuNavigation[f243_arg2] = {} --[[ @ 0]]
	end
	table.insert( CoD.MenuNavigation[f243_arg2], {
		f243_local1.menuName
	} ) --[[ @ 0]]
	return f243_local1
end

function DelayOpenOverlay( f244_arg0, f244_arg1, f244_arg2, f244_arg3 )
	f244_arg0:addElement( LUI.UITimer.newElementTimer( 80, true, function ()
		OpenOverlay( f244_arg0, f244_arg1, f244_arg2, f244_arg3 ) --[[ @ 0]]
	end ) ) --[[ @ 0]]
end

function OpenOverlay_NoDependency( f246_arg0, f246_arg1, f246_arg2, f246_arg3 )
	OpenOverlay( f246_arg0, f246_arg1, f246_arg2, f246_arg3 ) --[[ @ 0]]
end

function OpenSystemOverlay( f247_arg0, f247_arg1, f247_arg2, f247_arg3, f247_arg4 )
	CoD.OverlayUtility.CreateOverlay( f247_arg2, f247_arg1, f247_arg3, f247_arg2, f247_arg4 ) --[[ @ 0]]
end

function PerformOverlayBack( f248_arg0, f248_arg1 )
	if HasOverlayBackAction( f248_arg0 ) then
		f248_arg0[CoD.OverlayUtility.GoBackPropertyName]( f248_arg0, f248_arg1 ) --[[ @ 0]]
	end
end

function PerformOverlayContinue( f249_arg0, f249_arg1 )
	if HasOverlayContinueAction( f249_arg0 ) then
		f249_arg0[CoD.OverlayUtility.ContinuePropertyName]( f249_arg0, f249_arg1 ) --[[ @ 0]]
	end
end

function GoBackAndOpenOverlayOnParent( f250_arg0, f250_arg1, f250_arg2 )
	local f250_local0 = GoBack( f250_arg0, f250_arg2 ) --[[ @ 0]]
	f250_local0:openOverlay( f250_arg1, f250_arg2 ) --[[ @ 0]]
end

function OpenGenericSmallPopup( f251_arg0, f251_arg1, f251_arg2, f251_arg3, f251_arg4, f251_arg5, f251_arg6, f251_arg7 )
	return CoD.OverlayUtility.CreateOverlay( f251_arg1, f251_arg0, "GenericPopup", CoD.OverlayUtility.GenericPopupSizes.Small, f251_arg2, f251_arg3, f251_arg4, f251_arg5, f251_arg6, f251_arg7 )
end

function SendMenuResponse( f252_arg0, f252_arg1, f252_arg2, f252_arg3 )
	Engine[@"SendMenuResponse"]( f252_arg3, f252_arg1, f252_arg2, 0 ) --[[ @ 0]]
end

function SendOwnMenuResponse( f253_arg0, f253_arg1, f253_arg2 )
	Engine[@"SendMenuResponse"]( f253_arg1, f253_arg0.menuName, f253_arg2, 0 ) --[[ @ 0]]
end

function ClearMenuSavedState( f254_arg0 )
	f254_arg0:clearSavedState() --[[ @ 0]]
end

function CloseContextualMenu( f255_arg0, f255_arg1 )
	if CoD.isPC then
		CoD.PCWidgetUtility.CloseContextualMenu( f255_arg0, f255_arg1 ) --[[ @ 0]]
	end
end

function PlayClip( f256_arg0, f256_arg1, f256_arg2 )
	f256_arg0:playClip( f256_arg1 ) --[[ @ 0]]
end

function PlayClipOnElement( f257_arg0, f257_arg1, f257_arg2 )
	if f257_arg0[f257_arg1.elementName] then
		f257_arg0[f257_arg1.elementName]:playClip( f257_arg1.clipName ) --[[ @ 0]]
	end
end

function PlayClipOnListItemElement( f258_arg0, f258_arg1, f258_arg2, f258_arg3 )
	f258_arg1:playClip( f258_arg3 ) --[[ @ 0]]
end

function DelayedPlayClip( f259_arg0, f259_arg1, f259_arg2 )
	f259_arg0:addElement( LUI.UITimer.newElementTimer( f259_arg1, true, function ()
		f259_arg0:playClip( f259_arg2 ) --[[ @ 0]]
	end ) ) --[[ @ 0]]
end

function SetFocusToElement( f261_arg0, f261_arg1, f261_arg2 )
	if f261_arg0[f261_arg1] then
		f261_arg0[f261_arg1]:processEvent( {
			name = "gain_focus",
			controller = f261_arg2
		} ) --[[ @ 0]]
		f261_arg0[f261_arg1]._readyForCustomFocus = true --[[ @ 0]]
	end
end

function DelaySetFocusToElement( f262_arg0, f262_arg1, f262_arg2, f262_arg3 )
	if not f262_arg3 then
		f262_arg3 = 0 --[[ @ 0]]
	end
	f262_arg0:addElement( LUI.UITimer.newElementTimer( f262_arg3, true, function ()
		SetFocusToElement( f262_arg0, f262_arg1, f262_arg2 ) --[[ @ 0]]
	end ) ) --[[ @ 0]]
end

function SetLoseFocusToElement( f264_arg0, f264_arg1, f264_arg2 )
	if f264_arg0[f264_arg1] then
		f264_arg0[f264_arg1]:processEvent( {
			name = "lose_focus",
			controller = f264_arg2
		} ) --[[ @ 0]]
		f264_arg0[f264_arg1]._readyForCustomFocus = false --[[ @ 0]]
	end
end

function SetFocusToSelf( f265_arg0, f265_arg1 )
	f265_arg0:processEvent( {
		name = "gain_focus",
		controller = f265_arg1
	} ) --[[ @ 0]]
	f265_arg0._readyForCustomFocus = true --[[ @ 0]]
end

function SetLoseFocusToSelf( f266_arg0, f266_arg1 )
	f266_arg0:processEvent( {
		name = "lose_focus",
		controller = f266_arg1
	} ) --[[ @ 0]]
	f266_arg0._readyForCustomFocus = false --[[ @ 0]]
end

function CheckDefaultPCFocus( f267_arg0, f267_arg1, f267_arg2 )
	if not CoD.isPC then
		return 
	else
		f267_arg1:DelayedCheckDefaultFocusImpl( f267_arg0, f267_arg2, false, 0 ) --[[ @ 0]]
	end
end

function SetUsingFocusInterraction( f268_arg0, f268_arg1 )
	f268_arg0:setUsingFocusInteraction( f268_arg1 ) --[[ @ 0]]
end

function ForceCheckDefaultPCFocus( f269_arg0, f269_arg1, f269_arg2 )
	if not CoD.isPC then
		return 
	else
		f269_arg1:DelayedCheckDefaultFocusImpl( f269_arg0, f269_arg2, true, 0 ) --[[ @ 0]]
	end
end

function DelayedForceCheckDefaultPCFocus( f270_arg0, f270_arg1, f270_arg2, f270_arg3 )
	if not CoD.isPC then
		return 
	elseif not f270_arg3 then
		f270_arg3 = 0 --[[ @ 0]]
	end
	f270_arg1:DelayedCheckDefaultFocusImpl( f270_arg0, f270_arg2, true, f270_arg3 ) --[[ @ 0]]
end

function ChangeDefaultFocus( f271_arg0, f271_arg1 )
	f271_arg0.__defaultFocus = f271_arg1 --[[ @ 0]]
end

function MakeElementFocusable( f272_arg0, f272_arg1, f272_arg2 )
	if f272_arg0[f272_arg1] then
		f272_arg0[f272_arg1]:makeFocusableWithoutResettingNavigation( f272_arg2 ) --[[ @ 0]]
	end
end

function MakeElementNotFocusable( f273_arg0, f273_arg1, f273_arg2 )
	if f273_arg0[f273_arg1] then
		f273_arg0[f273_arg1]:makeNotFocusable( f273_arg2 ) --[[ @ 0]]
	end
end

function MakeFocusable( f274_arg0, f274_arg1 )
	f274_arg0:makeFocusableWithoutResettingNavigation( f274_arg1 ) --[[ @ 0]]
end

function MakeNotFocusable( f275_arg0, f275_arg1 )
	f275_arg0:makeNotFocusable( f275_arg1 ) --[[ @ 0]]
end

function SetAllowCursorMovement( f276_arg0, f276_arg1 )
	f276_arg0.ignoreCursor = not f276_arg1 --[[ @ 0]]
end

function DisableNavigation( f277_arg0, f277_arg1 )
	f277_arg0[f277_arg1].m_disableNavigation = true --[[ @ 0]]
end

function EnableNavigation( f278_arg0, f278_arg1 )
	f278_arg0[f278_arg1].m_disableNavigation = false --[[ @ 0]]
end

function SetElementCanBeNavigatedTo( f279_arg0, f279_arg1 )
	f279_arg0.m_cannotBeSelectedByDefaultNavigation = not f279_arg1 --[[ @ 0]]
end

function DisableKeyboardNavigationByElement( f280_arg0 )
	if CoD.isPC and f280_arg0 then
		f280_arg0.m_disableKeyboardNavigation = true --[[ @ 0]]
	end
end

function EnableKeyboardNavigationByElement( f281_arg0 )
	if CoD.isPC and f281_arg0 then
		f281_arg0.m_disableKeyboardNavigation = false --[[ @ 0]]
	end
end

function DisableAllMenuInput( f282_arg0, f282_arg1 )
	f282_arg0.m_disableAllButtonActions = f282_arg1 --[[ @ 0]]
end

function ClearRecordedFocus( f283_arg0, f283_arg1 )
	if CoD.isPC then
		if CoD.GetMouseFocus( f283_arg1 ) and f283_arg0:isParentOf( CoD.GetMouseFocus( f283_arg1 ) ) then
			f283_arg0:ChangeFocusedElement( f283_arg1, nil, false ) --[[ @ 0]]
		end
		f283_arg0:ChangeInputFocus( f283_arg1, nil ) --[[ @ 0]]
	else
		CoD.Menu.ClearRecordedFocus( f283_arg0, {
			controller = f283_arg1
		} ) --[[ @ 0]]
	end
end

function ClearRecordedFocusIfFocusAncestor( f284_arg0, f284_arg1, f284_arg2 )
	if CoD.GetMouseFocus( f284_arg1 ) ~= nil and CoD.Menu.IsAncestorOf( f284_arg2, CoD.GetMouseFocus( f284_arg1 ) ) then
		CoD.Menu.ClearRecordedFocus( f284_arg0, {
			controller = f284_arg1
		} ) --[[ @ 0]]
	end
end

function ClearRecordedInputFocusIfInputFocusAncestor( f285_arg0, f285_arg1, f285_arg2 )
	if CoD.isPC and f285_arg0.currentInputFocus ~= nil and CoD.Menu.IsAncestorOf( f285_arg2, f285_arg0.currentInputFocus ) then
		CoD.Menu.ClearRecordedInputFocus( f285_arg0, {
			controller = f285_arg1
		} ) --[[ @ 0]]
	end
end

function RestartMission( f286_arg0, f286_arg1, f286_arg2 )
	local f286_local0 = f286_arg0 --[[ @ 0]]
	while f286_local0 and not f286_local0.openMenu do
		f286_local0 = f286_local0:getParent() --[[ @ 0]]
	end
	CoD.OverlayUtility.CreateOverlay( f286_arg2, f286_local0, "RestartMissionPopup" ) --[[ @ 0]]
end

function EndTrainingSim( f287_arg0, f287_arg1, f287_arg2 )
	Engine[@"SendMenuResponse"]( f287_arg2, "StartMenu", "EndTrainingSim", 0 ) --[[ @ 0]]
	StartMenuResumeGame( f287_arg0, f287_arg2 ) --[[ @ 0]]
	GoBack( f287_arg0, f287_arg2 ) --[[ @ 0]]
end

function QuitGame( f288_arg0, f288_arg1, f288_arg2 )
	local f288_local0 = f288_arg0 --[[ @ 0]]
	while f288_local0 and not f288_local0.openMenu do
		f288_local0 = f288_local0:getParent() --[[ @ 0]]
	end
	CoD.OverlayUtility.CreateOverlay( f288_arg2, f288_local0, "QuitGamePopup" ) --[[ @ 0]]
end

function SaveAndQuitGame( f289_arg0, f289_arg1, f289_arg2 )
	local f289_local0 = f289_arg0 --[[ @ 0]]
	while f289_local0 and not f289_local0.openMenu do
		f289_local0 = f289_local0:getParent() --[[ @ 0]]
	end
	CoD.OverlayUtility.CreateOverlay( f289_arg2, f289_local0, "SaveAndQuitGamePopup" ) --[[ @ 0]]
end

function RestartGame( f290_arg0, f290_arg1, f290_arg2 )
	local f290_local0 = f290_arg0 --[[ @ 0]]
	while f290_local0 and not f290_local0.openMenu do
		f290_local0 = f290_local0:getParent() --[[ @ 0]]
	end
	CoD.OverlayUtility.CreateOverlay( f290_arg2, f290_local0, "RestartGamePopup" ) --[[ @ 0]]
end

function RestartGameImmediate( f291_arg0, f291_arg1 )
	Engine[@"SetDvar"]( "cl_paused", 0 ) --[[ @ 0]]
	Dvar[@"ui_busyblockingamemenu"]:set( 1 ) --[[ @ 0]]
	Engine[@"exec"]( f291_arg1, "stopControllerRumble" ) --[[ @ 0]]
	Engine[@"exec"]( f291_arg1, "fade 0 0 0 255 0 0 1" ) --[[ @ 0]]
	Engine[@"exec"]( f291_arg1, "silence" ) --[[ @ 0]]
	local f291_local0 = LobbyData.GetCurrentMenuTarget() --[[ @ 0]]
	if (Engine[@"SessionModeIsMode"]( Enum[@"hash_51DD23D27A61F09A"][@"hash_43E66A586897A605"] ) == true) or (Engine[@"SessionModeIsMode"]( Enum[@"hash_51DD23D27A61F09A"][@"hash_30B674220A0C7377"] ) == true) or f291_local0[@"id"] == LobbyData.GetLobbyMenuIDByName( LuaEnum.UI.DIRECTOR_ONLINE_ZM_CUSTOM ) then
		Engine[@"exec"]( f291_arg1, "fast_restart" ) --[[ @ 0]]
	else
		SendOwnMenuResponse( f291_arg0, f291_arg1, "restart_level_zm" ) --[[ @ 0]]
	end
end

function ResumeEndGame( f292_arg0, f292_arg1 )
	SendOwnMenuResponse( f292_arg0, f292_arg1, "resume_end_game" ) --[[ @ 0]]
end

function ChooseClass( f293_arg0, f293_arg1, f293_arg2, f293_arg3, f293_arg4 )
	f293_arg4:saveState( f293_arg2 ) --[[ @ 0]]
	if IsMultiplayer() then
		Engine[@"SendMenuResponse"]( f293_arg2, "PositionDraft", "opendraft", 0 ) --[[ @ 0]]
		f293_arg4:openMenu( CoD.CACUtility.PositionDraftMenuName, f293_arg2 ) --[[ @ 0]]
	else
		f293_arg4:openMenu( CoD.CACUtility.ChangeClassMenuName, f293_arg2 ) --[[ @ 0]]
	end
	f293_arg4:close() --[[ @ 0]]
end

function QuitGame_MP( f294_arg0, f294_arg1, f294_arg2, f294_arg3, f294_arg4 )
	if Engine[@"CanPauseGame"]() then
		Engine[@"SetDvar"]( "cl_paused", 0 ) --[[ @ 0]]
	end
	StartMenuGoBack( f294_arg4, f294_arg2 ) --[[ @ 0]]
	CoDShared.QuitGame( f294_arg2, not CoD.StartMenuUtility.GetArenaQuitDeservesExtraPenalty( f294_arg2 ) ) --[[ @ 0]]
end

function QuitGame_Raw( f295_arg0, f295_arg1, f295_arg2, f295_arg3, f295_arg4 )
	if Engine[@"CanPauseGame"]() then
		Engine[@"SetDvar"]( "cl_paused", 0 ) --[[ @ 0]]
	end
	CoDShared.QuitGame( f295_arg2 ) --[[ @ 0]]
end

function SendClientScriptDebugMenuNotify( f296_arg0, f296_arg1, f296_arg2 )
	local f296_local0 = f296_arg0.cscDebugMenuList --[[ @ 0]]
	Engine[@"SendClientScriptNotify"]( f296_arg2, "script_debug_menu", {
		param1 = Engine[@"GetModelValue"]( f296_arg1:getModel( f296_arg2, "name" ) ),
		param2 = f296_arg1.gridInfoTable.zeroBasedIndex + 1
	} ) --[[ @ 0]]
end

function SendClientScriptDebugMenuCloseMenuNotify( f297_arg0, f297_arg1, f297_arg2 )
	Engine[@"SendClientScriptNotify"]( f297_arg2, "script_debug_menu", {
		param1 = "close"
	} ) --[[ @ 0]]
end

function GetPlayerCalloutNameColor( f298_arg0, f298_arg1 )
	local f298_local0 = Enum[@"hash_197A8DF5F2FA8BD5"][@"hash_2F51088437AB5AF5"] --[[ @ 0]]
	if CoD.IsShoutcaster( f298_arg0 ) then
		local f298_local1 = Engine[@"GetTeamID"]( f298_arg0, f298_arg1 ) --[[ @ 0]]
		local f298_local2 = LuaDefine.INVALID_CLIENT_INDEX --[[ @ 0]]
		local f298_local3 = Engine[@"GetModel"]( Engine[@"GetModelForController"]( f298_arg0 ), "deadSpectator.playerIndex" ) --[[ @ 0]]
		if f298_local3 then
			f298_local2 = Engine[@"GetModelValue"]( f298_local3 ) --[[ @ 0]]
		end
		if f298_local2 == f298_arg1 then
			f298_local0 = Enum[@"hash_197A8DF5F2FA8BD5"][@"hash_2207FC901B92D0D9"] --[[ @ 0]]
		elseif f298_local1 == Enum[@"team_t"][@"hash_42A34B055ADD98AB"] then
			f298_local0 = Enum[@"hash_197A8DF5F2FA8BD5"][@"hash_1482A50BDDD83EAD"] --[[ @ 0]]
		else
			f298_local0 = Enum[@"hash_197A8DF5F2FA8BD5"][@"hash_211F2F2575C9BB22"] --[[ @ 0]]
		end
		return f298_local0
	elseif Engine[@"GetClientNum"]( f298_arg0 ) == f298_arg1 then
		f298_local0 = Enum[@"hash_197A8DF5F2FA8BD5"][@"hash_2207FC901B92D0D9"] --[[ @ 0]]
	elseif Engine[@"GetTeamID"]( f298_arg0, f298_arg1 ) == CoD.TeamUtility.GetTeamID( f298_arg0 ) then
		f298_local0 = Enum[@"hash_197A8DF5F2FA8BD5"][@"hash_14D3BDE8AD3D7704"] --[[ @ 0]]
	end
	return f298_local0
end

function SetMPScoreText( f299_arg0, f299_arg1, f299_arg2, f299_arg3 )
	local f299_local0 = CoD.GetScriptNotifyData( f299_arg3 ) --[[ @ 0]]
	local f299_local1 = Engine[@"GetIString"]( f299_local0[1], "CS_LOCALIZED_STRINGS" ) --[[ @ 0]]
	local f299_local2 = f299_local0[2] --[[ @ 0]]
	if Engine[@"hash_2A55C3ACD0D2BCF0"]() == false or CoD.isZombie == false then
		f299_arg1:AddCenterScore( f299_local1, f299_local2, f299_local0[4] ) --[[ @ 0]]
	end
end

function SetupStageResultsWidget( f300_arg0, f300_arg1 )
	local f300_local0 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f300_local0:create( "StageResults" ) --[[ @ 0]]
	local f300_local1 = f300_local0.StageResults:create( "winningTeam" ) --[[ @ 0]]
	f300_local1:set( Enum[@"team_t"][@"hash_697263B3C1ABADF7"] ) --[[ @ 0]]
	f300_local1 = f300_local0.StageResults:create( "outcomeText" ) --[[ @ 0]]
	f300_local1:set( @"hash_0" ) --[[ @ 0]]
	f300_arg0:subscribeToGlobalModel( f300_arg1, "PerController", "scriptNotify", function ( model )
		if Engine[@"GetModelValue"]( model ) == @"hash_321BD3EC422E5463" then
			local f301_local0 = CoD.GetScriptNotifyData( model ) --[[ @ 0]]
			local f301_local1 = f301_local0[1] --[[ @ 0]]
			f300_local0.StageResults.winningTeam:set( f301_local1 ) --[[ @ 0]]
			local f301_local2 = Engine[@"GetIString"]( f301_local0[2], "CS_LOCALIZED_STRINGS" ) --[[ @ 0]]
			local f301_local3 = Engine[@"GetIString"]( f301_local0[3], "CS_LOCALIZED_STRINGS" ) --[[ @ 0]]
			if CoD.TeamUtility.GetTeamID( f300_arg1 ) == f301_local1 then
				f301_local3 = f301_local2 --[[ @ 0]]
			end
			f300_local0.StageResults.outcomeText:set( f301_local3 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
end

function PopulateCompletionTimeField( f302_arg0, f302_arg1 )
	local f302_local0, f302_local1 = CoD.ZombieUtility.GetStats( f302_arg1 ) --[[ @ 0]]
	assert( f302_local1 ~= nil ) --[[ @ 0]]
	local f302_local2 = @"hash_336A23C0EE93A18" --[[ @ 0]]
	local f302_local3 = nil --[[ @ 0]]
	local f302_local4 = Engine[@"hash_36F8027A8BC75673"]() --[[ @ 0]]
	local f302_local5 = Engine[@"hash_3E67E7253CC272C9"]() --[[ @ 0]]
	assert( f302_local4 ~= nil ) --[[ @ 0]]
	assert( f302_local5 ~= nil ) --[[ @ 0]]
	f302_local0 = f302_local0.PlayerStatsByMap[f302_local5].statsByGameType[f302_local4].stats --[[ @ 0]]
	f302_local3 = f302_local1.AfterActionReportStats.gameLength:get() --[[ @ 0]]
	local f302_local6 = nil --[[ @ 0]]
	if f302_local0 ~= nil then
		f302_local6 = f302_local0.FASTEST_TIME_TO_COMPLETE_ROUND_30.StatValue:get() --[[ @ 0]]
		if f302_local6 and (not (f302_local6 ~= 0 or f302_local3 == 0) or f302_local6 ~= 0 and f302_local3 ~= 0 and f302_local3 < f302_local6) then
			f302_local2 = @"hash_2001F78DD6B35E3B" --[[ @ 0]]
		end
	end
	f302_arg0:setText( Engine[@"hash_4F9F1239CFD921FE"]( f302_local2, NumberAsTime( f302_local3 ) ) ) --[[ @ 0]]
end

function SetupObjectiveNotificationWidget( f303_arg0, f303_arg1 )
	f303_arg0.ignoreCurrentStateCheck = true --[[ @ 0]]
	local f303_local0 = Engine[@"GetModelForController"]( f303_arg1 ) --[[ @ 0]]
	local f303_local1 = f303_local0:create( "showGametypeObjectiveHint" ) --[[ @ 0]]
	f303_local1:set( false ) --[[ @ 0]]
	f303_local1 = f303_local0:create( "gametypeObjectiveHint" ) --[[ @ 0]]
	f303_local1:set( @"hash_0" ) --[[ @ 0]]
	f303_local1 = f303_local0:create( "gametypeObjective" ) --[[ @ 0]]
	f303_local1:set( @"hash_0" ) --[[ @ 0]]
	f303_local1 = f303_local0:create( "gametypeAttackers" ) --[[ @ 0]]
	f303_local1:set( false ) --[[ @ 0]]
	f303_local1 = f303_local0:create( "gameTypeObjectiveIcon" ) --[[ @ 0]]
	f303_local1:set( "" ) --[[ @ 0]]
	f303_arg0:subscribeToGlobalModel( f303_arg1, "PerController", "scriptNotify", function ( model )
		local f304_local0 = Engine[@"GetModelValue"]( model ) --[[ @ 0]]
		if f304_local0 == @"show_gametype_objective_hint" then
			local f304_local1 = {
				controller = f303_arg1,
				name = f304_local0,
				data = CoD.GetScriptNotifyData( model )
			} --[[ @ 0]]
			f303_local0.gametypeObjectiveHint:set( Engine[@"GetIString"]( f304_local1.data[1], "CS_LOCALIZED_STRINGS" ) ) --[[ @ 0]]
			local f304_local2 = f304_local1.data[2] --[[ @ 0]]
			if f304_local2 then
				f304_local2 = Engine[@"GetIString"]( f304_local1.data[2], "CS_LOCALIZED_STRINGS" ) --[[ @ 0]]
			end
			f303_local0.gametypeAttackers:set( f304_local1.data[3] == 1 ) --[[ @ 0]]
			local f304_local3 = f304_local2 and CoD.WarUtility.MissionInfo[f304_local2] --[[ @ 0]]
			if f304_local3 then
				f303_local0.gametypeObjective:set( f304_local3.header ) --[[ @ 0]]
				f303_local0.gametypeObjectiveIcon:set( f304_local3.icon ) --[[ @ 0]]
			end
			if not f303_local0.showGametypeObjectiveHint:set( true ) then
				f303_local0.showGametypeObjectiveHint:forceNotifySubscriptions() --[[ @ 0]]
			end
		end
	end ) --[[ @ 0]]
end

function TryBootHUD( f305_arg0, f305_arg1 )
	if not f305_arg0.hasBooted then
		f305_arg0:addElement( LUI.UITimer.new( f305_arg1, "hud_boot", true, f305_arg0 ) ) --[[ @ 0]]
	end
end

function AddKillstreakReceivedNotification( f306_arg0, f306_arg1, f306_arg2, f306_arg3 )
	if IsCodCaster( f306_arg2 ) then
		if not IsCodCasterProfileValueEqualTo( f306_arg2, "shoutcaster_ds_scorestreaks_notification", 1 ) then
			return 
		elseif CoD.SafeGetModelValue( Engine[@"GetModelForController"]( f306_arg2 ), "CodCaster.showLoadout" ) then
			return 
		end
	end
	if f306_arg1.appendNotification ~= nil then
		local f306_local0 = CoD.GetScriptNotifyData( f306_arg3 ) --[[ @ 0]]
		local f306_local1 = f306_local0[1] --[[ @ 0]]
		local f306_local2 = f306_local0[3] --[[ @ 0]]
		local f306_local3 = nil --[[ @ 0]]
		for f306_local7, f306_local8 in ipairs( CoD.CACUtility.KillstreakNameList ) --[[ @ 0]] do
			local f306_local9 = CoD.ScorestreakSelectUtility.GetEquippedItemIndexForScorestreakSlot( f306_arg2, f306_local8, Engine[@"CurrentSessionMode"]() ) --[[ @ 0]]
			local f306_local10 = Engine[@"GetModel"]( Engine[@"GetModelForController"]( f306_arg2 ), "killstreaks.killstreak" .. f306_local7 - 1 .. ".bindingKBM" ) --[[ @ 0]]
			if f306_local10 ~= nil then
				f306_local3 = f306_local10:get() --[[ @ 0]]
			else
				f306_local3 = false --[[ @ 0]]
			end
			if f306_local1 == f306_local9 then
				break
			end
		end
		if f306_local2 == 1 then
			f306_local4 = Engine[@"GetModel"]( Engine[@"GetModelForController"]( f306_arg2 ), "killstreaks.killstreak" .. #CoD.CACUtility.KillstreakNameList - 1 .. ".bindingKBM" ) --[[ @ 0]]
			if f306_local4 ~= nil then
				f306_local3 = f306_local4:get() --[[ @ 0]]
			else
				f306_local3 = false --[[ @ 0]]
			end
		end
		if IsGameTypeCombatTraining() then
			f306_local4 = Engine[@"GetModel"]( Engine[@"GetModelForController"]( f306_arg2 ), "killstreaks.killstreak0.bindingKBM" ) --[[ @ 0]]
			f306_local3 = f306_local4:get() --[[ @ 0]]
		end
		f306_arg1:appendNotification( {
			title = Engine[@"ToUpper"]( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_554EB85A28216D99", Engine[@"hash_4F9F1239CFD921FE"]( Engine[@"GetItemName"]( f306_local1 ) ) ) ),
			image = RegisterImage( Engine[@"GetItemImage"]( f306_local1 ) ),
			type = "Killstreak",
			bindingKBM = f306_local3,
			priority = 0
		} ) --[[ @ 0]]
	end
end

function AddHeroAbilityReceivedNotification( f307_arg0, f307_arg1, f307_arg2, f307_arg3 )
	if IsCodCaster( f307_arg2 ) then
		if not IsCodCasterProfileValueEqualTo( f307_arg2, "shoutcaster_ds_specialist_notification", 1 ) then
			return 
		elseif CoD.SafeGetModelValue( Engine[@"GetModelForController"]( f307_arg2 ), "CodCaster.showLoadout" ) then
			return 
		end
	end
	if f307_arg1.appendNotification ~= nil then
		local f307_local0 = CoD.GetScriptNotifyData( f307_arg3 ) --[[ @ 0]]
		local f307_local1 = f307_local0[1] --[[ @ 0]]
		local f307_local2 = Engine[@"GetItemName"]( f307_local1 ) --[[ @ 0]]
		local f307_local3 = Engine[@"ToUpper"]( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_6EE9796129C8602E", Engine[@"ToUpper"]( Engine[@"hash_4F9F1239CFD921FE"]( f307_local2 ) ) ) ) --[[ @ 0]]
		local f307_local4 = Engine[@"hash_4F9F1239CFD921FE"]( @"hash_7C0031E0C32601B3" ) --[[ @ 0]]
		if f307_local2 == @"hash_11A5D41D6A08D74E" then
			f307_local4 = Engine[@"hash_4F9F1239CFD921FE"]( @"hash_286F1315B244AA64" ) --[[ @ 0]]
		end
		if Engine[@"hash_2A79B18C6B32DEA3"]( Engine[@"hash_7B98952F69D937F9"]( f307_local1 ) ) then
			f307_local4 = Engine[@"hash_4F9F1239CFD921FE"]( @"hash_41F4597DF81CF039" ) --[[ @ 0]]
		end
		f307_arg1:appendNotification( {
			title = f307_local3,
			description = f307_local4,
			type = "Ability",
			priority = 1
		} ) --[[ @ 0]]
	end
end

function AddSlotUnlockedNotification( f308_arg0, f308_arg1, f308_arg2, f308_arg3 )
	if not IsGametypeSettingsValue( "escalationEnabled", 1 ) then
		return 
	elseif IsCodCaster( f308_arg2 ) then
		if not IsCodCasterProfileValueEqualTo( f308_arg2, "shoutcaster_ds_scorestreaks_notification", 1 ) then
			return 
		elseif CoD.SafeGetModelValue( Engine[@"GetModelForController"]( f308_arg2 ), "CodCaster.showLoadout" ) then
			return 
		end
	end
	if f308_arg1.appendNotification ~= nil then
		local f308_local0 = CoD.GetScriptNotifyData( f308_arg3 ) --[[ @ 0]]
		local f308_local1 = Engine[@"GetUnlockableInfoByIndex"]( f308_local0[1] ) --[[ @ 0]]
		local f308_local2 --[[ @ 0]]
		if f308_local1 then
			f308_local2 = f308_local1.name --[[ @ 0]]
			if not f308_local2 then
			
			else
				f308_arg1:appendNotification( {
					title = Engine[@"ToUpper"]( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_B966AF8CFF52CEE", f308_local2 ) ),
					description = @"hash_0",
					type = "Slot",
					priority = 0
				} ) --[[ @ 0]]
			end
		end
		f308_local2 = "" --[[ @ 0]]
	end
end

function AddZombieNotification( f309_arg0, f309_arg1, f309_arg2, f309_arg3 )
	if not Engine[@"IsVisibilityBitSet"]( f309_arg2, Enum[@"UIVisibilityBit"][@"hash_7ADC477DDE486DD7"] ) then
		return 
	else
		local f309_local0 = CoD.GetScriptNotifyData( f309_arg3 ) --[[ @ 0]]
		f309_arg1:appendNotification( {
			clip = "TextandImageBasic_Story" .. Engine[@"hash_6BBE3328FE08B8C7"]() or 0 + 1,
			title = Engine[@"Localize"]( Engine[@"GetIString"]( f309_local0[1], "CS_LOCALIZED_STRINGS" ) ),
			description = @"hash_0"
		} ) --[[ @ 0]]
	end
end

function AddZombieRushNotification( f310_arg0, f310_arg1, f310_arg2, f310_arg3 )
	local f310_local0 = CoD.GetScriptNotifyData( f310_arg2 ) --[[ @ 0]]
	f310_arg1:appendNotification( {
		clip = "TextandImage" .. f310_arg3,
		title = Engine[@"Localize"]( Engine[@"GetIString"]( f310_local0[1], "CS_LOCALIZED_STRINGS" ) ),
		description = @"hash_0"
	} ) --[[ @ 0]]
end

function AddZombieBGBNotification( f311_arg0, f311_arg1, f311_arg2, f311_arg3 )
	if not Engine[@"IsVisibilityBitSet"]( f311_arg2, Enum[@"UIVisibilityBit"][@"hash_7ADC477DDE486DD7"] ) then
		return 
	else
		local f311_local0 = CoD.GetScriptNotifyData( f311_arg3 ) --[[ @ 0]]
		local f311_local1 = f311_local0[1] --[[ @ 0]]
		f311_arg1:appendNotification( {
			clip = "TextandImageBGB",
			title = Engine[@"hash_4F9F1239CFD921FE"]( Engine[@"GetItemName"]( f311_local1, Enum[@"hash_6EB546760F890D2"][@"hash_648CD0338EE0B3AE"], Enum[@"eModes"][@"hash_73723205FAE52C4A"] ) ),
			description = Engine[@"hash_4F9F1239CFD921FE"]( Engine[@"GetItemDesc"]( f311_local1, Enum[@"hash_6EB546760F890D2"][@"hash_648CD0338EE0B3AE"], Enum[@"eModes"][@"hash_73723205FAE52C4A"] ) ),
			bgbImage = RegisterImage( GetItemImageForIndex( f311_local1, Enum[@"hash_6EB546760F890D2"][@"hash_648CD0338EE0B3AE"], Enum[@"eModes"][@"hash_73723205FAE52C4A"] ) )
		} ) --[[ @ 0]]
	end
end

function AddZombieBGBTokenNotification( f312_arg0, f312_arg1, f312_arg2, f312_arg3 )
	if not Engine[@"IsVisibilityBitSet"]( f312_arg2, Enum[@"UIVisibilityBit"][@"hash_7ADC477DDE486DD7"] ) then
		return 
	else
		f312_arg0:playSound( "zmb_bgb_token" ) --[[ @ 0]]
		f312_arg1:appendNotification( {
			clip = "TextandImageBGBToken",
			title = Engine[@"hash_4F9F1239CFD921FE"]( @"hash_38BDEBA40AFA3B45" ),
			description = Engine[@"hash_4F9F1239CFD921FE"]( @"hash_7B2B401DDF606C74" ),
			bgbImage = RegisterImage( @"t7_hud_zm_vial_256" )
		} ) --[[ @ 0]]
	end
end

function CreatePrematchDraft( f313_arg0, f313_arg1, f313_arg2 )
	if not f313_arg0.PositionDraft and not Engine[@"hash_2A55C3ACD0D2BCF0"]() then
		local f313_local0 = "PositionDraft_" .. string.upper( CoD.ModeToModeString( Engine[@"CurrentSessionMode"]() ) ) --[[ @ 0]]
		if not CoD.Menu.DoesMenuExist( f313_local0 ) then
			f313_local0 = "PositionDraft" --[[ @ 0]]
		end
		local f313_local1 = OpenOverlay( f313_arg0, f313_local0, f313_arg1 ) --[[ @ 0]]
		f313_local1:setAlpha( 0.01 ) --[[ @ 0]]
		f313_arg0:sendInitializationEvents( f313_arg1, f313_local1 ) --[[ @ 0]]
		f313_arg0.PositionDraft = f313_local1 --[[ @ 0]]
		LUI.OverrideFunction_CallOriginalSecond( f313_arg0, "close", function ( element )
			if element.PositionDraft then
				element.PositionDraft:close() --[[ @ 0]]
			end
		end ) --[[ @ 0]]
		LUI.OverrideFunction_CallOriginalSecond( f313_local1, "close", function ()
			if f313_arg0.PositionDraft then
				f313_arg0.PositionDraft = nil --[[ @ 0]]
			end
		end ) --[[ @ 0]]
		f313_local1:addElement( LUI.UITimer.newElementTimer( 0, true, function ()
			f313_local1:beginAnimation( 500 ) --[[ @ 0]]
			f313_local1:setAlpha( 1 ) --[[ @ 0]]
		end ) ) --[[ @ 0]]
	end
	Engine[@"SetModelValue"]( Engine[@"CreateModel"]( Engine[@"GetModelForController"]( f313_arg1 ), "isInPrematchPeriod" ), 1 ) --[[ @ 0]]
end

function CreatePrematchTimer( f317_arg0, f317_arg1, f317_arg2 )
	local f317_local0 = CoD.GetScriptNotifyData( f317_arg2 ) --[[ @ 0]]
	local f317_local1 = f317_local0[1] --[[ @ 0]]
	local f317_local2 = f317_local0[2] == 1 --[[ @ 0]]
	if f317_local1 and not f317_arg0.PrematchCountdown then
		local f317_local3 = CoD.PrematchCountdown.new( f317_arg0, f317_arg1, 0, 0, 0, CoD.PrematchCountdown.__defaultWidth, 0, 0, 0, CoD.PrematchCountdown.__defaultHeight ) --[[ @ 0]]
		f317_local3:setupCountdown( f317_arg1, f317_local1, f317_local2 ) --[[ @ 0]]
		f317_local3:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
		f317_local3:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
		if f317_arg0.WaypointContainer then
			f317_local3:addElementBefore( f317_arg0.WaypointContainer ) --[[ @ 0]]
		else
			f317_arg0:addElement( f317_local3 ) --[[ @ 0]]
		end
		f317_arg0:sendInitializationEvents( f317_arg1, f317_local3 ) --[[ @ 0]]
		f317_arg0.PrematchCountdown = f317_local3 --[[ @ 0]]
		LUI.OverrideFunction_CallOriginalSecond( f317_arg0, "close", function ( element )
			if element.PrematchCountdown then
				element.PrematchCountdown:close() --[[ @ 0]]
			end
		end ) --[[ @ 0]]
	end
	Engine[@"SetModelValue"]( Engine[@"CreateModel"]( Engine[@"GetModelForController"]( f317_arg1 ), "isInPrematchPeriod" ), 1 ) --[[ @ 0]]
end

function CreatePrematchTimer_Minimize( f319_arg0, f319_arg1, f319_arg2, f319_arg3, f319_arg4 )
	local f319_local0 = CoD.GetScriptNotifyData( f319_arg3 ) --[[ @ 0]]
	local f319_local1 = f319_local0[1] --[[ @ 0]]
	local f319_local2 = f319_local0[2] == 1 --[[ @ 0]]
	local f319_local3 = f319_local0[3] --[[ @ 0]]
	local f319_local4 = Engine[@"GetModelForController"]( f319_arg2 ) --[[ @ 0]]
	f319_local4 = f319_local4.hudItems:create( "prematchTimerUsePandemicLabel" ) --[[ @ 0]]
	if f319_local3 then
		f319_local4:set( true ) --[[ @ 0]]
	else
		f319_local4:set( false ) --[[ @ 0]]
	end
	if f319_local1 and not f319_arg0.PrematchCountdown then
		local f319_local5 = CoD.PrematchCountdownMinimize.new( f319_arg1, f319_arg2, 0, 0, 0, CoD.PrematchCountdownMinimize.__defaultWidth, 0, 0, 0, CoD.PrematchCountdownMinimize.__defaultHeight ) --[[ @ 0]]
		f319_local5:setupCountdown( f319_arg2, f319_local1, f319_local2, f319_arg4 ) --[[ @ 0]]
		f319_local5:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
		f319_local5:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
		f319_arg0:addElement( f319_local5 ) --[[ @ 0]]
		f319_arg1:sendInitializationEvents( f319_arg2, f319_local5 ) --[[ @ 0]]
		f319_arg0.PrematchCountdown = f319_local5 --[[ @ 0]]
		LUI.OverrideFunction_CallOriginalSecond( f319_arg0, "close", function ( element )
			if element.PrematchCountdown then
				element.PrematchCountdown:close() --[[ @ 0]]
			end
		end ) --[[ @ 0]]
	end
	local f319_local5 = Engine[@"GetModelForController"]( f319_arg2 ) --[[ @ 0]]
	local f319_local6 = f319_local5:create( "isInPrematchPeriod" ) --[[ @ 0]]
	f319_local6:set( 1 ) --[[ @ 0]]
end

function CreateHoldingPenNotification( f321_arg0, f321_arg1, f321_arg2, f321_arg3, f321_arg4 )
	local f321_local0 = CoD.GetScriptNotifyData( f321_arg3 ) --[[ @ 0]]
	if not f321_arg0.HoldingPenNotification then
		local f321_local1 = CoD.HoldingPenNotification.new( f321_arg1, f321_arg2, 0, 0, 0, CoD.HoldingPenNotification.__defaultWidth, 0, 0, 0, CoD.HoldingPenNotification.__defaultHeight ) --[[ @ 0]]
		f321_local1:setupHoldingPenNotification( f321_arg2, f321_arg4 ) --[[ @ 0]]
		f321_local1:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
		f321_local1:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
		f321_arg0:addElement( f321_local1 ) --[[ @ 0]]
		f321_arg1:sendInitializationEvents( f321_arg2, f321_local1 ) --[[ @ 0]]
		f321_local1.PrematchCountdownNumbers.GlowPanel:setAlpha( 0 ) --[[ @ 0]]
		f321_local1.PrematchCountdownNumbers.Image0:setAlpha( 0 ) --[[ @ 0]]
		f321_arg0.HoldingPenNotification = f321_local1 --[[ @ 0]]
		LUI.OverrideFunction_CallOriginalSecond( f321_arg0, "close", function ( element )
			if element.HoldingPenNotification then
				element.HoldingPenNotification:close() --[[ @ 0]]
			end
		end ) --[[ @ 0]]
	end
end

function SelectItemIfPossible( f323_arg0, f323_arg1, f323_arg2 )
	if f323_arg1.gridInfoTable then
		f323_arg1.gridInfoTable.parentGrid:setActiveItem( f323_arg1 ) --[[ @ 0]]
	end
end

function CallElementModel( f324_arg0, f324_arg1, f324_arg2, f324_arg3 )
	if f324_arg1 then
		local f324_local0 = f324_arg1:getModel( f324_arg2, f324_arg3 ) --[[ @ 0]]
		if f324_local0 then
			local f324_local1 = f324_local0:get() --[[ @ 0]]
			if f324_local1 then
				f324_local1( f324_arg0, f324_arg1, f324_arg2 ) --[[ @ 0]]
			end
		end
	end
end

function ProcessListActionInternal( f325_arg0, f325_arg1, f325_arg2, f325_arg3, f325_arg4, f325_arg5 )
	if f325_arg1.disabled then
		return 
	end
	local f325_local0 = f325_arg1:getModel( f325_arg2, f325_arg4 ) --[[ @ 0]]
	local f325_local1 = f325_arg1:getModel( f325_arg2, "param" ) --[[ @ 0]]
	local f325_local2, f325_local3 = nil --[[ @ 0]]
	if f325_local0 then
		f325_local2 = Engine[@"GetModelValue"]( f325_local0 ) --[[ @ 0]]
		if f325_local1 then
			f325_local3 = Engine[@"GetModelValue"]( f325_local1 ) --[[ @ 0]]
		end
	else
		f325_local2 = f325_arg5 --[[ @ 0]]
		f325_local3 = f325_arg1.actionParam --[[ @ 0]]
	end
	if f325_local2 then
		local f325_local4 = f325_arg1:getParentMenu() --[[ @ 0]]
		if f325_arg1.gridInfoTable then
			f325_local4 = f325_arg1.gridInfoTable.parentGrid.menu --[[ @ 0]]
		end
		f325_local2( f325_arg0, f325_arg1, f325_arg2, f325_local3, f325_local4 ) --[[ @ 0]]
	end
end

function ProcessListAction( f326_arg0, f326_arg1, f326_arg2, f326_arg3 )
	ProcessListActionInternal( f326_arg0, f326_arg1, f326_arg2, f326_arg3, "action", f326_arg1.action ) --[[ @ 0]]
end

function ProcessListSecondaryAction( f327_arg0, f327_arg1, f327_arg2, f327_arg3 )
	ProcessListActionInternal( f327_arg0, f327_arg1, f327_arg2, f327_arg3, "secondaryAction", f327_arg1.secondaryAction ) --[[ @ 0]]
end

function ProcessListLockedAction( f328_arg0, f328_arg1, f328_arg2, f328_arg3 )
	ProcessListActionInternal( f328_arg0, f328_arg1, f328_arg2, f328_arg3, "lockedAction", f328_arg1.lockedAction ) --[[ @ 0]]
end

function ProcessClassOptionAction( f329_arg0, f329_arg1, f329_arg2, f329_arg3 )
	if f329_arg1.disabled then
		return 
	end
	local f329_local0, f329_local1 = nil --[[ @ 0]]
	f329_local0 = f329_arg3.actionButtonFn --[[ @ 0]]
	f329_local1 = f329_arg1.actionParam --[[ @ 0]]
	if f329_local0 then
		f329_local0( f329_arg0, f329_arg1, f329_arg2, f329_local1, f329_arg1.gridInfoTable.parentGrid.menu ) --[[ @ 0]]
	end
end

function ProcessKeyboardCompleteAction( f330_arg0, f330_arg1, f330_arg2, f330_arg3 )
	if f330_arg1.disabled then
		return 
	end
	local f330_local0, f330_local1 = nil --[[ @ 0]]
	f330_local0 = f330_arg3.keyboardCompleteFn --[[ @ 0]]
	if f330_local0 then
		f330_local0( f330_arg0, f330_arg1, f330_arg2, f330_arg3 ) --[[ @ 0]]
	end
end

function UpdateDataSource( f331_arg0, f331_arg1, f331_arg2 )
	f331_arg1:updateDataSource() --[[ @ 0]]
end

function UpdateElementDataSource( f332_arg0, f332_arg1 )
	if f332_arg0[f332_arg1] then
		f332_arg0[f332_arg1]:updateDataSource() --[[ @ 0]]
	end
end

function SetAsListVerticalCounter( f333_arg0, f333_arg1, f333_arg2 )
	if f333_arg0[f333_arg2] then
		f333_arg0[f333_arg2]:addCustomVerticalCounter( f333_arg1 ) --[[ @ 0]]
	end
end

function SetAsListHorizontalCounter( f334_arg0, f334_arg1, f334_arg2 )
	if f334_arg0[f334_arg2] then
		f334_arg0[f334_arg2]:addCustomHorizontalCounter( f334_arg1 ) --[[ @ 0]]
	end
end

function SetAsGridHorizontalCounter( f335_arg0, f335_arg1 )
	if f335_arg1.addCustomHorizontalCounter then
		f335_arg1:addCustomHorizontalCounter( f335_arg0 ) --[[ @ 0]]
	end
end

function NavigateScrollButtonUp( f336_arg0 )
	if f336_arg0 and f336_arg0.listWidget then
		f336_arg0.listWidget:pageUp() --[[ @ 0]]
	end
end

function NavigateScrollButtonDown( f337_arg0 )
	if f337_arg0 and f337_arg0.listWidget then
		f337_arg0.listWidget:pageDown() --[[ @ 0]]
	end
end

function NavigateScrollButtonLeft( f338_arg0 )
	if f338_arg0 and f338_arg0.listWidget then
		f338_arg0.listWidget:pageLeft() --[[ @ 0]]
	end
end

function NavigateScrollButtonRight( f339_arg0 )
	if f339_arg0 and f339_arg0.listWidget then
		f339_arg0.listWidget:pageRight() --[[ @ 0]]
	end
end

function ForceListDispatchMouseEvents( f340_arg0 )
	f340_arg0:setForceMouseEventDispatch( true ) --[[ @ 0]]
	f340_arg0.itemStencil:setForceMouseEventDispatch( true ) --[[ @ 0]]
end

function SetAlpha( f341_arg0, f341_arg1 )
	f341_arg0:setAlpha( f341_arg1 ) --[[ @ 0]]
end

function HideWidget( f342_arg0 )
	f342_arg0:setAlpha( 0 ) --[[ @ 0]]
end

function ShowWidget( f343_arg0 )
	f343_arg0:setAlpha( 1 ) --[[ @ 0]]
end

function DisableWidget( f344_arg0, f344_arg1, f344_arg2 )
	f344_arg0[f344_arg1].m_disableNavigation = true --[[ @ 0]]
	f344_arg0[f344_arg1]:makeNotFocusable( f344_arg2 ) --[[ @ 0]]
	f344_arg0[f344_arg1]:setAlpha( 0 ) --[[ @ 0]]
end

function ReplaceElementWithFake( f345_arg0, f345_arg1 )
	f345_arg0[f345_arg1]:close() --[[ @ 0]]
	f345_arg0[f345_arg1] = LUI.UIElement.createFake() --[[ @ 0]]
end

function ChangeClass( f346_arg0, f346_arg1, f346_arg2, f346_arg3 )
	if not IsInGame() then
		f346_arg0:saveState( f346_arg3 ) --[[ @ 0]]
	end
	f346_arg1.menuResponseSent = true --[[ @ 0]]
	local f346_local0 = Engine[@"GetModelValue"]( f346_arg2:getModel( f346_arg3, "classNum" ), nil ) --[[ @ 0]]
	local f346_local1 = Engine[@"GetModelValue"]( f346_arg2:getModel( f346_arg3, "defaultClassName" ), nil ) --[[ @ 0]]
	if f346_local0 == nil and IsIntDvarNonZero( "mp_prototype" ) and IsMultiplayer() then
		f346_local0 = f346_arg2.characterIndex --[[ @ 0]]
	end
	CoD.CACUtility.ChangeClass( f346_arg3, f346_local0, f346_local1 ) --[[ @ 0]]
end

function SetBubblegumPackIndex( f347_arg0, f347_arg1, f347_arg2 )
	local f347_local0 = f347_arg1:getModel() --[[ @ 0]]
	CoD.perController[f347_arg2].bgbPackIndex = f347_arg1.bgbPackIndex --[[ @ 0]]
	CoD.perController[f347_arg2].bubbleGumPackModel = f347_local0 --[[ @ 0]]
	f347_arg0:setModel( f347_local0, f347_arg2 ) --[[ @ 0]]
end

function SetMenuCustomClassData( f348_arg0, f348_arg1, f348_arg2 )
	local f348_local0 = f348_arg1:getModel() --[[ @ 0]]
	CoD.perController[f348_arg2].classNum = f348_arg1.classNum --[[ @ 0]]
	CoD.perController[f348_arg2].classModel = f348_local0 --[[ @ 0]]
	f348_arg0:setModel( f348_local0, f348_arg2 ) --[[ @ 0]]
end

function PrestigeWeapon( f349_arg0, f349_arg1, f349_arg2 )
	local f349_local0 = f349_arg1:getModel( f349_arg2, "itemIndex" ) --[[ @ 0]]
	if f349_local0 then
		CoD.OverlayUtility.CreateOverlay( f349_arg2, f349_arg0, "PrestigeWeapon", f349_arg2, f349_local0 ) --[[ @ 0]]
	end
end

function chooseClass_TabMPClassesListLeft( f350_arg0, f350_arg1 )
	if not f350_arg0.ClassSetTabWidget then
		return 
	else
		return f350_arg0.ClassSetTabWidget.Internal.Tabs:navigateItemLeft()
	end
end

function chooseClass_TabMPClassesListRight( f351_arg0, f351_arg1 )
	if not f351_arg0.ClassSetTabWidget then
		return 
	else
		return f351_arg0.ClassSetTabWidget.Internal.Tabs:navigateItemRight()
	end
end

function MarkCACPaintshopDataDirty( f352_arg0, f352_arg1 )
	Engine[@"hash_6F5E84EE46588907"]( f352_arg1, false ) --[[ @ 0]]
end

function RemoveOverflowItemFromClass( f353_arg0, f353_arg1, f353_arg2, f353_arg3 )
	local f353_local0 = CoD.BaseUtility.GetMenuModel( f353_arg0 ) --[[ @ 0]]
	local f353_local1 = CoD.BaseUtility.GetMenuSessionMode( f353_arg0 ) --[[ @ 0]]
	local f353_local2 = f353_local0.classNum:get() --[[ @ 0]]
	local f353_local3 = f353_arg1.acceptData.slotName --[[ @ 0]]
	local f353_local4 = f353_arg1.acceptData.itemIndex --[[ @ 0]]
	local f353_local5 = CoD.CACUtility.GetUsedAllocation( f353_arg3, f353_local2, f353_local1 ) --[[ @ 0]]
	local f353_local6 = f353_arg2:getModel() --[[ @ 0]]
	f353_local6 = f353_local6.loadoutSlot:get() --[[ @ 0]]
	local f353_local7 = LUI.splitString( f353_local6, "." ) --[[ @ 0]]
	local f353_local8 = CoD.SafeGetModelValue( f353_local0[f353_local6], "itemIndex" ) --[[ @ 0]]
	local f353_local9 = LUI.splitString( f353_local3, "." ) --[[ @ 0]]
	if f353_local6 then
		if f353_local7[2] and f353_local7[2] == "attachment" then
			CoD.CACUtility.RemoveAttachmentFromClassHelper( f353_arg3, f353_local0, f353_local8, CoD.CACUtility.GetAttachmentListForSlot( f353_local7[1] ), f353_local1 ) --[[ @ 0]]
		else
			RemoveItemFromClassSlot( f353_local0, f353_local6, f353_arg3, false, f353_local1 ) --[[ @ 0]]
		end
	end
	local f353_local10 = f353_local5 - CoD.CACUtility.GetUsedAllocation( f353_arg3, f353_local2, f353_local1 ) --[[ @ 0]]
	if f353_arg1.itemList.activeWidget:isLastItem() then
		f353_arg1.itemList.savedActiveIndex = f353_arg1.itemList.activeWidget.gridInfoTable.zeroBasedIndex - 1 --[[ @ 0]]
	end
	local f353_local11 = f353_arg1.itemList:getDataSource() --[[ @ 0]]
	if f353_local11.getCount( f353_arg1.itemList ) > 1 then
		f353_arg1.itemList:updateDataSource() --[[ @ 0]]
	end
	f353_local11 = Engine[@"GetModelForController"]( f353_arg3 ) --[[ @ 0]]
	f353_local11 = f353_local11["CACMenu.numItemsToRemove"] --[[ @ 0]]
	local f353_local12 = f353_local11:get() - f353_local10 --[[ @ 0]]
	f353_local11:set( f353_local12 ) --[[ @ 0]]
	if f353_local12 <= 0 then
		AttemptAttachItem( f353_arg1, f353_arg3, f353_local1, f353_local0, f353_local3, f353_local4, nil ) --[[ @ 0]]
		if f353_local9[2] and f353_local9[2] == "attachment" then
			CoD.CACUtility.UpdateWeaponAttachmentModel( f353_arg0, f353_arg2, f353_arg3 ) --[[ @ 0]]
		end
		if f353_local7[2] and f353_local7[2] == "attachment" then
			CoD.WeaponAttachmentsUtility.ValidateUpgradeAttachmentLoadout( f353_arg0, f353_arg3, f353_local7[1] ) --[[ @ 0]]
		end
		local f353_local13 = GoBack( f353_arg1, f353_arg3 ) --[[ @ 0]]
		if not IsCurrentMenu( f353_local13, "MPCustomizeClassMenu" ) then
			GoBack( f353_local13, f353_arg3 ) --[[ @ 0]]
		end
	end
end

function RemoveOverflowWildcardFromClass( f354_arg0, f354_arg1, f354_arg2, f354_arg3, f354_arg4 )
	local f354_local0 = CoD.BaseUtility.GetMenuModel( f354_arg2 ) --[[ @ 0]]
	local f354_local1 = CoD.BaseUtility.GetMenuSessionMode( f354_arg2 ) --[[ @ 0]]
	local f354_local2 = f354_arg1:getModel() --[[ @ 0]]
	local f354_local3 = nil --[[ @ 0]]
	if f354_local2 then
		f354_local3 = f354_local2.loadoutSlot:get() --[[ @ 0]]
		RemoveItemFromClassSlot( f354_local0, f354_local3, f354_arg3, false, f354_local1 ) --[[ @ 0]]
	end
	local f354_local4 = GoBack( f354_arg0, f354_arg3 ) --[[ @ 0]]
	if not IsCurrentMenu( f354_local4, "MPCustomizeClassMenu" ) then
		f354_local4 = GoBack( f354_local4, f354_arg3 ) --[[ @ 0]]
	end
	if f354_local3 then
		return OpenPopup( f354_local4, f354_arg4, f354_arg3, {
			_sessionMode = f354_local1,
			_model = f354_local0,
			_loadoutSlot = "bonuscard",
			_loadoutListItemSlot = f354_local3,
			_isContextualEquipping = true,
			_contextualEquipSlot = CoD.BaseUtility.GetMenuContextualEquipSlot( f354_arg2 )
		} )
	else
		
	end
end

function UpdateAllocationBar( f355_arg0, f355_arg1, f355_arg2 )
	local f355_local0 = f355_arg1:getModel( f355_arg2, "allocationSpent" ) --[[ @ 0]]
	if f355_local0 then
		local f355_local1 = Engine[@"GetModelValue"]( f355_local0 ) --[[ @ 0]]
		if f355_local1 >= 0 then
			local f355_local2 = -1 --[[ @ 0]]
			local f355_local3 = f355_arg1:getModel( f355_arg2, "classNum" ) --[[ @ 0]]
			if f355_arg1._previousClassNum == f355_local3 and f355_arg1._previousAllocationSpent == f355_local1 - 1 then
				f355_local2 = f355_local1 --[[ @ 0]]
			end
			f355_arg1._previousAllocationSpent = f355_local1 --[[ @ 0]]
			f355_arg1._previousClassNum = f355_local3 --[[ @ 0]]
			for f355_local4 = 1 --[[ @ 0]], CoD.CACUtility.GetMaxAllocation( f355_arg2 ), 1 do
				local f355_local7 = f355_arg1["AllocationBar" .. f355_local4 - 1] --[[ @ 0]]
				if f355_local7 ~= nil then
					if f355_local4 <= f355_local1 then
						local f355_local8 = f355_local7 --[[ @ 0]]
						local f355_local9 = f355_local7.playClip --[[ @ 0]]
						local f355_local10 --[[ @ 0]]
						if f355_local4 == f355_local2 then
							f355_local10 = "PointSpending" --[[ @ 0]]
							if not f355_local10 then
							
							else
								f355_local9( f355_local8, f355_local10 ) --[[ @ 0]]
							end
						end
						f355_local10 = "PointSpent" --[[ @ 0]]
					end
					f355_local7:playClip( "DefaultClip" ) --[[ @ 0]]
				end
			end
		end
	end
end

function BubblegumPackOptionsRename( f356_arg0, f356_arg1, f356_arg2 )
	local f356_local0 = f356_arg0:getModel( f356_arg2, "bgbPackIndex" ) --[[ @ 0]]
	if f356_local0 then
		local f356_local1 = Engine[@"GetModelValue"]( f356_local0 ) --[[ @ 0]]
		Engine[@"exec"]( f356_arg2, "ui_keyboard_new " .. Enum[@"KeyboardType"][@"hash_7C990C3C5050A0ED"] ) --[[ @ 0]]
	end
end

function BubblegumPackOptionsCopy( f357_arg0, f357_arg1, f357_arg2 )
	local f357_local0 = f357_arg0:getModel( f357_arg2, "bgbPackIndex" ) --[[ @ 0]]
	local f357_local1 = f357_arg1:getModel( f357_arg2, "bgbPackIndex" ) --[[ @ 0]]
	if f357_local0 == f357_local1 then
		return 
	elseif f357_local0 and f357_local1 then
		local f357_local2 = Engine[@"GetModelValue"]( f357_local0 ) --[[ @ 0]]
		local f357_local3 = Engine[@"GetModelValue"]( f357_local1 ) --[[ @ 0]]
		if f357_local2 and f357_local3 then
			Engine[@"ExecNow"]( f357_arg2, "copybubblegumpack " .. f357_local2 .. " " .. f357_local3 ) --[[ @ 0]]
			local f357_local4 = f357_arg0.occludedMenu --[[ @ 0]]
			GoBack( f357_arg0, f357_arg2 ) --[[ @ 0]]
			ClearMenuSavedState( f357_arg0, f357_arg2 ) --[[ @ 0]]
			GoBack( f357_local4, f357_arg2 ) --[[ @ 0]]
			ClearMenuSavedState( f357_local4, f357_arg2 ) --[[ @ 0]]
		end
	end
end

function ClassOptionsCopyLoadout( f358_arg0, f358_arg1, f358_arg2, f358_arg3 )
	if IsCurrentClassSelectedClass( f358_arg0, f358_arg1 ) == true then
		return 
	end
	local f358_local0 = CoD.BaseUtility.GetMenuSessionMode( f358_arg3 ) --[[ @ 0]]
	local f358_local1 = CoD.BaseUtility.GetMenuModel( f358_arg3 ) --[[ @ 0]]
	local f358_local2 = f358_arg1:getModel() --[[ @ 0]]
	if f358_local1 and f358_local2 then
		local f358_local3 = f358_local1.classNum:get() --[[ @ 0]]
		local f358_local4 = f358_local2.classNum:get() --[[ @ 0]]
		if f358_local3 and f358_local4 then
			Engine[@"hash_16806E51D20F4DCC"]( f358_arg2, f358_local3, f358_local4, f358_local0 ) --[[ @ 0]]
			if f358_local0 == Enum[@"eModes"][@"hash_73723205FAE52C4A"] then
				Engine[@"ExecNow"]( f358_arg2, "copybubblegumpack " .. f358_local3 .. " " .. f358_local4 ) --[[ @ 0]]
			end
			SaveLoadoutGeneric( f358_arg2 ) --[[ @ 0]]
			CoD.CACUtility.GetCustomClassModel( f358_arg2, f358_local4, f358_local2, nil, f358_local0 ) --[[ @ 0]]
			GoBack( GoBack( f358_arg0, f358_arg2 ), f358_arg2 ) --[[ @ 0]]
		end
	end
end

function ClassOptionsCopyClassSet( f359_arg0, f359_arg1, f359_arg2 )
	local f359_local0 = f359_arg1:getModel( f359_arg2, "classSetId" ) --[[ @ 0]]
	if f359_local0 then
		local f359_local1 = Engine[@"GetModelValue"]( f359_local0 ) --[[ @ 0]]
		local f359_local2 = Engine[@"GetCurrentClassSetIndex"]( f359_arg2 ) --[[ @ 0]]
		if f359_local1 == f359_local2 then
			return 
		end
		Engine[@"CopyToClassSet"]( f359_arg2, f359_local2 ) --[[ @ 0]]
		Engine[@"CopyFromClassSetToClassSet"]( f359_arg2, f359_local2, f359_local1 ) --[[ @ 0]]
		local f359_local3 = GoBack( f359_arg0, f359_arg2 ) --[[ @ 0]]
		ClearMenuSavedState( f359_arg0, f359_arg2 ) --[[ @ 0]]
		f359_local3 = GoBack( f359_local3, f359_arg2 ) --[[ @ 0]]
		ClearMenuSavedState( f359_local3, f359_arg2 ) --[[ @ 0]]
		f359_local3:dispatchEventToChildren( {
			name = "class_set_name_change",
			controller = f359_arg2
		} ) --[[ @ 0]]
	end
end

function ClassOptionsResetToDefault( f360_arg0, f360_arg1, f360_arg2, f360_arg3 )
	local f360_local0 = CoD.BaseUtility.GetMenuSessionMode( f360_arg3 ) --[[ @ 0]]
	local f360_local1 = CoD.BaseUtility.GetMenuModel( f360_arg3 ) --[[ @ 0]]
	local f360_local2 = f360_arg1:getModel() --[[ @ 0]]
	local f360_local3 = LuaUtils.IsArenaMode() and @"hash_54FF2B60D157BBB2" or @"mp_default_loadouts" --[[ @ 0]]
	local f360_local4 = nil --[[ @ 0]]
	if f360_local0 == Enum[@"eModes"][@"hash_360063C67132EB69"] then
		f360_local3 = @"hash_11C53105E8C011C4" --[[ @ 0]]
	elseif f360_local0 == Enum[@"eModes"][@"hash_73723205FAE52C4A"] then
		f360_local3 = @"hash_9EEE28789FE067A" --[[ @ 0]]
		local f360_local5 = Engine[@"GetModelForController"]( f360_arg2 ) --[[ @ 0]]
		f360_local5 = f360_local5.selectedZMStory --[[ @ 0]]
		f360_local4 = f360_local5 and f360_local5:get() --[[ @ 0]]
	end
	if f360_local1 and f360_local2 then
		local f360_local5 = f360_local1.classNum:get() --[[ @ 0]]
		local f360_local6 = f360_local2.customClassName:get() --[[ @ 0]]
		local f360_local7 = f360_local2.index:get() --[[ @ 0]]
		if f360_local5 and f360_local6 and f360_local7 then
			local f360_local8 = f360_local5 + 1 --[[ @ 0]]
			local f360_local9 = Engine[@"GetCACRoot"]( f360_arg2, f360_local5, f360_local0 ) --[[ @ 0]]
			if f360_local9 then
				local f360_local10 = Engine[@"hash_2E00B2F29271C60B"]( f360_local3 ) --[[ @ 0]]
				CoDShared.SetDefaultLoadoutForClass( f360_local9, f360_local8, f360_local7, f360_local10, f360_local0, f360_local4 ) --[[ @ 0]]
				if f360_local0 == Enum[@"eModes"][@"hash_73723205FAE52C4A"] then
					CoDShared.SetDefaultBubbleGumBuffsForClass( f360_local9, f360_local8, f360_local7, f360_local10, f360_local0, f360_local4 ) --[[ @ 0]]
					DataSourceHelperRecreate( f360_arg2, "BGBLoadout" ) --[[ @ 0]]
				end
				Engine[@"hash_2E6C09FDF6C8D188"]( f360_arg2, f360_local0 ) --[[ @ 0]]
			end
			CoD.CACUtility.GetCustomClassModel( f360_arg2, f360_local5, f360_local1, nil, f360_local0 ) --[[ @ 0]]
			CoD.CACUtility.EquippedItemsChanged( f360_arg3, f360_arg2 ) --[[ @ 0]]
		end
		GoBack( GoBack( f360_arg0, f360_arg2 ), f360_arg2 ) --[[ @ 0]]
	end
end

function ClassOptionsClearLoadout( f361_arg0, f361_arg1, f361_arg2, f361_arg3 )
	local f361_local0 = CoD.BaseUtility.GetMenuSessionMode( f361_arg3 ) --[[ @ 0]]
	local f361_local1 = CoD.BaseUtility.GetMenuModel( f361_arg3 ) --[[ @ 0]]
	local f361_local2 = f361_local1.classNum:get() --[[ @ 0]]
	local f361_local3 = Engine[@"GetCACRoot"]( f361_arg2, f361_local2, f361_local0 ) --[[ @ 0]]
	if f361_local3 then
		CoDShared.ClearLoadoutForClassIndex( f361_local3, f361_local2 + 1, f361_local0 ) --[[ @ 0]]
	end
	CoD.CACUtility.GetCustomClassModel( f361_arg2, f361_local2, f361_local1, nil, f361_local0 ) --[[ @ 0]]
	CoD.CACUtility.EquippedItemsChanged( f361_arg3, f361_arg2 ) --[[ @ 0]]
end

function ClassOptionsSetHintText( f362_arg0, f362_arg1, f362_arg2 )
	local f362_local0 = f362_arg1:getModel() --[[ @ 0]]
	local f362_local1 = DataSources.CACClassOptions.getModel( f362_arg2 ) --[[ @ 0]]
	f362_local1 = f362_local1.customClassOptionsHintText --[[ @ 0]]
	if f362_local1 and f362_local0 and f362_local0.description then
		f362_local1:set( f362_local0.description:get() ) --[[ @ 0]]
	end
end

function OpenBuyExtraSlotsPackDialog( f363_arg0, f363_arg1, f363_arg2 )
	CoD.OverlayUtility.CreateOverlay( f363_arg2, f363_arg0, "PurchaseExtraSlotsConfirmation", f363_arg2, {
		displayText = @"hash_5E3634DA619F3701",
		itemCODPointCost = CoD.CACUtility.GetExtraSlotCODPointCost()
	} ) --[[ @ 0]]
end

function CopyLoadoutFromClassSet( f364_arg0 )
	if IsClassSetsAvailableForCurrentGameMode() then
		Engine[@"CopyFromClassSet"]( f364_arg0, Engine[@"GetCurrentClassSetIndex"]( f364_arg0 ) ) --[[ @ 0]]
	end
end

function SetHintText( f365_arg0, f365_arg1, f365_arg2 )
	local f365_local0 = nil --[[ @ 0]]
	if f365_arg1 then
		if f365_arg1.hintText then
			f365_local0 = f365_arg1.hintText --[[ @ 0]]
		else
			local f365_local1 = f365_arg1:getModel() --[[ @ 0]]
			if f365_local1 then
				local f365_local2 = Engine[@"GetModel"]( f365_local1, "hintText" ) --[[ @ 0]]
				if f365_local2 then
					f365_local0 = Engine[@"GetModelValue"]( f365_local2 ) --[[ @ 0]]
				end
			end
		end
	end
	if f365_local0 == nil then
		DataSources.PerController.clearHintText( f365_arg2 ) --[[ @ 0]]
	else
		DataSources.PerController.setHintText( f365_arg2, f365_local0 ) --[[ @ 0]]
	end
end

function UpdateDifficulty( f366_arg0, f366_arg1, f366_arg2 )
	local f366_local0 = Engine[@"GetProfileVarInt"]( f366_arg2, "g_gameskill" ) or 0 --[[ @ 0]]
	local f366_local1 = LobbyData.GetLobbyMenuByName( LuaEnum.UI.DIRECTOR_LAN_CP ) --[[ @ 0]]
	if f366_arg1 == f366_local1[@"name"] then
		Engine[@"SetProfileVar"]( f366_arg2, "g_gameskill", GetCPDifficulty( f366_arg2, "g_gameskill_offline_cp" ) or f366_local0 ) --[[ @ 0]]
		Engine[@"exec"]( f366_arg2, "updategamerprofile" ) --[[ @ 0]]
		
	else
		
	end
end

function RedeemCode( f367_arg0, f367_arg1, f367_arg2 )
	Engine[@"hash_7008A25D95FDD290"]( f367_arg2 ) --[[ @ 0]]
end

function ShowPsStoreIcon( f368_arg0, f368_arg1 )
	if CoD.perController[f368_arg0].psStoreIconCount == nil or CoD.perController[f368_arg0].psStoreIconCount == 0 then
		Store_UpdatePSStoreIconCount( f368_arg0, 1 ) --[[ @ 0]]
		Engine[@"ShowPsStoreIcon"]( f368_arg1 ) --[[ @ 0]]
	end
end

function HidePsStoreIcon( f369_arg0 )
	if CoD.perController[f369_arg0].psStoreIconCount ~= nil and CoD.perController[f369_arg0].psStoreIconCount > 0 then
		Store_UpdatePSStoreIconCount( f369_arg0, -1 ) --[[ @ 0]]
		Engine[@"HidePsStoreIcon"]() --[[ @ 0]]
	end
end

function ClearSelectedStoreCategory( f370_arg0 )
	CoD.perController[f370_arg0].selectedStoreCategory = nil --[[ @ 0]]
end

function DisplayEmptyStoreSystemDialog( f371_arg0 )
	Engine[@"hash_1E493B62BBE1395E"]( f371_arg0 ) --[[ @ 0]]
end

function SetSelectedStoreCategory( f372_arg0, f372_arg1, f372_arg2 )
	local f372_local0 = f372_arg1:getModel( f372_arg2, "category" ) --[[ @ 0]]
	if f372_local0 then
		local f372_local1 = Engine[@"GetModelValue"]( f372_local0 ) --[[ @ 0]]
		if CoD.perController[f372_arg2].selectedStoreCategory ~= f372_local1 then
			local f372_local2 = CoD.perController[f372_arg2].selectedStoreCategory --[[ @ 0]]
			CoD.perController[f372_arg2].selectedStoreCategory = f372_local1 --[[ @ 0]]
			if f372_local1 == "featured" or f372_local1 == "codpoints" then
				if f372_local2 ~= "featured" and f372_local2 ~= "codpoints" then
					ShowPsStoreIcon( f372_arg2, Enum[@"hash_6784DC8CE13E1E13"][@"center"] ) --[[ @ 0]]
				end
			else
				ShowPsStoreIcon( f372_arg2, Enum[@"hash_6784DC8CE13E1E13"][@"center"] ) --[[ @ 0]]
			end
			Engine[@"hash_3ED84BE5BCA388FA"]( f372_arg2, f372_local1, false ) --[[ @ 0]]
		end
	end
end

function AutoSelectFeaturedCategory( f373_arg0, f373_arg1 )
	if CoD.perController[f373_arg1].selectedStoreCategory ~= "featured" then
		CoD.perController[f373_arg1].selectedStoreCategory = "featured" --[[ @ 0]]
		local f373_local0 = true --[[ @ 0]]
		if IsDurango() then
			f373_local0 = false --[[ @ 0]]
		end
		ShowPsStoreIcon( f373_arg1, Enum[@"hash_6784DC8CE13E1E13"][@"center"] ) --[[ @ 0]]
		Engine[@"hash_3ED84BE5BCA388FA"]( f373_arg1, "featured", f373_local0 ) --[[ @ 0]]
	end
end

function AutoSelectCodPointCategory( f374_arg0, f374_arg1 )
	if CoD.perController[f374_arg1].selectedStoreCategory ~= "codpoints" then
		CoD.perController[f374_arg1].selectedStoreCategory = "codpoints" --[[ @ 0]]
		Engine[@"hash_3ED84BE5BCA388FA"]( f374_arg1, "codpoints", false ) --[[ @ 0]]
	end
end

function PurchaseProduct( f375_arg0, f375_arg1, f375_arg2, f375_arg3 )
	if CoD.ModelUtility.IsModelValueEqualTo( f375_arg3, "StoreRoot.ready", 1 ) then
		local f375_local0 = CoD.perController[f375_arg3].selectedStoreCategory --[[ @ 0]]
		if f375_local0 ~= nil and f375_local0 ~= "" then
			if IsDurango() then
				local f375_local1 = f375_arg2:getModel( f375_arg3, "productID" ) --[[ @ 0]]
				if f375_local1 then
					Engine[@"hash_1D58E665ABB6A9AE"]( f375_arg3, f375_local0, Engine[@"GetModelValue"]( f375_local1 ) ) --[[ @ 0]]
				end
			elseif IsOrbis() then
				local f375_local1 = f375_arg2:getModel( f375_arg3, "serviceLabel" ) --[[ @ 0]]
				if f375_local1 then
					local f375_local2 = Engine[@"GetModelValue"]( f375_local1 ) --[[ @ 0]]
					local f375_local3 = f375_arg2:getModel( f375_arg3, "productID" ) --[[ @ 0]]
					if f375_local3 then
						Engine[@"hash_1D58E665ABB6A9AE"]( f375_arg3, f375_local0, Engine[@"GetModelValue"]( f375_local3 ), f375_local2 ) --[[ @ 0]]
					end
				end
			elseif IsPC() then
				CoD.PCUtility.DisplayPrePurchasePopup( function ()
					local f376_local0 = f375_arg2:getModel( f375_arg3, "productID" ) --[[ @ 0]]
					local f376_local1 = Engine[@"GetModelForController"]( f375_arg3 ) --[[ @ 0]]
					f376_local1 = f376_local1:create( "bnetCheckoutProductID" ) --[[ @ 0]]
					f376_local1:set( f376_local0:get() ) --[[ @ 0]]
					OpenPopup( f375_arg0:getMenu(), "PC_Battlenet_Checkout", f375_arg3 ) --[[ @ 0]]
				end, f375_arg1, f375_arg3, {
					purchaseProductElement = f375_arg2
				} ) --[[ @ 0]]
			end
		end
	end
	return true
end

function SetWorkingStateAndPurchaseDWSKU( f377_arg0, f377_arg1, f377_arg2, f377_arg3 )
	if f377_arg0.currentState ~= "DefaultState" then
		return 
	end
	f377_arg0:setState( f377_arg2, "WorkingState" ) --[[ @ 0]]
	local f377_local0 = function ()
		PurchaseDWSKU( f377_arg0, f377_arg1, f377_arg2 ) --[[ @ 0]]
		if not f377_arg0.purchaseTimer then
			f377_arg0.purchaseTimer = LUI.UITimer.newElementTimer( 500, false, function ()
				if not Engine[@"IsInventoryBusy"]( f377_arg2 ) and Engine[@"GetPurchaseDWSKUResult"]( f377_arg2 ) ~= Enum[@"InventoryPurchaseResult"][@"hash_1B7C63B8EDC5BAEA"] then
					if Engine[@"GetPurchaseDWSKUResult"]( f377_arg2 ) == Enum[@"InventoryPurchaseResult"][@"hash_10AA14E804D79839"] then
						f377_arg0:setState( f377_arg2, "FinishedState" ) --[[ @ 0]]
						if f377_arg0:getModel() then
							local f379_local0 = f377_arg0:getModel() --[[ @ 0]]
							if f379_local0.purchased then
								f379_local0 = f377_arg0:getModel() --[[ @ 0]]
								f379_local0.purchased:set( true ) --[[ @ 0]]
							end
						end
						local f379_local0 = Engine[@"GetModelForController"]( f377_arg2 ) --[[ @ 0]]
						local f379_local1 = f379_local0:create( "LootStreamProgress.playAnimation" ) --[[ @ 0]]
						f379_local1:set( true ) --[[ @ 0]]
						f379_local1 = f377_arg0:getModel( f377_arg2, "skuID" ) --[[ @ 0]]
						if f379_local1 then
							local f379_local2 = Engine[@"GetModelValue"]( f379_local1 ) --[[ @ 0]]
							local f379_local3 = f379_local0:create( "LootStreamProgress.skuPurchased" ) --[[ @ 0]]
							f379_local3:set( tostring( f379_local2 ) ) --[[ @ 0]]
						end
						local f379_local2 = f377_arg0:getMenu() --[[ @ 0]]
						CoD.BlackMarketUtility.SendItemShopViewEvent( f377_arg2, f379_local2, "purchased" ) --[[ @ 0]]
						if f379_local2._isContract then
							CoD.ContractUtility.OnContractPurchased( f379_local2, f377_arg2 ) --[[ @ 0]]
						elseif f379_local2._isReservesItem then
							if f377_arg1.gridInfoTable and f377_arg1.gridInfoTable.parentGrid then
								f377_arg1.gridInfoTable.parentGrid:updateDataSource() --[[ @ 0]]
							end
						elseif f379_local2._closeAndGoBack then
							if f379_local2._openEntitlementPopups then
								CoD.EntitlementUtility.CloseAndGoBackAndOpenEntitlementPopups( f379_local2, f377_arg2, 750 ) --[[ @ 0]]
							elseif IsBooleanDvarSet( @"hash_1A8E4D68B803874" ) then
								CoD.BlackMarketUtility.ItemShopSunsetDelayCloseAndGoBack( f379_local2, f377_arg0, f377_arg2, 750 ) --[[ @ 0]]
							else
								DelayCloseAndGoBack( f379_local2, f377_arg2, 750 ) --[[ @ 0]]
							end
						elseif f379_local2._openEntitlementPopups then
							CoD.EntitlementUtility.GoBackAndOpenEntitlementPopups( f379_local2, f377_arg2, 750 ) --[[ @ 0]]
						elseif IsBooleanDvarSet( @"hash_1A8E4D68B803874" ) then
							CoD.BlackMarketUtility.ItemShopSunsetDelayCloseAndGoBack( f379_local2, f377_arg0, f377_arg2, 750 ) --[[ @ 0]]
						else
							DelayGoBack( f379_local2, f377_arg2, 750 ) --[[ @ 0]]
						end
						CoD.BlackMarketUtility.TriggerSkuVO( f377_arg2, f377_arg0, f379_local2, f377_arg1 ) --[[ @ 0]]
						CoD.BlackMarketUtility.UpdateReservesItemCounts( f377_arg2 ) --[[ @ 0]]
					else
						f377_arg0:setState( f377_arg2, "ErrorState" ) --[[ @ 0]]
					end
					f377_arg0.purchaseTimer:close() --[[ @ 0]]
					f377_arg0.purchaseTimer = nil --[[ @ 0]]
				end
			end ) --[[ @ 0]]
			f377_arg0:addElement( f377_arg0.purchaseTimer ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	local f377_local1 = function ( f380_arg0 )
		f377_arg0:setState( f380_arg0, "DefaultState" ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	if CoD.isPC and not f377_arg3 then
		CoD.PCUtility.DisplayPrePurchasePopup( f377_local0, f377_arg0:getMenu(), f377_arg2, {
			dwSKUElement = f377_arg0
		}, f377_local1 ) --[[ @ 0]]
	else
		f377_local0() --[[ @ 0]]
	end
end

function SetElementWorkingStateAndPurchaseDWSKU( f381_arg0, f381_arg1 )
	SetWorkingStateAndPurchaseDWSKU( f381_arg0, f381_arg0, f381_arg1, false ) --[[ @ 0]]
end

function PurchaseDWSKU( f382_arg0, f382_arg1, f382_arg2 )
	local f382_local0 = f382_arg0:getModel( f382_arg2, "skuID" ) --[[ @ 0]]
	if f382_local0 then
		Engine[@"hash_29EF65378FF2525E"]( f382_arg2, tostring( Engine[@"GetModelValue"]( f382_local0 ) ), 1 ) --[[ @ 0]]
	end
end

function RecordStoreOnItemGainFocus( f383_arg0, f383_arg1, f383_arg2, f383_arg3 )
	f383_arg1.onGainFocusTime = Engine[@"hash_69D33D652B9B0F3B"]() --[[ @ 0]]
end

function RecordStoreOnItemLoseFocus( f384_arg0, f384_arg1, f384_arg2, f384_arg3 )
	local f384_local0 = CoD.perController[f384_arg2].selectedStoreCategory --[[ @ 0]]
	local f384_local1 = f384_arg1.onGainFocusTime --[[ @ 0]]
	local f384_local2 = 0 --[[ @ 0]]
	local f384_local3 = Dvar[@"hash_6B1BF1B329DA7BA7"]:get() --[[ @ 0]]
	if f384_local1 ~= nil then
		f384_local2 = Engine[@"hash_69D33D652B9B0F3B"]() - f384_local1 --[[ @ 0]]
	end
	if f384_local3 and f384_local2 < f384_local3 then
		return 
	end
	local f384_local4 = f384_arg1:getModel( f384_arg2, "productID" ) --[[ @ 0]]
	if f384_local4 then
		CoD.MetricsUtility.StoreItemViewed( f384_arg0, f384_arg2, Engine[@"GetModelValue"]( f384_local4 ), f384_local2 ) --[[ @ 0]]
	end
end

function RecordStoreLastFocusedItemViewed( f385_arg0, f385_arg1, f385_arg2, f385_arg3 )
	RecordStoreOnItemLoseFocus( f385_arg0, f385_arg1, f385_arg2, f385_arg3 ) --[[ @ 0]]
end

function PaintshopWeaponList_Back( f386_arg0, f386_arg1, f386_arg2 )
	CoD.perController[f386_arg2].selectedPaintjobModel = nil --[[ @ 0]]
	CoD.perController[f386_arg2].paintshopWeaponListIndex = nil --[[ @ 0]]
	CoD.CraftUtility.Paintjobs.CachedPaintjobs = {} --[[ @ 0]]
end

function FileshareGetSlots( f387_arg0, f387_arg1, f387_arg2 )
	Engine[@"FileshareStartup"]( f387_arg2 ) --[[ @ 0]]
end

function OpenShowcase( f388_arg0, f388_arg1, f388_arg2, f388_arg3, f388_arg4 )
	local f388_local0 = CoD.FileshareUtility.GetCurrentCategory() --[[ @ 0]]
	local f388_local1 = CoD.FileshareUtility.GetSelectedItemProperty( "fileId" ) --[[ @ 0]]
	FileshareSetShowcasePublishMode( f388_arg2, false ) --[[ @ 0]]
	if f388_local0 == "paintjob" then
		OpenShowcasePaintjobs( f388_arg0, f388_arg1, f388_arg2, f388_local1, f388_arg4 ) --[[ @ 0]]
	elseif f388_local0 == "emblem" then
		OpenShowcaseEmblems( f388_arg0, f388_arg1, f388_arg2, f388_local1, f388_arg4 ) --[[ @ 0]]
	elseif f388_local0 == "customgame" then
		OpenShowcaseCustomGames( f388_arg0, f388_arg1, f388_arg2, f388_local1, f388_arg4 ) --[[ @ 0]]
	elseif f388_local0 == "screenshot" then
		OpenShowcaseScreenshots( f388_arg0, f388_arg1, f388_arg2, f388_local1, f388_arg4 ) --[[ @ 0]]
	elseif f388_local0 == "recentgames" then
		OpenShowcaseRecentGames( f388_arg0, f388_arg1, f388_arg2, f388_local1, f388_arg4 ) --[[ @ 0]]
	elseif f388_local0 == "clip_private" then
		OpenShowcaseLocalClips( f388_arg0, f388_arg1, f388_arg2, f388_local1, f388_arg4 ) --[[ @ 0]]
	elseif f388_local0 == "clip" then
		OpenShowcaseClips( f388_arg0, f388_arg1, f388_arg2, f388_local1, f388_arg4 ) --[[ @ 0]]
	end
end

function OpenShowcasePaintjobs( f389_arg0, f389_arg1, f389_arg2, f389_arg3, f389_arg4 )
	CoD.FileshareUtility.SetPreviousCategory( "paintjob" ) --[[ @ 0]]
	CoD.FileshareUtility.SetCurrentCategory( "paintjob" ) --[[ @ 0]]
	CoD.FileshareUtility.SetCurrentFilter( Enum[@"hash_A8E3D76FFA84DE1"][@"hash_3E49F684F2FFE394"], Engine[@"DefaultID64Value"]() ) --[[ @ 0]]
	local f389_local0 = false --[[ @ 0]]
	if FileshareIsCurrentUserContext( f389_arg2 ) then
		f389_local0 = true --[[ @ 0]]
	end
	CoD.FileshareUtility.SetShowCreateButton( f389_local0 ) --[[ @ 0]]
	OpenOverlay( f389_arg0, "MyShowcase_Paintjobs", f389_arg2 ) --[[ @ 0]]
end

function OpenShowcaseEmblems( f390_arg0, f390_arg1, f390_arg2, f390_arg3, f390_arg4 )
	CoD.FileshareUtility.SetPreviousCategory( "emblem" ) --[[ @ 0]]
	CoD.FileshareUtility.SetCurrentCategory( "emblem" ) --[[ @ 0]]
	CoD.FileshareUtility.SetCurrentFilter( Enum[@"hash_A8E3D76FFA84DE1"][@"hash_3E49F684F2FFE394"], Engine[@"DefaultID64Value"]() ) --[[ @ 0]]
	local f390_local0 = false --[[ @ 0]]
	if FileshareIsCurrentUserContext( f390_arg2 ) then
		f390_local0 = true --[[ @ 0]]
	end
	CoD.FileshareUtility.SetShowCreateButton( f390_local0 ) --[[ @ 0]]
	OpenOverlay( f390_arg0, "MyShowcase_Emblems", f390_arg2 ) --[[ @ 0]]
end

function OpenShowcaseCustomGames( f391_arg0, f391_arg1, f391_arg2, f391_arg3, f391_arg4 )
	CoD.FileshareUtility.SetPreviousCategory( "customgame" ) --[[ @ 0]]
	CoD.FileshareUtility.SetCurrentCategory( "customgame" ) --[[ @ 0]]
	CoD.FileshareUtility.SetCurrentFilter( Enum[@"hash_A8E3D76FFA84DE1"][@"hash_3E49F684F2FFE394"], Engine[@"DefaultID64Value"]() ) --[[ @ 0]]
	local f391_local0 = false --[[ @ 0]]
	if FileshareIsCurrentUserContext( f391_arg2 ) and CoD.FileshareUtility.GetIsCommunityMode( f391_arg2 ) == false then
		f391_local0 = true --[[ @ 0]]
	end
	CoD.FileshareUtility.SetShowCreateButton( f391_local0 ) --[[ @ 0]]
	OpenOverlay( f391_arg0, "MyShowcase_CustomGames", f391_arg2 ) --[[ @ 0]]
end

function OpenShowcaseScreenshots( f392_arg0, f392_arg1, f392_arg2, f392_arg3, f392_arg4 )
	CoD.FileshareUtility.SetPreviousCategory( "screenshot" ) --[[ @ 0]]
	CoD.FileshareUtility.SetCurrentCategory( "screenshot" ) --[[ @ 0]]
	CoD.FileshareUtility.SetCurrentFilter( Enum[@"hash_A8E3D76FFA84DE1"][@"hash_3E49F684F2FFE394"], Engine[@"DefaultID64Value"]() ) --[[ @ 0]]
	local f392_local0 = false --[[ @ 0]]
	if FileshareIsCurrentUserContext( f392_arg2 ) then
		f392_local0 = true --[[ @ 0]]
	end
	CoD.FileshareUtility.SetShowCreateButton( f392_local0 ) --[[ @ 0]]
	OpenOverlay( f392_arg0, "MyShowcase_Screenshots", f392_arg2 ) --[[ @ 0]]
end

function OpenShowcaseRecentGames( f393_arg0, f393_arg1, f393_arg2, f393_arg3, f393_arg4 )
	CoD.FileshareUtility.SetPreviousCategory( "recentgames" ) --[[ @ 0]]
	CoD.FileshareUtility.SetCurrentCategory( "recentgames" ) --[[ @ 0]]
	CoD.FileshareUtility.SetCurrentFilter( Enum[@"hash_A8E3D76FFA84DE1"][@"hash_3E49F684F2FFE394"], Engine[@"DefaultID64Value"]() ) --[[ @ 0]]
	local f393_local0 = false --[[ @ 0]]
	if FileshareIsCurrentUserContext( f393_arg2 ) then
		f393_local0 = true --[[ @ 0]]
	end
	CoD.FileshareUtility.SetShowCreateButton( false ) --[[ @ 0]]
	OpenOverlay( f393_arg4, "MyShowcase_RecentGames", f393_arg2 ) --[[ @ 0]]
end

function OpenShowcaseClips( f394_arg0, f394_arg1, f394_arg2, f394_arg3, f394_arg4 )
	CoD.FileshareUtility.SetPreviousCategory( "clip" ) --[[ @ 0]]
	CoD.FileshareUtility.SetCurrentCategory( "clip" ) --[[ @ 0]]
	CoD.FileshareUtility.SetCurrentFilter( Enum[@"hash_A8E3D76FFA84DE1"][@"hash_3E49F684F2FFE394"], Engine[@"DefaultID64Value"]() ) --[[ @ 0]]
	local f394_local0 = false --[[ @ 0]]
	if FileshareIsCurrentUserContext( f394_arg2 ) then
		f394_local0 = true --[[ @ 0]]
	end
	CoD.FileshareUtility.SetShowCreateButton( f394_local0 ) --[[ @ 0]]
	PreserveThumbnails( f394_arg2, true ) --[[ @ 0]]
	OpenOverlay( f394_arg4, "MyShowcase_Clips", f394_arg2 ) --[[ @ 0]]
	PreserveThumbnails( f394_arg2, false ) --[[ @ 0]]
end

function OpenShowcaseLocalClips( f395_arg0, f395_arg1, f395_arg2, f395_arg3, f395_arg4 )
	CoD.FileshareUtility.SetPreviousCategory( "clip_private" ) --[[ @ 0]]
	CoD.FileshareUtility.SetCurrentCategory( "clip_private" ) --[[ @ 0]]
	CoD.FileshareUtility.SetCurrentFilter( Enum[@"hash_A8E3D76FFA84DE1"][@"hash_3E49F684F2FFE394"], Engine[@"DefaultID64Value"]() ) --[[ @ 0]]
	local f395_local0 = false --[[ @ 0]]
	if FileshareIsCurrentUserContext( f395_arg2 ) then
		f395_local0 = true --[[ @ 0]]
	end
	CoD.FileshareUtility.SetShowCreateButton( false ) --[[ @ 0]]
	PreserveThumbnails( f395_arg2, true ) --[[ @ 0]]
	OpenOverlay( f395_arg4, "MyShowcase_Clips", f395_arg2 ) --[[ @ 0]]
	PreserveThumbnails( f395_arg2, false ) --[[ @ 0]]
end

function PublishClip( f396_arg0 )
	local f396_local0 = CoD.FileshareUtility.GetSelectedItemProperty( "fileId" ) --[[ @ 0]]
	local f396_local1 = CoD.FileshareUtility.GetPublishName() --[[ @ 0]]
	local f396_local2 = CoD.FileshareUtility.GetPublishDescription() --[[ @ 0]]
	if Engine[@"SetupTransferData"]( f396_arg0, "clip_private", f396_local0, CoD.FileshareUtility.GetIsCommunityMode( f396_arg0 ) ) then
		Engine[@"PublishClip"]( f396_arg0, "clip", f396_local0, f396_local1, f396_local2 ) --[[ @ 0]]
		
	else
		Engine[@"SetModelValue"]( Engine[@"GetModel"]( CoD.FileshareUtility.GetPublishingModel() ), Enum[@"FileshareTaskUIState"][@"hash_2B49C044708FBA4"] ) --[[ @ 0]]
	end
end

function OpenLocalClipPublishPrompt( f397_arg0, f397_arg1, f397_arg2, f397_arg3, f397_arg4 )
	local f397_local0 = Engine[@"hash_323AF33F30C69410"]( Enum[@"LobbyModule"][@"hash_40C46B73E8E18BA2"], Engine[@"hash_3C3DF042E7492B66"]( Enum[@"LobbyModule"][@"hash_40C46B73E8E18BA2"] ) ) --[[ @ 0]]
	if f397_local0.fileID ~= CoD.FileshareUtility.GetSelectedItemProperty( "fileId" ) then
		LuaUtils.UI_ShowErrorMessageDialog( f397_arg2, @"hash_4C08DDDCF42A89F1" ) --[[ @ 0]]
		return 
	else
		CoD.FileshareUtility.OpenPublishPrompt( f397_arg0, f397_arg2, "clip", CoD.FileshareUtility.GetSelectedItemProperty( "fileName" ), CoD.FileshareUtility.GetSelectedItemProperty( "fileDescription" ), PublishClip ) --[[ @ 0]]
	end
end

function OpenLocalScreenshots( f398_arg0, f398_arg1 )
	local f398_local0 = "screenshot_private" --[[ @ 0]]
	CoD.FileshareUtility.SetCurrentCategory( f398_local0 ) --[[ @ 0]]
	if f398_local0 ~= CoD.FileshareUtility.GetPreviousCategory() then
		CoD.FileshareUtility.SetDirty() --[[ @ 0]]
	end
	CoD.FileshareUtility.ProcessUIIndex( f398_arg1, f398_local0, 0 ) --[[ @ 0]]
	local f398_local1 = Engine[@"GetXUID64"]( f398_arg1 ) --[[ @ 0]]
	Engine[@"ExecNow"]( f398_arg1, "fileshareResetSummaryFiles" ) --[[ @ 0]]
	CoD.FileshareUtility.SetCurrentUser( f398_local1 ) --[[ @ 0]]
	CoD.FileshareUtility.SetFileshareMode( f398_arg1, Enum[@"FileshareMode"][@"hash_39F4C8230B0A89F2"] ) --[[ @ 0]]
	CoD.FileshareUtility.FetchContentForUser( f398_arg1, f398_local1 ) --[[ @ 0]]
	FileshareSetShowcasePublishMode( f398_arg1, false ) --[[ @ 0]]
	CoD.FileshareUtility.SetPreviousCategory( f398_local0 ) --[[ @ 0]]
	CoD.FileshareUtility.SetCurrentFilter( Enum[@"hash_A8E3D76FFA84DE1"][@"hash_3E49F684F2FFE394"], Engine[@"DefaultID64Value"]() ) --[[ @ 0]]
	CoD.FileshareUtility.SetShowCreateButton( false ) --[[ @ 0]]
	CoD.FileshareUtility.SetShowFileDetails( false ) --[[ @ 0]]
	CoD.FileshareUtility.SetShowPublishNewDetails( false ) --[[ @ 0]]
	CoD.FileshareUtility.SetShowCreateButton( false ) --[[ @ 0]]
	OpenOverlay( f398_arg0, "LocalScreenshots", f398_arg1 ) --[[ @ 0]]
end

function PublishScreenshot( f399_arg0 )
	local f399_local0 = CoD.FileshareUtility.GetSelectedItemProperty( "fileId" ) --[[ @ 0]]
	local f399_local1 = CoD.FileshareUtility.GetPublishName() --[[ @ 0]]
	local f399_local2 = CoD.FileshareUtility.GetPublishDescription() --[[ @ 0]]
	if Engine[@"SetupTransferData"]( f399_arg0, "screenshot_private", f399_local0, CoD.FileshareUtility.GetIsCommunityMode( f399_arg0 ) ) then
		Engine[@"PublishScreenshot"]( f399_arg0, "screenshot", f399_local0, f399_local1, f399_local2 ) --[[ @ 0]]
		
	else
		Engine[@"SetModelValue"]( Engine[@"GetModel"]( CoD.FileshareUtility.GetPublishingModel() ), Enum[@"FileshareTaskUIState"][@"hash_2B49C044708FBA4"] ) --[[ @ 0]]
	end
end

function OpenLocalScreenshotsPublishPrompt( f400_arg0, f400_arg1, f400_arg2, f400_arg3, f400_arg4 )
	local f400_local0 = CoD.FileshareUtility.GetSelectedItemProperty( "fileId" ) --[[ @ 0]]
	if Engine[@"IsScreenshotReady"]( Enum[@"ScreenshotViewType"][@"hash_6757495F8281F7D2"], f400_local0 ) == false or Engine[@"IsScreenshotReady"]( Enum[@"ScreenshotViewType"][@"hash_432D90B2AD4019FE"], f400_local0 ) == false then
		LuaUtils.UI_ShowErrorMessageDialog( f400_arg2, @"hash_3B2A1F25CCD4E630" ) --[[ @ 0]]
		return 
	else
		CoD.FileshareUtility.OpenPublishPrompt( f400_arg0, f400_arg2, "screenshot", CoD.FileshareUtility.GetSelectedItemProperty( "fileName" ), CoD.FileshareUtility.GetSelectedItemProperty( "fileDescription" ), PublishScreenshot ) --[[ @ 0]]
	end
end

function OpenMediaCommunity( f401_arg0, f401_arg1, f401_arg2, f401_arg3, f401_arg4, f401_arg5 )
	CoD.FileshareUtility.InitModels() --[[ @ 0]]
	CoD.FileshareUtility.SetCurrentCommunityDataType( f401_arg5 ) --[[ @ 0]]
	CoD.FileshareUtility.SetFileshareMode( f401_arg2, Enum[@"FileshareMode"][@"hash_1E4965F4E4F86DCE"] ) --[[ @ 0]]
	OpenOverlay( f401_arg0, "Community", f401_arg2 ) --[[ @ 0]]
end

function FileshareSetSelectedItemAttachTimer( f402_arg0, f402_arg1, f402_arg2, f402_arg3 )
	local f402_local0 = LUI.UITimer.newElementTimer( 300, true, function ()
		CoD.FileshareUtility.ProcessUIIndex( f402_arg1, f402_arg2, f402_arg3 ) --[[ @ 0]]
	end, f402_arg0 ) --[[ @ 0]]
	f402_arg0.processUIIndexTimer = f402_local0 --[[ @ 0]]
	f402_arg0:addElement( f402_local0 ) --[[ @ 0]]
end

function FileshareSetSelectedItem( f404_arg0, f404_arg1, f404_arg2, f404_arg3 )
	local f404_local0 = f404_arg1:getModel() --[[ @ 0]]
	if f404_local0 == nil then
		CoD.CraftUtility.Fileshare.ClearDisplay( f404_arg2 ) --[[ @ 0]]
		return 
	end
	CoD.FileshareUtility.SetSelectedItem( f404_local0 ) --[[ @ 0]]
	local f404_local1 = CoD.FileshareUtility.GetSelectedItemProperty( "fileId" ) --[[ @ 0]]
	local f404_local2 = CoD.FileshareUtility.GetSelectedItemProperty( "isPublishNew" ) --[[ @ 0]]
	local f404_local3 = CoD.FileshareUtility.GetCurrentCategory() --[[ @ 0]]
	local f404_local4 = f404_arg3 == "true" --[[ @ 0]]
	if f404_local2 == true or f404_local1 == 0 then
		CoD.FileshareUtility.SetShowPublishNewDetails( true ) --[[ @ 0]]
		CoD.CraftUtility.Fileshare.ClearDisplay( f404_arg2 ) --[[ @ 0]]
		return 
	elseif f404_arg1.gridInfoTable then
		FileshareSetSelectedItemAttachTimer( f404_arg1, f404_arg2, f404_local3, f404_arg1.gridInfoTable.zeroBasedIndex ) --[[ @ 0]]
	end
	local f404_local5 = Engine[@"GetFileshareWeaponIndex"]( f404_arg2, f404_local1 ) --[[ @ 0]]
	if f404_local3 == "paintjob" then
		CoD.CraftUtility.Fileshare.DisplayWeaponWithPaintjob( f404_arg2, f404_local5, f404_local1, f404_local4 ) --[[ @ 0]]
	end
	if CoD.FileshareUtility.ShouldSetPreviewIconSizeShort( f404_local3 ) then
		FileshareSetPreviewIconSizeShort() --[[ @ 0]]
	else
		FileshareSetPreviewIconSizeNormal() --[[ @ 0]]
	end
end

function FileshareCategorySelectorItemSelected( f405_arg0, f405_arg1, f405_arg2 )
	local f405_local0 = Engine[@"GetModelValue"]( Engine[@"GetModel"]( f405_arg1:getModel(), "category" ) ) --[[ @ 0]]
	local f405_local1 = CoD.FileshareUtility.GetCurrentCommunityDataType() --[[ @ 0]]
	local f405_local2 = false --[[ @ 0]]
	local f405_local3 = Engine[@"GetModel"]( f405_arg1:getModel(), "communityDataType" ) --[[ @ 0]]
	if f405_local3 then
		local f405_local4 = CoD.FileshareUtility.GetCurrentCommunityDataType() --[[ @ 0]]
		local f405_local5 = Engine[@"GetModelValue"]( f405_local3 ) --[[ @ 0]]
		if f405_local5 ~= nil and f405_local5 ~= "" and f405_local4 ~= f405_local5 then
			CoD.FileshareUtility.SetCurrentCommunityDataType( f405_local5 ) --[[ @ 0]]
			f405_local1 = f405_local5 --[[ @ 0]]
			f405_local2 = true --[[ @ 0]]
		end
	end
	if f405_arg0.TabFrame and f405_arg0.TabFrame.framedWidget then
		if f405_arg1.tabId == "bookmarkedgames" then
			CoD.FileshareUtility.SetFilterOnFileshareContentList( f405_arg0.TabFrame.framedWidget, Enum[@"hash_A8E3D76FFA84DE1"][@"hash_309DD15D8811C2E4"], 1 ) --[[ @ 0]]
		else
			CoD.FileshareUtility.SetFilterOnFileshareContentList( f405_arg0.TabFrame.framedWidget, nil, nil ) --[[ @ 0]]
		end
	end
	CoD.FileshareUtility.FileshareCategorySelectorCategoryChanged( f405_arg2, f405_local0, f405_local1, f405_local2 ) --[[ @ 0]]
end

function FileshareHandleKeyboardComplete( f406_arg0, f406_arg1, f406_arg2, f406_arg3 )
	if f406_arg3.type == Enum[@"KeyboardType"][@"hash_4130DD17C58BD287"] then
		CoD.FileshareUtility.SetPublishName( f406_arg3.input ) --[[ @ 0]]
	elseif f406_arg3.type == Enum[@"KeyboardType"][@"hash_514045CBFEAB8B66"] then
		CoD.FileshareUtility.SetPublishDescription( f406_arg3.input ) --[[ @ 0]]
	elseif f406_arg3.type == Enum[@"KeyboardType"][@"hash_7FE567CB7EB356F5"] then
		CoD.FileshareUtility.SetPublishTags( f406_arg3.input ) --[[ @ 0]]
	elseif f406_arg3.type == Enum[@"KeyboardType"][@"hash_78AB7EF4104BBA8E"] then
		CoD.FileshareUtility.SetDownloadFileName( f406_arg3.input ) --[[ @ 0]]
	end
end

function FileshareEnterPublishName( f407_arg0, f407_arg1, f407_arg2 )
	ShowKeyboard( f407_arg0, f407_arg1, f407_arg2, "KEYBOARD_TYPE_FILESHARE_PUBLISH_NAME" ) --[[ @ 0]]
end

function FileshareEnterPublishDescription( f408_arg0, f408_arg1, f408_arg2 )
	ShowKeyboard( f408_arg0, f408_arg1, f408_arg2, "KEYBOARD_TYPE_FILESHARE_PUBLISH_DESCRIPTION" ) --[[ @ 0]]
end

function FileshareEnterPublishTags( f409_arg0, f409_arg1, f409_arg2 )
	ShowKeyboard( f409_arg0, f409_arg1, f409_arg2, "KEYBOARD_TYPE_FILESHARE_PUBLISH_TAGS" ) --[[ @ 0]]
end

function FileshareSetPreviewIconSizeNormal()
	local f410_local0 = CoD.FileshareUtility.GetRootModel() --[[ @ 0]]
	local f410_local1 = Engine[@"CreateModel"]( f410_local0, "isNormalSize", false ) --[[ @ 0]]
	local f410_local2 = Engine[@"CreateModel"]( f410_local0, "listVerticalCount", false ) --[[ @ 0]]
	Engine[@"SetModelValue"]( f410_local1, true ) --[[ @ 0]]
	Engine[@"SetModelValue"]( f410_local2, 2 ) --[[ @ 0]]
end

function FileshareSetPreviewIconSizeShort()
	local f411_local0 = CoD.FileshareUtility.GetRootModel() --[[ @ 0]]
	local f411_local1 = Engine[@"CreateModel"]( f411_local0, "isNormalSize", false ) --[[ @ 0]]
	local f411_local2 = Engine[@"CreateModel"]( f411_local0, "listVerticalCount", false ) --[[ @ 0]]
	Engine[@"SetModelValue"]( f411_local1, false ) --[[ @ 0]]
	Engine[@"SetModelValue"]( f411_local2, 8 ) --[[ @ 0]]
end

function FileshareSummaryFileUpdate( f412_arg0 )
	local f412_local0 = Engine[@"CreateModel"]( Engine[@"GetGlobalModel"](), "fileshareRoot", false ) --[[ @ 0]]
	local f412_local1 = Engine[@"GetModelValue"]( Engine[@"CreateModel"]( f412_local0, "summaryFileUpdated", false ) ) --[[ @ 0]]
	if f412_local1 == nil then
		return 
	elseif CoD.FileshareUtility.GetIsFullscreenMode( f412_arg0 ) == true then
		local f412_local2 = CoD.FileshareUtility.GetSelectedItem() --[[ @ 0]]
		if Engine[@"GetModelValue"]( Engine[@"CreateModel"]( f412_local2, "fileId" ) ) == f412_local1 then
			Engine[@"SetModelValue"]( Engine[@"CreateModel"]( f412_local2, "renderFileId" ), f412_local1 ) --[[ @ 0]]
			Engine[@"SetModelValue"]( Engine[@"CreateModel"]( f412_local2, "showDetailsViewSpinner" ), 0 ) --[[ @ 0]]
			local f412_local3 = Engine[@"GetModelValue"]( Engine[@"CreateModel"]( f412_local2, "fileId" ) ) --[[ @ 0]]
			local f412_local4 = Engine[@"GetModelValue"]( Engine[@"CreateModel"]( f412_local2, "fileCategory" ) ) --[[ @ 0]]
			local f412_local5 = Engine[@"GetFileshareWeaponIndex"]( f412_arg0, f412_local3 ) --[[ @ 0]]
			if f412_local4 == "paintjob" then
				CoD.CraftUtility.Fileshare.DisplayWeaponWithPaintjob( f412_arg0, f412_local5, f412_local3, true ) --[[ @ 0]]
			end
		end
	else
		for f412_local2 = 1 --[[ @ 0]], 12, 1 do
			local f412_local3 = "fileshareData_" .. f412_local2 --[[ @ 0]]
			if FileshareIsCommunityMode( nil, f412_arg0 ) == true then
				f412_local3 = "fileshareData_community_" .. f412_local2 --[[ @ 0]]
			end
			local f412_local4 = Engine[@"CreateModel"]( f412_local0, f412_local3, false ) --[[ @ 0]]
			local f412_local5 = Engine[@"CreateModel"]( f412_local4, "fileID", false ) --[[ @ 0]]
			local f412_local8 = Engine[@"CreateModel"]( f412_local4, "renderFileId", false ) --[[ @ 0]]
			if Engine[@"GetModelValue"]( f412_local5 ) == f412_local1 then
				Engine[@"SetModelValue"]( f412_local8, f412_local1 ) --[[ @ 0]]
				break
			end
		end
	end
end

function FileshareBookmarkRecentGame( f413_arg0 )
	local f413_local0 = CoD.AARUtility.GetCurrentStats( f413_arg0 ) --[[ @ 0]]
	local f413_local1 = f413_local0 and f413_local0.AfterActionReportStats --[[ @ 0]]
	local f413_local2 = f413_local1 --[[ @ 0]]
	local f413_local3 = f413_local1.demoFileID --[[ @ 0]]
	if f413_local3 then
		f413_local3 = f413_local2 and Engine[@"hash_690B6BCE69A8E08B"]( f413_local1.demoFileID:get() ) --[[ @ 0]]
	end
	if f413_local3 ~= nil and f413_local3 ~= Engine[@"DefaultID64Value"]() then
		Engine[@"BookmarkRecentGame"]( f413_arg0, f413_local3 ) --[[ @ 0]]
		CoD.OverlayUtility.ShowToast( "RecentGameBookmarked", Engine[@"ToUpper"]( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_3A009F37E1567367" ) ), Engine[@"hash_4F9F1239CFD921FE"]( @"hash_46534C8ED6B43677" ), "uie_bookmark" ) --[[ @ 0]]
	end
end

function FileshareSetShowcasePublishMode( f414_arg0, f414_arg1 )
	local f414_local0 = Engine[@"CreateModel"]( Engine[@"CreateModel"]( Engine[@"GetGlobalModel"](), "FileshareRoot", false ), "PublishMode", false ) --[[ @ 0]]
	local f414_local1 = 0 --[[ @ 0]]
	if f414_arg1 == true then
		f414_local1 = 1 --[[ @ 0]]
	end
	Engine[@"SetModelValue"]( f414_local0, f414_local1 ) --[[ @ 0]]
end

function GetMediaManagerCategoryCount()
	return #CoD.FileshareUtility.ShowcaseManagerTabs
end

function MediaManagerMarkDirty( f416_arg0 )
	local f416_local0 = Engine[@"CreateModel"]( Engine[@"CreateModel"]( Engine[@"GetGlobalModel"](), "MediaManager", false ), "dirty", false ) --[[ @ 0]]
	ForceNotifyGlobalModel( f416_arg0, "MediaManager.dirty" ) --[[ @ 0]]
	MediaManagerUpdateSlotsUsed( f416_arg0, CoD.perController[f416_arg0].selectedMediaManagerTab ) --[[ @ 0]]
end

function MediaManagerUpdateSlotsUsed( f417_arg0, f417_arg1 )
	if f417_arg1 then
		local f417_local0 = Engine[@"MediaManagerGetQuota"]( f417_arg0, f417_arg1 ) --[[ @ 0]]
		Engine[@"SetModelValue"]( Engine[@"CreateModel"]( Engine[@"CreateModel"]( Engine[@"GetGlobalModel"](), "MediaManager", false ), "slotsUsed", false ), f417_local0.categorySlotsUsed ) --[[ @ 0]]
	end
end

function MediaManagerClearDisplay( f418_arg0, f418_arg1, f418_arg2 )
	if CoD.FileshareUtility.IsCategoryFilm( f418_arg2, f418_arg1 ) or CoD.FileshareUtility.IsCategoryClip( f418_arg2, f418_arg1 ) or CoD.FileshareUtility.IsCategoryScreenshot( f418_arg2, f418_arg1 ) or CoD.FileshareUtility.IsCategoryCustomGames( f418_arg2, f418_arg1 ) then
		return 
	else
		CoD.CraftUtility.Fileshare.ClearDisplay( f418_arg2 ) --[[ @ 0]]
	end
end

function OpenMediaManager( f419_arg0, f419_arg1, f419_arg2, f419_arg3, f419_arg4 )
	CoD.FileshareUtility.SetPreviousCategory( CoD.FileshareUtility.GetCurrentCategory() ) --[[ @ 0]]
	CoD.FileshareUtility.SetCurrentCategory( f419_arg3 ) --[[ @ 0]]
	Engine[@"SetModelValue"]( Engine[@"CreateModel"]( Engine[@"CreateModel"]( Engine[@"GetGlobalModel"](), "MediaManager", false ), "previousWeaponIndex", false ), CoD.GetCustomization( f419_arg2, "weapon_index" ) ) --[[ @ 0]]
	MediaManagerClearDisplay( f419_arg0, f419_arg1, f419_arg2 ) --[[ @ 0]]
	OpenOverlay( f419_arg0, "MediaManager", f419_arg2 ) --[[ @ 0]]
end

function GoBackAndOpenMediaManagerOnParent( f420_arg0, f420_arg1, f420_arg2, f420_arg3, f420_arg4 )
	CoD.FileshareUtility.SetPreviousCategory( CoD.FileshareUtility.GetCurrentCategory() ) --[[ @ 0]]
	if f420_arg3 ~= nil and f420_arg3 ~= "" then
		CoD.FileshareUtility.SetCurrentCategory( f420_arg3 ) --[[ @ 0]]
	end
	Engine[@"SetModelValue"]( Engine[@"CreateModel"]( Engine[@"CreateModel"]( Engine[@"GetGlobalModel"](), "MediaManager", false ), "previousWeaponIndex", false ), CoD.GetCustomization( f420_arg2, "weapon_index" ) ) --[[ @ 0]]
	MediaManagerClearDisplay( f420_arg0, f420_arg1, f420_arg2 ) --[[ @ 0]]
	GoBackAndOpenOverlayOnParent( f420_arg0, "MediaManager", f420_arg2 ) --[[ @ 0]]
end

function PaintjobSelector_GainFocus( f421_arg0, f421_arg1, f421_arg2 )
	CoD.perController[f421_arg2].selectedPaintjobModel = f421_arg1:getModel() --[[ @ 0]]
	CoD.perController[f421_arg2].viewIndex = 1 --[[ @ 0]]
	local f421_local0 = CoD.CraftUtility.PaintshopView[CoD.perController[f421_arg2].viewIndex].customization_type --[[ @ 0]]
	local f421_local1 = f421_arg1:getModel( f421_arg2, "paintjobSlot" ) --[[ @ 0]]
	CoD.CraftUtility.Gunsmith.DisplayWeaponWithPaintjob( f421_arg2, f421_local1:get() ) --[[ @ 0]]
end

function PaintjobSelector_ChoosePaintjob( f422_arg0, f422_arg1, f422_arg2 )
	local f422_local0 = f422_arg1:getModel( f422_arg2, "paintjobSlot" ) --[[ @ 0]]
	CoD.perController[f422_arg2].selectedPaintjobModel = f422_arg1:getModel() --[[ @ 0]]
	if f422_local0 then
		Engine[@"SetupPaintjobData"]( f422_arg2, Engine[@"GetModelValue"]( f422_local0 ) ) --[[ @ 0]]
	end
	CoD.perController[f422_arg2].viewIndex = 1 --[[ @ 0]]
	local f422_local1 = CoD.CraftUtility.PaintshopView[CoD.perController[f422_arg2].viewIndex].view_name --[[ @ 0]]
	local f422_local2 = CoD.CraftUtility.PaintshopView[CoD.perController[f422_arg2].viewIndex].customization_type --[[ @ 0]]
	local f422_local3 = CoD.CraftUtility.PaintshopView[CoD.perController[f422_arg2].viewIndex].view_string_ref --[[ @ 0]]
	CoD.SetCustomization( f422_arg2, f422_local2, "type" ) --[[ @ 0]]
	CoD.SetCustomization( f422_arg2, f422_local3, "view_string_ref" ) --[[ @ 0]]
	Engine[@"SetupEmblemEditBuffer"]( f422_arg2, f422_local2, CoD.GetCustomization( f422_arg2, "weapon_index" ) ) --[[ @ 0]]
	CoD.CraftUtility.DisplayWeaponInPaintshop( f422_arg2, f422_local1 ) --[[ @ 0]]
	CoD.CraftUtility.SetEmblemEditorProperties( f422_arg2, Enum[@"CustomizationEditorMode"][@"hash_3EBDFD4FFDC7DA3"], "editorMode" ) --[[ @ 0]]
end

function FileshareOpenFullscreenView( f423_arg0, f423_arg1, f423_arg2, f423_arg3 )
	if f423_arg1.gridInfoTable then
		CoD.FileshareUtility.ReportView( f423_arg2, f423_arg1.gridInfoTable.zeroBasedIndex ) --[[ @ 0]]
	end
	if FileshareIsCategory( f423_arg2, "screenshot_private" ) or FileshareIsCategory( f423_arg2, "screenshot" ) then
		CoD.Menu.ModelToUse = f423_arg1:getModel() --[[ @ 0]]
		OpenOverlay( f423_arg0, "Fileshare_ScreenshotDetailsView", f423_arg2 ) --[[ @ 0]]
		CoD.Menu.ModelToUse = nil --[[ @ 0]]
	else
		OpenOverlay( f423_arg0, "Fileshare_DetailsView", f423_arg2 ) --[[ @ 0]]
	end
end

function FilesharePublish( f424_arg0, f424_arg1, f424_arg2 )
	CoD.FileshareUtility.Publish( f424_arg2 ) --[[ @ 0]]
end

function FileshareDownload( f425_arg0, f425_arg1, f425_arg2 )
	CoD.FileshareUtility.Download( f425_arg2 ) --[[ @ 0]]
end

function SteamWorkshopPublish( f426_arg0, f426_arg1, f426_arg2 )
	CoD.SteamWorkshopUtility.Publish( f426_arg0, f426_arg1, f426_arg2 ) --[[ @ 0]]
end

function SteamWorkshopOpenAgreement( f427_arg0, f427_arg1, f427_arg2 )
	CoD.SteamWorkshopUtility.OpenAgreement( f427_arg0, f427_arg1, f427_arg2 ) --[[ @ 0]]
end

function SteamWorkshopOpenFAQ( f428_arg0, f428_arg1, f428_arg2 )
	CoD.SteamWorkshopUtility.OpenFAQ( f428_arg0, f428_arg1, f428_arg2 ) --[[ @ 0]]
end

function SteamWorkshopOpenItem( f429_arg0, f429_arg1, f429_arg2 )
	CoD.SteamWorkshopUtility.OpenItemOnSteam( f429_arg0, f429_arg1, f429_arg2 ) --[[ @ 0]]
end

function SteamWorkshopViewWorkshop( f430_arg0, f430_arg1, f430_arg2 )
	CoD.SteamWorkshopUtility.ViewWorkshop( f430_arg0, f430_arg1, f430_arg2 ) --[[ @ 0]]
end

function PaintjobSelector_ClearPaintjob( f431_arg0, f431_arg1 )
	CoD.CraftUtility.Paintjobs.ClearPaintjob( f431_arg1, Engine[@"GetModelValue"]( Engine[@"GetModel"]( CoD.perController[f431_arg1].selectedPaintjobModel, "paintjobSlot" ) ) ) --[[ @ 0]]
	CoD.CraftUtility.Paintjobs.ParseDDL( f431_arg1, Enum[@"StorageFileType"][@"hash_2743B8404C246F61"] ) --[[ @ 0]]
	if IsMediaManager() == true then
		MediaManagerMarkDirty( f431_arg1 ) --[[ @ 0]]
	end
	ForceNotifyModel( f431_arg1, "Paintshop.UpdateDataSource" ) --[[ @ 0]]
	CoD.WeaponOptionsUtility.UpdateWeaponOptionLists( nil, f431_arg1 ) --[[ @ 0]]
end

function PaintjobSelector_CopyPaintjob( f432_arg0, f432_arg1, f432_arg2, f432_arg3, f432_arg4 )
	local f432_local0 = CoD.CraftUtility.Paintjobs.Copy( f432_arg2, CoD.perController[f432_arg2].selectedPaintjobModel ) --[[ @ 0]]
	if f432_local0 then
		CoD.CraftUtility.Paintjobs.ParseDDL( f432_arg2, Enum[@"StorageFileType"][@"hash_2743B8404C246F61"] ) --[[ @ 0]]
		CoD.CraftUtility.InvalidateWCItemRender( f432_local0 ) --[[ @ 0]]
		ForceNotifyModel( f432_arg2, "Paintshop.UpdateDataSource" ) --[[ @ 0]]
		CoD.WeaponOptionsUtility.UpdateWeaponOptionLists( f432_arg1, f432_arg2 ) --[[ @ 0]]
	end
end

function PaintjobSelector_RenamePaintjob( f433_arg0, f433_arg1 )
	local f433_local0 = CoD.perController[f433_arg1].selectedPaintjobModel --[[ @ 0]]
	CoD.CraftUtility.Paintjobs.RenamePaintjob( f433_arg1, Engine[@"GetModelValue"]( Engine[@"GetModel"]( f433_local0, "paintjobSlot" ) ), Engine[@"GetModelValue"]( Engine[@"GetModel"]( f433_local0, "paintjobName" ) ) ) --[[ @ 0]]
end

function PaintjobSelector_HandleRenameKeyboardComplete( f434_arg0, f434_arg1, f434_arg2, f434_arg3 )
	local f434_local0 = CoD.perController[f434_arg2].selectedPaintjobModel --[[ @ 0]]
	local f434_local1 = nil --[[ @ 0]]
	if not f434_local0 then
		return 
	elseif f434_arg3.type == Enum[@"KeyboardType"][@"hash_6D8A95D32ACF41D1"] then
		f434_local1 = Engine[@"GetModel"]( f434_local0, "paintjobName" ) --[[ @ 0]]
	end
	if f434_local1 then
		Engine[@"SetModelValue"]( f434_local1, f434_arg3.input ) --[[ @ 0]]
	end
end

function PaintjobEditor_OpenSavePopup( f435_arg0, f435_arg1, f435_arg2, f435_arg3 )
	CoD.OverlayUtility.CreateOverlay( f435_arg2, f435_arg0, "PaintjobSave", CoD.perController[f435_arg2].selectedPaintjobModel ) --[[ @ 0]]
end

function PaintjobEditor_ToggleGrid( f436_arg0, f436_arg1, f436_arg2, f436_arg3 )
	local f436_local0 = CoD.CraftUtility.GetGridTypeName( f436_arg2 ) --[[ @ 0]]
	local f436_local1 = 0 --[[ @ 0]]
	if not IsGridOn( f436_arg2, f436_local0 ) then
		f436_local1 = CoD.CraftUtility.GetGridSize( f436_arg2 ) --[[ @ 0]]
	end
	SetProfileVar( f436_arg2, f436_local0, f436_local1 ) --[[ @ 0]]
	Engine[@"hash_625528FFBC14FC0C"]( CoD.GetCustomization( f436_arg2, "type" ), f436_local1 ) --[[ @ 0]]
end

function PaintjobEditor_RemoveGrid( f437_arg0 )
	Engine[@"hash_625528FFBC14FC0C"]( CoD.GetCustomization( f437_arg0, "type" ), 0 ) --[[ @ 0]]
end

function PaintjobEditor_RestoreGridState( f438_arg0 )
	Engine[@"hash_625528FFBC14FC0C"]( CoD.GetCustomization( f438_arg0, "type" ), Engine[@"GetProfileVarInt"]( f438_arg0, CoD.CraftUtility.GetGridTypeName( f438_arg0 ) ) ) --[[ @ 0]]
end

function PaintjobEditor_SavePaintjob( f439_arg0, f439_arg1, f439_arg2 )
	local f439_local0 = Engine[@"GetModelValue"]( Engine[@"GetModel"]( f439_arg2, "paintjobTextEntry" ) ) --[[ @ 0]]
	local f439_local1 = Engine[@"GetModel"]( f439_arg2, "paintjobName" ) --[[ @ 0]]
	local f439_local2 = Engine[@"MediaManagerGetQuota"]( f439_arg1, "paintjob" ) --[[ @ 0]]
	Engine[@"SetModelValue"]( f439_local1, f439_local0 ) --[[ @ 0]]
	CoD.CraftUtility.Paintjobs.UploadPaintjob( f439_arg1, f439_arg2 ) --[[ @ 0]]
	CoD.CraftUtility.Paintjobs.ParseDDL( f439_arg1, Enum[@"StorageFileType"][@"hash_2743B8404C246F61"] ) --[[ @ 0]]
	CoD.CraftUtility.Paintjobs.InvalidateRender( f439_arg1, f439_arg2 ) --[[ @ 0]]
	PaintJobEditor_RecordMetrics( f439_arg0, f439_arg1, f439_arg2, "save", f439_local2.categorySlotsUsed, f439_local2.categoryQuota ) --[[ @ 0]]
	local f439_local3 = GoBack( f439_arg0, f439_arg1 ) --[[ @ 0]]
	CoD.CraftUtility.EmblemEditor_HandleBackInBrowseMode( f439_local3, f439_arg1 ) --[[ @ 0]]
	ClearMenuSavedState( f439_local3, f439_arg1 ) --[[ @ 0]]
end

function OnSocialMenuBack( f440_arg0, f440_arg1 )
	local f440_local0 = Engine[@"GetModelValue"]( Engine[@"GetModel"]( Engine[@"GetGlobalModel"](), "socialRoot.tab" ) ) --[[ @ 0]]
	if f440_local0 == "groups" then
		local f440_local1 = Engine[@"GetModelValue"]( Engine[@"CreateModel"]( Engine[@"GetModelForController"]( f440_arg1 ), "groups.frameType" ) ) --[[ @ 0]]
		if f440_local1 == "invites" or f440_local1 == "members" then
			GroupsSocialChangeTabFrameWidget( f440_arg0, f440_arg0, f440_arg1, "main" ) --[[ @ 0]]
			return 
		end
	end
	Engine[@"SetModelValue"]( Engine[@"CreateModel"]( Engine[@"GetModelForController"]( f440_arg1 ), "groups.frameType" ), "" ) --[[ @ 0]]
	if string.find( f440_local0, "clan_" ) ~= nil then
		local f440_local1 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
		f440_local1.socialRoot.tab:set( "clan" ) --[[ @ 0]]
	else
		local f440_local1 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
		f440_local1.socialRoot.tab:set( "friends" ) --[[ @ 0]]
	end
	if not IsInGame() then
		SendClientScriptMenuChangeNotify( f440_arg1, f440_arg0, false ) --[[ @ 0]]
	end
end

function SetSocialTab( f441_arg0, f441_arg1, f441_arg2 )
	Engine[@"SetModelValue"]( Engine[@"GetModel"]( Engine[@"GetModel"]( Engine[@"GetGlobalModel"](), "socialRoot" ), "tab" ), f441_arg1.tabId ) --[[ @ 0]]
end

function FetchOnlineFriendsData( f442_arg0, f442_arg1, f442_arg2 )
	if "friends" == f442_arg1.tabId or f442_arg1.tabId == "friendsPlayersList" then
		Engine[@"UpdateFriends"]( f442_arg2, Enum[@"PresenceFilter"][@"hash_198ED4DF2FE3AFF0"] ) --[[ @ 0]]
	end
end

function OpenPlatformProfile( f443_arg0, f443_arg1, f443_arg2, f443_arg3, f443_arg4 )
	local f443_local0 = Engine[@"GetModelForController"]( f443_arg2 ) --[[ @ 0]]
	local f443_local1 --[[ @ 0]]
	if f443_arg3 then
		f443_local1 = f443_arg3.xuid --[[ @ 0]]
		if not f443_local1 then
		
		else
			local f443_local2 --[[ @ 0]]
			if f443_arg3 then
				f443_local2 = f443_arg3.gamertag --[[ @ 0]]
				if not f443_local2 then
				
				else
					Engine[@"hash_4730068F00F68FD0"]( f443_arg2, f443_local1, f443_local2 ) --[[ @ 0]]
				end
			end
			f443_local2 = Engine[@"GetModelValue"]( Engine[@"CreateModel"]( f443_local0, "Social.selectedFriendGamertag" ) ) --[[ @ 0]]
		end
	end
	f443_local1 = Engine[@"GetModelValue"]( Engine[@"CreateModel"]( f443_local0, "Social.selectedFriendXUID" ) ) --[[ @ 0]]
end

function OpenPlatformFriendRequest( f444_arg0, f444_arg1, f444_arg2, f444_arg3, f444_arg4 )
	local f444_local0 = Engine[@"GetModelForController"]( f444_arg2 ) --[[ @ 0]]
	local f444_local1 --[[ @ 0]]
	if f444_arg3 then
		f444_local1 = f444_arg3.xuid --[[ @ 0]]
		if not f444_local1 then
		
		else
			local f444_local2 --[[ @ 0]]
			if f444_arg3 then
				f444_local2 = f444_arg3.gamertag --[[ @ 0]]
				if not f444_local2 then
				
				else
					if CoD.isPC then
						Engine[@"hash_AF6BD480E7BDBAB"]( f444_local1 ) --[[ @ 0]]
					else
						Engine[@"hash_5F9C6B7BC719697C"]( f444_arg2, f444_local1, f444_local2 ) --[[ @ 0]]
					end
				end
			end
			f444_local2 = Engine[@"GetModelValue"]( Engine[@"CreateModel"]( f444_local0, "Social.selectedFriendGamertag" ) ) --[[ @ 0]]
		end
	end
	f444_local1 = Engine[@"GetModelValue"]( Engine[@"CreateModel"]( f444_local0, "Social.selectedFriendXUID" ) ) --[[ @ 0]]
end

function SocialJoin( f445_arg0, f445_arg1, f445_arg2, f445_arg3, f445_arg4, f445_arg5 )
	if CoD.isPC then
		LobbyQuickJoinWithXuid( f445_arg0, f445_arg2, f445_arg3.xuid ) --[[ @ 0]]
		return 
	elseif Engine[@"IsInGame"]() then
		if not Engine[@"hash_686E64DD1C270046"]( Enum[@"LobbyModule"][@"hash_40C46B73E8E18BA2"], Enum[@"LobbyType"][@"hash_692676CF5B6FCD43"], f445_arg3.xuid ) then
			f445_arg3.migrating = not CoDShared.QuitGame( f445_arg2 ) --[[ @ 0]]
			Engine[@"hash_787AE7E64BA5AD61"]( "OnInGameJoin", f445_arg3 ) --[[ @ 0]]
		end
	else
		Engine[@"hash_787AE7E64BA5AD61"]( "OnJoin", f445_arg3 ) --[[ @ 0]]
	end
	if not f445_arg5 then
		local f445_local0 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
		f445_local0 = f445_local0.lobbyRoot:create( "closePopups" ) --[[ @ 0]]
		f445_local0:forceNotifySubscriptions() --[[ @ 0]]
	end
end

function CacheSocialOnlinePlayersListModels( f446_arg0, f446_arg1, f446_arg2 )
	if Engine[@"GetModelValue"]( Engine[@"CreateModel"]( Engine[@"CreateModel"]( Engine[@"GetGlobalModel"](), "socialRoot" ), "tab" ) ) == "party" then
		return 
	end
	local f446_local0, f446_local1, f446_local2, f446_local3, f446_local4, f446_local5, f446_local6 = nil --[[ @ 0]]
	if f446_arg0.cacheRootModel ~= nil then
		f446_local0 = f446_arg0.cacheXuid --[[ @ 0]]
		f446_local1 = f446_arg0.cacheParty --[[ @ 0]]
		f446_local2 = f446_arg0.cachePartyUpdate --[[ @ 0]]
		f446_local6 = f446_arg0.cachePartyGamertags --[[ @ 0]]
		f446_local3 = f446_arg0.cachePartyTotal --[[ @ 0]]
		f446_local4 = f446_arg0.cachePartyAvailable --[[ @ 0]]
		f446_local5 = f446_arg0.cachePartyLeader --[[ @ 0]]
	else
		local f446_local7 = Engine[@"GetModel"]( Engine[@"GetGlobalModel"](), "socialRoot" ) --[[ @ 0]]
		f446_local0 = Engine[@"CreateModel"]( Engine[@"CreateModel"]( f446_local7, "cache" ), "xuid" ) --[[ @ 0]]
		f446_local1 = Engine[@"CreateModel"]( f446_local7, "party" ) --[[ @ 0]]
		f446_local2 = Engine[@"CreateModel"]( f446_local1, "update" ) --[[ @ 0]]
		f446_local3 = Engine[@"CreateModel"]( f446_local1, "total" ) --[[ @ 0]]
		f446_local4 = Engine[@"CreateModel"]( f446_local1, "available" ) --[[ @ 0]]
		f446_local5 = Engine[@"CreateModel"]( f446_local1, "leader" ) --[[ @ 0]]
		Engine[@"SetModelValue"]( f446_local0, Engine[@"StringToXUIDDecimal"]( "0" ) ) --[[ @ 0]]
		f446_local6 = {} --[[ @ 0]]
		for f446_local8 = 1 --[[ @ 0]], 18, 1 do
			f446_local6[f446_local8] = Engine[@"CreateModel"]( Engine[@"CreateModel"]( f446_local1, "pm_" .. f446_local8 ), "gamertag" ) --[[ @ 0]]
			Engine[@"SetModelValue"]( f446_local6[f446_local8], "" ) --[[ @ 0]]
		end
	end
	if f446_arg1.party ~= nil then
		Engine[@"SetModelValue"]( f446_local0, f446_arg1.xuid ) --[[ @ 0]]
		Engine[@"SetModelValue"]( f446_local3, f446_arg1.party.total ) --[[ @ 0]]
		Engine[@"SetModelValue"]( f446_local4, f446_arg1.party.available ) --[[ @ 0]]
		Engine[@"SetModelValue"]( f446_local5, f446_arg1.party.leader ) --[[ @ 0]]
		if f446_arg1.party.members ~= nil then
			for f446_local7 = 1 --[[ @ 0]], #f446_local6, 1 do
				local f446_local10 = f446_local6[f446_local7] --[[ @ 0]]
				if f446_arg1.party.members[f446_local7] ~= nil then
					Engine[@"SetModelValue"]( f446_local10, f446_arg1.party.members[f446_local7].gamertag ) --[[ @ 0]]
				end
			end
			local f446_local7 = Engine[@"GetModelValue"]( f446_local2 ) --[[ @ 0]]
			if f446_local7 < 100000 then
				f446_local7 = f446_local7 + 1 --[[ @ 0]]
			else
				f446_local7 = 0 --[[ @ 0]]
			end
			Engine[@"SetModelValue"]( f446_local2, f446_local7 ) --[[ @ 0]]
		end
	end
end

function SetSelectedFriendXUID( f447_arg0, f447_arg1, f447_arg2 )
	local f447_local0 = nil --[[ @ 0]]
	if f447_arg1 ~= nil then
		local f447_local1 = f447_arg1:getModel() --[[ @ 0]]
		local f447_local2 = f447_local1 --[[ @ 0]]
		local f447_local3 = f447_local1.xuid --[[ @ 0]]
		if f447_local3 then
			f447_local3 = f447_local2 and f447_local1.xuid:get() --[[ @ 0]]
		end
		if f447_local3 ~= nil then
			local f447_local4 = Engine[@"GetModelForController"]( f447_arg2 ) --[[ @ 0]]
			Engine[@"SetModelValue"]( Engine[@"CreateModel"]( f447_local4, "Social.selectedFriendXUID" ), f447_local3 ) --[[ @ 0]]
			local f447_local5 = f447_local1.info and f447_local1.info:get() or f447_local1 --[[ @ 0]]
			local f447_local6 = f447_local5 and f447_local5.gamertag --[[ @ 0]]
			local f447_local7 = f447_local6 and f447_local6:get() --[[ @ 0]]
			Engine[@"SetModelValue"]( Engine[@"CreateModel"]( f447_local4, "Social.selectedFriendGamertag" ), f447_local7 ) --[[ @ 0]]
			if Engine[@"hash_64C599F1694E23EF"]( f447_local3 ) == "fefefefefefefefe" then
				local f447_local8 = Engine[@"CreateModel"]( Engine[@"GetModelForController"]( f447_arg2 ), "socialPlayerInfo.identityBadge" ) --[[ @ 0]]
				Engine[@"SetModelValue"]( Engine[@"CreateModel"]( f447_local8, "gamertag" ), f447_local7 ) --[[ @ 0]]
				Engine[@"SetModelValue"]( Engine[@"CreateModel"]( f447_local8, "clantag" ), "" ) --[[ @ 0]]
			end
			if not CoD.isPC then
				local f447_local8 = f447_local5 and f447_local5.presence --[[ @ 0]]
				if f447_local8 ~= nil then
					Engine[@"SetModelValue"]( Engine[@"CreateModel"]( f447_local4, "Social.selectedFriendInTitle" ), f447_local8:get() > Enum[@"hash_4BBA402DE649132"][@"hash_7A2184EBB293AF2D"] ) --[[ @ 0]]
				end
			else
				Engine[@"SetModelValue"]( Engine[@"CreateModel"]( f447_local4, "Social.selectedFriendInTitle" ), (f447_local1.battlenetPresence and f447_local1.battlenetPresence:get() or CoD.PCBattlenetUtility.GetBattlenetPresence( f447_local3 )) ~= Enum[@"hash_28811A60F2FF3ADA"][@"hash_5D7B6D45F00CF380"] ) --[[ @ 0]]
			end
		end
	end
end

function SocialToggleSorting( f448_arg0, f448_arg1, f448_arg2 )
	local f448_local0 = Engine[@"GetModel"]( Engine[@"GetModel"]( Engine[@"GetGlobalModel"](), "socialRoot" ), "sort" ) --[[ @ 0]]
	local f448_local1 = Engine[@"GetModelValue"]( f448_local0 ) --[[ @ 0]]
	if f448_local1 == Enum[@"PresenceSorting"][@"hash_6378D2974EF235BB"] then
		Engine[@"SetModelValue"]( f448_local0, Enum[@"PresenceSorting"][@"hash_6874C3506F8D93CE"] ) --[[ @ 0]]
		Engine[@"SortFriends"]( f448_arg2, Enum[@"PresenceSorting"][@"hash_6874C3506F8D93CE"] ) --[[ @ 0]]
	elseif f448_local1 == Enum[@"PresenceSorting"][@"hash_6874C3506F8D93CE"] then
		Engine[@"SetModelValue"]( f448_local0, Enum[@"PresenceSorting"][@"hash_6378D2974EF235BB"] ) --[[ @ 0]]
		Engine[@"SortFriends"]( f448_arg2, Enum[@"PresenceSorting"][@"hash_6378D2974EF235BB"] ) --[[ @ 0]]
	end
end

function SocialEnablePresenceCacheAutoupdate( f449_arg0, f449_arg1 )
	if Engine[@"EnablePresenceCacheAutoupdate"] ~= nil then
		Engine[@"EnablePresenceCacheAutoupdate"]( f449_arg0, f449_arg1 ) --[[ @ 0]]
	end
end

function UpdateFriends( f450_arg0, f450_arg1, f450_arg2 )
	local f450_local0 = f450_arg0 --[[ @ 0]]
	Engine[@"UpdateFriends"]( f450_arg2, Enum[@"PresenceFilter"][@"hash_198ED4DF2FE3AFF0"] ) --[[ @ 0]]
end

function SpectateSelectedPlayer( f451_arg0, f451_arg1, f451_arg2 )
	Engine[@"SendMenuResponse"]( f451_arg2, "spectate", "clientNum", Engine[@"GetModelValue"]( Engine[@"GetModel"]( f451_arg1:getModel(), "clientNum" ) ) ) --[[ @ 0]]
end

function SetShoutcastHighlightedPlayer( f452_arg0, f452_arg1, f452_arg2 )
	Dvar[@"hash_69E29B87C17AED9"]:set( Engine[@"GetModelValue"]( Engine[@"GetModel"]( f452_arg1:getModel(), "clientNum" ) ) ) --[[ @ 0]]
end

function ToggleCodCasterQuickSettings( f453_arg0, f453_arg1, f453_arg2 )
	if not f453_arg1.profileVar then
		return 
	elseif not CoD.ShoutcasterProfileVarBool( f453_arg2, f453_arg1.profileVar ) then
		CoD.SetShoutcasterProfileVarValue( f453_arg2, f453_arg1.profileVar, 1 ) --[[ @ 0]]
	else
		CoD.SetShoutcasterProfileVarValue( f453_arg2, f453_arg1.profileVar, 0 ) --[[ @ 0]]
	end
	Engine[@"SetModelValue"]( Engine[@"GetModel"]( f453_arg1:getModel(), "profileVarValue" ), CoD.ShoutcasterProfileVarBool( f453_arg2, f453_arg1.profileVar ) ) --[[ @ 0]]
	if Engine[@"IsInGame"]() and f453_arg1.profileVar == "shoutcaster_ds_thirdperson" then
		Engine[@"ExecNow"]( f453_arg2, "shoutcaster_thirdperson " .. CoD.ShoutcasterProfileVarValue( f453_arg2, f453_arg1.profileVar ) ) --[[ @ 0]]
	end
end

function SetCodCasterProfileValue( f454_arg0, f454_arg1, f454_arg2, f454_arg3, f454_arg4 )
	CoD.SetShoutcasterProfileVarValue( f454_arg2, f454_arg3, f454_arg4 ) --[[ @ 0]]
end

function AdjustShoutcasterTeam( f455_arg0, f455_arg1, f455_arg2, f455_arg3 )
	local f455_local0 = CoD.TeamUtility.GetTeams() --[[ @ 0]]
	local f455_local1 = CoD.ShoutcasterProfileVarValue( f455_arg2, "shoutcaster_team" ) --[[ @ 0]]
	local f455_local2 = 0 --[[ @ 0]]
	for f455_local6, f455_local7 in pairs( f455_local0 ) --[[ @ 0]] do
		if f455_local7 == f455_local1 then
			f455_local2 = f455_local6 - 1 --[[ @ 0]]
			break
		end
	end
	f455_local4 = f455_local0[(f455_local2 + f455_arg3) % #f455_local0 + 1] --[[ @ 0]]
	if f455_local4 then
		CoD.SetShoutcasterProfileVarValue( f455_arg2, "shoutcaster_team", f455_local4 ) --[[ @ 0]]
	end
end

function HandleTeamIdentityKeyboardComplete( f456_arg0, f456_arg1, f456_arg2, f456_arg3 )
	local f456_local0, f456_local1 = nil --[[ @ 0]]
	local f456_local2 = Engine[@"GetModelValue"]( Engine[@"GetModel"]( DataSources.TeamIdentity.getModel( f456_arg2 ), "team" ) ) --[[ @ 0]]
	local f456_local3 = DataSources.TeamIdentityInformation.getModel( f456_arg2, f456_local2 ) --[[ @ 0]]
	if f456_arg3.type == Enum[@"KeyboardType"][@"hash_424364F159D318D1"] then
		f456_local0 = Engine[@"GetModel"]( f456_local3, "teamName" ) --[[ @ 0]]
		f456_local1 = "shoutcaster_fe_" .. f456_local2 .. "_name" --[[ @ 0]]
	end
	if f456_local0 then
		Engine[@"SetModelValue"]( f456_local0, f456_arg3.input ) --[[ @ 0]]
		CoD.SetShoutcasterProfileVarValue( f456_arg2, f456_local1, f456_arg3.input ) --[[ @ 0]]
	end
end

function SetTeamIdentityProfileValue( f457_arg0, f457_arg1, f457_arg2, f457_arg3 )
	if not f457_arg3 or f457_arg3 == "" then
		return 
	else
		local f457_local0 = Engine[@"GetModel"]( f457_arg1:getModel(), "id" ) --[[ @ 0]]
		if not f457_local0 then
			return 
		else
			CoD.SetShoutcasterProfileVarValue( f457_arg2, "shoutcaster_fe_" .. Engine[@"GetModelValue"]( Engine[@"GetModel"]( DataSources.TeamIdentity.getModel( f457_arg2 ), "team" ) ) .. "_" .. f457_arg3, Engine[@"GetModelValue"]( f457_local0 ) ) --[[ @ 0]]
		end
	end
end

function SetTeamIdentityTeamLogo( f458_arg0, f458_arg1, f458_arg2 )
	local f458_local0 = DataSources.TeamIdentityInformation.getModel( f458_arg2, Engine[@"GetModelValue"]( Engine[@"GetModel"]( DataSources.TeamIdentity.getModel( f458_arg2 ), "team" ) ) ) --[[ @ 0]]
	local f458_local1 = Engine[@"GetModelValue"]( Engine[@"GetModel"]( f458_arg1:getModel(), "ref" ) ) --[[ @ 0]]
	local f458_local2 = Engine[@"GetModelValue"]( Engine[@"GetModel"]( f458_arg1:getModel(), "name" ) ) --[[ @ 0]]
	Engine[@"SetModelValue"]( Engine[@"GetModel"]( f458_local0, "teamLogo" ), f458_local1 ) --[[ @ 0]]
	Engine[@"SetModelValue"]( Engine[@"GetModel"]( f458_local0, "teamLogoName" ), f458_local2 ) --[[ @ 0]]
end

function SetTeamIdentityTeamColor( f459_arg0, f459_arg1, f459_arg2 )
	Engine[@"SetModelValue"]( Engine[@"GetModel"]( DataSources.TeamIdentityInformation.getModel( f459_arg2, Engine[@"GetModelValue"]( Engine[@"GetModel"]( DataSources.TeamIdentity.getModel( f459_arg2 ), "team" ) ) ), "teamColor" ), Engine[@"GetModelValue"]( Engine[@"GetModel"]( f459_arg1:getModel(), "color" ) ) ) --[[ @ 0]]
end

function UpdateSelectedTeamIdentityColorElement( f460_arg0, f460_arg1, f460_arg2 )
	local f460_local0 = CoD.ShoutcasterProfileVarValue( f460_arg2, "shoutcaster_fe_" .. Engine[@"GetModelValue"]( Engine[@"GetModel"]( DataSources.TeamIdentity.getModel( f460_arg2 ), "team" ) ) .. "_color" ) --[[ @ 0]]
	local f460_local1 = Engine[@"GetModelValue"]( Engine[@"GetModel"]( f460_arg1:getModel(), "id" ) ) --[[ @ 0]]
	local f460_local2 = f460_arg0.TeamColorList:findItem( {
		id = f460_local0
	} ) --[[ @ 0]]
	if f460_local2 then
		Engine[@"SetModelValue"]( Engine[@"GetModel"]( f460_local2:getModel(), "selected" ), false ) --[[ @ 0]]
	end
	Engine[@"SetModelValue"]( Engine[@"GetModel"]( f460_arg1:getModel(), "selected" ), true ) --[[ @ 0]]
end

function SaveShoutcasterSettings( f461_arg0, f461_arg1, f461_arg2 )
	Engine[@"StorageWrite"]( f461_arg2, Enum[@"StorageFileType"][@"hash_20ED1503A2D3DAE6"] ) --[[ @ 0]]
end

function OpenBlackMarket( f462_arg0, f462_arg1, f462_arg2 )
	if Engine[@"PushAnticheatMessageToUI"]( f462_arg2, LuaEnum.ANTICHEAT_MESSAGE_GROUPS.LOOT ) then
		DisplayAnticheatMessage( f462_arg0, f462_arg2, LuaEnum.ANTICHEAT_MESSAGE_GROUPS.LOOT, "", "" ) --[[ @ 0]]
		return 
	end
	for f462_local0 = 0 --[[ @ 0]], LuaDefine.MAX_CONTROLLER_COUNT - 1, 1 do
		if CheckIfFeatureIsBanned( f462_local0, LuaEnum.FEATURE_BAN.LOOT ) then
			LuaUtils.UI_ShowErrorMessageDialog( f462_arg2, GetFeatureBanInfo( f462_local0, LuaEnum.FEATURE_BAN.LOOT ) ) --[[ @ 0]]
			return 
		end
	end
	OpenOverlay( f462_arg0, "BlackMarket", f462_arg2 ) --[[ @ 0]]
end

function QuitPCGame_MP( f463_arg0, f463_arg1, f463_arg2 )
	if CoD.isPC then
		if LuaUtils.IsArenaMode() then
			return CoD.OverlayUtility.CreateOverlay( f463_arg1, f463_arg0, "QuitPCArenaMatchPopup", f463_arg2 )
		else
			return CoD.OverlayUtility.CreateOverlay( f463_arg1, f463_arg0, "QuitPCMatchPopup", f463_arg2 )
		end
	else
		
	end
end

function QuitPCGame_WZ_Spectating( f464_arg0, f464_arg1 )
	if CoD.isPC then
		return CoD.OverlayUtility.CreateOverlay( f464_arg1, f464_arg0, "QuitPCMatchWhileSpectatingPopup" )
	else
		
	end
end

function OpenPCQuit( f465_arg0, f465_arg1, f465_arg2, f465_arg3 )
	if CoD.isPC and not Engine[@"IsCinematicPlaying"]() then
		local f465_local0 = f465_arg0:getMenu() --[[ @ 0]]
		if f465_local0.pcQuitOverlayActive ~= nil then
			f465_local0.pcQuitOverlayActive = true --[[ @ 0]]
		end
		local f465_local1 = nil --[[ @ 0]]
		if f465_local0.id ~= "Menu.Main" and IsArenaMode() then
			f465_local1 = CoD.OverlayUtility.CreateOverlay( f465_arg3, f465_arg0, "QuitPCArenaGamePopup" ) --[[ @ 0]]
		else
			f465_local1 = CoD.OverlayUtility.CreateOverlay( f465_arg3, f465_arg0, "QuitPCGamePopup" ) --[[ @ 0]]
		end
		if f465_local1 and CoD.PCKoreaUtility.IsInKorea() then
			f465_local1.KoreaIcons = CoD.PC_Quit_Korea_Container.new( f465_arg0, f465_arg3, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
			f465_local1:addElement( f465_local1.KoreaIcons ) --[[ @ 0]]
			f465_arg0:sendInitializationEvents( f465_arg3, f465_local1.KoreaIcons ) --[[ @ 0]]
			LUI.OverrideFunction_CallOriginalSecond( f465_local1, "close", function ( element )
				if f465_local1.KoreaIcons then
					f465_local1.KoreaIcons:close() --[[ @ 0]]
					f465_local1.KoreaIcons = nil --[[ @ 0]]
				end
			end ) --[[ @ 0]]
		end
		f465_local0._quitOverlay = f465_local1 --[[ @ 0]]
		LUI.OverrideFunction_CallOriginalSecond( f465_local0, "close", function ( element )
			if element.pcQuitOverlayActive then
				element.pcQuitOverlayActive = false --[[ @ 0]]
				element._quitOverlay:close() --[[ @ 0]]
				element._quitOverlay = nil --[[ @ 0]]
			end
		end ) --[[ @ 0]]
	end
end

function ResetPCControlsToDefault( f468_arg0, f468_arg1 )
	Engine[@"hash_2F5E06BF5D4254B3"]( f468_arg1 ) --[[ @ 0]]
	CoD.PCOptionsUtility.RevertPCHardwareChanges( f468_arg0, f468_arg1 ) --[[ @ 0]]
end

function ResetEverythingOnPC( f469_arg0, f469_arg1 )
	ResetPCControlsToDefault( f469_arg0, f469_arg1 ) --[[ @ 0]]
	ResetPCBindingsToDefault( f469_arg0, f469_arg1 ) --[[ @ 0]]
	Dvar.cl_firstTimeOpenControlsOptionsScreen:set( true ) --[[ @ 0]]
	CoD.CACUtility.SetDefaultLoadouts( {
		controller = f469_arg1,
		storageFileType = Enum[@"StorageFileType"][@"hash_7F9A4C4451E3499E"]
	} ) --[[ @ 0]]
	CoD.CACUtility.SetDefaultLoadouts( {
		controller = f469_arg1,
		storageFileType = Enum[@"StorageFileType"][@"hash_D062FA7B47FC13A"]
	} ) --[[ @ 0]]
end

function GetGameplayOptionsAndSendToDlog( f470_arg0 )
	local f470_local0 = {} --[[ @ 0]]
	for f470_local4, f470_local5 in ipairs( {
		@"hitmarkers_enable",
		@"hitmarkers_damage_type",
		@"healthbar_show_ally",
		@"healthbar_show_enemy",
		@"hash_2908DA91B796EF6C",
		@"hash_54AE3D347A07EF76",
		@"show_real_names",
		@"chat_profanity_filter",
		@"hash_4149D47F55A63FCE",
		@"display_crosshair",
		@"ui_play_intro_movies",
		@"hash_45C8A34838083469",
		@"hash_72A230CA7EF4FC3B",
		@"out_of_ammo_auto_weapon_change",
		@"weapon_cycle_disable_wrap",
		@"windows_key_disable",
		@"hash_240948D6DAD927CC",
		@"hash_73ACD00BFA946E04",
		@"hash_12F32416F055FB97",
		@"hash_5776C366A031E7AA",
		@"hash_70E40A5983CFC89E",
		@"hash_7E097D1CD549FC9F",
		@"hash_209EC6E9BBF1E624",
		@"hash_7A8185C366CE482D",
		@"hash_DC87A9A3F0598F7",
		@"hash_5CAB10393A53422",
		@"hash_77752D94F07335E2",
		@"hash_3822BC17B9C05B55",
		@"hash_3390921F2448418A",
		@"hash_3DD0F63C56107AFE",
		@"hash_5EB73EA37514AB9B",
		@"hash_16DE9FB5C4249D93",
		@"hash_68F129F338DA3F71",
		@"hash_17E6145DFB22A72",
		@"hash_54450BE10E911B4A",
		@"hash_1638BD10A42E5F63",
		@"hash_366E5DDF4F903021",
		@"hash_3C6C61740D1F775A",
		@"hash_35162012A7259ACA",
		@"hash_57F5133E1E3E624A"
	} ) --[[ @ 0]] do
		if f470_local5 == @"hash_16DE9FB5C4249D93" then
			f470_local0[@"hash_16DE9FB5C4249D93"] = CoD.PCOptionsUtility.GetCurrentOptionValue( f470_local5, f470_arg0 ) ~= 0 --[[ @ 0]]
		end
		if f470_local5 == @"hash_4149D47F55A63FCE" then
			f470_local0[@"hash_4149D47F55A63FCE"] = CoD.PCOptionsUtility.GetCurrentOptionValue( f470_local5, f470_arg0 ) ~= 0 --[[ @ 0]]
		else
			f470_local0[f470_local5] = CoD.PCOptionsUtility.GetCurrentOptionValue( f470_local5, f470_arg0 ) ~= 0 --[[ @ 0]]
		end
	end
	f470_local0[@"hash_7659B9A54E5830C7"] = Dvar[@"hash_7659B9A54E5830C7"]:get() --[[ @ 0]]
	f470_local0[@"cg_fov_default"] = Dvar[@"cg_fov_default"]:get() --[[ @ 0]]
	f470_local0[@"hash_7B790F54FC3DEE14"] = Dvar[@"hash_4EB1835CF0F023D"]:get() --[[ @ 0]]
	Engine[@"hash_30DE279ECDDDD966"]( f470_arg0, @"hash_521034E1157F040C", f470_local0 ) --[[ @ 0]]
end

function GetKeybindsAndSendToDlog( f471_arg0 )
	local f471_local0 = function ( f472_arg0 )
		return string.gsub( string.gsub( string.gsub( string.gsub( f472_arg0, "%^", "" ), "BmouseWheelDown", "MW_Down" ), "BmouseWheelUp", "MW_Up" ), "BmouseButton", "MB_" )
	end
	 --[[ @ 0]]
	local f471_local1 = {} --[[ @ 0]]
	local f471_local2 = {
		"+forward",
		"+back",
		"+moveleft",
		"+moveright",
		"+gostand",
		"+movedown",
		"togglecrouch",
		"gocrouch",
		"+prone",
		"toggleprone",
		"goprone",
		"+breath_sprint",
		"+breath_holdsprint",
		"+sprint",
		"+hold_sprint",
		"+holdbreath",
		"togglebreath",
		"+stance",
		"slide",
		"autorun",
		"+raisestance",
		"+raisestancejump",
		"+lowerstance",
		"+mantle",
		"+attack",
		"+speed_throw",
		"+toggleads_throw",
		"weapnext",
		"weapprev",
		"weapswitchprimary",
		"weapswitchsecondary",
		"+frag",
		"+smoke",
		"+weapoffhandspecial",
		"+melee_zoom",
		"+melee",
		"+activate",
		"scorestreak1",
		"scorestreak2",
		"scorestreak3",
		"scorestreak4",
		"+scores",
		"togglescores",
		"+scoreszm",
		"togglescoreszm",
		"+map",
		"togglemap",
		"+inventoryzm",
		"toggleinventoryzm",
		"togglescoreswz"
	} --[[ @ 0]]
	local f471_local3 = "+scoreswz" --[[ @ 0]]
	local f471_local4 = "chooseclass_1" --[[ @ 0]]
	local f471_local5 = "chooseclass_2" --[[ @ 0]]
	local f471_local6 = "chooseclass_3" --[[ @ 0]]
	local f471_local7 = "chooseclass_4" --[[ @ 0]]
	local f471_local8 = "chooseclass_5" --[[ @ 0]]
	local f471_local9 = "chooseclass_6" --[[ @ 0]]
	local f471_local10 = "chooseclass_7" --[[ @ 0]]
	local f471_local11 = "chooseclass_8" --[[ @ 0]]
	local f471_local12 = "chooseclass_9" --[[ @ 0]]
	local f471_local13 = "chooseclass_10" --[[ @ 0]]
	local f471_local14 = "chooseclass_11" --[[ @ 0]]
	local f471_local15 = "chooseclass_12" --[[ @ 0]]
	local f471_local16 = "flourish" --[[ @ 0]]
	local f471_local17 = "+calloutwheel" --[[ @ 0]]
	local f471_local18 = "quickspray" --[[ @ 0]]
	local f471_local19 = "+spraygesturewheel" --[[ @ 0]]
	local f471_local20 = "quickcallout" --[[ @ 0]]
	local f471_local21 = "+vehiclealtcontrol" --[[ @ 0]]
	local f471_local22 = "+vehicleboost" --[[ @ 0]]
	local f471_local23 = "+vehicleattack" --[[ @ 0]]
	local f471_local24 = "+vehicleattacksecond" --[[ @ 0]]
	local f471_local25 = "+vehiclemovedown" --[[ @ 0]]
	local f471_local26 = "+vehiclemoveup" --[[ @ 0]]
	local f471_local27 = "+handbrake" --[[ @ 0]]
	local f471_local28 = "+switchseat" --[[ @ 0]]
	local f471_local29 = "+vehicleseat1" --[[ @ 0]]
	local f471_local30 = "+vehicleseat2" --[[ @ 0]]
	local f471_local31 = "+vehicleseat3" --[[ @ 0]]
	local f471_local32 = "+vehicleseat4" --[[ @ 0]]
	local f471_local33 = "+vehicleseat5" --[[ @ 0]]
	local f471_local34 = "+vehiclehorn" --[[ @ 0]]
	local f471_local35 = "+pickup" --[[ @ 0]]
	local f471_local36 = "+inventory" --[[ @ 0]]
	local f471_local37 = "toggleinventory" --[[ @ 0]]
	local f471_local38 = "quickcycle_equipment" --[[ @ 0]]
	local f471_local39 = "quickcycle_health" --[[ @ 0]]
	local f471_local40 = "+armorrepair" --[[ @ 0]]
	local f471_local41 = "quickconsume1" --[[ @ 0]]
	local f471_local42 = "quickconsume2" --[[ @ 0]]
	local f471_local43 = "usebgb1" --[[ @ 0]]
	local f471_local44 = "usebgb2" --[[ @ 0]]
	local f471_local45 = "usebgb3" --[[ @ 0]]
	local f471_local46 = "usebgb4" --[[ @ 0]]
	local f471_local47 = "chatmodepublic" --[[ @ 0]]
	local f471_local48 = "chatmodeteam" --[[ @ 0]]
	local f471_local49 = "chatmodeparty" --[[ @ 0]]
	local f471_local50 = "+talk" --[[ @ 0]]
	local f471_local51 = "chatmodelast" --[[ @ 0]]
	local f471_local52 = "+lookup" --[[ @ 0]]
	f471_local2[33] = f471_local3 --[[ @ 0]]
	f471_local2[34] = f471_local4 --[[ @ 0]]
	f471_local2[35] = f471_local5 --[[ @ 0]]
	f471_local2[36] = f471_local6 --[[ @ 0]]
	f471_local2[37] = f471_local7 --[[ @ 0]]
	f471_local2[38] = f471_local8 --[[ @ 0]]
	f471_local2[39] = f471_local9 --[[ @ 0]]
	f471_local2[40] = f471_local10 --[[ @ 0]]
	f471_local2[41] = f471_local11 --[[ @ 0]]
	f471_local2[42] = f471_local12 --[[ @ 0]]
	f471_local2[43] = f471_local13 --[[ @ 0]]
	f471_local2[44] = f471_local14 --[[ @ 0]]
	f471_local2[45] = f471_local15 --[[ @ 0]]
	f471_local2[46] = f471_local16 --[[ @ 0]]
	f471_local2[47] = f471_local17 --[[ @ 0]]
	f471_local2[48] = f471_local18 --[[ @ 0]]
	f471_local2[49] = f471_local19 --[[ @ 0]]
	f471_local2[50] = f471_local20 --[[ @ 0]]
	f471_local2[51] = f471_local21 --[[ @ 0]]
	f471_local2[52] = f471_local22 --[[ @ 0]]
	f471_local2[53] = f471_local23 --[[ @ 0]]
	f471_local2[54] = f471_local24 --[[ @ 0]]
	f471_local2[55] = f471_local25 --[[ @ 0]]
	f471_local2[56] = f471_local26 --[[ @ 0]]
	f471_local2[57] = f471_local27 --[[ @ 0]]
	f471_local2[58] = f471_local28 --[[ @ 0]]
	f471_local2[59] = f471_local29 --[[ @ 0]]
	f471_local2[60] = f471_local30 --[[ @ 0]]
	f471_local2[61] = f471_local31 --[[ @ 0]]
	f471_local2[62] = f471_local32 --[[ @ 0]]
	f471_local2[63] = f471_local33 --[[ @ 0]]
	f471_local2[64] = f471_local34 --[[ @ 0]]
	f471_local2[65] = f471_local35 --[[ @ 0]]
	f471_local2[66] = f471_local36 --[[ @ 0]]
	f471_local2[67] = f471_local37 --[[ @ 0]]
	f471_local2[68] = f471_local38 --[[ @ 0]]
	f471_local2[69] = f471_local39 --[[ @ 0]]
	f471_local2[70] = f471_local40 --[[ @ 0]]
	f471_local2[71] = f471_local41 --[[ @ 0]]
	f471_local2[72] = f471_local42 --[[ @ 0]]
	f471_local2[73] = f471_local43 --[[ @ 0]]
	f471_local2[74] = f471_local44 --[[ @ 0]]
	f471_local2[75] = f471_local45 --[[ @ 0]]
	f471_local2[76] = f471_local46 --[[ @ 0]]
	f471_local2[77] = f471_local47 --[[ @ 0]]
	f471_local2[78] = f471_local48 --[[ @ 0]]
	f471_local2[79] = f471_local49 --[[ @ 0]]
	f471_local2[80] = f471_local50 --[[ @ 0]]
	f471_local2[81] = f471_local51 --[[ @ 0]]
	f471_local2[82] = f471_local52 --[[ @ 0]]
	f471_local3 = "+lookdown" --[[ @ 0]]
	f471_local4 = "+left" --[[ @ 0]]
	f471_local5 = "+right" --[[ @ 0]]
	f471_local6 = "centerview" --[[ @ 0]]
	f471_local7 = "ui_contextual_1" --[[ @ 0]]
	f471_local8 = "ui_contextual_2" --[[ @ 0]]
	f471_local9 = "ui_contextual_3" --[[ @ 0]]
	f471_local2[65] = f471_local3 --[[ @ 0]]
	f471_local2[66] = f471_local4 --[[ @ 0]]
	f471_local2[67] = f471_local5 --[[ @ 0]]
	f471_local2[68] = f471_local6 --[[ @ 0]]
	f471_local2[69] = f471_local7 --[[ @ 0]]
	f471_local2[70] = f471_local8 --[[ @ 0]]
	f471_local2[71] = f471_local9 --[[ @ 0]]
	for f471_local6, f471_local7 in ipairs( f471_local2 ) --[[ @ 0]] do
		f471_local8 = Engine[@"KeyBinding"]( f471_arg0, f471_local7, false ) --[[ @ 0]]
		f471_local9 = string.gsub( f471_local7, "+", "" ) --[[ @ 0]]
		if string.find( f471_local8, "%^" ) ~= nil then
			f471_local8 = f471_local0( f471_local8 ) --[[ @ 0]]
		end
		f471_local1[Engine[@"hash_1C53F8D38DF9042B"]( f471_local9 )] = f471_local8 --[[ @ 0]]
	end
	f471_local1[@"hash_188C9F291EEBF570"] = Dvar.cl_bindings_presetId:get() --[[ @ 0]]
	Engine[@"hash_30DE279ECDDDD966"]( f471_arg0, @"hash_1519B7131242305E", f471_local1 ) --[[ @ 0]]
end

function DispatchOptionRefreshEvent( f473_arg0, f473_arg1 )
	f473_arg0:dispatchEventToRoot( {
		name = "options_refresh",
		controller = f473_arg1
	} ) --[[ @ 0]]
end

function ResetPCBindingsToDefault( f474_arg0, f474_arg1 )
	if Dvar[@"hash_5F52444CC548D39F"]:get() then
		Engine[@"ExecNow"]( f474_arg1, "resetprofilecommon" ) --[[ @ 0]]
		Engine[@"ExecNow"]( f474_arg1, "updategamerprofile" ) --[[ @ 0]]
		Engine[@"ExecNow"]( f474_arg1, "storagereset stats_mp_offline" ) --[[ @ 0]]
	end
	Engine[@"ExecNow"]( f474_arg1, "defaultbindings" ) --[[ @ 0]]
	Engine[@"ExecNow"]( f474_arg1, "execcontrollerbindings" ) --[[ @ 0]]
	Engine[@"SyncHardwareProfileWithDvars"]() --[[ @ 0]]
	Dvar.cl_bindings_presetId:set( 0 ) --[[ @ 0]]
	Dvar.cl_bindings_presetIsModified:set( false ) --[[ @ 0]]
	DispatchOptionRefreshEvent( f474_arg0, f474_arg1 ) --[[ @ 0]]
end

function LoadPCBindings( f475_arg0, f475_arg1, f475_arg2 )
	Engine[@"ExecNow"]( f475_arg1, "selectbindings " .. f475_arg2 ) --[[ @ 0]]
	DispatchOptionRefreshEvent( f475_arg0, f475_arg1 ) --[[ @ 0]]
end

function ResetPCBindings( f476_arg0, f476_arg1 )
	Engine[@"ExecNow"]( f476_arg1, "defaultbindings" ) --[[ @ 0]]
	DispatchOptionRefreshEvent( f476_arg0, f476_arg1 ) --[[ @ 0]]
end

function ResetPCGraphicsOptions( f477_arg0, f477_arg1, f477_arg2, f477_arg3 )
	Engine[@"ResetHardwareProfileSettings"]( f477_arg2 ) --[[ @ 0]]
	Engine[@"SaveHardwareProfile"]() --[[ @ 0]]
	Engine[@"exec"]( nil, "vid_restart" ) --[[ @ 0]]
	CoD.PCOptionsUtility.RevertPCHardwareChanges( f477_arg0, f477_arg2 ) --[[ @ 0]]
	CoD.PCOptionsUtility.RefreshAllOptions( f477_arg1, f477_arg2 ) --[[ @ 0]]
	CoD.PCOptionsUtility.DelayVRAMBarUpdate( f477_arg3:getParent(), f477_arg2, 0 ) --[[ @ 0]]
end

function SetVerticaListSpacerHeight( f478_arg0, f478_arg1 )
	if f478_arg1 then
		local f478_local0 = Engine[@"GetModelValue"]( f478_arg1 ) --[[ @ 0]]
		if f478_local0 then
			f478_arg0:setTopBottom( true, false, 0, f478_local0 ) --[[ @ 0]]
		end
	end
end

function EnableMouseButton( f479_arg0, f479_arg1 )
	f479_arg0:setHandleMouseButton( true ) --[[ @ 0]]
end

function DisableMouseButton( f480_arg0, f480_arg1 )
	f480_arg0:setHandleMouseButton( false ) --[[ @ 0]]
end

function EnableMouseMove( f481_arg0, f481_arg1 )
	f481_arg0:setHandleMouseMove( true ) --[[ @ 0]]
end

function Gunsmith_ClearSelectedGunsmithVariantStats( f482_arg0 )
	local f482_local0 = CoD.perController[f482_arg0].gunsmithVariantModel --[[ @ 0]]
	if f482_local0 then
		local f482_local1 = Engine[@"GetModelValue"]( Engine[@"GetModel"]( f482_local0, "variantIndex" ) ) --[[ @ 0]]
		CoD.CraftUtility.Gunsmith.ClearVariantStats( f482_arg0, f482_local1, Enum[@"eModes"][@"hash_383EBA96F36BC4E5"] ) --[[ @ 0]]
		CoD.CraftUtility.Gunsmith.ClearVariantStats( f482_arg0, f482_local1, Enum[@"eModes"][@"hash_360063C67132EB69"] ) --[[ @ 0]]
	end
end

function Gunsmith_ClearCACWithUpdatedVariant( f483_arg0, f483_arg1 )
	local f483_local0 = Engine[@"GetModelValue"]( Engine[@"GetModel"]( CoD.perController[f483_arg1].gunsmithVariantModel, "variantIndex" ) ) + 1 --[[ @ 0]]
	local f483_local1 = function ( f484_arg0, f484_arg1, f484_arg2 )
		local f484_local0 = Engine[@"GetClassItem"]( f483_arg1, f484_arg0, f484_arg1, f484_arg2 ) --[[ @ 0]]
		if f484_local0 > CoD.CACUtility.EmptyItemIndex and f484_local0 == f483_local0 then
			Engine[@"SetClassItem"]( f483_arg1, f484_arg0, f484_arg1, CoD.CACUtility.EmptyItemIndex, f484_arg2 ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	local f483_local2 = function ( f485_arg0 )
		local f485_local0 = CoD.CACUtility.GetCustomClassCount( f483_arg1, f485_arg0 ) --[[ @ 0]]
		for f485_local1 = 1 --[[ @ 0]], f485_local0, 1 do
			local f485_local4 = f485_local1 - 1 --[[ @ 0]]
			f483_local1( f485_local4, "primarygunsmithvariant", f485_arg0 ) --[[ @ 0]]
			f483_local1( f485_local4, "secondarygunsmithvariant", f485_arg0 ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	f483_local2( Enum[@"eModes"][@"hash_360063C67132EB69"] ) --[[ @ 0]]
	f483_local2( Enum[@"eModes"][@"hash_383EBA96F36BC4E5"] ) --[[ @ 0]]
end

function Gunsmith_SnapshotToggleDisplayProperty( f486_arg0, f486_arg1, f486_arg2 )
	local f486_local0 = f486_arg1:getModel( f486_arg2, "param" ) --[[ @ 0]]
	if f486_local0 then
		local f486_local1 = Engine[@"GetModelValue"]( f486_local0 ) --[[ @ 0]]
		if f486_local1 then
			local f486_local2 = Engine[@"GetModel"]( Engine[@"GetGlobalModel"](), f486_local1 ) --[[ @ 0]]
			if f486_local2 then
				Engine[@"SetModelValue"]( f486_local2, (Engine[@"GetModelValue"]( f486_local2 ) + 1) % 2 ) --[[ @ 0]]
			end
		end
	end
end

function OpenCustomGamesLobby( f487_arg0, f487_arg1 )
	if not IsLobbyNetworkModeLAN() then
		CoD.DirectorUtility.NavigateToCustomLobbyForCurrentMode( f487_arg0, f487_arg1 ) --[[ @ 0]]
	else
		CoD.DirectorUtility.OfflineNavigateToCustomGames( f487_arg0, f487_arg1 ) --[[ @ 0]]
	end
end

function OpenResetGameSettingsPopup( f488_arg0, f488_arg1, f488_arg2, f488_arg3, f488_arg4 )
	f488_arg4:saveState( f488_arg2 ) --[[ @ 0]]
	CoD.OverlayUtility.CreateOverlay( f488_arg2, f488_arg0, "ResetCustomGameSettingsPC" ) --[[ @ 0]]
end

function CopyModelFindElement( f489_arg0, f489_arg1, f489_arg2, f489_arg3 )
	local f489_local0 = f489_arg2 --[[ @ 0]]
	while f489_local0 and not f489_local0[f489_arg3] do
		f489_local0 = f489_local0:getParent() --[[ @ 0]]
	end
	if f489_local0 and f489_local0[f489_arg3] then
		f489_local0[f489_arg3]:setModel( f489_arg2:getModel(), f489_arg1 ) --[[ @ 0]]
	end
end

function CopyScrollViewActiveModelToElementAndCacheSocialData( f490_arg0, f490_arg1, f490_arg2, f490_arg3 )
	local f490_local0 = f490_arg2.ScrollView.View.activeWidget --[[ @ 0]]
	if f490_local0 then
		f490_arg3:setModel( f490_local0:getModel(), f490_arg1 ) --[[ @ 0]]
		CacheSocialOnlinePlayersListModels( f490_arg0, f490_local0, f490_arg1 ) --[[ @ 0]]
	end
end

function StartMenuGoBack_ListElement( f491_arg0, f491_arg1, f491_arg2, f491_arg3, f491_arg4 )
	StartMenuGoBack( f491_arg4, f491_arg2 ) --[[ @ 0]]
end

function StartMenuGoBack( f492_arg0, f492_arg1 )
	if f492_arg0.onStartMenuClosed then
		f492_arg0:onStartMenuClosed( f492_arg1 ) --[[ @ 0]]
	end
	StartMenuResumeGame( f492_arg0, f492_arg1 ) --[[ @ 0]]
	if IsInGame() then
		if f492_arg0:getParent() then
		
		else
			ClearMenuSavedState( f492_arg0 ) --[[ @ 0]]
		end
		while f492_arg0.occludedBy ~= nil do
			GoBack( f492_arg0.occludedBy, f492_arg1 ) --[[ @ 0]]
		end
		if f492_arg0.occludedMenu ~= nil and f492_arg0.occludedMenu.occludedBy == f492_arg0 then
			if f492_arg0.occludedBy ~= nil then
				f492_arg0.occludedMenu.occludedBy = f492_arg0.occludedBy --[[ @ 0]]
			else
				if IsGameTypeDOA() and Engine[@"IsSplitscreen"]() then
					f492_arg0.occludedMenu:setOwner( f492_arg0:getOwner() ) --[[ @ 0]]
				end
				f492_arg0.occludedMenu:processEvent( {
					name = "occlusion_change",
					occluded = false,
					occludedBy = f492_arg0,
					controller = f492_arg1
				} ) --[[ @ 0]]
				local f492_local0 = Engine[@"GetModelForController"]( f492_arg1 ) --[[ @ 0]]
				f492_local0 = f492_local0.PositionDraft.stage:get() --[[ @ 0]]
				if f492_local0 and f492_local0 > 0 then
					f492_arg0.occludedMenu:setAlpha( 1 ) --[[ @ 0]]
				end
			end
		end
		f492_arg0.m_disableAllButtonActions = true --[[ @ 0]]
		if DataSources.FreeCursor.getButtonPromptsModel( f492_arg1 ) == f492_arg0.buttonModel then
			DataSources.FreeCursor.registerButtonPrompts( f492_arg1, nil ) --[[ @ 0]]
		end
		f492_arg0:processEvent( {
			name = "lose_focus",
			controller = f492_arg1
		} ) --[[ @ 0]]
		if CoD.GetMouseFocus( f492_arg1 ) and f492_arg0:isParentOf( CoD.GetMouseFocus( f492_arg1 ) ) then
			CoD.SetCurrentMouseFocus( f492_arg1, nil ) --[[ @ 0]]
		end
		CoD.HUDUtility.GiveFocus( f492_arg0.occludedMenu, f492_arg1 ) --[[ @ 0]]
		if CoD.isPC then
			CoD.PCUtility.MigrateStickyElementsBackward( f492_arg0, f492_arg1 ) --[[ @ 0]]
			if IsDemoPlaying() then
				CoD.DemoUtility.GiveFocusToDemoEmptyFocusableOnPC( f492_arg0.occludedMenu, f492_arg1 ) --[[ @ 0]]
			end
		end
		local f492_local0 = f492_arg0:getParent() --[[ @ 0]]
		f492_local0:removeElement( f492_arg0 ) --[[ @ 0]]
	else
		GoBack( f492_arg0, f492_arg1 ) --[[ @ 0]]
		if CoD.isPC then
			CoD.PCUtility.MigrateStickyElementsBackward( f492_arg0, f492_arg1 ) --[[ @ 0]]
		end
	end
	ClearMenuSavedState( f492_arg0 ) --[[ @ 0]]
end

function UpdateTabDatasource( f493_arg0 )
	local f493_local0 = LUI.getTableFromPath( "Tabs.grid", f493_arg0 ) --[[ @ 0]]
	if f493_local0 then
		f493_local0:updateDataSource( true ) --[[ @ 0]]
	end
end

function UpdateStartMenuTabsDatasource( f494_arg0 )
	local f494_local0 = LUI.getTableFromPath( "FETabBar.Tabs.grid", f494_arg0 ) --[[ @ 0]]
	if f494_local0 then
		f494_local0:updateDataSource( true ) --[[ @ 0]]
	end
end

function StartMenuResumeGame( f495_arg0, f495_arg1 )
	if Engine[@"IsInGame"]() and Engine[@"CanPauseGame"]() and not Engine[@"hash_2A55C3ACD0D2BCF0"]() then
		if IsZombies() then
			Engine[@"hash_7FA25B276065ED3C"]() --[[ @ 0]]
		else
			Engine[@"SetDvar"]( "cl_paused", 0 ) --[[ @ 0]]
		end
	end
	if Engine[@"IsInGame"]() then
		local f495_local0 = 0 --[[ @ 0]]
		local f495_local1 = Engine[@"GetMaxLocalControllers"]() - 1 --[[ @ 0]]
		for f495_local2 = f495_local0 --[[ @ 0]], f495_local1, 1 do
			if Engine[@"IsControllerBeingUsed"]( f495_local2 ) then
				Engine[@"SetActiveMenu"]( f495_local2, Enum[@"hash_152E616D9ABDBF0E"][@"hash_1A1CE036AEF3710F"] ) --[[ @ 0]]
			end
		end
	end
end

function CloseStartMenu( f496_arg0, f496_arg1 )
	local f496_local0 = GoBackToMenu( f496_arg0, f496_arg1, "StartMenu_Main" ) --[[ @ 0]]
	if f496_local0.menuName == "StartMenu_Main" or f496_local0.menuName == "DOA_INGAME_PAUSE" then
		StartMenuGoBack( f496_local0, f496_arg1 ) --[[ @ 0]]
	end
end

function RefreshLobbyRoom( f497_arg0, f497_arg1 )
	if Engine[@"IsInGame"]() then
		return 
	end
	local f497_local0 = Engine[@"GetModel"]( Engine[@"GetGlobalModel"](), "lobbyRoot.lobbyGameMode" ) --[[ @ 0]]
	local f497_local1 = Engine[@"GetModel"]( Engine[@"GetGlobalModel"](), "lobbyRoot.lobbyMainMode" ) --[[ @ 0]]
	local f497_local2 = Engine[@"GetModel"]( Engine[@"GetGlobalModel"](), "lobbyRoot.isMatchmaking" ) --[[ @ 0]]
	local f497_local3 = Engine[@"GetModel"]( Engine[@"GetGlobalModel"](), "lobbyRoot.showSelect" ) --[[ @ 0]]
	local f497_local4 = Engine[@"GetModel"]( Engine[@"GetGlobalModel"](), "lobbyRoot.room" ) --[[ @ 0]]
	if f497_local4 then
		local f497_local5 = Engine[@"GetModelValue"]( f497_local4 ) --[[ @ 0]]
		if f497_local5 == "auto" then
			f497_local5 = Engine[@"GetAbbreviationForMode"]( Engine[@"GetMostRecentPlayedMode"]( f497_arg1 ) ) --[[ @ 0]]
			if Engine[@"SessionModeIsMode"]( Enum[@"hash_51DD23D27A61F09A"][@"hash_43E66A586897A605"] ) == true then
				f497_local5 = f497_local5 .. "_local" --[[ @ 0]]
			end
			if IsCustomLobby() then
				f497_local5 = f497_local5 .. "_custom" --[[ @ 0]]
			end
		end
		local f497_local6 = LobbyData.GetCurrentMenuTarget() --[[ @ 0]]
		if f497_local2:get() and f497_local1:get() == Enum[@"LobbyMainMode"][@"hash_37E41449995CD57E"] and IsLobbyMode( Enum[@"LobbyMode"][@"hash_2BB5FD8AEFC4D4B9"] ) then
			SendCustomClientScriptMenuStateChangeNotify( f497_arg1, "Main", true, "matchmaking" ) --[[ @ 0]]
		elseif not f497_local3:get() and f497_local6[@"name"] == LuaEnum.UI.DIRECTOR_ONLINE then
			SendCustomClientScriptMenuStateChangeNotify( f497_arg1, "Main", true, "room3" ) --[[ @ 0]]
		else
			SendCustomClientScriptMenuStateChangeNotify( f497_arg1, "Main", true, f497_local5 ) --[[ @ 0]]
		end
		f497_arg0.previousRoom = f497_local5 --[[ @ 0]]
	end
	if LuaUtils.GetEModeForLobbyMainMode( f497_local1:get() ) == Enum[@"eModes"][@"hash_360063C67132EB69"] and not IsFirstTimeSetup( f497_arg1, Enum[@"eModes"][@"hash_360063C67132EB69"] ) then
		CoD.CPUtility.EnteredCP_FlowComplete( f497_arg1 ) --[[ @ 0]]
	end
end

function OpenLobbyInspection( f498_arg0, f498_arg1, f498_arg2 )
	if CoD.DirectorUtility.DisableForCurrentMilestone( f498_arg2 ) then
		SetSelectedFriendXUID( f498_arg0, f498_arg1, f498_arg2 ) --[[ @ 0]]
		OpenOverlay( f498_arg1, "Social_PlayerDetailsPopup", f498_arg2, {
			disableInspection = true
		} ) --[[ @ 0]]
	else
		local f498_local0 = OpenOverlay --[[ @ 0]]
		local f498_local1 = f498_arg0 --[[ @ 0]]
		local f498_local2 = "LobbyInspection" --[[ @ 0]]
		local f498_local3 = f498_arg2 --[[ @ 0]]
		local f498_local4 = {} --[[ @ 0]]
		local f498_local5 = f498_arg1:getModel() --[[ @ 0]]
		f498_local5 = f498_local5.info:get() --[[ @ 0]]
		f498_local4.selectedXUID = f498_local5.xuid:get() --[[ @ 0]]
		f498_local0( f498_local1, f498_local2, f498_local3, f498_local4 ) --[[ @ 0]]
	end
end

function UpdatePlayerInspection( f499_arg0, f499_arg1, f499_arg2 )
	local f499_local0 = f499_arg1:getModel() --[[ @ 0]]
	f499_local0 = f499_local0.info --[[ @ 0]]
	local f499_local1 --[[ @ 0]]
	if f499_local0 then
		f499_local1 = f499_local0:get() --[[ @ 0]]
		f499_local1 = f499_local1.xuid:get() --[[ @ 0]]
		if not f499_local1 then
		
		else
			if Engine[@"hash_20F7F835CF63F45B"]( f499_local1 ) then
				Engine[@"SendClientScriptNotify"]( f499_arg2, "inspect_player", {
					xuid = Engine[@"hash_75065E759595C457"]( f499_local1 )
				} ) --[[ @ 0]]
			end
		end
	end
	f499_local1 = f499_arg1:getModel() --[[ @ 0]]
	f499_local1 = f499_local1.xuid:get() --[[ @ 0]]
end

function UpdatePlayerInspectionWeapon( f500_arg0, f500_arg1, f500_arg2 )
	local f500_local0 = f500_arg1:getModel() --[[ @ 0]]
	f500_local0 = f500_local0.info --[[ @ 0]]
	local f500_local1 --[[ @ 0]]
	if f500_local0 then
		f500_local1 = f500_local0:get() --[[ @ 0]]
		f500_local1 = f500_local1.xuid:get() --[[ @ 0]]
		if not f500_local1 then
		
		else
			local f500_local2 = Engine[@"CurrentSessionMode"]() --[[ @ 0]]
			if f500_local2 >= Enum[@"eModes"][@"hash_96642BDE9B5962E"] then
				return 
			end
			local f500_local3 = {
				clear_weapon = true
			} --[[ @ 0]]
			if Engine[@"hash_20F7F835CF63F45B"]( f500_local1 ) then
				local f500_local4 = Engine[@"hash_18D62F7DFF8054F6"]( f500_local1 ) --[[ @ 0]]
				if f500_local4 then
					local f500_local5 = DataSources.InspectionWeapon.getModel( f500_arg2 ) --[[ @ 0]]
					f500_local5.weaponIndex:set( f500_local4.weaponIndex ) --[[ @ 0]]
					f500_local5.camoIndex:set( f500_local4.camoIndex ) --[[ @ 0]]
					local f500_local6 = f500_local4.weaponIndex --[[ @ 0]]
					if f500_local6 > CoD.CACUtility.EmptyItemIndex then
						local f500_local7 = Engine[@"hash_7B98952F69D937F9"]( f500_local6, Enum[@"hash_6EB546760F890D2"][@"hash_6569E84652131CD7"], f500_local2 ) --[[ @ 0]]
						local f500_local8 = "" --[[ @ 0]]
						for f500_local12, f500_local13 in ipairs( f500_local4.attachments ) --[[ @ 0]] do
							if f500_local13.attachmentIndex > CoD.CACUtility.EmptyItemIndex then
								f500_local8 = LUI.appendStringWithDelimiter( f500_local8, Engine[@"GetAttachmentRef"]( f500_local6, f500_local13.attachmentIndex ), "+" ) --[[ @ 0]]
							end
						end
						f500_local3 = {
							weapon = f500_local7,
							attachments = f500_local8,
							camoIndex = f500_local4.camoIndex,
							paintjobSlot = f500_local4.paintjobSlot,
							weaponModelSlot = f500_local4.weaponModelSlot
						} --[[ @ 0]]
					end
				end
			end
			Engine[@"SendClientScriptNotify"]( f500_arg2, "inspect_player_weapon", f500_local3 ) --[[ @ 0]]
		end
	end
	f500_local1 = f500_arg1:getModel() --[[ @ 0]]
	f500_local1 = f500_local1.xuid:get() --[[ @ 0]]
end

function UpdateGamerprofile( f501_arg0, f501_arg1, f501_arg2 )
	Engine[@"exec"]( f501_arg2, "updategamerprofile" ) --[[ @ 0]]
end

function OpenGroupEmblemSelect( f502_arg0, f502_arg1, f502_arg2, f502_arg3, f502_arg4 )
	CoD.SetCustomization( f502_arg2, Enum[@"CustomizationType"][@"hash_5979B4C08E9D67B2"], "type" ) --[[ @ 0]]
	Engine[@"hash_74D36976C1BD7E"]( f502_arg2 ) --[[ @ 0]]
	local f502_local0 = true --[[ @ 0]]
	CoD.perController[f502_arg2].selectedEmblemTabStorageType = f502_arg3 --[[ @ 0]]
	CoD.CraftUtility.SetSelectedStorageFileType( f502_arg2, f502_arg3 ) --[[ @ 0]]
	f502_local0 = CoD.CraftUtility.Emblems.ParseDDL( f502_arg2, CoD.perController[f502_arg2].selectedEmblemTabStorageType, CoD.perController[f502_arg2].selectedEmblemTabStickerCategory ) --[[ @ 0]]
	if f502_local0 then
		f502_local0 = CoD.CraftUtility.Groups.ParseDDL( f502_arg2 ) --[[ @ 0]]
	end
	if f502_local0 then
		OpenOverlay( f502_arg0, "EmblemSelect", f502_arg2, {
			_selectGroupEmblem = true,
			_storageClientBuffer = CoD.BreadcrumbUtility.GetStorageClientBufferForPlayer( f502_arg2, Enum[@"eModes"][@"hash_383EBA96F36BC4E5"] )
		} ) --[[ @ 0]]
	end
end

function OpenEmblemSelect( f503_arg0, f503_arg1, f503_arg2, f503_arg3, f503_arg4, f503_arg5 )
	if f503_arg5 then
		if Engine[@"PushAnticheatMessageToUI"]( f503_arg2, LuaEnum.ANTICHEAT_MESSAGE_GROUPS.UGC ) then
			DisplayAnticheatMessage( f503_arg4, f503_arg2, LuaEnum.ANTICHEAT_MESSAGE_GROUPS.UGC, "EmblemEditor", "" ) --[[ @ 0]]
			return 
		elseif CheckIfFeatureIsBanned( f503_arg2, LuaEnum.FEATURE_BAN.USER_GENERATED_CONTENT ) then
			LuaUtils.UI_ShowErrorMessageDialog( f503_arg2, GetFeatureBanInfo( f503_arg2, LuaEnum.FEATURE_BAN.USER_GENERATED_CONTENT ) ) --[[ @ 0]]
			return 
		end
	end
	CoD.SetCustomization( f503_arg2, Enum[@"CustomizationType"][@"hash_5979B4C08E9D67B2"], "type" ) --[[ @ 0]]
	Engine[@"hash_74D36976C1BD7E"]( f503_arg2 ) --[[ @ 0]]
	local f503_local0 = true --[[ @ 0]]
	if f503_arg5 == "true" then
		CoD.perController[f503_arg2].selectedEmblemTabStorageType = f503_arg3 --[[ @ 0]]
		CoD.CraftUtility.SetSelectedStorageFileType( f503_arg2, f503_arg3 ) --[[ @ 0]]
		f503_local0 = CoD.CraftUtility.Emblems.ParseDDL( f503_arg2, CoD.perController[f503_arg2].selectedEmblemTabStorageType, CoD.perController[f503_arg2].selectedEmblemTabStickerCategory ) --[[ @ 0]]
	else
		CoD.perController[f503_arg2].selectedEmblemTabStorageType = nil --[[ @ 0]]
	end
	if f503_local0 then
		f503_local0 = CoD.CraftUtility.Groups.ParseDDL( f503_arg2 ) --[[ @ 0]]
	end
	if f503_local0 then
		OpenOverlay( f503_arg0, "EmblemSelect", f503_arg2, {
			_isEditor = f503_arg5,
			_storageClientBuffer = CoD.BreadcrumbUtility.GetStorageClientBufferForPlayer( f503_arg2, Enum[@"eModes"][@"hash_383EBA96F36BC4E5"] )
		} ) --[[ @ 0]]
	end
end

function OpenEmblemEditor( f504_arg0, f504_arg1, f504_arg2, f504_arg3 )
	if Engine[@"PushAnticheatMessageToUI"]( f504_arg2, LuaEnum.ANTICHEAT_MESSAGE_GROUPS.UGC ) then
		DisplayAnticheatMessage( f504_arg1, f504_arg2, LuaEnum.ANTICHEAT_MESSAGE_GROUPS.UGC, "EmblemEditor", "" ) --[[ @ 0]]
		return 
	elseif CheckIfFeatureIsBanned( f504_arg2, LuaEnum.FEATURE_BAN.USER_GENERATED_CONTENT ) then
		LuaUtils.UI_ShowErrorMessageDialog( f504_arg2, GetFeatureBanInfo( f504_arg2, LuaEnum.FEATURE_BAN.USER_GENERATED_CONTENT ) ) --[[ @ 0]]
		return 
	else
		CoD.CraftUtility.EmblemSelect_ChooseEmblem( f504_arg1, f504_arg0, f504_arg2 ) --[[ @ 0]]
		OpenOverlay( f504_arg1, "EmblemEditor", f504_arg2, {
			_storageClientBuffer = CoD.BreadcrumbUtility.GetStorageClientBufferForPlayer( f504_arg2, Enum[@"eModes"][@"hash_383EBA96F36BC4E5"] )
		} ) --[[ @ 0]]
	end
end

function OpenPaintjobEditor( f505_arg0, f505_arg1, f505_arg2, f505_arg3 )
	if Engine[@"PushAnticheatMessageToUI"]( f505_arg2, LuaEnum.ANTICHEAT_MESSAGE_GROUPS.UGC ) then
		DisplayAnticheatMessage( f505_arg1, f505_arg2, LuaEnum.ANTICHEAT_MESSAGE_GROUPS.UGC, "PaintjobEditor", "" ) --[[ @ 0]]
		return 
	elseif CheckIfFeatureIsBanned( f505_arg2, LuaEnum.FEATURE_BAN.USER_GENERATED_CONTENT ) then
		LuaUtils.UI_ShowErrorMessageDialog( f505_arg2, GetFeatureBanInfo( f505_arg2, LuaEnum.FEATURE_BAN.USER_GENERATED_CONTENT ) ) --[[ @ 0]]
		return 
	else
		PaintjobSelector_ChoosePaintjob( f505_arg1, f505_arg0, f505_arg2 ) --[[ @ 0]]
		OpenOverlay( f505_arg1, "PaintjobEditor", f505_arg2, {
			_sessionMode = f505_arg1._sessionMode,
			_storageClientBuffer = f505_arg1._storageClientBuffer
		} ) --[[ @ 0]]
	end
end

function OpenGunsmith( f506_arg0, f506_arg1, f506_arg2, f506_arg3, f506_arg4 )
	
end

function OpenCallingCards( f507_arg0, f507_arg1, f507_arg2, f507_arg3, f507_arg4 )
	local f507_local0 = {} --[[ @ 0]]
	if f507_arg3 and f507_arg3 ~= "" then
		f507_local0.callingCardShowcaseSlot = f507_arg3 --[[ @ 0]]
	end
	f507_local0._storageClientBuffer = CoD.BreadcrumbUtility.GetStorageClientBufferForPlayer( f507_arg2, Enum[@"eModes"][@"hash_383EBA96F36BC4E5"] ) --[[ @ 0]]
	f507_local0._sessionMode = f507_arg4._sessionMode --[[ @ 0]]
	f507_arg4:openOverlay( "CallingCards", f507_arg2, f507_local0 ) --[[ @ 0]]
end

function OpenGroups( f508_arg0, f508_arg1, f508_arg2, f508_arg3, f508_arg4 )
	if IsGroupsEnabled( f508_arg2 ) then
		InitializeGroups( f508_arg0, nil, f508_arg2 ) --[[ @ 0]]
		GoBackAndOpenOverlayOnParent( f508_arg0, "Groups", f508_arg2 ) --[[ @ 0]]
		CoD.FileshareUtility.SetFileshareMode( f508_arg2, Enum[@"FileshareMode"][@"hash_1E6B0DF550E4BA4D"] ) --[[ @ 0]]
	end
end

function OpenChooseCharacterLoadout( f509_arg0, f509_arg1, f509_arg2, f509_arg3, f509_arg4 )
	CoD.PlayerRoleUtility.customizationMode = Enum[@"eModes"][@"hash_383EBA96F36BC4E5"] --[[ @ 0]]
	CoD.LobbyUtility.OpenChooseCharacterLoadout( f509_arg4, f509_arg2, f509_arg3 ) --[[ @ 0]]
end

function EditClanTag( f510_arg0, f510_arg1, f510_arg2 )
	ShowKeyboard( f510_arg0, f510_arg1, f510_arg2, "KEYBOARD_TYPE_CLAN_TAG" ) --[[ @ 0]]
end

function OpenPopupMenuByNameParam( f511_arg0, f511_arg1, f511_arg2, f511_arg3, f511_arg4 )
	f511_arg4:openPopup( f511_arg3, f511_arg2 ) --[[ @ 0]]
end

function ResetThumbnailViewer( f512_arg0 )
	Engine[@"ExecNow"]( f512_arg0, "resetThumbnailViewer" ) --[[ @ 0]]
end

function PreserveThumbnails( f513_arg0, f513_arg1 )
	if f513_arg1 == true then
		Engine[@"ExecNow"]( f513_arg0, "preservethumbnails 1" ) --[[ @ 0]]
	else
		Engine[@"ExecNow"]( f513_arg0, "preservethumbnails 0" ) --[[ @ 0]]
	end
end

function TimelineEditorRefresh()
	local f514_local0 = Engine[@"GetModel"]( Engine[@"GetGlobalModel"](), "DemoSegments.refresh" ) --[[ @ 0]]
	Engine[@"SetModelValue"]( f514_local0, Engine[@"GetModelValue"]( f514_local0 ) + 1 ) --[[ @ 0]]
end

function TimelineEditorPreviewClip( f515_arg0, f515_arg1, f515_arg2 )
	CoD.InGameMenu.CloseAllInGameMenus( f515_arg0, {
		name = "close_all_ingame_menus",
		controller = f515_arg2
	} ) --[[ @ 0]]
	Engine[@"exec"]( f515_arg2, "demo_previewclip" ) --[[ @ 0]]
end

function TimelineEditorFilmOptions( f516_arg0, f516_arg1, f516_arg2 )
	OpenPopupWithPriority( f516_arg0, "TimelineEditorFilmOptions", f516_arg2 ) --[[ @ 0]]
end

function TimelineEditorChangeTransition( f517_arg0, f517_arg1, f517_arg2 )
	local f517_local0 = Engine[@"GetModel"]( f517_arg1:getModel(), "segmentNumber" ) --[[ @ 0]]
	if f517_local0 then
		local f517_local1 = Engine[@"GetModelValue"]( f517_local0 ) - 1 --[[ @ 0]]
		local f517_local2 = tonumber( Engine[@"hash_161A661773462085"]( f517_local1, "transitionValue" ) ) + 1 --[[ @ 0]]
		if f517_local2 > Enum[@"demoClipTransition"][@"hash_52CF5379491134FA"] then
			f517_local2 = Enum[@"demoClipTransition"][@"hash_2E6C0AB0E6047AF4"] --[[ @ 0]]
		end
		Engine[@"ExecNow"]( f517_arg2, "demo_switchtransition " .. f517_local1 .. " " .. f517_local2 ) --[[ @ 0]]
	end
end

function TimelineEditorUpdateHighlightedSegmentModel( f518_arg0, f518_arg1, f518_arg2, f518_arg3, f518_arg4 )
	local f518_local0 = nil --[[ @ 0]]
	if CoD.ModelUtility.IsGlobalModelValueTrue( "demo.showFilmOptionsSidebar" ) then
		return 
	elseif f518_arg3 == "gain_focus" then
		f518_local0 = true --[[ @ 0]]
	else
		f518_local0 = false --[[ @ 0]]
	end
	local f518_local1 = f518_arg1:getModel() --[[ @ 0]]
	if not f518_local1 then
		return 
	end
	Engine[@"SetModelValue"]( Engine[@"CreateModel"]( f518_local1, "highlighted" ), f518_local0 ) --[[ @ 0]]
end

function TimelineEditorKeyboardComplete( f519_arg0, f519_arg1, f519_arg2, f519_arg3 )
	Engine[@"SetModelValue"]( Engine[@"GetModel"]( CoD.DemoUtility.Timeline_GetHighlightedSegmentModel(), "name" ), f519_arg3.input ) --[[ @ 0]]
end

function IncreaseSafeAreaVertical( f520_arg0, f520_arg1, f520_arg2, f520_arg3, f520_arg4 )
	if f520_arg3 == nil then
		f520_arg3 = @"hash_2AAB73AB54470DF2" --[[ @ 0]]
	end
	if not CoD.SafeArea or not CoD.SafeArea.Maximum or not CoD.SafeArea.AdjustAmount then
		return 
	elseif not f520_arg4 then
		f520_arg4 = CoD.SafeArea.AdjustAmount --[[ @ 0]]
	end
	local f520_local0 = (tonumber( Engine[@"ProfileValueAsString"]( f520_arg2, f520_arg3 ) ) or 1) + f520_arg4 --[[ @ 0]]
	if f520_local0 <= CoD.SafeArea.Maximum then
		Engine[@"SetProfileVar"]( f520_arg2, f520_arg3, f520_local0 ) --[[ @ 0]]
	else
		Engine[@"SetProfileVar"]( f520_arg2, f520_arg3, CoD.SafeArea.Maximum ) --[[ @ 0]]
	end
end

function DecreaseSafeAreaVertical( f521_arg0, f521_arg1, f521_arg2, f521_arg3, f521_arg4 )
	if f521_arg3 == nil then
		f521_arg3 = @"hash_2AAB73AB54470DF2" --[[ @ 0]]
	end
	if not CoD.SafeArea or not CoD.SafeArea.Maximum or not CoD.SafeArea.AdjustAmount then
		return 
	elseif not f521_arg4 then
		f521_arg4 = CoD.SafeArea.AdjustAmount --[[ @ 0]]
	end
	local f521_local0 = (tonumber( Engine[@"ProfileValueAsString"]( f521_arg2, f521_arg3 ) ) or 1) - f521_arg4 --[[ @ 0]]
	if f521_local0 >= CoD.SafeArea.Minimum then
		Engine[@"SetProfileVar"]( f521_arg2, f521_arg3, f521_local0 ) --[[ @ 0]]
	else
		Engine[@"SetProfileVar"]( f521_arg2, f521_arg3, CoD.SafeArea.Minimum ) --[[ @ 0]]
	end
end

function IncreaseSafeAreaHorizontal( f522_arg0, f522_arg1, f522_arg2, f522_arg3, f522_arg4 )
	if f522_arg3 == nil then
		f522_arg3 = @"hash_30169739596DE678" --[[ @ 0]]
	end
	if not CoD.SafeArea or not CoD.SafeArea.Maximum or not CoD.SafeArea.AdjustAmount then
		return 
	elseif not f522_arg4 then
		f522_arg4 = CoD.SafeArea.AdjustAmount --[[ @ 0]]
	end
	local f522_local0 = (tonumber( Engine[@"ProfileValueAsString"]( f522_arg2, f522_arg3 ) ) or 1) + f522_arg4 --[[ @ 0]]
	if f522_local0 <= CoD.SafeArea.Maximum then
		Engine[@"SetProfileVar"]( f522_arg2, f522_arg3, f522_local0 ) --[[ @ 0]]
	else
		Engine[@"SetProfileVar"]( f522_arg2, f522_arg3, CoD.SafeArea.Maximum ) --[[ @ 0]]
	end
end

function DecreaseSafeAreaHorizontal( f523_arg0, f523_arg1, f523_arg2, f523_arg3, f523_arg4 )
	if f523_arg3 == nil then
		f523_arg3 = @"hash_30169739596DE678" --[[ @ 0]]
	end
	if not CoD.SafeArea or not CoD.SafeArea.Maximum or not CoD.SafeArea.AdjustAmount then
		return 
	elseif not f523_arg4 then
		f523_arg4 = CoD.SafeArea.AdjustAmount --[[ @ 0]]
	end
	local f523_local0 = (tonumber( Engine[@"ProfileValueAsString"]( f523_arg2, f523_arg3 ) ) or 1) - f523_arg4 --[[ @ 0]]
	if CoD.isPC then
		local f523_local1, f523_local2, f523_local3 = Engine[@"hash_6913E41040C17FD"]( f523_arg2 ) --[[ @ 0]]
		if f523_local1 / f523_local2 < CoD.SafeArea.MinimumWidthHeightRatioPC then
			Engine[@"SetProfileVar"]( f523_arg2, f523_arg3, 1 ) --[[ @ 0]]
		elseif CoD.SafeArea.MinimumWidthHeightRatioPC * f523_local2 / f523_local1 < f523_local0 then
			Engine[@"SetProfileVar"]( f523_arg2, f523_arg3, f523_local0 ) --[[ @ 0]]
		else
			Engine[@"SetProfileVar"]( f523_arg2, f523_arg3, CoD.SafeArea.MinimumWidthHeightRatioPC * f523_local2 / f523_local1 ) --[[ @ 0]]
		end
	elseif f523_local0 >= CoD.SafeArea.Minimum then
		Engine[@"SetProfileVar"]( f523_arg2, f523_arg3, f523_local0 ) --[[ @ 0]]
	else
		Engine[@"SetProfileVar"]( f523_arg2, f523_arg3, CoD.SafeArea.Minimum ) --[[ @ 0]]
	end
end

function AdjustSafeArea( f524_arg0, f524_arg1, f524_arg2, f524_arg3, f524_arg4, f524_arg5, f524_arg6, f524_arg7 )
	local f524_local0 = math.abs( f524_arg4 ) --[[ @ 0]]
	if f524_arg3 then
		if f524_arg4 > 0 then
			f524_arg6( f524_arg0, f524_arg1, f524_arg2, f524_arg5, f524_local0 ) --[[ @ 0]]
		elseif f524_arg4 < 0 then
			f524_arg7( f524_arg0, f524_arg1, f524_arg2, f524_arg5, f524_local0 ) --[[ @ 0]]
		end
	elseif f524_arg4 > 0 then
		f524_arg7( f524_arg0, f524_arg1, f524_arg2, f524_arg5, f524_local0 ) --[[ @ 0]]
	elseif f524_arg4 < 0 then
		f524_arg6( f524_arg0, f524_arg1, f524_arg2, f524_arg5, f524_local0 ) --[[ @ 0]]
	end
end

function SetSafeArea( f525_arg0, f525_arg1, f525_arg2, f525_arg3, f525_arg4 )
	Engine[@"SetProfileVar"]( f525_arg2, f525_arg3, f525_arg4 ) --[[ @ 0]]
end

function ResetSafeAreaHorizontal( f526_arg0, f526_arg1, f526_arg2 )
	local f526_local0, f526_local1, f526_local2 = Engine[@"hash_6913E41040C17FD"]( f526_arg2 ) --[[ @ 0]]
	if f526_local0 / f526_local1 <= CoD.SafeArea.DefaultWidthHeightRatioPC then
		SetSafeArea( f526_arg0, f526_arg1, f526_arg2, @"hash_17664E60A992DFDA", CoD.SafeArea.Maximum ) --[[ @ 0]]
	else
		SetSafeArea( f526_arg0, f526_arg1, f526_arg2, @"hash_17664E60A992DFDA", CoD.SafeArea.DefaultWidthHeightRatioPC * f526_local1 / f526_local0 ) --[[ @ 0]]
	end
	DispatchEventToRoot( f526_arg0, "update_safe_area", f526_arg2 ) --[[ @ 0]]
end

function CallingCards_SetPlayerBackground( f527_arg0, f527_arg1, f527_arg2 )
	local f527_local0 = Engine[@"GetModel"]( f527_arg1:getModel(), "iconId" ) --[[ @ 0]]
	if f527_local0 ~= nil then
		local f527_local1 = Engine[@"GetModelValue"]( f527_local0 ) --[[ @ 0]]
		if f527_arg0.callingCardShowcaseSlot then
			Engine[@"SetCombatRecordBackgroundId"]( f527_arg2, CoD.InspectionUtility.GetShowcaseCategoryForCurrentSessionMode(), f527_local1, f527_arg0.callingCardShowcaseSlot ) --[[ @ 0]]
			local f527_local2 = Engine[@"GetModel"]( Engine[@"GetGlobalModel"](), "CallingCardShowcaseUpdated" ) --[[ @ 0]]
			if f527_local2 then
				Engine[@"ForceNotifyModelSubscriptions"]( f527_local2 ) --[[ @ 0]]
			end
			if f527_arg0.callingCardShowcaseIsBM then
				GoBack( GoBack( f527_arg0, f527_arg2 ), f527_arg2 ) --[[ @ 0]]
			else
				GoBack( f527_arg0, f527_arg2 ) --[[ @ 0]]
			end
		else
			SetEmblemBackground_Internal( f527_arg2, f527_local1 ) --[[ @ 0]]
		end
		f527_arg1:playSound( "list_action", f527_arg2 ) --[[ @ 0]]
	end
	ForceNotifyControllerModel( f527_arg2, "identityBadge.xuid" ) --[[ @ 0]]
end

function CallingCards_EmblemGetProfile( f528_arg0, f528_arg1, f528_arg2 )
	Engine[@"hash_74D36976C1BD7E"]( f528_arg2 ) --[[ @ 0]]
	ForceNotifyControllerModel( f528_arg2, "identityBadge.xuid" ) --[[ @ 0]]
end

function CallingCards_GoBack( f529_arg0, f529_arg1 )
	if not IsLive() then
		Engine[@"CommitProfileChanges"]( f529_arg1 ) --[[ @ 0]]
	else
		CoD.CraftUtility.UploadPublicProfile( f529_arg0, f529_arg1 ) --[[ @ 0]]
		CoD.BreadcrumbUtility.UploadBuffer( f529_arg1, Enum[@"StorageFileType"][@"hash_6FDE358A242AFA2C"] ) --[[ @ 0]]
	end
	CoD.BlackMarketUtility.CleanupCachedCallingCardData( f529_arg1 ) --[[ @ 0]]
	DataSources.CallingCardsBlackMarketMasterCard.invalidate( f529_arg1 ) --[[ @ 0]]
end

function OpenEnterPrestigeModeMenu( f530_arg0, f530_arg1, f530_arg2 )
	if CheckIfFeatureIsBanned( f530_arg1, LuaEnum.FEATURE_BAN.PRESTIGE ) then
		LuaUtils.UI_ShowErrorMessageDialog( f530_arg1, GetFeatureBanInfo( f530_arg1, LuaEnum.FEATURE_BAN.PRESTIGE ) ) --[[ @ 0]]
		return 
	else
		OpenSystemOverlay( f530_arg0, f530_arg2, f530_arg1, "EnterPrestigeMode", nil ) --[[ @ 0]]
	end
end

function OpenPrestigeFreshStartMenu( f531_arg0, f531_arg1, f531_arg2 )
	OpenSystemOverlay( f531_arg0, f531_arg2, f531_arg1, "PrestigeFreshStart1", nil ) --[[ @ 0]]
end

function OpenCustomizePrestigeMenu( f532_arg0, f532_arg1, f532_arg2 )
	if CheckIfFeatureIsBanned( f532_arg1, LuaEnum.FEATURE_BAN.PRESTIGE_EXTRAS ) then
		LuaUtils.UI_ShowErrorMessageDialog( f532_arg1, GetFeatureBanInfo( f532_arg1, LuaEnum.FEATURE_BAN.PRESTIGE_EXTRAS ) ) --[[ @ 0]]
		return 
	elseif CoD.PrestigeUtility.GetPrestigeGameMode() == Enum[@"eModes"][@"hash_73723205FAE52C4A"] then
		OpenOverlay( f532_arg0, "Prestige_CustomizePrestigeIconZM", f532_arg1, "", "" ) --[[ @ 0]]
	else
		OpenOverlay( f532_arg0, "Prestige_CustomizePrestigeIcon", f532_arg1, "", "" ) --[[ @ 0]]
	end
end

function OpenPermanentUnlockMenu( f533_arg0, f533_arg1, f533_arg2 )
	if CheckIfFeatureIsBanned( f533_arg1, LuaEnum.FEATURE_BAN.PRESTIGE_EXTRAS ) then
		LuaUtils.UI_ShowErrorMessageDialog( f533_arg1, GetFeatureBanInfo( f533_arg1, LuaEnum.FEATURE_BAN.PRESTIGE_EXTRAS ) ) --[[ @ 0]]
		return 
	else
		CoD.PrestigeUtility.previousGameMode = CoD.gameMode --[[ @ 0]]
		CoD.PrestigeUtility.previousStatsMilestonePath = CoD.statsMilestonePath --[[ @ 0]]
		CoD.gameMode = "MP" --[[ @ 0]]
		CoD.statsMilestonePath = "gamedata/stats/mp/statsmilestones" --[[ @ 0]]
		SetHeadingKickerText( @"hash_556F8CED179E36FD" ) --[[ @ 0]]
		CoD.PrestigeUtility.CreatePermanentUnlockTokenModel( f533_arg1 ) --[[ @ 0]]
		local f533_local0 = Engine[@"CreateModel"]( Engine[@"GetModelForController"]( f533_arg1 ), "PermanentlyUnlockClass" ) --[[ @ 0]]
		CoD.CACUtility.GetCustomClassModel( f533_arg1, 0, f533_local0 ) --[[ @ 0]]
		CoD.perController[f533_arg1].classModel = f533_local0 --[[ @ 0]]
		OpenOverlay( f533_arg0, "Prestige_PermanentUnlocks", f533_arg1 ) --[[ @ 0]]
	end
end

function OpenPermanentUnlockCategoryMenu( f534_arg0, f534_arg1, f534_arg2, f534_arg3, f534_arg4 )
	local f534_local0 = CoD.PrestigeUtility.GetContentCategoryData( f534_arg3 ) --[[ @ 0]]
	CoD.perController[f534_arg2].weaponCategory = f534_local0.weaponCategory --[[ @ 0]]
	NavigateToMenu( f534_arg0, f534_local0.menuName, true, f534_arg2 ) --[[ @ 0]]
end

function OpenPermanentWeaponUnlockCategoryMenu( f535_arg0, f535_arg1, f535_arg2, f535_arg3, f535_arg4 )
	OpenPermanentUnlockCategoryMenu( f535_arg0, f535_arg1, f535_arg2, f535_arg3, f535_arg4 ) --[[ @ 0]]
end

function SetIsInPrestigeMenu( f536_arg0 )
	CoD.PrestigeUtility.isInPermanentUnlockMenu = f536_arg0 --[[ @ 0]]
end

function SetStableStatsBuffer( f537_arg0 )
	
end

function CloseCPAAR( f538_arg0, f538_arg1 )
	CoD.perController[f538_arg1].lastAARMapName = Engine[@"hash_3E67E7253CC272C9"]() --[[ @ 0]]
	CoD.perController[f538_arg1].fromMaxLevelMessage = false --[[ @ 0]]
end

function OpenCRMFeaturedPopup( f539_arg0, f539_arg1, f539_arg2, f539_arg3, f539_arg4 )
	if f539_arg3 == "MOTDBanner" then
		local f539_local0 = Engine[@"CreateModel"]( Engine[@"GetGlobalModel"](), "CRMPopup" ) --[[ @ 0]]
		Engine[@"SetModelValue"]( Engine[@"CreateModel"]( f539_local0, "location" ), "registration" ) --[[ @ 0]]
		Engine[@"SetModelValue"]( Engine[@"CreateModel"]( f539_local0, "actionSource" ), f539_arg3 ) --[[ @ 0]]
	elseif f539_arg3 == "Featured" then
		local f539_local0 = Engine[@"CreateModel"]( Engine[@"GetGlobalModel"](), "CRMPopup" ) --[[ @ 0]]
		Engine[@"SetModelValue"]( Engine[@"CreateModel"]( f539_local0, "location" ), "crm_featured" ) --[[ @ 0]]
		Engine[@"SetModelValue"]( Engine[@"CreateModel"]( f539_local0, "actionSource" ), f539_arg3 ) --[[ @ 0]]
	end
	OpenOverlay( f539_arg4, "CRMPopup", f539_arg2 ) --[[ @ 0]]
end

function SetBubbleGumPackNameFromPackIndex( f540_arg0, f540_arg1, f540_arg2 )
	return Engine[@"SetBubbleGumPackName"]( f540_arg0, f540_arg1, f540_arg2 )
end

function SetMap( f541_arg0, f541_arg1, f541_arg2 )
	local f541_local0 = CoD.MapUtility.MapsTable[f541_arg1] --[[ @ 0]]
	if f541_local0 == nil then
		f541_arg1 = Engine[@"hash_1C53F8D38DF9042B"]( LuaUtils.GetDefaultMap( LobbyData.GetCurrentMenuTarget() ) ) --[[ @ 0]]
		f541_local0 = CoD.MapUtility.MapsTable[f541_arg1] --[[ @ 0]]
	end
	if f541_local0[@"hash_B514EC7141EE89B"] and f541_local0[@"hash_B514EC7141EE89B"] ~= "" then
		Engine[@"exec"]( f541_arg0, f541_local0[@"hash_B514EC7141EE89B"] ) --[[ @ 0]]
	end
	local f541_local1 = Engine[@"hash_3C3DF042E7492B66"]( Enum[@"LobbyModule"][@"hash_298EA1BB7164D103"] ) --[[ @ 0]]
	if f541_local0[@"hash_3E2D141CB22F2813"] and f541_local0[@"hash_3E2D141CB22F2813"] ~= "" then
		Engine[@"hash_39DB4788AE93C72D"]( f541_local1, f541_local0[@"hash_3E2D141CB22F2813"] ) --[[ @ 0]]
	else
		Engine[@"hash_39DB4788AE93C72D"]( f541_local1, f541_local0.mapToLoad ) --[[ @ 0]]
	end
	Engine[@"SetProfileVar"]( f541_arg0, CoD.profileKey_map, f541_local0.mapToLoad ) --[[ @ 0]]
	local f541_local2 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f541_local2 = f541_local2:create( "lobbyRoot.selectedMapId" ) --[[ @ 0]]
	f541_local2:set( f541_arg1 ) --[[ @ 0]]
	Engine[@"CommitProfileChanges"]( f541_arg0 ) --[[ @ 0]]
end

function OpenPurchaseMapPackConfirmation( f542_arg0, f542_arg1, f542_arg2 )
	local f542_local0 = Engine[@"hash_7943893A16399DCF"] --[[ @ 0]]
	local f542_local1 = f542_arg1.mapName --[[ @ 0]]
	if not f542_local1 then
		f542_local1 = f542_arg1.mapId or f542_arg1.id --[[ @ 0]]
	end
	f542_local0 = f542_local0( f542_local1 ) --[[ @ 0]]
	CoD.OverlayUtility.CreateOverlay( f542_arg0, f542_arg2, "Store", f542_arg0, {
		dlcPack = f542_local0 and CoD.DLCPackFromBit[f542_local0]
	} ) --[[ @ 0]]
end

function MapSelected( f543_arg0, f543_arg1 )
	SetMap( f543_arg1, f543_arg0.mapName, false ) --[[ @ 0]]
end

function SetInCustomGames( f544_arg0 )
	Engine[@"SetModelValue"]( Engine[@"CreateModel"]( Engine[@"CreateModel"]( Engine[@"GetGlobalModel"](), "CustomGamesRoot" ), "inCustomGames" ), f544_arg0 ) --[[ @ 0]]
end

function GetCurrentGameType( f545_arg0 )
	return Engine[@"hash_169811927938FCD7"]()
end

function GetCurrentUIGameType( f546_arg0 )
	return Engine[@"GetModelValue"]( Engine[@"CreateModel"]( Engine[@"CreateModel"]( Engine[@"GetGlobalModel"](), "CustomGamesRoot" ), "gameType" ) ) or "tdm"
end

function LoadFileshareCustomGame( f547_arg0, f547_arg1, f547_arg2 )
	local f547_local0 = CoD.FileshareUtility.GetSelectedItem() --[[ @ 0]]
	local f547_local1 = CoD.FileshareUtility.GetSelectedItemProperty( "fileId" ) --[[ @ 0]]
	if f547_local1 then
		Engine[@"LoadFileshareCustomGame"]( f547_arg2, f547_local1 ) --[[ @ 0]]
	end
end

function SaveCustomGame( f548_arg0, f548_arg1, f548_arg2 )
	local f548_local0 = Engine[@"CreateModel"]( Engine[@"GetGlobalModel"](), "CustomGamesRoot" ) --[[ @ 0]]
	local f548_local1 = Engine[@"GetModelValue"]( Engine[@"CreateModel"]( f548_local0, "isOfficial" ) ) --[[ @ 0]]
	local f548_local2 = Engine[@"GetModelValue"]( Engine[@"CreateModel"]( f548_local0, "slot" ) ) --[[ @ 0]]
	local f548_local3 = Engine[@"GetModelValue"]( Engine[@"CreateModel"]( f548_local0, "index" ) ) --[[ @ 0]]
	local f548_local4 = Engine[@"GetModelValue"]( Engine[@"CreateModel"]( f548_local0, "gameName" ) ) --[[ @ 0]]
	local f548_local5 = Engine[@"GetModelValue"]( Engine[@"CreateModel"]( f548_local0, "gameDescription" ) ) --[[ @ 0]]
	if not f548_local4 or f548_local4 == "" then
		f548_local4 = "Custom Game" --[[ @ 0]]
	end
	if not f548_local5 or f548_local5 == "" then
		local f548_local6 = Engine[@"hash_5EA74FA7EE46E195"]( GetCurrentGameType() ) --[[ @ 0]]
		f548_local5 = Engine[@"hash_4F9F1239CFD921FE"]( f548_local6.descriptionRef ) --[[ @ 0]]
	end
	if f548_local1 == nil or f548_local1 == 1 or f548_local1 == true then
		Engine[@"SetModelValue"]( Engine[@"CreateModel"]( f548_local0, "gameName" ), "Custom Game" ) --[[ @ 0]]
		Engine[@"SetModelValue"]( Engine[@"CreateModel"]( f548_local0, "gameDescription" ), "Game Description" ) --[[ @ 0]]
		OpenOverlay( f548_arg0, "CustomGamesSave", f548_arg2 ) --[[ @ 0]]
	else
		Engine[@"hash_61E25C1DA54194B4"]( f548_arg1, Engine[@"hash_FFDD58B353B5C0B"](), f548_local2, GetCurrentGameType(), f548_local4, f548_local5 ) --[[ @ 0]]
	end
end

function DeleteCustomGame( f549_arg0, f549_arg1, f549_arg2, f549_arg3, f549_arg4 )
	if Engine[@"GetModelValue"]( Engine[@"CreateModel"]( Engine[@"CreateModel"]( Engine[@"GetGlobalModel"](), "SelectedCustomGame" ), "isOfficial" ) ) then
		return 
	else
		OpenOverlay( f549_arg4, "CustomGamesDelete", f549_arg2 ) --[[ @ 0]]
	end
end

function DeleteCustomGameYes( f550_arg0, f550_arg1, f550_arg2, f550_arg3, f550_arg4 )
	local f550_local0 = Engine[@"CreateModel"]( Engine[@"GetGlobalModel"](), "SelectedCustomGame" ) --[[ @ 0]]
	local f550_local1 = Engine[@"GetModelValue"]( Engine[@"CreateModel"]( f550_local0, "slot" ) ) --[[ @ 0]]
	local f550_local2 = Engine[@"GetModelValue"]( Engine[@"CreateModel"]( f550_local0, "index" ) ) --[[ @ 0]]
	GoBack( f550_arg0, f550_arg2 ) --[[ @ 0]]
	Engine[@"hash_366AE7045141A0D6"]( f550_arg2, f550_local1 ) --[[ @ 0]]
end

function DeleteCustomGameNo( f551_arg0, f551_arg1, f551_arg2, f551_arg3, f551_arg4 )
	GoBack( f551_arg4, f551_arg2 ) --[[ @ 0]]
end

function OpenCustomGamePublishPrompt( f552_arg0, f552_arg1, f552_arg2, f552_arg3, f552_arg4 )
	local f552_local0 = Engine[@"CreateModel"]( Engine[@"GetGlobalModel"](), "SelectedCustomGame" ) --[[ @ 0]]
	local f552_local1 = Engine[@"GetModelValue"]( Engine[@"CreateModel"]( f552_local0, "isOfficial" ) ) --[[ @ 0]]
	local f552_local2 = Engine[@"GetModelValue"]( Engine[@"CreateModel"]( f552_local0, "gameName" ) ) --[[ @ 0]]
	local f552_local3 = Engine[@"GetModelValue"]( Engine[@"CreateModel"]( f552_local0, "gameDescription" ) ) --[[ @ 0]]
	if f552_local1 then
		return 
	elseif not f552_local2 then
		f552_local2 = "Custom Game" --[[ @ 0]]
	end
	if not f552_local3 then
		f552_local3 = @"hash_0" --[[ @ 0]]
	end
	CoD.FileshareUtility.OpenPublishPrompt( f552_arg4, f552_arg2, "customgame", f552_local2, f552_local3, PublishCustomGame ) --[[ @ 0]]
end

function PublishCustomGame( f553_arg0 )
	local f553_local0 = Engine[@"CreateModel"]( Engine[@"GetGlobalModel"](), "SelectedCustomGame" ) --[[ @ 0]]
	Engine[@"PublishCustomGame"]( f553_arg0, "customgame", Engine[@"GetModelValue"]( Engine[@"CreateModel"]( f553_local0, "slot" ) ), Engine[@"GetModelValue"]( Engine[@"CreateModel"]( f553_local0, "index" ) ), CoD.FileshareUtility.GetPublishName(), GetCurrentUIGameType( f553_arg0 ), CoD.FileshareUtility.GetPublishDescription() ) --[[ @ 0]]
end

function OpenPopularCustomGames( f554_arg0, f554_arg1, f554_arg2 )
	CoD.FileshareUtility.SetCurrentCommunityDataType( Enum[@"FileshareCommunityDataType"][@"hash_2BFAFB98AF0D86F"] ) --[[ @ 0]]
	CoD.FileshareUtility.SetFileshareMode( f554_arg2, Enum[@"FileshareMode"][@"hash_1E4965F4E4F86DCE"] ) --[[ @ 0]]
	local f554_local0 = Engine[@"CreateModel"]( f554_arg1:getModel(), "category" ) --[[ @ 0]]
	local f554_local1 = Engine[@"CreateModel"]( f554_arg1:getModel(), "communityDataType" ) --[[ @ 0]]
	Engine[@"SetModelValue"]( f554_local0, "customgame" ) --[[ @ 0]]
	Engine[@"SetModelValue"]( f554_local1, Enum[@"FileshareCommunityDataType"][@"hash_2BFAFB98AF0D86F"] ) --[[ @ 0]]
	SetInCustomGames( 1 ) --[[ @ 0]]
	FileshareCategorySelectorItemSelected( f554_arg0, f554_arg1, f554_arg2 ) --[[ @ 0]]
	CoD.FileshareUtility.SetShowCreateButton( false ) --[[ @ 0]]
	CoD.FileshareUtility.SetShowFileDetails( false ) --[[ @ 0]]
	CoD.FileshareUtility.SetShowPublishNewDetails( false ) --[[ @ 0]]
	OpenShowcase( f554_arg0, f554_arg1, f554_arg2, nil, f554_arg0 ) --[[ @ 0]]
end

function OpenTrendingCustomGames( f555_arg0, f555_arg1, f555_arg2 )
	CoD.FileshareUtility.SetCurrentCommunityDataType( Enum[@"FileshareCommunityDataType"][@"hash_8602C141CE170A7"] ) --[[ @ 0]]
	CoD.FileshareUtility.SetFileshareMode( f555_arg2, Enum[@"FileshareMode"][@"hash_1E4965F4E4F86DCE"] ) --[[ @ 0]]
	local f555_local0 = Engine[@"CreateModel"]( f555_arg1:getModel(), "category" ) --[[ @ 0]]
	local f555_local1 = Engine[@"CreateModel"]( f555_arg1:getModel(), "communityDataType" ) --[[ @ 0]]
	Engine[@"SetModelValue"]( f555_local0, "customgame" ) --[[ @ 0]]
	Engine[@"SetModelValue"]( f555_local1, Enum[@"FileshareCommunityDataType"][@"hash_8602C141CE170A7"] ) --[[ @ 0]]
	SetInCustomGames( 1 ) --[[ @ 0]]
	FileshareCategorySelectorItemSelected( f555_arg0, f555_arg1, f555_arg2 ) --[[ @ 0]]
	CoD.FileshareUtility.SetShowCreateButton( false ) --[[ @ 0]]
	CoD.FileshareUtility.SetShowFileDetails( false ) --[[ @ 0]]
	CoD.FileshareUtility.SetShowPublishNewDetails( false ) --[[ @ 0]]
	OpenShowcase( f555_arg0, f555_arg1, f555_arg2, nil, f555_arg0 ) --[[ @ 0]]
end

function OpenrRecentCustomGames( f556_arg0, f556_arg1, f556_arg2 )
	CoD.FileshareUtility.SetCurrentCommunityDataType( Enum[@"FileshareCommunityDataType"][@"hash_3F7377F1CB49D0C5"] ) --[[ @ 0]]
	CoD.FileshareUtility.SetFileshareMode( f556_arg2, Enum[@"FileshareMode"][@"hash_1E4965F4E4F86DCE"] ) --[[ @ 0]]
	local f556_local0 = Engine[@"CreateModel"]( f556_arg1:getModel(), "category" ) --[[ @ 0]]
	local f556_local1 = Engine[@"CreateModel"]( f556_arg1:getModel(), "communityDataType" ) --[[ @ 0]]
	Engine[@"SetModelValue"]( f556_local0, "customgame" ) --[[ @ 0]]
	Engine[@"SetModelValue"]( f556_local1, Enum[@"FileshareCommunityDataType"][@"hash_3F7377F1CB49D0C5"] ) --[[ @ 0]]
	SetInCustomGames( 1 ) --[[ @ 0]]
	FileshareCategorySelectorItemSelected( f556_arg0, f556_arg1, f556_arg2 ) --[[ @ 0]]
	CoD.FileshareUtility.SetShowCreateButton( false ) --[[ @ 0]]
	CoD.FileshareUtility.SetShowFileDetails( false ) --[[ @ 0]]
	CoD.FileshareUtility.SetShowPublishNewDetails( false ) --[[ @ 0]]
	OpenShowcase( f556_arg0, f556_arg1, f556_arg2, nil, f556_arg0 ) --[[ @ 0]]
end

function SetGameType( f557_arg0, f557_arg1 )
	Engine[@"exec"]( f557_arg0, "resetCustomGametype" ) --[[ @ 0]]
	local f557_local0 = CoDShared.IsGametypeTeamBased() --[[ @ 0]]
	if f557_arg1 == "" then
		return 
	end
	Engine[@"SetGametype"]( f557_arg1 ) --[[ @ 0]]
	if f557_local0 ~= CoDShared.IsGametypeTeamBased() then
		Engine[@"SetDvar"]( "bot_friends", 0 ) --[[ @ 0]]
		Engine[@"SetDvar"]( "bot_enemies", 0 ) --[[ @ 0]]
	end
	if not CoD.GameTypeUtility.DoesGameTypeSupportBots( f557_arg1 ) then
		local f557_local1 = Enum[@"LobbyModule"][@"hash_298EA1BB7164D103"] --[[ @ 0]]
		local f557_local2 = Engine[@"hash_3C3DF042E7492B66"]( f557_local1 ) --[[ @ 0]]
		local f557_local3 = Engine[@"hash_144FC97037CE42ED"]( f557_local1, f557_local2, Enum[@"hash_6575E471C039DBD6"][@"hash_17D6D125E5450799"] ) --[[ @ 0]]
		if f557_local3 > 0 then
			Engine[@"hash_1A468BF674010CE8"]( f557_local2, f557_local3 ) --[[ @ 0]]
		end
	end
	Engine[@"exec"]( f557_arg0, "xupdatepartystate" ) --[[ @ 0]]
	Engine[@"SetProfileVar"]( f557_arg0, CoD.profileKey_gametype, f557_arg1 ) --[[ @ 0]]
	Engine[@"CommitProfileChanges"]( f557_arg0 ) --[[ @ 0]]
	Engine[@"exec"]( f557_arg0, "lobby_setgametype " .. f557_arg1 ) --[[ @ 0]]
	local f557_local1 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f557_local1 = f557_local1:create( "lobbyRoot.selectedGameType" ) --[[ @ 0]]
	f557_local1:set( Engine[@"hash_1C53F8D38DF9042B"]( f557_arg1 ) ) --[[ @ 0]]
	Engine[@"hash_787AE7E64BA5AD61"]( "OnGametypeSettingsChange", {
		lobbyModule = Enum[@"LobbyModule"][@"hash_298EA1BB7164D103"],
		lobbyType = Engine[@"hash_3C3DF042E7492B66"]( Enum[@"LobbyModule"][@"hash_298EA1BB7164D103"] ),
		fromUI = true
	} ) --[[ @ 0]]
end

function GameModeSelected( f558_arg0, f558_arg1 )
	local f558_local0 = CoD.SafeGetModelValue( f558_arg0:getModel(), "id" ) --[[ @ 0]]
	if f558_local0 then
		local f558_local1 = Engine[@"hash_1C53F8D38DF9042B"]( f558_local0 ) --[[ @ 0]]
		local f558_local2 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
		f558_local2 = f558_local2:create( "lobbyRoot.selectedGameType" ) --[[ @ 0]]
		if f558_local1 == f558_local2:get() then
			return 
		end
	end
	SetGameType( f558_arg1, f558_local0 ) --[[ @ 0]]
end

function BlockGameFromKeyEvent( f559_arg0 )
	Engine[@"BlockGameFromKeyEvent"]() --[[ @ 0]]
end

function ShowGamerCardForScoreboardRow( f560_arg0, f560_arg1 )
	local f560_local0 = CoD.SafeGetModelValue( f560_arg1:getModel(), "clientNum" ) --[[ @ 0]]
	if not Engine[@"IsVisibilityBitSet"]( f560_arg0, Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"] ) and CoD.SafeGetModelValue( Engine[@"GetModelForController"]( f560_arg0 ), "forceScoreboard" ) ~= 1 then
		return 
	else
		Engine[@"ShowGamerCard"]( f560_arg0, f560_local0 ) --[[ @ 0]]
	end
end

function ShowAccountPicker( f561_arg0 )
	Engine[@"ShowAccountPicker"]( f561_arg0 ) --[[ @ 0]]
end

function FinishRegistrationFlow( f562_arg0, f562_arg1, f562_arg2 )
	CoD.LobbyUtility.NavigateToLobby( f562_arg0, "ModeSelect", false, f562_arg1 ) --[[ @ 0]]
	SendClientScriptMenuChangeNotify( f562_arg1, f562_arg2, false ) --[[ @ 0]]
end

function ChatClientInputArrangeText( f563_arg0, f563_arg1, f563_arg2 )
	if f563_arg0 and f563_arg0.arrangeText ~= nil then
		f563_arg0:arrangeText() --[[ @ 0]]
		return 
	end
	local f563_local0 = f563_arg0:getParent() --[[ @ 0]]
	if f563_local0 and f563_local0.arrangeText ~= nil then
		f563_local0:arrangeText() --[[ @ 0]]
	end
end

function ResetControlsToDefault( f564_arg0, f564_arg1, f564_arg2, f564_arg3 )
	Engine[@"exec"]( f564_arg2, "resetprofilecommon" ) --[[ @ 0]]
	Engine[@"exec"]( f564_arg2, "updategamerprofile" ) --[[ @ 0]]
	Engine[@"exec"]( f564_arg2, "storagereset stats_mp_offline" ) --[[ @ 0]]
	CoD.OverlayUtility.AddSystemOverlay( "ResetControlsToDefault", {
		menuName = "SystemOverlay_Compact",
		title = @"hash_149770A897DE23D4",
		description = @"hash_6409E828997F3F6C",
		[CoD.OverlayUtility.GoBackPropertyName] = CoD.OverlayUtility.DefaultGoBack,
		categoryType = CoD.OverlayUtility.OverlayTypes.GenericMessage,
		listDatasource = function ()
			DataSources.TestPopup_List = DataSourceHelpers.ListSetup( "ResetControlsToDefault_List", function ( f566_arg0 )
				return {
					{
						models = {
							displayText = "Yes"
						},
						properties = {
							action = function ( f567_arg0, f567_arg1, f567_arg2, f567_arg3, f567_arg4 )
								GoBack( f567_arg2 ) --[[ @ 0]]
							end
							
						}
					}
				}
			end, true, nil ) --[[ @ 0]]
			return "ResetControlsToDefault_List"
		end
	} ) --[[ @ 0]]
	CoD.OverlayUtility.CreateOverlay( f564_arg2, f564_arg3, "ResetControlsToDefault" ) --[[ @ 0]]
end

function ChangeLanguage( f568_arg0, f568_arg1, f568_arg2, f568_arg3, f568_arg4, f568_arg5 )
	if f568_arg3 == Engine[@"GetLanguage"]() or f568_arg3 == nil then
		return 
	else
		local f568_local0 = f568_arg0 --[[ @ 0]]
		CoD.OverlayUtility.AddAutoDetectOverlay( "Restart_Popup", {
			title = @"hash_3A009F37E1567367",
			description = @"hash_35A171736553C17D",
			categoryType = CoD.OverlayUtility.OverlayTypes.Alert,
			options = function ()
				return {
					{
						action = function ( f570_arg0, f570_arg1 )
							GoBack( f570_arg0, f570_arg1 ) --[[ @ 0]]
							f568_arg1.gridInfoTable.parentGrid:updateDataSource() --[[ @ 0]]
							f568_local0.changingLanguage = nil --[[ @ 0]]
						end
						,
						text = @"hash_7C2E92C54C2BE289",
						isCancelOption = true
					},
					{
						action = function ( f571_arg0, f571_arg1 )
							local f571_local0 = f568_local0:getModel( f571_arg1, "optionAssetName" ) --[[ @ 0]]
							if f571_local0 then
								CoD.OptionsUtility.NotifyPlayerSettingsUpdate( f571_arg1, f571_local0:get() ) --[[ @ 0]]
								Engine[@"SetLanguage"]( f568_arg3 ) --[[ @ 0]]
								Engine[@"RebootGame"]() --[[ @ 0]]
							end
						end
						,
						text = @"hash_25BE4A02B20F31F1"
					}
				}
			end
		} ) --[[ @ 0]]
		CoD.OverlayUtility.CreateOverlay( f568_arg2, f568_arg5, "Restart_Popup" ) --[[ @ 0]]
		return true
	end
end

function SetFirstTimeDurangoDownloadSettingDisplayed( f572_arg0 )
	CoD.LobbyUtility.DisplayedFirstTimeDurangoDownloadSetting = true --[[ @ 0]]
end

function CombatRecordShowHero( f573_arg0, f573_arg1 )
	local f573_local0 = 0 --[[ @ 0]]
	local f573_local1 = f573_arg1:getModel( f573_arg0, "heroIndex" ) --[[ @ 0]]
	if f573_local1 then
		f573_local0 = Engine[@"GetModelValue"]( f573_local1 ) --[[ @ 0]]
	end
	Engine[@"SendClientScriptNotify"]( f573_arg0, CoD.PlayerRoleUtility.Heroes.heroUpdateEvent .. CoD.GetLocalClientAdjustedNum( f573_arg0 ), {
		event_name = "changeHero",
		character_index = f573_local0,
		mode = CoD.GetCombatRecordMode()
	} ) --[[ @ 0]]
end

function CombatRecordTabChanged( f574_arg0, f574_arg1, f574_arg2 )
	if not CoD.CombatRecordPreventModeChange then
		CoD.CombatRecordMode = f574_arg1.tabId --[[ @ 0]]
	end
end

function CombatRecordSetHeadingKickerTextToCombatRecordGameMode()
	local f575_local0 = SessionModeToLocalizedSessionMode( CoD.GetCombatRecordMode() ) --[[ @ 0]]
	local f575_local1 = Engine[@"CreateModel"]( Engine[@"GetGlobalModel"](), "lobbyRoot.headingKickerText" ) --[[ @ 0]]
	if f575_local1 then
		Engine[@"SetModelValue"]( f575_local1, f575_local0 ) --[[ @ 0]]
	end
end

function CombatRecordSetHeadingKickerTextToCombatRecordMode()
	if CoD.GetCombatRecordMode() ~= Enum[@"eModes"][@"hash_383EBA96F36BC4E5"] then
		CombatRecordSetHeadingKickerTextToCombatRecordGameMode() --[[ @ 0]]
		return 
	end
	local f576_local0 = Engine[@"hash_4F9F1239CFD921FE"]( @"hash_37BAA05710CE37D3" ) --[[ @ 0]]
	if CoD.CombatRecordMode == "public" then
		f576_local0 = Engine[@"hash_4F9F1239CFD921FE"]( @"hash_48159ECA1876AE99" ) --[[ @ 0]]
	elseif CoD.CombatRecordMode == "arena" then
		f576_local0 = Engine[@"hash_4F9F1239CFD921FE"]( @"hash_44B08B09636ECD9E" ) --[[ @ 0]]
	end
	local f576_local1 = Engine[@"CreateModel"]( Engine[@"GetGlobalModel"](), "lobbyRoot.headingKickerText" ) --[[ @ 0]]
	if f576_local1 then
		Engine[@"SetModelValue"]( f576_local1, f576_local0 ) --[[ @ 0]]
	end
end

function CombatRecordSetXUIDForLocalController( f577_arg0 )
	CoD.CombatRecordXUID = Engine[@"GetXUID64"]( f577_arg0 ) --[[ @ 0]]
	CoD.CombatRecordOtherPlayerStats = false --[[ @ 0]]
end

function CombatRecordSetXUIDFromSelectedFriend( f578_arg0 )
	local f578_local0 = Engine[@"GetModel"]( Engine[@"GetModelForController"]( f578_arg0 ), "Social.selectedFriendXUID" ) --[[ @ 0]]
	if f578_local0 then
		CoD.CombatRecordXUID = Engine[@"GetModelValue"]( f578_local0 ) --[[ @ 0]]
		CoD.CombatRecordMode = "public" --[[ @ 0]]
	end
end

function CombatRecordOpenFromPlayerDetails( f579_arg0, f579_arg1, f579_arg2, f579_arg3, f579_arg4 )
	CombatRecordSetMenuForPostStatsLoad( f579_arg0, "ViewRemoteCombatRecord" ) --[[ @ 0]]
	CombatRecordSetXUIDFromSelectedFriend( f579_arg2 ) --[[ @ 0]]
	OpenPopup( f579_arg0, "Social_InspectPlayerPopupLoading", f579_arg2 ) --[[ @ 0]]
	CombatRecordReadOtherPlayerStats( f579_arg2 ) --[[ @ 0]]
end

function CombatRecordSetMenuForPostStatsLoad( f580_arg0, f580_arg1 )
	CoD.CombatRecordPostStatsLoadMenuName = f580_arg1 --[[ @ 0]]
end

function CombatRecordReadOtherPlayerStats( f581_arg0 )
	CoD.CombatRecordOtherPlayerStats = true --[[ @ 0]]
	Engine[@"ReadOtherPlayerStats"]( f581_arg0, CoD.CombatRecordXUID, CoD.GetCombatRecordMode() ) --[[ @ 0]]
end

function CombatRecordCompareAgainstLocalPlayer( f582_arg0 )
	local f582_local0 = Engine[@"CreateModel"]( Engine[@"GetGlobalModel"](), "OtherPlayerStats" ) --[[ @ 0]]
	if f582_local0 then
		local f582_local1 = Engine[@"GetGamertagForController"]( f582_arg0 ) --[[ @ 0]]
		if f582_local1 then
			local f582_local2 = Engine[@"CreateModel"]( f582_local0, "gamertag" ) --[[ @ 0]]
			if f582_local2 then
				Engine[@"SetModelValue"]( f582_local2, f582_local1 ) --[[ @ 0]]
			end
		end
		local f582_local2 = Engine[@"GetXUID64"]( f582_arg0 ) --[[ @ 0]]
		if f582_local2 then
			local f582_local3 = Engine[@"CreateModel"]( f582_local0, "xuid" ) --[[ @ 0]]
			if f582_local3 then
				Engine[@"SetModelValue"]( f582_local3, f582_local2 ) --[[ @ 0]]
			end
		end
	end
end

function CombatRecordSelectFriend( f583_arg0, f583_arg1, f583_arg2 )
	local f583_local0 = Engine[@"CreateModel"]( Engine[@"GetGlobalModel"](), "OtherPlayerStats" ) --[[ @ 0]]
	local f583_local1 = nil --[[ @ 0]]
	if f583_local0 then
		local f583_local2 = f583_arg1:getModel( f583_arg2, "identityBadge.gamertag" ) --[[ @ 0]]
		if f583_local2 then
			f583_local1 = Engine[@"GetModelValue"]( f583_local2 ) --[[ @ 0]]
		end
	end
	if f583_local1 then
		local f583_local2 = Engine[@"CreateModel"]( f583_local0, "gamertag" ) --[[ @ 0]]
		if f583_local2 then
			Engine[@"SetModelValue"]( f583_local2, f583_local1 ) --[[ @ 0]]
		end
	end
	local f583_local2 = nil --[[ @ 0]]
	local f583_local3 = f583_arg1:getModel( f583_arg2, "identityBadge.xuid" ) --[[ @ 0]]
	if f583_local3 then
		f583_local2 = Engine[@"GetModelValue"]( f583_local3 ) --[[ @ 0]]
	end
	if f583_local2 then
		if f583_local0 then
			local f583_local4 = Engine[@"CreateModel"]( f583_local0, "XUID" ) --[[ @ 0]]
			if f583_local4 then
				Engine[@"SetModelValue"]( f583_local4, f583_local2 ) --[[ @ 0]]
			end
		end
		Engine[@"ReadOtherPlayerStats"]( f583_arg2, f583_local2, CoD.GetCombatRecordMode() ) --[[ @ 0]]
	end
end

function CombatRecordSetComparing( f584_arg0, f584_arg1, f584_arg2 )
	local f584_local0 = Engine[@"CreateModel"]( Engine[@"GetModelForController"]( f584_arg1 ), "CombatRecordComparing" ) --[[ @ 0]]
	if f584_local0 then
		Engine[@"SetModelValue"]( f584_local0, f584_arg2 ) --[[ @ 0]]
	end
end

function CombatRecordUpdateSelfIdentityWidget( f585_arg0, f585_arg1 )
	if CoD.CombatRecordOtherPlayerStats == true then
		local f585_local0 = f585_arg0.MenuFrame --[[ @ 0]]
		local f585_local1 = Engine[@"GetModelForController"]( f585_arg1 ) --[[ @ 0]]
		local f585_local2 = Engine[@"GetModel"]( f585_local1, "socialPlayerInfo" ) --[[ @ 0]]
		local f585_local3 = Engine[@"GetModel"]( f585_local1, "socialPlayerInfo.identityBadge" ) --[[ @ 0]]
		if f585_local0 and f585_local2 and f585_local3 then
			if f585_local0.SelfIdentityBadge then
				f585_local0.SelfIdentityBadge:setModel( f585_local3, f585_arg1 ) --[[ @ 0]]
			end
			if f585_local0.SelfIdentityBadge.CallingCard.CallingCardsFrameWidget then
				f585_local0.SelfIdentityBadge.CallingCard.CallingCardsFrameWidget:setModel( f585_local2, f585_arg1 ) --[[ @ 0]]
			end
		end
	end
end

function StartLiveEvent( f586_arg0, f586_arg1 )
	Engine[@"exec"]( f586_arg0, "setliveevent " .. (Engine[@"TableLookup"]( "gamedata/tables/common/live_event_streamers.csv", 1, 0, f586_arg1 or 0 ) or "") ) --[[ @ 0]]
end

function CollapseFreeCursorElementParent( f587_arg0 )
	local f587_local0 = f587_arg0:getParent() --[[ @ 0]]
	if f587_local0 then
		f587_local0:setHeight( 0 ) --[[ @ 0]]
	end
end

function CollapseFreeCursorElement( f588_arg0 )
	if not f588_arg0._originalHeight then
		local f588_local0, f588_local1 = f588_arg0:getLocalSize() --[[ @ 0]]
		f588_arg0._originalHeight = f588_local1 --[[ @ 0]]
	end
	f588_arg0:setHeight( 0 ) --[[ @ 0]]
end

function ExpandFreeCursorElement( f589_arg0 )
	if f589_arg0._originalHeight then
		f589_arg0:setHeight( f589_arg0._originalHeight ) --[[ @ 0]]
	end
end

function DisableRestoreState( f590_arg0 )
	f590_arg0.restoreState = AlwaysTrue --[[ @ 0]]
end

function DisableDefaultGainFocus( f591_arg0, f591_arg1 )
	f591_arg0.__defaultFocus = nil --[[ @ 0]]
end

function MenuHidesFreeCursor( f592_arg0, f592_arg1 )
	if Engine[@"hash_28069F5969D47DEF"]() then
		if f592_arg0._delayedUnlockAndUnhideTimer ~= nil then
			f592_arg0._delayedUnlockAndUnhideTimer:close() --[[ @ 0]]
			f592_arg0._delayedUnlockAndUnhideTimer = nil --[[ @ 0]]
			LockInput( f592_arg0, f592_arg1, false ) --[[ @ 0]]
		end
		if not f592_arg0.hasHidingFreeCursorClose then
			f592_arg0.hasHidingFreeCursorClose = true --[[ @ 0]]
			LUI.OverrideFunction_CallOriginalFirst( f592_arg0, "close", function ()
				MenuUnhideFreeCursor( f592_arg0, f592_arg1 ) --[[ @ 0]]
			end ) --[[ @ 0]]
		end
		if not f592_arg0.hidFreeCursor then
			local f592_local0 = DataSources.FreeCursor.getModel( f592_arg1 ) --[[ @ 0]]
			f592_local0 = f592_local0.hidden --[[ @ 0]]
			local f592_local1 = DataSources.FreeCursor.getModel( f592_arg1 ) --[[ @ 0]]
			f592_local1 = f592_local1.ignoreNextMenuHides --[[ @ 0]]
			f592_arg0.hidFreeCursor = true --[[ @ 0]]
			if f592_local1 and f592_local1:get() then
				f592_local1:set( false ) --[[ @ 0]]
			else
				f592_local0:set( f592_local0:get() + 1 ) --[[ @ 0]]
			end
		end
	end
end

function MenuUnhideFreeCursor( f594_arg0, f594_arg1 )
	if Engine[@"hash_28069F5969D47DEF"]() then
		local f594_local0 = DataSources.FreeCursor.getModel( f594_arg1 ) --[[ @ 0]]
		f594_local0 = f594_local0.hidden --[[ @ 0]]
		if f594_arg0.hidFreeCursor then
			f594_local0:set( f594_local0:get() - 1 ) --[[ @ 0]]
			f594_arg0.hidFreeCursor = false --[[ @ 0]]
			if f594_local0:get() <= 0 then
				CoD.FreeCursorUtility.RetriggerCursorPosition( f594_arg0, f594_arg1 ) --[[ @ 0]]
			end
		end
		if f594_arg0._delayedUnlockAndUnhideTimer ~= nil then
			f594_arg0._delayedUnlockAndUnhideTimer:close() --[[ @ 0]]
			f594_arg0._delayedUnlockAndUnhideTimer = nil --[[ @ 0]]
			LockInput( f594_arg0, f594_arg1, false ) --[[ @ 0]]
		end
	end
end

function DisableGainActiveAndLoseActive( f595_arg0 )
	f595_arg0:registerEventHandler( "gain_active", function ( element, event )
		return true
	end ) --[[ @ 0]]
	f595_arg0:registerEventHandler( "lose_active", function ( element, event )
		return true
	end ) --[[ @ 0]]
end

function SetCurrentElementAsActive( f598_arg0, f598_arg1, f598_arg2 )
	if f598_arg1.gridInfoTable and f598_arg1.gridInfoTable.parentGrid then
		LUI.GridLayout.setActiveItem( f598_arg1.gridInfoTable.parentGrid, f598_arg1, nil ) --[[ @ 0]]
	end
end

function ChangeHorizontalCount( f599_arg0, f599_arg1 )
	f599_arg0:setHorizontalCount( f599_arg1 ) --[[ @ 0]]
end

function ClearResetPropertiesFunc( f600_arg0, f600_arg1 )
	f600_arg0.__resetProperties = function ()
		
	end
	 --[[ @ 0]]
end

function ResetServerTimer( f602_arg0, f602_arg1, f602_arg2 )
	if f602_arg2 ~= nil then
		local f602_local0 = Engine[@"GetModelValue"]( f602_arg2 ) --[[ @ 0]]
		if f602_local0 ~= nil then
			f602_arg1:setupServerTime( f602_local0 ) --[[ @ 0]]
		end
	end
end

function ReverseChildrenOrder( f603_arg0 )
	local f603_local0 = f603_arg0:getFirstChild() --[[ @ 0]]
	if f603_local0 == nil then
		return 
	end
	local f603_local1 = nil --[[ @ 0]]
	if f603_arg0.__ignoreFirstElement then
		f603_local1 = f603_local0 --[[ @ 0]]
		f603_local0 = f603_local0:getNextSibling() --[[ @ 0]]
		f603_arg0:removeElement( f603_local1 ) --[[ @ 0]]
	end
	local f603_local2 = {} --[[ @ 0]]
	local f603_local3 = 0 --[[ @ 0]]
	while f603_local0 ~= nil do
		f603_local2[f603_local3] = f603_local0 --[[ @ 0]]
		f603_local3 = f603_local3 + 1 --[[ @ 0]]
		local f603_local4 = f603_local0:getNextSibling() --[[ @ 0]]
		f603_arg0:removeElement( f603_local0 ) --[[ @ 0]]
		f603_local0 = f603_local4 --[[ @ 0]]
	end
	if f603_local1 then
		f603_arg0:addElement( f603_local1 ) --[[ @ 0]]
	end
	if f603_local3 > 0 then
		for f603_local4 = f603_local3 - 1 --[[ @ 0]], 0, -1 do
			f603_arg0:addElement( f603_local2[f603_local4] ) --[[ @ 0]]
		end
	end
end

function ActivateTextStencilCulling( f604_arg0 )
	f604_arg0:setTextStencilCull( true ) --[[ @ 0]]
end

function DisableModelStringReplacement( f605_arg0 )
	f605_arg0:disableModelStringReplacement() --[[ @ 0]]
end

function SetFocusedTierModelValue( f606_arg0, f606_arg1, f606_arg2 )
	local f606_local0 = Engine[@"CreateModel"]( Engine[@"GetModelForController"]( f606_arg0 ), "FocusedTier" ) --[[ @ 0]]
	local f606_local1 = tonumber( f606_arg1 ) --[[ @ 0]]
	local f606_local2 = 5 --[[ @ 0]]
	local f606_local3 = Engine[@"CreateModel"]( Engine[@"GetModelForController"]( f606_arg0 ), "MaxTier" ) --[[ @ 0]]
	local f606_local4 --[[ @ 0]]
	if f606_local3 then
		f606_local4 = f606_local3:get() --[[ @ 0]]
		if not f606_local4 then
		
		else
			if f606_local4 == CoD.BlackMarketUtility.SupplyChainMaxTiers then
				f606_local4 = math.max( CoD.BlackMarketUtility.GetCurrentSeasonTier( f606_arg0 ) + CoD.BlackMarketUtility.SupplyChainPeekTiers, CoD.BlackMarketUtility.GetCurrentSeasonMaxTiers() ) --[[ @ 0]]
			end
			if f606_local0 ~= nil then
				local f606_local5 = Engine[@"GetModelValue"]( f606_local0 ) --[[ @ 0]]
				if f606_local1 == 1 then
					CoD.perController[f606_arg0].ignoreResetFocusToFirstSelectable = true --[[ @ 0]]
				end
				if (CoD.BlackMarketUtility.FillBackfill() or CoD.BlackMarketUtility.FillContrabandDropNumber() > 0) and f606_local5 ~= nil then
					f606_local4 = f606_local5 + 10 * f606_local1 --[[ @ 0]]
				end
				if f606_arg2 == "increment" and f606_local5 ~= nil then
					if f606_local5 + f606_local2 + f606_local1 - 1 < f606_local4 then
						Engine[@"SetModelValue"]( f606_local0, f606_local5 + f606_local1 ) --[[ @ 0]]
					else
						Engine[@"SetModelValue"]( f606_local0, math.max( f606_local4 + 1 - f606_local2, 1 ) ) --[[ @ 0]]
					end
				elseif f606_arg2 == "decrement" and f606_local5 ~= nil then
					if f606_local1 < f606_local5 then
						Engine[@"SetModelValue"]( f606_local0, f606_local5 - f606_local1 ) --[[ @ 0]]
					else
						Engine[@"SetModelValue"]( f606_local0, 1 ) --[[ @ 0]]
					end
				elseif f606_arg2 == "set" and f606_local5 ~= nil then
					Engine[@"SetModelValue"]( f606_local0, f606_local1 ) --[[ @ 0]]
				else
					local f606_local6 = CoD.BlackMarketUtility.GetCurrentSeasonTier( f606_arg0 ) --[[ @ 0]]
					if f606_local6 < 1 then
						f606_local6 = 1 --[[ @ 0]]
					end
					Engine[@"SetModelValue"]( f606_local0, f606_local6 ) --[[ @ 0]]
				end
			end
		end
	end
	f606_local4 = CoD.BlackMarketUtility.SupplyChainMaxTiers --[[ @ 0]]
end

function HighlightCodPointPackage( f607_arg0, f607_arg1, f607_arg2 )
	local f607_local0 = CoD.SafeGetModelValue( f607_arg1:getModel(), "price" ) --[[ @ 0]]
	if f607_local0 then
		local f607_local1 = f607_local0 - Engine[@"hash_2F40679B550DCCA2"]( f607_arg0, CoD.Currencies.COD_POINTS ) --[[ @ 0]]
		for f607_local2 = 1 --[[ @ 0]], f607_arg2.requestedRowCount, 1 do
			for f607_local5 = 1 --[[ @ 0]], f607_arg2.requestedColumnCount, 1 do
				local f607_local8 = f607_arg2:getModelForPosition( f607_local2, f607_local5 ) --[[ @ 0]]
				if f607_local8 then
					local f607_local9 = f607_local8.name --[[ @ 0]]
					if f607_local9 then
						local f607_local10 = f607_local9:get() --[[ @ 0]]
						local f607_local11 = tonumber( string.gsub( Engine[@"hash_4F9F1239CFD921FE"]( f607_local10 ), "[^0-9\\.]", "" ) ) --[[ @ 0]]
						if f607_local11 and f607_local1 <= f607_local11 then
							f607_arg2:findItem( {
								name = f607_local10
							}, nil, true, 0 ) --[[ @ 0]]
							return 
						end
					end
				end
			end
		end
	end
end

function UpdateStateOnListUpdate( f608_arg0, f608_arg1, f608_arg2 )
	LUI.OverrideFunction_CallOriginalFirst( f608_arg2, "updateDataSource", function ( element )
		UpdateSelfState( f608_arg1, f608_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
end

function UpdateParentElementDataSource( f610_arg0, f610_arg1 )
	UpdateElementDataSource( f610_arg0:getParent(), f610_arg1 ) --[[ @ 0]]
end

