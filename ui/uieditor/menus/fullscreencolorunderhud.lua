-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:36
require( "ui/uieditor/widgets/hud/ingametalkerswidget" ) --[[ @ 0]]

local f0_local0 = function ( f1_arg0 )
	if f1_arg0.red and f1_arg0.green and f1_arg0.blue then
		f1_arg0.Fullscreen:setRGB( f1_arg0.red, f1_arg0.green, f1_arg0.blue ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
local PostLoadFunc = function ( f2_arg0 )
	local f2_local0 = f2_arg0:getModel( Engine[@"GetPrimaryController"](), "fadeOverTime" ) --[[ @ 0]]
	local f2_local1 = f2_arg0:getModel( Engine[@"GetPrimaryController"](), "red" ) --[[ @ 0]]
	local f2_local2 = f2_arg0:getModel( Engine[@"GetPrimaryController"](), "green" ) --[[ @ 0]]
	local f2_local3 = f2_arg0:getModel( Engine[@"GetPrimaryController"](), "blue" ) --[[ @ 0]]
	if f2_local1 then
		f2_arg0:subscribeToModel( f2_local1, function ( model )
			local f3_local0 = Engine[@"GetModelValue"]( model ) --[[ @ 0]]
			if f3_local0 then
				f2_arg0.red = f3_local0 --[[ @ 0]]
				f0_local0( f2_arg0 ) --[[ @ 0]]
			end
		end ) --[[ @ 0]]
	end
	if f2_local2 then
		f2_arg0:subscribeToModel( f2_local2, function ( model )
			local f4_local0 = Engine[@"GetModelValue"]( model ) --[[ @ 0]]
			if f4_local0 then
				f2_arg0.green = f4_local0 --[[ @ 0]]
				f0_local0( f2_arg0 ) --[[ @ 0]]
			end
		end ) --[[ @ 0]]
	end
	if f2_local3 then
		f2_arg0:subscribeToModel( f2_local3, function ( model )
			local f5_local0 = Engine[@"GetModelValue"]( model ) --[[ @ 0]]
			if f5_local0 then
				f2_arg0.blue = f5_local0 --[[ @ 0]]
				f0_local0( f2_arg0 ) --[[ @ 0]]
			end
		end ) --[[ @ 0]]
	end
	if f2_local0 then
		f2_arg0:subscribeToModel( f2_local0, function ( model )
			local f6_local0 = Engine[@"GetModelValue"]( model ) --[[ @ 0]]
			local f6_local1 = f2_arg0:getModel( Engine[@"GetPrimaryController"](), "startAlpha" ) --[[ @ 0]]
			local f6_local2 = f2_arg0:getModel( Engine[@"GetPrimaryController"](), "endAlpha" ) --[[ @ 0]]
			local f6_local3 = 0 --[[ @ 0]]
			local f6_local4 = 0 --[[ @ 0]]
			if f6_local1 then
				f6_local3 = Engine[@"GetModelValue"]( f6_local1 ) --[[ @ 0]]
			end
			if f6_local2 then
				f6_local4 = Engine[@"GetModelValue"]( f6_local2 ) --[[ @ 0]]
			end
			if f6_local0 then
				if f6_local4 == 0 then
					if f6_local3 == 0 or f6_local0 == 0 then
						CoD.Menu.RemoveFromCurrMenuNameList( f2_arg0.menuName ) --[[ @ 0]]
					else
						f2_arg0.Fullscreen:registerEventHandler( "clip_over", function ( element, event )
							element.Fullscreen:registerEventHandler( "clip_over", CoD.NullFunction ) --[[ @ 0]]
							CoD.Menu.RemoveFromCurrMenuNameList( element.menuName ) --[[ @ 0]]
						end ) --[[ @ 0]]
					end
				else
					CoD.Menu.AddToCurrMenuNameList( f2_arg0.menuName ) --[[ @ 0]]
				end
				if f6_local3 >= 0 then
					f2_arg0.Fullscreen:setAlpha( f6_local3 ) --[[ @ 0]]
				end
				f2_arg0.Fullscreen:beginAnimation( "fadeOverTime", f6_local0 ) --[[ @ 0]]
				f2_arg0.Fullscreen:setAlpha( f6_local4 ) --[[ @ 0]]
			end
		end ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
CoD.FullScreenColorUnderHUD = InheritFrom( CoD.Menu ) --[[ @ 0]]
LUI.createMenu.FullScreenColorUnderHUD = function ( f8_arg0, f8_arg1 )
	local self = CoD.Menu.NewForUIEditor( "FullScreenColorUnderHUD", f8_arg0 ) --[[ @ 0]]
	local f8_local1 = self --[[ @ 0]]
	self:setClass( CoD.FullScreenColorUnderHUD ) --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self:setOwner( f8_arg0 ) --[[ @ 0]]
	self:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	self:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	self:playSound( "menu_open", f8_arg0 ) --[[ @ 0]]
	self.ignoreCursor = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	
	local Fullscreen = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	Fullscreen:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_E2354BE557C4C7A" ) ) --[[ @ 0]]
	Fullscreen:setShaderVector( 0, 0, 0.8, 0, 0 ) --[[ @ 0]]
	self:addElement( Fullscreen ) --[[ @ 0]]
	self.Fullscreen = Fullscreen --[[ @ 0]]
	
	local InGameTalkersWidget = CoD.InGameTalkersWidget.new( f8_local1, f8_arg0, 0, 0, 95.5, 380.5, 0, 0, 54, 184 ) --[[ @ 0]]
	InGameTalkersWidget:mergeStateConditions( {
		{
			stateName = "Visible",
			condition = function ( menu, element, event )
				return not IsMultiplayer()
			end
		}
	} ) --[[ @ 0]]
	local f8_local4 = InGameTalkersWidget --[[ @ 0]]
	local f8_local5 = InGameTalkersWidget.subscribeToModel --[[ @ 0]]
	local f8_local6 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f8_local5( f8_local4, f8_local6["lobbyRoot.lobbyNav"], function ( f10_arg0 )
		f8_local1:updateElementState( InGameTalkersWidget, {
			name = "model_validation",
			menu = f8_local1,
			controller = f8_arg0,
			modelValue = f10_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:addElement( InGameTalkersWidget ) --[[ @ 0]]
	self.InGameTalkersWidget = InGameTalkersWidget --[[ @ 0]]
	
	InGameTalkersWidget.id = "InGameTalkersWidget" --[[ @ 0]]
	self:processEvent( {
		name = "menu_loaded",
		controller = f8_arg0
	} ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f8_arg0 ) --[[ @ 0]]
	end
	
	f8_local5 = self --[[ @ 0]]
	SetProperty( self, "_priority", -1 ) --[[ @ 0]]
	return self
end
 --[[ @ 0]]
CoD.FullScreenColorUnderHUD.__onClose = function ( f11_arg0 )
	f11_arg0.InGameTalkersWidget:close() --[[ @ 0]]
end
 --[[ @ 0]]
