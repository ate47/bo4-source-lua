-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:36
require( "ui/uieditor/widgets/backgroundframes/menuframeingame" ) --[[ @ 0]]
require( "ui/uieditor/widgets/common/commonheader" ) --[[ @ 0]]
require( "ui/uieditor/widgets/header/header_container_frontend" ) --[[ @ 0]]
require( "ui/uieditor/widgets/startmenu/options/flyout/startmenu_options_settinggriditem" ) --[[ @ 0]]
require( "ui/uieditor/widgets/startmenu/options/startmenuoptionsbackground" ) --[[ @ 0]]
require( "ui/uieditor/widgets/startmenu/options/startmenuoptionsmaincorners" ) --[[ @ 0]]
require( "ui/uieditor/widgets/startmenu/options/startmenuoptionsmainframe" ) --[[ @ 0]]
require( "x64:7a83717e9f99925a" ) --[[ @ 0]]

CoD.StartMenu_Options_Graphics_Colorblind = InheritFrom( CoD.Menu ) --[[ @ 0]]
LUI.createMenu.StartMenu_Options_Graphics_Colorblind = function ( f1_arg0, f1_arg1 )
	local self = CoD.Menu.NewForUIEditor( "StartMenu_Options_Graphics_Colorblind", f1_arg0 ) --[[ @ 0]]
	local f1_local1 = self --[[ @ 0]]
	CoD.BaseUtility.CreateControllerModel( f1_arg0, "profile.colorblindMode" ) --[[ @ 0]]
	MenuHidesFreeCursor( f1_local1, f1_arg0 ) --[[ @ 0]]
	self:setClass( CoD.StartMenu_Options_Graphics_Colorblind ) --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self:setOwner( f1_arg0 ) --[[ @ 0]]
	self:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	self:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	self:playSound( "menu_open", f1_arg0 ) --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	
	local Background = CoD.StartMenuOptionsBackground.new( f1_local1, f1_arg0, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	self:addElement( Background ) --[[ @ 0]]
	self.Background = Background --[[ @ 0]]
	
	local MenuFrame = CoD.MenuFrameIngame.new( f1_local1, f1_arg0, 0.5, 0.5, -960, 960, 1, 1, -1080, 0 ) --[[ @ 0]]
	self:addElement( MenuFrame ) --[[ @ 0]]
	self.MenuFrame = MenuFrame --[[ @ 0]]
	
	local Buttons = LUI.UIList.new( f1_local1, f1_arg0, 10, 0, nil, false, false, false, false ) --[[ @ 0]]
	Buttons:mergeStateConditions( {
		{
			stateName = "Active",
			condition = function ( menu, element, event )
				return CoD.OptionsUtility.IsPlayerSettingItemSelected( self, element, f1_arg0 )
			end
		}
	} ) --[[ @ 0]]
	local BGFill = Buttons --[[ @ 0]]
	local Description = Buttons.subscribeToModel --[[ @ 0]]
	local Image = Engine[@"GetModelForController"]( f1_arg0 ) --[[ @ 0]]
	Description( BGFill, Image.PlayerSettingsUpdate, function ( f3_arg0 )
		f1_local1:updateElementState( Buttons, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f3_arg0:get(),
			modelName = "PlayerSettingsUpdate"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	Buttons:linkToElementModel( Buttons, "currentSelection", true, function ( model )
		f1_local1:updateElementState( Buttons, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = model:get(),
			modelName = "currentSelection"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	Buttons:setLeftRight( 0.5, 0.5, -615, 615 ) --[[ @ 0]]
	Buttons:setTopBottom( 0.5, 0.5, 330, 390 ) --[[ @ 0]]
	Buttons:setZoom( 50 ) --[[ @ 0]]
	Buttons:setWidgetType( CoD.StartMenu_Options_SettingGridItem ) --[[ @ 0]]
	Buttons:setHorizontalCount( 4 ) --[[ @ 0]]
	Buttons:setSpacing( 10 ) --[[ @ 0]]
	Buttons:setAlignment( Enum[@"LUIAlignment"][@"hash_3830CFD395E6AA0A"] ) --[[ @ 0]]
	Buttons:linkToElementModel( self, "optionsDatasource", true, function ( model )
		local f5_local0 = model:get() --[[ @ 0]]
		if f5_local0 ~= nil then
			Buttons:setDataSource( f5_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	Buttons:registerEventHandler( "gain_focus", function ( element, event )
		local f6_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f6_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f6_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f6_local0
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( Buttons, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], nil, function ( element, menu, controller, model )
		ProcessListAction( self, element, controller, menu ) --[[ @ 0]]
		ForceNotifyControllerModel( controller, "profile.colorblindMode" ) --[[ @ 0]]
		PlaySoundAlias( "uin_paint_decal_nav" ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, nil ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	self:addElement( Buttons ) --[[ @ 0]]
	self.Buttons = Buttons --[[ @ 0]]
	
	Description = LUI.UIText.new( 0.5, 0.5, -557, 557, 0.5, 0.5, -300.5, -279.5 ) --[[ @ 0]]
	Description:setRGB( 0.6, 0.6, 0.6 ) --[[ @ 0]]
	Description:setZoom( 40 ) --[[ @ 0]]
	Description:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	Description:setAlignment( Enum[@"LUIAlignment"][@"hash_1FEEB12BCB0D7041"] ) --[[ @ 0]]
	Description:linkToElementModel( self, "hintText", true, function ( model )
		local f9_local0 = model:get() --[[ @ 0]]
		if f9_local0 ~= nil then
			Description:setText( f9_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Description ) --[[ @ 0]]
	self.Description = Description --[[ @ 0]]
	
	BGFill = LUI.UIImage.new( 0.5, 0.5, -613.5, 613.5, 0.5, 0.5, -322.5, 322.5 ) --[[ @ 0]]
	BGFill:setRGB( 0, 0, 0 ) --[[ @ 0]]
	BGFill:setAlpha( 0.55 ) --[[ @ 0]]
	BGFill:setZoom( 40 ) --[[ @ 0]]
	BGFill:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_normal" ) ) --[[ @ 0]]
	BGFill:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	BGFill:setupNineSliceShader( 6, 6 ) --[[ @ 0]]
	self:addElement( BGFill ) --[[ @ 0]]
	self.BGFill = BGFill --[[ @ 0]]
	
	Image = CoD.StartMenu_Options_Graphics_ColorBlindMinimapPreview.new( f1_local1, f1_arg0, 0.5, 0.5, -375, 375, 0.5, 0.5, -195, 205 ) --[[ @ 0]]
	Image:setZoom( 40 ) --[[ @ 0]]
	self:addElement( Image ) --[[ @ 0]]
	self.Image = Image --[[ @ 0]]
	
	local BGFrame = CoD.StartMenuOptionsMainFrame.new( f1_local1, f1_arg0, 0.5, 0.5, -613.5, 613.5, 0.5, 0.5, -322.5, 322.5 ) --[[ @ 0]]
	BGFrame:setAlpha( 0.01 ) --[[ @ 0]]
	BGFrame:setZoom( 40 ) --[[ @ 0]]
	self:addElement( BGFrame ) --[[ @ 0]]
	self.BGFrame = BGFrame --[[ @ 0]]
	
	local BGCorner = CoD.StartMenuOptionsMainCorners.new( f1_local1, f1_arg0, 0.5, 0.5, -613.5, 613.5, 0.5, 0.5, -322.5, 322.5 ) --[[ @ 0]]
	BGCorner:setAlpha( 0.95 ) --[[ @ 0]]
	BGCorner:setZoom( 40 ) --[[ @ 0]]
	self:addElement( BGCorner ) --[[ @ 0]]
	self.BGCorner = BGCorner --[[ @ 0]]
	
	local CommonHeader = CoD.CommonHeader.new( f1_local1, f1_arg0, 0.5, 0.5, -960, 960, 0, 0, 0, 67 ) --[[ @ 0]]
	CommonHeader.subtitle.subtitle:setText( "" ) --[[ @ 0]]
	self:addElement( CommonHeader ) --[[ @ 0]]
	self.CommonHeader = CommonHeader --[[ @ 0]]
	
	local BackingGrayMediumLeft = CoD.header_container_frontend.new( f1_local1, f1_arg0, 0, 1, 0, 0, 0, 0, 0, 42 ) --[[ @ 0]]
	self:addElement( BackingGrayMediumLeft ) --[[ @ 0]]
	self.BackingGrayMediumLeft = BackingGrayMediumLeft --[[ @ 0]]
	
	self.CommonHeader:linkToElementModel( self, "name", true, function ( model )
		local f10_local0 = model:get() --[[ @ 0]]
		if f10_local0 ~= nil then
			CommonHeader.subtitle.StageTitle:setText( LocalizeToUpperString( f10_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"], nil, function ( element, menu, controller, model )
		GoBack( self, controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"], @"hash_370A9FDC87CD3D48", nil, nil ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"], "ui_contextual_2", function ( element, menu, controller, model )
		CoD.OptionsUtility.ResetPlayerSettingToDefault( self, controller ) --[[ @ 0]]
		ForceNotifyControllerModel( controller, "profile.colorblindMode" ) --[[ @ 0]]
		PlaySoundAlias( "uin_paint_decal_nav" ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"], @"hash_619D60864B204458", nil, "ui_contextual_2" ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	MenuFrame:setModel( self.buttonModel, f1_arg0 ) --[[ @ 0]]
	if CoD.isPC then
		MenuFrame.id = "MenuFrame" --[[ @ 0]]
	end
	Buttons.id = "Buttons" --[[ @ 0]]
	self:processEvent( {
		name = "menu_loaded",
		controller = f1_arg0
	} ) --[[ @ 0]]
	self.__defaultFocus = Buttons --[[ @ 0]]
	if CoD.isPC and (IsKeyboard( f1_arg0 ) or self.ignoreCursor) then
		self:restoreState( f1_arg0 ) --[[ @ 0]]
	end
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg0 ) --[[ @ 0]]
	end
	local f1_local12 = self --[[ @ 0]]
	CoD.OptionsUtility.InitPlayerSettingWidget( self, "Buttons" ) --[[ @ 0]]
	CoD.OptionsUtility.SetPlayerSettingsModel( self, f1_arg0, "colorblind_mode" ) --[[ @ 0]]
	f1_local12 = CommonHeader --[[ @ 0]]
	if not IsPC() then
		SizeToSafeArea( f1_local12, f1_arg0 ) --[[ @ 0]]
	end
	return self
end
 --[[ @ 0]]
CoD.StartMenu_Options_Graphics_Colorblind.__onClose = function ( f15_arg0 )
	f15_arg0.Background:close() --[[ @ 0]]
	f15_arg0.MenuFrame:close() --[[ @ 0]]
	f15_arg0.Buttons:close() --[[ @ 0]]
	f15_arg0.Description:close() --[[ @ 0]]
	f15_arg0.Image:close() --[[ @ 0]]
	f15_arg0.BGFrame:close() --[[ @ 0]]
	f15_arg0.BGCorner:close() --[[ @ 0]]
	f15_arg0.CommonHeader:close() --[[ @ 0]]
	f15_arg0.BackingGrayMediumLeft:close() --[[ @ 0]]
end
 --[[ @ 0]]
