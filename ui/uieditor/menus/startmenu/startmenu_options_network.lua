-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:36
require( "ui/uieditor/widgets/backgroundframes/menuframeingame" ) --[[ @ 0]]
require( "ui/uieditor/widgets/common/commonheader" ) --[[ @ 0]]
require( "ui/uieditor/widgets/header/header_container_frontend" ) --[[ @ 0]]
require( "ui/uieditor/widgets/startmenu/options/startmenuoptionsbackground" ) --[[ @ 0]]
require( "ui/uieditor/widgets/startmenu/startmenu_options_slider" ) --[[ @ 0]]

DataSources.AboutPingBars = DataSourceHelpers.ListSetup( "AboutPingBars", function ( f1_arg0 )
	local f1_local0 = {} --[[ @ 0]]
	for f1_local1 = Engine[@"GetPingImageCount"] and Engine[@"GetPingImageCount"]() or 4 --[[ @ 0]], 1, -1 do
		table.insert( f1_local0, {
			models = {
				pingIndex = f1_local1
			}
		} ) --[[ @ 0]]
	end
	return f1_local0
end, true ) --[[ @ 0]]
local f0_local0 = function ( f2_arg0, f2_arg1, f2_arg2, f2_arg3, f2_arg4, f2_arg5, f2_arg6, f2_arg7 )
	local f2_local0, f2_local1 = Engine[@"GetSystemInfo"]( f2_arg0, f2_arg4 ) --[[ @ 0]]
	return {
		models = {
			name = f2_arg1,
			desc = f2_arg3,
			altText = f2_local0,
			frameWidget = f2_arg5,
			aboutTitle = f2_arg2
		},
		properties = {
			disabled = f2_arg6,
			action = f2_arg7,
			infoType = f2_arg4
		}
	}
end
 --[[ @ 0]]
local f0_local1 = function ( f3_arg0, f3_arg1, f3_arg2, f3_arg3, f3_arg4, f3_arg5, f3_arg6 )
	return {
		models = {
			name = f3_arg1,
			desc = f3_arg3,
			altText = f3_arg4,
			frameWidget = f3_arg5,
			aboutTitle = f3_arg2
		},
		properties = {
			disabled = f3_arg6
		}
	}
end
 --[[ @ 0]]
local f0_local2 = Engine[@"hash_4F9F1239CFD921FE"]( @"hash_4C241C17DD620CFF" ) --[[ @ 0]]
local f0_local3 = function ( f4_arg0, f4_arg1, f4_arg2, f4_arg3, f4_arg4 )
	f4_arg1.showing = not f4_arg1.showing --[[ @ 0]]
	local f4_local0 = f4_arg1:getModel( f4_arg2, "altText" ) --[[ @ 0]]
	if f4_local0 then
		local f4_local1 = f0_local2 --[[ @ 0]]
		if f4_arg1.showing then
			f4_local1 = f4_arg1.mainInfo --[[ @ 0]]
		end
		Engine[@"SetModelValue"]( f4_local0, f4_local1 ) --[[ @ 0]]
	end
	local f4_local1 = f4_arg1:getModel( f4_arg2, "desc" ) --[[ @ 0]]
	if f4_local1 then
		local f4_local2 = f4_arg1.descOff --[[ @ 0]]
		if f4_arg1.showing then
			f4_local2 = f4_arg1.descOn --[[ @ 0]]
		end
		Engine[@"SetModelValue"]( f4_local1, f4_local2 ) --[[ @ 0]]
	end
	local f4_local2 = f4_arg1:getModel( f4_arg2, "descKBM" ) --[[ @ 0]]
	if f4_local2 then
		local f4_local3 = f4_arg1.descOffKBM --[[ @ 0]]
		if f4_arg1.showing then
			f4_local3 = f4_arg1.descOnKBM --[[ @ 0]]
		end
		Engine[@"SetModelValue"]( f4_local2, f4_local3 ) --[[ @ 0]]
	end
	UpdateButtonPromptState( f4_arg4, f4_arg1, f4_arg2, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"] ) --[[ @ 0]]
end
 --[[ @ 0]]
local f0_local4 = function ( f5_arg0, f5_arg1, f5_arg2, f5_arg3, f5_arg4, f5_arg5, f5_arg6, f5_arg7, f5_arg8, f5_arg9 )
	local f5_local0, f5_local1 = Engine[@"GetSystemInfo"]( f5_arg0, f5_arg5 ) --[[ @ 0]]
	return {
		models = {
			name = f5_arg1,
			desc = f5_arg4,
			descKBM = f5_arg9,
			altText = f0_local2,
			frameWidget = f5_arg6,
			aboutTitle = f5_arg2
		},
		properties = {
			disabled = f5_arg7,
			action = f0_local3,
			mainInfo = f5_local0,
			showing = false,
			descOn = f5_arg3,
			descOff = f5_arg4,
			descOnKBM = f5_arg8,
			descOffKBM = f5_arg9
		}
	}
end
 --[[ @ 0]]
local f0_local5 = function ( f6_arg0 )
	local f6_local0 = "showConnectionMeter" --[[ @ 0]]
	local f6_local1 = {
		{
			name = Engine[@"hash_4F9F1239CFD921FE"]( @"hash_317857948FC2CCFC" ),
			value = 0
		},
		{
			name = Engine[@"hash_4F9F1239CFD921FE"]( @"hash_25BE4D02B20F370A" ),
			value = 1
		}
	} --[[ @ 0]]
	return {
		models = {
			name = Engine[@"hash_4F9F1239CFD921FE"]( @"hash_7332A36AC2A42279" ),
			aboutTitle = Engine[@"hash_4F9F1239CFD921FE"]( @"hash_605299E84D1B8B8B" ),
			desc = Engine[@"hash_4F9F1239CFD921FE"]( @"hash_5810C93D4187259D" ),
			optionsDatasource = CoD.OptionsUtility.CreateOptionDataSource( f6_arg0, "NetworkOptions_ShowConnectionMeter", f6_local1, f6_local0 ),
			currentSelection = CoD.OptionsUtility.GetProfileSelection( f6_arg0, f6_local1, f6_local0 ),
			frameWidget = "CoD.StartMenu_Options_Network_DescriptionPanels"
		},
		properties = {}
	}
end
 --[[ @ 0]]
DataSources.OptionNetworkSettings = DataSourceHelpers.ListSetup( "OptionNetworkSettings", function ( f7_arg0 )
	local f7_local0 = {} --[[ @ 0]]
	table.insert( f7_local0, {
		models = {
			frameWidget = "CoD.StartMenu_Options_Network_OverviewPanel"
		},
		properties = {
			customWidgetOverride = CoD.StartMenu_Options_Network_StatusOverview
		}
	} ) --[[ @ 0]]
	local f7_local1, f7_local2 = Engine[@"GetSystemInfoValueAndString"]( f7_arg0, CoD.SYSINFO_NAT_TYPE ) --[[ @ 0]]
	local f7_local3 = @"hash_0" --[[ @ 0]]
	local f7_local4 = Engine[@"GetConnectionPort"]() --[[ @ 0]]
	if f7_local1 == Enum[@"XONLINE_NAT_TYPE"][@"hash_19571467DC6166AD"] then
		f7_local3 = @"hash_6AA445309112CF99" --[[ @ 0]]
	elseif f7_local1 == Enum[@"XONLINE_NAT_TYPE"][@"hash_431FC575F7E84E5C"] then
		f7_local3 = @"hash_614209B554672F30" --[[ @ 0]]
	elseif f7_local1 == Enum[@"XONLINE_NAT_TYPE"][@"hash_3028476FFCBABCB0"] then
		f7_local3 = @"hash_5C305B096E1E2E84" --[[ @ 0]]
	end
	table.insert( f7_local0, f0_local1( f7_arg0, @"hash_50B1478806C990BB", @"hash_77743811296C5A00", Engine[@"hash_4F9F1239CFD921FE"]( f7_local3, f7_local4 ), f7_local2, "CoD.StartMenu_Options_Network_DescriptionPanels", false ) ) --[[ @ 0]]
	table.insert( f7_local0, f0_local0( f7_arg0, @"hash_586EBF1A2FAA0274", @"hash_7CB6C27E9DF1A29E", @"hash_2D1ACE135B0A0DAE", CoD.SYSINFO_BANDWIDTH, "CoD.StartMenu_Options_Network_DescriptionPanels", false ) ) --[[ @ 0]]
	local f7_local5, f7_local6 = Engine[@"GetSystemInfoValueAndString"]( f7_arg0, CoD.SYSINFO_CONNECTION_TYPE ) --[[ @ 0]]
	local f7_local7 = "" --[[ @ 0]]
	if f7_local5 == Enum[@"connectionType_e"][@"hash_40E6C9091868D18A"] then
		f7_local7 = @"hash_687FDEFB84AAAE2E" --[[ @ 0]]
	elseif f7_local5 == Enum[@"connectionType_e"][@"hash_4EFC42E21A350493"] then
		f7_local7 = @"hash_626CFE1DF00BD287" --[[ @ 0]]
	end
	table.insert( f7_local0, f0_local1( f7_arg0, @"hash_67B6345471085D98", @"hash_5602CB27BDEB55F6", f7_local7, f7_local6, "CoD.StartMenu_Options_Network_DescriptionPanels", false ) ) --[[ @ 0]]
	table.insert( f7_local0, f0_local4( f7_arg0, @"hash_728B24D7EC3259D6", @"hash_1CD225959429367C", @"hash_4FA6535477C42613", @"hash_1BE0FD8782640557", CoD.SYSINFO_GEOGRAPHICAL_REGION, "CoD.StartMenu_Options_Network_DescriptionPanels", false, @"hash_1019CA1FFCCC5E01", @"hash_1FCD61DA17014FCD" ) ) --[[ @ 0]]
	table.insert( f7_local0, f0_local4( f7_arg0, @"hash_17367624D2662070", @"hash_6F45C83E5855188A", @"hash_122E830E31485122", @"hash_2D75251DBDF92FD4", CoD.SYSINFO_EXTERNAL_IP_ADDRESS, "CoD.StartMenu_Options_Network_DescriptionPanels", false, @"hash_27AFC8A64C29EB9E", @"hash_5C2703C41D8B9AA0" ) ) --[[ @ 0]]
	table.insert( f7_local0, f0_local4( f7_arg0, @"hash_532CA1559CDF918A", @"hash_6ECFD5F1A222DCD8", @"hash_1C1498B590516530", @"hash_87FC2843A65DDAA", CoD.SYSINFO_INTERNAL_IP_ADDRESS, "CoD.StartMenu_Options_Network_DescriptionPanels", false, @"hash_488C8C2AF0695B54", @"hash_5832A647D04E8A6" ) ) --[[ @ 0]]
	if not CoD.isPC then
		table.insert( f7_local0, f0_local5( f7_arg0 ) ) --[[ @ 0]]
	end
	return f7_local0
end, true ) --[[ @ 0]]
CoD.StartMenu_Options_Network = InheritFrom( CoD.Menu ) --[[ @ 0]]
LUI.createMenu.StartMenu_Options_Network = function ( f8_arg0, f8_arg1 )
	local self = CoD.Menu.NewForUIEditor( "StartMenu_Options_Network", f8_arg0 ) --[[ @ 0]]
	local f8_local1 = self --[[ @ 0]]
	self:setClass( CoD.StartMenu_Options_Network ) --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self:setOwner( f8_arg0 ) --[[ @ 0]]
	self:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	self:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	self:playSound( "menu_open", f8_arg0 ) --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f8_local1:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local Background = CoD.StartMenuOptionsBackground.new( f8_local1, f8_arg0, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	self:addElement( Background ) --[[ @ 0]]
	self.Background = Background --[[ @ 0]]
	
	local MenuFrame = CoD.MenuFrameIngame.new( f8_local1, f8_arg0, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	self:addElement( MenuFrame ) --[[ @ 0]]
	self.MenuFrame = MenuFrame --[[ @ 0]]
	
	local ButtonList = LUI.UIList.new( f8_local1, f8_arg0, 2, 0, nil, false, false, false, false ) --[[ @ 0]]
	ButtonList:setLeftRight( 0.5, 0.5, -760, -160 ) --[[ @ 0]]
	ButtonList:setTopBottom( 0, 0, 203, 697 ) --[[ @ 0]]
	ButtonList:setWidgetType( CoD.StartMenu_Options_Slider ) --[[ @ 0]]
	ButtonList:setVerticalCount( 8 ) --[[ @ 0]]
	ButtonList:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	ButtonList:setDataSource( "OptionNetworkSettings" ) --[[ @ 0]]
	ButtonList:appendEventHandler( "input_source_changed", function ( f9_arg0, f9_arg1 )
		f9_arg1.menu = f9_arg1.menu or f8_local1 --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f9_arg0, f8_local1, f8_arg0, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local Header = ButtonList --[[ @ 0]]
	local frame = ButtonList.subscribeToModel --[[ @ 0]]
	local BackingGrayMediumLeft = Engine[@"GetModelForController"]( f8_arg0 ) --[[ @ 0]]
	frame( Header, BackingGrayMediumLeft.LastInput, function ( f10_arg0, f10_arg1 )
		CoD.Menu.UpdateButtonShownState( f10_arg1, f8_local1, f8_arg0, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ButtonList:registerEventHandler( "gain_focus", function ( element, event )
		local f11_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f11_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f11_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f8_local1, f8_arg0, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"] ) --[[ @ 0]]
		return f11_local0
	end ) --[[ @ 0]]
	f8_local1:AddButtonCallbackFunction( ButtonList, f8_arg0, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"], "ui_contextual_1", function ( element, menu, controller, model )
		if HasListAction( element, controller ) and IsElementPropertyValue( element, "showing", false ) and IsGamepad( controller ) then
			ProcessListAction( self, element, controller, menu ) --[[ @ 0]]
			PlaySoundAlias( "uin_paint_decal_nav" ) --[[ @ 0]]
			return true
		elseif HasListAction( element, controller ) and IsGamepad( controller ) then
			ProcessListAction( self, element, controller, menu ) --[[ @ 0]]
			PlaySoundAlias( "uin_paint_decal_nav" ) --[[ @ 0]]
			return true
		elseif HasListAction( element, controller ) and IsElementPropertyValue( element, "showing", false ) and IsMouseOrKeyboard( controller ) then
			ProcessListAction( self, element, controller, menu ) --[[ @ 0]]
			PlaySoundAlias( "uin_paint_decal_nav" ) --[[ @ 0]]
			return true
		elseif HasListAction( element, controller ) and IsMouseOrKeyboard( controller ) then
			ProcessListAction( self, element, controller, menu ) --[[ @ 0]]
			PlaySoundAlias( "uin_paint_decal_nav" ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if HasListAction( element, controller ) and IsElementPropertyValue( element, "showing", false ) and IsGamepad( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"], @"hash_63F20759C07A14C2", nil, "ui_contextual_1" ) --[[ @ 0]]
			return true
		elseif HasListAction( element, controller ) and IsGamepad( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"], @"hash_67A4FDABE47B6C3F", nil, "ui_contextual_1" ) --[[ @ 0]]
			return true
		elseif HasListAction( element, controller ) and IsElementPropertyValue( element, "showing", false ) and IsMouseOrKeyboard( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"], @"hash_0", nil, "ui_contextual_1" ) --[[ @ 0]]
			return false
		elseif HasListAction( element, controller ) and IsMouseOrKeyboard( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"], @"hash_0", nil, "ui_contextual_1" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( ButtonList ) --[[ @ 0]]
	self.ButtonList = ButtonList --[[ @ 0]]
	
	frame = LUI.UIFrame.new( f8_local1, f8_arg0, 0, 0, false ) --[[ @ 0]]
	frame:setLeftRight( 0.5, 0.5, -180, 700 ) --[[ @ 0]]
	frame:setTopBottom( 0, 0, 172.5, 947.5 ) --[[ @ 0]]
	self:addElement( frame ) --[[ @ 0]]
	self.frame = frame --[[ @ 0]]
	
	Header = CoD.CommonHeader.new( f8_local1, f8_arg0, 0.5, 0.5, -960, 960, 0, 0, 0, 67 ) --[[ @ 0]]
	Header.BGSceneBlur:setAlpha( 0 ) --[[ @ 0]]
	Header.subtitle.StageTitle:setText( LocalizeToUpperString( @"hash_39F9A830F04564A7" ) ) --[[ @ 0]]
	Header.subtitle.subtitle:setAlpha( 0 ) --[[ @ 0]]
	Header:subscribeToGlobalModel( f8_arg0, "LobbyRoot", "lobbyTitle", function ( model )
		local f14_local0 = model:get() --[[ @ 0]]
		if f14_local0 ~= nil then
			Header.subtitle.subtitle:setText( Engine[@"hash_4F9F1239CFD921FE"]( f14_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	Header:registerEventHandler( "menu_loaded", function ( element, event )
		local f15_local0 = nil --[[ @ 0]]
		if element.menuLoaded then
			f15_local0 = element:menuLoaded( event ) --[[ @ 0]]
		elseif element.super.menuLoaded then
			f15_local0 = element.super:menuLoaded( event ) --[[ @ 0]]
		end
		SizeToSafeArea( element, f8_arg0 ) --[[ @ 0]]
		if not f15_local0 then
			f15_local0 = element:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f15_local0
	end ) --[[ @ 0]]
	self:addElement( Header ) --[[ @ 0]]
	self.Header = Header --[[ @ 0]]
	
	BackingGrayMediumLeft = CoD.header_container_frontend.new( f8_local1, f8_arg0, 0, 1, 0, 0, 0, 0, 0, 42 ) --[[ @ 0]]
	BackingGrayMediumLeft:registerEventHandler( "menu_loaded", function ( element, event )
		local f16_local0 = nil --[[ @ 0]]
		if element.menuLoaded then
			f16_local0 = element:menuLoaded( event ) --[[ @ 0]]
		elseif element.super.menuLoaded then
			f16_local0 = element.super:menuLoaded( event ) --[[ @ 0]]
		end
		if not IsPC() then
			SizeToSafeArea( element, f8_arg0 ) --[[ @ 0]]
		end
		if not f16_local0 then
			f16_local0 = element:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f16_local0
	end ) --[[ @ 0]]
	self:addElement( BackingGrayMediumLeft ) --[[ @ 0]]
	self.BackingGrayMediumLeft = BackingGrayMediumLeft --[[ @ 0]]
	
	frame:linkToElementModel( ButtonList, nil, false, function ( model )
		frame:setModel( model, f8_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	frame:linkToElementModel( ButtonList, "frameWidget", true, function ( model )
		local f18_local0 = model:get() --[[ @ 0]]
		if f18_local0 ~= nil then
			frame:changeFrameWidget( f18_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:mergeStateConditions( {
		{
			stateName = "PC",
			condition = function ( menu, element, event )
				return IsPC()
			end
		}
	} ) --[[ @ 0]]
	self:registerEventHandler( "menu_loaded", function ( self, event )
		local f20_local0 = nil --[[ @ 0]]
		if self.menuLoaded then
			f20_local0 = self:menuLoaded( event ) --[[ @ 0]]
		elseif self.super.menuLoaded then
			f20_local0 = self.super:menuLoaded( event ) --[[ @ 0]]
		end
		ShowHeaderKickerAndIcon( f8_local1 ) --[[ @ 0]]
		SetHeadingKickerText( @"hash_61B298A1EF7420A7" ) --[[ @ 0]]
		if not f20_local0 then
			f20_local0 = self:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f20_local0
	end ) --[[ @ 0]]
	f8_local1:AddButtonCallbackFunction( self, f8_arg0, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"], nil, function ( element, menu, controller, model )
		GoBack( self, controller ) --[[ @ 0]]
		UpdateGamerprofile( self, element, controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"], @"hash_370A9FDC87CD3D48", nil, nil ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	f8_local1:AddButtonCallbackFunction( self, f8_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		if AlwaysFalse() then
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if AlwaysFalse() then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, "ui_confirm" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	MenuFrame:setModel( self.buttonModel, f8_arg0 ) --[[ @ 0]]
	if CoD.isPC then
		MenuFrame.id = "MenuFrame" --[[ @ 0]]
	end
	ButtonList.id = "ButtonList" --[[ @ 0]]
	frame.id = "frame" --[[ @ 0]]
	self:processEvent( {
		name = "menu_loaded",
		controller = f8_arg0
	} ) --[[ @ 0]]
	self.__defaultFocus = ButtonList --[[ @ 0]]
	if CoD.isPC and (IsKeyboard( f8_arg0 ) or self.ignoreCursor) then
		self:restoreState( f8_arg0 ) --[[ @ 0]]
	end
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f8_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.StartMenu_Options_Network.__resetProperties = function ( f25_arg0 )
	f25_arg0.frame:completeAnimation() --[[ @ 0]]
	f25_arg0.frame:setLeftRight( 0.5, 0.5, -180, 700 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.StartMenu_Options_Network.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f26_arg0, f26_arg1 )
			f26_arg0:__resetProperties() --[[ @ 0]]
			f26_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	PC = {
		DefaultClip = function ( f27_arg0, f27_arg1 )
			f27_arg0:__resetProperties() --[[ @ 0]]
			f27_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f27_arg0.frame:completeAnimation() --[[ @ 0]]
			f27_arg0.frame:setLeftRight( 0.5, 0.5, -65, 815 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.frame ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.StartMenu_Options_Network.__onClose = function ( f28_arg0 )
	f28_arg0.frame:close() --[[ @ 0]]
	f28_arg0.Background:close() --[[ @ 0]]
	f28_arg0.MenuFrame:close() --[[ @ 0]]
	f28_arg0.ButtonList:close() --[[ @ 0]]
	f28_arg0.Header:close() --[[ @ 0]]
	f28_arg0.BackingGrayMediumLeft:close() --[[ @ 0]]
end
 --[[ @ 0]]
