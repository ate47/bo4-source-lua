-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:36
require( "x64:3f59c6c673920a4a" ) --[[ @ 0]]
require( "ui/uieditor/widgets/backgroundframes/menuframeingame" ) --[[ @ 0]]
require( "ui/uieditor/widgets/common/commonheader" ) --[[ @ 0]]
require( "x64:71f846296f1a1b81" ) --[[ @ 0]]
require( "ui/uieditor/widgets/header/header_container_frontend" ) --[[ @ 0]]
require( "x64:4eff78026a683bfd" ) --[[ @ 0]]
require( "ui/uieditor/widgets/startmenu/options/startmenuoptionsbackground" ) --[[ @ 0]]

CoD.PC_StartMenu_Options_CoDAccount_NewAccount = InheritFrom( CoD.Menu ) --[[ @ 0]]
LUI.createMenu.PC_StartMenu_Options_CoDAccount_NewAccount = function ( f1_arg0, f1_arg1 )
	local self = CoD.Menu.NewForUIEditor( "PC_StartMenu_Options_CoDAccount_NewAccount", f1_arg0 ) --[[ @ 0]]
	local f1_local1 = self --[[ @ 0]]
	self:setClass( CoD.PC_StartMenu_Options_CoDAccount_NewAccount ) --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self:setOwner( f1_arg0 ) --[[ @ 0]]
	self:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	self:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	self:playSound( "menu_open", f1_arg0 ) --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	
	local background = CoD.StartMenuOptionsBackground.new( f1_local1, f1_arg0, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	self:addElement( background ) --[[ @ 0]]
	self.background = background --[[ @ 0]]
	
	local MenuFrameIngame = CoD.MenuFrameIngame.new( f1_local1, f1_arg0, 0.5, 0.5, -960, 960, 1, 1, -1080, 0 ) --[[ @ 0]]
	self:addElement( MenuFrameIngame ) --[[ @ 0]]
	self.MenuFrameIngame = MenuFrameIngame --[[ @ 0]]
	
	local CommonHeader = CoD.CommonHeader.new( f1_local1, f1_arg0, 0, 1, 0, 0, 0, 0, 0, 67 ) --[[ @ 0]]
	CommonHeader.BGSceneBlur:setAlpha( 0 ) --[[ @ 0]]
	CommonHeader.subtitle.StageTitle:setText( LocalizeToUpperString( @"hash_213ADAB54C482D0" ) ) --[[ @ 0]]
	CommonHeader.subtitle.subtitle:setAlpha( 0 ) --[[ @ 0]]
	CommonHeader:subscribeToGlobalModel( f1_arg0, "LobbyRoot", "lobbyTitle", function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			CommonHeader.subtitle.subtitle:setText( Engine[@"hash_4F9F1239CFD921FE"]( f2_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	CommonHeader:registerEventHandler( "menu_loaded", function ( element, event )
		local f3_local0 = nil --[[ @ 0]]
		if element.menuLoaded then
			f3_local0 = element:menuLoaded( event ) --[[ @ 0]]
		elseif element.super.menuLoaded then
			f3_local0 = element.super:menuLoaded( event ) --[[ @ 0]]
		end
		if not IsPC() then
			SizeToSafeArea( element, f1_arg0 ) --[[ @ 0]]
		end
		if not f3_local0 then
			f3_local0 = element:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f3_local0
	end ) --[[ @ 0]]
	self:addElement( CommonHeader ) --[[ @ 0]]
	self.CommonHeader = CommonHeader --[[ @ 0]]
	
	local BackingGrayMediumLeft = CoD.header_container_frontend.new( f1_local1, f1_arg0, 0, 1, 0, 0, 0, 0, 0, 42 ) --[[ @ 0]]
	self:addElement( BackingGrayMediumLeft ) --[[ @ 0]]
	self.BackingGrayMediumLeft = BackingGrayMediumLeft --[[ @ 0]]
	
	local PCStartMenuOptionsRegistrationForm = CoD.PC_StartMenu_Options_RegistrationForm.new( f1_local1, f1_arg0, 0.5, 0.5, -960, 960, 0.5, 0.5, -540, 540 ) --[[ @ 0]]
	PCStartMenuOptionsRegistrationForm:subscribeToGlobalModel( f1_arg0, "CODAccountRegistrationForm", nil, function ( model )
		PCStartMenuOptionsRegistrationForm:setModel( model, f1_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( PCStartMenuOptionsRegistrationForm ) --[[ @ 0]]
	self.PCStartMenuOptionsRegistrationForm = PCStartMenuOptionsRegistrationForm --[[ @ 0]]
	
	local DirectorSelectButtonMiniInternal2 = CoD.DirectorSelectButtonMiniInternal.new( f1_local1, f1_arg0, 0.5, 0.5, -813, -512, 0.5, 0.5, 172, 241 ) --[[ @ 0]]
	DirectorSelectButtonMiniInternal2:mergeStateConditions( {
		{
			stateName = "Locked",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		},
		{
			stateName = "Disabled",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		}
	} ) --[[ @ 0]]
	DirectorSelectButtonMiniInternal2.MiddleText:setText( LocalizeToUpperString( @"hash_3752EF7539CCF2F5" ) ) --[[ @ 0]]
	DirectorSelectButtonMiniInternal2.MiddleTextFocus:setText( LocalizeToUpperString( @"hash_3752EF7539CCF2F5" ) ) --[[ @ 0]]
	DirectorSelectButtonMiniInternal2:registerEventHandler( "gain_focus", function ( element, event )
		local f7_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f7_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f7_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f7_local0
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( DirectorSelectButtonMiniInternal2, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], nil, function ( element, menu, controller, model )
		CoD.CoDAccountUtility.SetupCurrentLegalInfo( menu, controller, "TermsOfUsePages" ) --[[ @ 0]]
		OpenOverlay( self, "LegalTextViewerMenu", controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, nil ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	self:addElement( DirectorSelectButtonMiniInternal2 ) --[[ @ 0]]
	self.DirectorSelectButtonMiniInternal2 = DirectorSelectButtonMiniInternal2 --[[ @ 0]]
	
	local DirectorSelectButtonMiniInternal = CoD.DirectorSelectButtonMiniInternal.new( f1_local1, f1_arg0, 0.5, 0.5, -813, -512, 0.5, 0.5, 249, 318 ) --[[ @ 0]]
	DirectorSelectButtonMiniInternal:mergeStateConditions( {
		{
			stateName = "Locked",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		},
		{
			stateName = "Disabled",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		}
	} ) --[[ @ 0]]
	DirectorSelectButtonMiniInternal.MiddleText:setText( LocalizeToUpperString( @"hash_5A2EE3185C07E292" ) ) --[[ @ 0]]
	DirectorSelectButtonMiniInternal.MiddleTextFocus:setText( LocalizeToUpperString( @"hash_5A2EE3185C07E292" ) ) --[[ @ 0]]
	DirectorSelectButtonMiniInternal:registerEventHandler( "gain_focus", function ( element, event )
		local f12_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f12_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f12_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f12_local0
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( DirectorSelectButtonMiniInternal, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], nil, function ( element, menu, controller, model )
		CoD.CoDAccountUtility.SetupCurrentLegalInfo( menu, controller, "PrivacyPolicyPages" ) --[[ @ 0]]
		OpenOverlay( self, "LegalTextViewerMenu", controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, nil ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	self:addElement( DirectorSelectButtonMiniInternal ) --[[ @ 0]]
	self.DirectorSelectButtonMiniInternal = DirectorSelectButtonMiniInternal --[[ @ 0]]
	
	self:registerEventHandler( "ui_keyboard_input", function ( self, event )
		local f15_local0 = nil --[[ @ 0]]
		CoD.CoDAccountUtility.CodAccountHandleKeyboardComplete( self, f1_arg0, event, self.PCStartMenuOptionsRegistrationForm ) --[[ @ 0]]
		if not f15_local0 then
			f15_local0 = self:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f15_local0
	end ) --[[ @ 0]]
	self:registerEventHandler( "list_active_changed", function ( self, event )
		local f16_local0 = nil --[[ @ 0]]
		CoD.CoDAccountUtility.OnNewAccountItemFocusChange( f1_local1, f1_arg0, self ) --[[ @ 0]]
		return f16_local0
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"], nil, function ( element, menu, controller, model )
		GoBack( self, controller ) --[[ @ 0]]
		CoD.CoDAccountUtility.ClearRegistrationEmailAndPasswordModels( controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"], @"hash_370A9FDC87CD3D48", nil, nil ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	self:subscribeToGlobalModel( f1_arg0, "UNOAccountInfo", "iTransactionResult", function ( model )
		local f19_local0 = self --[[ @ 0]]
		CoD.CoDAccountUtility.CodAccountOnTransactionResultUpdated( self, f1_arg0, model ) --[[ @ 0]]
	end ) --[[ @ 0]]
	MenuFrameIngame:setModel( self.buttonModel, f1_arg0 ) --[[ @ 0]]
	if CoD.isPC then
		MenuFrameIngame.id = "MenuFrameIngame" --[[ @ 0]]
	end
	PCStartMenuOptionsRegistrationForm.id = "PCStartMenuOptionsRegistrationForm" --[[ @ 0]]
	DirectorSelectButtonMiniInternal2.id = "DirectorSelectButtonMiniInternal2" --[[ @ 0]]
	DirectorSelectButtonMiniInternal.id = "DirectorSelectButtonMiniInternal" --[[ @ 0]]
	self:processEvent( {
		name = "menu_loaded",
		controller = f1_arg0
	} ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg0 ) --[[ @ 0]]
	end
	
	local f1_local9 = self --[[ @ 0]]
	CoD.BaseUtility.SetPropertiesFromUserData( self, f1_arg1 ) --[[ @ 0]]
	return self
end
 --[[ @ 0]]
CoD.PC_StartMenu_Options_CoDAccount_NewAccount.__onClose = function ( f20_arg0 )
	f20_arg0.background:close() --[[ @ 0]]
	f20_arg0.MenuFrameIngame:close() --[[ @ 0]]
	f20_arg0.CommonHeader:close() --[[ @ 0]]
	f20_arg0.BackingGrayMediumLeft:close() --[[ @ 0]]
	f20_arg0.PCStartMenuOptionsRegistrationForm:close() --[[ @ 0]]
	f20_arg0.DirectorSelectButtonMiniInternal2:close() --[[ @ 0]]
	f20_arg0.DirectorSelectButtonMiniInternal:close() --[[ @ 0]]
end
 --[[ @ 0]]
