-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:36
require( "x64:2d13d1dd926408a1" ) --[[ @ 0]]
require( "x64:7f6ae994925ce8e1" ) --[[ @ 0]]
require( "x64:6d6084d285dc1ae8" ) --[[ @ 0]]
require( "ui/uieditor/widgets/footer/footercontainer_frontend_right" ) --[[ @ 0]]
require( "ui/uieditor/widgets/header/header_container_frontend" ) --[[ @ 0]]
require( "ui/uieditor/widgets/scrollbars/verticalcounter" ) --[[ @ 0]]
require( "x64:5c5412d93b9c5c17" ) --[[ @ 0]]

CoD.DirectorFindGame = InheritFrom( CoD.Menu ) --[[ @ 0]]
LUI.createMenu.DirectorFindGame = function ( f1_arg0, f1_arg1 )
	local self = CoD.Menu.NewForUIEditor( "DirectorFindGame", f1_arg0 ) --[[ @ 0]]
	local f1_local1 = self --[[ @ 0]]
	CoD.BaseUtility.SetPropertiesFromUserData( self, f1_arg1 ) --[[ @ 0]]
	CoD.DirectorUtility.SetupDirectorFiltersCards( f1_local1, f1_arg0, self ) --[[ @ 0]]
	self:setClass( CoD.DirectorFindGame ) --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self:setOwner( f1_arg0 ) --[[ @ 0]]
	self:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	self:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	self:playSound( "menu_open", f1_arg0 ) --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	
	local TEMPBlackBGOverlay = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	TEMPBlackBGOverlay:setRGB( 0, 0, 0 ) --[[ @ 0]]
	TEMPBlackBGOverlay:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_E2354BE557C4C7A" ) ) --[[ @ 0]]
	TEMPBlackBGOverlay:setShaderVector( 0, 0.01, 0.5, 0, 0 ) --[[ @ 0]]
	self:addElement( TEMPBlackBGOverlay ) --[[ @ 0]]
	self.TEMPBlackBGOverlay = TEMPBlackBGOverlay --[[ @ 0]]
	
	local OptionsList = LUI.UIList.new( f1_local1, f1_arg0, 20, 0, nil, false, false, false, false ) --[[ @ 0]]
	OptionsList:setLeftRight( 0.5, 0.5, -864, 292 ) --[[ @ 0]]
	OptionsList:setTopBottom( 0.5, 0.5, -522, 522 ) --[[ @ 0]]
	OptionsList:setWidgetType( CoD.DirectorPlaylistOption ) --[[ @ 0]]
	OptionsList:setHorizontalCount( 3 ) --[[ @ 0]]
	OptionsList:setVerticalCount( 4 ) --[[ @ 0]]
	OptionsList:setSpacing( 20 ) --[[ @ 0]]
	OptionsList:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	OptionsList:setVerticalCounter( CoD.verticalCounter ) --[[ @ 0]]
	OptionsList:linkToElementModel( OptionsList, "locked", true, function ( model, f2_arg1 )
		CoD.Menu.UpdateButtonShownState( f2_arg1, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	OptionsList:linkToElementModel( OptionsList, "lockState", true, function ( model, f3_arg1 )
		CoD.Menu.UpdateButtonShownState( f3_arg1, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f3_arg1, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	OptionsList:registerEventHandler( "gain_focus", function ( element, event )
		local f4_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f4_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f4_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( element, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"] ) --[[ @ 0]]
		return f4_local0
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( OptionsList, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		if not CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "locked" ) then
			ProcessListAction( self, element, controller, menu ) --[[ @ 0]]
			GoBack( self, controller ) --[[ @ 0]]
			return true
		elseif CoD.ModelUtility.IsSelfModelValueEqualToEnum( element, controller, "lockState", Enum[@"hash_4DACBB5C5F26BCD9"][@"hash_19B632F6362EA1BE"] ) then
			OpenSystemOverlay( self, menu, controller, "DownloadDLC", {
				_model = element:getModel()
			} ) --[[ @ 0]]
			return true
		elseif CoD.ModelUtility.IsSelfModelValueEqualToEnum( element, controller, "lockState", Enum[@"hash_4DACBB5C5F26BCD9"][@"hash_4BDEB566326AC98"] ) then
			OpenSystemOverlay( self, menu, controller, "SeasonPassUpsell", {
				_model = element:getModel(),
				_description = @"hash_475EE3FCE54AF260"
			} ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "locked" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, "ui_confirm" ) --[[ @ 0]]
			return true
		elseif CoD.ModelUtility.IsSelfModelValueEqualToEnum( element, controller, "lockState", Enum[@"hash_4DACBB5C5F26BCD9"][@"hash_19B632F6362EA1BE"] ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, "ui_confirm" ) --[[ @ 0]]
			return true
		elseif CoD.ModelUtility.IsSelfModelValueEqualToEnum( element, controller, "lockState", Enum[@"hash_4DACBB5C5F26BCD9"][@"hash_4BDEB566326AC98"] ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, "ui_confirm" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( OptionsList, f1_arg0, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"], "ui_contextual_1", function ( element, menu, controller, model )
		if CoD.ModelUtility.IsSelfModelValueEqualToEnum( element, controller, "lockState", Enum[@"hash_4DACBB5C5F26BCD9"][@"hash_19B632F6362EA1BE"] ) then
			CoD.StoreUtility.OpenStoreToDLCPack( self, element, controller, "DirectorFindGame", menu ) --[[ @ 0]]
			return true
		elseif CoD.ModelUtility.IsSelfModelValueEqualToEnum( element, controller, "lockState", Enum[@"hash_4DACBB5C5F26BCD9"][@"hash_4BDEB566326AC98"] ) then
			CoD.StoreUtility.OpenStoreToDLCPack( self, element, controller, "DirectorFindGame", menu ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if CoD.ModelUtility.IsSelfModelValueEqualToEnum( element, controller, "lockState", Enum[@"hash_4DACBB5C5F26BCD9"][@"hash_19B632F6362EA1BE"] ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"], @"hash_0", nil, "ui_contextual_1" ) --[[ @ 0]]
			return false
		elseif CoD.ModelUtility.IsSelfModelValueEqualToEnum( element, controller, "lockState", Enum[@"hash_4DACBB5C5F26BCD9"][@"hash_4BDEB566326AC98"] ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"], @"hash_0", nil, "ui_contextual_1" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( OptionsList ) --[[ @ 0]]
	self.OptionsList = OptionsList --[[ @ 0]]
	
	local FooterContainerFrontendRight = CoD.FooterContainer_Frontend_Right.new( f1_local1, f1_arg0, 0, 1, 0, 0, 1, 1, -48, 0 ) --[[ @ 0]]
	FooterContainerFrontendRight:registerEventHandler( "menu_loaded", function ( element, event )
		local f9_local0 = nil --[[ @ 0]]
		if element.menuLoaded then
			f9_local0 = element:menuLoaded( event ) --[[ @ 0]]
		elseif element.super.menuLoaded then
			f9_local0 = element.super:menuLoaded( event ) --[[ @ 0]]
		end
		if not IsPC() then
			SizeToSafeArea( element, f1_arg0 ) --[[ @ 0]]
		end
		if not f9_local0 then
			f9_local0 = element:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f9_local0
	end ) --[[ @ 0]]
	self:addElement( FooterContainerFrontendRight ) --[[ @ 0]]
	self.FooterContainerFrontendRight = FooterContainerFrontendRight --[[ @ 0]]
	
	local BackingGrayMediumLeft = CoD.header_container_frontend.new( f1_local1, f1_arg0, 0, 0, 0, 1920, 0, 0, 0, 42 ) --[[ @ 0]]
	BackingGrayMediumLeft:registerEventHandler( "menu_loaded", function ( element, event )
		local f10_local0 = nil --[[ @ 0]]
		if element.menuLoaded then
			f10_local0 = element:menuLoaded( event ) --[[ @ 0]]
		elseif element.super.menuLoaded then
			f10_local0 = element.super:menuLoaded( event ) --[[ @ 0]]
		end
		SizeToSafeArea( element, f1_arg0 ) --[[ @ 0]]
		if not f10_local0 then
			f10_local0 = element:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f10_local0
	end ) --[[ @ 0]]
	self:addElement( BackingGrayMediumLeft ) --[[ @ 0]]
	self.BackingGrayMediumLeft = BackingGrayMediumLeft --[[ @ 0]]
	
	local SelectedPlaylistInfo = CoD.DirectorFindGamePlaylistInfoMP.new( f1_local1, f1_arg0, 0.5, 0.5, 324, 864, 0.5, 0.5, -255, 257 ) --[[ @ 0]]
	self:addElement( SelectedPlaylistInfo ) --[[ @ 0]]
	self.SelectedPlaylistInfo = SelectedPlaylistInfo --[[ @ 0]]
	
	local DirectorHeaderTabSafeArea = CoD.DirectorHeaderTabSafeArea.new( f1_local1, f1_arg0, 0, 0, 0, 1920, 0, 0, 0, 1080 ) --[[ @ 0]]
	DirectorHeaderTabSafeArea.CommonHeader.subtitle.StageTitle:setText( LocalizeToUpperString( @"hash_538A4FBEBCE1E6BE" ) ) --[[ @ 0]]
	DirectorHeaderTabSafeArea.Tabs.customClasssList:setDataSource( "DirectorFilters" ) --[[ @ 0]]
	DirectorHeaderTabSafeArea:subscribeToGlobalModel( f1_arg0, "LobbyRoot", "lobbyTitle", function ( model )
		local f11_local0 = model:get() --[[ @ 0]]
		if f11_local0 ~= nil then
			DirectorHeaderTabSafeArea.CommonHeader.subtitle.subtitle:setText( Engine[@"hash_4F9F1239CFD921FE"]( f11_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	DirectorHeaderTabSafeArea:registerEventHandler( "menu_loaded", function ( element, event )
		local f12_local0 = nil --[[ @ 0]]
		if element.menuLoaded then
			f12_local0 = element:menuLoaded( event ) --[[ @ 0]]
		elseif element.super.menuLoaded then
			f12_local0 = element.super:menuLoaded( event ) --[[ @ 0]]
		end
		SizeToSafeArea( element, f1_arg0 ) --[[ @ 0]]
		if not f12_local0 then
			f12_local0 = element:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f12_local0
	end ) --[[ @ 0]]
	self:addElement( DirectorHeaderTabSafeArea ) --[[ @ 0]]
	self.DirectorHeaderTabSafeArea = DirectorHeaderTabSafeArea --[[ @ 0]]
	
	local UpsellBanner = CoD.UpsellBanner.new( f1_local1, f1_arg0, 0, 0, 1284, 1824, 0, 0, 823.5, 973.5 ) --[[ @ 0]]
	self:addElement( UpsellBanner ) --[[ @ 0]]
	self.UpsellBanner = UpsellBanner --[[ @ 0]]
	
	OptionsList:linkToElementModel( DirectorHeaderTabSafeArea.Tabs.customClasssList, "dataSource", true, function ( model )
		local f13_local0 = model:get() --[[ @ 0]]
		if f13_local0 ~= nil then
			OptionsList:setDataSource( f13_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	SelectedPlaylistInfo:linkToElementModel( OptionsList, nil, false, function ( model )
		SelectedPlaylistInfo:setModel( model, f1_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	UpsellBanner:linkToElementModel( OptionsList, nil, false, function ( model )
		UpsellBanner:setModel( model, f1_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"], nil, function ( element, menu, controller, model )
		GoBack( self, controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"], @"hash_370A9FDC87CD3D48", nil, nil ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( self, "close", function ( element )
		ClearMenuSavedState( f1_local1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	OptionsList.id = "OptionsList" --[[ @ 0]]
	FooterContainerFrontendRight:setModel( self.buttonModel, f1_arg0 ) --[[ @ 0]]
	if CoD.isPC then
		FooterContainerFrontendRight.id = "FooterContainerFrontendRight" --[[ @ 0]]
	end
	DirectorHeaderTabSafeArea.id = "DirectorHeaderTabSafeArea" --[[ @ 0]]
	self:processEvent( {
		name = "menu_loaded",
		controller = f1_arg0
	} ) --[[ @ 0]]
	self.__defaultFocus = OptionsList --[[ @ 0]]
	if CoD.isPC and (IsKeyboard( f1_arg0 ) or self.ignoreCursor) then
		self:restoreState( f1_arg0 ) --[[ @ 0]]
	end
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg0 ) --[[ @ 0]]
	end
	
	local f1_local9 = self --[[ @ 0]]
	CoD.BaseUtility.SetModelFromPropertyModel( f1_arg0, self, self ) --[[ @ 0]]
	CoD.DoubleXPUtility.SetupPromotionalXPTimer( f1_arg0, f1_local1 ) --[[ @ 0]]
	return self
end
 --[[ @ 0]]
CoD.DirectorFindGame.__onClose = function ( f19_arg0 )
	f19_arg0.SelectedPlaylistInfo:close() --[[ @ 0]]
	f19_arg0.UpsellBanner:close() --[[ @ 0]]
	f19_arg0.OptionsList:close() --[[ @ 0]]
	f19_arg0.FooterContainerFrontendRight:close() --[[ @ 0]]
	f19_arg0.BackingGrayMediumLeft:close() --[[ @ 0]]
	f19_arg0.DirectorHeaderTabSafeArea:close() --[[ @ 0]]
end
 --[[ @ 0]]
