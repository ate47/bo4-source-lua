-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:36
require( "ui/uieditor/widgets/backgroundframes/genericmenuframe" ) --[[ @ 0]]
require( "x64:4abbd658ce01510c" ) --[[ @ 0]]
require( "ui/uieditor/widgets/common/common_tabbar_center" ) --[[ @ 0]]

CoD.DirectorChangeCharacter = InheritFrom( CoD.Menu ) --[[ @ 0]]
LUI.createMenu.DirectorChangeCharacter = function ( f1_arg0, f1_arg1 )
	local self = CoD.Menu.NewForUIEditor( "DirectorChangeCharacter", f1_arg0 ) --[[ @ 0]]
	local f1_local1 = self --[[ @ 0]]
	CoD.BaseUtility.InitGlobalModel( "hudItems.specialistSwitchIsLethal", false ) --[[ @ 0]]
	CoD.BaseUtility.SetPropertiesFromUserData( self, f1_arg1 ) --[[ @ 0]]
	CoD.BaseUtility.CreateControllerModel( f1_arg0, "PositionDraft.ResetOnCloseCharacterSelection" ) --[[ @ 0]]
	self:setClass( CoD.DirectorChangeCharacter ) --[[ @ 0]]
	self.soundSet = "MultiplayerMain" --[[ @ 0]]
	self:setOwner( f1_arg0 ) --[[ @ 0]]
	self:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	self:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	self:playSound( "menu_open", f1_arg0 ) --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	
	local GenericMenuFrame = CoD.GenericMenuFrame.new( f1_local1, f1_arg0, 0.5, 0.5, -960, 960, 0, 1, 0, 0 ) --[[ @ 0]]
	GenericMenuFrame.CommonHeader.subtitle.StageTitle:setText( LocalizeToUpperString( @"hash_5C5A14AD1770107F" ) ) --[[ @ 0]]
	GenericMenuFrame:subscribeToGlobalModel( f1_arg0, "LobbyRoot", "lobbyTitle", function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			GenericMenuFrame.CommonHeader.subtitle.subtitle:setText( Engine[@"hash_4F9F1239CFD921FE"]( f2_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( GenericMenuFrame ) --[[ @ 0]]
	self.GenericMenuFrame = GenericMenuFrame --[[ @ 0]]
	
	local FrameWidget = LUI.UIFrame.new( f1_local1, f1_arg0, 0, 0, false ) --[[ @ 0]]
	FrameWidget:setLeftRight( 0.5, 0.5, -853.5, 864.5 ) --[[ @ 0]]
	FrameWidget:setTopBottom( 0.5, 0.5, -408, 392 ) --[[ @ 0]]
	self:addElement( FrameWidget ) --[[ @ 0]]
	self.FrameWidget = FrameWidget --[[ @ 0]]
	
	local CategoryTabs = CoD.Common_Tabbar_Center.new( f1_local1, f1_arg0, 0.5, 0.5, 120, 828, 0.5, 0.5, -361.5, -300.5 ) --[[ @ 0]]
	CategoryTabs.Tabs.grid:setHorizontalCount( 3 ) --[[ @ 0]]
	CategoryTabs.Tabs.grid:setDataSource( "WZCharacterCategories" ) --[[ @ 0]]
	CategoryTabs:registerEventHandler( "grid_item_changed", function ( element, event )
		local f3_local0 = nil --[[ @ 0]]
		CloseContextualMenu( f1_local1, f1_arg0 ) --[[ @ 0]]
		return f3_local0
	end ) --[[ @ 0]]
	self:addElement( CategoryTabs ) --[[ @ 0]]
	self.CategoryTabs = CategoryTabs --[[ @ 0]]
	
	local TabBottomLine = LUI.UIImage.new( 0.5, 0.5, 80, 900, 0.5, 0.5, -310.5, -306.5 ) --[[ @ 0]]
	TabBottomLine:setAlpha( 0.08 ) --[[ @ 0]]
	TabBottomLine:setImage( RegisterImage( @"uie_ui_menu_common_tab_line_bottom" ) ) --[[ @ 0]]
	self:addElement( TabBottomLine ) --[[ @ 0]]
	self.TabBottomLine = TabBottomLine --[[ @ 0]]
	
	local WZCharacterInfoContainer = CoD.WZCharacterInfoContainer.new( f1_local1, f1_arg0, 0.5, 0.5, -853.5, -50.5, 0.5, 0.5, 165, 325 ) --[[ @ 0]]
	WZCharacterInfoContainer.CharacterSelectionCharacterInfo.CharacterFullName:setAlpha( 0 ) --[[ @ 0]]
	WZCharacterInfoContainer:subscribeToGlobalModel( f1_arg0, "WZCharacterInfo", "infoModel", function ( model )
		CoD.WZUtility.SetElementModelToControllerModelValue( WZCharacterInfoContainer, f1_arg0, "WZCharacterInfo.infoModel" ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( WZCharacterInfoContainer ) --[[ @ 0]]
	self.WZCharacterInfoContainer = WZCharacterInfoContainer --[[ @ 0]]
	
	FrameWidget:linkToElementModel( CategoryTabs.Tabs.grid, nil, false, function ( model )
		FrameWidget:setModel( model, f1_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	FrameWidget:linkToElementModel( CategoryTabs.Tabs.grid, "frameWidget", true, function ( model )
		local f6_local0 = model:get() --[[ @ 0]]
		if f6_local0 ~= nil then
			FrameWidget:changeFrameWidget( f6_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	local f1_local7 = self --[[ @ 0]]
	local f1_local8 = self.subscribeToModel --[[ @ 0]]
	local f1_local9 = DataSources.CharacterBreadcrumbs.getModel( f1_arg0 ) --[[ @ 0]]
	f1_local8( f1_local7, f1_local9.breadcrumbCount, function ( f7_arg0, f7_arg1 )
		CoD.Menu.UpdateButtonShownState( f7_arg1, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_229E5695FF1401AD"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:registerEventHandler( "occlusion_change", function ( self, event )
		local f8_local0 = nil --[[ @ 0]]
		if self.OcclusionChange then
			f8_local0 = self:OcclusionChange( event ) --[[ @ 0]]
		elseif self.super.OcclusionChange then
			f8_local0 = self.super:OcclusionChange( event ) --[[ @ 0]]
		end
		if IsEventPropertyEqualTo( event, "occluded", true ) then
			MenuUnhideFreeCursor( f1_local1, f1_arg0 ) --[[ @ 0]]
		elseif not IsPC() then
			MenuHidesFreeCursor( f1_local1, f1_arg0 ) --[[ @ 0]]
		end
		if not f8_local0 then
			f8_local0 = self:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f8_local0
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"], "ESCAPE", function ( element, menu, controller, model )
		PositionDraftOnFocusCharacterLost( self, element, controller ) --[[ @ 0]]
		GoBack( self, controller ) --[[ @ 0]]
		CoD.LobbyUtility.SetMenuControllerRestriction( self, controller, 0 ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"], @"hash_370A9FDC87CD3D48", nil, "ESCAPE" ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"LUIButton"][@"hash_229E5695FF1401AD"], "ui_contextual_2", function ( element, menu, controller, model )
		if not IsPC() then
			CoD.BaseUtility.UINoAction() --[[ @ 0]]
			return true
		elseif CoD.ModelUtility.IsGlobalDataSourceModelValueGreaterThan( controller, "CharacterBreadcrumbs", "breadcrumbCount", 0 ) and IsPC() then
			CoD.BreadcrumbUtility.ClearAllPersonalizationBreadcrumbs( menu, controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsPC() then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_229E5695FF1401AD"], @"hash_0", nil, "ui_contextual_2" ) --[[ @ 0]]
			return false
		elseif CoD.ModelUtility.IsGlobalDataSourceModelValueGreaterThan( controller, "CharacterBreadcrumbs", "breadcrumbCount", 0 ) and IsPC() then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_229E5695FF1401AD"], @"hash_65619D8212EDA599", nil, "ui_contextual_2" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self.__on_menuOpened_self = function ( f13_arg0, f13_arg1, f13_arg2, f13_arg3 )
		local f13_local0 = self --[[ @ 0]]
		SendClientScriptMenuChangeNotify( f13_arg1, f13_arg2, true ) --[[ @ 0]]
		PositionDraftOnChangingCharacter( f13_arg1 ) --[[ @ 0]]
		CoD.BaseUtility.CreateControllerModel( f13_arg1, "PositionDraft.CloseCharacterSelection" ) --[[ @ 0]]
		CoD.LobbyUtility.SetMenuControllerRestriction( self, f13_arg1, 1 ) --[[ @ 0]]
		SetControllerModelValue( f13_arg1, "PositionDraft.ResetOnCloseCharacterSelection", 0 ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	f1_local1:addMenuOpenedCallback( self.__on_menuOpened_self ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( self, "close", function ( element )
		PositionDraftClearFocusedCharacter( f1_arg0 ) --[[ @ 0]]
		SendClientScriptMenuChangeNotify( f1_arg0, f1_local1, false ) --[[ @ 0]]
		ClearMenuSavedState( f1_local1 ) --[[ @ 0]]
		PositionDraftOnCloseCharacterSelection( f1_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	GenericMenuFrame:setModel( self.buttonModel, f1_arg0 ) --[[ @ 0]]
	if CoD.isPC then
		GenericMenuFrame.id = "GenericMenuFrame" --[[ @ 0]]
	end
	FrameWidget.id = "FrameWidget" --[[ @ 0]]
	CategoryTabs.id = "CategoryTabs" --[[ @ 0]]
	self:processEvent( {
		name = "menu_loaded",
		controller = f1_arg0
	} ) --[[ @ 0]]
	self.__defaultFocus = FrameWidget --[[ @ 0]]
	if CoD.isPC and (IsKeyboard( f1_arg0 ) or self.ignoreCursor) then
		self:restoreState( f1_arg0 ) --[[ @ 0]]
	end
	self.__on_close_removeOverrides = function ()
		f1_local1:removeMenuOpenedCallback( self.__on_menuOpened_self ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg0 ) --[[ @ 0]]
	end
	f1_local8 = self --[[ @ 0]]
	if not IsPC() then
		MenuHidesFreeCursor( f1_local1, f1_arg0 ) --[[ @ 0]]
	end
	return self
end
 --[[ @ 0]]
CoD.DirectorChangeCharacter.__onClose = function ( f16_arg0 )
	f16_arg0.__on_close_removeOverrides() --[[ @ 0]]
	f16_arg0.FrameWidget:close() --[[ @ 0]]
	f16_arg0.GenericMenuFrame:close() --[[ @ 0]]
	f16_arg0.CategoryTabs:close() --[[ @ 0]]
	f16_arg0.WZCharacterInfoContainer:close() --[[ @ 0]]
end
 --[[ @ 0]]
