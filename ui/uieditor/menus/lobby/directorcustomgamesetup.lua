-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:36
require( "ui/uieditor/widgets/common/commonheader" ) --[[ @ 0]]
require( "x64:228b7b6066db25af" ) --[[ @ 0]]
require( "ui/uieditor/widgets/director/directorfixedwidthheading" ) --[[ @ 0]]
require( "x64:12f210cb5e3fa853" ) --[[ @ 0]]
require( "x64:26af0791fe52582b" ) --[[ @ 0]]
require( "ui/uieditor/widgets/director/directorteammember" ) --[[ @ 0]]
require( "ui/uieditor/widgets/footer/footercontainer_frontend_right" ) --[[ @ 0]]
require( "ui/uieditor/widgets/header/header_container_frontend" ) --[[ @ 0]]
require( "ui/uieditor/widgets/emptyfocusable" ) --[[ @ 0]]

CoD.DirectorCustomGameSetUp = InheritFrom( CoD.Menu ) --[[ @ 0]]
LUI.createMenu.DirectorCustomGameSetUp = function ( f1_arg0, f1_arg1 )
	local self = CoD.Menu.NewForUIEditor( "DirectorCustomGameSetUp", f1_arg0 ) --[[ @ 0]]
	local f1_local1 = self --[[ @ 0]]
	self:setClass( CoD.DirectorCustomGameSetUp ) --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self:setOwner( f1_arg0 ) --[[ @ 0]]
	self:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	self:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	self:playSound( "menu_open", f1_arg0 ) --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_local1:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local SceneBlur = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 6, -6 ) --[[ @ 0]]
	SceneBlur:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_E2354BE557C4C7A" ) ) --[[ @ 0]]
	SceneBlur:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( SceneBlur ) --[[ @ 0]]
	self.SceneBlur = SceneBlur --[[ @ 0]]
	
	local DirectorLobbySettingList = CoD.DirectorLobbySettingList.new( f1_local1, f1_arg0, 0.5, 0.5, 508, 864, 0, 0, 734, 934 ) --[[ @ 0]]
	DirectorLobbySettingList:mergeStateConditions( {
		{
			stateName = "NoCodCaster",
			condition = function ( menu, element, event )
				return IsZombies()
			end
		}
	} ) --[[ @ 0]]
	local HeaderGameRule = DirectorLobbySettingList --[[ @ 0]]
	local DirectorGameSettingList = DirectorLobbySettingList.subscribeToModel --[[ @ 0]]
	local HeaderGameMode = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	DirectorGameSettingList( HeaderGameRule, HeaderGameMode["lobbyRoot.lobbyNav"], function ( f3_arg0 )
		f1_local1:updateElementState( DirectorLobbySettingList, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f3_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:addElement( DirectorLobbySettingList ) --[[ @ 0]]
	self.DirectorLobbySettingList = DirectorLobbySettingList --[[ @ 0]]
	
	DirectorGameSettingList = CoD.DirectorGameSettingList.new( f1_local1, f1_arg0, 0.5, 0.5, 508, 864, 0, 0, 250, 670 ) --[[ @ 0]]
	self:addElement( DirectorGameSettingList ) --[[ @ 0]]
	self.DirectorGameSettingList = DirectorGameSettingList --[[ @ 0]]
	
	HeaderGameRule = LUI.UIText.new( 0.5, 0.5, 508, 968, 0, 0, 476, 496 ) --[[ @ 0]]
	HeaderGameRule:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	HeaderGameRule:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_BB7AA7A26F39DFA" ) ) --[[ @ 0]]
	HeaderGameRule:setTTF( "default" ) --[[ @ 0]]
	HeaderGameRule:setLetterSpacing( 2 ) --[[ @ 0]]
	HeaderGameRule:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	HeaderGameRule:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	self:addElement( HeaderGameRule ) --[[ @ 0]]
	self.HeaderGameRule = HeaderGameRule --[[ @ 0]]
	
	HeaderGameMode = LUI.UIText.new( 0.5, 0.5, 508, 968, 0, 0, 223, 243 ) --[[ @ 0]]
	HeaderGameMode:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	HeaderGameMode:setText( LocalizeToUpperString( @"hash_11496B17DC3093F9" ) ) --[[ @ 0]]
	HeaderGameMode:setTTF( "default" ) --[[ @ 0]]
	HeaderGameMode:setLetterSpacing( 2 ) --[[ @ 0]]
	HeaderGameMode:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	HeaderGameMode:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	self:addElement( HeaderGameMode ) --[[ @ 0]]
	self.HeaderGameMode = HeaderGameMode --[[ @ 0]]
	
	local SelectionModeFocusBlocker = nil --[[ @ 0]]
	
	SelectionModeFocusBlocker = CoD.emptyFocusable.new( f1_local1, f1_arg0, 0.5, 0.5, 498, 874, 0, 0, 240, 944 ) --[[ @ 0]]
	SelectionModeFocusBlocker:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( SelectionModeFocusBlocker ) --[[ @ 0]]
	self.SelectionModeFocusBlocker = SelectionModeFocusBlocker --[[ @ 0]]
	
	local SelectionModeOverlay = nil --[[ @ 0]]
	
	SelectionModeOverlay = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	SelectionModeOverlay:setRGB( 0, 0, 0 ) --[[ @ 0]]
	SelectionModeOverlay:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( SelectionModeOverlay ) --[[ @ 0]]
	self.SelectionModeOverlay = SelectionModeOverlay --[[ @ 0]]
	
	local BackingFree = LUI.UIImage.new( 0.5, 0.5, -861, 0, 0, 0, 227, 872 ) --[[ @ 0]]
	BackingFree:setRGB( 0, 0, 0 ) --[[ @ 0]]
	BackingFree:setAlpha( 0.15 ) --[[ @ 0]]
	self:addElement( BackingFree ) --[[ @ 0]]
	self.BackingFree = BackingFree --[[ @ 0]]
	
	local FreeTeam = LUI.UIList.new( f1_local1, f1_arg0, 18, 0, nil, false, false, false, false ) --[[ @ 0]]
	FreeTeam:setLeftRight( 0.5, 0.5, -840, -22 ) --[[ @ 0]]
	FreeTeam:setTopBottom( 0, 0, 250, 850 ) --[[ @ 0]]
	FreeTeam:setWidgetType( CoD.DirectorTeamMember ) --[[ @ 0]]
	FreeTeam:setHorizontalCount( 2 ) --[[ @ 0]]
	FreeTeam:setVerticalCount( 6 ) --[[ @ 0]]
	FreeTeam:setSpacing( 18 ) --[[ @ 0]]
	FreeTeam:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	FreeTeam:setFilter( function ( f4_arg0 )
		local f4_local0 --[[ @ 0]]
		if f4_arg0.team:get() == Enum[@"team_t"][@"hash_5E4DDAC9C5C45556"] or f4_arg0.team:get() == Enum[@"team_t"][@"hash_BD65CBD25CCBEDC"] then
			f4_local0 = false --[[ @ 0]]
		else
			f4_local0 = true --[[ @ 0]]
		end
		return f4_local0
	end ) --[[ @ 0]]
	FreeTeam:setDataSource( "DirectorPartyListCustom" ) --[[ @ 0]]
	FreeTeam:appendEventHandler( "on_session_start", function ( f5_arg0, f5_arg1 )
		f5_arg1.menu = f5_arg1.menu or f1_local1 --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f5_arg0, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	FreeTeam:appendEventHandler( "on_session_end", function ( f6_arg0, f6_arg1 )
		f6_arg1.menu = f6_arg1.menu or f1_local1 --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f6_arg0, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local BackingAxis = FreeTeam --[[ @ 0]]
	local HeaderFreeTeam = FreeTeam.subscribeToModel --[[ @ 0]]
	local AxisTeam = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	HeaderFreeTeam( BackingAxis, AxisTeam["lobbyRoot.lobbyNav"], function ( f7_arg0, f7_arg1 )
		CoD.Menu.UpdateButtonShownState( f7_arg1, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	BackingAxis = FreeTeam --[[ @ 0]]
	HeaderFreeTeam = FreeTeam.subscribeToModel --[[ @ 0]]
	AxisTeam = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	HeaderFreeTeam( BackingAxis, AxisTeam["lobbyRoot.gameClient.update"], function ( f8_arg0, f8_arg1 )
		CoD.Menu.UpdateButtonShownState( f8_arg1, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	BackingAxis = FreeTeam --[[ @ 0]]
	HeaderFreeTeam = FreeTeam.subscribeToModel --[[ @ 0]]
	AxisTeam = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	HeaderFreeTeam( BackingAxis, AxisTeam["lobbyRoot.privateClient.update"], function ( f9_arg0, f9_arg1 )
		CoD.Menu.UpdateButtonShownState( f9_arg1, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	FreeTeam:linkToElementModel( FreeTeam, "xuid", true, function ( model, f10_arg1 )
		CoD.Menu.UpdateButtonShownState( f10_arg1, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	FreeTeam:linkToElementModel( FreeTeam, "team", true, function ( model, f11_arg1 )
		CoD.Menu.UpdateButtonShownState( f11_arg1, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	BackingAxis = FreeTeam --[[ @ 0]]
	HeaderFreeTeam = FreeTeam.subscribeToModel --[[ @ 0]]
	AxisTeam = DataSources.LobbyRoot.getModel( f1_arg0 ) --[[ @ 0]]
	HeaderFreeTeam( BackingAxis, AxisTeam.selectedXuid, function ( f12_arg0, f12_arg1 )
		CoD.Menu.UpdateButtonShownState( f12_arg1, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	FreeTeam:appendEventHandler( "input_source_changed", function ( f13_arg0, f13_arg1 )
		f13_arg1.menu = f13_arg1.menu or f1_local1 --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f13_arg0, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	BackingAxis = FreeTeam --[[ @ 0]]
	HeaderFreeTeam = FreeTeam.subscribeToModel --[[ @ 0]]
	AxisTeam = Engine[@"GetModelForController"]( f1_arg0 ) --[[ @ 0]]
	HeaderFreeTeam( BackingAxis, AxisTeam.LastInput, function ( f14_arg0, f14_arg1 )
		CoD.Menu.UpdateButtonShownState( f14_arg1, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	BackingAxis = FreeTeam --[[ @ 0]]
	HeaderFreeTeam = FreeTeam.subscribeToModel --[[ @ 0]]
	AxisTeam = DataSources.LobbyRoot.getModel( f1_arg0 ) --[[ @ 0]]
	HeaderFreeTeam( BackingAxis, AxisTeam.selectedXuidTeam, function ( f15_arg0, f15_arg1 )
		CoD.Menu.UpdateButtonShownState( f15_arg1, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	FreeTeam:registerEventHandler( "gain_focus", function ( element, event )
		local f16_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f16_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f16_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f16_local0
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( FreeTeam, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		if IsLobbyHostOfCurrentMenu() and CoD.DirectorUtility.CanSelectClient( controller, element ) and IsGamepad( controller ) then
			CoD.DirectorUtility.SelectClient( controller, element ) --[[ @ 0]]
			PlaySoundSetSound( self, "list_action" ) --[[ @ 0]]
			return true
		elseif IsLobbyHostOfCurrentMenu() and CoD.DirectorUtility.CanSwapWithSelectedClient( controller, element ) and not CoD.DirectorUtility.IsClientEmpty( controller, element ) and IsGamepad( controller ) then
			CoD.DirectorUtility.SwapWithSelectedClient( controller, element ) --[[ @ 0]]
			PlaySoundSetSound( self, "list_action" ) --[[ @ 0]]
			return true
		elseif IsLobbyHostOfCurrentMenu() and CoD.DirectorUtility.CanSwapWithSelectedClient( controller, element ) and IsGamepad( controller ) then
			CoD.DirectorUtility.SwapWithSelectedClient( controller, element ) --[[ @ 0]]
			PlaySoundSetSound( self, "list_action" ) --[[ @ 0]]
			return true
		elseif IsLobbyHostOfCurrentMenu() and CoD.DirectorUtility.CanSelectClient( controller, element ) and IsMouseOrKeyboard( controller ) then
			CoD.DirectorUtility.SelectClient( controller, element ) --[[ @ 0]]
			PlaySoundSetSound( self, "list_action" ) --[[ @ 0]]
			return true
		elseif IsLobbyHostOfCurrentMenu() and CoD.DirectorUtility.CanSwapWithSelectedClient( controller, element ) and not CoD.DirectorUtility.IsClientEmpty( controller, element ) and IsMouseOrKeyboard( controller ) then
			CoD.DirectorUtility.SwapWithSelectedClient( controller, element ) --[[ @ 0]]
			PlaySoundSetSound( self, "list_action" ) --[[ @ 0]]
			return true
		elseif IsLobbyHostOfCurrentMenu() and CoD.DirectorUtility.CanSwapWithSelectedClient( controller, element ) and IsMouseOrKeyboard( controller ) then
			CoD.DirectorUtility.SwapWithSelectedClient( controller, element ) --[[ @ 0]]
			PlaySoundSetSound( self, "list_action" ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsLobbyHostOfCurrentMenu() and CoD.DirectorUtility.CanSelectClient( controller, element ) and IsGamepad( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_22D7AF821FE36BC6", Enum[@"hash_3BEBDBAEEB3ECCCA"][@"hash_4B6372335C630AD3"], "ui_confirm" ) --[[ @ 0]]
			return true
		elseif IsLobbyHostOfCurrentMenu() and CoD.DirectorUtility.CanSwapWithSelectedClient( controller, element ) and not CoD.DirectorUtility.IsClientEmpty( controller, element ) and IsGamepad( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_B4A0F5945BB8108", Enum[@"hash_3BEBDBAEEB3ECCCA"][@"hash_4B6372335C630AD3"], "ui_confirm" ) --[[ @ 0]]
			return true
		elseif IsLobbyHostOfCurrentMenu() and CoD.DirectorUtility.CanSwapWithSelectedClient( controller, element ) and IsGamepad( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_29038794D2FBCFAA", Enum[@"hash_3BEBDBAEEB3ECCCA"][@"hash_4B6372335C630AD3"], "ui_confirm" ) --[[ @ 0]]
			return true
		elseif IsLobbyHostOfCurrentMenu() and CoD.DirectorUtility.CanSelectClient( controller, element ) and IsMouseOrKeyboard( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_0", nil, "ui_confirm" ) --[[ @ 0]]
			return false
		elseif IsLobbyHostOfCurrentMenu() and CoD.DirectorUtility.CanSwapWithSelectedClient( controller, element ) and not CoD.DirectorUtility.IsClientEmpty( controller, element ) and IsMouseOrKeyboard( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_0", nil, "ui_confirm" ) --[[ @ 0]]
			return false
		elseif IsLobbyHostOfCurrentMenu() and CoD.DirectorUtility.CanSwapWithSelectedClient( controller, element ) and IsMouseOrKeyboard( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_0", nil, "ui_confirm" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	FreeTeam:subscribeToGlobalModel( f1_arg0, "GlobalModel", "MapVote.mapVoteGameModeNext", function ( model )
		CoD.GridAndListUtility.UpdateDataSource( FreeTeam, true, false, true ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( FreeTeam ) --[[ @ 0]]
	self.FreeTeam = FreeTeam --[[ @ 0]]
	
	HeaderFreeTeam = CoD.DirectorFixedWidthHeading.new( f1_local1, f1_arg0, 0.5, 0.5, -861, 0, 0, 0, 200, 230 ) --[[ @ 0]]
	HeaderFreeTeam.Label:setRGB( ColorSet.CodCasterFactionAllies.r, ColorSet.CodCasterFactionAllies.g, ColorSet.CodCasterFactionAllies.b ) --[[ @ 0]]
	HeaderFreeTeam.Label:setAlpha( 0 ) --[[ @ 0]]
	HeaderFreeTeam.Label:setText( LocalizeToUpperString( @"hash_3C815AF97EE8C135" ) ) --[[ @ 0]]
	self:addElement( HeaderFreeTeam ) --[[ @ 0]]
	self.HeaderFreeTeam = HeaderFreeTeam --[[ @ 0]]
	
	BackingAxis = LUI.UIImage.new( 0.5, 0.5, -410, 32, 0, 0, 227, 872 ) --[[ @ 0]]
	BackingAxis:setRGB( 0, 0, 0 ) --[[ @ 0]]
	BackingAxis:setAlpha( 0.15 ) --[[ @ 0]]
	self:addElement( BackingAxis ) --[[ @ 0]]
	self.BackingAxis = BackingAxis --[[ @ 0]]
	
	AxisTeam = LUI.UIList.new( f1_local1, f1_arg0, 18, 0, nil, false, false, false, false ) --[[ @ 0]]
	AxisTeam:setLeftRight( 0.5, 0.5, -389, 11 ) --[[ @ 0]]
	AxisTeam:setTopBottom( 0, 0, 250, 850 ) --[[ @ 0]]
	AxisTeam:setWidgetType( CoD.DirectorTeamMember ) --[[ @ 0]]
	AxisTeam:setVerticalCount( 6 ) --[[ @ 0]]
	AxisTeam:setSpacing( 18 ) --[[ @ 0]]
	AxisTeam:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	AxisTeam:setFilter( function ( f20_arg0 )
		return f20_arg0.team:get() == Enum[@"team_t"][@"hash_33F83D7CE4BD7B68"]
	end ) --[[ @ 0]]
	AxisTeam:setDataSource( "DirectorPartyListCustom" ) --[[ @ 0]]
	AxisTeam:appendEventHandler( "on_session_start", function ( f21_arg0, f21_arg1 )
		f21_arg1.menu = f21_arg1.menu or f1_local1 --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f21_arg0, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	AxisTeam:appendEventHandler( "on_session_end", function ( f22_arg0, f22_arg1 )
		f22_arg1.menu = f22_arg1.menu or f1_local1 --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f22_arg0, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local BackingAllies = AxisTeam --[[ @ 0]]
	local HeaderAxisTeam = AxisTeam.subscribeToModel --[[ @ 0]]
	local AlliesTeam = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	HeaderAxisTeam( BackingAllies, AlliesTeam["lobbyRoot.lobbyNav"], function ( f23_arg0, f23_arg1 )
		CoD.Menu.UpdateButtonShownState( f23_arg1, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	BackingAllies = AxisTeam --[[ @ 0]]
	HeaderAxisTeam = AxisTeam.subscribeToModel --[[ @ 0]]
	AlliesTeam = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	HeaderAxisTeam( BackingAllies, AlliesTeam["lobbyRoot.gameClient.update"], function ( f24_arg0, f24_arg1 )
		CoD.Menu.UpdateButtonShownState( f24_arg1, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	BackingAllies = AxisTeam --[[ @ 0]]
	HeaderAxisTeam = AxisTeam.subscribeToModel --[[ @ 0]]
	AlliesTeam = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	HeaderAxisTeam( BackingAllies, AlliesTeam["lobbyRoot.privateClient.update"], function ( f25_arg0, f25_arg1 )
		CoD.Menu.UpdateButtonShownState( f25_arg1, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AxisTeam:linkToElementModel( AxisTeam, "xuid", true, function ( model, f26_arg1 )
		CoD.Menu.UpdateButtonShownState( f26_arg1, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	AxisTeam:linkToElementModel( AxisTeam, "team", true, function ( model, f27_arg1 )
		CoD.Menu.UpdateButtonShownState( f27_arg1, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	BackingAllies = AxisTeam --[[ @ 0]]
	HeaderAxisTeam = AxisTeam.subscribeToModel --[[ @ 0]]
	AlliesTeam = DataSources.LobbyRoot.getModel( f1_arg0 ) --[[ @ 0]]
	HeaderAxisTeam( BackingAllies, AlliesTeam.selectedXuid, function ( f28_arg0, f28_arg1 )
		CoD.Menu.UpdateButtonShownState( f28_arg1, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AxisTeam:appendEventHandler( "input_source_changed", function ( f29_arg0, f29_arg1 )
		f29_arg1.menu = f29_arg1.menu or f1_local1 --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f29_arg0, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	BackingAllies = AxisTeam --[[ @ 0]]
	HeaderAxisTeam = AxisTeam.subscribeToModel --[[ @ 0]]
	AlliesTeam = Engine[@"GetModelForController"]( f1_arg0 ) --[[ @ 0]]
	HeaderAxisTeam( BackingAllies, AlliesTeam.LastInput, function ( f30_arg0, f30_arg1 )
		CoD.Menu.UpdateButtonShownState( f30_arg1, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	BackingAllies = AxisTeam --[[ @ 0]]
	HeaderAxisTeam = AxisTeam.subscribeToModel --[[ @ 0]]
	AlliesTeam = DataSources.LobbyRoot.getModel( f1_arg0 ) --[[ @ 0]]
	HeaderAxisTeam( BackingAllies, AlliesTeam.selectedXuidTeam, function ( f31_arg0, f31_arg1 )
		CoD.Menu.UpdateButtonShownState( f31_arg1, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AxisTeam:registerEventHandler( "gain_focus", function ( element, event )
		local f32_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f32_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f32_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f32_local0
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( AxisTeam, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		if IsLobbyHostOfCurrentMenu() and CoD.DirectorUtility.CanSelectClient( controller, element ) and IsGamepad( controller ) then
			CoD.DirectorUtility.SelectClient( controller, element ) --[[ @ 0]]
			PlaySoundSetSound( self, "list_action" ) --[[ @ 0]]
			return true
		elseif IsLobbyHostOfCurrentMenu() and CoD.DirectorUtility.CanSwapWithSelectedClient( controller, element ) and not CoD.DirectorUtility.IsClientEmpty( controller, element ) and IsGamepad( controller ) then
			CoD.DirectorUtility.SwapWithSelectedClient( controller, element ) --[[ @ 0]]
			PlaySoundSetSound( self, "list_action" ) --[[ @ 0]]
			return true
		elseif IsLobbyHostOfCurrentMenu() and CoD.DirectorUtility.CanSwapWithSelectedClient( controller, element ) and IsGamepad( controller ) then
			CoD.DirectorUtility.SwapWithSelectedClient( controller, element ) --[[ @ 0]]
			PlaySoundSetSound( self, "list_action" ) --[[ @ 0]]
			return true
		elseif IsLobbyHostOfCurrentMenu() and CoD.DirectorUtility.CanSelectClient( controller, element ) and IsMouseOrKeyboard( controller ) then
			CoD.DirectorUtility.SelectClient( controller, element ) --[[ @ 0]]
			PlaySoundSetSound( self, "list_action" ) --[[ @ 0]]
			return true
		elseif IsLobbyHostOfCurrentMenu() and CoD.DirectorUtility.CanSwapWithSelectedClient( controller, element ) and not CoD.DirectorUtility.IsClientEmpty( controller, element ) and IsMouseOrKeyboard( controller ) then
			CoD.DirectorUtility.SwapWithSelectedClient( controller, element ) --[[ @ 0]]
			PlaySoundSetSound( self, "list_action" ) --[[ @ 0]]
			return true
		elseif IsLobbyHostOfCurrentMenu() and CoD.DirectorUtility.CanSwapWithSelectedClient( controller, element ) and IsMouseOrKeyboard( controller ) then
			CoD.DirectorUtility.SwapWithSelectedClient( controller, element ) --[[ @ 0]]
			PlaySoundSetSound( self, "list_action" ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsLobbyHostOfCurrentMenu() and CoD.DirectorUtility.CanSelectClient( controller, element ) and IsGamepad( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_22D7AF821FE36BC6", Enum[@"hash_3BEBDBAEEB3ECCCA"][@"hash_4B6372335C630AD3"], "ui_confirm" ) --[[ @ 0]]
			return true
		elseif IsLobbyHostOfCurrentMenu() and CoD.DirectorUtility.CanSwapWithSelectedClient( controller, element ) and not CoD.DirectorUtility.IsClientEmpty( controller, element ) and IsGamepad( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_B4A0F5945BB8108", Enum[@"hash_3BEBDBAEEB3ECCCA"][@"hash_4B6372335C630AD3"], "ui_confirm" ) --[[ @ 0]]
			return true
		elseif IsLobbyHostOfCurrentMenu() and CoD.DirectorUtility.CanSwapWithSelectedClient( controller, element ) and IsGamepad( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_29038794D2FBCFAA", Enum[@"hash_3BEBDBAEEB3ECCCA"][@"hash_4B6372335C630AD3"], "ui_confirm" ) --[[ @ 0]]
			return true
		elseif IsLobbyHostOfCurrentMenu() and CoD.DirectorUtility.CanSelectClient( controller, element ) and IsMouseOrKeyboard( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_0", nil, "ui_confirm" ) --[[ @ 0]]
			return false
		elseif IsLobbyHostOfCurrentMenu() and CoD.DirectorUtility.CanSwapWithSelectedClient( controller, element ) and not CoD.DirectorUtility.IsClientEmpty( controller, element ) and IsMouseOrKeyboard( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_0", nil, "ui_confirm" ) --[[ @ 0]]
			return false
		elseif IsLobbyHostOfCurrentMenu() and CoD.DirectorUtility.CanSwapWithSelectedClient( controller, element ) and IsMouseOrKeyboard( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_0", nil, "ui_confirm" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	AxisTeam:subscribeToGlobalModel( f1_arg0, "GlobalModel", "MapVote.mapVoteGameModeNext", function ( model )
		CoD.GridAndListUtility.UpdateDataSource( AxisTeam, true, false, true ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( AxisTeam ) --[[ @ 0]]
	self.AxisTeam = AxisTeam --[[ @ 0]]
	
	HeaderAxisTeam = CoD.DirectorFixedWidthHeading.new( f1_local1, f1_arg0, 0.5, 0.5, -409, 33, 0, 0, 200, 230 ) --[[ @ 0]]
	HeaderAxisTeam.Backing:setRGB( ColorSet.CodCasterFactionAxis.r, ColorSet.CodCasterFactionAxis.g, ColorSet.CodCasterFactionAxis.b ) --[[ @ 0]]
	HeaderAxisTeam.Label:setRGB( ColorSet.CodCasterFactionAxis.r, ColorSet.CodCasterFactionAxis.g, ColorSet.CodCasterFactionAxis.b ) --[[ @ 0]]
	HeaderAxisTeam.Label:setText( LocalizeToUpperString( @"hash_412BD5927860415A" ) ) --[[ @ 0]]
	self:addElement( HeaderAxisTeam ) --[[ @ 0]]
	self.HeaderAxisTeam = HeaderAxisTeam --[[ @ 0]]
	
	BackingAllies = LUI.UIImage.new( 0.5, 0.5, -861, -419, 0, 0, 227, 872 ) --[[ @ 0]]
	BackingAllies:setRGB( 0, 0, 0 ) --[[ @ 0]]
	BackingAllies:setAlpha( 0.15 ) --[[ @ 0]]
	self:addElement( BackingAllies ) --[[ @ 0]]
	self.BackingAllies = BackingAllies --[[ @ 0]]
	
	AlliesTeam = LUI.UIList.new( f1_local1, f1_arg0, 18, 0, nil, false, false, false, false ) --[[ @ 0]]
	AlliesTeam:setLeftRight( 0.5, 0.5, -840, -440 ) --[[ @ 0]]
	AlliesTeam:setTopBottom( 0, 0, 250, 850 ) --[[ @ 0]]
	AlliesTeam:setWidgetType( CoD.DirectorTeamMember ) --[[ @ 0]]
	AlliesTeam:setVerticalCount( 6 ) --[[ @ 0]]
	AlliesTeam:setSpacing( 18 ) --[[ @ 0]]
	AlliesTeam:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	AlliesTeam:setFilter( function ( f36_arg0 )
		return f36_arg0.team:get() == Enum[@"team_t"][@"hash_42A34B055ADD98AB"]
	end ) --[[ @ 0]]
	AlliesTeam:setDataSource( "DirectorPartyListCustom" ) --[[ @ 0]]
	AlliesTeam:appendEventHandler( "on_session_start", function ( f37_arg0, f37_arg1 )
		f37_arg1.menu = f37_arg1.menu or f1_local1 --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f37_arg0, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	AlliesTeam:appendEventHandler( "on_session_end", function ( f38_arg0, f38_arg1 )
		f38_arg1.menu = f38_arg1.menu or f1_local1 --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f38_arg0, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local FooterContainerFrontendRight = AlliesTeam --[[ @ 0]]
	local HeaderAlliesTeam = AlliesTeam.subscribeToModel --[[ @ 0]]
	local CommonHeader = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	HeaderAlliesTeam( FooterContainerFrontendRight, CommonHeader["lobbyRoot.lobbyNav"], function ( f39_arg0, f39_arg1 )
		CoD.Menu.UpdateButtonShownState( f39_arg1, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	FooterContainerFrontendRight = AlliesTeam --[[ @ 0]]
	HeaderAlliesTeam = AlliesTeam.subscribeToModel --[[ @ 0]]
	CommonHeader = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	HeaderAlliesTeam( FooterContainerFrontendRight, CommonHeader["lobbyRoot.gameClient.update"], function ( f40_arg0, f40_arg1 )
		CoD.Menu.UpdateButtonShownState( f40_arg1, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	FooterContainerFrontendRight = AlliesTeam --[[ @ 0]]
	HeaderAlliesTeam = AlliesTeam.subscribeToModel --[[ @ 0]]
	CommonHeader = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	HeaderAlliesTeam( FooterContainerFrontendRight, CommonHeader["lobbyRoot.privateClient.update"], function ( f41_arg0, f41_arg1 )
		CoD.Menu.UpdateButtonShownState( f41_arg1, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AlliesTeam:linkToElementModel( AlliesTeam, "xuid", true, function ( model, f42_arg1 )
		CoD.Menu.UpdateButtonShownState( f42_arg1, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	AlliesTeam:linkToElementModel( AlliesTeam, "team", true, function ( model, f43_arg1 )
		CoD.Menu.UpdateButtonShownState( f43_arg1, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	FooterContainerFrontendRight = AlliesTeam --[[ @ 0]]
	HeaderAlliesTeam = AlliesTeam.subscribeToModel --[[ @ 0]]
	CommonHeader = DataSources.LobbyRoot.getModel( f1_arg0 ) --[[ @ 0]]
	HeaderAlliesTeam( FooterContainerFrontendRight, CommonHeader.selectedXuid, function ( f44_arg0, f44_arg1 )
		CoD.Menu.UpdateButtonShownState( f44_arg1, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AlliesTeam:appendEventHandler( "input_source_changed", function ( f45_arg0, f45_arg1 )
		f45_arg1.menu = f45_arg1.menu or f1_local1 --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f45_arg0, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	FooterContainerFrontendRight = AlliesTeam --[[ @ 0]]
	HeaderAlliesTeam = AlliesTeam.subscribeToModel --[[ @ 0]]
	CommonHeader = Engine[@"GetModelForController"]( f1_arg0 ) --[[ @ 0]]
	HeaderAlliesTeam( FooterContainerFrontendRight, CommonHeader.LastInput, function ( f46_arg0, f46_arg1 )
		CoD.Menu.UpdateButtonShownState( f46_arg1, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	FooterContainerFrontendRight = AlliesTeam --[[ @ 0]]
	HeaderAlliesTeam = AlliesTeam.subscribeToModel --[[ @ 0]]
	CommonHeader = DataSources.LobbyRoot.getModel( f1_arg0 ) --[[ @ 0]]
	HeaderAlliesTeam( FooterContainerFrontendRight, CommonHeader.selectedXuidTeam, function ( f47_arg0, f47_arg1 )
		CoD.Menu.UpdateButtonShownState( f47_arg1, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AlliesTeam:registerEventHandler( "gain_focus", function ( element, event )
		local f48_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f48_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f48_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f48_local0
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( AlliesTeam, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		if IsLobbyHostOfCurrentMenu() and CoD.DirectorUtility.CanSelectClient( controller, element ) and IsGamepad( controller ) then
			CoD.DirectorUtility.SelectClient( controller, element ) --[[ @ 0]]
			PlaySoundSetSound( self, "list_action" ) --[[ @ 0]]
			return true
		elseif IsLobbyHostOfCurrentMenu() and CoD.DirectorUtility.CanSwapWithSelectedClient( controller, element ) and not CoD.DirectorUtility.IsClientEmpty( controller, element ) and IsGamepad( controller ) then
			CoD.DirectorUtility.SwapWithSelectedClient( controller, element ) --[[ @ 0]]
			PlaySoundSetSound( self, "list_action" ) --[[ @ 0]]
			return true
		elseif IsLobbyHostOfCurrentMenu() and CoD.DirectorUtility.CanSwapWithSelectedClient( controller, element ) and IsGamepad( controller ) then
			CoD.DirectorUtility.SwapWithSelectedClient( controller, element ) --[[ @ 0]]
			PlaySoundSetSound( self, "list_action" ) --[[ @ 0]]
			return true
		elseif IsLobbyHostOfCurrentMenu() and CoD.DirectorUtility.CanSelectClient( controller, element ) and IsMouseOrKeyboard( controller ) then
			CoD.DirectorUtility.SelectClient( controller, element ) --[[ @ 0]]
			PlaySoundSetSound( self, "list_action" ) --[[ @ 0]]
			return true
		elseif IsLobbyHostOfCurrentMenu() and CoD.DirectorUtility.CanSwapWithSelectedClient( controller, element ) and not CoD.DirectorUtility.IsClientEmpty( controller, element ) and IsMouseOrKeyboard( controller ) then
			CoD.DirectorUtility.SwapWithSelectedClient( controller, element ) --[[ @ 0]]
			PlaySoundSetSound( self, "list_action" ) --[[ @ 0]]
			return true
		elseif IsLobbyHostOfCurrentMenu() and CoD.DirectorUtility.CanSwapWithSelectedClient( controller, element ) and IsMouseOrKeyboard( controller ) then
			CoD.DirectorUtility.SwapWithSelectedClient( controller, element ) --[[ @ 0]]
			PlaySoundSetSound( self, "list_action" ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsLobbyHostOfCurrentMenu() and CoD.DirectorUtility.CanSelectClient( controller, element ) and IsGamepad( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_22D7AF821FE36BC6", Enum[@"hash_3BEBDBAEEB3ECCCA"][@"hash_4B6372335C630AD3"], "ui_confirm" ) --[[ @ 0]]
			return true
		elseif IsLobbyHostOfCurrentMenu() and CoD.DirectorUtility.CanSwapWithSelectedClient( controller, element ) and not CoD.DirectorUtility.IsClientEmpty( controller, element ) and IsGamepad( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_B4A0F5945BB8108", Enum[@"hash_3BEBDBAEEB3ECCCA"][@"hash_4B6372335C630AD3"], "ui_confirm" ) --[[ @ 0]]
			return true
		elseif IsLobbyHostOfCurrentMenu() and CoD.DirectorUtility.CanSwapWithSelectedClient( controller, element ) and IsGamepad( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_29038794D2FBCFAA", Enum[@"hash_3BEBDBAEEB3ECCCA"][@"hash_4B6372335C630AD3"], "ui_confirm" ) --[[ @ 0]]
			return true
		elseif IsLobbyHostOfCurrentMenu() and CoD.DirectorUtility.CanSelectClient( controller, element ) and IsMouseOrKeyboard( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_0", nil, "ui_confirm" ) --[[ @ 0]]
			return false
		elseif IsLobbyHostOfCurrentMenu() and CoD.DirectorUtility.CanSwapWithSelectedClient( controller, element ) and not CoD.DirectorUtility.IsClientEmpty( controller, element ) and IsMouseOrKeyboard( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_0", nil, "ui_confirm" ) --[[ @ 0]]
			return false
		elseif IsLobbyHostOfCurrentMenu() and CoD.DirectorUtility.CanSwapWithSelectedClient( controller, element ) and IsMouseOrKeyboard( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_0", nil, "ui_confirm" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	AlliesTeam:subscribeToGlobalModel( f1_arg0, "GlobalModel", "MapVote.mapVoteGameModeNext", function ( model )
		CoD.GridAndListUtility.UpdateDataSource( AlliesTeam, true, false, true ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( AlliesTeam ) --[[ @ 0]]
	self.AlliesTeam = AlliesTeam --[[ @ 0]]
	
	HeaderAlliesTeam = CoD.DirectorFixedWidthHeading.new( f1_local1, f1_arg0, 0.5, 0.5, -861, -419, 0, 0, 200, 230 ) --[[ @ 0]]
	HeaderAlliesTeam.Backing:setRGB( ColorSet.CodCasterFactionAllies.r, ColorSet.CodCasterFactionAllies.g, ColorSet.CodCasterFactionAllies.b ) --[[ @ 0]]
	HeaderAlliesTeam.Label:setRGB( ColorSet.CodCasterFactionAllies.r, ColorSet.CodCasterFactionAllies.g, ColorSet.CodCasterFactionAllies.b ) --[[ @ 0]]
	HeaderAlliesTeam.Label:setText( LocalizeToUpperString( @"hash_3C815AF97EE8C135" ) ) --[[ @ 0]]
	self:addElement( HeaderAlliesTeam ) --[[ @ 0]]
	self.HeaderAlliesTeam = HeaderAlliesTeam --[[ @ 0]]
	
	FooterContainerFrontendRight = CoD.FooterContainer_Frontend_Right.new( f1_local1, f1_arg0, 0, 1, 0, 0, 1, 1, -48, 0 ) --[[ @ 0]]
	FooterContainerFrontendRight:registerEventHandler( "menu_loaded", function ( element, event )
		local f52_local0 = nil --[[ @ 0]]
		if element.menuLoaded then
			f52_local0 = element:menuLoaded( event ) --[[ @ 0]]
		elseif element.super.menuLoaded then
			f52_local0 = element.super:menuLoaded( event ) --[[ @ 0]]
		end
		if not IsPC() then
			SizeToSafeArea( element, f1_arg0 ) --[[ @ 0]]
		end
		if not f52_local0 then
			f52_local0 = element:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f52_local0
	end ) --[[ @ 0]]
	self:addElement( FooterContainerFrontendRight ) --[[ @ 0]]
	self.FooterContainerFrontendRight = FooterContainerFrontendRight --[[ @ 0]]
	
	CommonHeader = CoD.CommonHeader.new( f1_local1, f1_arg0, 0, 0, 0, 1920, 0, 0, 0, 67 ) --[[ @ 0]]
	CommonHeader:subscribeToGlobalModel( f1_arg0, "LobbyRoot", "lobbyMainMode", function ( model )
		local f53_local0 = model:get() --[[ @ 0]]
		if f53_local0 ~= nil then
			CommonHeader.subtitle.StageTitle:setText( LocalizeToUpperString( CoD.DirectorUtility.ConvertLobbyMainModeToModeString( f53_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	CommonHeader:subscribeToGlobalModel( f1_arg0, "LobbyRoot", "lobbyTitle", function ( model )
		local f54_local0 = model:get() --[[ @ 0]]
		if f54_local0 ~= nil then
			CommonHeader.subtitle.subtitle:setText( LocalizeToUpperString( f54_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	CommonHeader:registerEventHandler( "menu_loaded", function ( element, event )
		local f55_local0 = nil --[[ @ 0]]
		if element.menuLoaded then
			f55_local0 = element:menuLoaded( event ) --[[ @ 0]]
		elseif element.super.menuLoaded then
			f55_local0 = element.super:menuLoaded( event ) --[[ @ 0]]
		end
		SizeToSafeArea( element, f1_arg0 ) --[[ @ 0]]
		if not f55_local0 then
			f55_local0 = element:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f55_local0
	end ) --[[ @ 0]]
	self:addElement( CommonHeader ) --[[ @ 0]]
	self.CommonHeader = CommonHeader --[[ @ 0]]
	
	local BackingGrayMediumLeft = CoD.header_container_frontend.new( f1_local1, f1_arg0, 0, 0, 0, 1920, 0, 0, 0, 42 ) --[[ @ 0]]
	BackingGrayMediumLeft:registerEventHandler( "menu_loaded", function ( element, event )
		local f56_local0 = nil --[[ @ 0]]
		if element.menuLoaded then
			f56_local0 = element:menuLoaded( event ) --[[ @ 0]]
		elseif element.super.menuLoaded then
			f56_local0 = element.super:menuLoaded( event ) --[[ @ 0]]
		end
		SizeToSafeArea( element, f1_arg0 ) --[[ @ 0]]
		if not f56_local0 then
			f56_local0 = element:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f56_local0
	end ) --[[ @ 0]]
	self:addElement( BackingGrayMediumLeft ) --[[ @ 0]]
	self.BackingGrayMediumLeft = BackingGrayMediumLeft --[[ @ 0]]
	
	local BackingCODCaster = LUI.UIImage.new( 0.5, 0.5, 44, 486, 0, 0, 227, 872 ) --[[ @ 0]]
	BackingCODCaster:setRGB( 0, 0, 0 ) --[[ @ 0]]
	BackingCODCaster:setAlpha( 0.15 ) --[[ @ 0]]
	self:addElement( BackingCODCaster ) --[[ @ 0]]
	self.BackingCODCaster = BackingCODCaster --[[ @ 0]]
	
	local DirectorCoDCasterList = CoD.DirectorCoDCasterList.new( f1_local1, f1_arg0, 0.5, 0.5, 65, 465, 0, 0, 250, 820 ) --[[ @ 0]]
	DirectorCoDCasterList:mergeStateConditions( {
		{
			stateName = "Disabled",
			condition = function ( menu, element, event )
				return not CoD.DirectorUtility.ShowDirectorCustomMatchCoDCasterList( f1_arg0 )
			end
		},
		{
			stateName = "Invisible",
			condition = function ( menu, element, event )
				return not CoD.CodCasterUtility.IsCodCasterEnabled()
			end
		}
	} ) --[[ @ 0]]
	local f1_local23 = DirectorCoDCasterList --[[ @ 0]]
	local HeaderCODCaster = DirectorCoDCasterList.subscribeToModel --[[ @ 0]]
	local f1_local25 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	HeaderCODCaster( f1_local23, f1_local25["lobbyRoot.lobbyNav"], function ( f59_arg0 )
		f1_local1:updateElementState( DirectorCoDCasterList, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f59_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local23 = DirectorCoDCasterList --[[ @ 0]]
	HeaderCODCaster = DirectorCoDCasterList.subscribeToModel --[[ @ 0]]
	f1_local25 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	HeaderCODCaster( f1_local23, f1_local25["lobbyRoot.gameClient.update"], function ( f60_arg0 )
		f1_local1:updateElementState( DirectorCoDCasterList, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f60_arg0:get(),
			modelName = "lobbyRoot.gameClient.update"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local23 = DirectorCoDCasterList --[[ @ 0]]
	HeaderCODCaster = DirectorCoDCasterList.subscribeToModel --[[ @ 0]]
	f1_local25 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	HeaderCODCaster( f1_local23, f1_local25["lobbyRoot.privateClient.update"], function ( f61_arg0 )
		f1_local1:updateElementState( DirectorCoDCasterList, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f61_arg0:get(),
			modelName = "lobbyRoot.privateClient.update"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:addElement( DirectorCoDCasterList ) --[[ @ 0]]
	self.DirectorCoDCasterList = DirectorCoDCasterList --[[ @ 0]]
	
	HeaderCODCaster = CoD.DirectorFixedWidthHeading.new( f1_local1, f1_arg0, 0.5, 0.5, 44, 486, 0, 0, 200, 230 ) --[[ @ 0]]
	self:addElement( HeaderCODCaster ) --[[ @ 0]]
	self.HeaderCODCaster = HeaderCODCaster --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "NonTeamBasedGameMode",
			condition = function ( menu, element, event )
				local f62_local0 --[[ @ 0]]
				if not IsZombies() then
					f62_local0 = not IsTeamBasedGameMode( f1_arg0 ) --[[ @ 0]]
				else
					f62_local0 = false --[[ @ 0]]
				end
				return f62_local0
			end
		},
		{
			stateName = "ZMCustomGames",
			condition = function ( menu, element, event )
				return IsZombies()
			end
		}
	} ) --[[ @ 0]]
	f1_local25 = self --[[ @ 0]]
	f1_local23 = self.subscribeToModel --[[ @ 0]]
	local f1_local26 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local23( f1_local25, f1_local26["lobbyRoot.lobbyNav"], function ( f64_arg0 )
		f1_local1:updateElementState( self, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f64_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local25 = self --[[ @ 0]]
	f1_local23 = self.subscribeToModel --[[ @ 0]]
	f1_local26 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local23( f1_local25, f1_local26["MapVote.mapVoteGameModeNext"], function ( f65_arg0 )
		f1_local1:updateElementState( self, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f65_arg0:get(),
			modelName = "MapVote.mapVoteGameModeNext"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:linkToElementModel( self, "xuid", true, function ( model, f66_arg1 )
		CoD.Menu.UpdateButtonShownState( f66_arg1, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"], nil, function ( element, menu, controller, model )
		if CoD.DirectorUtility.HasSelectedClient( controller ) then
			CoD.DirectorUtility.ClearSelectedClient( controller ) --[[ @ 0]]
			return true
		else
			GoBack( self, controller ) --[[ @ 0]]
			return true
		end
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"], @"hash_370A9FDC87CD3D48", nil, nil ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( self, "setState", function ( element, controller, f69_arg2, f69_arg3, f69_arg4 )
		if IsMenuInState( f1_local1, "ZMCustomGames" ) then
			GoBack( self, controller ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:subscribeToGlobalModel( f1_arg0, "GlobalModel", "lobbyRoot.selectedXuid", function ( model )
		local f70_local0 = self --[[ @ 0]]
		if IsPC() and CoD.ModelUtility.IsGlobalModelValueEqualTo( "lobbyRoot.selectedXuid", LuaDefine.INVALID_XUID_X64 ) then
			EnableKeyboardNavigationByElement( self.DirectorGameSettingList ) --[[ @ 0]]
			EnableKeyboardNavigationByElement( self.DirectorLobbySettingList ) --[[ @ 0]]
			HideWidget( self.SelectionModeOverlay ) --[[ @ 0]]
			HideWidget( self.SelectionModeFocusBlocker ) --[[ @ 0]]
		elseif IsPC() then
			DisableKeyboardNavigationByElement( self.DirectorGameSettingList ) --[[ @ 0]]
			DisableKeyboardNavigationByElement( self.DirectorLobbySettingList ) --[[ @ 0]]
			SetAlpha( self.SelectionModeOverlay, 0.6 ) --[[ @ 0]]
			ShowWidget( self.SelectionModeFocusBlocker ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	DirectorLobbySettingList.id = "DirectorLobbySettingList" --[[ @ 0]]
	DirectorGameSettingList.id = "DirectorGameSettingList" --[[ @ 0]]
	if CoD.isPC then
		SelectionModeFocusBlocker.id = "SelectionModeFocusBlocker" --[[ @ 0]]
	end
	FreeTeam.id = "FreeTeam" --[[ @ 0]]
	AxisTeam.id = "AxisTeam" --[[ @ 0]]
	AlliesTeam.id = "AlliesTeam" --[[ @ 0]]
	FooterContainerFrontendRight:setModel( self.buttonModel, f1_arg0 ) --[[ @ 0]]
	if CoD.isPC then
		FooterContainerFrontendRight.id = "FooterContainerFrontendRight" --[[ @ 0]]
	end
	DirectorCoDCasterList.id = "DirectorCoDCasterList" --[[ @ 0]]
	self:processEvent( {
		name = "menu_loaded",
		controller = f1_arg0
	} ) --[[ @ 0]]
	self.__defaultFocus = DirectorGameSettingList --[[ @ 0]]
	if CoD.isPC and (IsKeyboard( f1_arg0 ) or self.ignoreCursor) then
		self:restoreState( f1_arg0 ) --[[ @ 0]]
	end
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg0 ) --[[ @ 0]]
	end
	f1_local23 = self --[[ @ 0]]
	f1_local23 = SelectionModeFocusBlocker --[[ @ 0]]
	if IsPC() then
		SetElementProperty( f1_local23, "_yieldFocus", nil ) --[[ @ 0]]
		DisableKeyboardNavigationByElement( f1_local23 ) --[[ @ 0]]
		SetIgnorePlaySoundSetSound( f1_local23, true ) --[[ @ 0]]
	end
	SetElementProperty( FreeTeam, "_checkChildFocusForSelectability", true ) --[[ @ 0]]
	SetElementProperty( AxisTeam, "_checkChildFocusForSelectability", true ) --[[ @ 0]]
	SetElementProperty( AlliesTeam, "_checkChildFocusForSelectability", true ) --[[ @ 0]]
	return self
end
 --[[ @ 0]]
CoD.DirectorCustomGameSetUp.__resetProperties = function ( f71_arg0 )
	f71_arg0.HeaderFreeTeam:completeAnimation() --[[ @ 0]]
	f71_arg0.FreeTeam:completeAnimation() --[[ @ 0]]
	f71_arg0.BackingFree:completeAnimation() --[[ @ 0]]
	f71_arg0.HeaderAlliesTeam:completeAnimation() --[[ @ 0]]
	f71_arg0.HeaderAxisTeam:completeAnimation() --[[ @ 0]]
	f71_arg0.HeaderCODCaster:completeAnimation() --[[ @ 0]]
	f71_arg0.DirectorCoDCasterList:completeAnimation() --[[ @ 0]]
	f71_arg0.BackingCODCaster:completeAnimation() --[[ @ 0]]
	f71_arg0.AxisTeam:completeAnimation() --[[ @ 0]]
	f71_arg0.BackingAxis:completeAnimation() --[[ @ 0]]
	f71_arg0.AlliesTeam:completeAnimation() --[[ @ 0]]
	f71_arg0.BackingAllies:completeAnimation() --[[ @ 0]]
	f71_arg0.HeaderFreeTeam:setAlpha( 1 ) --[[ @ 0]]
	f71_arg0.FreeTeam:setAlpha( 1 ) --[[ @ 0]]
	f71_arg0.BackingFree:setAlpha( 0.15 ) --[[ @ 0]]
	f71_arg0.HeaderAlliesTeam:setAlpha( 1 ) --[[ @ 0]]
	f71_arg0.HeaderAlliesTeam.Backing:setRGB( ColorSet.CodCasterFactionAllies.r, ColorSet.CodCasterFactionAllies.g, ColorSet.CodCasterFactionAllies.b ) --[[ @ 0]]
	f71_arg0.HeaderAlliesTeam.Backing:setAlpha( 1 ) --[[ @ 0]]
	f71_arg0.HeaderAlliesTeam.Label:setRGB( ColorSet.CodCasterFactionAllies.r, ColorSet.CodCasterFactionAllies.g, ColorSet.CodCasterFactionAllies.b ) --[[ @ 0]]
	f71_arg0.HeaderAlliesTeam.Label:setAlpha( 1 ) --[[ @ 0]]
	f71_arg0.HeaderAlliesTeam.Label:setText( LocalizeToUpperString( @"hash_3C815AF97EE8C135" ) ) --[[ @ 0]]
	f71_arg0.HeaderAxisTeam:setAlpha( 1 ) --[[ @ 0]]
	f71_arg0.HeaderAxisTeam.Backing:setRGB( ColorSet.CodCasterFactionAxis.r, ColorSet.CodCasterFactionAxis.g, ColorSet.CodCasterFactionAxis.b ) --[[ @ 0]]
	f71_arg0.HeaderAxisTeam.Backing:setAlpha( 1 ) --[[ @ 0]]
	f71_arg0.HeaderAxisTeam.Label:setRGB( ColorSet.CodCasterFactionAxis.r, ColorSet.CodCasterFactionAxis.g, ColorSet.CodCasterFactionAxis.b ) --[[ @ 0]]
	f71_arg0.HeaderAxisTeam.Label:setText( LocalizeToUpperString( @"hash_412BD5927860415A" ) ) --[[ @ 0]]
	f71_arg0.HeaderCODCaster:setAlpha( 1 ) --[[ @ 0]]
	f71_arg0.HeaderCODCaster.Backing:setRGB( 0.29, 0.29, 0.29 ) --[[ @ 0]]
	f71_arg0.DirectorCoDCasterList:setAlpha( 1 ) --[[ @ 0]]
	f71_arg0.BackingCODCaster:setAlpha( 0.15 ) --[[ @ 0]]
	f71_arg0.AxisTeam:setAlpha( 1 ) --[[ @ 0]]
	f71_arg0.BackingAxis:setAlpha( 0.15 ) --[[ @ 0]]
	f71_arg0.AlliesTeam:setAlpha( 1 ) --[[ @ 0]]
	f71_arg0.BackingAllies:setAlpha( 0.15 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorCustomGameSetUp.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f72_arg0, f72_arg1 )
			f72_arg0:__resetProperties() --[[ @ 0]]
			f72_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f72_arg0.BackingFree:completeAnimation() --[[ @ 0]]
			f72_arg0.BackingFree:setAlpha( 0 ) --[[ @ 0]]
			f72_arg0.clipFinished( f72_arg0.BackingFree ) --[[ @ 0]]
			f72_arg0.FreeTeam:completeAnimation() --[[ @ 0]]
			f72_arg0.FreeTeam:setAlpha( 0 ) --[[ @ 0]]
			f72_arg0.clipFinished( f72_arg0.FreeTeam ) --[[ @ 0]]
			f72_arg0.HeaderFreeTeam:completeAnimation() --[[ @ 0]]
			f72_arg0.HeaderFreeTeam:setAlpha( 0 ) --[[ @ 0]]
			f72_arg0.clipFinished( f72_arg0.HeaderFreeTeam ) --[[ @ 0]]
		end
	},
	NonTeamBasedGameMode = {
		DefaultClip = function ( f73_arg0, f73_arg1 )
			f73_arg0:__resetProperties() --[[ @ 0]]
			f73_arg0:setupElementClipCounter( 12 ) --[[ @ 0]]
			f73_arg0.BackingFree:completeAnimation() --[[ @ 0]]
			f73_arg0.BackingFree:setAlpha( 0.15 ) --[[ @ 0]]
			f73_arg0.clipFinished( f73_arg0.BackingFree ) --[[ @ 0]]
			f73_arg0.FreeTeam:completeAnimation() --[[ @ 0]]
			f73_arg0.FreeTeam:setAlpha( 1 ) --[[ @ 0]]
			f73_arg0.clipFinished( f73_arg0.FreeTeam ) --[[ @ 0]]
			f73_arg0.HeaderFreeTeam:completeAnimation() --[[ @ 0]]
			f73_arg0.HeaderFreeTeam:setAlpha( 1 ) --[[ @ 0]]
			f73_arg0.clipFinished( f73_arg0.HeaderFreeTeam ) --[[ @ 0]]
			f73_arg0.BackingAxis:completeAnimation() --[[ @ 0]]
			f73_arg0.BackingAxis:setAlpha( 0 ) --[[ @ 0]]
			f73_arg0.clipFinished( f73_arg0.BackingAxis ) --[[ @ 0]]
			f73_arg0.AxisTeam:completeAnimation() --[[ @ 0]]
			f73_arg0.AxisTeam:setAlpha( 0 ) --[[ @ 0]]
			f73_arg0.clipFinished( f73_arg0.AxisTeam ) --[[ @ 0]]
			f73_arg0.HeaderAxisTeam:completeAnimation() --[[ @ 0]]
			f73_arg0.HeaderAxisTeam.Backing:completeAnimation() --[[ @ 0]]
			f73_arg0.HeaderAxisTeam.Label:completeAnimation() --[[ @ 0]]
			f73_arg0.HeaderAxisTeam:setAlpha( 0 ) --[[ @ 0]]
			f73_arg0.HeaderAxisTeam.Backing:setRGB( 0.29, 0.29, 0.29 ) --[[ @ 0]]
			f73_arg0.HeaderAxisTeam.Backing:setAlpha( 1 ) --[[ @ 0]]
			f73_arg0.HeaderAxisTeam.Label:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
			f73_arg0.HeaderAxisTeam.Label:setText( LocalizeToUpperString( @"hash_139A9E427416E0C7" ) ) --[[ @ 0]]
			f73_arg0.clipFinished( f73_arg0.HeaderAxisTeam ) --[[ @ 0]]
			f73_arg0.BackingAllies:completeAnimation() --[[ @ 0]]
			f73_arg0.BackingAllies:setAlpha( 0 ) --[[ @ 0]]
			f73_arg0.clipFinished( f73_arg0.BackingAllies ) --[[ @ 0]]
			f73_arg0.AlliesTeam:completeAnimation() --[[ @ 0]]
			f73_arg0.AlliesTeam:setAlpha( 0 ) --[[ @ 0]]
			f73_arg0.clipFinished( f73_arg0.AlliesTeam ) --[[ @ 0]]
			f73_arg0.HeaderAlliesTeam:completeAnimation() --[[ @ 0]]
			f73_arg0.HeaderAlliesTeam.Backing:completeAnimation() --[[ @ 0]]
			f73_arg0.HeaderAlliesTeam.Label:completeAnimation() --[[ @ 0]]
			f73_arg0.HeaderAlliesTeam:setAlpha( 0 ) --[[ @ 0]]
			f73_arg0.HeaderAlliesTeam.Backing:setRGB( 0.29, 0.29, 0.29 ) --[[ @ 0]]
			f73_arg0.HeaderAlliesTeam.Backing:setAlpha( 1 ) --[[ @ 0]]
			f73_arg0.HeaderAlliesTeam.Label:setRGB( ColorSet.CodCasterFactionAllies.r, ColorSet.CodCasterFactionAllies.g, ColorSet.CodCasterFactionAllies.b ) --[[ @ 0]]
			f73_arg0.HeaderAlliesTeam.Label:setAlpha( 0 ) --[[ @ 0]]
			f73_arg0.HeaderAlliesTeam.Label:setText( LocalizeToUpperString( @"hash_3C815AF97EE8C135" ) ) --[[ @ 0]]
			f73_arg0.clipFinished( f73_arg0.HeaderAlliesTeam ) --[[ @ 0]]
			f73_arg0.BackingCODCaster:completeAnimation() --[[ @ 0]]
			f73_arg0.BackingCODCaster:setAlpha( 0 ) --[[ @ 0]]
			f73_arg0.clipFinished( f73_arg0.BackingCODCaster ) --[[ @ 0]]
			f73_arg0.DirectorCoDCasterList:completeAnimation() --[[ @ 0]]
			f73_arg0.DirectorCoDCasterList:setAlpha( 1 ) --[[ @ 0]]
			f73_arg0.clipFinished( f73_arg0.DirectorCoDCasterList ) --[[ @ 0]]
			f73_arg0.HeaderCODCaster:completeAnimation() --[[ @ 0]]
			f73_arg0.HeaderCODCaster.Backing:completeAnimation() --[[ @ 0]]
			f73_arg0.HeaderCODCaster:setAlpha( 1 ) --[[ @ 0]]
			f73_arg0.HeaderCODCaster.Backing:setRGB( 0.29, 0.29, 0.29 ) --[[ @ 0]]
			f73_arg0.clipFinished( f73_arg0.HeaderCODCaster ) --[[ @ 0]]
		end
	},
	ZMCustomGames = {
		DefaultClip = function ( f74_arg0, f74_arg1 )
			f74_arg0:__resetProperties() --[[ @ 0]]
			f74_arg0:setupElementClipCounter( 12 ) --[[ @ 0]]
			f74_arg0.BackingFree:completeAnimation() --[[ @ 0]]
			f74_arg0.BackingFree:setAlpha( 0 ) --[[ @ 0]]
			f74_arg0.clipFinished( f74_arg0.BackingFree ) --[[ @ 0]]
			f74_arg0.FreeTeam:completeAnimation() --[[ @ 0]]
			f74_arg0.FreeTeam:setAlpha( 0 ) --[[ @ 0]]
			f74_arg0.clipFinished( f74_arg0.FreeTeam ) --[[ @ 0]]
			f74_arg0.HeaderFreeTeam:completeAnimation() --[[ @ 0]]
			f74_arg0.HeaderFreeTeam:setAlpha( 0 ) --[[ @ 0]]
			f74_arg0.clipFinished( f74_arg0.HeaderFreeTeam ) --[[ @ 0]]
			f74_arg0.BackingAxis:completeAnimation() --[[ @ 0]]
			f74_arg0.BackingAxis:setAlpha( 0 ) --[[ @ 0]]
			f74_arg0.clipFinished( f74_arg0.BackingAxis ) --[[ @ 0]]
			f74_arg0.AxisTeam:completeAnimation() --[[ @ 0]]
			f74_arg0.AxisTeam:setAlpha( 0 ) --[[ @ 0]]
			f74_arg0.clipFinished( f74_arg0.AxisTeam ) --[[ @ 0]]
			f74_arg0.HeaderAxisTeam:completeAnimation() --[[ @ 0]]
			f74_arg0.HeaderAxisTeam.Backing:completeAnimation() --[[ @ 0]]
			f74_arg0.HeaderAxisTeam.Label:completeAnimation() --[[ @ 0]]
			f74_arg0.HeaderAxisTeam:setAlpha( 0 ) --[[ @ 0]]
			f74_arg0.HeaderAxisTeam.Backing:setRGB( 0.29, 0.29, 0.29 ) --[[ @ 0]]
			f74_arg0.HeaderAxisTeam.Backing:setAlpha( 1 ) --[[ @ 0]]
			f74_arg0.HeaderAxisTeam.Label:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
			f74_arg0.HeaderAxisTeam.Label:setText( LocalizeToUpperString( @"hash_139A9E427416E0C7" ) ) --[[ @ 0]]
			f74_arg0.clipFinished( f74_arg0.HeaderAxisTeam ) --[[ @ 0]]
			f74_arg0.BackingAllies:completeAnimation() --[[ @ 0]]
			f74_arg0.BackingAllies:setAlpha( 0.15 ) --[[ @ 0]]
			f74_arg0.clipFinished( f74_arg0.BackingAllies ) --[[ @ 0]]
			f74_arg0.AlliesTeam:completeAnimation() --[[ @ 0]]
			f74_arg0.AlliesTeam:setAlpha( 1 ) --[[ @ 0]]
			f74_arg0.clipFinished( f74_arg0.AlliesTeam ) --[[ @ 0]]
			f74_arg0.HeaderAlliesTeam:completeAnimation() --[[ @ 0]]
			f74_arg0.HeaderAlliesTeam.Backing:completeAnimation() --[[ @ 0]]
			f74_arg0.HeaderAlliesTeam.Label:completeAnimation() --[[ @ 0]]
			f74_arg0.HeaderAlliesTeam.Backing:setRGB( 0.29, 0.29, 0.29 ) --[[ @ 0]]
			f74_arg0.HeaderAlliesTeam.Backing:setAlpha( 1 ) --[[ @ 0]]
			f74_arg0.HeaderAlliesTeam.Label:setRGB( 1, 1, 1 ) --[[ @ 0]]
			f74_arg0.HeaderAlliesTeam.Label:setAlpha( 1 ) --[[ @ 0]]
			f74_arg0.HeaderAlliesTeam.Label:setText( LocalizeToUpperString( @"hash_139A9F427416E27A" ) ) --[[ @ 0]]
			f74_arg0.clipFinished( f74_arg0.HeaderAlliesTeam ) --[[ @ 0]]
			f74_arg0.BackingCODCaster:completeAnimation() --[[ @ 0]]
			f74_arg0.BackingCODCaster:setAlpha( 0 ) --[[ @ 0]]
			f74_arg0.clipFinished( f74_arg0.BackingCODCaster ) --[[ @ 0]]
			f74_arg0.DirectorCoDCasterList:completeAnimation() --[[ @ 0]]
			f74_arg0.DirectorCoDCasterList:setAlpha( 0 ) --[[ @ 0]]
			f74_arg0.clipFinished( f74_arg0.DirectorCoDCasterList ) --[[ @ 0]]
			f74_arg0.HeaderCODCaster:completeAnimation() --[[ @ 0]]
			f74_arg0.HeaderCODCaster.Backing:completeAnimation() --[[ @ 0]]
			f74_arg0.HeaderCODCaster:setAlpha( 0 ) --[[ @ 0]]
			f74_arg0.HeaderCODCaster.Backing:setRGB( 0.29, 0.29, 0.29 ) --[[ @ 0]]
			f74_arg0.clipFinished( f74_arg0.HeaderCODCaster ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.DirectorCustomGameSetUp.__onClose = function ( f75_arg0 )
	f75_arg0.DirectorLobbySettingList:close() --[[ @ 0]]
	f75_arg0.DirectorGameSettingList:close() --[[ @ 0]]
	f75_arg0.SelectionModeFocusBlocker:close() --[[ @ 0]]
	f75_arg0.FreeTeam:close() --[[ @ 0]]
	f75_arg0.HeaderFreeTeam:close() --[[ @ 0]]
	f75_arg0.AxisTeam:close() --[[ @ 0]]
	f75_arg0.HeaderAxisTeam:close() --[[ @ 0]]
	f75_arg0.AlliesTeam:close() --[[ @ 0]]
	f75_arg0.HeaderAlliesTeam:close() --[[ @ 0]]
	f75_arg0.FooterContainerFrontendRight:close() --[[ @ 0]]
	f75_arg0.CommonHeader:close() --[[ @ 0]]
	f75_arg0.BackingGrayMediumLeft:close() --[[ @ 0]]
	f75_arg0.DirectorCoDCasterList:close() --[[ @ 0]]
	f75_arg0.HeaderCODCaster:close() --[[ @ 0]]
end
 --[[ @ 0]]
