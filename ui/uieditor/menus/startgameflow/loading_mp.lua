-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:36
require( "ui/uieditor/widgets/hud/movieplayback/moviesubtitles" ) --[[ @ 0]]
require( "ui/uieditor/widgets/loadinganimation/loadingscreenskipprompt" ) --[[ @ 0]]
require( "ui/uieditor/widgets/notifications/xp/doublexpiconsleftaligned" ) --[[ @ 0]]
require( "ui/uieditor/widgets/startgameflow/loadingscreenheader" ) --[[ @ 0]]
require( "x64:12d858628f53d460" ) --[[ @ 0]]
require( "ui/uieditor/widgets/startgameflow/loadingscreentalkerwidgetcpzm" ) --[[ @ 0]]
require( "x64:116db560ab511f2e" ) --[[ @ 0]]
require( "x64:5c0887595cfb6bb1" ) --[[ @ 0]]

CoD.Loading_MP = InheritFrom( CoD.Menu ) --[[ @ 0]]
LUI.createMenu.Loading_MP = function ( f1_arg0, f1_arg1 )
	local self = CoD.Menu.NewForUIEditor( "Loading_MP", f1_arg0 ) --[[ @ 0]]
	local f1_local1 = self --[[ @ 0]]
	if IsPC() and IsGameTypeCombatTraining() and CoD.CTUtility.ShouldPlayIntroTutorialMovie( f1_arg0 ) then
		CoD.MapUtility.PlayMapLoadingMusic() --[[ @ 0]]
		CoD.BaseUtility.InitGlobalModel( "cutsceneSkippable", false ) --[[ @ 0]]
		CoD.BaseUtility.InitGlobalModel( "mapLoaded", false ) --[[ @ 0]]
		CoD.BaseUtility.InitGlobalModel( "isIntroTutorialMovie", true ) --[[ @ 0]]
	elseif IsPC() and IsGameTypeCombatTraining() then
		CoD.MapUtility.PlayMapLoadingMusic() --[[ @ 0]]
		CoD.BaseUtility.InitGlobalModel( "cutsceneSkippable", false ) --[[ @ 0]]
		CoD.BaseUtility.InitGlobalModel( "mapLoaded", false ) --[[ @ 0]]
		CoD.BaseUtility.InitGlobalModel( "isIntroTutorialMovie", false ) --[[ @ 0]]
		LockInput( self, f1_arg0, true ) --[[ @ 0]]
	else
		CoD.MapUtility.PlayMapLoadingMusic() --[[ @ 0]]
		CoD.BaseUtility.InitGlobalModel( "cutsceneSkippable", false ) --[[ @ 0]]
		CoD.BaseUtility.InitGlobalModel( "mapLoaded", false ) --[[ @ 0]]
		CoD.BaseUtility.InitGlobalModel( "isIntroTutorialMovie", false ) --[[ @ 0]]
	end
	self:setClass( CoD.Loading_MP ) --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self:setOwner( f1_arg0 ) --[[ @ 0]]
	self:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	self:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	self:playSound( "menu_open", f1_arg0 ) --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_local1:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local BlackBackground = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	BlackBackground:setRGB( 0, 0, 0 ) --[[ @ 0]]
	self:addElement( BlackBackground ) --[[ @ 0]]
	self.BlackBackground = BlackBackground --[[ @ 0]]
	
	local loadingImageOrMovie = LUI.UIImage.new( 0.5, 0.5, -960, 960, 0.5, 0.5, -540, 540 ) --[[ @ 0]]
	self:addElement( loadingImageOrMovie ) --[[ @ 0]]
	self.loadingImageOrMovie = loadingImageOrMovie --[[ @ 0]]
	
	local LoadingElem2 = CoD.LoadingScreenLoadbar.new( f1_local1, f1_arg0, 0.5, 0.5, -865, -182, 1, 1, -70, -50 ) --[[ @ 0]]
	LoadingElem2:subscribeToGlobalModel( f1_arg0, "LoadingScreenTeamInfo", "loadedFraction", function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			LoadingElem2.LoadingBar:setShaderVector( 0, CoD.GetVectorComponentFromString( f2_local0, 1 ), CoD.GetVectorComponentFromString( f2_local0, 2 ), CoD.GetVectorComponentFromString( f2_local0, 3 ), CoD.GetVectorComponentFromString( f2_local0, 4 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( LoadingElem2 ) --[[ @ 0]]
	self.LoadingElem2 = LoadingElem2 --[[ @ 0]]
	
	local BlackFadeOut = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	BlackFadeOut:setRGB( 0, 0, 0 ) --[[ @ 0]]
	BlackFadeOut:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( BlackFadeOut ) --[[ @ 0]]
	self.BlackFadeOut = BlackFadeOut --[[ @ 0]]
	
	local TipWidgetList = CoD.TipWidgetList.new( f1_local1, f1_arg0, 0.5, 0.5, -865, -182, 1, 1, -197, -109 ) --[[ @ 0]]
	self:addElement( TipWidgetList ) --[[ @ 0]]
	self.TipWidgetList = TipWidgetList --[[ @ 0]]
	
	local DoubleXPIconsLeftAligned = CoD.DoubleXPIconsLeftAligned.new( f1_local1, f1_arg0, 0.5, 0.5, -886, -670, 1, 1, -254.5, -182.5 ) --[[ @ 0]]
	self:addElement( DoubleXPIconsLeftAligned ) --[[ @ 0]]
	self.DoubleXPIconsLeftAligned = DoubleXPIconsLeftAligned --[[ @ 0]]
	
	local LoadingScreenHeader = CoD.LoadingScreenHeader.new( f1_local1, f1_arg0, 0.5, 0.5, -795, 334, 0, 0, 52.5, 252.5 ) --[[ @ 0]]
	self:addElement( LoadingScreenHeader ) --[[ @ 0]]
	self.LoadingScreenHeader = LoadingScreenHeader --[[ @ 0]]
	
	local GamemodeIcon = LUI.UIImage.new( 0.5, 0.5, -932, -608, 0, 0, -16.5, 307.5 ) --[[ @ 0]]
	GamemodeIcon:subscribeToGlobalModel( f1_arg0, "LoadingScreenTeamInfo", "gameTypeIcon", function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			GamemodeIcon:setImage( RegisterImage( f3_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( GamemodeIcon ) --[[ @ 0]]
	self.GamemodeIcon = GamemodeIcon --[[ @ 0]]
	
	local Team1PlayerList = LUI.UIList.new( f1_local1, f1_arg0, 8, 0, nil, false, false, false, false ) --[[ @ 0]]
	Team1PlayerList:setLeftRight( 0.5, 0.5, -865, -535 ) --[[ @ 0]]
	Team1PlayerList:setTopBottom( 0, 0, 284, 416 ) --[[ @ 0]]
	Team1PlayerList:setWidgetType( CoD.LoadingScreenTalkerWidgetCPZM ) --[[ @ 0]]
	Team1PlayerList:setVerticalCount( 4 ) --[[ @ 0]]
	Team1PlayerList:setSpacing( 8 ) --[[ @ 0]]
	Team1PlayerList:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	Team1PlayerList:setDataSource( "LoadingScreenPlayerListTeam1" ) --[[ @ 0]]
	self:addElement( Team1PlayerList ) --[[ @ 0]]
	self.Team1PlayerList = Team1PlayerList --[[ @ 0]]
	
	local label = CoD.LoadingScreenSkipPrompt.new( f1_local1, f1_arg0, 0.5, 0.5, -960, 960, 0.5, 0.5, -540, 540 ) --[[ @ 0]]
	label:mergeStateConditions( {
		{
			stateName = "VisiblePC",
			condition = function ( menu, element, event )
				local f4_local0 = IsMouseOrKeyboard( f1_arg0 ) --[[ @ 0]]
				if f4_local0 then
					f4_local0 = CoD.ModelUtility.IsGlobalModelValueTrue( "cutsceneSkippable" ) --[[ @ 0]]
					if f4_local0 then
						f4_local0 = CoD.ModelUtility.IsGlobalModelValueTrue( "mapLoaded" ) --[[ @ 0]]
						if f4_local0 then
							f4_local0 = not CoD.ModelUtility.IsGlobalModelValueTrue( "isIntroTutorialMovie" ) --[[ @ 0]]
						end
					end
				end
				return f4_local0
			end
		},
		{
			stateName = "Visible",
			condition = function ( menu, element, event )
				local f5_local0 = IsGamepad( f1_arg0 ) --[[ @ 0]]
				if f5_local0 then
					f5_local0 = CoD.ModelUtility.IsGlobalModelValueTrue( "cutsceneSkippable" ) --[[ @ 0]]
					if f5_local0 then
						f5_local0 = CoD.ModelUtility.IsGlobalModelValueTrue( "mapLoaded" ) --[[ @ 0]]
						if f5_local0 then
							f5_local0 = not CoD.ModelUtility.IsGlobalModelValueTrue( "isIntroTutorialMovie" ) --[[ @ 0]]
						end
					end
				end
				return f5_local0
			end
		}
	} ) --[[ @ 0]]
	label:appendEventHandler( "input_source_changed", function ( f6_arg0, f6_arg1 )
		f6_arg1.menu = f6_arg1.menu or f1_local1 --[[ @ 0]]
		f1_local1:updateElementState( label, f6_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local PCNotifContainer = label --[[ @ 0]]
	local MovieSubtitles = label.subscribeToModel --[[ @ 0]]
	local f1_local14 = Engine[@"GetModelForController"]( f1_arg0 ) --[[ @ 0]]
	MovieSubtitles( PCNotifContainer, f1_local14.LastInput, function ( f7_arg0 )
		f1_local1:updateElementState( label, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f7_arg0:get(),
			modelName = "LastInput"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	PCNotifContainer = label --[[ @ 0]]
	MovieSubtitles = label.subscribeToModel --[[ @ 0]]
	f1_local14 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	MovieSubtitles( PCNotifContainer, f1_local14.cutsceneSkippable, function ( f8_arg0 )
		f1_local1:updateElementState( label, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f8_arg0:get(),
			modelName = "cutsceneSkippable"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	PCNotifContainer = label --[[ @ 0]]
	MovieSubtitles = label.subscribeToModel --[[ @ 0]]
	f1_local14 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	MovieSubtitles( PCNotifContainer, f1_local14.mapLoaded, function ( f9_arg0 )
		f1_local1:updateElementState( label, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f9_arg0:get(),
			modelName = "mapLoaded"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	PCNotifContainer = label --[[ @ 0]]
	MovieSubtitles = label.subscribeToModel --[[ @ 0]]
	f1_local14 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	MovieSubtitles( PCNotifContainer, f1_local14.isIntroTutorialMovie, function ( f10_arg0 )
		f1_local1:updateElementState( label, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f10_arg0:get(),
			modelName = "isIntroTutorialMovie"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	label.label:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	self:addElement( label ) --[[ @ 0]]
	self.label = label --[[ @ 0]]
	
	MovieSubtitles = CoD.MovieSubtitles.new( f1_local1, f1_arg0, 0.5, 0.5, -960, 960, 0.5, 0.5, -540, 540 ) --[[ @ 0]]
	self:addElement( MovieSubtitles ) --[[ @ 0]]
	self.MovieSubtitles = MovieSubtitles --[[ @ 0]]
	
	PCNotifContainer = nil --[[ @ 0]]
	
	PCNotifContainer = CoD.PC_Notif_Container.new( f1_local1, f1_arg0, 0.5, 0.5, 468, 918, 0, 0, 102.5, 202.5 ) --[[ @ 0]]
	self:addElement( PCNotifContainer ) --[[ @ 0]]
	self.PCNotifContainer = PCNotifContainer --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "CombatTraining",
			condition = function ( menu, element, event )
				return CoD.HUDUtility.LoadingHeaderNotShown()
			end
		},
		{
			stateName = "SplitScreen",
			condition = function ( menu, element, event )
				return IsSplitscreenAndInGame( f1_arg0 )
			end
		}
	} ) --[[ @ 0]]
	local f1_local15 = self --[[ @ 0]]
	f1_local14 = self.subscribeToModel --[[ @ 0]]
	local f1_local16 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local14( f1_local15, f1_local16["lobbyRoot.lobbyNav"], function ( f13_arg0 )
		f1_local1:updateElementState( self, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f13_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local15 = self --[[ @ 0]]
	f1_local14 = self.subscribeToModel --[[ @ 0]]
	f1_local16 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local14( f1_local15, f1_local16["lobbyRoot.gameClient.update"], function ( f14_arg0 )
		f1_local1:updateElementState( self, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f14_arg0:get(),
			modelName = "lobbyRoot.gameClient.update"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local15 = self --[[ @ 0]]
	f1_local14 = self.subscribeToModel --[[ @ 0]]
	f1_local16 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local14( f1_local15, f1_local16["lobbyRoot.privateClient.update"], function ( f15_arg0 )
		f1_local1:updateElementState( self, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f15_arg0:get(),
			modelName = "lobbyRoot.privateClient.update"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local15 = self --[[ @ 0]]
	f1_local14 = self.subscribeToModel --[[ @ 0]]
	f1_local16 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local14( f1_local15, f1_local16.cutsceneSkippable, function ( f16_arg0, f16_arg1 )
		CoD.Menu.UpdateButtonShownState( f16_arg1, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f16_arg1, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local15 = self --[[ @ 0]]
	f1_local14 = self.subscribeToModel --[[ @ 0]]
	f1_local16 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local14( f1_local15, f1_local16.mapLoaded, function ( f17_arg0, f17_arg1 )
		CoD.Menu.UpdateButtonShownState( f17_arg1, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f17_arg1, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local15 = self --[[ @ 0]]
	f1_local14 = self.subscribeToModel --[[ @ 0]]
	f1_local16 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local14( f1_local15, f1_local16.isIntroTutorialMovie, function ( f18_arg0, f18_arg1 )
		CoD.Menu.UpdateButtonShownState( f18_arg1, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f18_arg1, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:registerEventHandler( "loading_startplay", function ( self, event )
		local f19_local0 = nil --[[ @ 0]]
		CoD.HUDUtility.StartPlay( self, f1_arg0 ) --[[ @ 0]]
		if not f19_local0 then
			f19_local0 = self:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f19_local0
	end ) --[[ @ 0]]
	self:registerEventHandler( "loading_nomovie_startplay", function ( self, event )
		local f20_local0 = nil --[[ @ 0]]
		if IsSplitscreenAndInGame( f1_arg0 ) and IsWarzone() then
			CoD.HUDUtility.StartPlay( self, f1_arg0 ) --[[ @ 0]]
		end
		if not f20_local0 then
			f20_local0 = self:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f20_local0
	end ) --[[ @ 0]]
	self:registerEventHandler( "loading_displaycontinue", function ( self, event )
		local f21_local0 = nil --[[ @ 0]]
		SetGlobalModelValueTrue( "mapLoaded" ) --[[ @ 0]]
		if not f21_local0 then
			f21_local0 = self:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f21_local0
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		if CoD.ModelUtility.IsGlobalModelValueTrue( "cutsceneSkippable" ) and CoD.ModelUtility.IsGlobalModelValueTrue( "mapLoaded" ) and not CoD.ModelUtility.IsGlobalModelValueTrue( "isIntroTutorialMovie" ) then
			CoD.HUDUtility.StartPlay( element, controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if CoD.ModelUtility.IsGlobalModelValueTrue( "cutsceneSkippable" ) and CoD.ModelUtility.IsGlobalModelValueTrue( "mapLoaded" ) and not CoD.ModelUtility.IsGlobalModelValueTrue( "isIntroTutorialMovie" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_0", nil, "ui_confirm" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], "ESCAPE", function ( element, menu, controller, model )
		if CoD.ModelUtility.IsGlobalModelValueTrue( "cutsceneSkippable" ) and CoD.ModelUtility.IsGlobalModelValueTrue( "mapLoaded" ) and not CoD.ModelUtility.IsGlobalModelValueTrue( "isIntroTutorialMovie" ) then
			CoD.HUDUtility.StartPlay( element, controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if CoD.ModelUtility.IsGlobalModelValueTrue( "cutsceneSkippable" ) and CoD.ModelUtility.IsGlobalModelValueTrue( "mapLoaded" ) and not CoD.ModelUtility.IsGlobalModelValueTrue( "isIntroTutorialMovie" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], @"hash_0", nil, "ESCAPE" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( self, "close", function ( element )
		if IsGameTypeCombatTraining() and IsPC() then
			LockInput( self, f1_arg0, false ) --[[ @ 0]]
			CoD.PCUtility.UnlockUIShortcutInput( f1_local1, f1_arg0 ) --[[ @ 0]]
		elseif IsPC() then
			CoD.PCUtility.UnlockUIShortcutInput( f1_local1, f1_arg0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	Team1PlayerList.id = "Team1PlayerList" --[[ @ 0]]
	if CoD.isPC then
		PCNotifContainer.id = "PCNotifContainer" --[[ @ 0]]
	end
	self:processEvent( {
		name = "menu_loaded",
		controller = f1_arg0
	} ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg0 ) --[[ @ 0]]
	end
	f1_local14 = self --[[ @ 0]]
	if IsPC() then
		PlayClip( self, "StartLoading", f1_arg0 ) --[[ @ 0]]
		PlayClipOnElement( self, {
			elementName = "LoadingScreenTeamGameInfo",
			clipName = "StartLoading"
		}, f1_arg0 ) --[[ @ 0]]
		PlayClipOnElement( self, {
			elementName = "LoadingScreenHeaderFooter",
			clipName = "StartLoading"
		}, f1_arg0 ) --[[ @ 0]]
		CoD.PCWidgetUtility.ResetAllKeysColor() --[[ @ 0]]
		CoD.PCUtility.LockUIShortcutInput( f1_local1, f1_arg0 ) --[[ @ 0]]
		CoD.CTUtility.StartSkipTimer( f1_local1, 5000 ) --[[ @ 0]]
	else
		PlayClip( self, "StartLoading", f1_arg0 ) --[[ @ 0]]
		PlayClipOnElement( self, {
			elementName = "LoadingScreenTeamGameInfo",
			clipName = "StartLoading"
		}, f1_arg0 ) --[[ @ 0]]
		PlayClipOnElement( self, {
			elementName = "LoadingScreenHeaderFooter",
			clipName = "StartLoading"
		}, f1_arg0 ) --[[ @ 0]]
		CoD.CTUtility.StartSkipTimer( f1_local1, 5000 ) --[[ @ 0]]
	end
	CoD.HUDUtility.InitLoadingImageOrMovie( loadingImageOrMovie, f1_arg0 ) --[[ @ 0]]
	return self
end
 --[[ @ 0]]
CoD.Loading_MP.__resetProperties = function ( f27_arg0 )
	f27_arg0.GamemodeIcon:completeAnimation() --[[ @ 0]]
	f27_arg0.BlackBackground:completeAnimation() --[[ @ 0]]
	f27_arg0.loadingImageOrMovie:completeAnimation() --[[ @ 0]]
	f27_arg0.LoadingElem2:completeAnimation() --[[ @ 0]]
	f27_arg0.LoadingScreenHeader:completeAnimation() --[[ @ 0]]
	f27_arg0.TipWidgetList:completeAnimation() --[[ @ 0]]
	f27_arg0.DoubleXPIconsLeftAligned:completeAnimation() --[[ @ 0]]
	f27_arg0.Team1PlayerList:completeAnimation() --[[ @ 0]]
	f27_arg0.GamemodeIcon:setAlpha( 1 ) --[[ @ 0]]
	f27_arg0.GamemodeIcon:setScale( 1, 1 ) --[[ @ 0]]
	f27_arg0.BlackBackground:setAlpha( 1 ) --[[ @ 0]]
	f27_arg0.loadingImageOrMovie:setAlpha( 1 ) --[[ @ 0]]
	f27_arg0.LoadingElem2:setAlpha( 1 ) --[[ @ 0]]
	f27_arg0.LoadingScreenHeader:setAlpha( 1 ) --[[ @ 0]]
	f27_arg0.TipWidgetList:setAlpha( 1 ) --[[ @ 0]]
	f27_arg0.DoubleXPIconsLeftAligned:setAlpha( 1 ) --[[ @ 0]]
	f27_arg0.DoubleXPIconsLeftAligned:setScale( 1, 1 ) --[[ @ 0]]
	f27_arg0.Team1PlayerList:setTopBottom( 0, 0, 284, 416 ) --[[ @ 0]]
	f27_arg0.Team1PlayerList:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.Loading_MP.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f28_arg0, f28_arg1 )
			f28_arg0:__resetProperties() --[[ @ 0]]
			f28_arg0:setupElementClipCounter( 7 ) --[[ @ 0]]
			f28_arg0.BlackBackground:completeAnimation() --[[ @ 0]]
			f28_arg0.BlackBackground:setAlpha( 0 ) --[[ @ 0]]
			f28_arg0.clipFinished( f28_arg0.BlackBackground ) --[[ @ 0]]
			f28_arg0.loadingImageOrMovie:completeAnimation() --[[ @ 0]]
			f28_arg0.loadingImageOrMovie:setAlpha( 0 ) --[[ @ 0]]
			f28_arg0.clipFinished( f28_arg0.loadingImageOrMovie ) --[[ @ 0]]
			local f28_local0 = function ( f29_arg0 )
				f29_arg0:beginAnimation( 300 ) --[[ @ 0]]
				f29_arg0:setAlpha( 1 ) --[[ @ 0]]
				f29_arg0:registerEventHandler( "transition_complete_keyframe", f28_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f28_arg0.LoadingElem2:beginAnimation( 100 ) --[[ @ 0]]
			f28_arg0.LoadingElem2:setAlpha( 0 ) --[[ @ 0]]
			f28_arg0.LoadingElem2:registerEventHandler( "interrupted_keyframe", f28_arg0.clipInterrupted ) --[[ @ 0]]
			f28_arg0.LoadingElem2:registerEventHandler( "transition_complete_keyframe", f28_local0 ) --[[ @ 0]]
			local f28_local1 = function ( f30_arg0 )
				f30_arg0:beginAnimation( 300 ) --[[ @ 0]]
				f30_arg0:setAlpha( 1 ) --[[ @ 0]]
				f30_arg0:registerEventHandler( "transition_complete_keyframe", f28_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f28_arg0.TipWidgetList:beginAnimation( 210 ) --[[ @ 0]]
			f28_arg0.TipWidgetList:setAlpha( 0 ) --[[ @ 0]]
			f28_arg0.TipWidgetList:registerEventHandler( "interrupted_keyframe", f28_arg0.clipInterrupted ) --[[ @ 0]]
			f28_arg0.TipWidgetList:registerEventHandler( "transition_complete_keyframe", f28_local1 ) --[[ @ 0]]
			local f28_local2 = function ( f31_arg0 )
				local f31_local0 = function ( f32_arg0 )
					f32_arg0:beginAnimation( 79 ) --[[ @ 0]]
					f32_arg0:setAlpha( 1 ) --[[ @ 0]]
					f32_arg0:setScale( 1, 1 ) --[[ @ 0]]
					f32_arg0:registerEventHandler( "transition_complete_keyframe", f28_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f31_arg0:beginAnimation( 139 ) --[[ @ 0]]
				f31_arg0:setAlpha( 0.64 ) --[[ @ 0]]
				f31_arg0:setScale( 0.6, 0.6 ) --[[ @ 0]]
				f31_arg0:registerEventHandler( "transition_complete_keyframe", f31_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f28_arg0.DoubleXPIconsLeftAligned:beginAnimation( 370 ) --[[ @ 0]]
			f28_arg0.DoubleXPIconsLeftAligned:setAlpha( 0 ) --[[ @ 0]]
			f28_arg0.DoubleXPIconsLeftAligned:setScale( 3, 3 ) --[[ @ 0]]
			f28_arg0.DoubleXPIconsLeftAligned:registerEventHandler( "interrupted_keyframe", f28_arg0.clipInterrupted ) --[[ @ 0]]
			f28_arg0.DoubleXPIconsLeftAligned:registerEventHandler( "transition_complete_keyframe", f28_local2 ) --[[ @ 0]]
			local f28_local3 = function ( f33_arg0 )
				f33_arg0:beginAnimation( 300 ) --[[ @ 0]]
				f33_arg0:setAlpha( 1 ) --[[ @ 0]]
				f33_arg0:registerEventHandler( "transition_complete_keyframe", f28_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f28_arg0.LoadingScreenHeader:beginAnimation( 100 ) --[[ @ 0]]
			f28_arg0.LoadingScreenHeader:setAlpha( 0 ) --[[ @ 0]]
			f28_arg0.LoadingScreenHeader:registerEventHandler( "interrupted_keyframe", f28_arg0.clipInterrupted ) --[[ @ 0]]
			f28_arg0.LoadingScreenHeader:registerEventHandler( "transition_complete_keyframe", f28_local3 ) --[[ @ 0]]
			local f28_local4 = function ( f34_arg0 )
				local f34_local0 = function ( f35_arg0 )
					f35_arg0:beginAnimation( 60 ) --[[ @ 0]]
					f35_arg0:setAlpha( 1 ) --[[ @ 0]]
					f35_arg0:setScale( 1, 1 ) --[[ @ 0]]
					f35_arg0:registerEventHandler( "transition_complete_keyframe", f28_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f28_arg0.GamemodeIcon:beginAnimation( 240 ) --[[ @ 0]]
				f28_arg0.GamemodeIcon:setAlpha( 0.8 ) --[[ @ 0]]
				f28_arg0.GamemodeIcon:setScale( 0.8, 0.8 ) --[[ @ 0]]
				f28_arg0.GamemodeIcon:registerEventHandler( "interrupted_keyframe", f28_arg0.clipInterrupted ) --[[ @ 0]]
				f28_arg0.GamemodeIcon:registerEventHandler( "transition_complete_keyframe", f34_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f28_arg0.GamemodeIcon:completeAnimation() --[[ @ 0]]
			f28_arg0.GamemodeIcon:setAlpha( 0 ) --[[ @ 0]]
			f28_arg0.GamemodeIcon:setScale( 3, 3 ) --[[ @ 0]]
			f28_local4( f28_arg0.GamemodeIcon ) --[[ @ 0]]
		end,
		Close = function ( f36_arg0, f36_arg1 )
			f36_arg0:__resetProperties() --[[ @ 0]]
			f36_arg0:setupElementClipCounter( 8 ) --[[ @ 0]]
			f36_arg0.BlackBackground:completeAnimation() --[[ @ 0]]
			f36_arg0.BlackBackground:setAlpha( 0 ) --[[ @ 0]]
			f36_arg0.clipFinished( f36_arg0.BlackBackground ) --[[ @ 0]]
			f36_arg0.loadingImageOrMovie:completeAnimation() --[[ @ 0]]
			f36_arg0.loadingImageOrMovie:setAlpha( 0 ) --[[ @ 0]]
			f36_arg0.clipFinished( f36_arg0.loadingImageOrMovie ) --[[ @ 0]]
			f36_arg0.LoadingElem2:completeAnimation() --[[ @ 0]]
			f36_arg0.LoadingElem2:setAlpha( 0 ) --[[ @ 0]]
			f36_arg0.clipFinished( f36_arg0.LoadingElem2 ) --[[ @ 0]]
			f36_arg0.TipWidgetList:completeAnimation() --[[ @ 0]]
			f36_arg0.TipWidgetList:setAlpha( 0 ) --[[ @ 0]]
			f36_arg0.clipFinished( f36_arg0.TipWidgetList ) --[[ @ 0]]
			f36_arg0.DoubleXPIconsLeftAligned:completeAnimation() --[[ @ 0]]
			f36_arg0.DoubleXPIconsLeftAligned:setAlpha( 0 ) --[[ @ 0]]
			f36_arg0.clipFinished( f36_arg0.DoubleXPIconsLeftAligned ) --[[ @ 0]]
			local f36_local0 = function ( f37_arg0 )
				f36_arg0.LoadingScreenHeader:beginAnimation( 250 ) --[[ @ 0]]
				f36_arg0.LoadingScreenHeader:registerEventHandler( "interrupted_keyframe", f36_arg0.clipInterrupted ) --[[ @ 0]]
				f36_arg0.LoadingScreenHeader:registerEventHandler( "transition_complete_keyframe", f36_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f36_arg0.LoadingScreenHeader:completeAnimation() --[[ @ 0]]
			f36_arg0.LoadingScreenHeader:setAlpha( 0 ) --[[ @ 0]]
			f36_local0( f36_arg0.LoadingScreenHeader ) --[[ @ 0]]
			local f36_local1 = function ( f38_arg0 )
				f36_arg0.GamemodeIcon:beginAnimation( 250 ) --[[ @ 0]]
				f36_arg0.GamemodeIcon:registerEventHandler( "interrupted_keyframe", f36_arg0.clipInterrupted ) --[[ @ 0]]
				f36_arg0.GamemodeIcon:registerEventHandler( "transition_complete_keyframe", f36_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f36_arg0.GamemodeIcon:completeAnimation() --[[ @ 0]]
			f36_arg0.GamemodeIcon:setAlpha( 0 ) --[[ @ 0]]
			f36_local1( f36_arg0.GamemodeIcon ) --[[ @ 0]]
			local f36_local2 = function ( f39_arg0 )
				f36_arg0.Team1PlayerList:beginAnimation( 250 ) --[[ @ 0]]
				f36_arg0.Team1PlayerList:registerEventHandler( "interrupted_keyframe", f36_arg0.clipInterrupted ) --[[ @ 0]]
				f36_arg0.Team1PlayerList:registerEventHandler( "transition_complete_keyframe", f36_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f36_arg0.Team1PlayerList:completeAnimation() --[[ @ 0]]
			f36_arg0.Team1PlayerList:setAlpha( 0 ) --[[ @ 0]]
			f36_local2( f36_arg0.Team1PlayerList ) --[[ @ 0]]
		end
	},
	CombatTraining = {
		DefaultClip = function ( f40_arg0, f40_arg1 )
			f40_arg0:__resetProperties() --[[ @ 0]]
			f40_arg0:setupElementClipCounter( 6 ) --[[ @ 0]]
			f40_arg0.LoadingElem2:completeAnimation() --[[ @ 0]]
			f40_arg0.LoadingElem2:setAlpha( 0 ) --[[ @ 0]]
			f40_arg0.clipFinished( f40_arg0.LoadingElem2 ) --[[ @ 0]]
			f40_arg0.TipWidgetList:completeAnimation() --[[ @ 0]]
			f40_arg0.TipWidgetList:setAlpha( 0 ) --[[ @ 0]]
			f40_arg0.clipFinished( f40_arg0.TipWidgetList ) --[[ @ 0]]
			local f40_local0 = function ( f41_arg0 )
				local f41_local0 = function ( f42_arg0 )
					f42_arg0:beginAnimation( 79 ) --[[ @ 0]]
					f42_arg0:setAlpha( 1 ) --[[ @ 0]]
					f42_arg0:setScale( 1, 1 ) --[[ @ 0]]
					f42_arg0:registerEventHandler( "transition_complete_keyframe", f40_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f41_arg0:beginAnimation( 139 ) --[[ @ 0]]
				f41_arg0:setAlpha( 0.64 ) --[[ @ 0]]
				f41_arg0:setScale( 0.6, 0.6 ) --[[ @ 0]]
				f41_arg0:registerEventHandler( "transition_complete_keyframe", f41_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f40_arg0.DoubleXPIconsLeftAligned:beginAnimation( 370 ) --[[ @ 0]]
			f40_arg0.DoubleXPIconsLeftAligned:setAlpha( 0 ) --[[ @ 0]]
			f40_arg0.DoubleXPIconsLeftAligned:setScale( 3, 3 ) --[[ @ 0]]
			f40_arg0.DoubleXPIconsLeftAligned:registerEventHandler( "interrupted_keyframe", f40_arg0.clipInterrupted ) --[[ @ 0]]
			f40_arg0.DoubleXPIconsLeftAligned:registerEventHandler( "transition_complete_keyframe", f40_local0 ) --[[ @ 0]]
			f40_arg0.LoadingScreenHeader:completeAnimation() --[[ @ 0]]
			f40_arg0.LoadingScreenHeader:setAlpha( 0 ) --[[ @ 0]]
			f40_arg0.clipFinished( f40_arg0.LoadingScreenHeader ) --[[ @ 0]]
			f40_arg0.GamemodeIcon:completeAnimation() --[[ @ 0]]
			f40_arg0.GamemodeIcon:setAlpha( 0 ) --[[ @ 0]]
			f40_arg0.clipFinished( f40_arg0.GamemodeIcon ) --[[ @ 0]]
			f40_arg0.Team1PlayerList:completeAnimation() --[[ @ 0]]
			f40_arg0.Team1PlayerList:setTopBottom( 0, 0, 79.5, 211.5 ) --[[ @ 0]]
			f40_arg0.clipFinished( f40_arg0.Team1PlayerList ) --[[ @ 0]]
		end,
		Close = function ( f43_arg0, f43_arg1 )
			f43_arg0:__resetProperties() --[[ @ 0]]
			f43_arg0:setupElementClipCounter( 7 ) --[[ @ 0]]
			local f43_local0 = function ( f44_arg0 )
				f43_arg0.BlackBackground:beginAnimation( 500 ) --[[ @ 0]]
				f43_arg0.BlackBackground:setAlpha( 0 ) --[[ @ 0]]
				f43_arg0.BlackBackground:registerEventHandler( "interrupted_keyframe", f43_arg0.clipInterrupted ) --[[ @ 0]]
				f43_arg0.BlackBackground:registerEventHandler( "transition_complete_keyframe", f43_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f43_arg0.BlackBackground:completeAnimation() --[[ @ 0]]
			f43_arg0.BlackBackground:setAlpha( 1 ) --[[ @ 0]]
			f43_local0( f43_arg0.BlackBackground ) --[[ @ 0]]
			local f43_local1 = function ( f45_arg0 )
				f43_arg0.loadingImageOrMovie:beginAnimation( 500 ) --[[ @ 0]]
				f43_arg0.loadingImageOrMovie:setAlpha( 0 ) --[[ @ 0]]
				f43_arg0.loadingImageOrMovie:registerEventHandler( "interrupted_keyframe", f43_arg0.clipInterrupted ) --[[ @ 0]]
				f43_arg0.loadingImageOrMovie:registerEventHandler( "transition_complete_keyframe", f43_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f43_arg0.loadingImageOrMovie:completeAnimation() --[[ @ 0]]
			f43_arg0.loadingImageOrMovie:setAlpha( 1 ) --[[ @ 0]]
			f43_local1( f43_arg0.loadingImageOrMovie ) --[[ @ 0]]
			local f43_local2 = function ( f46_arg0 )
				f43_arg0.LoadingElem2:beginAnimation( 250 ) --[[ @ 0]]
				f43_arg0.LoadingElem2:setAlpha( 0 ) --[[ @ 0]]
				f43_arg0.LoadingElem2:registerEventHandler( "interrupted_keyframe", f43_arg0.clipInterrupted ) --[[ @ 0]]
				f43_arg0.LoadingElem2:registerEventHandler( "transition_complete_keyframe", f43_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f43_arg0.LoadingElem2:completeAnimation() --[[ @ 0]]
			f43_arg0.LoadingElem2:setAlpha( 1 ) --[[ @ 0]]
			f43_local2( f43_arg0.LoadingElem2 ) --[[ @ 0]]
			f43_arg0.TipWidgetList:completeAnimation() --[[ @ 0]]
			f43_arg0.TipWidgetList:setAlpha( 0 ) --[[ @ 0]]
			f43_arg0.clipFinished( f43_arg0.TipWidgetList ) --[[ @ 0]]
			local f43_local3 = function ( f47_arg0 )
				f43_arg0.DoubleXPIconsLeftAligned:beginAnimation( 250 ) --[[ @ 0]]
				f43_arg0.DoubleXPIconsLeftAligned:setAlpha( 0 ) --[[ @ 0]]
				f43_arg0.DoubleXPIconsLeftAligned:registerEventHandler( "interrupted_keyframe", f43_arg0.clipInterrupted ) --[[ @ 0]]
				f43_arg0.DoubleXPIconsLeftAligned:registerEventHandler( "transition_complete_keyframe", f43_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f43_arg0.DoubleXPIconsLeftAligned:completeAnimation() --[[ @ 0]]
			f43_arg0.DoubleXPIconsLeftAligned:setAlpha( 1 ) --[[ @ 0]]
			f43_local3( f43_arg0.DoubleXPIconsLeftAligned ) --[[ @ 0]]
			f43_arg0.LoadingScreenHeader:completeAnimation() --[[ @ 0]]
			f43_arg0.LoadingScreenHeader:setAlpha( 0 ) --[[ @ 0]]
			f43_arg0.clipFinished( f43_arg0.LoadingScreenHeader ) --[[ @ 0]]
			f43_arg0.GamemodeIcon:completeAnimation() --[[ @ 0]]
			f43_arg0.GamemodeIcon:setAlpha( 0 ) --[[ @ 0]]
			f43_arg0.clipFinished( f43_arg0.GamemodeIcon ) --[[ @ 0]]
		end
	},
	SplitScreen = {
		DefaultClip = function ( f48_arg0, f48_arg1 )
			f48_arg0:__resetProperties() --[[ @ 0]]
			f48_arg0:setupElementClipCounter( 6 ) --[[ @ 0]]
			f48_arg0.BlackBackground:completeAnimation() --[[ @ 0]]
			f48_arg0.BlackBackground:setAlpha( 0 ) --[[ @ 0]]
			f48_arg0.clipFinished( f48_arg0.BlackBackground ) --[[ @ 0]]
			local f48_local0 = function ( f49_arg0 )
				f49_arg0:beginAnimation( 300 ) --[[ @ 0]]
				f49_arg0:setAlpha( 1 ) --[[ @ 0]]
				f49_arg0:registerEventHandler( "transition_complete_keyframe", f48_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f48_arg0.LoadingElem2:beginAnimation( 100 ) --[[ @ 0]]
			f48_arg0.LoadingElem2:setAlpha( 0 ) --[[ @ 0]]
			f48_arg0.LoadingElem2:registerEventHandler( "interrupted_keyframe", f48_arg0.clipInterrupted ) --[[ @ 0]]
			f48_arg0.LoadingElem2:registerEventHandler( "transition_complete_keyframe", f48_local0 ) --[[ @ 0]]
			local f48_local1 = function ( f50_arg0 )
				f50_arg0:beginAnimation( 300 ) --[[ @ 0]]
				f50_arg0:setAlpha( 1 ) --[[ @ 0]]
				f50_arg0:registerEventHandler( "transition_complete_keyframe", f48_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f48_arg0.TipWidgetList:beginAnimation( 210 ) --[[ @ 0]]
			f48_arg0.TipWidgetList:setAlpha( 0 ) --[[ @ 0]]
			f48_arg0.TipWidgetList:registerEventHandler( "interrupted_keyframe", f48_arg0.clipInterrupted ) --[[ @ 0]]
			f48_arg0.TipWidgetList:registerEventHandler( "transition_complete_keyframe", f48_local1 ) --[[ @ 0]]
			local f48_local2 = function ( f51_arg0 )
				local f51_local0 = function ( f52_arg0 )
					f52_arg0:beginAnimation( 79 ) --[[ @ 0]]
					f52_arg0:setAlpha( 1 ) --[[ @ 0]]
					f52_arg0:setScale( 1, 1 ) --[[ @ 0]]
					f52_arg0:registerEventHandler( "transition_complete_keyframe", f48_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f51_arg0:beginAnimation( 139 ) --[[ @ 0]]
				f51_arg0:setAlpha( 0.64 ) --[[ @ 0]]
				f51_arg0:setScale( 0.6, 0.6 ) --[[ @ 0]]
				f51_arg0:registerEventHandler( "transition_complete_keyframe", f51_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f48_arg0.DoubleXPIconsLeftAligned:beginAnimation( 370 ) --[[ @ 0]]
			f48_arg0.DoubleXPIconsLeftAligned:setAlpha( 0 ) --[[ @ 0]]
			f48_arg0.DoubleXPIconsLeftAligned:setScale( 3, 3 ) --[[ @ 0]]
			f48_arg0.DoubleXPIconsLeftAligned:registerEventHandler( "interrupted_keyframe", f48_arg0.clipInterrupted ) --[[ @ 0]]
			f48_arg0.DoubleXPIconsLeftAligned:registerEventHandler( "transition_complete_keyframe", f48_local2 ) --[[ @ 0]]
			local f48_local3 = function ( f53_arg0 )
				f53_arg0:beginAnimation( 300 ) --[[ @ 0]]
				f53_arg0:setAlpha( 1 ) --[[ @ 0]]
				f53_arg0:registerEventHandler( "transition_complete_keyframe", f48_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f48_arg0.LoadingScreenHeader:beginAnimation( 100 ) --[[ @ 0]]
			f48_arg0.LoadingScreenHeader:setAlpha( 0 ) --[[ @ 0]]
			f48_arg0.LoadingScreenHeader:registerEventHandler( "interrupted_keyframe", f48_arg0.clipInterrupted ) --[[ @ 0]]
			f48_arg0.LoadingScreenHeader:registerEventHandler( "transition_complete_keyframe", f48_local3 ) --[[ @ 0]]
			local f48_local4 = function ( f54_arg0 )
				local f54_local0 = function ( f55_arg0 )
					f55_arg0:beginAnimation( 60 ) --[[ @ 0]]
					f55_arg0:setAlpha( 1 ) --[[ @ 0]]
					f55_arg0:setScale( 1, 1 ) --[[ @ 0]]
					f55_arg0:registerEventHandler( "transition_complete_keyframe", f48_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f48_arg0.GamemodeIcon:beginAnimation( 240 ) --[[ @ 0]]
				f48_arg0.GamemodeIcon:setAlpha( 0.8 ) --[[ @ 0]]
				f48_arg0.GamemodeIcon:setScale( 0.8, 0.8 ) --[[ @ 0]]
				f48_arg0.GamemodeIcon:registerEventHandler( "interrupted_keyframe", f48_arg0.clipInterrupted ) --[[ @ 0]]
				f48_arg0.GamemodeIcon:registerEventHandler( "transition_complete_keyframe", f54_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f48_arg0.GamemodeIcon:completeAnimation() --[[ @ 0]]
			f48_arg0.GamemodeIcon:setAlpha( 0 ) --[[ @ 0]]
			f48_arg0.GamemodeIcon:setScale( 3, 3 ) --[[ @ 0]]
			f48_local4( f48_arg0.GamemodeIcon ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.Loading_MP.__onClose = function ( f56_arg0 )
	f56_arg0.loadingImageOrMovie:close() --[[ @ 0]]
	f56_arg0.LoadingElem2:close() --[[ @ 0]]
	f56_arg0.TipWidgetList:close() --[[ @ 0]]
	f56_arg0.DoubleXPIconsLeftAligned:close() --[[ @ 0]]
	f56_arg0.LoadingScreenHeader:close() --[[ @ 0]]
	f56_arg0.GamemodeIcon:close() --[[ @ 0]]
	f56_arg0.Team1PlayerList:close() --[[ @ 0]]
	f56_arg0.label:close() --[[ @ 0]]
	f56_arg0.MovieSubtitles:close() --[[ @ 0]]
	f56_arg0.PCNotifContainer:close() --[[ @ 0]]
end
 --[[ @ 0]]
