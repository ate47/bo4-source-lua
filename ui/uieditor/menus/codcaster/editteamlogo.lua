-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:51
require( "ui/uieditor/widgets/backgroundframes/genericmenuframe" ) --[[ @ 0]]
require( "x64:31590f9a531858e0" ) --[[ @ 0]]
require( "x64:fc95c465fba6c23" ) --[[ @ 0]]
require( "ui/uieditor/widgets/lobby/common/fe_buttonpanelshadercontainer" ) --[[ @ 0]]
require( "ui/uieditor/widgets/lobby/common/fe_menu_leftgraphics" ) --[[ @ 0]]
require( "ui/uieditor/widgets/lobby/lobbystreamerblackfade" ) --[[ @ 0]]

local PostLoadFunc = function ( f1_arg0, f1_arg1 )
	local f1_local0 = Engine[@"getmodel"]( Engine[@"getmodelforcontroller"]( f1_arg1 ), "TeamIdentity" ) --[[ @ 0]]
	if f1_local0 then
		f1_arg0.GenericMenuFrame.CommonHeader.subtitle.StageTitle:setText( Engine[@"toupper"]( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_3F3217BFCDBF3B46" .. Engine[@"getmodelvalue"]( Engine[@"getmodel"]( f1_local0, "team" ) ) .. "_LOGO" ) ) ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
CoD.EditTeamLogo = InheritFrom( CoD.Menu ) --[[ @ 0]]
LUI.createMenu.EditTeamLogo = function ( f2_arg0, f2_arg1 )
	local self = CoD.Menu.NewForUIEditor( "EditTeamLogo", f2_arg0 ) --[[ @ 0]]
	local f2_local1 = self --[[ @ 0]]
	self:setClass( CoD.EditTeamLogo ) --[[ @ 0]]
	self.soundSet = "ChooseDecal" --[[ @ 0]]
	self:setOwner( f2_arg0 ) --[[ @ 0]]
	self:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	self:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	self:playSound( "menu_open", f2_arg0 ) --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	
	local FEButtonPanelShaderContainer0 = CoD.FE_ButtonPanelShaderContainer.new( f2_local1, f2_arg0, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	FEButtonPanelShaderContainer0:setRGB( 0.31, 0.31, 0.31 ) --[[ @ 0]]
	self:addElement( FEButtonPanelShaderContainer0 ) --[[ @ 0]]
	self.FEButtonPanelShaderContainer0 = FEButtonPanelShaderContainer0 --[[ @ 0]]
	
	local FadeForStreamer = CoD.LobbyStreamerBlackFade.new( f2_local1, f2_arg0, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	FadeForStreamer:mergeStateConditions( {
		{
			stateName = "Transparent",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalModelValueEqualTo( "hideWorldForStreamer", 0 )
			end
		}
	} ) --[[ @ 0]]
	local BoxButtonLrgIdle = FadeForStreamer --[[ @ 0]]
	local GenericMenuFrame = FadeForStreamer.subscribeToModel --[[ @ 0]]
	local Border = Engine[@"getglobalmodel"]() --[[ @ 0]]
	GenericMenuFrame( BoxButtonLrgIdle, Border.hideWorldForStreamer, function ( f4_arg0 )
		f2_local1:updateElementState( FadeForStreamer, {
			name = "model_validation",
			menu = f2_local1,
			controller = f2_arg0,
			modelValue = f4_arg0:get(),
			modelName = "hideWorldForStreamer"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:addElement( FadeForStreamer ) --[[ @ 0]]
	self.FadeForStreamer = FadeForStreamer --[[ @ 0]]
	
	GenericMenuFrame = CoD.GenericMenuFrame.new( f2_local1, f2_arg0, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	GenericMenuFrame.CommonHeader.subtitle.StageTitle:setText( LocalizeToUpperString( @"hash_64E051F15AE3B3B8" ) ) --[[ @ 0]]
	GenericMenuFrame:subscribeToGlobalModel( f2_arg0, "LobbyRoot", "lobbyTitle", function ( model )
		local f5_local0 = model:get() --[[ @ 0]]
		if f5_local0 ~= nil then
			GenericMenuFrame.CommonHeader.subtitle.subtitle:setText( Engine[@"hash_4F9F1239CFD921FE"]( f5_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( GenericMenuFrame ) --[[ @ 0]]
	self.GenericMenuFrame = GenericMenuFrame --[[ @ 0]]
	
	BoxButtonLrgIdle = LUI.UIImage.new( 0.5, 0.5, -66, 697, 0, 0, 216, 694 ) --[[ @ 0]]
	BoxButtonLrgIdle:setAlpha( 0.45 ) --[[ @ 0]]
	BoxButtonLrgIdle:setImage( RegisterImage( @"uie_t7_menu_cac_buttonboxlrgidlefull" ) ) --[[ @ 0]]
	BoxButtonLrgIdle:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_add" ) ) --[[ @ 0]]
	BoxButtonLrgIdle:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( BoxButtonLrgIdle ) --[[ @ 0]]
	self.BoxButtonLrgIdle = BoxButtonLrgIdle --[[ @ 0]]
	
	Border = LUI.UIImage.new( 0.5, 0.5, -58, 687, 0, 0, 220, 689 ) --[[ @ 0]]
	Border:setAlpha( 0.43 ) --[[ @ 0]]
	Border:setImage( RegisterImage( @"uie_t7_menu_frontend_titlenumbrdrfull" ) ) --[[ @ 0]]
	Border:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_add" ) ) --[[ @ 0]]
	Border:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	Border:setupNineSliceShader( 6, 6 ) --[[ @ 0]]
	self:addElement( Border ) --[[ @ 0]]
	self.Border = Border --[[ @ 0]]
	
	local LogoList = LUI.UIList.new( f2_local1, f2_arg0, 10, 0, nil, true, false, false, false ) --[[ @ 0]]
	LogoList:setLeftRight( 0.5, 0.5, -762, -112 ) --[[ @ 0]]
	LogoList:setTopBottom( 0, 0, 222, 792 ) --[[ @ 0]]
	LogoList:setWidgetType( CoD.CodCasterTeamLogoButton ) --[[ @ 0]]
	LogoList:setHorizontalCount( 3 ) --[[ @ 0]]
	LogoList:setVerticalCount( 4 ) --[[ @ 0]]
	LogoList:setSpacing( 10 ) --[[ @ 0]]
	LogoList:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	LogoList:setDataSource( "TeamIdentityLogoList" ) --[[ @ 0]]
	LogoList:linkToElementModel( LogoList, "disabled", true, function ( model, f6_arg1 )
		CoD.Menu.UpdateButtonShownState( f6_arg1, f2_local1, f2_arg0, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LogoList:registerEventHandler( "gain_focus", function ( element, event )
		local f7_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f7_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f7_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f2_local1, f2_arg0, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		return f7_local0
	end ) --[[ @ 0]]
	f2_local1:AddButtonCallbackFunction( LogoList, f2_arg0, Enum[@"luibutton"][@"lui_key_xba_pscross"], "ui_confirm", function ( element, menu, controller, model )
		if not IsDisabled( element, controller ) then
			SetTeamIdentityTeamLogo( self, element, controller ) --[[ @ 0]]
			SetTeamIdentityProfileValue( self, element, controller, "icon" ) --[[ @ 0]]
			SaveShoutcasterSettings( self, element, controller ) --[[ @ 0]]
			GoBack( self, controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsDisabled( element, controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"menu/select", nil, "ui_confirm" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( LogoList ) --[[ @ 0]]
	self.LogoList = LogoList --[[ @ 0]]
	
	local LogoImageHintImage = LUI.UIImage.new( 0.5, 0.5, 87, 556, 0, 0, 219, 688 ) --[[ @ 0]]
	self:addElement( LogoImageHintImage ) --[[ @ 0]]
	self.LogoImageHintImage = LogoImageHintImage --[[ @ 0]]
	
	local FEMenuLeftGraphics = CoD.FE_Menu_LeftGraphics.new( f2_local1, f2_arg0, 0.5, 0.5, -949, -871, 0, 0, 129, 1055 ) --[[ @ 0]]
	self:addElement( FEMenuLeftGraphics ) --[[ @ 0]]
	self.FEMenuLeftGraphics = FEMenuLeftGraphics --[[ @ 0]]
	
	local LabelButton = CoD.cac_ListButtonLabel.new( f2_local1, f2_arg0, 0.5, 0.5, -17, 139, 1, 1, -438, -408 ) --[[ @ 0]]
	LabelButton:setAlpha( 0.6 ) --[[ @ 0]]
	LabelButton:setScale( 1.25, 1.25 ) --[[ @ 0]]
	self:addElement( LabelButton ) --[[ @ 0]]
	self.LabelButton = LabelButton --[[ @ 0]]
	
	LogoImageHintImage:linkToElementModel( LogoList, "ref", true, function ( model )
		local f10_local0 = model:get() --[[ @ 0]]
		if f10_local0 ~= nil then
			LogoImageHintImage:setImage( RegisterImage( f10_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	LabelButton:linkToElementModel( LogoList, "name", true, function ( model )
		local f11_local0 = model:get() --[[ @ 0]]
		if f11_local0 ~= nil then
			LabelButton.itemName:setText( Engine[@"hash_4F9F1239CFD921FE"]( f11_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:registerEventHandler( "ui_keyboard_input", function ( self, event )
		local f12_local0 = nil --[[ @ 0]]
		HandleTeamIdentityKeyboardComplete( self, self, f2_arg0, event ) --[[ @ 0]]
		if not f12_local0 then
			f12_local0 = self:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f12_local0
	end ) --[[ @ 0]]
	f2_local1:AddButtonCallbackFunction( self, f2_arg0, Enum[@"luibutton"][@"lui_key_xbb_pscircle"], nil, function ( element, menu, controller, model )
		SaveShoutcasterSettings( self, element, controller ) --[[ @ 0]]
		GoBack( self, controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xbb_pscircle"], @"menu/back", nil, nil ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	GenericMenuFrame:setModel( self.buttonModel, f2_arg0 ) --[[ @ 0]]
	if CoD.isPC then
		GenericMenuFrame.id = "GenericMenuFrame" --[[ @ 0]]
	end
	LogoList.id = "LogoList" --[[ @ 0]]
	self:processEvent( {
		name = "menu_loaded",
		controller = f2_arg0
	} ) --[[ @ 0]]
	self.__defaultFocus = LogoList --[[ @ 0]]
	if CoD.isPC and (IsKeyboard( f2_arg0 ) or self.ignoreCursor) then
		self:restoreState( f2_arg0 ) --[[ @ 0]]
	end
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f2_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.EditTeamLogo.__onClose = function ( f15_arg0 )
	f15_arg0.LogoImageHintImage:close() --[[ @ 0]]
	f15_arg0.LabelButton:close() --[[ @ 0]]
	f15_arg0.FEButtonPanelShaderContainer0:close() --[[ @ 0]]
	f15_arg0.FadeForStreamer:close() --[[ @ 0]]
	f15_arg0.GenericMenuFrame:close() --[[ @ 0]]
	f15_arg0.LogoList:close() --[[ @ 0]]
	f15_arg0.FEMenuLeftGraphics:close() --[[ @ 0]]
end
 --[[ @ 0]]
