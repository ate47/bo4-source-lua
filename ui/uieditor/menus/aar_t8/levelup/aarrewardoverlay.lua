-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:51
require( "ui/uieditor/widgets/aar_t8/rewards/aarrewardstab" ) --[[ @ 0]]
require( "ui/uieditor/widgets/footer/footercontainer_frontend_right" ) --[[ @ 0]]

CoD.AARRewardOverlay = InheritFrom( CoD.Menu ) --[[ @ 0]]
LUI.createMenu.AARRewardOverlay = function ( f1_arg0, f1_arg1 )
	local self = CoD.Menu.NewForUIEditor( "AARRewardOverlay", f1_arg0 ) --[[ @ 0]]
	local f1_local1 = self --[[ @ 0]]
	SetControllerModelValue( f1_arg0, "AAR.activeTab", CoD.AARUtility.AARTabs.AAR_REWARDS ) --[[ @ 0]]
	self:setClass( CoD.AARRewardOverlay ) --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self:setOwner( f1_arg0 ) --[[ @ 0]]
	self:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	self:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	self:playSound( "menu_open", f1_arg0 ) --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_local1:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local SceneBlur = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	SceneBlur:setAlpha( 0 ) --[[ @ 0]]
	SceneBlur:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_E2354BE557C4C7A" ) ) --[[ @ 0]]
	SceneBlur:setShaderVector( 0, 0, 0.85, 0, 0 ) --[[ @ 0]]
	self:addElement( SceneBlur ) --[[ @ 0]]
	self.SceneBlur = SceneBlur --[[ @ 0]]
	
	local Backing = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	Backing:setRGB( 0, 0, 0 ) --[[ @ 0]]
	Backing:setAlpha( 0.9 ) --[[ @ 0]]
	self:addElement( Backing ) --[[ @ 0]]
	self.Backing = Backing --[[ @ 0]]
	
	local FooterContainerFrontendRight = CoD.FooterContainer_Frontend_Right.new( f1_local1, f1_arg0, 0, 1, 0, 0, 1, 1, -48, 0 ) --[[ @ 0]]
	FooterContainerFrontendRight:registerEventHandler( "menu_loaded", function ( element, event )
		local f2_local0 = nil --[[ @ 0]]
		if element.menuLoaded then
			f2_local0 = element:menuLoaded( event ) --[[ @ 0]]
		elseif element.super.menuLoaded then
			f2_local0 = element.super:menuLoaded( event ) --[[ @ 0]]
		end
		SizeToSafeArea( element, f1_arg0 ) --[[ @ 0]]
		if not f2_local0 then
			f2_local0 = element:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f2_local0
	end ) --[[ @ 0]]
	self:addElement( FooterContainerFrontendRight ) --[[ @ 0]]
	self.FooterContainerFrontendRight = FooterContainerFrontendRight --[[ @ 0]]
	
	local RewardsTab = CoD.AARRewardsTab.new( f1_local1, f1_arg0, 0.5, 0.5, -960, 960, 0.5, 0.5, -450, 450 ) --[[ @ 0]]
	RewardsTab:mergeStateConditions( {
		{
			stateName = "Visible",
			condition = function ( menu, element, event )
				return AlwaysTrue()
			end
		}
	} ) --[[ @ 0]]
	local ZMRewardsTitle = RewardsTab --[[ @ 0]]
	local RewardsTitle = RewardsTab.subscribeToModel --[[ @ 0]]
	local f1_local8 = Engine[@"getmodelforcontroller"]( f1_arg0 ) --[[ @ 0]]
	RewardsTitle( ZMRewardsTitle, f1_local8["AAR.activeTab"], function ( f4_arg0 )
		f1_local1:updateElementState( RewardsTab, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f4_arg0:get(),
			modelName = "AAR.activeTab"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ZMRewardsTitle = RewardsTab --[[ @ 0]]
	RewardsTitle = RewardsTab.subscribeToModel --[[ @ 0]]
	f1_local8 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	RewardsTitle( ZMRewardsTitle, f1_local8["lobbyRoot.lobbyNav"], function ( f5_arg0 )
		f1_local1:updateElementState( RewardsTab, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f5_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:addElement( RewardsTab ) --[[ @ 0]]
	self.RewardsTab = RewardsTab --[[ @ 0]]
	
	RewardsTitle = LUI.UIText.new( 0.5, 0.5, -960, 960, 0, 0, 26, 77 ) --[[ @ 0]]
	RewardsTitle:setRGB( ColorSet.T8_FactionTier_InProgress.r, ColorSet.T8_FactionTier_InProgress.g, ColorSet.T8_FactionTier_InProgress.b ) --[[ @ 0]]
	RewardsTitle:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"aar/rewards" ) ) --[[ @ 0]]
	RewardsTitle:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	RewardsTitle:setLetterSpacing( 14 ) --[[ @ 0]]
	RewardsTitle:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	RewardsTitle:setAlignment( Enum[@"luialignment"][@"lui_alignment_bottom"] ) --[[ @ 0]]
	self:addElement( RewardsTitle ) --[[ @ 0]]
	self.RewardsTitle = RewardsTitle --[[ @ 0]]
	
	ZMRewardsTitle = LUI.UIText.new( 0.5, 0.5, -960, 960, 0, 0, 26, 77 ) --[[ @ 0]]
	ZMRewardsTitle:setRGB( ColorSet.T8_FactionTier_InProgress.r, ColorSet.T8_FactionTier_InProgress.g, ColorSet.T8_FactionTier_InProgress.b ) --[[ @ 0]]
	ZMRewardsTitle:setAlpha( 0 ) --[[ @ 0]]
	ZMRewardsTitle:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"aar/rewards" ) ) --[[ @ 0]]
	ZMRewardsTitle:setTTF( "skorzhen" ) --[[ @ 0]]
	ZMRewardsTitle:setLetterSpacing( 14 ) --[[ @ 0]]
	ZMRewardsTitle:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	ZMRewardsTitle:setAlignment( Enum[@"luialignment"][@"lui_alignment_bottom"] ) --[[ @ 0]]
	self:addElement( ZMRewardsTitle ) --[[ @ 0]]
	self.ZMRewardsTitle = ZMRewardsTitle --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "IsZM",
			condition = function ( menu, element, event )
				return IsZombies()
			end
		}
	} ) --[[ @ 0]]
	local f1_local9 = self --[[ @ 0]]
	f1_local8 = self.subscribeToModel --[[ @ 0]]
	local f1_local10 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local8( f1_local9, f1_local10["lobbyRoot.lobbyNav"], function ( f7_arg0 )
		f1_local1:updateElementState( self, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f7_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:appendEventHandler( "input_source_changed", function ( f8_arg0, f8_arg1 )
		f8_arg1.menu = f8_arg1.menu or f1_local1 --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f8_arg0, f1_local1, f1_arg0, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	f1_local9 = self --[[ @ 0]]
	f1_local8 = self.subscribeToModel --[[ @ 0]]
	f1_local10 = Engine[@"getmodelforcontroller"]( f1_arg0 ) --[[ @ 0]]
	f1_local8( f1_local9, f1_local10.LastInput, function ( f9_arg0, f9_arg1 )
		CoD.Menu.UpdateButtonShownState( f9_arg1, f1_local1, f1_arg0, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"luibutton"][@"lui_key_xba_pscross"], nil, function ( element, menu, controller, model )
		if not IsPC() then
			CoD.AARUtility.InitRewardsPaging( controller ) --[[ @ 0]]
			GoBack( self, controller ) --[[ @ 0]]
			return true
		elseif IsPC() and IsGamepad( controller ) then
			CoD.AARUtility.InitRewardsPaging( controller ) --[[ @ 0]]
			GoBack( self, controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsPC() then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"menu/continue", nil, nil ) --[[ @ 0]]
			return true
		elseif IsPC() and IsGamepad( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"hash_0", nil, nil ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"luibutton"][@"lui_key_xbb_pscircle"], nil, function ( element, menu, controller, model )
		if IsPC() then
			CoD.AARUtility.InitRewardsPaging( controller ) --[[ @ 0]]
			GoBack( self, controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsPC() then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xbb_pscircle"], @"menu/back", nil, nil ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"luibutton"][@"lui_key_none"], "MOUSE1", function ( element, menu, controller, model )
		CoD.AARUtility.InitRewardsPaging( controller ) --[[ @ 0]]
		GoBack( self, controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_none"], @"hash_0", nil, "MOUSE1" ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"luibutton"][@"lui_key_none"], "ui_confirm", function ( element, menu, controller, model )
		CoD.AARUtility.InitRewardsPaging( controller ) --[[ @ 0]]
		GoBack( self, controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_none"], @"hash_0", nil, "ui_confirm" ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	self.__on_menuOpened_self = function ( f18_arg0, f18_arg1, f18_arg2, f18_arg3 )
		local f18_local0 = self --[[ @ 0]]
		if IsPC() then
			CoD.PCUtility.SetupDismissTimerRewardsAAR( f18_local0, f18_arg1, f18_arg2 ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	f1_local1:addMenuOpenedCallback( self.__on_menuOpened_self ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( self, "close", function ( element )
		SetControllerModelValue( f1_arg0, "AAR.activeTab", CoD.AARUtility.AARTabs.AAR_SUMMARY ) --[[ @ 0]]
	end ) --[[ @ 0]]
	FooterContainerFrontendRight:setModel( self.buttonModel, f1_arg0 ) --[[ @ 0]]
	if CoD.isPC then
		FooterContainerFrontendRight.id = "FooterContainerFrontendRight" --[[ @ 0]]
	end
	RewardsTab.id = "RewardsTab" --[[ @ 0]]
	self:processEvent( {
		name = "menu_loaded",
		controller = f1_arg0
	} ) --[[ @ 0]]
	self.__defaultFocus = RewardsTab --[[ @ 0]]
	if CoD.isPC and (IsKeyboard( f1_arg0 ) or self.ignoreCursor) then
		self:restoreState( f1_arg0 ) --[[ @ 0]]
	end
	self.__on_close_removeOverrides = function ()
		f1_local1:removeMenuOpenedCallback( self.__on_menuOpened_self ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.AARRewardOverlay.__resetProperties = function ( f21_arg0 )
	f21_arg0.RewardsTitle:completeAnimation() --[[ @ 0]]
	f21_arg0.RewardsTab:completeAnimation() --[[ @ 0]]
	f21_arg0.ZMRewardsTitle:completeAnimation() --[[ @ 0]]
	f21_arg0.RewardsTitle:setAlpha( 1 ) --[[ @ 0]]
	f21_arg0.RewardsTab:setAlpha( 1 ) --[[ @ 0]]
	f21_arg0.ZMRewardsTitle:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.AARRewardOverlay.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f22_arg0, f22_arg1 )
			f22_arg0:__resetProperties() --[[ @ 0]]
			f22_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			local f22_local0 = function ( f23_arg0 )
				local f23_local0 = function ( f24_arg0 )
					f24_arg0:beginAnimation( 149, Enum[@"luitween"][@"luitween_ease_out"] ) --[[ @ 0]]
					f24_arg0:setAlpha( 1 ) --[[ @ 0]]
					f24_arg0:registerEventHandler( "transition_complete_keyframe", f22_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f22_arg0.RewardsTab:beginAnimation( 200 ) --[[ @ 0]]
				f22_arg0.RewardsTab:registerEventHandler( "interrupted_keyframe", f22_arg0.clipInterrupted ) --[[ @ 0]]
				f22_arg0.RewardsTab:registerEventHandler( "transition_complete_keyframe", f23_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f22_arg0.RewardsTab:completeAnimation() --[[ @ 0]]
			f22_arg0.RewardsTab:setAlpha( 0 ) --[[ @ 0]]
			f22_local0( f22_arg0.RewardsTab ) --[[ @ 0]]
			local f22_local1 = function ( f25_arg0 )
				f22_arg0.RewardsTitle:beginAnimation( 150, Enum[@"luitween"][@"luitween_ease_in"] ) --[[ @ 0]]
				f22_arg0.RewardsTitle:setAlpha( 1 ) --[[ @ 0]]
				f22_arg0.RewardsTitle:registerEventHandler( "interrupted_keyframe", f22_arg0.clipInterrupted ) --[[ @ 0]]
				f22_arg0.RewardsTitle:registerEventHandler( "transition_complete_keyframe", f22_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f22_arg0.RewardsTitle:completeAnimation() --[[ @ 0]]
			f22_arg0.RewardsTitle:setAlpha( 0 ) --[[ @ 0]]
			f22_local1( f22_arg0.RewardsTitle ) --[[ @ 0]]
			f22_arg0.ZMRewardsTitle:completeAnimation() --[[ @ 0]]
			f22_arg0.ZMRewardsTitle:setAlpha( 0 ) --[[ @ 0]]
			f22_arg0.clipFinished( f22_arg0.ZMRewardsTitle ) --[[ @ 0]]
		end
	},
	IsZM = {
		DefaultClip = function ( f26_arg0, f26_arg1 )
			f26_arg0:__resetProperties() --[[ @ 0]]
			f26_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			local f26_local0 = function ( f27_arg0 )
				local f27_local0 = function ( f28_arg0 )
					f28_arg0:beginAnimation( 149, Enum[@"luitween"][@"luitween_ease_out"] ) --[[ @ 0]]
					f28_arg0:setAlpha( 1 ) --[[ @ 0]]
					f28_arg0:registerEventHandler( "transition_complete_keyframe", f26_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f26_arg0.RewardsTab:beginAnimation( 200 ) --[[ @ 0]]
				f26_arg0.RewardsTab:registerEventHandler( "interrupted_keyframe", f26_arg0.clipInterrupted ) --[[ @ 0]]
				f26_arg0.RewardsTab:registerEventHandler( "transition_complete_keyframe", f27_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f26_arg0.RewardsTab:completeAnimation() --[[ @ 0]]
			f26_arg0.RewardsTab:setAlpha( 0 ) --[[ @ 0]]
			f26_local0( f26_arg0.RewardsTab ) --[[ @ 0]]
			f26_arg0.RewardsTitle:completeAnimation() --[[ @ 0]]
			f26_arg0.RewardsTitle:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.RewardsTitle ) --[[ @ 0]]
			local f26_local1 = function ( f29_arg0 )
				f26_arg0.ZMRewardsTitle:beginAnimation( 150 ) --[[ @ 0]]
				f26_arg0.ZMRewardsTitle:setAlpha( 1 ) --[[ @ 0]]
				f26_arg0.ZMRewardsTitle:registerEventHandler( "interrupted_keyframe", f26_arg0.clipInterrupted ) --[[ @ 0]]
				f26_arg0.ZMRewardsTitle:registerEventHandler( "transition_complete_keyframe", f26_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f26_arg0.ZMRewardsTitle:completeAnimation() --[[ @ 0]]
			f26_arg0.ZMRewardsTitle:setAlpha( 0 ) --[[ @ 0]]
			f26_local1( f26_arg0.ZMRewardsTitle ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.AARRewardOverlay.__onClose = function ( f30_arg0 )
	f30_arg0.__on_close_removeOverrides() --[[ @ 0]]
	f30_arg0.FooterContainerFrontendRight:close() --[[ @ 0]]
	f30_arg0.RewardsTab:close() --[[ @ 0]]
end
 --[[ @ 0]]
