-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:36
require( "ui/uieditor/widgets/aar_t8/levelup/aarlevelupoverlay_arrowsinternal" ) --[[ @ 0]]
require( "x64:32bf789c3c32d132" ) --[[ @ 0]]
require( "ui/uieditor/widgets/aar_t8/levelup/aarlevelupoverlay_leveluptextinternal" ) --[[ @ 0]]
require( "ui/uieditor/widgets/aar_t8/levelup/aarleveluprank" ) --[[ @ 0]]
require( "ui/uieditor/widgets/aar_t8/levelup/aarlevelupreward" ) --[[ @ 0]]
require( "ui/uieditor/widgets/aar_t8/levelup/aarxpmeter" ) --[[ @ 0]]
require( "ui/uieditor/widgets/footer/footercontainer_frontend_right" ) --[[ @ 0]]
require( "x64:24fef7f34e3f5ca0" ) --[[ @ 0]]
require( "x64:1567f2a963ddad0f" ) --[[ @ 0]]

CoD.AARLevelUpOverlay = InheritFrom( CoD.Menu ) --[[ @ 0]]
LUI.createMenu.AARLevelUpOverlay = function ( f1_arg0, f1_arg1 )
	local self = CoD.Menu.NewForUIEditor( "AARLevelUpOverlay", f1_arg0 ) --[[ @ 0]]
	local f1_local1 = self --[[ @ 0]]
	CoD.AARUtility.SetupLevelUpModels( f1_local1, f1_arg0 ) --[[ @ 0]]
	self:setClass( CoD.AARLevelUpOverlay ) --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self:setOwner( f1_arg0 ) --[[ @ 0]]
	self:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	self:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	self:playSound( "menu_open", f1_arg0 ) --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_local1:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local BlurBg = LUI.UIImage.new( 0, 0, 0, 1920, 0, 0, 0, 1080 ) --[[ @ 0]]
	BlurBg:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_E2354BE557C4C7A" ) ) --[[ @ 0]]
	BlurBg:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( BlurBg ) --[[ @ 0]]
	self.BlurBg = BlurBg --[[ @ 0]]
	
	local Backing = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	Backing:setRGB( 0, 0, 0 ) --[[ @ 0]]
	Backing:setAlpha( 0.9 ) --[[ @ 0]]
	self:addElement( Backing ) --[[ @ 0]]
	self.Backing = Backing --[[ @ 0]]
	
	local FractalGrid = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	FractalGrid:setAlpha( 0 ) --[[ @ 0]]
	FractalGrid:setImage( RegisterImage( @"uie_ui_menu_aar_levelup_fractalgrid" ) ) --[[ @ 0]]
	FractalGrid:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_tile_scroll" ) ) --[[ @ 0]]
	FractalGrid:setShaderVector( 0, 1, 1, 0, 0 ) --[[ @ 0]]
	FractalGrid:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( FractalGrid ) --[[ @ 0]]
	self.FractalGrid = FractalGrid --[[ @ 0]]
	
	local ZMSmokeBackgroundR = CoD.zm_hud_gameover_smokebackground.new( f1_local1, f1_arg0, 0.5, 0.5, 929, 1399, 0.5, 0.5, -758, -288 ) --[[ @ 0]]
	ZMSmokeBackgroundR:setAlpha( 0 ) --[[ @ 0]]
	ZMSmokeBackgroundR:setScale( 4, 3 ) --[[ @ 0]]
	self:addElement( ZMSmokeBackgroundR ) --[[ @ 0]]
	self.ZMSmokeBackgroundR = ZMSmokeBackgroundR --[[ @ 0]]
	
	local ZMSmokeBackgroundL = CoD.zm_hud_gameover_smokebackground.new( f1_local1, f1_arg0, 0.5, 0.5, -1498, -1028, 0.5, 0.5, -669.5, -199.5 ) --[[ @ 0]]
	ZMSmokeBackgroundL:setAlpha( 0 ) --[[ @ 0]]
	ZMSmokeBackgroundL:setZRot( 190 ) --[[ @ 0]]
	ZMSmokeBackgroundL:setScale( 3.5, 3 ) --[[ @ 0]]
	self:addElement( ZMSmokeBackgroundL ) --[[ @ 0]]
	self.ZMSmokeBackgroundL = ZMSmokeBackgroundL --[[ @ 0]]
	
	local FooterContainerFrontendRight = CoD.FooterContainer_Frontend_Right.new( f1_local1, f1_arg0, 0, 1, 0, 0, 1, 1, -48, 0 ) --[[ @ 0]]
	FooterContainerFrontendRight:registerEventHandler( "menu_loaded", function ( element, event )
		local f2_local0 = nil --[[ @ 0]]
		if element.menuLoaded then
			f2_local0 = element:menuLoaded( event ) --[[ @ 0]]
		elseif element.super.menuLoaded then
			f2_local0 = element.super:menuLoaded( event ) --[[ @ 0]]
		end
		SizeToSafeArea( element, f1_arg0 ) --[[ @ 0]]
		if not f2_local0 then
			f2_local0 = element:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f2_local0
	end ) --[[ @ 0]]
	self:addElement( FooterContainerFrontendRight ) --[[ @ 0]]
	self.FooterContainerFrontendRight = FooterContainerFrontendRight --[[ @ 0]]
	
	local BgElements = CoD.AARLevelUpOverlay_LevelUpBg.new( f1_local1, f1_arg0, 0, 0, 125, 1795, 0, 0, 144, 930 ) --[[ @ 0]]
	self:addElement( BgElements ) --[[ @ 0]]
	self.BgElements = BgElements --[[ @ 0]]
	
	local XpMeter = CoD.AARXpMeter.new( f1_local1, f1_arg0, 0.5, 0.5, -877, 423, 0.5, 0.5, 374, 394 ) --[[ @ 0]]
	XpMeter:subscribeToGlobalModel( f1_arg0, "AARLevelUp", nil, function ( model )
		XpMeter:setModel( model, f1_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	XpMeter:subscribeToGlobalModel( f1_arg0, "AARLevelUp", "earnedXpProgress", function ( model )
		local f4_local0 = model:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			XpMeter.EarnedXP.Meter:setShaderVector( 0, CoD.GetVectorComponentFromString( f4_local0, 1 ), CoD.GetVectorComponentFromString( f4_local0, 2 ), CoD.GetVectorComponentFromString( f4_local0, 3 ), CoD.GetVectorComponentFromString( f4_local0, 4 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	XpMeter:subscribeToGlobalModel( f1_arg0, "AARLevelUp", "earnedXpProgress", function ( model )
		local f5_local0 = model:get() --[[ @ 0]]
		if f5_local0 ~= nil then
			XpMeter.EarnedXP.MeterAdd:setShaderVector( 0, CoD.GetVectorComponentFromString( f5_local0, 1 ), CoD.GetVectorComponentFromString( f5_local0, 2 ), CoD.GetVectorComponentFromString( f5_local0, 3 ), CoD.GetVectorComponentFromString( f5_local0, 4 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	XpMeter:subscribeToGlobalModel( f1_arg0, "AARLevelUp", "earnedXpProgress", function ( model )
		local f6_local0 = model:get() --[[ @ 0]]
		if f6_local0 ~= nil then
			XpMeter.EarnedXP.MeterGlow:setShaderVector( 0, CoD.GetVectorComponentFromString( f6_local0, 1 ), CoD.GetVectorComponentFromString( f6_local0, 2 ), CoD.GetVectorComponentFromString( f6_local0, 3 ), CoD.GetVectorComponentFromString( f6_local0, 4 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	XpMeter:subscribeToGlobalModel( f1_arg0, "AARLevelUp", "previousXpProgress", function ( model )
		local f7_local0 = model:get() --[[ @ 0]]
		if f7_local0 ~= nil then
			XpMeter.PreviousXP.Meter:setShaderVector( 0, CoD.GetVectorComponentFromString( f7_local0, 1 ), CoD.GetVectorComponentFromString( f7_local0, 2 ), CoD.GetVectorComponentFromString( f7_local0, 3 ), CoD.GetVectorComponentFromString( f7_local0, 4 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	XpMeter:subscribeToGlobalModel( f1_arg0, "AARLevelUp", "previousXpProgress", function ( model )
		local f8_local0 = model:get() --[[ @ 0]]
		if f8_local0 ~= nil then
			XpMeter.PreviousXP.MeterAdd:setShaderVector( 0, CoD.GetVectorComponentFromString( f8_local0, 1 ), CoD.GetVectorComponentFromString( f8_local0, 2 ), CoD.GetVectorComponentFromString( f8_local0, 3 ), CoD.GetVectorComponentFromString( f8_local0, 4 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	XpMeter:subscribeToGlobalModel( f1_arg0, "AARLevelUp", "previousXpProgress", function ( model )
		local f9_local0 = model:get() --[[ @ 0]]
		if f9_local0 ~= nil then
			XpMeter.PreviousXP.MeterGlow:setShaderVector( 0, CoD.GetVectorComponentFromString( f9_local0, 1 ), CoD.GetVectorComponentFromString( f9_local0, 2 ), CoD.GetVectorComponentFromString( f9_local0, 3 ), CoD.GetVectorComponentFromString( f9_local0, 4 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	XpMeter:linkToElementModel( self, "xpEarnedDuringMatch", true, function ( model )
		local f10_local0 = model:get() --[[ @ 0]]
		if f10_local0 ~= nil then
			XpMeter.xpEarnedText:setText( LocalizeIntoString( @"hash_75C4E2BA06EA49A5", f10_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	XpMeter:linkToElementModel( self, "xpNeededToLevelUp", true, function ( model )
		local f11_local0 = model:get() --[[ @ 0]]
		if f11_local0 ~= nil then
			XpMeter.xpNeededText:setText( LocalizeIntoString( @"hash_42B924F206C5B4D8", f11_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( XpMeter ) --[[ @ 0]]
	self.XpMeter = XpMeter --[[ @ 0]]
	
	local DoubleXPIcon = CoD.DoubleXPIcon.new( f1_local1, f1_arg0, 0.5, 0.5, 605, 677, 0.5, 0.5, 348, 420 ) --[[ @ 0]]
	self:addElement( DoubleXPIcon ) --[[ @ 0]]
	self.DoubleXPIcon = DoubleXPIcon --[[ @ 0]]
	
	local MainCornerL = LUI.UIImage.new( 0.5, 0.5, -784, -754, 0, 0, 146, 176 ) --[[ @ 0]]
	MainCornerL:setAlpha( 0.04 ) --[[ @ 0]]
	MainCornerL:setYRot( 180 ) --[[ @ 0]]
	MainCornerL:setImage( RegisterImage( @"uie_ui_hud_notifications_bracket_topright" ) ) --[[ @ 0]]
	self:addElement( MainCornerL ) --[[ @ 0]]
	self.MainCornerL = MainCornerL --[[ @ 0]]
	
	local MainCornerR = LUI.UIImage.new( 0.5, 0.5, 756, 786, 0, 0, 145, 175 ) --[[ @ 0]]
	MainCornerR:setAlpha( 0.04 ) --[[ @ 0]]
	MainCornerR:setImage( RegisterImage( @"uie_ui_hud_notifications_bracket_topright" ) ) --[[ @ 0]]
	self:addElement( MainCornerR ) --[[ @ 0]]
	self.MainCornerR = MainCornerR --[[ @ 0]]
	
	local Reward = CoD.AARLevelUpReward.new( f1_local1, f1_arg0, 0.5, 0.5, -400, 400, 0.5, 0.5, 55.5, 335.5 ) --[[ @ 0]]
	Reward:subscribeToGlobalModel( f1_arg0, "AARLevelUp", nil, function ( model )
		Reward:setModel( model, f1_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( Reward ) --[[ @ 0]]
	self.Reward = Reward --[[ @ 0]]
	
	local ArrowL = CoD.AARLevelUpOverlay_ArrowsInternal.new( f1_local1, f1_arg0, 0.5, 0.5, -396, -372, 0, 0, 824.5, 877.5 ) --[[ @ 0]]
	self:addElement( ArrowL ) --[[ @ 0]]
	self.ArrowL = ArrowL --[[ @ 0]]
	
	local ArrowR = CoD.AARLevelUpOverlay_ArrowsInternal.new( f1_local1, f1_arg0, 0.5, 0.5, 372, 396, 0, 0, 824.5, 877.5 ) --[[ @ 0]]
	self:addElement( ArrowR ) --[[ @ 0]]
	self.ArrowR = ArrowR --[[ @ 0]]
	
	local Rank = CoD.AARLevelUpRank.new( f1_local1, f1_arg0, 0.5, 0.5, -200, 200, 0.5, 0.5, -420, -20 ) --[[ @ 0]]
	Rank:subscribeToGlobalModel( f1_arg0, "AARLevelUp", nil, function ( model )
		Rank:setModel( model, f1_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( Rank ) --[[ @ 0]]
	self.Rank = Rank --[[ @ 0]]
	
	local LevelUpText = CoD.AARLevelUpOverlay_LevelUpTextInternal.new( f1_local1, f1_arg0, 0.5, 0.5, -199.5, 200.5, 0, 0, 48.5, 108.5 ) --[[ @ 0]]
	LevelUpText:mergeStateConditions( {
		{
			stateName = "ZM",
			condition = function ( menu, element, event )
				return IsZombies()
			end
		},
		{
			stateName = "CurrentRank",
			condition = function ( menu, element, event )
				return CoD.AARUtility.IsCurrentRankStartingRank( self.LevelUpText, f1_arg0 )
			end
		}
	} ) --[[ @ 0]]
	local Rewardsound = LevelUpText --[[ @ 0]]
	local Ranksound = LevelUpText.subscribeToModel --[[ @ 0]]
	local f1_local20 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	Ranksound( Rewardsound, f1_local20["lobbyRoot.lobbyNav"], function ( f16_arg0 )
		f1_local1:updateElementState( LevelUpText, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f16_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	LevelUpText:linkToElementModel( LevelUpText, "rank", true, function ( model )
		f1_local1:updateElementState( LevelUpText, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = model:get(),
			modelName = "rank"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LevelUpText:subscribeToGlobalModel( f1_arg0, "AARLevelUp", nil, function ( model )
		LevelUpText:setModel( model, f1_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( LevelUpText ) --[[ @ 0]]
	self.LevelUpText = LevelUpText --[[ @ 0]]
	
	Ranksound = LUI.UIElement.new( 0, 0, 1013, 1045, 0, 0, 290, 322 ) --[[ @ 0]]
	Ranksound:setPlaySoundDirect( true ) --[[ @ 0]]
	self:addElement( Ranksound ) --[[ @ 0]]
	self.Ranksound = Ranksound --[[ @ 0]]
	
	Rewardsound = LUI.UIElement.new( 0, 0, 1073, 1105, 0, 0, 650, 682 ) --[[ @ 0]]
	Rewardsound:setPlaySoundDirect( true ) --[[ @ 0]]
	self:addElement( Rewardsound ) --[[ @ 0]]
	self.Rewardsound = Rewardsound --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "ZM",
			condition = function ( menu, element, event )
				return IsZombies()
			end
		}
	} ) --[[ @ 0]]
	local f1_local21 = self --[[ @ 0]]
	f1_local20 = self.subscribeToModel --[[ @ 0]]
	local f1_local22 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local20( f1_local21, f1_local22["lobbyRoot.lobbyNav"], function ( f20_arg0 )
		f1_local1:updateElementState( self, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f20_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:appendEventHandler( "input_source_changed", function ( f21_arg0, f21_arg1 )
		f21_arg1.menu = f21_arg1.menu or f1_local1 --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f21_arg0, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	f1_local21 = self --[[ @ 0]]
	f1_local20 = self.subscribeToModel --[[ @ 0]]
	f1_local22 = Engine[@"GetModelForController"]( f1_arg0 ) --[[ @ 0]]
	f1_local20( f1_local21, f1_local22.LastInput, function ( f22_arg0, f22_arg1 )
		CoD.Menu.UpdateButtonShownState( f22_arg1, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], nil, function ( element, menu, controller, model )
		if not IsPC() then
			CoD.AARUtility.CloseLevelUpOverlay( menu, controller ) --[[ @ 0]]
			PlaySoundAlias( "uin_toggle_generic" ) --[[ @ 0]]
			return true
		elseif IsPC() and IsGamepad( controller ) then
			CoD.AARUtility.CloseLevelUpOverlay( menu, controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsPC() then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_66393FF34EA56966", nil, nil ) --[[ @ 0]]
			return true
		elseif IsPC() and IsGamepad( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_0", nil, nil ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"], nil, function ( element, menu, controller, model )
		if IsPC() then
			CoD.AARUtility.CloseLevelUpOverlay( menu, controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsPC() then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"], @"hash_370A9FDC87CD3D48", nil, nil ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], "MOUSE1", function ( element, menu, controller, model )
		CoD.AARUtility.CloseLevelUpOverlay( menu, controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], @"hash_0", nil, "MOUSE1" ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], "ui_confirm", function ( element, menu, controller, model )
		CoD.AARUtility.CloseLevelUpOverlay( menu, controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], @"hash_0", nil, "ui_confirm" ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	FooterContainerFrontendRight:setModel( self.buttonModel, f1_arg0 ) --[[ @ 0]]
	if CoD.isPC then
		FooterContainerFrontendRight.id = "FooterContainerFrontendRight" --[[ @ 0]]
	end
	self:processEvent( {
		name = "menu_loaded",
		controller = f1_arg0
	} ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg0 ) --[[ @ 0]]
	end
	
	f1_local20 = self --[[ @ 0]]
	CoD.AARUtility.AnimateRankXpBar( f1_local1, f1_arg0 ) --[[ @ 0]]
	return self
end
 --[[ @ 0]]
CoD.AARLevelUpOverlay.__resetProperties = function ( f31_arg0 )
	f31_arg0.LevelUpText:completeAnimation() --[[ @ 0]]
	f31_arg0.BgElements:completeAnimation() --[[ @ 0]]
	f31_arg0.Rank:completeAnimation() --[[ @ 0]]
	f31_arg0.Reward:completeAnimation() --[[ @ 0]]
	f31_arg0.DoubleXPIcon:completeAnimation() --[[ @ 0]]
	f31_arg0.XpMeter:completeAnimation() --[[ @ 0]]
	f31_arg0.ArrowR:completeAnimation() --[[ @ 0]]
	f31_arg0.ArrowL:completeAnimation() --[[ @ 0]]
	f31_arg0.MainCornerR:completeAnimation() --[[ @ 0]]
	f31_arg0.MainCornerL:completeAnimation() --[[ @ 0]]
	f31_arg0.FractalGrid:completeAnimation() --[[ @ 0]]
	f31_arg0.Backing:completeAnimation() --[[ @ 0]]
	f31_arg0.Ranksound:completeAnimation() --[[ @ 0]]
	f31_arg0.Rewardsound:completeAnimation() --[[ @ 0]]
	f31_arg0.ZMSmokeBackgroundR:completeAnimation() --[[ @ 0]]
	f31_arg0.ZMSmokeBackgroundL:completeAnimation() --[[ @ 0]]
	f31_arg0.LevelUpText:setAlpha( 1 ) --[[ @ 0]]
	f31_arg0.BgElements:setAlpha( 1 ) --[[ @ 0]]
	f31_arg0.Rank:setAlpha( 1 ) --[[ @ 0]]
	f31_arg0.Reward:setAlpha( 1 ) --[[ @ 0]]
	f31_arg0.DoubleXPIcon:setAlpha( 1 ) --[[ @ 0]]
	f31_arg0.XpMeter:setAlpha( 1 ) --[[ @ 0]]
	f31_arg0.ArrowR:setAlpha( 1 ) --[[ @ 0]]
	f31_arg0.ArrowL:setAlpha( 1 ) --[[ @ 0]]
	f31_arg0.MainCornerR:setAlpha( 0.04 ) --[[ @ 0]]
	f31_arg0.MainCornerL:setAlpha( 0.04 ) --[[ @ 0]]
	f31_arg0.FractalGrid:setAlpha( 0 ) --[[ @ 0]]
	f31_arg0.Backing:setAlpha( 0.9 ) --[[ @ 0]]
	f31_arg0.ZMSmokeBackgroundR:setAlpha( 0 ) --[[ @ 0]]
	f31_arg0.ZMSmokeBackgroundL:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.AARLevelUpOverlay.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f32_arg0, f32_arg1 )
			f32_arg0:__resetProperties() --[[ @ 0]]
			f32_arg0:setupElementClipCounter( 14 ) --[[ @ 0]]
			local f32_local0 = function ( f33_arg0 )
				f32_arg0.Backing:beginAnimation( 100 ) --[[ @ 0]]
				f32_arg0.Backing:setAlpha( 0.9 ) --[[ @ 0]]
				f32_arg0.Backing:registerEventHandler( "interrupted_keyframe", f32_arg0.clipInterrupted ) --[[ @ 0]]
				f32_arg0.Backing:registerEventHandler( "transition_complete_keyframe", f32_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f32_arg0.Backing:completeAnimation() --[[ @ 0]]
			f32_arg0.Backing:setAlpha( 0.5 ) --[[ @ 0]]
			f32_local0( f32_arg0.Backing ) --[[ @ 0]]
			f32_arg0.FractalGrid:completeAnimation() --[[ @ 0]]
			f32_arg0.FractalGrid:setAlpha( 0 ) --[[ @ 0]]
			f32_arg0.clipFinished( f32_arg0.FractalGrid ) --[[ @ 0]]
			local f32_local1 = function ( f34_arg0 )
				f32_arg0.BgElements:beginAnimation( 100 ) --[[ @ 0]]
				f32_arg0.BgElements:setAlpha( 1 ) --[[ @ 0]]
				f32_arg0.BgElements:registerEventHandler( "interrupted_keyframe", f32_arg0.clipInterrupted ) --[[ @ 0]]
				f32_arg0.BgElements:registerEventHandler( "transition_complete_keyframe", f32_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f32_arg0.BgElements:completeAnimation() --[[ @ 0]]
			f32_arg0.BgElements:setAlpha( 0 ) --[[ @ 0]]
			f32_local1( f32_arg0.BgElements ) --[[ @ 0]]
			local f32_local2 = function ( f35_arg0 )
				local f35_local0 = function ( f36_arg0 )
					f36_arg0:beginAnimation( 99, Enum[@"hash_1F50FFF429AB1890"][@"hash_66F6186B702830BC"] ) --[[ @ 0]]
					f36_arg0:setAlpha( 1 ) --[[ @ 0]]
					f36_arg0:registerEventHandler( "transition_complete_keyframe", f32_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f32_arg0.XpMeter:beginAnimation( 300 ) --[[ @ 0]]
				f32_arg0.XpMeter:registerEventHandler( "interrupted_keyframe", f32_arg0.clipInterrupted ) --[[ @ 0]]
				f32_arg0.XpMeter:registerEventHandler( "transition_complete_keyframe", f35_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f32_arg0.XpMeter:completeAnimation() --[[ @ 0]]
			f32_arg0.XpMeter:setAlpha( 0 ) --[[ @ 0]]
			f32_local2( f32_arg0.XpMeter ) --[[ @ 0]]
			local f32_local3 = function ( f37_arg0 )
				local f37_local0 = function ( f38_arg0 )
					f38_arg0:beginAnimation( 99, Enum[@"hash_1F50FFF429AB1890"][@"hash_66F6186B702830BC"] ) --[[ @ 0]]
					f38_arg0:setAlpha( 1 ) --[[ @ 0]]
					f38_arg0:registerEventHandler( "transition_complete_keyframe", f32_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f32_arg0.DoubleXPIcon:beginAnimation( 300 ) --[[ @ 0]]
				f32_arg0.DoubleXPIcon:registerEventHandler( "interrupted_keyframe", f32_arg0.clipInterrupted ) --[[ @ 0]]
				f32_arg0.DoubleXPIcon:registerEventHandler( "transition_complete_keyframe", f37_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f32_arg0.DoubleXPIcon:completeAnimation() --[[ @ 0]]
			f32_arg0.DoubleXPIcon:setAlpha( 0 ) --[[ @ 0]]
			f32_local3( f32_arg0.DoubleXPIcon ) --[[ @ 0]]
			local f32_local4 = function ( f39_arg0 )
				local f39_local0 = function ( f40_arg0 )
					f40_arg0:beginAnimation( 100 ) --[[ @ 0]]
					f40_arg0:setAlpha( 0.04 ) --[[ @ 0]]
					f40_arg0:registerEventHandler( "transition_complete_keyframe", f32_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f32_arg0.MainCornerL:beginAnimation( 100 ) --[[ @ 0]]
				f32_arg0.MainCornerL:registerEventHandler( "interrupted_keyframe", f32_arg0.clipInterrupted ) --[[ @ 0]]
				f32_arg0.MainCornerL:registerEventHandler( "transition_complete_keyframe", f39_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f32_arg0.MainCornerL:completeAnimation() --[[ @ 0]]
			f32_arg0.MainCornerL:setAlpha( 0 ) --[[ @ 0]]
			f32_local4( f32_arg0.MainCornerL ) --[[ @ 0]]
			local f32_local5 = function ( f41_arg0 )
				local f41_local0 = function ( f42_arg0 )
					f42_arg0:beginAnimation( 100 ) --[[ @ 0]]
					f42_arg0:setAlpha( 0.04 ) --[[ @ 0]]
					f42_arg0:registerEventHandler( "transition_complete_keyframe", f32_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f32_arg0.MainCornerR:beginAnimation( 100 ) --[[ @ 0]]
				f32_arg0.MainCornerR:registerEventHandler( "interrupted_keyframe", f32_arg0.clipInterrupted ) --[[ @ 0]]
				f32_arg0.MainCornerR:registerEventHandler( "transition_complete_keyframe", f41_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f32_arg0.MainCornerR:completeAnimation() --[[ @ 0]]
			f32_arg0.MainCornerR:setAlpha( 0 ) --[[ @ 0]]
			f32_local5( f32_arg0.MainCornerR ) --[[ @ 0]]
			local f32_local6 = function ( f43_arg0 )
				local f43_local0 = function ( f44_arg0 )
					f44_arg0:beginAnimation( 100 ) --[[ @ 0]]
					f44_arg0:setAlpha( 1 ) --[[ @ 0]]
					f44_arg0:registerEventHandler( "transition_complete_keyframe", f32_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f32_arg0.Reward:beginAnimation( 200 ) --[[ @ 0]]
				f32_arg0.Reward:registerEventHandler( "interrupted_keyframe", f32_arg0.clipInterrupted ) --[[ @ 0]]
				f32_arg0.Reward:registerEventHandler( "transition_complete_keyframe", f43_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f32_arg0.Reward:completeAnimation() --[[ @ 0]]
			f32_arg0.Reward:setAlpha( 0 ) --[[ @ 0]]
			f32_local6( f32_arg0.Reward ) --[[ @ 0]]
			local f32_local7 = function ( f45_arg0 )
				local f45_local0 = function ( f46_arg0 )
					f46_arg0:beginAnimation( 99, Enum[@"hash_1F50FFF429AB1890"][@"hash_15193EA7825DC097"] ) --[[ @ 0]]
					f46_arg0:setAlpha( 1 ) --[[ @ 0]]
					f46_arg0:registerEventHandler( "transition_complete_keyframe", f32_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f32_arg0.ArrowL:beginAnimation( 250 ) --[[ @ 0]]
				f32_arg0.ArrowL:registerEventHandler( "interrupted_keyframe", f32_arg0.clipInterrupted ) --[[ @ 0]]
				f32_arg0.ArrowL:registerEventHandler( "transition_complete_keyframe", f45_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f32_arg0.ArrowL:completeAnimation() --[[ @ 0]]
			f32_arg0.ArrowL:setAlpha( 0 ) --[[ @ 0]]
			f32_local7( f32_arg0.ArrowL ) --[[ @ 0]]
			local f32_local8 = function ( f47_arg0 )
				local f47_local0 = function ( f48_arg0 )
					f48_arg0:beginAnimation( 99, Enum[@"hash_1F50FFF429AB1890"][@"hash_15193EA7825DC097"] ) --[[ @ 0]]
					f48_arg0:setAlpha( 1 ) --[[ @ 0]]
					f48_arg0:registerEventHandler( "transition_complete_keyframe", f32_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f32_arg0.ArrowR:beginAnimation( 250 ) --[[ @ 0]]
				f32_arg0.ArrowR:registerEventHandler( "interrupted_keyframe", f32_arg0.clipInterrupted ) --[[ @ 0]]
				f32_arg0.ArrowR:registerEventHandler( "transition_complete_keyframe", f47_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f32_arg0.ArrowR:completeAnimation() --[[ @ 0]]
			f32_arg0.ArrowR:setAlpha( 0 ) --[[ @ 0]]
			f32_local8( f32_arg0.ArrowR ) --[[ @ 0]]
			local f32_local9 = function ( f49_arg0 )
				local f49_local0 = function ( f50_arg0 )
					f50_arg0:beginAnimation( 100 ) --[[ @ 0]]
					f50_arg0:setAlpha( 1 ) --[[ @ 0]]
					f50_arg0:registerEventHandler( "transition_complete_keyframe", f32_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f32_arg0.Rank:beginAnimation( 50 ) --[[ @ 0]]
				f32_arg0.Rank:registerEventHandler( "interrupted_keyframe", f32_arg0.clipInterrupted ) --[[ @ 0]]
				f32_arg0.Rank:registerEventHandler( "transition_complete_keyframe", f49_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f32_arg0.Rank:completeAnimation() --[[ @ 0]]
			f32_arg0.Rank:setAlpha( 0 ) --[[ @ 0]]
			f32_local9( f32_arg0.Rank ) --[[ @ 0]]
			local f32_local10 = function ( f51_arg0 )
				f32_arg0.LevelUpText:beginAnimation( 100, Enum[@"hash_1F50FFF429AB1890"][@"hash_2053CEB9A0427197"] ) --[[ @ 0]]
				f32_arg0.LevelUpText:setAlpha( 1 ) --[[ @ 0]]
				f32_arg0.LevelUpText:registerEventHandler( "interrupted_keyframe", f32_arg0.clipInterrupted ) --[[ @ 0]]
				f32_arg0.LevelUpText:registerEventHandler( "transition_complete_keyframe", f32_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f32_arg0.LevelUpText:completeAnimation() --[[ @ 0]]
			f32_arg0.LevelUpText:setAlpha( 0 ) --[[ @ 0]]
			f32_local10( f32_arg0.LevelUpText ) --[[ @ 0]]
			f32_arg0.Ranksound:beginAnimation( 100 ) --[[ @ 0]]
			f32_arg0.Ranksound:registerEventHandler( "interrupted_keyframe", f32_arg0.clipInterrupted ) --[[ @ 0]]
			f32_arg0.Ranksound:registerEventHandler( "transition_complete_keyframe", function ( element, event )
				element:playSound( "uin_wz_aar_box", f32_arg1 ) --[[ @ 0]]
				f32_arg0.clipFinished( element, event ) --[[ @ 0]]
			end ) --[[ @ 0]]
			f32_arg0.Rewardsound:beginAnimation( 1000 ) --[[ @ 0]]
			f32_arg0.Rewardsound:registerEventHandler( "interrupted_keyframe", f32_arg0.clipInterrupted ) --[[ @ 0]]
			f32_arg0.Rewardsound:registerEventHandler( "transition_complete_keyframe", function ( element, event )
				element:playSound( "uin_wz_aar_challenge_complete", f32_arg1 ) --[[ @ 0]]
				f32_arg0.clipFinished( element, event ) --[[ @ 0]]
			end ) --[[ @ 0]]
		end
	},
	ZM = {
		DefaultClip = function ( f54_arg0, f54_arg1 )
			f54_arg0:__resetProperties() --[[ @ 0]]
			f54_arg0:setupElementClipCounter( 14 ) --[[ @ 0]]
			local f54_local0 = function ( f55_arg0 )
				f54_arg0.Backing:beginAnimation( 100 ) --[[ @ 0]]
				f54_arg0.Backing:setAlpha( 0.9 ) --[[ @ 0]]
				f54_arg0.Backing:registerEventHandler( "interrupted_keyframe", f54_arg0.clipInterrupted ) --[[ @ 0]]
				f54_arg0.Backing:registerEventHandler( "transition_complete_keyframe", f54_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f54_arg0.Backing:completeAnimation() --[[ @ 0]]
			f54_arg0.Backing:setAlpha( 0.5 ) --[[ @ 0]]
			f54_local0( f54_arg0.Backing ) --[[ @ 0]]
			f54_arg0.FractalGrid:completeAnimation() --[[ @ 0]]
			f54_arg0.FractalGrid:setAlpha( 0 ) --[[ @ 0]]
			f54_arg0.clipFinished( f54_arg0.FractalGrid ) --[[ @ 0]]
			local f54_local1 = function ( f56_arg0 )
				f54_arg0.ZMSmokeBackgroundR:beginAnimation( 100 ) --[[ @ 0]]
				f54_arg0.ZMSmokeBackgroundR:setAlpha( 0.03 ) --[[ @ 0]]
				f54_arg0.ZMSmokeBackgroundR:registerEventHandler( "interrupted_keyframe", f54_arg0.clipInterrupted ) --[[ @ 0]]
				f54_arg0.ZMSmokeBackgroundR:registerEventHandler( "transition_complete_keyframe", f54_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f54_arg0.ZMSmokeBackgroundR:completeAnimation() --[[ @ 0]]
			f54_arg0.ZMSmokeBackgroundR:setAlpha( 0 ) --[[ @ 0]]
			f54_local1( f54_arg0.ZMSmokeBackgroundR ) --[[ @ 0]]
			local f54_local2 = function ( f57_arg0 )
				f54_arg0.ZMSmokeBackgroundL:beginAnimation( 100 ) --[[ @ 0]]
				f54_arg0.ZMSmokeBackgroundL:setAlpha( 0.02 ) --[[ @ 0]]
				f54_arg0.ZMSmokeBackgroundL:registerEventHandler( "interrupted_keyframe", f54_arg0.clipInterrupted ) --[[ @ 0]]
				f54_arg0.ZMSmokeBackgroundL:registerEventHandler( "transition_complete_keyframe", f54_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f54_arg0.ZMSmokeBackgroundL:completeAnimation() --[[ @ 0]]
			f54_arg0.ZMSmokeBackgroundL:setAlpha( 0 ) --[[ @ 0]]
			f54_local2( f54_arg0.ZMSmokeBackgroundL ) --[[ @ 0]]
			f54_arg0.BgElements:completeAnimation() --[[ @ 0]]
			f54_arg0.BgElements:setAlpha( 0 ) --[[ @ 0]]
			f54_arg0.clipFinished( f54_arg0.BgElements ) --[[ @ 0]]
			local f54_local3 = function ( f58_arg0 )
				local f58_local0 = function ( f59_arg0 )
					f59_arg0:beginAnimation( 99, Enum[@"hash_1F50FFF429AB1890"][@"hash_66F6186B702830BC"] ) --[[ @ 0]]
					f59_arg0:setAlpha( 1 ) --[[ @ 0]]
					f59_arg0:registerEventHandler( "transition_complete_keyframe", f54_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f54_arg0.XpMeter:beginAnimation( 300 ) --[[ @ 0]]
				f54_arg0.XpMeter:registerEventHandler( "interrupted_keyframe", f54_arg0.clipInterrupted ) --[[ @ 0]]
				f54_arg0.XpMeter:registerEventHandler( "transition_complete_keyframe", f58_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f54_arg0.XpMeter:completeAnimation() --[[ @ 0]]
			f54_arg0.XpMeter:setAlpha( 0 ) --[[ @ 0]]
			f54_local3( f54_arg0.XpMeter ) --[[ @ 0]]
			local f54_local4 = function ( f60_arg0 )
				local f60_local0 = function ( f61_arg0 )
					f61_arg0:beginAnimation( 99, Enum[@"hash_1F50FFF429AB1890"][@"hash_66F6186B702830BC"] ) --[[ @ 0]]
					f61_arg0:setAlpha( 1 ) --[[ @ 0]]
					f61_arg0:registerEventHandler( "transition_complete_keyframe", f54_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f54_arg0.DoubleXPIcon:beginAnimation( 300 ) --[[ @ 0]]
				f54_arg0.DoubleXPIcon:registerEventHandler( "interrupted_keyframe", f54_arg0.clipInterrupted ) --[[ @ 0]]
				f54_arg0.DoubleXPIcon:registerEventHandler( "transition_complete_keyframe", f60_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f54_arg0.DoubleXPIcon:completeAnimation() --[[ @ 0]]
			f54_arg0.DoubleXPIcon:setAlpha( 0 ) --[[ @ 0]]
			f54_local4( f54_arg0.DoubleXPIcon ) --[[ @ 0]]
			f54_arg0.MainCornerL:completeAnimation() --[[ @ 0]]
			f54_arg0.MainCornerL:setAlpha( 0 ) --[[ @ 0]]
			f54_arg0.clipFinished( f54_arg0.MainCornerL ) --[[ @ 0]]
			f54_arg0.MainCornerR:completeAnimation() --[[ @ 0]]
			f54_arg0.MainCornerR:setAlpha( 0 ) --[[ @ 0]]
			f54_arg0.clipFinished( f54_arg0.MainCornerR ) --[[ @ 0]]
			local f54_local5 = function ( f62_arg0 )
				local f62_local0 = function ( f63_arg0 )
					f63_arg0:beginAnimation( 100 ) --[[ @ 0]]
					f63_arg0:setAlpha( 1 ) --[[ @ 0]]
					f63_arg0:registerEventHandler( "transition_complete_keyframe", f54_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f54_arg0.Reward:beginAnimation( 200 ) --[[ @ 0]]
				f54_arg0.Reward:registerEventHandler( "interrupted_keyframe", f54_arg0.clipInterrupted ) --[[ @ 0]]
				f54_arg0.Reward:registerEventHandler( "transition_complete_keyframe", f62_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f54_arg0.Reward:completeAnimation() --[[ @ 0]]
			f54_arg0.Reward:setAlpha( 0 ) --[[ @ 0]]
			f54_local5( f54_arg0.Reward ) --[[ @ 0]]
			f54_arg0.ArrowL:completeAnimation() --[[ @ 0]]
			f54_arg0.ArrowL:setAlpha( 0 ) --[[ @ 0]]
			f54_arg0.clipFinished( f54_arg0.ArrowL ) --[[ @ 0]]
			f54_arg0.ArrowR:completeAnimation() --[[ @ 0]]
			f54_arg0.ArrowR:setAlpha( 0 ) --[[ @ 0]]
			f54_arg0.clipFinished( f54_arg0.ArrowR ) --[[ @ 0]]
			local f54_local6 = function ( f64_arg0 )
				local f64_local0 = function ( f65_arg0 )
					f65_arg0:beginAnimation( 100 ) --[[ @ 0]]
					f65_arg0:setAlpha( 1 ) --[[ @ 0]]
					f65_arg0:registerEventHandler( "transition_complete_keyframe", f54_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f54_arg0.Rank:beginAnimation( 50 ) --[[ @ 0]]
				f54_arg0.Rank:registerEventHandler( "interrupted_keyframe", f54_arg0.clipInterrupted ) --[[ @ 0]]
				f54_arg0.Rank:registerEventHandler( "transition_complete_keyframe", f64_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f54_arg0.Rank:completeAnimation() --[[ @ 0]]
			f54_arg0.Rank:setAlpha( 0 ) --[[ @ 0]]
			f54_local6( f54_arg0.Rank ) --[[ @ 0]]
			local f54_local7 = function ( f66_arg0 )
				f54_arg0.LevelUpText:beginAnimation( 100, Enum[@"hash_1F50FFF429AB1890"][@"hash_2053CEB9A0427197"] ) --[[ @ 0]]
				f54_arg0.LevelUpText:setAlpha( 1 ) --[[ @ 0]]
				f54_arg0.LevelUpText:registerEventHandler( "interrupted_keyframe", f54_arg0.clipInterrupted ) --[[ @ 0]]
				f54_arg0.LevelUpText:registerEventHandler( "transition_complete_keyframe", f54_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f54_arg0.LevelUpText:completeAnimation() --[[ @ 0]]
			f54_arg0.LevelUpText:setAlpha( 0 ) --[[ @ 0]]
			f54_local7( f54_arg0.LevelUpText ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.AARLevelUpOverlay.__onClose = function ( f67_arg0 )
	f67_arg0.ZMSmokeBackgroundR:close() --[[ @ 0]]
	f67_arg0.ZMSmokeBackgroundL:close() --[[ @ 0]]
	f67_arg0.FooterContainerFrontendRight:close() --[[ @ 0]]
	f67_arg0.BgElements:close() --[[ @ 0]]
	f67_arg0.XpMeter:close() --[[ @ 0]]
	f67_arg0.DoubleXPIcon:close() --[[ @ 0]]
	f67_arg0.Reward:close() --[[ @ 0]]
	f67_arg0.ArrowL:close() --[[ @ 0]]
	f67_arg0.ArrowR:close() --[[ @ 0]]
	f67_arg0.Rank:close() --[[ @ 0]]
	f67_arg0.LevelUpText:close() --[[ @ 0]]
end
 --[[ @ 0]]
