-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:51
require( "ui/uieditor/widgets/backgroundframes/genericmenuframe" ) --[[ @ 0]]
require( "x64:471d2a0ed724628e" ) --[[ @ 0]]
require( "x64:149d8f176add71c" ) --[[ @ 0]]
require( "ui/uieditor/widgets/playercard/selfidentitybadge" ) --[[ @ 0]]

CoD.EmblemSelect = InheritFrom( CoD.Menu ) --[[ @ 0]]
LUI.createMenu.EmblemSelect = function ( f1_arg0, f1_arg1 )
	local self = CoD.Menu.NewForUIEditor( "EmblemSelect", f1_arg0 ) --[[ @ 0]]
	local f1_local1 = self --[[ @ 0]]
	CoD.BaseUtility.SetPropertiesFromUserData( self, f1_arg1 ) --[[ @ 0]]
	CoD.CraftUtility.ClearEmblemColorList() --[[ @ 0]]
	self:setClass( CoD.EmblemSelect ) --[[ @ 0]]
	self.soundSet = "FrontendMain" --[[ @ 0]]
	self:setOwner( f1_arg0 ) --[[ @ 0]]
	self:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	self:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	self:playSound( "menu_open", f1_arg0 ) --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_local1:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local backing = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	backing:setRGB( 0, 0, 0 ) --[[ @ 0]]
	backing:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_E2354BE557C4C7A" ) ) --[[ @ 0]]
	backing:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( backing ) --[[ @ 0]]
	self.backing = backing --[[ @ 0]]
	
	local BackgroundImage = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	BackgroundImage:setAlpha( 0.85 ) --[[ @ 0]]
	BackgroundImage:setImage( RegisterImage( @"uie_fe_cp_background" ) ) --[[ @ 0]]
	self:addElement( BackgroundImage ) --[[ @ 0]]
	self.BackgroundImage = BackgroundImage --[[ @ 0]]
	
	local MenuFrame = CoD.GenericMenuFrame.new( f1_local1, f1_arg0, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	MenuFrame.CommonHeader.subtitle.StageTitle:setText( LocalizeToUpperString( @"hash_74335B0D906D9B56" ) ) --[[ @ 0]]
	MenuFrame:subscribeToGlobalModel( f1_arg0, "LobbyRoot", "lobbyTitle", function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			MenuFrame.CommonHeader.subtitle.subtitle:setText( Engine[@"hash_4F9F1239CFD921FE"]( f2_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( MenuFrame ) --[[ @ 0]]
	self.MenuFrame = MenuFrame --[[ @ 0]]
	
	local ListFrame = LUI.UIFrame.new( f1_local1, f1_arg0, 0, 0, false ) --[[ @ 0]]
	ListFrame:setLeftRight( 0.5, 0.5, -960, 960 ) --[[ @ 0]]
	ListFrame:setTopBottom( 0, 0, 0, 1080 ) --[[ @ 0]]
	self:addElement( ListFrame ) --[[ @ 0]]
	self.ListFrame = ListFrame --[[ @ 0]]
	
	local SelfIdentityBadge = CoD.SelfIdentityBadge.new( f1_local1, f1_arg0, 0.5, 0.5, 573, 904, 0, 0, 0, 65 ) --[[ @ 0]]
	SelfIdentityBadge:mergeStateConditions( {
		{
			stateName = "Invisible",
			condition = function ( menu, element, event )
				return IsEmblemEditor( f1_arg0 )
			end
		}
	} ) --[[ @ 0]]
	SelfIdentityBadge:subscribeToGlobalModel( f1_arg0, "PerController", "identityBadge", function ( model )
		SelfIdentityBadge:setModel( model, f1_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( SelfIdentityBadge ) --[[ @ 0]]
	self.SelfIdentityBadge = SelfIdentityBadge --[[ @ 0]]
	
	local EmblemSelectSafeAreaContainer = CoD.EmblemSelectSafeAreaContainer.new( f1_local1, f1_arg0, 0, 0, 0, 1920, 0, 0, 0, 1080 ) --[[ @ 0]]
	self:addElement( EmblemSelectSafeAreaContainer ) --[[ @ 0]]
	self.EmblemSelectSafeAreaContainer = EmblemSelectSafeAreaContainer --[[ @ 0]]
	
	local CommonIdentityWidgetStreamlinedSafeAreaContainer = CoD.CommonIdentityWidgetStreamlinedSafeAreaContainer.new( f1_local1, f1_arg0, 0, 0, 0, 1920, 0, 0, 0, 1080 ) --[[ @ 0]]
	CommonIdentityWidgetStreamlinedSafeAreaContainer:registerEventHandler( "menu_loaded", function ( element, event )
		local f5_local0 = nil --[[ @ 0]]
		if element.menuLoaded then
			f5_local0 = element:menuLoaded( event ) --[[ @ 0]]
		elseif element.super.menuLoaded then
			f5_local0 = element.super:menuLoaded( event ) --[[ @ 0]]
		end
		SizeToSafeArea( element, f1_arg0 ) --[[ @ 0]]
		if not f5_local0 then
			f5_local0 = element:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f5_local0
	end ) --[[ @ 0]]
	self:addElement( CommonIdentityWidgetStreamlinedSafeAreaContainer ) --[[ @ 0]]
	self.CommonIdentityWidgetStreamlinedSafeAreaContainer = CommonIdentityWidgetStreamlinedSafeAreaContainer --[[ @ 0]]
	
	ListFrame:linkToElementModel( EmblemSelectSafeAreaContainer.CommonTabBar.Tabs.grid, "frameWidget", true, function ( model )
		local f6_local0 = model:get() --[[ @ 0]]
		if f6_local0 ~= nil then
			ListFrame:changeFrameWidget( f6_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:registerEventHandler( "occlusion_change", function ( self, event )
		local f7_local0 = nil --[[ @ 0]]
		if self.OcclusionChange then
			f7_local0 = self:OcclusionChange( event ) --[[ @ 0]]
		elseif self.super.OcclusionChange then
			f7_local0 = self.super:OcclusionChange( event ) --[[ @ 0]]
		end
		CoD.CraftUtility.SetSlotCustomizationType( f1_arg0, Enum[@"customizationtype"][@"customization_type_emblem"] ) --[[ @ 0]]
		if not f7_local0 then
			f7_local0 = self:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f7_local0
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"luibutton"][@"lui_key_xbb_pscircle"], nil, function ( element, menu, controller, model )
		if MenuPropertyIsTrue( menu, "_selectGroupEmblem" ) then
			CoD.CraftUtility.ClearEmblem() --[[ @ 0]]
			GoBack( self, controller ) --[[ @ 0]]
			UploadStats( self, controller ) --[[ @ 0]]
			return true
		else
			GoBack( self, controller ) --[[ @ 0]]
			UploadStats( self, controller ) --[[ @ 0]]
			return true
		end
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xbb_pscircle"], @"menu/back", nil, nil ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"luibutton"][@"lui_key_start"], nil, function ( element, menu, controller, model )
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_start"], @"hash_0", nil, nil ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( self, "close", function ( element )
		CoD.CraftUtility.EmblemSelect_Back( self, element, f1_arg0 ) --[[ @ 0]]
		SendClientScriptMenuChangeNotify( f1_arg0, f1_local1, false ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self.__on_menuOpened_self = function ( f13_arg0, f13_arg1, f13_arg2, f13_arg3 )
		local f13_local0 = self --[[ @ 0]]
		SendClientScriptMenuChangeNotify( f13_arg1, f13_arg2, true ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	f1_local1:addMenuOpenedCallback( self.__on_menuOpened_self ) --[[ @ 0]]
	MenuFrame:setModel( self.buttonModel, f1_arg0 ) --[[ @ 0]]
	if CoD.isPC then
		MenuFrame.id = "MenuFrame" --[[ @ 0]]
	end
	ListFrame.id = "ListFrame" --[[ @ 0]]
	SelfIdentityBadge.id = "SelfIdentityBadge" --[[ @ 0]]
	EmblemSelectSafeAreaContainer.id = "EmblemSelectSafeAreaContainer" --[[ @ 0]]
	self:processEvent( {
		name = "menu_loaded",
		controller = f1_arg0
	} ) --[[ @ 0]]
	self.__defaultFocus = ListFrame --[[ @ 0]]
	if CoD.isPC and (IsKeyboard( f1_arg0 ) or self.ignoreCursor) then
		self:restoreState( f1_arg0 ) --[[ @ 0]]
	end
	self.__on_close_removeOverrides = function ()
		f1_local1:removeMenuOpenedCallback( self.__on_menuOpened_self ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg0 ) --[[ @ 0]]
	end
	
	local f1_local9 = self --[[ @ 0]]
	SizeToSafeArea( EmblemSelectSafeAreaContainer, f1_arg0 ) --[[ @ 0]]
	return self
end
 --[[ @ 0]]
CoD.EmblemSelect.__resetProperties = function ( f15_arg0 )
	f15_arg0.ListFrame:completeAnimation() --[[ @ 0]]
	f15_arg0.ListFrame:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.EmblemSelect.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f16_arg0, f16_arg1 )
			f16_arg0:__resetProperties() --[[ @ 0]]
			f16_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f16_local0 = function ( f17_arg0 )
				local f17_local0 = function ( f18_arg0 )
					f18_arg0:beginAnimation( 150 ) --[[ @ 0]]
					f18_arg0:setAlpha( 1 ) --[[ @ 0]]
					f18_arg0:registerEventHandler( "transition_complete_keyframe", f16_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f16_arg0.ListFrame:beginAnimation( 150 ) --[[ @ 0]]
				f16_arg0.ListFrame:registerEventHandler( "interrupted_keyframe", f16_arg0.clipInterrupted ) --[[ @ 0]]
				f16_arg0.ListFrame:registerEventHandler( "transition_complete_keyframe", f17_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f16_arg0.ListFrame:completeAnimation() --[[ @ 0]]
			f16_arg0.ListFrame:setAlpha( 0 ) --[[ @ 0]]
			f16_local0( f16_arg0.ListFrame ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.EmblemSelect.__onClose = function ( f19_arg0 )
	f19_arg0.__on_close_removeOverrides() --[[ @ 0]]
	f19_arg0.ListFrame:close() --[[ @ 0]]
	f19_arg0.MenuFrame:close() --[[ @ 0]]
	f19_arg0.SelfIdentityBadge:close() --[[ @ 0]]
	f19_arg0.EmblemSelectSafeAreaContainer:close() --[[ @ 0]]
	f19_arg0.CommonIdentityWidgetStreamlinedSafeAreaContainer:close() --[[ @ 0]]
end
 --[[ @ 0]]
