-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:36
require( "ui/uieditor/widgets/backgroundframes/genericmenuframeidentity" ) --[[ @ 0]]
require( "ui/uieditor/widgets/common/common_tabbar_center" ) --[[ @ 0]]
require( "x64:181a24c5340caa1e" ) --[[ @ 0]]
require( "x64:4026953ab49613c9" ) --[[ @ 0]]
require( "ui/uieditor/widgets/startmenu/options/startmenuoptionsbackground" ) --[[ @ 0]]

local PostLoadFunc = function ( f1_arg0, f1_arg1 )
	f1_arg0:subscribeToModel( Engine[@"CreateModel"]( Engine[@"GetGlobalModel"](), "FilterInfo" ), function ( model )
		f1_arg0.CurrentFilterInfo:setText( Engine[@"GetModelValue"]( model ) or "" ) --[[ @ 0]]
	end ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.Leaderboard_GameMode = InheritFrom( CoD.Menu ) --[[ @ 0]]
LUI.createMenu.Leaderboard_GameMode = function ( f3_arg0, f3_arg1 )
	local self = CoD.Menu.NewForUIEditor( "Leaderboard_GameMode", f3_arg0 ) --[[ @ 0]]
	local f3_local1 = self --[[ @ 0]]
	self:setClass( CoD.Leaderboard_GameMode ) --[[ @ 0]]
	self.soundSet = "CAC_PrimaryWeapon" --[[ @ 0]]
	self:setOwner( f3_arg0 ) --[[ @ 0]]
	self:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	self:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	self:playSound( "menu_open", f3_arg0 ) --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	
	local Background = CoD.StartMenuOptionsBackground.new( f3_local1, f3_arg0, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	self:addElement( Background ) --[[ @ 0]]
	self.Background = Background --[[ @ 0]]
	
	local TabFrame = LUI.UIFrame.new( f3_local1, f3_arg0, 0, 0, false ) --[[ @ 0]]
	TabFrame:setLeftRight( 0.5, 0.5, -812.5, 912.5 ) --[[ @ 0]]
	TabFrame:setTopBottom( 0.5, 0.5, -331.5, 448.5 ) --[[ @ 0]]
	self:addElement( TabFrame ) --[[ @ 0]]
	self.TabFrame = TabFrame --[[ @ 0]]
	
	local MenuFrame = CoD.GenericMenuFrameIdentity.new( f3_local1, f3_arg0, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	MenuFrame.CommonHeader.subtitle.StageTitle:setText( LocalizeToUpperString( @"hash_1FE3665244ECF33B" ) ) --[[ @ 0]]
	MenuFrame:subscribeToGlobalModel( f3_arg0, "LobbyRoot", "lobbyTitle", function ( model )
		local f4_local0 = model:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			MenuFrame.CommonHeader.subtitle.subtitle:setText( Engine[@"hash_4F9F1239CFD921FE"]( f4_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self.__on_menuOpened_MenuFrame = function ( f5_arg0, f5_arg1, f5_arg2, f5_arg3 )
		local f5_local0 = MenuFrame --[[ @ 0]]
		ShowHeaderIconOnly( f5_arg2 ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	f3_local1:addMenuOpenedCallback( self.__on_menuOpened_MenuFrame ) --[[ @ 0]]
	self:addElement( MenuFrame ) --[[ @ 0]]
	self.MenuFrame = MenuFrame --[[ @ 0]]
	
	local GameModeTabs = CoD.Common_Tabbar_Center.new( f3_local1, f3_arg0, 0.5, 0.5, -1650, 1650, 0, 0, 37, 98 ) --[[ @ 0]]
	GameModeTabs:mergeStateConditions( {
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return CoD.DirectorUtility.IsOfflineOnlyDemo() and InFrontend()
			end
		}
	} ) --[[ @ 0]]
	GameModeTabs:appendEventHandler( "grid_updated", function ( f7_arg0, f7_arg1 )
		f7_arg1.menu = f7_arg1.menu or f3_local1 --[[ @ 0]]
		f3_local1:updateElementState( GameModeTabs, f7_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	GameModeTabs:appendEventHandler( "input_source_changed", function ( f8_arg0, f8_arg1 )
		f8_arg1.menu = f8_arg1.menu or f3_local1 --[[ @ 0]]
		f3_local1:updateElementState( GameModeTabs, f8_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local TabBacking = GameModeTabs --[[ @ 0]]
	local CurrentFilterInfo = GameModeTabs.subscribeToModel --[[ @ 0]]
	local LeaderboardWarningText = Engine[@"GetModelForController"]( f3_arg0 ) --[[ @ 0]]
	CurrentFilterInfo( TabBacking, LeaderboardWarningText.LastInput, function ( f9_arg0 )
		f3_local1:updateElementState( GameModeTabs, {
			name = "model_validation",
			menu = f3_local1,
			controller = f3_arg0,
			modelValue = f9_arg0:get(),
			modelName = "LastInput"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	GameModeTabs.Tabs.grid:setDataSource( "LeaderboardGameModeTabs" ) --[[ @ 0]]
	GameModeTabs:registerEventHandler( "list_active_changed", function ( element, event )
		local f10_local0 = nil --[[ @ 0]]
		CoD.LeaderboardUtility.LeaderboardGameModeTabChanged( self, element, f3_arg0 ) --[[ @ 0]]
		return f10_local0
	end ) --[[ @ 0]]
	self:addElement( GameModeTabs ) --[[ @ 0]]
	self.GameModeTabs = GameModeTabs --[[ @ 0]]
	
	CurrentFilterInfo = LUI.UIText.new( 0, 0, 1050, 1350, 0, 0, 172, 193 ) --[[ @ 0]]
	CurrentFilterInfo:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	CurrentFilterInfo:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_631CF0F51CCA3A27" ) ) --[[ @ 0]]
	CurrentFilterInfo:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	CurrentFilterInfo:setLetterSpacing( 0.5 ) --[[ @ 0]]
	CurrentFilterInfo:setAlignment( Enum[@"LUIAlignment"][@"hash_3830CFD395E6AA0A"] ) --[[ @ 0]]
	CurrentFilterInfo:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	self:addElement( CurrentFilterInfo ) --[[ @ 0]]
	self.CurrentFilterInfo = CurrentFilterInfo --[[ @ 0]]
	
	TabBacking = CoD.CommonTabBarBacking.new( f3_local1, f3_arg0, 0, 1, 0, 0, 0, 0, 52, 89 ) --[[ @ 0]]
	TabBacking.TabBackingBlur:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( TabBacking ) --[[ @ 0]]
	self.TabBacking = TabBacking --[[ @ 0]]
	
	LeaderboardWarningText = CoD.Leaderboard_WarningText.new( f3_local1, f3_arg0, 0, 1, 0, 0, 1, 1, -129, -54 ) --[[ @ 0]]
	LeaderboardWarningText:mergeStateConditions( {
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return AlwaysTrue()
			end
		}
	} ) --[[ @ 0]]
	LeaderboardWarningText:registerEventHandler( "menu_loaded", function ( element, event )
		local f12_local0 = nil --[[ @ 0]]
		if element.menuLoaded then
			f12_local0 = element:menuLoaded( event ) --[[ @ 0]]
		elseif element.super.menuLoaded then
			f12_local0 = element.super:menuLoaded( event ) --[[ @ 0]]
		end
		SizeToSafeArea( element, f3_arg0 ) --[[ @ 0]]
		if not f12_local0 then
			f12_local0 = element:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f12_local0
	end ) --[[ @ 0]]
	self:addElement( LeaderboardWarningText ) --[[ @ 0]]
	self.LeaderboardWarningText = LeaderboardWarningText --[[ @ 0]]
	
	TabFrame:linkToElementModel( GameModeTabs.Tabs.grid, "tabWidget", true, function ( model )
		local f13_local0 = model:get() --[[ @ 0]]
		if f13_local0 ~= nil then
			TabFrame:changeFrameWidget( f13_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:registerEventHandler( "menu_loaded", function ( self, event )
		local f14_local0 = nil --[[ @ 0]]
		if self.menuLoaded then
			f14_local0 = self:menuLoaded( event ) --[[ @ 0]]
		elseif self.super.menuLoaded then
			f14_local0 = self.super:menuLoaded( event ) --[[ @ 0]]
		end
		if CoD.LeaderboardUtility.IsLobbyLeaderboard( f3_arg0 ) then
			ShowHeaderKickerAndIcon( f3_local1 ) --[[ @ 0]]
			SetHeadingKickerText( @"hash_5DE4B1936ABC08E4" ) --[[ @ 0]]
			MenuHidesFreeCursor( f3_local1, f3_arg0 ) --[[ @ 0]]
			PlaySoundAlias( "uin_paint_decal_nav" ) --[[ @ 0]]
		else
			ShowHeaderKickerAndIcon( f3_local1 ) --[[ @ 0]]
			CombatRecordSetHeadingKickerTextToCombatRecordGameMode() --[[ @ 0]]
			MenuHidesFreeCursor( f3_local1, f3_arg0 ) --[[ @ 0]]
			PlaySoundAlias( "uin_paint_decal_nav" ) --[[ @ 0]]
		end
		if not f14_local0 then
			f14_local0 = self:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f14_local0
	end ) --[[ @ 0]]
	f3_local1:AddButtonCallbackFunction( self, f3_arg0, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"], "ESCAPE", function ( element, menu, controller, model )
		GoBack( self, controller ) --[[ @ 0]]
		ClearMenuSavedState( menu ) --[[ @ 0]]
		PlaySoundAlias( "uin_paint_decal_nav" ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"], @"hash_370A9FDC87CD3D48", nil, "ESCAPE" ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	TabFrame.id = "TabFrame" --[[ @ 0]]
	MenuFrame:setModel( self.buttonModel, f3_arg0 ) --[[ @ 0]]
	MenuFrame.id = "MenuFrame" --[[ @ 0]]
	GameModeTabs.id = "GameModeTabs" --[[ @ 0]]
	self:processEvent( {
		name = "menu_loaded",
		controller = f3_arg0
	} ) --[[ @ 0]]
	self.__defaultFocus = TabFrame --[[ @ 0]]
	if CoD.isPC and (IsKeyboard( f3_arg0 ) or self.ignoreCursor) then
		self:restoreState( f3_arg0 ) --[[ @ 0]]
	end
	self.__on_close_removeOverrides = function ()
		f3_local1:removeMenuOpenedCallback( self.__on_menuOpened_MenuFrame ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f3_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.Leaderboard_GameMode.__onClose = function ( f18_arg0 )
	f18_arg0.__on_close_removeOverrides() --[[ @ 0]]
	f18_arg0.TabFrame:close() --[[ @ 0]]
	f18_arg0.Background:close() --[[ @ 0]]
	f18_arg0.MenuFrame:close() --[[ @ 0]]
	f18_arg0.GameModeTabs:close() --[[ @ 0]]
	f18_arg0.TabBacking:close() --[[ @ 0]]
	f18_arg0.LeaderboardWarningText:close() --[[ @ 0]]
end
 --[[ @ 0]]
