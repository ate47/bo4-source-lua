-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:51
require( "x64:b8e2ca68acca1fd" ) --[[ @ 0]]
require( "x64:7fbffc86e9a93477" ) --[[ @ 0]]
require( "x64:49b604203d6c4ff6" ) --[[ @ 0]]
require( "x64:471d2a0ed724628e" ) --[[ @ 0]]
require( "ui/uieditor/widgets/scrollbars/verticalcounter" ) --[[ @ 0]]
require( "x64:4353b9b389ee7deb" ) --[[ @ 0]]
require( "x64:6026a47811f4155e" ) --[[ @ 0]]
require( "x64:3d133f51b6524f7a" ) --[[ @ 0]]
require( "ui/uieditor/widgets/pc/utility/xcammousecontrol" ) --[[ @ 0]]

CoD.PersonalizeCharacter = InheritFrom( CoD.Menu ) --[[ @ 0]]
LUI.createMenu.PersonalizeCharacter = function ( f1_arg0, f1_arg1 )
	local self = CoD.Menu.NewForUIEditor( "PersonalizeCharacter", f1_arg0 ) --[[ @ 0]]
	local f1_local1 = self --[[ @ 0]]
	CoD.BaseUtility.SetModelFromUserData( f1_arg0, f1_local1, f1_arg1.model ) --[[ @ 0]]
	CoD.BaseUtility.SetPropertiesFromUserData( self, f1_arg1.properties ) --[[ @ 0]]
	SendClientScriptMenuChangeNotify( f1_arg0, f1_local1, true ) --[[ @ 0]]
	CoD.PlayerRoleUtility.LoadMenuCharacter( f1_local1, f1_arg0 ) --[[ @ 0]]
	self:setClass( CoD.PersonalizeCharacter ) --[[ @ 0]]
	self.soundSet = "FrontendMain" --[[ @ 0]]
	self:setOwner( f1_arg0 ) --[[ @ 0]]
	self:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	self:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	self:playSound( "menu_open", f1_arg0 ) --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_local1:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	local XCamMouseControl = nil --[[ @ 0]]
	
	XCamMouseControl = CoD.XCamMouseControl.new( f1_local1, f1_arg0, 0.5, 0.5, 1, 961, 0.5, 0.5, -440, 160 ) --[[ @ 0]]
	self:addElement( XCamMouseControl ) --[[ @ 0]]
	self.XCamMouseControl = XCamMouseControl --[[ @ 0]]
	
	local InfoPanel = CoD.BM_ItemInfoPanel.new( f1_local1, f1_arg0, 0.5, 0.5, 273, 813, 0.5, 0.5, 270, 420 ) --[[ @ 0]]
	self:addElement( InfoPanel ) --[[ @ 0]]
	self.InfoPanel = InfoPanel --[[ @ 0]]
	
	local f1_local4 = nil --[[ @ 0]]
	f1_local4 = LUI.UIElement.createFake() --[[ @ 0]]
	self.outfits = f1_local4 --[[ @ 0]]
	local f1_local5 = nil --[[ @ 0]]
	
	local outfitsPC = LUI.UIList.new( f1_local1, f1_arg0, 3, 0, nil, false, false, false, false ) --[[ @ 0]]
	outfitsPC:setLeftRight( 0.5, 0.5, -508, 1 ) --[[ @ 0]]
	outfitsPC:setTopBottom( 0.5, 0.5, -315.5, 293.5 ) --[[ @ 0]]
	outfitsPC:setWidgetType( CoD.SpecialistOutfitEntry ) --[[ @ 0]]
	outfitsPC:setHorizontalCount( 4 ) --[[ @ 0]]
	outfitsPC:setVerticalCount( 4 ) --[[ @ 0]]
	outfitsPC:setSpacing( 3 ) --[[ @ 0]]
	outfitsPC:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	outfitsPC:linkToElementModel( outfitsPC, "owned", true, function ( model, f2_arg1 )
		CoD.Menu.UpdateButtonShownState( f2_arg1, f1_local1, f1_arg0, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	outfitsPC:linkToElementModel( outfitsPC, "itemType", true, function ( model, f3_arg1 )
		CoD.Menu.UpdateButtonShownState( f3_arg1, f1_local1, f1_arg0, Enum[@"luibutton"][@"lui_key_xbx_pssquare"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local f1_local7 = outfitsPC --[[ @ 0]]
	local f1_local8 = outfitsPC.subscribeToModel --[[ @ 0]]
	local themesPC = DataSources.MPSpecialistThemes.getModel( f1_arg0 ) --[[ @ 0]]
	f1_local8( f1_local7, themesPC.update, function ( f4_arg0, f4_arg1 )
		CoD.Menu.UpdateButtonShownState( f4_arg1, f1_local1, f1_arg0, Enum[@"luibutton"][@"lui_key_xbx_pssquare"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	outfitsPC:linkToElementModel( outfitsPC, "itemIndex", true, function ( model, f5_arg1 )
		CoD.Menu.UpdateButtonShownState( f5_arg1, f1_local1, f1_arg0, Enum[@"luibutton"][@"lui_key_xbx_pssquare"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	outfitsPC:appendEventHandler( "input_source_changed", function ( f6_arg0, f6_arg1 )
		f6_arg1.menu = f6_arg1.menu or f1_local1 --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f6_arg0, f1_local1, f1_arg0, Enum[@"luibutton"][@"lui_key_xbx_pssquare"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	f1_local7 = outfitsPC --[[ @ 0]]
	f1_local8 = outfitsPC.subscribeToModel --[[ @ 0]]
	themesPC = Engine[@"getmodelforcontroller"]( f1_arg0 ) --[[ @ 0]]
	f1_local8( f1_local7, themesPC.LastInput, function ( f7_arg0, f7_arg1 )
		CoD.Menu.UpdateButtonShownState( f7_arg1, f1_local1, f1_arg0, Enum[@"luibutton"][@"lui_key_xbx_pssquare"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	outfitsPC:registerEventHandler( "list_item_gain_focus", function ( element, event )
		local f8_local0 = nil --[[ @ 0]]
		if CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg0, "available" ) then
			CoD.PlayerRoleUtility.UpdatePersonalizeSpecialistOutfitItem( f1_arg0, element ) --[[ @ 0]]
			SetElementModelToFocusedElementModel( f1_arg0, self, element, "InfoPanel" ) --[[ @ 0]]
		else
			SetElementModelToFocusedElementModel( f1_arg0, self, element, "InfoPanel" ) --[[ @ 0]]
		end
		return f8_local0
	end ) --[[ @ 0]]
	outfitsPC:registerEventHandler( "list_item_lose_focus", function ( element, event )
		local f9_local0 = nil --[[ @ 0]]
		if CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg0, "available" ) then
			CoD.PlayerRoleUtility.ResetPersonalizeSpecialistOutfitItemType( f1_arg0, element ) --[[ @ 0]]
			CoD.BreadcrumbUtility.SetSpecialistOutfitItemAsOld( f1_local1, element, f1_arg0 ) --[[ @ 0]]
		else
			CoD.BreadcrumbUtility.SetSpecialistOutfitItemAsOld( f1_local1, element, f1_arg0 ) --[[ @ 0]]
		end
		return f9_local0
	end ) --[[ @ 0]]
	outfitsPC:registerEventHandler( "gain_focus", function ( element, event )
		local f10_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f10_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f10_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_local1, f1_arg0, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( element, f1_local1, f1_arg0, Enum[@"luibutton"][@"lui_key_xbx_pssquare"] ) --[[ @ 0]]
		return f10_local0
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( outfitsPC, f1_arg0, Enum[@"luibutton"][@"lui_key_xba_pscross"], nil, function ( element, menu, controller, model )
		if CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "owned" ) then
			PlaySoundAlias( "uin_cac_equip_base" ) --[[ @ 0]]
			CoD.PlayerRoleUtility.EquipOutfitItem( menu, controller, element ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "owned" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"menu/equip", nil, nil ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( outfitsPC, f1_arg0, Enum[@"luibutton"][@"lui_key_xbx_pssquare"], "ui_remove", function ( element, menu, controller, model )
		if not CoD.ModelUtility.IsSelfModelValueEqualToEnum( element, controller, "itemType", Enum[@"characteritemtype"][@"hash_4922FE5C41D9EE8B"] ) and CoD.PlayerRoleUtility.IsSelectedOutfitItemIndex( element, controller ) and IsGamepad( controller ) then
			PlaySoundAlias( "uin_cac_equip_remove" ) --[[ @ 0]]
			CoD.PlayerRoleUtility.UnequipOutfitItem( menu, controller, element ) --[[ @ 0]]
			CoD.PlayerRoleUtility.ResetPersonalizeSpecialistOutfitItemType( controller, element ) --[[ @ 0]]
			return true
		elseif IsMouseOrKeyboard( controller ) and not CoD.ModelUtility.IsSelfModelValueEqualToEnum( element, controller, "itemType", Enum[@"characteritemtype"][@"hash_4922FE5C41D9EE8B"] ) and CoD.PlayerRoleUtility.IsSelectedOutfitItemIndex( element, controller ) then
			PlaySoundAlias( "uin_cac_equip_remove" ) --[[ @ 0]]
			CoD.PlayerRoleUtility.UnequipOutfitItem( menu, controller, element ) --[[ @ 0]]
			CoD.PlayerRoleUtility.ResetPersonalizeSpecialistOutfitItemType( controller, element ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not CoD.ModelUtility.IsSelfModelValueEqualToEnum( element, controller, "itemType", Enum[@"characteritemtype"][@"hash_4922FE5C41D9EE8B"] ) and CoD.PlayerRoleUtility.IsSelectedOutfitItemIndex( element, controller ) and IsGamepad( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xbx_pssquare"], @"menu/remove", nil, "ui_remove" ) --[[ @ 0]]
			return true
		elseif IsMouseOrKeyboard( controller ) and not CoD.ModelUtility.IsSelfModelValueEqualToEnum( element, controller, "itemType", Enum[@"characteritemtype"][@"hash_4922FE5C41D9EE8B"] ) and CoD.PlayerRoleUtility.IsSelectedOutfitItemIndex( element, controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xbx_pssquare"], @"menu/remove", Enum[@"luibuttonpromptflags"][@"bpf_contextual"], "ui_remove" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	outfitsPC:subscribeToGlobalModel( f1_arg0, "MPOutfitCategories", "selectedCategory", function ( model )
		UpdateSelfElementState( f1_local1, outfitsPC, f1_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	outfitsPC:AddContextualMenuAction( f1_local1, f1_arg0, @"menu/remove", function ( f16_arg0, f16_arg1, f16_arg2, f16_arg3 )
		if not CoD.ModelUtility.IsSelfModelValueEqualToEnum( f16_arg0, f16_arg2, "itemType", Enum[@"characteritemtype"][@"hash_4922FE5C41D9EE8B"] ) and CoD.PlayerRoleUtility.IsSelectedOutfitItemIndex( f16_arg0, f16_arg2 ) then
			return function ( f17_arg0, f17_arg1, f17_arg2, f17_arg3 )
				PlaySoundAlias( "uin_cac_equip_remove" ) --[[ @ 0]]
				CoD.PlayerRoleUtility.UnequipOutfitItem( f17_arg1, f17_arg2, f17_arg0 ) --[[ @ 0]]
				CoD.PlayerRoleUtility.ResetPersonalizeSpecialistOutfitItemType( f17_arg2, f17_arg0 ) --[[ @ 0]]
			end
			
		else
			
		end
	end ) --[[ @ 0]]
	self:addElement( outfitsPC ) --[[ @ 0]]
	self.outfitsPC = outfitsPC --[[ @ 0]]
	
	f1_local8 = nil --[[ @ 0]]
	f1_local8 = LUI.UIElement.createFake() --[[ @ 0]]
	self.themes = f1_local8 --[[ @ 0]]
	f1_local7 = nil --[[ @ 0]]
	
	themesPC = LUI.UIList.new( f1_local1, f1_arg0, 8, 0, nil, false, false, false, false ) --[[ @ 0]]
	themesPC:setLeftRight( 0.5, 0.5, -813, -533 ) --[[ @ 0]]
	themesPC:setTopBottom( 0.5, 0.5, -316.5, 291.5 ) --[[ @ 0]]
	themesPC:setWidgetType( CoD.SpecialistThemeButton ) --[[ @ 0]]
	themesPC:setVerticalCount( 8 ) --[[ @ 0]]
	themesPC:setSpacing( 8 ) --[[ @ 0]]
	themesPC:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	themesPC:setDataSource( "MPSpecialistThemes" ) --[[ @ 0]]
	themesPC:linkToElementModel( themesPC, "disabled", true, function ( model, f18_arg1 )
		CoD.Menu.UpdateButtonShownState( f18_arg1, f1_local1, f1_arg0, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	themesPC:registerEventHandler( "list_item_gain_focus", function ( element, event )
		local f19_local0 = nil --[[ @ 0]]
		CoD.PlayerRoleUtility.UpdatePersonalizeSpecialistOutfit( f1_arg0, element ) --[[ @ 0]]
		SetElementModelToFocusedElementModel( f1_arg0, self, element, "InfoPanel" ) --[[ @ 0]]
		return f19_local0
	end ) --[[ @ 0]]
	themesPC:registerEventHandler( "gain_focus", function ( element, event )
		local f20_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f20_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f20_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_local1, f1_arg0, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		return f20_local0
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( themesPC, f1_arg0, Enum[@"luibutton"][@"lui_key_xba_pscross"], nil, function ( element, menu, controller, model )
		if not CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "disabled" ) then
			PlaySoundAlias( "uin_cac_equip_base" ) --[[ @ 0]]
			CoD.PlayerRoleUtility.EquipOutfit( menu, controller, element ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "disabled" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"menu/select", nil, nil ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( themesPC, "updateDataSource", function ( element, controller, f23_arg2, f23_arg3 )
		CoD.GridAndListUtility.HideSubListIfParentListIsEmpty( element, self.outfitsPC, f1_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( themesPC ) --[[ @ 0]]
	self.themesPC = themesPC --[[ @ 0]]
	
	local CommonIdentityWidgetStreamlinedSafeAreaContainer = CoD.CommonIdentityWidgetStreamlinedSafeAreaContainer.new( f1_local1, f1_arg0, 0.5, 0.5, -960, 960, 0, 0, 0, 1080 ) --[[ @ 0]]
	CommonIdentityWidgetStreamlinedSafeAreaContainer:setAlpha( 0 ) --[[ @ 0]]
	CommonIdentityWidgetStreamlinedSafeAreaContainer:registerEventHandler( "menu_loaded", function ( element, event )
		local f24_local0 = nil --[[ @ 0]]
		if element.menuLoaded then
			f24_local0 = element:menuLoaded( event ) --[[ @ 0]]
		elseif element.super.menuLoaded then
			f24_local0 = element.super:menuLoaded( event ) --[[ @ 0]]
		end
		SizeToSafeArea( element, f1_arg0 ) --[[ @ 0]]
		if not f24_local0 then
			f24_local0 = element:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f24_local0
	end ) --[[ @ 0]]
	self:addElement( CommonIdentityWidgetStreamlinedSafeAreaContainer ) --[[ @ 0]]
	self.CommonIdentityWidgetStreamlinedSafeAreaContainer = CommonIdentityWidgetStreamlinedSafeAreaContainer --[[ @ 0]]
	
	local f1_local11 = nil --[[ @ 0]]
	f1_local11 = LUI.UIElement.createFake() --[[ @ 0]]
	self.outfitsVerticalCounter = f1_local11 --[[ @ 0]]
	local outfitsVerticalCounterPC = nil --[[ @ 0]]
	
	outfitsVerticalCounterPC = CoD.verticalCounter.new( f1_local1, f1_arg0, 0.5, 0.5, -396, -96, 0.5, 0.5, 326.5, 363.5 ) --[[ @ 0]]
	self:addElement( outfitsVerticalCounterPC ) --[[ @ 0]]
	self.outfitsVerticalCounterPC = outfitsVerticalCounterPC --[[ @ 0]]
	
	local f1_local13 = nil --[[ @ 0]]
	f1_local13 = LUI.UIElement.createFake() --[[ @ 0]]
	self.themeVerticalCounter = f1_local13 --[[ @ 0]]
	local themeVerticalCounterPC = nil --[[ @ 0]]
	
	themeVerticalCounterPC = CoD.verticalCounter.new( f1_local1, f1_arg0, 0.5, 0.5, -823, -523, 0.5, 0.5, 326.5, 363.5 ) --[[ @ 0]]
	self:addElement( themeVerticalCounterPC ) --[[ @ 0]]
	self.themeVerticalCounterPC = themeVerticalCounterPC --[[ @ 0]]
	
	local f1_local15 = nil --[[ @ 0]]
	f1_local15 = LUI.UIElement.createFake() --[[ @ 0]]
	self.SpecialistDecalSelector = f1_local15 --[[ @ 0]]
	local SpecialistDecalSelectorPC = nil --[[ @ 0]]
	
	SpecialistDecalSelectorPC = CoD.SpecialistDecalSelector.new( f1_local1, f1_arg0, 0.5, 0.5, 273, 813, 0.5, 0.5, 104, 254 ) --[[ @ 0]]
	self:addElement( SpecialistDecalSelectorPC ) --[[ @ 0]]
	self.SpecialistDecalSelectorPC = SpecialistDecalSelectorPC --[[ @ 0]]
	
	local SafeareaContainer = CoD.PersonalizeCharacter_SafeAreaContainer.new( f1_local1, f1_arg0, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	SafeareaContainer:subscribeToGlobalModel( f1_arg0, "LobbyRoot", "lobbyTitle", function ( model )
		local f25_local0 = model:get() --[[ @ 0]]
		if f25_local0 ~= nil then
			SafeareaContainer.CommonHeader.subtitle.subtitle:setText( Engine[@"hash_4F9F1239CFD921FE"]( f25_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	SafeareaContainer:linkToElementModel( self, "name", true, function ( model )
		local f26_local0 = model:get() --[[ @ 0]]
		if f26_local0 ~= nil then
			SafeareaContainer.CommonHeader.subtitle.StageTitle:setText( ToUpper( LocalizeIntoString( @"hash_61D2B357848A1F60", f26_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	SafeareaContainer:registerEventHandler( "menu_loaded", function ( element, event )
		local f27_local0 = nil --[[ @ 0]]
		if element.menuLoaded then
			f27_local0 = element:menuLoaded( event ) --[[ @ 0]]
		elseif element.super.menuLoaded then
			f27_local0 = element.super:menuLoaded( event ) --[[ @ 0]]
		end
		if not IsPC() then
			SizeToSafeArea( element, f1_arg0 ) --[[ @ 0]]
		end
		if not f27_local0 then
			f27_local0 = element:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f27_local0
	end ) --[[ @ 0]]
	SafeareaContainer:registerEventHandler( "list_active_changed", function ( element, event )
		local f28_local0 = nil --[[ @ 0]]
		CoD.PlayerRoleUtility.ResetCurrentCharacterCustomization( f1_arg0 ) --[[ @ 0]]
		local f28_local1 = CoD.ModelUtility.SetGlobalDatasourceModelValue --[[ @ 0]]
		local f28_local2 = f1_arg0 --[[ @ 0]]
		local f28_local3 = "MPOutfitCategories" --[[ @ 0]]
		local f28_local4 = "selectedCategory" --[[ @ 0]]
		local f28_local5 = element:getModel() --[[ @ 0]]
		f28_local1( f28_local2, f28_local3, f28_local4, f28_local5.category:get() ) --[[ @ 0]]
		SendClientScriptMenuExpressionStateChangeNotify( f1_arg0, f1_local1, true, CoD.SafeGetModelValue( element:getModel(), "camera" ) or "character" ) --[[ @ 0]]
		return f28_local0
	end ) --[[ @ 0]]
	self:addElement( SafeareaContainer ) --[[ @ 0]]
	self.SafeareaContainer = SafeareaContainer --[[ @ 0]]
	
	f1_local4:linkToElementModel( f1_local8, "datasourceName", true, function ( model )
		local f29_local0 = model:get() --[[ @ 0]]
		if f29_local0 ~= nil then
			f1_local4:setDataSource( f29_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	outfitsPC:linkToElementModel( themesPC, "datasourceName", true, function ( model )
		local f30_local0 = model:get() --[[ @ 0]]
		if f30_local0 ~= nil then
			outfitsPC:setDataSource( f30_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	f1_local15:linkToElementModel( f1_local8, nil, false, function ( model )
		f1_local15:setModel( model, f1_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	SpecialistDecalSelectorPC:linkToElementModel( themesPC, nil, false, function ( model )
		SpecialistDecalSelectorPC:setModel( model, f1_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:linkToElementModel( self, "decalDataSourceName", true, function ( model, f33_arg1 )
		CoD.Menu.UpdateButtonShownState( f33_arg1, f1_local1, f1_arg0, Enum[@"luibutton"][@"lui_key_xbx_pssquare"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f33_arg1, f1_local1, f1_arg0, Enum[@"luibutton"][@"lui_key_none"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:linkToElementModel( self, "disabled", true, function ( model, f34_arg1 )
		CoD.Menu.UpdateButtonShownState( f34_arg1, f1_local1, f1_arg0, Enum[@"luibutton"][@"lui_key_xbx_pssquare"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f34_arg1, f1_local1, f1_arg0, Enum[@"luibutton"][@"lui_key_none"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:appendEventHandler( "input_source_changed", function ( f35_arg0, f35_arg1 )
		f35_arg1.menu = f35_arg1.menu or f1_local1 --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f35_arg0, f1_local1, f1_arg0, Enum[@"luibutton"][@"lui_key_xbx_pssquare"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f35_arg0, f1_local1, f1_arg0, Enum[@"luibutton"][@"lui_key_none"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local f1_local18 = self --[[ @ 0]]
	local f1_local19 = self.subscribeToModel --[[ @ 0]]
	local f1_local20 = Engine[@"getmodelforcontroller"]( f1_arg0 ) --[[ @ 0]]
	f1_local19( f1_local18, f1_local20.LastInput, function ( f36_arg0, f36_arg1 )
		CoD.Menu.UpdateButtonShownState( f36_arg1, f1_local1, f1_arg0, Enum[@"luibutton"][@"lui_key_xbx_pssquare"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f36_arg1, f1_local1, f1_arg0, Enum[@"luibutton"][@"lui_key_none"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:linkToElementModel( self, "previewEnabled", true, function ( model, f37_arg1 )
		CoD.Menu.UpdateButtonShownState( f37_arg1, f1_local1, f1_arg0, Enum[@"luibutton"][@"lui_key_xby_pstriangle"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"luibutton"][@"lui_key_xbb_pscircle"], nil, function ( element, menu, controller, model )
		GoBack( self, controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xbb_pscircle"], @"menu/back", nil, nil ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"luibutton"][@"lui_key_xbx_pssquare"], nil, function ( element, menu, controller, model )
		if CoD.ModelUtility.IsSelfModelValueNonEmptyString( self.SpecialistDecalSelector, controller, "decalDataSourceName" ) and not IsPC() then
			PlaySoundAlias( "uin_cac_equip_base" ) --[[ @ 0]]
			CoD.PlayerRoleUtility.CycleOutfitDecalItem( menu, controller, self.SpecialistDecalSelector ) --[[ @ 0]]
			return true
		elseif CoD.ModelUtility.IsSelfModelValueNonEmptyString( self.SpecialistDecalSelectorPC, controller, "decalDataSourceName" ) and not CoD.ModelUtility.IsSelfModelValueTrue( self.themesPC, controller, "disabled" ) and IsPC() and IsGamepad( controller ) then
			PlaySoundAlias( "uin_cac_equip_base" ) --[[ @ 0]]
			CoD.PlayerRoleUtility.CycleOutfitDecalItem( menu, controller, self.SpecialistDecalSelectorPC ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if CoD.ModelUtility.IsSelfModelValueNonEmptyString( self.SpecialistDecalSelector, controller, "decalDataSourceName" ) and not IsPC() then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xbx_pssquare"], @"hash_0", nil, nil ) --[[ @ 0]]
			return false
		elseif CoD.ModelUtility.IsSelfModelValueNonEmptyString( self.SpecialistDecalSelectorPC, controller, "decalDataSourceName" ) and not CoD.ModelUtility.IsSelfModelValueTrue( self.themesPC, controller, "disabled" ) and IsPC() and IsGamepad( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xbx_pssquare"], @"hash_0", nil, nil ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"luibutton"][@"lui_key_none"], "ui_contextual_2", function ( element, menu, controller, model )
		if CoD.ModelUtility.IsSelfModelValueNonEmptyString( self.SpecialistDecalSelectorPC, controller, "decalDataSourceName" ) and not CoD.ModelUtility.IsSelfModelValueTrue( self.themesPC, controller, "disabled" ) and IsPC() and IsMouseOrKeyboard( controller ) then
			PlaySoundAlias( "uin_cac_equip_base" ) --[[ @ 0]]
			CoD.PlayerRoleUtility.CycleOutfitDecalItem( menu, controller, self.SpecialistDecalSelectorPC ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if CoD.ModelUtility.IsSelfModelValueNonEmptyString( self.SpecialistDecalSelectorPC, controller, "decalDataSourceName" ) and not CoD.ModelUtility.IsSelfModelValueTrue( self.themesPC, controller, "disabled" ) and IsPC() and IsMouseOrKeyboard( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_none"], @"hash_0", nil, "ui_contextual_2" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"luibutton"][@"lui_key_xby_pstriangle"], "ui_contextual_1", function ( element, menu, controller, model )
		if CoD.ModelUtility.IsSelfModelValueTrue( self, controller, "previewEnabled" ) then
			PlaySoundAlias( "uin_main_edit" ) --[[ @ 0]]
			OpenOverlay( self, "MPSpecialistHUBPreviewMoment", controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if CoD.ModelUtility.IsSelfModelValueTrue( self, controller, "previewEnabled" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xby_pstriangle"], @"menu/preview", nil, "ui_contextual_1" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( self, "close", function ( element )
		if IsMultiplayer() then
			SendClientScriptMenuChangeNotify( f1_arg0, f1_local1, false ) --[[ @ 0]]
			ClearMenuSavedState( f1_local1 ) --[[ @ 0]]
			CoD.PlayerRoleUtility.CleanupOutfitData( f1_arg0 ) --[[ @ 0]]
			CoD.BreadcrumbUtility.UploadBuffer( f1_arg0, Enum[@"storagefiletype"][@"storage_mp_loadouts"] ) --[[ @ 0]]
		elseif IsWarzone() then
			SendClientScriptMenuChangeNotify( f1_arg0, f1_local1, false ) --[[ @ 0]]
			ClearMenuSavedState( f1_local1 ) --[[ @ 0]]
			CoD.PlayerRoleUtility.CleanupOutfitData( f1_arg0 ) --[[ @ 0]]
			CoD.BreadcrumbUtility.UploadBuffer( f1_arg0, Enum[@"storagefiletype"][@"storage_wz_loadouts"] ) --[[ @ 0]]
		elseif IsZombies() then
			SendClientScriptMenuChangeNotify( f1_arg0, f1_local1, false ) --[[ @ 0]]
			ClearMenuSavedState( f1_local1 ) --[[ @ 0]]
			CoD.PlayerRoleUtility.CleanupOutfitData( f1_arg0 ) --[[ @ 0]]
			CoD.ZMStoryUtility.SetSelectedStoryToCurrentMapStory( f1_arg0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	if CoD.isPC then
		XCamMouseControl.id = "XCamMouseControl" --[[ @ 0]]
	end
	f1_local4.id = "outfits" --[[ @ 0]]
	outfitsPC.id = "outfitsPC" --[[ @ 0]]
	f1_local8.id = "themes" --[[ @ 0]]
	themesPC.id = "themesPC" --[[ @ 0]]
	f1_local11.id = "outfitsVerticalCounter" --[[ @ 0]]
	if CoD.isPC then
		outfitsVerticalCounterPC.id = "outfitsVerticalCounterPC" --[[ @ 0]]
	end
	f1_local13.id = "themeVerticalCounter" --[[ @ 0]]
	if CoD.isPC then
		themeVerticalCounterPC.id = "themeVerticalCounterPC" --[[ @ 0]]
	end
	f1_local15.id = "SpecialistDecalSelector" --[[ @ 0]]
	if CoD.isPC then
		SpecialistDecalSelectorPC.id = "SpecialistDecalSelectorPC" --[[ @ 0]]
	end
	SafeareaContainer.id = "SafeareaContainer" --[[ @ 0]]
	self:processEvent( {
		name = "menu_loaded",
		controller = f1_arg0
	} ) --[[ @ 0]]
	self.__defaultFocus = f1_local8 --[[ @ 0]]
	if CoD.isPC and (IsKeyboard( f1_arg0 ) or self.ignoreCursor) then
		self:restoreState( f1_arg0 ) --[[ @ 0]]
	end
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg0 ) --[[ @ 0]]
	end
	f1_local19 = self --[[ @ 0]]
	f1_local19 = f1_local4 --[[ @ 0]]
	CoD.BaseUtility.SetCustomNavDirection( CoD.BaseUtility.NavigationDirection.left, self.themes, self.themesPC ) --[[ @ 0]]
	CoD.BaseUtility.SetCustomNavDirection( CoD.BaseUtility.NavigationDirection.up, f1_local19, f1_local19 ) --[[ @ 0]]
	CoD.BaseUtility.SetCustomNavDirection( CoD.BaseUtility.NavigationDirection.left, f1_local19, self.themes ) --[[ @ 0]]
	SetElementProperty( f1_local19, "_checkChildFocusForSelectability", true ) --[[ @ 0]]
	f1_local19 = outfitsPC --[[ @ 0]]
	if IsPC() then
		CoD.BaseUtility.SetCustomNavDirection( CoD.BaseUtility.NavigationDirection.left, f1_local19, self.themesPC ) --[[ @ 0]]
		CoD.BaseUtility.SetCustomNavDirection( CoD.BaseUtility.NavigationDirection.up, f1_local19, f1_local19 ) --[[ @ 0]]
		CoD.BaseUtility.SetCustomNavDirection( CoD.BaseUtility.NavigationDirection.down, f1_local19, f1_local19 ) --[[ @ 0]]
		SetElementProperty( f1_local19, "_checkChildFocusForSelectability", true ) --[[ @ 0]]
		CoD.PCWidgetUtility.SetupContextualMenu( f1_local19, f1_arg0, "displayName", "", "" ) --[[ @ 0]]
	end
	f1_local19 = f1_local8 --[[ @ 0]]
	CoD.BaseUtility.SetCustomNavDirection( CoD.BaseUtility.NavigationDirection.up, f1_local19, f1_local19 ) --[[ @ 0]]
	CoD.BaseUtility.SetCustomNavDirection( CoD.BaseUtility.NavigationDirection.down, f1_local19, f1_local19 ) --[[ @ 0]]
	CoD.BaseUtility.SetCustomNavDirection( CoD.BaseUtility.NavigationDirection.right, f1_local19, self.outfits ) --[[ @ 0]]
	f1_local19 = themesPC --[[ @ 0]]
	CoD.BaseUtility.SetCustomNavDirection( CoD.BaseUtility.NavigationDirection.up, f1_local19, f1_local19 ) --[[ @ 0]]
	CoD.BaseUtility.SetCustomNavDirection( CoD.BaseUtility.NavigationDirection.down, f1_local19, f1_local19 ) --[[ @ 0]]
	CoD.BaseUtility.SetCustomNavDirection( CoD.BaseUtility.NavigationDirection.right, f1_local19, self.outfitsPC ) --[[ @ 0]]
	SetAsListVerticalCounter( self, f1_local11, "outfits" ) --[[ @ 0]]
	SetAsListVerticalCounter( self, outfitsVerticalCounterPC, "outfitsPC" ) --[[ @ 0]]
	SetAsListVerticalCounter( self, f1_local13, "themes" ) --[[ @ 0]]
	SetAsListVerticalCounter( self, themeVerticalCounterPC, "themesPC" ) --[[ @ 0]]
	return self
end
 --[[ @ 0]]
CoD.PersonalizeCharacter.__resetProperties = function ( f47_arg0 )
	f47_arg0.outfitsPC:completeAnimation() --[[ @ 0]]
	f47_arg0.themes:completeAnimation() --[[ @ 0]]
	f47_arg0.outfits:completeAnimation() --[[ @ 0]]
	f47_arg0.themesPC:completeAnimation() --[[ @ 0]]
	f47_arg0.outfitsPC:setAlpha( 1 ) --[[ @ 0]]
	f47_arg0.themes:setAlpha( 1 ) --[[ @ 0]]
	f47_arg0.outfits:setAlpha( 1 ) --[[ @ 0]]
	f47_arg0.themesPC:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.PersonalizeCharacter.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f48_arg0, f48_arg1 )
			f48_arg0:__resetProperties() --[[ @ 0]]
			f48_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			local f48_local0 = function ( f49_arg0 )
				local f49_local0 = function ( f50_arg0 )
					f50_arg0:beginAnimation( 150 ) --[[ @ 0]]
					f50_arg0:setAlpha( 1 ) --[[ @ 0]]
					f50_arg0:registerEventHandler( "transition_complete_keyframe", f48_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f48_arg0.outfits:beginAnimation( 250 ) --[[ @ 0]]
				f48_arg0.outfits:registerEventHandler( "interrupted_keyframe", f48_arg0.clipInterrupted ) --[[ @ 0]]
				f48_arg0.outfits:registerEventHandler( "transition_complete_keyframe", f49_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f48_arg0.outfits:completeAnimation() --[[ @ 0]]
			f48_arg0.outfits:setAlpha( 0 ) --[[ @ 0]]
			f48_local0( f48_arg0.outfits ) --[[ @ 0]]
			local f48_local1 = function ( f51_arg0 )
				local f51_local0 = function ( f52_arg0 )
					f52_arg0:beginAnimation( 150 ) --[[ @ 0]]
					f52_arg0:setAlpha( 1 ) --[[ @ 0]]
					f52_arg0:registerEventHandler( "transition_complete_keyframe", f48_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f48_arg0.outfitsPC:beginAnimation( 250 ) --[[ @ 0]]
				f48_arg0.outfitsPC:registerEventHandler( "interrupted_keyframe", f48_arg0.clipInterrupted ) --[[ @ 0]]
				f48_arg0.outfitsPC:registerEventHandler( "transition_complete_keyframe", f51_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f48_arg0.outfitsPC:completeAnimation() --[[ @ 0]]
			f48_arg0.outfitsPC:setAlpha( 0 ) --[[ @ 0]]
			f48_local1( f48_arg0.outfitsPC ) --[[ @ 0]]
			local f48_local2 = function ( f53_arg0 )
				local f53_local0 = function ( f54_arg0 )
					f54_arg0:beginAnimation( 150 ) --[[ @ 0]]
					f54_arg0:setAlpha( 1 ) --[[ @ 0]]
					f54_arg0:registerEventHandler( "transition_complete_keyframe", f48_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f48_arg0.themes:beginAnimation( 50 ) --[[ @ 0]]
				f48_arg0.themes:registerEventHandler( "interrupted_keyframe", f48_arg0.clipInterrupted ) --[[ @ 0]]
				f48_arg0.themes:registerEventHandler( "transition_complete_keyframe", f53_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f48_arg0.themes:completeAnimation() --[[ @ 0]]
			f48_arg0.themes:setAlpha( 0 ) --[[ @ 0]]
			f48_local2( f48_arg0.themes ) --[[ @ 0]]
			local f48_local3 = function ( f55_arg0 )
				f55_arg0:beginAnimation( 150 ) --[[ @ 0]]
				f55_arg0:setAlpha( 1 ) --[[ @ 0]]
				f55_arg0:registerEventHandler( "transition_complete_keyframe", f48_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f48_arg0.themesPC:beginAnimation( 50 ) --[[ @ 0]]
			f48_arg0.themesPC:setAlpha( 0 ) --[[ @ 0]]
			f48_arg0.themesPC:registerEventHandler( "interrupted_keyframe", f48_arg0.clipInterrupted ) --[[ @ 0]]
			f48_arg0.themesPC:registerEventHandler( "transition_complete_keyframe", f48_local3 ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.PersonalizeCharacter.__onClose = function ( f56_arg0 )
	f56_arg0.outfits:close() --[[ @ 0]]
	f56_arg0.outfitsPC:close() --[[ @ 0]]
	f56_arg0.SpecialistDecalSelector:close() --[[ @ 0]]
	f56_arg0.SpecialistDecalSelectorPC:close() --[[ @ 0]]
	f56_arg0.XCamMouseControl:close() --[[ @ 0]]
	f56_arg0.InfoPanel:close() --[[ @ 0]]
	f56_arg0.themes:close() --[[ @ 0]]
	f56_arg0.themesPC:close() --[[ @ 0]]
	f56_arg0.CommonIdentityWidgetStreamlinedSafeAreaContainer:close() --[[ @ 0]]
	f56_arg0.outfitsVerticalCounter:close() --[[ @ 0]]
	f56_arg0.outfitsVerticalCounterPC:close() --[[ @ 0]]
	f56_arg0.themeVerticalCounter:close() --[[ @ 0]]
	f56_arg0.themeVerticalCounterPC:close() --[[ @ 0]]
	f56_arg0.SafeareaContainer:close() --[[ @ 0]]
end
 --[[ @ 0]]
