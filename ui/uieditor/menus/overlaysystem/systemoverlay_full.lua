-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:36
require( "ui/uieditor/widgets/systemoverlays/systemoverlay_full_layout" ) --[[ @ 0]]
require( "ui/uieditor/widgets/pc/pc_smallclosebutton" ) --[[ @ 0]]

local PostLoadFunc = function ( f1_arg0 )
	f1_arg0.disablePopupOpenCloseAnim = true --[[ @ 0]]
	f1_arg0.disableBlur = true --[[ @ 0]]
end
 --[[ @ 0]]
CoD.SystemOverlay_Full = InheritFrom( CoD.Menu ) --[[ @ 0]]
LUI.createMenu.SystemOverlay_Full = function ( f2_arg0, f2_arg1 )
	local self = CoD.Menu.NewForUIEditor( "SystemOverlay_Full", f2_arg0 ) --[[ @ 0]]
	local f2_local1 = self --[[ @ 0]]
	self:setClass( CoD.SystemOverlay_Full ) --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self:setOwner( f2_arg0 ) --[[ @ 0]]
	self:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	self:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	self:playSound( "menu_open", f2_arg0 ) --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	
	local layout = CoD.systemOverlay_Full_Layout.new( f2_local1, f2_arg0, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	layout:linkToElementModel( self, nil, false, function ( model )
		layout:setModel( model, f2_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( layout ) --[[ @ 0]]
	self.layout = layout --[[ @ 0]]
	
	local BTNQuit = nil --[[ @ 0]]
	
	BTNQuit = CoD.PC_SmallCloseButton.new( f2_local1, f2_arg0, 0.5, 0.5, 866, 900, 0.5, 0.5, -230, -198 ) --[[ @ 0]]
	BTNQuit:registerEventHandler( "gain_focus", function ( element, event )
		local f4_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f4_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f4_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f2_local1, f2_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f4_local0
	end ) --[[ @ 0]]
	f2_local1:AddButtonCallbackFunction( BTNQuit, f2_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		PerformOverlayBack( menu, controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_0", nil, "ui_confirm" ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	self:addElement( BTNQuit ) --[[ @ 0]]
	self.BTNQuit = BTNQuit --[[ @ 0]]
	
	f2_local1:AddButtonCallbackFunction( self, f2_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		if HasOverlayContinueAction( menu ) then
			PerformOverlayContinue( menu, controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if HasOverlayContinueAction( menu ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_66393FF34EA56966", nil, "ui_confirm" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f2_local1:AddButtonCallbackFunction( self, f2_arg0, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"], nil, function ( element, menu, controller, model )
		if HasOverlayBackAction( menu ) then
			PerformOverlayBack( menu, controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if HasOverlayBackAction( menu ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"], @"hash_370A9FDC87CD3D48", nil, nil ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f2_local1:AddButtonCallbackFunction( self, f2_arg0, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"], nil, function ( element, menu, controller, model )
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"], @"hash_0", nil, nil ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	f2_local1:AddButtonCallbackFunction( self, f2_arg0, Enum[@"LUIButton"][@"hash_1E6DB407A2AF8B09"], nil, function ( element, menu, controller, model )
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_1E6DB407A2AF8B09"], @"hash_0", nil, nil ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	layout.buttons:setModel( self.buttonModel, f2_arg0 ) --[[ @ 0]]
	layout.id = "layout" --[[ @ 0]]
	if CoD.isPC then
		BTNQuit.id = "BTNQuit" --[[ @ 0]]
	end
	self:processEvent( {
		name = "menu_loaded",
		controller = f2_arg0
	} ) --[[ @ 0]]
	self.__defaultFocus = layout --[[ @ 0]]
	if CoD.isPC and (IsKeyboard( f2_arg0 ) or self.ignoreCursor) then
		self:restoreState( f2_arg0 ) --[[ @ 0]]
	end
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f2_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.SystemOverlay_Full.__onClose = function ( f15_arg0 )
	f15_arg0.layout:close() --[[ @ 0]]
	f15_arg0.BTNQuit:close() --[[ @ 0]]
end
 --[[ @ 0]]
