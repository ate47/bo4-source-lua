-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:36
require( "x64:b8e2ca68acca1fd" ) --[[ @ 0]]
require( "ui/uieditor/menus/mp/specialisthub/mpspecialisthubweapons" ) --[[ @ 0]]
require( "ui/uieditor/widgets/backgroundframes/genericmenuframe" ) --[[ @ 0]]
require( "x64:471d2a0ed724628e" ) --[[ @ 0]]
require( "x64:7139ca039864b24b" ) --[[ @ 0]]
require( "x64:2bfde76e1de46fb2" ) --[[ @ 0]]
require( "x64:6f5fe4b9649ecee1" ) --[[ @ 0]]
require( "x64:185563fab2ddf96" ) --[[ @ 0]]
require( "ui/uieditor/widgets/bumperbuttonwithkeymouse" ) --[[ @ 0]]
require( "ui/uieditor/widgets/emptyfocusable" ) --[[ @ 0]]
require( "ui/uieditor/widgets/pc/utility/xcammousecontrol" ) --[[ @ 0]]

CoD.MPSpecialistHUBInspect = InheritFrom( CoD.Menu ) --[[ @ 0]]
LUI.createMenu.MPSpecialistHUBInspect = function ( f1_arg0, f1_arg1 )
	local self = CoD.Menu.NewForUIEditor( "MPSpecialistHUBInspect", f1_arg0 ) --[[ @ 0]]
	local f1_local1 = self --[[ @ 0]]
	CoD.PlayerRoleUtility[@"hash_12B307D12327547E"]( f1_arg0 ) --[[ @ 0]]
	CoD.BaseUtility.SetPropertiesFromUserData( self, f1_arg1 ) --[[ @ 0]]
	SendClientScriptMenuChangeNotify( f1_arg0, f1_local1, true ) --[[ @ 0]]
	CoD.BaseUtility.CreateControllerModel( f1_arg0, "PositionLoadoutList.SelectedCharacterIndex" ) --[[ @ 0]]
	self:setClass( CoD.MPSpecialistHUBInspect ) --[[ @ 0]]
	self.soundSet = "FrontendMain" --[[ @ 0]]
	self:setOwner( f1_arg0 ) --[[ @ 0]]
	self:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	self:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	self:playSound( "menu_open", f1_arg0 ) --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_local1:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	local XCamMouseControl = nil --[[ @ 0]]
	
	XCamMouseControl = CoD.XCamMouseControl.new( f1_local1, f1_arg0, 0.5, 0.5, -375, 375, 0.5, 0.5, -465, 235 ) --[[ @ 0]]
	self:addElement( XCamMouseControl ) --[[ @ 0]]
	self.XCamMouseControl = XCamMouseControl --[[ @ 0]]
	
	local BackingFrame = CoD.GenericMenuFrame.new( f1_local1, f1_arg0, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	BackingFrame.CommonHeader.BGSceneBlur:setAlpha( 1 ) --[[ @ 0]]
	BackingFrame.CommonHeader.subtitle.StageTitle:setText( LocalizeToUpperString( @"hash_246EFDF3FB2763B5" ) ) --[[ @ 0]]
	BackingFrame:subscribeToGlobalModel( f1_arg0, "LobbyRoot", "lobbyTitle", function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			BackingFrame.CommonHeader.subtitle.subtitle:setText( Engine[@"hash_4F9F1239CFD921FE"]( f2_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( BackingFrame ) --[[ @ 0]]
	self.BackingFrame = BackingFrame --[[ @ 0]]
	
	local RightArrow = nil --[[ @ 0]]
	
	RightArrow = CoD.BumperButtonWithKeyMouse.new( f1_local1, f1_arg0, 0.5, 0.5, 196.5, 263.5, 0.5, 0.5, -531, -486 ) --[[ @ 0]]
	RightArrow:mergeStateConditions( {
		{
			stateName = "Gamepad",
			condition = function ( menu, element, event )
				return IsGamepad( f1_arg0 ) and AlwaysFalse()
			end
		}
	} ) --[[ @ 0]]
	RightArrow:appendEventHandler( "input_source_changed", function ( f4_arg0, f4_arg1 )
		f4_arg1.menu = f4_arg1.menu or f1_local1 --[[ @ 0]]
		f1_local1:updateElementState( RightArrow, f4_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local MouseWheelFocusable = RightArrow --[[ @ 0]]
	local LeftArrow = RightArrow.subscribeToModel --[[ @ 0]]
	local SpecialistName = Engine[@"GetModelForController"]( f1_arg0 ) --[[ @ 0]]
	LeftArrow( MouseWheelFocusable, SpecialistName.LastInput, function ( f5_arg0 )
		f1_local1:updateElementState( RightArrow, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f5_arg0:get(),
			modelName = "LastInput"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	RightArrow.KeyMouseImage:setImage( RegisterImage( @"uie_optionswidgets_arrow" ) ) --[[ @ 0]]
	RightArrow.ControllerImage:setImage( RegisterImage( @"uie_optionswidgets_arrow" ) ) --[[ @ 0]]
	RightArrow:registerEventHandler( "gain_focus", function ( element, event )
		local f6_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f6_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f6_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"] ) --[[ @ 0]]
		return f6_local0
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( RightArrow, f1_arg0, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], "MOUSE1", function ( element, menu, controller, model )
		CoD.GridAndListUtility.NavigateGridItemInChild( self.SpecialListTab, controller, "positions", true ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], @"hash_0", nil, "MOUSE1" ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	self:addElement( RightArrow ) --[[ @ 0]]
	self.RightArrow = RightArrow --[[ @ 0]]
	
	LeftArrow = nil --[[ @ 0]]
	
	LeftArrow = CoD.BumperButtonWithKeyMouse.new( f1_local1, f1_arg0, 0.5, 0.5, -263.5, -196.5, 0.5, 0.5, -531, -486 ) --[[ @ 0]]
	LeftArrow:mergeStateConditions( {
		{
			stateName = "Gamepad",
			condition = function ( menu, element, event )
				return IsGamepad( f1_arg0 ) and AlwaysFalse()
			end
		}
	} ) --[[ @ 0]]
	LeftArrow:appendEventHandler( "input_source_changed", function ( f10_arg0, f10_arg1 )
		f10_arg1.menu = f10_arg1.menu or f1_local1 --[[ @ 0]]
		f1_local1:updateElementState( LeftArrow, f10_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	SpecialistName = LeftArrow --[[ @ 0]]
	MouseWheelFocusable = LeftArrow.subscribeToModel --[[ @ 0]]
	local JobTitle = Engine[@"GetModelForController"]( f1_arg0 ) --[[ @ 0]]
	MouseWheelFocusable( SpecialistName, JobTitle.LastInput, function ( f11_arg0 )
		f1_local1:updateElementState( LeftArrow, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f11_arg0:get(),
			modelName = "LastInput"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	LeftArrow:setZRot( 180 ) --[[ @ 0]]
	LeftArrow.KeyMouseImage:setImage( RegisterImage( @"uie_optionswidgets_arrow" ) ) --[[ @ 0]]
	LeftArrow.ControllerImage:setImage( RegisterImage( @"uie_optionswidgets_arrow" ) ) --[[ @ 0]]
	LeftArrow:registerEventHandler( "gain_focus", function ( element, event )
		local f12_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f12_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f12_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"] ) --[[ @ 0]]
		return f12_local0
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( LeftArrow, f1_arg0, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], "MOUSE1", function ( element, menu, controller, model )
		CoD.GridAndListUtility.NavigateGridItemInChild( self.SpecialListTab, controller, "positions", false ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], @"hash_0", nil, "MOUSE1" ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	self:addElement( LeftArrow ) --[[ @ 0]]
	self.LeftArrow = LeftArrow --[[ @ 0]]
	
	MouseWheelFocusable = nil --[[ @ 0]]
	
	MouseWheelFocusable = CoD.emptyFocusable.new( f1_local1, f1_arg0, 0.5, 0.5, -212, 212, 0, 0, 21, 51 ) --[[ @ 0]]
	MouseWheelFocusable:registerEventHandler( "gain_focus", function ( element, event )
		local f15_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f15_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f15_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"] ) --[[ @ 0]]
		return f15_local0
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( MouseWheelFocusable, f1_arg0, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], "MWHEELUP", function ( element, menu, controller, model )
		CoD.GridAndListUtility.NavigateGridItemInChild( self.SpecialListTab, controller, "positions", false ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], @"hash_0", nil, "MWHEELUP" ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( MouseWheelFocusable, f1_arg0, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], "MWHEELDOWN", function ( element, menu, controller, model )
		CoD.GridAndListUtility.NavigateGridItemInChild( self.SpecialListTab, controller, "positions", true ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], @"hash_0", nil, "MWHEELDOWN" ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	self:addElement( MouseWheelFocusable ) --[[ @ 0]]
	self.MouseWheelFocusable = MouseWheelFocusable --[[ @ 0]]
	
	SpecialistName = LUI.UIText.new( 0.5, 0.5, -191, 191, 0, 0, 801, 891 ) --[[ @ 0]]
	SpecialistName:setRGB( 0.92, 0.89, 0.72 ) --[[ @ 0]]
	SpecialistName:setAlpha( 0.7 ) --[[ @ 0]]
	SpecialistName:setZoom( 3 ) --[[ @ 0]]
	SpecialistName:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	SpecialistName:setLetterSpacing( 10 ) --[[ @ 0]]
	SpecialistName:setAlignment( Enum[@"LUIAlignment"][@"hash_1FEEB12BCB0D7041"] ) --[[ @ 0]]
	self:addElement( SpecialistName ) --[[ @ 0]]
	self.SpecialistName = SpecialistName --[[ @ 0]]
	
	JobTitle = LUI.UIText.new( 0.5, 0.5, -171, 171, 0, 0, 781, 801 ) --[[ @ 0]]
	JobTitle:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	JobTitle:setZoom( 3 ) --[[ @ 0]]
	JobTitle:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	JobTitle:setLetterSpacing( 10 ) --[[ @ 0]]
	JobTitle:setAlignment( Enum[@"LUIAlignment"][@"hash_1FEEB12BCB0D7041"] ) --[[ @ 0]]
	self:addElement( JobTitle ) --[[ @ 0]]
	self.JobTitle = JobTitle --[[ @ 0]]
	
	local HubStatsButton = CoD.HubStatsButton.new( f1_local1, f1_arg0, 0.5, 0.5, 420, 813, 0, 0, 638.5, 815.5 ) --[[ @ 0]]
	self:addElement( HubStatsButton ) --[[ @ 0]]
	self.HubStatsButton = HubStatsButton --[[ @ 0]]
	
	local HubWeaponsButton = CoD.HubWeaponsButton.new( f1_local1, f1_arg0, 0.5, 0.5, 420, 813, 0, 0, 222.5, 601.5 ) --[[ @ 0]]
	HubWeaponsButton:registerEventHandler( "gain_focus", function ( element, event )
		local f20_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f20_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f20_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f20_local0
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( HubWeaponsButton, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], nil, function ( element, menu, controller, model )
		PlaySoundAlias( "uin_main_edit" ) --[[ @ 0]]
		OpenOverlay( self, "MPSpecialistHUBWeapons", controller, {
			_model = element:getModel()
		} ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, nil ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	self:addElement( HubWeaponsButton ) --[[ @ 0]]
	self.HubWeaponsButton = HubWeaponsButton --[[ @ 0]]
	
	local options = LUI.UIList.new( f1_local1, f1_arg0, 13, 0, nil, false, false, false, false ) --[[ @ 0]]
	options:setLeftRight( 0.5, 0.5, -813, -420 ) --[[ @ 0]]
	options:setTopBottom( 0, 0, 222.5, 537.5 ) --[[ @ 0]]
	options:setWidgetType( CoD.SpecialistPersonalizationButtonOption ) --[[ @ 0]]
	options:setVerticalCount( 4 ) --[[ @ 0]]
	options:setSpacing( 13 ) --[[ @ 0]]
	options:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	options:setDataSource( "MPSpecialistHUBOptions" ) --[[ @ 0]]
	options:registerEventHandler( "gain_focus", function ( element, event )
		local f23_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f23_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f23_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f23_local0
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( options, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		PlaySoundAlias( "uin_toggle_generic" ) --[[ @ 0]]
		ProcessListAction( self, element, controller, menu ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, "ui_confirm" ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	options:subscribeToGlobalModel( f1_arg0, "PerController", "PositionLoadoutList.SelectedCharacterIndex", function ( model )
		local f26_local0 = options --[[ @ 0]]
		UpdateElementDataSource( self, "options" ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( options ) --[[ @ 0]]
	self.options = options --[[ @ 0]]
	
	local SpecialListTab = CoD.HubTopTab.new( f1_local1, f1_arg0, 0, 0, 660, 1260, 0, 0, 17, 53 ) --[[ @ 0]]
	self:addElement( SpecialListTab ) --[[ @ 0]]
	self.SpecialListTab = SpecialListTab --[[ @ 0]]
	
	local CommonIdentityWidgetStreamlinedSafeAreaContainer = CoD.CommonIdentityWidgetStreamlinedSafeAreaContainer.new( f1_local1, f1_arg0, 0, 0, 1, 1921, 0, 0, 0, 1080 ) --[[ @ 0]]
	CommonIdentityWidgetStreamlinedSafeAreaContainer:registerEventHandler( "menu_loaded", function ( element, event )
		local f27_local0 = nil --[[ @ 0]]
		if element.menuLoaded then
			f27_local0 = element:menuLoaded( event ) --[[ @ 0]]
		elseif element.super.menuLoaded then
			f27_local0 = element.super:menuLoaded( event ) --[[ @ 0]]
		end
		SizeToSafeArea( element, f1_arg0 ) --[[ @ 0]]
		if not f27_local0 then
			f27_local0 = element:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f27_local0
	end ) --[[ @ 0]]
	self:addElement( CommonIdentityWidgetStreamlinedSafeAreaContainer ) --[[ @ 0]]
	self.CommonIdentityWidgetStreamlinedSafeAreaContainer = CommonIdentityWidgetStreamlinedSafeAreaContainer --[[ @ 0]]
	
	SpecialistName:linkToElementModel( SpecialListTab.positions, "name", true, function ( model )
		local f28_local0 = model:get() --[[ @ 0]]
		if f28_local0 ~= nil then
			SpecialistName:setText( LocalizeToUpperString( f28_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	JobTitle:linkToElementModel( SpecialListTab.positions, "jobTitle", true, function ( model )
		local f29_local0 = model:get() --[[ @ 0]]
		if f29_local0 ~= nil then
			JobTitle:setText( LocalizeToUpperString( f29_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	HubStatsButton:linkToElementModel( SpecialListTab.positions, nil, false, function ( model )
		HubStatsButton:setModel( model, f1_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	HubWeaponsButton:linkToElementModel( SpecialListTab.positions, nil, false, function ( model )
		HubWeaponsButton:setModel( model, f1_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"], nil, function ( element, menu, controller, model )
		GoBack( self, controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"], @"hash_370A9FDC87CD3D48", nil, nil ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"], "ui_contextual_2", function ( element, menu, controller, model )
		PlaySoundAlias( "uin_main_edit" ) --[[ @ 0]]
		OpenOverlay( self, "MPSpecialistHUBPreviewMoment", controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"], @"hash_52FB29ED3A3CA79", nil, "ui_contextual_2" ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( self, "close", function ( element )
		SendClientScriptMenuChangeNotify( f1_arg0, f1_local1, false ) --[[ @ 0]]
		UploadStats( self, f1_arg0 ) --[[ @ 0]]
		SaveLoadoutGeneric( f1_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	if CoD.isPC then
		XCamMouseControl.id = "XCamMouseControl" --[[ @ 0]]
	end
	BackingFrame:setModel( self.buttonModel, f1_arg0 ) --[[ @ 0]]
	if CoD.isPC then
		BackingFrame.id = "BackingFrame" --[[ @ 0]]
	end
	if CoD.isPC then
		RightArrow.id = "RightArrow" --[[ @ 0]]
	end
	if CoD.isPC then
		LeftArrow.id = "LeftArrow" --[[ @ 0]]
	end
	if CoD.isPC then
		MouseWheelFocusable.id = "MouseWheelFocusable" --[[ @ 0]]
	end
	HubStatsButton.id = "HubStatsButton" --[[ @ 0]]
	HubWeaponsButton.id = "HubWeaponsButton" --[[ @ 0]]
	options.id = "options" --[[ @ 0]]
	SpecialListTab.id = "SpecialListTab" --[[ @ 0]]
	self:processEvent( {
		name = "menu_loaded",
		controller = f1_arg0
	} ) --[[ @ 0]]
	self.__defaultFocus = options --[[ @ 0]]
	if CoD.isPC and (IsKeyboard( f1_arg0 ) or self.ignoreCursor) then
		self:restoreState( f1_arg0 ) --[[ @ 0]]
	end
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg0 ) --[[ @ 0]]
	end
	
	local f1_local14 = self --[[ @ 0]]
	CoD.FreeCursorUtility.RetriggerCursorPosition( f1_local1, f1_arg0 ) --[[ @ 0]]
	CoD.PlayerRoleUtility.UpdateUsingController( f1_arg0 ) --[[ @ 0]]
	DisableKeyboardNavigationByElement( RightArrow ) --[[ @ 0]]
	DisableKeyboardNavigationByElement( LeftArrow ) --[[ @ 0]]
	f1_local14 = MouseWheelFocusable --[[ @ 0]]
	SetElementProperty( f1_local14, "_yieldFocus", nil ) --[[ @ 0]]
	DisableKeyboardNavigationByElement( f1_local14 ) --[[ @ 0]]
	SizeToSafeArea( SpecialListTab, f1_arg0 ) --[[ @ 0]]
	return self
end
 --[[ @ 0]]
CoD.MPSpecialistHUBInspect.__resetProperties = function ( f37_arg0 )
	f37_arg0.HubWeaponsButton:completeAnimation() --[[ @ 0]]
	f37_arg0.HubStatsButton:completeAnimation() --[[ @ 0]]
	f37_arg0.options:completeAnimation() --[[ @ 0]]
	f37_arg0.HubWeaponsButton:setAlpha( 1 ) --[[ @ 0]]
	f37_arg0.HubStatsButton:setAlpha( 1 ) --[[ @ 0]]
	f37_arg0.options:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.MPSpecialistHUBInspect.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f38_arg0, f38_arg1 )
			f38_arg0:__resetProperties() --[[ @ 0]]
			f38_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			local f38_local0 = function ( f39_arg0 )
				local f39_local0 = function ( f40_arg0 )
					f40_arg0:beginAnimation( 150, Enum[@"hash_1F50FFF429AB1890"][@"hash_66F6186B702830BC"] ) --[[ @ 0]]
					f40_arg0:setAlpha( 1 ) --[[ @ 0]]
					f40_arg0:registerEventHandler( "transition_complete_keyframe", f38_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f38_arg0.HubStatsButton:beginAnimation( 350 ) --[[ @ 0]]
				f38_arg0.HubStatsButton:registerEventHandler( "interrupted_keyframe", f38_arg0.clipInterrupted ) --[[ @ 0]]
				f38_arg0.HubStatsButton:registerEventHandler( "transition_complete_keyframe", f39_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f38_arg0.HubStatsButton:completeAnimation() --[[ @ 0]]
			f38_arg0.HubStatsButton:setAlpha( 0 ) --[[ @ 0]]
			f38_local0( f38_arg0.HubStatsButton ) --[[ @ 0]]
			local f38_local1 = function ( f41_arg0 )
				local f41_local0 = function ( f42_arg0 )
					f42_arg0:beginAnimation( 149 ) --[[ @ 0]]
					f42_arg0:setAlpha( 1 ) --[[ @ 0]]
					f42_arg0:registerEventHandler( "transition_complete_keyframe", f38_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f38_arg0.HubWeaponsButton:beginAnimation( 200 ) --[[ @ 0]]
				f38_arg0.HubWeaponsButton:registerEventHandler( "interrupted_keyframe", f38_arg0.clipInterrupted ) --[[ @ 0]]
				f38_arg0.HubWeaponsButton:registerEventHandler( "transition_complete_keyframe", f41_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f38_arg0.HubWeaponsButton:completeAnimation() --[[ @ 0]]
			f38_arg0.HubWeaponsButton:setAlpha( 0 ) --[[ @ 0]]
			f38_local1( f38_arg0.HubWeaponsButton ) --[[ @ 0]]
			local f38_local2 = function ( f43_arg0 )
				local f43_local0 = function ( f44_arg0 )
					f44_arg0:beginAnimation( 150, Enum[@"hash_1F50FFF429AB1890"][@"hash_15193EA7825DC097"] ) --[[ @ 0]]
					f44_arg0:setAlpha( 1 ) --[[ @ 0]]
					f44_arg0:registerEventHandler( "transition_complete_keyframe", f38_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f38_arg0.options:beginAnimation( 50 ) --[[ @ 0]]
				f38_arg0.options:registerEventHandler( "interrupted_keyframe", f38_arg0.clipInterrupted ) --[[ @ 0]]
				f38_arg0.options:registerEventHandler( "transition_complete_keyframe", f43_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f38_arg0.options:completeAnimation() --[[ @ 0]]
			f38_arg0.options:setAlpha( 0 ) --[[ @ 0]]
			f38_local2( f38_arg0.options ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.MPSpecialistHUBInspect.__onClose = function ( f45_arg0 )
	f45_arg0.SpecialistName:close() --[[ @ 0]]
	f45_arg0.JobTitle:close() --[[ @ 0]]
	f45_arg0.HubStatsButton:close() --[[ @ 0]]
	f45_arg0.HubWeaponsButton:close() --[[ @ 0]]
	f45_arg0.XCamMouseControl:close() --[[ @ 0]]
	f45_arg0.BackingFrame:close() --[[ @ 0]]
	f45_arg0.RightArrow:close() --[[ @ 0]]
	f45_arg0.LeftArrow:close() --[[ @ 0]]
	f45_arg0.MouseWheelFocusable:close() --[[ @ 0]]
	f45_arg0.options:close() --[[ @ 0]]
	f45_arg0.SpecialListTab:close() --[[ @ 0]]
	f45_arg0.CommonIdentityWidgetStreamlinedSafeAreaContainer:close() --[[ @ 0]]
end
 --[[ @ 0]]
