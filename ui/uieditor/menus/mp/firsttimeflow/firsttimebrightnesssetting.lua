-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:51
require( "ui/uieditor/widgets/backgroundframes/menuframeingame" ) --[[ @ 0]]
require( "x64:417dcd66c5f1d136" ) --[[ @ 0]]
require( "ui/uieditor/widgets/startmenu/options/flyout/startmenu_options_settingslider" ) --[[ @ 0]]
require( "ui/uieditor/widgets/startmenu/options/startmenuoptionsbackground" ) --[[ @ 0]]
require( "x64:3b42aabdb2e1a7d3" ) --[[ @ 0]]
require( "ui/uieditor/widgets/startmenu/options/startmenuoptionsmaincorners" ) --[[ @ 0]]
require( "ui/uieditor/widgets/startmenu/options/startmenuoptionsmainframe" ) --[[ @ 0]]

local PostLoadFunc = function ( self, controller, menu )
	if CoD.isPC then
		self.continueButton:registerEventHandler( "button_action", function ( element, event )
			SetProfileVar( controller, "com_first_time", 0 ) --[[ @ 0]]
			UpdateGamerprofile( self, self, controller ) --[[ @ 0]]
			ForceNotifyGlobalModel( controller, "mainFirstTimeFlowComplete" ) --[[ @ 0]]
		end ) --[[ @ 0]]
	end
	if CoD.isDurango then
		self.XboxGamerTag:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_307C28F82C17DAE8", Engine[@"getgamertagforcontroller"]( 0 ) ) ) --[[ @ 0]]
	else
		self.XboxGamerTag:setText( "" ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
CoD.FirstTimeBrightnessSetting = InheritFrom( CoD.Menu ) --[[ @ 0]]
LUI.createMenu.FirstTimeBrightnessSetting = function ( f3_arg0, f3_arg1 )
	local self = CoD.Menu.NewForUIEditor( "FirstTimeBrightnessSetting", f3_arg0 ) --[[ @ 0]]
	local f3_local1 = self --[[ @ 0]]
	MenuHidesFreeCursor( f3_local1, f3_arg0 ) --[[ @ 0]]
	CoD.BaseUtility.CreateControllerModel( f3_arg0, "profile.brightnessPreviewColor" ) --[[ @ 0]]
	self:setClass( CoD.FirstTimeBrightnessSetting ) --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self:setOwner( f3_arg0 ) --[[ @ 0]]
	self:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	self:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	self:playSound( "menu_open", f3_arg0 ) --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f3_local1:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local Background = CoD.StartMenuOptionsBackground.new( f3_local1, f3_arg0, 0.5, 1.5, -960, -960, 0.5, 1.5, -540.5, -540.5 ) --[[ @ 0]]
	self:addElement( Background ) --[[ @ 0]]
	self.Background = Background --[[ @ 0]]
	
	local MenuFrame = CoD.MenuFrameIngame.new( f3_local1, f3_arg0, 0.5, 0.5, -960, 960, 0.5, 0.5, -540, 540 ) --[[ @ 0]]
	self:addElement( MenuFrame ) --[[ @ 0]]
	self.MenuFrame = MenuFrame --[[ @ 0]]
	
	local OverlayLarge = LUI.UIImage.new( 0, 1, 0, 0, 0.11, 0.11, 0, 900 ) --[[ @ 0]]
	OverlayLarge:setRGB( 0, 0, 0 ) --[[ @ 0]]
	OverlayLarge:setAlpha( 0 ) --[[ @ 0]]
	OverlayLarge:setupUIStreamedImage( 0 ) --[[ @ 0]]
	self:addElement( OverlayLarge ) --[[ @ 0]]
	self.OverlayLarge = OverlayLarge --[[ @ 0]]
	
	local OverlaySmall = LUI.UIImage.new( 0.5, 0.5, -306, 306, 0.5, 0.5, -320, 320 ) --[[ @ 0]]
	OverlaySmall:setRGB( 0, 0, 0 ) --[[ @ 0]]
	OverlaySmall:setAlpha( 0.99 ) --[[ @ 0]]
	OverlaySmall:setZoom( 40 ) --[[ @ 0]]
	OverlaySmall:setupUIStreamedImage( 0 ) --[[ @ 0]]
	self:addElement( OverlaySmall ) --[[ @ 0]]
	self.OverlaySmall = OverlaySmall --[[ @ 0]]
	
	local DescText = LUI.UIText.new( 0.5, 0.5, -557, 557, 0, 0, 239.5, 260.5 ) --[[ @ 0]]
	DescText:setRGB( 0.6, 0.6, 0.6 ) --[[ @ 0]]
	DescText:setZoom( 40 ) --[[ @ 0]]
	DescText:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_639538A6EEE7239A" ) ) --[[ @ 0]]
	DescText:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	DescText:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	DescText:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	self:addElement( DescText ) --[[ @ 0]]
	self.DescText = DescText --[[ @ 0]]
	
	local Logo = LUI.UIImage.new( 0.5, 0.5, -210.5, 210.5, 0, 0, 324, 776 ) --[[ @ 0]]
	Logo:setZoom( 40 ) --[[ @ 0]]
	Logo:setImage( RegisterImage( @"uie_ui_icon_startmenu_option_brightnesslogo" ) ) --[[ @ 0]]
	Logo:setupUIStreamedImage( 0 ) --[[ @ 0]]
	Logo:subscribeToGlobalModel( f3_arg0, "PerController", "profile.brightnessPreviewColor", function ( model )
		local f4_local0 = model:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			Logo:setRGB( f4_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Logo ) --[[ @ 0]]
	self.Logo = Logo --[[ @ 0]]
	
	local continueButton = CoD.GenericClickButton.new( f3_local1, f3_arg0, 0, 0, 938, 1141, 0, 0, 943, 1003 ) --[[ @ 0]]
	continueButton:setAlpha( 0 ) --[[ @ 0]]
	continueButton:setZoom( 50 ) --[[ @ 0]]
	continueButton.label:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"menu/continue" ) ) --[[ @ 0]]
	self:addElement( continueButton ) --[[ @ 0]]
	self.continueButton = continueButton --[[ @ 0]]
	
	local XboxGamerTag = LUI.UIText.new( 0.5, 0.5, -400, 400, 0, 0, 943, 982 ) --[[ @ 0]]
	XboxGamerTag:setZoom( 50 ) --[[ @ 0]]
	XboxGamerTag:setText( "" ) --[[ @ 0]]
	XboxGamerTag:setTTF( "notosans_regular" ) --[[ @ 0]]
	XboxGamerTag:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	self:addElement( XboxGamerTag ) --[[ @ 0]]
	self.XboxGamerTag = XboxGamerTag --[[ @ 0]]
	
	local Button = CoD.StartMenu_Options_SettingSlider.new( f3_local1, f3_arg0, 0.5, 0.5, -350, 350, 0, 0, 870, 916 ) --[[ @ 0]]
	Button:setZoom( 50 ) --[[ @ 0]]
	self:addElement( Button ) --[[ @ 0]]
	self.Button = Button --[[ @ 0]]
	
	local Header = CoD.StartMenuOptionsHeader.new( f3_local1, f3_arg0, 0, 1, 2, 2, 0, 0, 44, 124 ) --[[ @ 0]]
	Header.HeaderText:setText( LocalizeToUpperString( @"menu/brightness" ) ) --[[ @ 0]]
	self:addElement( Header ) --[[ @ 0]]
	self.Header = Header --[[ @ 0]]
	
	local BGFrame = CoD.StartMenuOptionsMainFrame.new( f3_local1, f3_arg0, 0.5, 0.5, -306, 306, 0.5, 0.5, -320, 320 ) --[[ @ 0]]
	BGFrame:setAlpha( 0.01 ) --[[ @ 0]]
	BGFrame:setZoom( 40 ) --[[ @ 0]]
	self:addElement( BGFrame ) --[[ @ 0]]
	self.BGFrame = BGFrame --[[ @ 0]]
	
	local BGCorner = CoD.StartMenuOptionsMainCorners.new( f3_local1, f3_arg0, 0.5, 0.5, -306, 306, 0.5, 0.5, -320, 320 ) --[[ @ 0]]
	BGCorner:setAlpha( 0.8 ) --[[ @ 0]]
	BGCorner:setZoom( 40 ) --[[ @ 0]]
	self:addElement( BGCorner ) --[[ @ 0]]
	self.BGCorner = BGCorner --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "KBMouse",
			condition = function ( menu, element, event )
				return IsPC() and IsMouse( f3_arg0 )
			end
		}
	} ) --[[ @ 0]]
	self:appendEventHandler( "input_source_changed", function ( f6_arg0, f6_arg1 )
		f6_arg1.menu = f6_arg1.menu or f3_local1 --[[ @ 0]]
		f3_local1:updateElementState( self, f6_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local f3_local14 = self --[[ @ 0]]
	local f3_local15 = self.subscribeToModel --[[ @ 0]]
	local f3_local16 = Engine[@"getmodelforcontroller"]( f3_arg0 ) --[[ @ 0]]
	f3_local15( f3_local14, f3_local16.LastInput, function ( f7_arg0 )
		f3_local1:updateElementState( self, {
			name = "model_validation",
			menu = f3_local1,
			controller = f3_arg0,
			modelValue = f7_arg0:get(),
			modelName = "LastInput"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f3_local1:AddButtonCallbackFunction( self, f3_arg0, Enum[@"luibutton"][@"lui_key_xbb_pscircle"], nil, function ( element, menu, controller, model )
		GoBack( self, controller ) --[[ @ 0]]
		ClearMenuSavedState( menu ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xbb_pscircle"], @"hash_0", nil, nil ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	f3_local1:AddButtonCallbackFunction( self, f3_arg0, Enum[@"luibutton"][@"lui_key_xbx_pssquare"], nil, function ( element, menu, controller, model )
		CoD.OptionsUtility.ResetPlayerSettingToDefault( self.Button, controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xbx_pssquare"], @"menu/default", nil, nil ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	f3_local1:AddButtonCallbackFunction( self, f3_arg0, Enum[@"luibutton"][@"lui_key_xba_pscross"], nil, function ( element, menu, controller, model )
		ClearMenuSavedState( menu ) --[[ @ 0]]
		CoD.LobbyUtility.CompleteFirstTimeBrightness( menu, controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"menu/confirm", nil, nil ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	self:subscribeToGlobalModel( f3_arg0, "PerController", "PlayerSettingsUpdate", function ( model )
		local f14_local0 = self --[[ @ 0]]
		if CoD.ModelUtility.IsModelValueEqualTo( f3_arg0, "PlayerSettingsUpdate", "scene_brightness" ) then
			CoD.OptionsUtility.UpdateBrightnessPreviewColor( f3_arg0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	MenuFrame:setModel( self.buttonModel, f3_arg0 ) --[[ @ 0]]
	if CoD.isPC then
		MenuFrame.id = "MenuFrame" --[[ @ 0]]
	end
	continueButton.id = "continueButton" --[[ @ 0]]
	Button.id = "Button" --[[ @ 0]]
	self:processEvent( {
		name = "menu_loaded",
		controller = f3_arg0
	} ) --[[ @ 0]]
	self.__defaultFocus = Button --[[ @ 0]]
	if CoD.isPC and (IsKeyboard( f3_arg0 ) or self.ignoreCursor) then
		self:restoreState( f3_arg0 ) --[[ @ 0]]
	end
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f3_arg0 ) --[[ @ 0]]
	end
	
	f3_local15 = self --[[ @ 0]]
	CoD.OptionsUtility.SetPlayerSettingsModel( Button, f3_arg0, "scene_brightness" ) --[[ @ 0]]
	return self
end
 --[[ @ 0]]
CoD.FirstTimeBrightnessSetting.__resetProperties = function ( f15_arg0 )
	f15_arg0.continueButton:completeAnimation() --[[ @ 0]]
	f15_arg0.continueButton:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.FirstTimeBrightnessSetting.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f16_arg0, f16_arg1 )
			f16_arg0:__resetProperties() --[[ @ 0]]
			f16_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	KBMouse = {
		DefaultClip = function ( f17_arg0, f17_arg1 )
			f17_arg0:__resetProperties() --[[ @ 0]]
			f17_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f17_arg0.continueButton:completeAnimation() --[[ @ 0]]
			f17_arg0.continueButton:setAlpha( 1 ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.continueButton ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.FirstTimeBrightnessSetting.__onClose = function ( f18_arg0 )
	f18_arg0.Background:close() --[[ @ 0]]
	f18_arg0.MenuFrame:close() --[[ @ 0]]
	f18_arg0.Logo:close() --[[ @ 0]]
	f18_arg0.continueButton:close() --[[ @ 0]]
	f18_arg0.Button:close() --[[ @ 0]]
	f18_arg0.Header:close() --[[ @ 0]]
	f18_arg0.BGFrame:close() --[[ @ 0]]
	f18_arg0.BGCorner:close() --[[ @ 0]]
end
 --[[ @ 0]]
