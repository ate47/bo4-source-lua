-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:51
require( "ui/uieditor/widgets/backgroundframes/genericmenuframeidentity" ) --[[ @ 0]]
require( "x64:6b157ebcd8b4adcc" ) --[[ @ 0]]
require( "ui/uieditor/widgets/startmenu/options/startmenuoptionsbackground" ) --[[ @ 0]]
require( "x64:40c7e896ee4bc3f8" ) --[[ @ 0]]

CoD.CallingCards = InheritFrom( CoD.Menu ) --[[ @ 0]]
LUI.createMenu.CallingCards = function ( f1_arg0, f1_arg1 )
	local self = CoD.Menu.NewForUIEditor( "CallingCards", f1_arg0 ) --[[ @ 0]]
	local f1_local1 = self --[[ @ 0]]
	CoD.BaseUtility.SetPropertiesFromUserData( self, f1_arg1 ) --[[ @ 0]]
	self:setClass( CoD.CallingCards ) --[[ @ 0]]
	self.soundSet = "ChooseDecal" --[[ @ 0]]
	self:setOwner( f1_arg0 ) --[[ @ 0]]
	self:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	self:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	self:playSound( "menu_open", f1_arg0 ) --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_local1:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local Background = CoD.StartMenuOptionsBackground.new( f1_local1, f1_arg0, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	self:addElement( Background ) --[[ @ 0]]
	self.Background = Background --[[ @ 0]]
	
	local MenuFrame = CoD.GenericMenuFrameIdentity.new( f1_local1, f1_arg0, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	MenuFrame.CommonHeader.subtitle.StageTitle:setText( LocalizeToUpperString( @"hash_3ED22CCD3920E18B" ) ) --[[ @ 0]]
	MenuFrame:subscribeToGlobalModel( f1_arg0, "LobbyRoot", "lobbyTitle", function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			MenuFrame.CommonHeader.subtitle.subtitle:setText( Engine[@"hash_4F9F1239CFD921FE"]( f2_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( MenuFrame ) --[[ @ 0]]
	self.MenuFrame = MenuFrame --[[ @ 0]]
	
	local TabFrame = LUI.UIFrame.new( f1_local1, f1_arg0, 0, 0, false ) --[[ @ 0]]
	TabFrame:setLeftRight( 0.5, 0.5, -845, 845 ) --[[ @ 0]]
	TabFrame:setTopBottom( 0.46, 0.46, -380, 470 ) --[[ @ 0]]
	self:addElement( TabFrame ) --[[ @ 0]]
	self.TabFrame = TabFrame --[[ @ 0]]
	
	local SafeAreaTabs = CoD.Challenges_SafeAreaWidget.new( f1_local1, f1_arg0, 0, 1, 0, 0, 0, 0, 0, 1080 ) --[[ @ 0]]
	SafeAreaTabs.FETabBar.Tabs.grid:setDataSource( "CallingCardsTabs" ) --[[ @ 0]]
	SafeAreaTabs:registerEventHandler( "list_active_changed", function ( element, event )
		local f3_local0 = nil --[[ @ 0]]
		CoD.ChallengesUtility.UpdateCardListFromTabChanged( f1_local1, element, f1_arg0 ) --[[ @ 0]]
		return f3_local0
	end ) --[[ @ 0]]
	self:addElement( SafeAreaTabs ) --[[ @ 0]]
	self.SafeAreaTabs = SafeAreaTabs --[[ @ 0]]
	
	local TrialWidget = CoD.TrialInfoBannerWidget.new( f1_local1, f1_arg0, 1, 1, -640, -125, 1, 1, -235, -200 ) --[[ @ 0]]
	TrialWidget:mergeStateConditions( {
		{
			stateName = "Shown",
			condition = function ( menu, element, event )
				return IsGameTrial() and CoD.ModelUtility.IsSelfModelValueEqualTo( element, f1_arg0, "tabCategory", "loot" )
			end
		}
	} ) --[[ @ 0]]
	TrialWidget:linkToElementModel( TrialWidget, "tabCategory", true, function ( model )
		f1_local1:updateElementState( TrialWidget, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = model:get(),
			modelName = "tabCategory"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( TrialWidget ) --[[ @ 0]]
	self.TrialWidget = TrialWidget --[[ @ 0]]
	
	TabFrame:linkToElementModel( SafeAreaTabs.FETabBar.Tabs.grid, "tabWidget", true, function ( model )
		local f6_local0 = model:get() --[[ @ 0]]
		if f6_local0 ~= nil then
			TabFrame:changeFrameWidget( f6_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	TrialWidget:linkToElementModel( SafeAreaTabs.FETabBar.Tabs.grid, nil, false, function ( model )
		TrialWidget:setModel( model, f1_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:registerEventHandler( "list_active_changed", function ( self, event )
		local f8_local0 = nil --[[ @ 0]]
		CoD.ChallengesUtility.UpdateCardListFromTabChanged( f1_local1, self, f1_arg0 ) --[[ @ 0]]
		return f8_local0
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"luibutton"][@"lui_key_xbb_pscircle"], nil, function ( element, menu, controller, model )
		GoBack( self, controller ) --[[ @ 0]]
		UploadStats( self, controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xbb_pscircle"], @"menu/back", nil, nil ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( self, "close", function ( element )
		CallingCards_GoBack( self, f1_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	MenuFrame:setModel( self.buttonModel, f1_arg0 ) --[[ @ 0]]
	MenuFrame.id = "MenuFrame" --[[ @ 0]]
	TabFrame.id = "TabFrame" --[[ @ 0]]
	SafeAreaTabs.id = "SafeAreaTabs" --[[ @ 0]]
	self:processEvent( {
		name = "menu_loaded",
		controller = f1_arg0
	} ) --[[ @ 0]]
	self.__defaultFocus = TabFrame --[[ @ 0]]
	if CoD.isPC and (IsKeyboard( f1_arg0 ) or self.ignoreCursor) then
		self:restoreState( f1_arg0 ) --[[ @ 0]]
	end
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg0 ) --[[ @ 0]]
	end
	
	local f1_local7 = self --[[ @ 0]]
	SizeToSafeArea( SafeAreaTabs, f1_arg0 ) --[[ @ 0]]
	return self
end
 --[[ @ 0]]
CoD.CallingCards.__resetProperties = function ( f12_arg0 )
	f12_arg0.TabFrame:completeAnimation() --[[ @ 0]]
	f12_arg0.TabFrame:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.CallingCards.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f13_arg0, f13_arg1 )
			f13_arg0:__resetProperties() --[[ @ 0]]
			f13_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f13_local0 = function ( f14_arg0 )
				local f14_local0 = function ( f15_arg0 )
					f15_arg0:beginAnimation( 150 ) --[[ @ 0]]
					f15_arg0:setAlpha( 1 ) --[[ @ 0]]
					f15_arg0:registerEventHandler( "transition_complete_keyframe", f13_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f13_arg0.TabFrame:beginAnimation( 150 ) --[[ @ 0]]
				f13_arg0.TabFrame:registerEventHandler( "interrupted_keyframe", f13_arg0.clipInterrupted ) --[[ @ 0]]
				f13_arg0.TabFrame:registerEventHandler( "transition_complete_keyframe", f14_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f13_arg0.TabFrame:completeAnimation() --[[ @ 0]]
			f13_arg0.TabFrame:setAlpha( 0 ) --[[ @ 0]]
			f13_local0( f13_arg0.TabFrame ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.CallingCards.__onClose = function ( f16_arg0 )
	f16_arg0.TabFrame:close() --[[ @ 0]]
	f16_arg0.TrialWidget:close() --[[ @ 0]]
	f16_arg0.Background:close() --[[ @ 0]]
	f16_arg0.MenuFrame:close() --[[ @ 0]]
	f16_arg0.SafeAreaTabs:close() --[[ @ 0]]
end
 --[[ @ 0]]
