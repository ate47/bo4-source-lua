-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:51
require( "ui/uieditor/widgets/backgroundframes/cacfullpopupbackground" ) --[[ @ 0]]
require( "ui/uieditor/widgets/cac/overcapacitylist" ) --[[ @ 0]]
require( "ui/uieditor/widgets/pc/pc_smallclosebutton" ) --[[ @ 0]]
require( "ui/uieditor/widgets/systemoverlays/featureoverlay_button_mouseonly" ) --[[ @ 0]]

CoD.OverCapacity = InheritFrom( CoD.Menu ) --[[ @ 0]]
LUI.createMenu.OverCapacity = function ( f1_arg0, f1_arg1 )
	local self = CoD.Menu.NewForUIEditor( "OverCapacity", f1_arg0 ) --[[ @ 0]]
	local f1_local1 = self --[[ @ 0]]
	CoD.BaseUtility.SetPropertiesFromUserData( self, f1_arg1 ) --[[ @ 0]]
	self:setClass( CoD.OverCapacity ) --[[ @ 0]]
	self.soundSet = "CAC_Overcapacity" --[[ @ 0]]
	self:setOwner( f1_arg0 ) --[[ @ 0]]
	self:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	self:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	self:playSound( "menu_open", f1_arg0 ) --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	
	local background = CoD.CACFullPopupBackground.new( f1_local1, f1_arg0, 0, 1, 0, 0, 0, 0, 0, 1080 ) --[[ @ 0]]
	background:linkToElementModel( self, nil, false, function ( model )
		background.buttons:setModel( model, f1_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( background ) --[[ @ 0]]
	self.background = background --[[ @ 0]]
	
	local itemList = CoD.OverCapacityList.new( f1_local1, f1_arg0, 0.5, 0.5, -612, 1668, 0, 0, 526, 626 ) --[[ @ 0]]
	self:addElement( itemList ) --[[ @ 0]]
	self.itemList = itemList --[[ @ 0]]
	
	local Description = LUI.UIText.new( 0.5, 0.5, -612, 407, 0, 0, 384, 405 ) --[[ @ 0]]
	Description:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	Description:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_10757E50CC35560C" ) ) --[[ @ 0]]
	Description:setTTF( "dinnext_regular" ) --[[ @ 0]]
	Description:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	Description:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	self:addElement( Description ) --[[ @ 0]]
	self.Description = Description --[[ @ 0]]
	
	local DescriptionLine2 = LUI.UIText.new( 0.5, 0.5, -612, 407, 0, 0, 443, 464 ) --[[ @ 0]]
	DescriptionLine2:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	DescriptionLine2:setTTF( "dinnext_regular" ) --[[ @ 0]]
	DescriptionLine2:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	DescriptionLine2:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	DescriptionLine2:subscribeToGlobalModel( f1_arg0, "PerController", "CACMenu.numItemsToRemove", function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			DescriptionLine2:setText( Engine[@"hash_4F9F1239CFD921FE"]( CoD.CACUtility.GetRemoveItemDescription( f1_arg0, f3_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( DescriptionLine2 ) --[[ @ 0]]
	self.DescriptionLine2 = DescriptionLine2 --[[ @ 0]]
	
	local Title = LUI.UIText.new( 0.5, 0.5, -612, 407, 0, 0, 319, 364 ) --[[ @ 0]]
	Title:setRGB( ColorSet.T8__BEIGE__HEADER.r, ColorSet.T8__BEIGE__HEADER.g, ColorSet.T8__BEIGE__HEADER.b ) --[[ @ 0]]
	Title:setText( LocalizeToUpperString( @"menu/remove_item" ) ) --[[ @ 0]]
	Title:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	Title:setLetterSpacing( 6 ) --[[ @ 0]]
	Title:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	Title:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	self:addElement( Title ) --[[ @ 0]]
	self.Title = Title --[[ @ 0]]
	
	local featureOverlayButtonMouseOnly = nil --[[ @ 0]]
	
	featureOverlayButtonMouseOnly = CoD.featureOverlay_Button_MouseOnly.new( f1_local1, f1_arg0, 0.5, 0.5, -606, -480, 0, 0, 675, 732 ) --[[ @ 0]]
	featureOverlayButtonMouseOnly.featureOverlayButtonContainer.Title:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_778D439E1B360368" ) ) --[[ @ 0]]
	featureOverlayButtonMouseOnly:registerEventHandler( "gain_focus", function ( element, event )
		local f4_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f4_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f4_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_local1, f1_arg0, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		return f4_local0
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( featureOverlayButtonMouseOnly, f1_arg0, Enum[@"luibutton"][@"lui_key_xba_pscross"], "ui_confirm", function ( element, menu, controller, model )
		PlaySoundSetSound( self, "menu_no_selection" ) --[[ @ 0]]
		ClearMenuSavedState( menu ) --[[ @ 0]]
		GoBack( self, controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"hash_0", nil, "ui_confirm" ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	self:addElement( featureOverlayButtonMouseOnly ) --[[ @ 0]]
	self.featureOverlayButtonMouseOnly = featureOverlayButtonMouseOnly --[[ @ 0]]
	
	local PCSmallCloseButton = nil --[[ @ 0]]
	
	PCSmallCloseButton = CoD.PC_SmallCloseButton.new( f1_local1, f1_arg0, 0.5, 0.5, 913, 947, 0.5, 0.5, -221, -187 ) --[[ @ 0]]
	PCSmallCloseButton:registerEventHandler( "gain_focus", function ( element, event )
		local f7_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f7_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f7_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_local1, f1_arg0, Enum[@"luibutton"][@"lui_key_none"] ) --[[ @ 0]]
		return f7_local0
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( PCSmallCloseButton, f1_arg0, Enum[@"luibutton"][@"lui_key_none"], "MOUSE1", function ( element, menu, controller, model )
		ClearMenuSavedState( menu ) --[[ @ 0]]
		PlaySoundSetSound( self, "menu_no_selection" ) --[[ @ 0]]
		GoBack( self, controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_none"], @"hash_0", nil, "MOUSE1" ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( PCSmallCloseButton, f1_arg0, Enum[@"luibutton"][@"lui_key_none"], "ui_confirm", function ( element, menu, controller, model )
		ClearMenuSavedState( menu ) --[[ @ 0]]
		PlaySoundSetSound( self, "menu_no_selection" ) --[[ @ 0]]
		GoBack( self, controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_none"], @"hash_0", nil, "ui_confirm" ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	self:addElement( PCSmallCloseButton ) --[[ @ 0]]
	self.PCSmallCloseButton = PCSmallCloseButton --[[ @ 0]]
	
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"luibutton"][@"lui_key_xbb_pscircle"], nil, function ( element, menu, controller, model )
		GoBack( self, controller ) --[[ @ 0]]
		PlaySoundSetSound( self, "menu_no_selection" ) --[[ @ 0]]
		ClearMenuSavedState( menu ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xbb_pscircle"], @"menu/back", nil, nil ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	background:setModel( self.buttonModel, f1_arg0 ) --[[ @ 0]]
	if CoD.isPC then
		background.id = "background" --[[ @ 0]]
	end
	itemList.id = "itemList" --[[ @ 0]]
	if CoD.isPC then
		featureOverlayButtonMouseOnly.id = "featureOverlayButtonMouseOnly" --[[ @ 0]]
	end
	if CoD.isPC then
		PCSmallCloseButton.id = "PCSmallCloseButton" --[[ @ 0]]
	end
	self:processEvent( {
		name = "menu_loaded",
		controller = f1_arg0
	} ) --[[ @ 0]]
	self.__defaultFocus = itemList --[[ @ 0]]
	if CoD.isPC and (IsKeyboard( f1_arg0 ) or self.ignoreCursor) then
		self:restoreState( f1_arg0 ) --[[ @ 0]]
	end
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg0 ) --[[ @ 0]]
	end
	local f1_local9 = self --[[ @ 0]]
	if IsPC() then
		CoD.PCUtility.SetupUIMenuShortcutBlocker( self, f1_local1 ) --[[ @ 0]]
	end
	return self
end
 --[[ @ 0]]
CoD.OverCapacity.__onClose = function ( f14_arg0 )
	f14_arg0.background:close() --[[ @ 0]]
	f14_arg0.itemList:close() --[[ @ 0]]
	f14_arg0.DescriptionLine2:close() --[[ @ 0]]
	f14_arg0.featureOverlayButtonMouseOnly:close() --[[ @ 0]]
	f14_arg0.PCSmallCloseButton:close() --[[ @ 0]]
end
 --[[ @ 0]]
