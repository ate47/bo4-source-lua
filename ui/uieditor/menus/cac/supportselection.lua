-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:51
require( "ui/uieditor/widgets/cac/equippedscorestreaklistitem" ) --[[ @ 0]]
require( "x64:6341ce33d59fafd1" ) --[[ @ 0]]
require( "ui/uieditor/widgets/cac/supportselectiondescription" ) --[[ @ 0]]
require( "ui/uieditor/widgets/cac/supportselectionoption" ) --[[ @ 0]]
require( "ui/uieditor/widgets/common/commondetailpanel" ) --[[ @ 0]]
require( "ui/uieditor/widgets/common/commonheader" ) --[[ @ 0]]
require( "ui/uieditor/widgets/director/directordividerwithgradient" ) --[[ @ 0]]
require( "ui/uieditor/widgets/footer/footercontainer_frontend_right" ) --[[ @ 0]]
require( "ui/uieditor/widgets/header/header_container_frontend" ) --[[ @ 0]]
require( "ui/uieditor/widgets/startmenu/options/startmenuoptionsbackground" ) --[[ @ 0]]

CoD.SupportSelection = InheritFrom( CoD.Menu ) --[[ @ 0]]
LUI.createMenu.SupportSelection = function ( f1_arg0, f1_arg1 )
	local self = CoD.Menu.NewForUIEditor( "SupportSelection", f1_arg0 ) --[[ @ 0]]
	local f1_local1 = self --[[ @ 0]]
	CoD.ScorestreakSelectUtility.InitScorestreakSelectModels( f1_arg0 ) --[[ @ 0]]
	CoD.BaseUtility.SetPropertiesFromUserData( self, f1_arg1 ) --[[ @ 0]]
	CoD.BreadcrumbUtility.SetClientStorageBuffer( f1_local1, f1_arg0 ) --[[ @ 0]]
	SendClientScriptMenuChangeNotify( f1_arg0, f1_local1, true ) --[[ @ 0]]
	self:setClass( CoD.SupportSelection ) --[[ @ 0]]
	self.soundSet = "FrontendMain" --[[ @ 0]]
	self:setOwner( f1_arg0 ) --[[ @ 0]]
	self:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	self:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	self:playSound( "menu_open", f1_arg0 ) --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	
	local Blur = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	Blur:setRGB( 0.08, 0.08, 0.08 ) --[[ @ 0]]
	Blur:setAlpha( 0 ) --[[ @ 0]]
	Blur:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_E2354BE557C4C7A" ) ) --[[ @ 0]]
	Blur:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( Blur ) --[[ @ 0]]
	self.Blur = Blur --[[ @ 0]]
	
	local Background = CoD.StartMenuOptionsBackground.new( f1_local1, f1_arg0, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	self:addElement( Background ) --[[ @ 0]]
	self.Background = Background --[[ @ 0]]
	
	local CostBacking = LUI.UIImage.new( 0.5, 0.5, 381.5, 512.5, 0, 0, 515.5, 1189.5 ) --[[ @ 0]]
	CostBacking:setAlpha( 0.4 ) --[[ @ 0]]
	CostBacking:setZRot( -90 ) --[[ @ 0]]
	CostBacking:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_gradient_normal" ) ) --[[ @ 0]]
	CostBacking:setShaderVector( 0, 0, 0, 0, 1 ) --[[ @ 0]]
	CostBacking:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	CostBacking:setShaderVector( 2, 0.5, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( CostBacking ) --[[ @ 0]]
	self.CostBacking = CostBacking --[[ @ 0]]
	
	local OptionsList = LUI.UIList.new( f1_local1, f1_arg0, 24, 0, nil, false, false, false, false ) --[[ @ 0]]
	OptionsList:setLeftRight( 0.5, 0.5, -824, 58 ) --[[ @ 0]]
	OptionsList:setTopBottom( 0.5, 0.5, -538, 369 ) --[[ @ 0]]
	OptionsList:setWidgetType( CoD.SupportSelectionOption ) --[[ @ 0]]
	OptionsList:setHorizontalCount( 3 ) --[[ @ 0]]
	OptionsList:setVerticalCount( 7 ) --[[ @ 0]]
	OptionsList:setSpacing( 24 ) --[[ @ 0]]
	OptionsList:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	OptionsList:setDataSource( "ScorestreaksList" ) --[[ @ 0]]
	OptionsList:linkToElementModel( OptionsList, "itemIndex", true, function ( model, f2_arg1 )
		CoD.Menu.UpdateButtonShownState( f2_arg1, f1_local1, f1_arg0, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f2_arg1, f1_local1, f1_arg0, Enum[@"luibutton"][@"lui_key_xby_pstriangle"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f2_arg1, f1_local1, f1_arg0, Enum[@"luibutton"][@"lui_key_xbx_pssquare"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local CACHeader = OptionsList --[[ @ 0]]
	local FooterContainerFrontendRight = OptionsList.subscribeToModel --[[ @ 0]]
	local BackingGrayMediumLeft = Engine[@"getmodelforcontroller"]( f1_arg0 ) --[[ @ 0]]
	FooterContainerFrontendRight( CACHeader, BackingGrayMediumLeft["ScorestreakSelect.UpdateEquipped"], function ( f3_arg0, f3_arg1 )
		CoD.Menu.UpdateButtonShownState( f3_arg1, f1_local1, f1_arg0, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f3_arg1, f1_local1, f1_arg0, Enum[@"luibutton"][@"lui_key_xby_pstriangle"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f3_arg1, f1_local1, f1_arg0, Enum[@"luibutton"][@"lui_key_xbx_pssquare"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	OptionsList:appendEventHandler( "input_source_changed", function ( f4_arg0, f4_arg1 )
		f4_arg1.menu = f4_arg1.menu or f1_local1 --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f4_arg0, f1_local1, f1_arg0, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f4_arg0, f1_local1, f1_arg0, Enum[@"luibutton"][@"lui_key_xby_pstriangle"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f4_arg0, f1_local1, f1_arg0, Enum[@"luibutton"][@"lui_key_xbx_pssquare"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	CACHeader = OptionsList --[[ @ 0]]
	FooterContainerFrontendRight = OptionsList.subscribeToModel --[[ @ 0]]
	BackingGrayMediumLeft = Engine[@"getmodelforcontroller"]( f1_arg0 ) --[[ @ 0]]
	FooterContainerFrontendRight( CACHeader, BackingGrayMediumLeft.LastInput, function ( f5_arg0, f5_arg1 )
		CoD.Menu.UpdateButtonShownState( f5_arg1, f1_local1, f1_arg0, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f5_arg1, f1_local1, f1_arg0, Enum[@"luibutton"][@"lui_key_xby_pstriangle"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f5_arg1, f1_local1, f1_arg0, Enum[@"luibutton"][@"lui_key_xbx_pssquare"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	OptionsList:registerEventHandler( "lose_list_focus", function ( element, event )
		local f6_local0 = nil --[[ @ 0]]
		CoD.ScorestreakSelectUtility.SetCurrentPreviewToSelectedScorestreak( element, f1_local1, f1_arg0 ) --[[ @ 0]]
		return f6_local0
	end ) --[[ @ 0]]
	OptionsList:registerEventHandler( "gain_focus", function ( element, event )
		local f7_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f7_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f7_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_local1, f1_arg0, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( element, f1_local1, f1_arg0, Enum[@"luibutton"][@"lui_key_xby_pstriangle"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( element, f1_local1, f1_arg0, Enum[@"luibutton"][@"lui_key_xbx_pssquare"] ) --[[ @ 0]]
		return f7_local0
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( OptionsList, f1_arg0, Enum[@"luibutton"][@"lui_key_xba_pscross"], "ui_confirm", function ( element, menu, controller, model )
		if not CoD.ScorestreakSelectUtility.IsScorestreakEquipped( element, menu, controller ) and not CoD.ScorestreakSelectUtility.IsScorestreakLocked( element, menu, controller ) and IsMouseOrKeyboard( controller ) then
			CoD.ScorestreakSelectUtility.SelectScorestreakOption( self.OptionsList, menu, controller, "" ) --[[ @ 0]]
			return true
		elseif not CoD.ScorestreakSelectUtility.IsScorestreakEquipped( element, menu, controller ) and not CoD.ScorestreakSelectUtility.IsScorestreakLocked( element, menu, controller ) and IsGamepad( controller ) then
			CoD.ScorestreakSelectUtility.SelectScorestreakOption( self.OptionsList, menu, controller, "" ) --[[ @ 0]]
			return true
		elseif CoD.ScorestreakSelectUtility.IsScorestreakEquipped( element, menu, controller ) and IsMouseOrKeyboard( controller ) then
			CoD.ScorestreakSelectUtility.RemoveScorestreakOption( self.OptionsList, menu, controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not CoD.ScorestreakSelectUtility.IsScorestreakEquipped( element, menu, controller ) and not CoD.ScorestreakSelectUtility.IsScorestreakLocked( element, menu, controller ) and IsMouseOrKeyboard( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"hash_0", nil, "ui_confirm" ) --[[ @ 0]]
			return false
		elseif not CoD.ScorestreakSelectUtility.IsScorestreakEquipped( element, menu, controller ) and not CoD.ScorestreakSelectUtility.IsScorestreakLocked( element, menu, controller ) and IsGamepad( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"menu/select", nil, "ui_confirm" ) --[[ @ 0]]
			return true
		elseif CoD.ScorestreakSelectUtility.IsScorestreakEquipped( element, menu, controller ) and IsMouseOrKeyboard( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"hash_0", nil, "ui_confirm" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( OptionsList, f1_arg0, Enum[@"luibutton"][@"lui_key_xby_pstriangle"], "ui_remove", function ( element, menu, controller, model )
		if CoD.ScorestreakSelectUtility.IsScorestreakEquipped( element, menu, controller ) and IsMouseOrKeyboard( controller ) then
			CoD.ScorestreakSelectUtility.RemoveScorestreakOption( self.OptionsList, menu, controller ) --[[ @ 0]]
			PlaySoundAlias( "cac_equipment_remove" ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if CoD.ScorestreakSelectUtility.IsScorestreakEquipped( element, menu, controller ) and IsMouseOrKeyboard( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xby_pstriangle"], @"menu/remove", Enum[@"luibuttonpromptflags"][@"bpf_contextual"], "ui_remove" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( OptionsList, f1_arg0, Enum[@"luibutton"][@"lui_key_xbx_pssquare"], nil, function ( element, menu, controller, model )
		if CoD.ScorestreakSelectUtility.IsScorestreakEquipped( element, menu, controller ) and IsGamepad( controller ) then
			CoD.ScorestreakSelectUtility.RemoveScorestreakOption( self.OptionsList, menu, controller ) --[[ @ 0]]
			PlaySoundAlias( "cac_equipment_remove" ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if CoD.ScorestreakSelectUtility.IsScorestreakEquipped( element, menu, controller ) and IsGamepad( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xbx_pssquare"], @"menu/remove", nil, nil ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self.__on_menuOpened_OptionsList = function ( f14_arg0, f14_arg1, f14_arg2, f14_arg3 )
		local f14_local0 = OptionsList --[[ @ 0]]
		if IsPC() then
			CoD.ScorestreakSelectUtility.SetCurrentPreviewToSelectedScorestreak( f14_local0, f14_arg2, f14_arg1 ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	f1_local1:addMenuOpenedCallback( self.__on_menuOpened_OptionsList ) --[[ @ 0]]
	self:addElement( OptionsList ) --[[ @ 0]]
	self.OptionsList = OptionsList --[[ @ 0]]
	
	FooterContainerFrontendRight = CoD.FooterContainer_Frontend_Right.new( f1_local1, f1_arg0, 0, 1, 0, 0, 1, 1, -48, 0 ) --[[ @ 0]]
	FooterContainerFrontendRight:registerEventHandler( "menu_loaded", function ( element, event )
		local f15_local0 = nil --[[ @ 0]]
		if element.menuLoaded then
			f15_local0 = element:menuLoaded( event ) --[[ @ 0]]
		elseif element.super.menuLoaded then
			f15_local0 = element.super:menuLoaded( event ) --[[ @ 0]]
		end
		if not IsPC() then
			SizeToSafeArea( element, f1_arg0 ) --[[ @ 0]]
		end
		if not f15_local0 then
			f15_local0 = element:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f15_local0
	end ) --[[ @ 0]]
	self:addElement( FooterContainerFrontendRight ) --[[ @ 0]]
	self.FooterContainerFrontendRight = FooterContainerFrontendRight --[[ @ 0]]
	
	CACHeader = CoD.CommonHeader.new( f1_local1, f1_arg0, 0.5, 0.5, -960, 960, 0, 0, 0, 67 ) --[[ @ 0]]
	CACHeader.BGSceneBlur:setAlpha( 0 ) --[[ @ 0]]
	CACHeader.subtitle.StageTitle:setText( LocalizeToUpperString( @"hash_2D17CC7D16033AEA" ) ) --[[ @ 0]]
	CACHeader.subtitle.subtitle:setAlpha( 0 ) --[[ @ 0]]
	CACHeader:subscribeToGlobalModel( f1_arg0, "LobbyRoot", "lobbyTitle", function ( model )
		local f16_local0 = model:get() --[[ @ 0]]
		if f16_local0 ~= nil then
			CACHeader.subtitle.subtitle:setText( Engine[@"hash_4F9F1239CFD921FE"]( f16_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	CACHeader:linkToElementModel( self, nil, false, function ( model )
		CACHeader:setModel( model, f1_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	CACHeader:registerEventHandler( "menu_loaded", function ( element, event )
		local f18_local0 = nil --[[ @ 0]]
		if element.menuLoaded then
			f18_local0 = element:menuLoaded( event ) --[[ @ 0]]
		elseif element.super.menuLoaded then
			f18_local0 = element.super:menuLoaded( event ) --[[ @ 0]]
		end
		if not IsPC() then
			SizeToSafeArea( element, f1_arg0 ) --[[ @ 0]]
		end
		if not f18_local0 then
			f18_local0 = element:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f18_local0
	end ) --[[ @ 0]]
	self:addElement( CACHeader ) --[[ @ 0]]
	self.CACHeader = CACHeader --[[ @ 0]]
	
	BackingGrayMediumLeft = CoD.header_container_frontend.new( f1_local1, f1_arg0, 0, 1, 0, 0, 0, 0, 0, 42 ) --[[ @ 0]]
	BackingGrayMediumLeft:registerEventHandler( "menu_loaded", function ( element, event )
		local f19_local0 = nil --[[ @ 0]]
		if element.menuLoaded then
			f19_local0 = element:menuLoaded( event ) --[[ @ 0]]
		elseif element.super.menuLoaded then
			f19_local0 = element.super:menuLoaded( event ) --[[ @ 0]]
		end
		if not IsPC() then
			SizeToSafeArea( element, f1_arg0 ) --[[ @ 0]]
		end
		if not f19_local0 then
			f19_local0 = element:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f19_local0
	end ) --[[ @ 0]]
	self:addElement( BackingGrayMediumLeft ) --[[ @ 0]]
	self.BackingGrayMediumLeft = BackingGrayMediumLeft --[[ @ 0]]
	
	local DetailPanel = CoD.CommonDetailPanel.new( f1_local1, f1_arg0, 0.5, 0.5, 84.5, 827.5, 0.5, 0.5, -404, 404 ) --[[ @ 0]]
	DetailPanel.BackingBlur:setAlpha( 0.5 ) --[[ @ 0]]
	DetailPanel.BackingTint:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( DetailPanel ) --[[ @ 0]]
	self.DetailPanel = DetailPanel --[[ @ 0]]
	
	local SupportSelectionDescription = CoD.SupportSelectionDescription.new( f1_local1, f1_arg0, 0.5, 0.5, 121.5, 640.5, 0.5, 0.5, 172, 190 ) --[[ @ 0]]
	self:addElement( SupportSelectionDescription ) --[[ @ 0]]
	self.SupportSelectionDescription = SupportSelectionDescription --[[ @ 0]]
	
	local DirectorDividerWithGradient = CoD.DirectorDividerWithGradient.new( f1_local1, f1_arg0, 0.5, 0.5, 121.5, 797.5, 0.5, 0.5, 162.5, 163.5 ) --[[ @ 0]]
	DirectorDividerWithGradient:setRGB( 0.39, 0.39, 0.39 ) --[[ @ 0]]
	self:addElement( DirectorDividerWithGradient ) --[[ @ 0]]
	self.DirectorDividerWithGradient = DirectorDividerWithGradient --[[ @ 0]]
	
	local CostDivider = LUI.UIImage.new( 0.5, 0.5, 110.5, 800.5, 0.5, 0.5, 248, 262 ) --[[ @ 0]]
	CostDivider:setImage( RegisterImage( @"uie_ui_menu_cac_primary_button_top_line" ) ) --[[ @ 0]]
	CostDivider:setMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	self:addElement( CostDivider ) --[[ @ 0]]
	self.CostDivider = CostDivider --[[ @ 0]]
	
	local ScoreCostHeader = LUI.UIText.new( 0.5, 0.5, 265, 443, 0.5, 0.5, 303, 321 ) --[[ @ 0]]
	ScoreCostHeader:setRGB( 0.86, 0.74, 0.25 ) --[[ @ 0]]
	ScoreCostHeader:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_6A75180BC7FDA8F5" ) ) --[[ @ 0]]
	ScoreCostHeader:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	ScoreCostHeader:setLetterSpacing( 6 ) --[[ @ 0]]
	ScoreCostHeader:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	ScoreCostHeader:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	self:addElement( ScoreCostHeader ) --[[ @ 0]]
	self.ScoreCostHeader = ScoreCostHeader --[[ @ 0]]
	
	local ComSecScoreCost = LUI.UIText.new( 0.5, 0.5, 493, 671, 0.5, 0.5, 256, 306 ) --[[ @ 0]]
	ComSecScoreCost:setRGB( 0.18, 0.66, 0.88 ) --[[ @ 0]]
	ComSecScoreCost:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	ComSecScoreCost:setLetterSpacing( 14 ) --[[ @ 0]]
	ComSecScoreCost:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	self:addElement( ComSecScoreCost ) --[[ @ 0]]
	self.ComSecScoreCost = ComSecScoreCost --[[ @ 0]]
	
	local ScoreCost = LUI.UIText.new( 0.5, 0.5, 265, 443, 0.5, 0.5, 256, 306 ) --[[ @ 0]]
	ScoreCost:setRGB( 0.86, 0.74, 0.25 ) --[[ @ 0]]
	ScoreCost:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	ScoreCost:setLetterSpacing( 14 ) --[[ @ 0]]
	ScoreCost:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	self:addElement( ScoreCost ) --[[ @ 0]]
	self.ScoreCost = ScoreCost --[[ @ 0]]
	
	local ComSecScoreCostHeader = LUI.UIText.new( 0.5, 0.5, 493, 695, 0.5, 0.5, 303, 321 ) --[[ @ 0]]
	ComSecScoreCostHeader:setRGB( 0.18, 0.66, 0.88 ) --[[ @ 0]]
	ComSecScoreCostHeader:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_691DA6C00B351359" ) ) --[[ @ 0]]
	ComSecScoreCostHeader:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	ComSecScoreCostHeader:setLetterSpacing( 6 ) --[[ @ 0]]
	ComSecScoreCostHeader:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	ComSecScoreCostHeader:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	self:addElement( ComSecScoreCostHeader ) --[[ @ 0]]
	self.ComSecScoreCostHeader = ComSecScoreCostHeader --[[ @ 0]]
	
	local ComSecScoreCostDesc = LUI.UIText.new( 0.5, 0.5, 493, 739, 0.5, 0.5, 342, 360 ) --[[ @ 0]]
	ComSecScoreCostDesc:setRGB( 0.8, 0.79, 0.78 ) --[[ @ 0]]
	ComSecScoreCostDesc:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_54C6EBBF1E4D9F3" ) ) --[[ @ 0]]
	ComSecScoreCostDesc:setTTF( "dinnext_regular" ) --[[ @ 0]]
	ComSecScoreCostDesc:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	ComSecScoreCostDesc:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	self:addElement( ComSecScoreCostDesc ) --[[ @ 0]]
	self.ComSecScoreCostDesc = ComSecScoreCostDesc --[[ @ 0]]
	
	local EquippedScorestreaks = LUI.GridLayout.new( f1_local1, f1_arg0, false, 0, 0, 10, 0, nil, nil, false, false, false, false ) --[[ @ 0]]
	EquippedScorestreaks:mergeStateConditions( {
		{
			stateName = "Focusable",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		}
	} ) --[[ @ 0]]
	EquippedScorestreaks:linkToElementModel( EquippedScorestreaks, "itemIndex", true, function ( model )
		f1_local1:updateElementState( EquippedScorestreaks, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = model:get(),
			modelName = "itemIndex"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	EquippedScorestreaks:setLeftRight( 0.5, 0.5, 687.5, 787.5 ) --[[ @ 0]]
	EquippedScorestreaks:setTopBottom( 0.5, 0.5, -344, 126 ) --[[ @ 0]]
	EquippedScorestreaks:setZoom( -1 ) --[[ @ 0]]
	EquippedScorestreaks:setWidgetType( CoD.EquippedScorestreakListItem ) --[[ @ 0]]
	EquippedScorestreaks:setVerticalCount( 3 ) --[[ @ 0]]
	EquippedScorestreaks:setSpacing( 10 ) --[[ @ 0]]
	EquippedScorestreaks:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	EquippedScorestreaks:setDataSource( "EquippedScorestreaks" ) --[[ @ 0]]
	EquippedScorestreaks:subscribeToGlobalModel( f1_arg0, "PerController", "ScorestreakSelect.UpdateEquipped", function ( model )
		CoD.GridAndListUtility.UpdateDataSource( EquippedScorestreaks, false, false, true ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( EquippedScorestreaks ) --[[ @ 0]]
	self.EquippedScorestreaks = EquippedScorestreaks --[[ @ 0]]
	
	local SelectedImage = LUI.UIFixedAspectRatioImage.new( 0.5, 0.5, 106, 656, 0.5, 0.5, -404, 146 ) --[[ @ 0]]
	SelectedImage:setAlpha( 0.95 ) --[[ @ 0]]
	SelectedImage:setScale( 0.8, 0.8 ) --[[ @ 0]]
	self:addElement( SelectedImage ) --[[ @ 0]]
	self.SelectedImage = SelectedImage --[[ @ 0]]
	
	local SelectedHeader = LUI.UIText.new( 0.5, 0.5, 443.5, 787.5, 0.5, 0.5, -373.5, -349.5 ) --[[ @ 0]]
	SelectedHeader:setRGB( 0.86, 0.74, 0.25 ) --[[ @ 0]]
	SelectedHeader:setText( LocalizeToUpperString( @"menu/selected" ) ) --[[ @ 0]]
	SelectedHeader:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	SelectedHeader:setLetterSpacing( 6 ) --[[ @ 0]]
	SelectedHeader:setAlignment( Enum[@"luialignment"][@"lui_alignment_right"] ) --[[ @ 0]]
	SelectedHeader:setAlignment( Enum[@"luialignment"][@"lui_alignment_bottom"] ) --[[ @ 0]]
	self:addElement( SelectedHeader ) --[[ @ 0]]
	self.SelectedHeader = SelectedHeader --[[ @ 0]]
	
	local SelectedName = LUI.UIText.new( 0.5, 0.5, 121.5, 687.5, 0.5, 0.5, 127, 159 ) --[[ @ 0]]
	SelectedName:setRGB( 0.92, 0.89, 0.72 ) --[[ @ 0]]
	SelectedName:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	SelectedName:setLetterSpacing( 14 ) --[[ @ 0]]
	SelectedName:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	SelectedName:setAlignment( Enum[@"luialignment"][@"lui_alignment_bottom"] ) --[[ @ 0]]
	self:addElement( SelectedName ) --[[ @ 0]]
	self.SelectedName = SelectedName --[[ @ 0]]
	
	local RestrictedText = CoD.RestrictedItemWarningText.new( f1_local1, f1_arg0, 0.5, 0.5, 208.5, 702.5, 0.5, 0.5, 220, 250 ) --[[ @ 0]]
	self:addElement( RestrictedText ) --[[ @ 0]]
	self.RestrictedText = RestrictedText --[[ @ 0]]
	
	SupportSelectionDescription:linkToElementModel( OptionsList, nil, false, function ( model )
		SupportSelectionDescription:setModel( model, f1_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	ComSecScoreCost:linkToElementModel( OptionsList, "lowScoreToUnlock", true, function ( model )
		local f24_local0 = model:get() --[[ @ 0]]
		if f24_local0 ~= nil then
			ComSecScoreCost:setText( f24_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	ScoreCost:linkToElementModel( OptionsList, "scoreToUnlock", true, function ( model )
		local f25_local0 = model:get() --[[ @ 0]]
		if f25_local0 ~= nil then
			ScoreCost:setText( f25_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	SelectedImage:linkToElementModel( OptionsList, "iconLarge", true, function ( model )
		local f26_local0 = model:get() --[[ @ 0]]
		if f26_local0 ~= nil then
			SelectedImage:setImage( CoD.BaseUtility.AlreadyRegistered( f26_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	SelectedName:linkToElementModel( OptionsList, "name", true, function ( model )
		local f27_local0 = model:get() --[[ @ 0]]
		if f27_local0 ~= nil then
			SelectedName:setText( LocalizeToUpperString( f27_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	RestrictedText:linkToElementModel( OptionsList, nil, false, function ( model )
		RestrictedText:setModel( model, f1_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:appendEventHandler( "input_source_changed", function ( f29_arg0, f29_arg1 )
		f29_arg1.menu = f29_arg1.menu or f1_local1 --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f29_arg0, f1_local1, f1_arg0, Enum[@"luibutton"][@"lui_key_rtrig"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f29_arg0, f1_local1, f1_arg0, Enum[@"luibutton"][@"lui_key_xby_pstriangle"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local f1_local23 = self --[[ @ 0]]
	local f1_local24 = self.subscribeToModel --[[ @ 0]]
	local f1_local25 = Engine[@"getmodelforcontroller"]( f1_arg0 ) --[[ @ 0]]
	f1_local24( f1_local23, f1_local25.LastInput, function ( f30_arg0, f30_arg1 )
		CoD.Menu.UpdateButtonShownState( f30_arg1, f1_local1, f1_arg0, Enum[@"luibutton"][@"lui_key_rtrig"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f30_arg1, f1_local1, f1_arg0, Enum[@"luibutton"][@"lui_key_xby_pstriangle"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"luibutton"][@"lui_key_xbb_pscircle"], nil, function ( element, menu, controller, model )
		CoD.ScorestreakSelectUtility.SaveLoadout( menu, controller ) --[[ @ 0]]
		GoBack( self, controller ) --[[ @ 0]]
		SendClientScriptMenuChangeNotify( controller, menu, false ) --[[ @ 0]]
		CoD.LobbyUtility.SetMenuControllerRestriction( self, controller, 0 ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xbb_pscircle"], @"menu/back", nil, nil ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"luibutton"][@"lui_key_rtrig"], "ui_contextual_2", function ( element, menu, controller, model )
		if IsMouseOrKeyboard( controller ) then
			CoD.ScorestreakSelectUtility.RemoveAllScorestreaks( menu, controller ) --[[ @ 0]]
			PlaySoundAlias( "cac_equipment_remove" ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsMouseOrKeyboard( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_rtrig"], @"hash_5E9CED3392B6716C", nil, "ui_contextual_2" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"luibutton"][@"lui_key_xby_pstriangle"], nil, function ( element, menu, controller, model )
		if IsGamepad( controller ) then
			CoD.ScorestreakSelectUtility.RemoveAllScorestreaks( menu, controller ) --[[ @ 0]]
			PlaySoundAlias( "cac_equipment_remove" ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsGamepad( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xby_pstriangle"], @"hash_5E9CED3392B6716C", Enum[@"luibuttonpromptflags"][@"hash_72919C98A7A845F0"] | 400 << Enum[@"luibuttonpromptflags"][@"hash_176ADD225D738C93"], nil ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( self, "close", function ( element )
		if IsPC() then
			SendClientScriptMenuChangeNotify( f1_arg0, f1_local1, false ) --[[ @ 0]]
			ClearMenuSavedState( f1_local1 ) --[[ @ 0]]
		else
			ClearMenuSavedState( f1_local1 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	OptionsList.id = "OptionsList" --[[ @ 0]]
	FooterContainerFrontendRight:setModel( self.buttonModel, f1_arg0 ) --[[ @ 0]]
	if CoD.isPC then
		FooterContainerFrontendRight.id = "FooterContainerFrontendRight" --[[ @ 0]]
	end
	EquippedScorestreaks.id = "EquippedScorestreaks" --[[ @ 0]]
	self:processEvent( {
		name = "menu_loaded",
		controller = f1_arg0
	} ) --[[ @ 0]]
	self.__defaultFocus = OptionsList --[[ @ 0]]
	if CoD.isPC and (IsKeyboard( f1_arg0 ) or self.ignoreCursor) then
		self:restoreState( f1_arg0 ) --[[ @ 0]]
	end
	self.__on_close_removeOverrides = function ()
		f1_local1:removeMenuOpenedCallback( self.__on_menuOpened_OptionsList ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg0 ) --[[ @ 0]]
	end
	f1_local24 = self --[[ @ 0]]
	CoD.BaseUtility.SetModelFromPropertyModel( f1_arg0, self, self ) --[[ @ 0]]
	CoD.LobbyUtility.SetMenuControllerRestriction( self, f1_arg0, 1 ) --[[ @ 0]]
	f1_local24 = OptionsList --[[ @ 0]]
	if IsPC() then
		CoD.ScorestreakSelectUtility.UseEquippedItemAsDefaultFocus( f1_local1, f1_arg0, f1_local24 ) --[[ @ 0]]
	end
	return self
end
 --[[ @ 0]]
CoD.SupportSelection.__onClose = function ( f39_arg0 )
	f39_arg0.__on_close_removeOverrides() --[[ @ 0]]
	f39_arg0.SupportSelectionDescription:close() --[[ @ 0]]
	f39_arg0.ComSecScoreCost:close() --[[ @ 0]]
	f39_arg0.ScoreCost:close() --[[ @ 0]]
	f39_arg0.SelectedImage:close() --[[ @ 0]]
	f39_arg0.SelectedName:close() --[[ @ 0]]
	f39_arg0.RestrictedText:close() --[[ @ 0]]
	f39_arg0.Background:close() --[[ @ 0]]
	f39_arg0.OptionsList:close() --[[ @ 0]]
	f39_arg0.FooterContainerFrontendRight:close() --[[ @ 0]]
	f39_arg0.CACHeader:close() --[[ @ 0]]
	f39_arg0.BackingGrayMediumLeft:close() --[[ @ 0]]
	f39_arg0.DetailPanel:close() --[[ @ 0]]
	f39_arg0.DirectorDividerWithGradient:close() --[[ @ 0]]
	f39_arg0.EquippedScorestreaks:close() --[[ @ 0]]
end
 --[[ @ 0]]
