-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:51
require( "x64:369fdc75e3255cd7" ) --[[ @ 0]]
require( "ui/uieditor/widgets/cac/customclasstabs" ) --[[ @ 0]]
require( "ui/uieditor/widgets/cac/menuchooseclass/chooseclassoverlay" ) --[[ @ 0]]
require( "ui/uieditor/widgets/cac/menuchooseclass/chooseclasswidget" ) --[[ @ 0]]

CoD.MPCustomizeClassMenu = InheritFrom( CoD.Menu ) --[[ @ 0]]
LUI.createMenu.MPCustomizeClassMenu = function ( f1_arg0, f1_arg1 )
	local self = CoD.Menu.NewForUIEditor( "MPCustomizeClassMenu", f1_arg0 ) --[[ @ 0]]
	local f1_local1 = self --[[ @ 0]]
	CoD.BaseUtility.SetPropertiesFromUserData( self, f1_arg1 ) --[[ @ 0]]
	SetMenuProperty( f1_local1, "__lastUpdateWeaponModelSlot", "primary" ) --[[ @ 0]]
	SetProperty( self, "_hideItemName", true ) --[[ @ 0]]
	SendClientScriptMenuChangeNotify( f1_arg0, f1_local1, true ) --[[ @ 0]]
	CoD.BaseUtility.InitControllerModelEnumIfNotSet( f1_arg0, "BonuscardModifiedSlotEnum", CoD.BonuscardUtility.BonuscardModifiedSlotType.NONE ) --[[ @ 0]]
	PlayMenuMusic( f1_arg0, "menu_cac_mp", 2000 ) --[[ @ 0]]
	CoD.CACUtility.MenuUsesAltWatermarkLocation( f1_local1 ) --[[ @ 0]]
	CoD.FTUEUtility.ShowFTUESequenceIfNotSeen( self, f1_arg0, "WeaponPersonalizationChanges" ) --[[ @ 0]]
	self:setClass( CoD.MPCustomizeClassMenu ) --[[ @ 0]]
	self.soundSet = "FrontendMain" --[[ @ 0]]
	self:setOwner( f1_arg0 ) --[[ @ 0]]
	self:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	self:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	self:playSound( "menu_open", f1_arg0 ) --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_local1:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local ChooseClassWidget = CoD.ChooseClassWidget.new( f1_local1, f1_arg0, 0.5, 0.5, -960, 960, 1, 1, -1080, 0 ) --[[ @ 0]]
	ChooseClassWidget:registerEventHandler( "menu_loaded", function ( element, event )
		local f2_local0 = nil --[[ @ 0]]
		if element.menuLoaded then
			f2_local0 = element:menuLoaded( event ) --[[ @ 0]]
		elseif element.super.menuLoaded then
			f2_local0 = element.super:menuLoaded( event ) --[[ @ 0]]
		end
		if not IsPC() then
			SizeToSafeArea( element, f1_arg0 ) --[[ @ 0]]
		end
		if not f2_local0 then
			f2_local0 = element:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f2_local0
	end ) --[[ @ 0]]
	self:addElement( ChooseClassWidget ) --[[ @ 0]]
	self.ChooseClassWidget = ChooseClassWidget --[[ @ 0]]
	
	local GenericMenuFrameCAC = CoD.GenericMenuFrameCAC.new( f1_local1, f1_arg0, 0.5, 0.5, -960, 960, 0, 1, 0, 0 ) --[[ @ 0]]
	GenericMenuFrameCAC.CommonHeader.BGSceneBlur:setAlpha( 1 ) --[[ @ 0]]
	GenericMenuFrameCAC.CommonHeader.subtitle.StageTitle:setText( LocalizeToUpperString( @"hash_1FE4770705278297" ) ) --[[ @ 0]]
	GenericMenuFrameCAC:subscribeToGlobalModel( f1_arg0, "LobbyRoot", "lobbyTitle", function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			GenericMenuFrameCAC.CommonHeader.subtitle.subtitle:setText( Engine[@"hash_4F9F1239CFD921FE"]( f3_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( GenericMenuFrameCAC ) --[[ @ 0]]
	self.GenericMenuFrameCAC = GenericMenuFrameCAC --[[ @ 0]]
	
	local customClasssList = CoD.CustomClassTabs.new( f1_local1, f1_arg0, 0, 1, 0, 0, 0, 0, 0, 98 ) --[[ @ 0]]
	customClasssList:registerEventHandler( "menu_loaded", function ( element, event )
		local f4_local0 = nil --[[ @ 0]]
		if element.menuLoaded then
			f4_local0 = element:menuLoaded( event ) --[[ @ 0]]
		elseif element.super.menuLoaded then
			f4_local0 = element.super:menuLoaded( event ) --[[ @ 0]]
		end
		if not IsPC() then
			SizeToSafeArea( element, f1_arg0 ) --[[ @ 0]]
		end
		if not f4_local0 then
			f4_local0 = element:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f4_local0
	end ) --[[ @ 0]]
	self:addElement( customClasssList ) --[[ @ 0]]
	self.customClasssList = customClasssList --[[ @ 0]]
	
	local ChooseClassOverlay = CoD.ChooseClassOverlay.new( f1_local1, f1_arg0, 0.5, 0.5, -960, 960, 1, 1, -1080, 0 ) --[[ @ 0]]
	ChooseClassOverlay:linkToElementModel( self, nil, false, function ( model )
		ChooseClassOverlay:setModel( model, f1_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	ChooseClassOverlay:registerEventHandler( "menu_loaded", function ( element, event )
		local f6_local0 = nil --[[ @ 0]]
		if element.menuLoaded then
			f6_local0 = element:menuLoaded( event ) --[[ @ 0]]
		elseif element.super.menuLoaded then
			f6_local0 = element.super:menuLoaded( event ) --[[ @ 0]]
		end
		if not IsPC() then
			SizeToSafeArea( element, f1_arg0 ) --[[ @ 0]]
		end
		if not f6_local0 then
			f6_local0 = element:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f6_local0
	end ) --[[ @ 0]]
	self:addElement( ChooseClassOverlay ) --[[ @ 0]]
	self.ChooseClassOverlay = ChooseClassOverlay --[[ @ 0]]
	
	ChooseClassWidget:linkToElementModel( customClasssList.grid, nil, false, function ( model )
		ChooseClassWidget:setModel( model, f1_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	GenericMenuFrameCAC:linkToElementModel( customClasssList.grid, nil, false, function ( model )
		GenericMenuFrameCAC.CommonHeader:setModel( model, f1_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:mergeStateConditions( {
		{
			stateName = "Public",
			condition = function ( menu, element, event )
				return CoD.DirectorUtility.ShowDirectorPublic( f1_arg0 )
			end
		}
	} ) --[[ @ 0]]
	local f1_local6 = self --[[ @ 0]]
	local f1_local7 = self.subscribeToModel --[[ @ 0]]
	local f1_local8 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local7( f1_local6, f1_local8["lobbyRoot.lobbyNav"], function ( f10_arg0 )
		f1_local1:updateElementState( self, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f10_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:linkToElementModel( self, nil, true, function ( model, f11_arg1 )
		CoD.Menu.UpdateButtonShownState( f11_arg1, f1_local1, f1_arg0, Enum[@"luibutton"][@"lui_key_start"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"luibutton"][@"lui_key_start"], "ui_contextual_3", function ( element, menu, controller, model )
		if not CoD.CACUtility.IsCurrentClassLocked( menu, controller ) then
			CoD.CACUtility.OpenClassOptions( self, menu, controller, "ClassOptions" ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not CoD.CACUtility.IsCurrentClassLocked( menu, controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_start"], @"menu/class_options", nil, "ui_contextual_3" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"luibutton"][@"lui_key_xbb_pscircle"], nil, function ( element, menu, controller, model )
		GoBack( self, controller ) --[[ @ 0]]
		SendClientScriptMenuChangeNotify( controller, menu, false ) --[[ @ 0]]
		SaveLoadoutGeneric( controller ) --[[ @ 0]]
		ClearMenuSavedState( menu ) --[[ @ 0]]
		UpdateGamerprofile( self, element, controller ) --[[ @ 0]]
		CoD.LobbyUtility.SetMenuControllerRestriction( self, controller, 0 ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xbb_pscircle"], @"menu/back", nil, nil ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( self, "close", function ( element )
		if IsPC() then
			SendClientScriptNotifyForAdjustedClient( f1_arg0, "CustomClass_closed", "" ) --[[ @ 0]]
			SendClientScriptMenuChangeNotify( f1_arg0, f1_local1, false ) --[[ @ 0]]
			ResetFrontendMusic( f1_arg0 ) --[[ @ 0]]
		else
			ResetFrontendMusic( f1_arg0 ) --[[ @ 0]]
			SendClientScriptNotifyForAdjustedClient( f1_arg0, "CustomClass_closed", "" ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	ChooseClassWidget.id = "ChooseClassWidget" --[[ @ 0]]
	if CoD.isPC then
		GenericMenuFrameCAC.id = "GenericMenuFrameCAC" --[[ @ 0]]
	end
	customClasssList.id = "customClasssList" --[[ @ 0]]
	self:processEvent( {
		name = "menu_loaded",
		controller = f1_arg0
	} ) --[[ @ 0]]
	self.__defaultFocus = ChooseClassWidget --[[ @ 0]]
	if CoD.isPC and (IsKeyboard( f1_arg0 ) or self.ignoreCursor) then
		self:restoreState( f1_arg0 ) --[[ @ 0]]
	end
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg0 ) --[[ @ 0]]
	end
	
	f1_local7 = self --[[ @ 0]]
	CoD.FreeCursorUtility.RetriggerCursorPosition( f1_local1, f1_arg0 ) --[[ @ 0]]
	CoD.CACUtility.UpdateCACSceneForMode( f1_arg0, f1_local1 ) --[[ @ 0]]
	SetProperty( self, "_showItemNameOnButtonHold", true ) --[[ @ 0]]
	CoD.LobbyUtility.SetMenuControllerRestriction( self, f1_arg0, 1 ) --[[ @ 0]]
	CoD.BaseUtility.SelfHidesBuildInfo( self ) --[[ @ 0]]
	return self
end
 --[[ @ 0]]
CoD.MPCustomizeClassMenu.__onClose = function ( f17_arg0 )
	f17_arg0.ChooseClassWidget:close() --[[ @ 0]]
	f17_arg0.GenericMenuFrameCAC:close() --[[ @ 0]]
	f17_arg0.customClasssList:close() --[[ @ 0]]
	f17_arg0.ChooseClassOverlay:close() --[[ @ 0]]
end
 --[[ @ 0]]
