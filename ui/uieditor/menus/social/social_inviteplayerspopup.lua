-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:36
require( "ui/uieditor/menus/social/social_playerdetailspopup" ) --[[ @ 0]]
require( "x64:103507fa8399fe49" ) --[[ @ 0]]
require( "x64:6e9cfc3cb5356fa5" ) --[[ @ 0]]
require( "ui/uieditor/widgets/footer/fe_leftcontainer_notlobby" ) --[[ @ 0]]
require( "ui/uieditor/widgets/scrollbars/verticalcounter" ) --[[ @ 0]]
require( "x64:7e930ac5578a8d6e" ) --[[ @ 0]]
require( "x64:1eeba179b3edce79" ) --[[ @ 0]]
require( "ui/uieditor/widgets/pc/pc_smallclosebutton" ) --[[ @ 0]]
require( "ui/uieditor/widgets/pc_simplevscrolllist" ) --[[ @ 0]]
require( "ui/uieditor/widgets/systemoverlays/featureoverlay_button_mouseonly" ) --[[ @ 0]]

CoD.Social_InvitePlayersPopup = InheritFrom( CoD.Menu ) --[[ @ 0]]
LUI.createMenu.Social_InvitePlayersPopup = function ( f1_arg0, f1_arg1 )
	local self = CoD.Menu.NewForUIEditor( "Social_InvitePlayersPopup", f1_arg0 ) --[[ @ 0]]
	local f1_local1 = self --[[ @ 0]]
	CoD.BaseUtility.SetPropertiesFromUserData( self, f1_arg1 ) --[[ @ 0]]
	CoD.SocialUtility.ClearCheckedInvitees() --[[ @ 0]]
	CoD.SocialUtility.PushCurrentSocialTab( f1_local1 ) --[[ @ 0]]
	self:setClass( CoD.Social_InvitePlayersPopup ) --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self:setOwner( f1_arg0 ) --[[ @ 0]]
	self:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	self:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	self:playSound( "menu_open", f1_arg0 ) --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_local1:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local BlackBacking = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	BlackBacking:setRGB( 0, 0, 0 ) --[[ @ 0]]
	BlackBacking:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_E2354BE557C4C7A" ) ) --[[ @ 0]]
	BlackBacking:setShaderVector( 0, 0, 0.75, 0, 0 ) --[[ @ 0]]
	self:addElement( BlackBacking ) --[[ @ 0]]
	self.BlackBacking = BlackBacking --[[ @ 0]]
	
	local Background = LUI.UIImage.new( 0.5, 0.5, -472, 472, 0, 0, 40, 1040 ) --[[ @ 0]]
	Background:setRGB( 0.09, 0.09, 0.09 ) --[[ @ 0]]
	Background:setAlpha( 0.9 ) --[[ @ 0]]
	self:addElement( Background ) --[[ @ 0]]
	self.Background = Background --[[ @ 0]]
	
	local Container = LUI.UIImage.new( 0.5, 0.5, -460, 460, 0, 0, 117, 309 ) --[[ @ 0]]
	Container:setRGB( 0.23, 0.23, 0.23 ) --[[ @ 0]]
	Container:setAlpha( 0.25 ) --[[ @ 0]]
	self:addElement( Container ) --[[ @ 0]]
	self.Container = Container --[[ @ 0]]
	
	local TiledBacking = LUI.UIImage.new( 0.5, 0.5, -471.5, 471.5, 0.06, 0.06, -29, 971 ) --[[ @ 0]]
	TiledBacking:setAlpha( 0.25 ) --[[ @ 0]]
	TiledBacking:setImage( RegisterImage( @"uie_ui_menu_specialist_hub_repeat_bg" ) ) --[[ @ 0]]
	TiledBacking:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_16CBE95C250C6D15" ) ) --[[ @ 0]]
	TiledBacking:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	TiledBacking:setupNineSliceShader( 196, 88 ) --[[ @ 0]]
	self:addElement( TiledBacking ) --[[ @ 0]]
	self.TiledBacking = TiledBacking --[[ @ 0]]
	
	local TiledBacking2 = LUI.UIImage.new( 0.5, 0.5, -460, 460, 0.06, 0.06, 0.5, 29.5 ) --[[ @ 0]]
	TiledBacking2:setAlpha( 0.5 ) --[[ @ 0]]
	TiledBacking2:setImage( RegisterImage( @"uie_ui_menu_specialist_hub_repeat_bg" ) ) --[[ @ 0]]
	TiledBacking2:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_16CBE95C250C6D15" ) ) --[[ @ 0]]
	TiledBacking2:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	TiledBacking2:setupNineSliceShader( 196, 88 ) --[[ @ 0]]
	self:addElement( TiledBacking2 ) --[[ @ 0]]
	self.TiledBacking2 = TiledBacking2 --[[ @ 0]]
	
	local f1_local7 = nil --[[ @ 0]]
	f1_local7 = LUI.UIElement.createFake() --[[ @ 0]]
	self.onlineList = f1_local7 --[[ @ 0]]
	
	local tabs = CoD.CommonTabBar.new( f1_local1, f1_arg0, 0.5, 0.5, -1802.5, 1497.5, 0, 0, 337.5, 399.5 ) --[[ @ 0]]
	tabs.Tabs.grid:setFilter( function ( f2_arg0 )
		return f2_arg0.showInQuickInvite:get() == true
	end ) --[[ @ 0]]
	tabs.Tabs.grid:setDataSource( "SocialTabs" ) --[[ @ 0]]
	tabs:registerEventHandler( "list_active_changed", function ( element, event )
		local f3_local0 = nil --[[ @ 0]]
		SetSocialTab( self, element, f1_arg0 ) --[[ @ 0]]
		FetchOnlineFriendsData( self, element, f1_arg0 ) --[[ @ 0]]
		PlaySoundSetSound( self, "tab_changed" ) --[[ @ 0]]
		UpdateAllMenuButtonPrompts( f1_local1, f1_arg0 ) --[[ @ 0]]
		return f3_local0
	end ) --[[ @ 0]]
	self:addElement( tabs ) --[[ @ 0]]
	self.tabs = tabs --[[ @ 0]]
	
	local Bar = LUI.UIImage.new( 0.5, 0.5, -460, 460, 0, 0, 69.5, 97.5 ) --[[ @ 0]]
	Bar:setRGB( 0.25, 0.24, 0.22 ) --[[ @ 0]]
	Bar:setAlpha( 0.88 ) --[[ @ 0]]
	self:addElement( Bar ) --[[ @ 0]]
	self.Bar = Bar --[[ @ 0]]
	
	local InvitePlayersText = LUI.UIText.new( 0.5, 0.5, -460.5, 460.5, 0, 0, 72, 96 ) --[[ @ 0]]
	InvitePlayersText:setRGB( ColorSet.T8__BIEGE.r, ColorSet.T8__BIEGE.g, ColorSet.T8__BIEGE.b ) --[[ @ 0]]
	InvitePlayersText:setAlpha( 0.6 ) --[[ @ 0]]
	InvitePlayersText:setText( LocalizeToUpperString( @"hash_C4EB9FE5F09A2E7" ) ) --[[ @ 0]]
	InvitePlayersText:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	InvitePlayersText:setLetterSpacing( 4 ) --[[ @ 0]]
	InvitePlayersText:setAlignment( Enum[@"LUIAlignment"][@"hash_1FEEB12BCB0D7041"] ) --[[ @ 0]]
	InvitePlayersText:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	self:addElement( InvitePlayersText ) --[[ @ 0]]
	self.InvitePlayersText = InvitePlayersText --[[ @ 0]]
	
	local SendInvitesButton = CoD.CommonListButtonShort.new( f1_local1, f1_arg0, 0.5, 0.5, 211.5, 451.5, 0, 0, 409.5, 501.5 ) --[[ @ 0]]
	SendInvitesButton.Title:setText( LocalizeToUpperString( @"hash_14B2046A85ED2600" ) ) --[[ @ 0]]
	SendInvitesButton:registerEventHandler( "gain_focus", function ( element, event )
		local f4_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f4_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f4_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f4_local0
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( SendInvitesButton, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		if not IsPC() then
			CoD.SocialUtility.SendInvites( self, controller ) --[[ @ 0]]
			GoBack( self, controller ) --[[ @ 0]]
			return true
		elseif IsPC() then
			CoD.SocialUtility.SendInvites( self, controller ) --[[ @ 0]]
			GoBack( self, controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsPC() then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_3AC3B80C833B60E1", nil, "ui_confirm" ) --[[ @ 0]]
			return true
		elseif IsPC() then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_0", nil, "ui_confirm" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( SendInvitesButton ) --[[ @ 0]]
	self.SendInvitesButton = SendInvitesButton --[[ @ 0]]
	
	local SelectedCount = LUI.UIText.new( 0.5, 0.5, 233, 433, 0, 0, 549, 603 ) --[[ @ 0]]
	SelectedCount:setRGB( ColorSet.T8__BIEGE.r, ColorSet.T8__BIEGE.g, ColorSet.T8__BIEGE.b ) --[[ @ 0]]
	SelectedCount:setTTF( "0arame_mono_stencil" ) --[[ @ 0]]
	SelectedCount:setAlignment( Enum[@"LUIAlignment"][@"hash_1FEEB12BCB0D7041"] ) --[[ @ 0]]
	SelectedCount:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	SelectedCount:subscribeToGlobalModel( f1_arg0, "SocialRoot", "selectedCount", function ( model )
		local f7_local0 = model:get() --[[ @ 0]]
		if f7_local0 ~= nil then
			SelectedCount:setText( f7_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( SelectedCount ) --[[ @ 0]]
	self.SelectedCount = SelectedCount --[[ @ 0]]
	
	local SelectedCount2 = LUI.UIText.new( 0.5, 0.5, 233, 433, 0, 0, 522, 547 ) --[[ @ 0]]
	SelectedCount2:setAlpha( 0.7 ) --[[ @ 0]]
	SelectedCount2:setText( LocalizeToUpperString( @"hash_F3659CEDAE6509E" ) ) --[[ @ 0]]
	SelectedCount2:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	SelectedCount2:setLetterSpacing( 4 ) --[[ @ 0]]
	SelectedCount2:setAlignment( Enum[@"LUIAlignment"][@"hash_1FEEB12BCB0D7041"] ) --[[ @ 0]]
	SelectedCount2:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	self:addElement( SelectedCount2 ) --[[ @ 0]]
	self.SelectedCount2 = SelectedCount2 --[[ @ 0]]
	
	local noPlayersOnlineText = LUI.UIText.new( 0.5, 0.5, -402.5, 115.5, 0, 0, 412.5, 449.5 ) --[[ @ 0]]
	noPlayersOnlineText:setAlpha( 0 ) --[[ @ 0]]
	noPlayersOnlineText:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_765A2CB730C7F61D" ) ) --[[ @ 0]]
	noPlayersOnlineText:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	noPlayersOnlineText:setLetterSpacing( 2 ) --[[ @ 0]]
	noPlayersOnlineText:setAlignment( Enum[@"LUIAlignment"][@"hash_1FEEB12BCB0D7041"] ) --[[ @ 0]]
	noPlayersOnlineText:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	self:addElement( noPlayersOnlineText ) --[[ @ 0]]
	self.noPlayersOnlineText = noPlayersOnlineText --[[ @ 0]]
	
	local LayoutTopBar = LUI.UIImage.new( 0.5, 0.5, -473, 473, 0, 0, 40, 68 ) --[[ @ 0]]
	LayoutTopBar:setImage( RegisterImage( @"uie_ui_menu_social_popup_menu_bar" ) ) --[[ @ 0]]
	self:addElement( LayoutTopBar ) --[[ @ 0]]
	self.LayoutTopBar = LayoutTopBar --[[ @ 0]]
	
	local LayoutTopBar2 = LUI.UIImage.new( 0.5, 0.5, -473, 473, 0, 0, 1012, 1040 ) --[[ @ 0]]
	LayoutTopBar2:setZRot( 180 ) --[[ @ 0]]
	LayoutTopBar2:setImage( RegisterImage( @"uie_ui_menu_social_popup_menu_bar" ) ) --[[ @ 0]]
	self:addElement( LayoutTopBar2 ) --[[ @ 0]]
	self.LayoutTopBar2 = LayoutTopBar2 --[[ @ 0]]
	
	local Stripes = LUI.UIImage.new( 0.5, 0.5, -471.5, 471.5, 0, 0, 39, 55 ) --[[ @ 0]]
	Stripes:setImage( RegisterImage( @"uie_ui_menu_social_bar_stripe" ) ) --[[ @ 0]]
	self:addElement( Stripes ) --[[ @ 0]]
	self.Stripes = Stripes --[[ @ 0]]
	
	local Linker = LUI.UIImage.new( 0.5, 0.5, -4, 0, 0, 0, -350.5, 574.5 ) --[[ @ 0]]
	Linker:setAlpha( 0.09 ) --[[ @ 0]]
	Linker:setZRot( 90 ) --[[ @ 0]]
	Linker:setImage( RegisterImage( @"hash_C49B0C8991A541F" ) ) --[[ @ 0]]
	Linker:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_67C9C02F608D0A75" ) ) --[[ @ 0]]
	Linker:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	Linker:setupNineSliceShader( 4, 8 ) --[[ @ 0]]
	self:addElement( Linker ) --[[ @ 0]]
	self.Linker = Linker --[[ @ 0]]
	
	local Linker2 = LUI.UIImage.new( 0.5, 0.5, -4, 0, 0, 0, -148.5, 776.5 ) --[[ @ 0]]
	Linker2:setAlpha( 0.09 ) --[[ @ 0]]
	Linker2:setZRot( 90 ) --[[ @ 0]]
	Linker2:setImage( RegisterImage( @"hash_C49B0C8991A541F" ) ) --[[ @ 0]]
	Linker2:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_67C9C02F608D0A75" ) ) --[[ @ 0]]
	Linker2:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	Linker2:setupNineSliceShader( 4, 8 ) --[[ @ 0]]
	self:addElement( Linker2 ) --[[ @ 0]]
	self.Linker2 = Linker2 --[[ @ 0]]
	
	local LayoutElementTL2 = LUI.UIImage.new( 0.5, 0.5, 437, 453, 0, 0, 77.5, 93.5 ) --[[ @ 0]]
	LayoutElementTL2:setRGB( ColorSet.T8__BIEGE.r, ColorSet.T8__BIEGE.g, ColorSet.T8__BIEGE.b ) --[[ @ 0]]
	LayoutElementTL2:setImage( RegisterImage( @"hash_634B575F15CDD376" ) ) --[[ @ 0]]
	LayoutElementTL2:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_F755127C95CF5B6" ) ) --[[ @ 0]]
	LayoutElementTL2:setShaderVector( 0, 3, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( LayoutElementTL2 ) --[[ @ 0]]
	self.LayoutElementTL2 = LayoutElementTL2 --[[ @ 0]]
	
	local LayoutElementTL = LUI.UIImage.new( 0.5, 0.5, -451, -435, 0, 0, 77.5, 93.5 ) --[[ @ 0]]
	LayoutElementTL:setRGB( ColorSet.T8__BIEGE.r, ColorSet.T8__BIEGE.g, ColorSet.T8__BIEGE.b ) --[[ @ 0]]
	LayoutElementTL:setZRot( 90 ) --[[ @ 0]]
	LayoutElementTL:setImage( RegisterImage( @"hash_634B575F15CDD376" ) ) --[[ @ 0]]
	LayoutElementTL:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_F755127C95CF5B6" ) ) --[[ @ 0]]
	LayoutElementTL:setShaderVector( 0, 3, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( LayoutElementTL ) --[[ @ 0]]
	self.LayoutElementTL = LayoutElementTL --[[ @ 0]]
	
	local buttons = CoD.fe_LeftContainer_NOTLobby.new( f1_local1, f1_arg0, 0.5, 0.5, -436.5, 211.5, 0.5, 0.5, 438, 486 ) --[[ @ 0]]
	self:addElement( buttons ) --[[ @ 0]]
	self.buttons = buttons --[[ @ 0]]
	
	local PCSimpleVScrollList = nil --[[ @ 0]]
	
	PCSimpleVScrollList = CoD.PC_SimpleVScrollList.new( f1_local1, f1_arg0, 0.5, 0.5, -408.5, 105.5, 0.5, 0.5, -127.5, 432.5 ) --[[ @ 0]]
	PCSimpleVScrollList.ScrollView.View:setWidgetType( CoD.Social_PlayersListButtonWithCheckbox ) --[[ @ 0]]
	PCSimpleVScrollList.ScrollView.View:setVerticalCount( AddWithoutPreview( 0, 12 ) ) --[[ @ 0]]
	PCSimpleVScrollList.ScrollView.View:setVerticalCounter( CoD.verticalCounter ) --[[ @ 0]]
	PCSimpleVScrollList.ScrollView.View:setDataSource( "SocialInvitePlayersList" ) --[[ @ 0]]
	PCSimpleVScrollList:appendEventHandler( "input_source_changed", function ( f8_arg0, f8_arg1 )
		f8_arg1.menu = f8_arg1.menu or f1_local1 --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f8_arg0, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_1E6DB407A2AF8B09"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local BTNQuit = PCSimpleVScrollList --[[ @ 0]]
	local Header = PCSimpleVScrollList.subscribeToModel --[[ @ 0]]
	local featureOverlayButtonMouseOnly = Engine[@"GetModelForController"]( f1_arg0 ) --[[ @ 0]]
	Header( BTNQuit, featureOverlayButtonMouseOnly.LastInput, function ( f9_arg0, f9_arg1 )
		CoD.Menu.UpdateButtonShownState( f9_arg1, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_1E6DB407A2AF8B09"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	PCSimpleVScrollList:registerEventHandler( "list_item_gain_focus", function ( element, event )
		local f10_local0 = nil --[[ @ 0]]
		CacheSocialOnlinePlayersListModels( self, element, f1_arg0 ) --[[ @ 0]]
		CopyModelFindElement( f1_local1, f1_arg0, element, "Header" ) --[[ @ 0]]
		PlaySoundAlias( "uin_paint_decal_nav" ) --[[ @ 0]]
		return f10_local0
	end ) --[[ @ 0]]
	PCSimpleVScrollList:registerEventHandler( "gain_focus", function ( element, event )
		local f11_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f11_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f11_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_1E6DB407A2AF8B09"] ) --[[ @ 0]]
		return f11_local0
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( PCSimpleVScrollList, f1_arg0, Enum[@"LUIButton"][@"hash_1E6DB407A2AF8B09"], nil, function ( element, menu, controller, model )
		if IsGamepad( controller ) then
			SetSelectedFriendXUID( self, element, controller ) --[[ @ 0]]
			OpenOverlay( self, "Social_PlayerDetailsPopup", controller, nil ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsGamepad( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_1E6DB407A2AF8B09"], @"hash_1E0254269ED8FFD3", nil, nil ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( PCSimpleVScrollList ) --[[ @ 0]]
	self.PCSimpleVScrollList = PCSimpleVScrollList --[[ @ 0]]
	
	Header = CoD.Social_InvitePlayersHeader.new( f1_local1, f1_arg0, 0.5, 0.5, -381, 306, 0.5, 0.5, -407.5, -238.5 ) --[[ @ 0]]
	self:addElement( Header ) --[[ @ 0]]
	self.Header = Header --[[ @ 0]]
	
	BTNQuit = nil --[[ @ 0]]
	
	BTNQuit = CoD.PC_SmallCloseButton.new( f1_local1, f1_arg0, 0.5, 0.5, 426, 460, 0.5, 0.5, -473.5, -439.5 ) --[[ @ 0]]
	BTNQuit:setScale( 0.8, 0.8 ) --[[ @ 0]]
	BTNQuit:registerEventHandler( "gain_focus", function ( element, event )
		local f14_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f14_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f14_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f14_local0
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( BTNQuit, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		GoBack( self, controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_0", nil, "ui_confirm" ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	self:addElement( BTNQuit ) --[[ @ 0]]
	self.BTNQuit = BTNQuit --[[ @ 0]]
	
	featureOverlayButtonMouseOnly = nil --[[ @ 0]]
	
	featureOverlayButtonMouseOnly = CoD.featureOverlay_Button_MouseOnly.new( f1_local1, f1_arg0, 0.5, 0.5, -408.5, -222.5, 0.5, 0.5, 426, 486 ) --[[ @ 0]]
	featureOverlayButtonMouseOnly.featureOverlayButtonContainer.Title:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_778D439E1B360368" ) ) --[[ @ 0]]
	featureOverlayButtonMouseOnly:registerEventHandler( "gain_focus", function ( element, event )
		local f17_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f17_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f17_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f17_local0
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( featureOverlayButtonMouseOnly, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		GoBack( self, controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_0", nil, "ui_confirm" ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	self:addElement( featureOverlayButtonMouseOnly ) --[[ @ 0]]
	self.featureOverlayButtonMouseOnly = featureOverlayButtonMouseOnly --[[ @ 0]]
	
	Header:linkToElementModel( f1_local7, nil, false, function ( model )
		Header:setModel( model, f1_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:mergeStateConditions( {
		{
			stateName = "NoPlayersOnline",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalDataSourceModelValueEqualTo( f1_arg0, "SocialRoot", "visibleCount", 0 )
			end
		}
	} ) --[[ @ 0]]
	local f1_local27 = self --[[ @ 0]]
	local f1_local28 = self.subscribeToModel --[[ @ 0]]
	local f1_local29 = DataSources.SocialRoot.getModel( f1_arg0 ) --[[ @ 0]]
	f1_local28( f1_local27, f1_local29.visibleCount, function ( f22_arg0 )
		f1_local1:updateElementState( self, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f22_arg0:get(),
			modelName = "visibleCount"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:registerEventHandler( "menu_loaded", function ( self, event )
		local f23_local0 = nil --[[ @ 0]]
		if self.menuLoaded then
			f23_local0 = self:menuLoaded( event ) --[[ @ 0]]
		elseif self.super.menuLoaded then
			f23_local0 = self.super:menuLoaded( event ) --[[ @ 0]]
		end
		if not IsPC() then
			CoD.FreeCursorUtility.AddLockedFocusLeftOrRightNavigation( f1_local1, f1_arg0, self.onlineList, self.SendInvitesButton ) --[[ @ 0]]
		end
		if not f23_local0 then
			f23_local0 = self:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f23_local0
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"], nil, function ( element, menu, controller, model )
		GoBack( self, controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"], @"hash_6A4032FB2AAB69F2", nil, nil ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( self, "close", function ( element )
		CoD.SocialUtility.PopCurrentSocialTab( f1_local1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self.__on_menuOpened_self = function ( f27_arg0, f27_arg1, f27_arg2, f27_arg3 )
		local f27_local0 = self --[[ @ 0]]
		CoD.FreeCursorUtility.GiveFocusToElementsDefaultFocus( f27_arg2, f27_arg2, f27_arg1 ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	f1_local1:addMenuOpenedCallback( self.__on_menuOpened_self ) --[[ @ 0]]
	f1_local7.id = "onlineList" --[[ @ 0]]
	tabs.id = "tabs" --[[ @ 0]]
	SendInvitesButton.id = "SendInvitesButton" --[[ @ 0]]
	buttons:setModel( self.buttonModel, f1_arg0 ) --[[ @ 0]]
	if CoD.isPC then
		buttons.id = "buttons" --[[ @ 0]]
	end
	if CoD.isPC then
		PCSimpleVScrollList.id = "PCSimpleVScrollList" --[[ @ 0]]
	end
	Header.id = "Header" --[[ @ 0]]
	if CoD.isPC then
		BTNQuit.id = "BTNQuit" --[[ @ 0]]
	end
	if CoD.isPC then
		featureOverlayButtonMouseOnly.id = "featureOverlayButtonMouseOnly" --[[ @ 0]]
	end
	self:processEvent( {
		name = "menu_loaded",
		controller = f1_arg0
	} ) --[[ @ 0]]
	self.__defaultFocus = f1_local7 --[[ @ 0]]
	if CoD.isPC and (IsKeyboard( f1_arg0 ) or self.ignoreCursor) then
		self:restoreState( f1_arg0 ) --[[ @ 0]]
	end
	self.__on_close_removeOverrides = function ()
		f1_local1:removeMenuOpenedCallback( self.__on_menuOpened_self ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg0 ) --[[ @ 0]]
	end
	f1_local28 = self --[[ @ 0]]
	SetElementPropertyEnum( self.onlineList, "_presenceFilter", Enum[@"PresenceFilter"][@"hash_7A6C6FA7E13B40BF"] ) --[[ @ 0]]
	MenuHidesFreeCursor( f1_local1, f1_arg0 ) --[[ @ 0]]
	CoD.SocialUtility.SetSelfInviteTypeToSocialRoot( self, f1_arg0 ) --[[ @ 0]]
	CoD.BaseUtility.SetCustomNavDirection( CoD.BaseUtility.NavigationDirection.right, f1_local7, self.SendInvitesButton ) --[[ @ 0]]
	f1_local28 = PCSimpleVScrollList --[[ @ 0]]
	if IsPC() then
		CoD.PCWidgetUtility.SelectFirstActiveItemInPCScrollView( self, f1_arg0, self.PCSimpleVScrollList, self.Header ) --[[ @ 0]]
		CoD.BaseUtility.SetCustomNavDirection( CoD.BaseUtility.NavigationDirection.right, self.PCSimpleVScrollList, self.SendInvitesButton ) --[[ @ 0]]
	end
	return self
end
 --[[ @ 0]]
CoD.Social_InvitePlayersPopup.__resetProperties = function ( f29_arg0 )
	f29_arg0.noPlayersOnlineText:completeAnimation() --[[ @ 0]]
	f29_arg0.onlineList:completeAnimation() --[[ @ 0]]
	f29_arg0.PCSimpleVScrollList:completeAnimation() --[[ @ 0]]
	f29_arg0.Header:completeAnimation() --[[ @ 0]]
	f29_arg0.noPlayersOnlineText:setAlpha( 0 ) --[[ @ 0]]
	f29_arg0.onlineList:setAlpha( 1 ) --[[ @ 0]]
	f29_arg0.PCSimpleVScrollList:setAlpha( 1 ) --[[ @ 0]]
	f29_arg0.Header:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.Social_InvitePlayersPopup.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f30_arg0, f30_arg1 )
			f30_arg0:__resetProperties() --[[ @ 0]]
			f30_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	NoPlayersOnline = {
		DefaultClip = function ( f31_arg0, f31_arg1 )
			f31_arg0:__resetProperties() --[[ @ 0]]
			f31_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f31_arg0.onlineList:completeAnimation() --[[ @ 0]]
			f31_arg0.onlineList:setAlpha( 0 ) --[[ @ 0]]
			f31_arg0.clipFinished( f31_arg0.onlineList ) --[[ @ 0]]
			f31_arg0.noPlayersOnlineText:completeAnimation() --[[ @ 0]]
			f31_arg0.noPlayersOnlineText:setAlpha( 1 ) --[[ @ 0]]
			f31_arg0.clipFinished( f31_arg0.noPlayersOnlineText ) --[[ @ 0]]
			f31_arg0.PCSimpleVScrollList:completeAnimation() --[[ @ 0]]
			f31_arg0.PCSimpleVScrollList:setAlpha( 0 ) --[[ @ 0]]
			f31_arg0.clipFinished( f31_arg0.PCSimpleVScrollList ) --[[ @ 0]]
			f31_arg0.Header:completeAnimation() --[[ @ 0]]
			f31_arg0.Header:setAlpha( 0 ) --[[ @ 0]]
			f31_arg0.clipFinished( f31_arg0.Header ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.Social_InvitePlayersPopup.__onClose = function ( f32_arg0 )
	f32_arg0.__on_close_removeOverrides() --[[ @ 0]]
	f32_arg0.Header:close() --[[ @ 0]]
	f32_arg0.onlineList:close() --[[ @ 0]]
	f32_arg0.tabs:close() --[[ @ 0]]
	f32_arg0.SendInvitesButton:close() --[[ @ 0]]
	f32_arg0.SelectedCount:close() --[[ @ 0]]
	f32_arg0.buttons:close() --[[ @ 0]]
	f32_arg0.PCSimpleVScrollList:close() --[[ @ 0]]
	f32_arg0.BTNQuit:close() --[[ @ 0]]
	f32_arg0.featureOverlayButtonMouseOnly:close() --[[ @ 0]]
end
 --[[ @ 0]]
