-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:51
require( "ui/uieditor/widgets/bumperbuttonwithkeymousetext" ) --[[ @ 0]]
require( "ui/uieditor/widgets/director/directorselecttexttab" ) --[[ @ 0]]
require( "ui/uieditor/widgets/tabbedwidgets/basictablist" ) --[[ @ 0]]
require( "x64:314ab47ffb48a077" ) --[[ @ 0]]

CoD.Common_Tabbar_Center = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.Common_Tabbar_Center.__defaultWidth = 3300 --[[ @ 0]]
CoD.Common_Tabbar_Center.__defaultHeight = 61 --[[ @ 0]]
CoD.Common_Tabbar_Center.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIHorizontalList.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9, 12, false ) --[[ @ 0]]
	self:setAlignment( LUI.Alignment.Center ) --[[ @ 0]]
	CoD.BaseUtility.InitGlobalModel( "CommonCurrentActiveTabIndex", 1 ) --[[ @ 0]]
	self:setClass( CoD.Common_Tabbar_Center ) --[[ @ 0]]
	self.id = "Common_Tabbar_Center" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local LB = CoD.BumperButtonWithKeyMouseText.new( f1_arg0, f1_arg1, 0.5, 0.5, -1148, -948, 0, 0.56, 17, 17 ) --[[ @ 0]]
	LB.GamepadPrompt:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_5BDCD5292604F434" ) ) --[[ @ 0]]
	LB.GamepadPrompt:setAlignment( Enum[@"luialignment"][@"lui_alignment_right"] ) --[[ @ 0]]
	self:addElement( LB ) --[[ @ 0]]
	self.LB = LB --[[ @ 0]]
	
	local left = nil --[[ @ 0]]
	
	left = CoD.PC_TabsArrow.new( f1_arg0, f1_arg1, 1, 1, -2586, -2526, 0.5, 0.5, -17, 23 ) --[[ @ 0]]
	left:mergeStateConditions( {
		{
			stateName = "Disabled",
			condition = function ( menu, element, event )
				return CoD.CACUtility.IsFirstCommonTabInRowActive( f1_arg1 )
			end
		}
	} ) --[[ @ 0]]
	local RB = left --[[ @ 0]]
	local Tabs = left.subscribeToModel --[[ @ 0]]
	local right = Engine[@"getglobalmodel"]() --[[ @ 0]]
	Tabs( RB, right.CommonCurrentActiveTabIndex, function ( f3_arg0 )
		f1_arg0:updateElementState( left, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f3_arg0:get(),
			modelName = "CommonCurrentActiveTabIndex"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	left:setAlpha( 0 ) --[[ @ 0]]
	left:registerEventHandler( "gain_focus", function ( element, event )
		local f4_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f4_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f4_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		return f4_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( left, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"], "ui_confirm", function ( element, menu, controller, model )
		CoD.GridAndListUtility.DoBumperGridButton( menu, controller, true ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"menu/select", nil, "ui_confirm" ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	self:addElement( left ) --[[ @ 0]]
	self.left = left --[[ @ 0]]
	
	Tabs = CoD.basicTabList.new( f1_arg0, f1_arg1, 0.5, 0.5, -864, 864, 0, 0.98, 17, 17 ) --[[ @ 0]]
	Tabs.grid:setWidgetType( CoD.DirectorSelectTextTab ) --[[ @ 0]]
	self:addElement( Tabs ) --[[ @ 0]]
	self.Tabs = Tabs --[[ @ 0]]
	
	RB = CoD.BumperButtonWithKeyMouseText.new( f1_arg0, f1_arg1, 0.5, 0.5, 876, 1076, 0, 0.56, 17, 17 ) --[[ @ 0]]
	RB.GamepadPrompt:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_5BFED5292621DA9A" ) ) --[[ @ 0]]
	self:addElement( RB ) --[[ @ 0]]
	self.RB = RB --[[ @ 0]]
	
	right = nil --[[ @ 0]]
	
	right = CoD.PC_TabsArrow.new( f1_arg0, f1_arg1, 1, 1, -562, -502, 0.5, 0.5, -17, 23 ) --[[ @ 0]]
	right:mergeStateConditions( {
		{
			stateName = "Disabled",
			condition = function ( menu, element, event )
				return CoD.CACUtility.IsLastCommonTabInRowActive( f1_arg1, self.Tabs )
			end
		}
	} ) --[[ @ 0]]
	local f1_local6 = right --[[ @ 0]]
	local f1_local7 = right.subscribeToModel --[[ @ 0]]
	local f1_local8 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local7( f1_local6, f1_local8.CommonCurrentActiveTabIndex, function ( f8_arg0 )
		f1_arg0:updateElementState( right, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f8_arg0:get(),
			modelName = "CommonCurrentActiveTabIndex"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	right:setAlpha( 0 ) --[[ @ 0]]
	right:setZRot( 180 ) --[[ @ 0]]
	right:registerEventHandler( "gain_focus", function ( element, event )
		local f9_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f9_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f9_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		return f9_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( right, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"], "ui_confirm", function ( element, menu, controller, model )
		CoD.GridAndListUtility.DoBumperGridButton( menu, controller, false ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"menu/select", nil, "ui_confirm" ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	self:addElement( right ) --[[ @ 0]]
	self.right = right --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		},
		{
			stateName = "ArrowShown",
			condition = function ( menu, element, event )
				return CoD.GridAndListUtility.ShowTabArrows( f1_arg1, self.Tabs ) and not IsGamepad( f1_arg1 )
			end
		}
	} ) --[[ @ 0]]
	self:appendEventHandler( "grid_updated", function ( f14_arg0, f14_arg1 )
		f14_arg1.menu = f14_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( self, f14_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:appendEventHandler( "input_source_changed", function ( f15_arg0, f15_arg1 )
		f15_arg1.menu = f15_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( self, f15_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	f1_local6 = self --[[ @ 0]]
	f1_local7 = self.subscribeToModel --[[ @ 0]]
	f1_local8 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local7( f1_local6, f1_local8.LastInput, function ( f16_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f16_arg0:get(),
			modelName = "LastInput"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	if CoD.isPC then
		left.id = "left" --[[ @ 0]]
	end
	Tabs.id = "Tabs" --[[ @ 0]]
	if CoD.isPC then
		right.id = "right" --[[ @ 0]]
	end
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.Common_Tabbar_Center.__resetProperties = function ( f17_arg0 )
	f17_arg0.RB:completeAnimation() --[[ @ 0]]
	f17_arg0.LB:completeAnimation() --[[ @ 0]]
	f17_arg0.Tabs:completeAnimation() --[[ @ 0]]
	f17_arg0.left:completeAnimation() --[[ @ 0]]
	f17_arg0.right:completeAnimation() --[[ @ 0]]
	f17_arg0.RB:setAlpha( 1 ) --[[ @ 0]]
	f17_arg0.LB:setAlpha( 1 ) --[[ @ 0]]
	f17_arg0.Tabs:setAlpha( 1 ) --[[ @ 0]]
	f17_arg0.left:setAlpha( 0 ) --[[ @ 0]]
	f17_arg0.right:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.Common_Tabbar_Center.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f18_arg0, f18_arg1 )
			f18_arg0:__resetProperties() --[[ @ 0]]
			f18_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	Hidden = {
		DefaultClip = function ( f19_arg0, f19_arg1 )
			f19_arg0:__resetProperties() --[[ @ 0]]
			f19_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f19_arg0.LB:completeAnimation() --[[ @ 0]]
			f19_arg0.LB:setAlpha( 0 ) --[[ @ 0]]
			f19_arg0.clipFinished( f19_arg0.LB ) --[[ @ 0]]
			f19_arg0.Tabs:completeAnimation() --[[ @ 0]]
			f19_arg0.Tabs:setAlpha( 0 ) --[[ @ 0]]
			f19_arg0.clipFinished( f19_arg0.Tabs ) --[[ @ 0]]
			f19_arg0.RB:completeAnimation() --[[ @ 0]]
			f19_arg0.RB:setAlpha( 0 ) --[[ @ 0]]
			f19_arg0.clipFinished( f19_arg0.RB ) --[[ @ 0]]
		end
	},
	ArrowShown = {
		DefaultClip = function ( f20_arg0, f20_arg1 )
			f20_arg0:__resetProperties() --[[ @ 0]]
			f20_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f20_arg0.LB:completeAnimation() --[[ @ 0]]
			f20_arg0.LB:setAlpha( 0 ) --[[ @ 0]]
			f20_arg0.clipFinished( f20_arg0.LB ) --[[ @ 0]]
			f20_arg0.left:completeAnimation() --[[ @ 0]]
			f20_arg0.left:setAlpha( 1 ) --[[ @ 0]]
			f20_arg0.clipFinished( f20_arg0.left ) --[[ @ 0]]
			f20_arg0.RB:completeAnimation() --[[ @ 0]]
			f20_arg0.RB:setAlpha( 0 ) --[[ @ 0]]
			f20_arg0.clipFinished( f20_arg0.RB ) --[[ @ 0]]
			f20_arg0.right:completeAnimation() --[[ @ 0]]
			f20_arg0.right:setAlpha( 1 ) --[[ @ 0]]
			f20_arg0.clipFinished( f20_arg0.right ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.Common_Tabbar_Center.__onClose = function ( f21_arg0 )
	f21_arg0.LB:close() --[[ @ 0]]
	f21_arg0.left:close() --[[ @ 0]]
	f21_arg0.Tabs:close() --[[ @ 0]]
	f21_arg0.RB:close() --[[ @ 0]]
	f21_arg0.right:close() --[[ @ 0]]
end
 --[[ @ 0]]
