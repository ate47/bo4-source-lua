-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:36
CoD.AARGameInfo = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.AARGameInfo.__defaultWidth = 1920 --[[ @ 0]]
CoD.AARGameInfo.__defaultHeight = 200 --[[ @ 0]]
CoD.AARGameInfo.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.AARGameInfo ) --[[ @ 0]]
	self.id = "AARGameInfo" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local GametypeImage = LUI.UIImage.new( 0, 0, 614, 734, 0, 0, -27.5, 92.5 ) --[[ @ 0]]
	GametypeImage:setAlpha( 0.5 ) --[[ @ 0]]
	GametypeImage:linkToElementModel( self, "gametypeIcon", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			GametypeImage:setImage( RegisterImage( f2_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( GametypeImage ) --[[ @ 0]]
	self.GametypeImage = GametypeImage --[[ @ 0]]
	
	local GametypeAndMap = LUI.UIText.new( 0, 0, 737, 1591, 0, 0, -12.5, 8.5 ) --[[ @ 0]]
	GametypeAndMap:setRGB( 0.9, 0.89, 0.78 ) --[[ @ 0]]
	GametypeAndMap:setAlpha( 0.2 ) --[[ @ 0]]
	GametypeAndMap:setTTF( "dinnext_regular" ) --[[ @ 0]]
	GametypeAndMap:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	GametypeAndMap:linkToElementModel( self, "gametypeAndMap", true, function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			GametypeAndMap:setText( f3_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( GametypeAndMap ) --[[ @ 0]]
	self.GametypeAndMap = GametypeAndMap --[[ @ 0]]
	
	local VictoryDefeatGlow = LUI.UIText.new( 0, 0, 737, 1592, 0, 0, 12, 87 ) --[[ @ 0]]
	VictoryDefeatGlow:setRGB( 0.9, 0.89, 0.78 ) --[[ @ 0]]
	VictoryDefeatGlow:setAlpha( 0 ) --[[ @ 0]]
	VictoryDefeatGlow:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_AB769C72F266516" ) ) --[[ @ 0]]
	VictoryDefeatGlow:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	VictoryDefeatGlow:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_90D57B1E92D39D7" ) ) --[[ @ 0]]
	VictoryDefeatGlow:setShaderVector( 0, 0.6, 0, 0, 0 ) --[[ @ 0]]
	VictoryDefeatGlow:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	VictoryDefeatGlow:setShaderVector( 2, 1, 1, 1, 0.6 ) --[[ @ 0]]
	VictoryDefeatGlow:setLetterSpacing( 10 ) --[[ @ 0]]
	VictoryDefeatGlow:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	VictoryDefeatGlow:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	self:addElement( VictoryDefeatGlow ) --[[ @ 0]]
	self.VictoryDefeatGlow = VictoryDefeatGlow --[[ @ 0]]
	
	local VictoryDefeat = LUI.UIText.new( 0, 0, 737, 1592, 0, 0, 12, 87 ) --[[ @ 0]]
	VictoryDefeat:setRGB( 0.9, 0.89, 0.78 ) --[[ @ 0]]
	VictoryDefeat:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_AB769C72F266516" ) ) --[[ @ 0]]
	VictoryDefeat:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	VictoryDefeat:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_171E049B161CD00A" ) ) --[[ @ 0]]
	VictoryDefeat:setLetterSpacing( 10 ) --[[ @ 0]]
	VictoryDefeat:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	self:addElement( VictoryDefeat ) --[[ @ 0]]
	self.VictoryDefeat = VictoryDefeat --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Defeated",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualTo( element, f1_arg1, "lastMatchOutcome", @"loss" )
			end
		},
		{
			stateName = "Draw",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualTo( element, f1_arg1, "lastMatchOutcome", @"draw" )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "lastMatchOutcome", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "lastMatchOutcome"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.AARGameInfo.__resetProperties = function ( f7_arg0 )
	f7_arg0.VictoryDefeat:completeAnimation() --[[ @ 0]]
	f7_arg0.VictoryDefeatGlow:completeAnimation() --[[ @ 0]]
	f7_arg0.VictoryDefeat:setRGB( 0.9, 0.89, 0.78 ) --[[ @ 0]]
	f7_arg0.VictoryDefeat:setAlpha( 1 ) --[[ @ 0]]
	f7_arg0.VictoryDefeat:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_AB769C72F266516" ) ) --[[ @ 0]]
	f7_arg0.VictoryDefeatGlow:setAlpha( 0 ) --[[ @ 0]]
	f7_arg0.VictoryDefeatGlow:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_AB769C72F266516" ) ) --[[ @ 0]]
	f7_arg0.VictoryDefeatGlow:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_90D57B1E92D39D7" ) ) --[[ @ 0]]
	f7_arg0.VictoryDefeatGlow:setShaderVector( 0, 0.6, 0, 0, 0 ) --[[ @ 0]]
	f7_arg0.VictoryDefeatGlow:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	f7_arg0.VictoryDefeatGlow:setShaderVector( 2, 1, 1, 1, 0.6 ) --[[ @ 0]]
	f7_arg0.VictoryDefeatGlow:setRFTMaterial( LUI.UIImage.GetCachedMaterial( @"ui_normal" ) ) --[[ @ 0]]
	f7_arg0.VictoryDefeatGlow:setBackingMaterial( LUI.UIImage.GetCachedMaterial( @"ui_normal" ) ) --[[ @ 0]]
	f7_arg0.VictoryDefeatGlow:setBackingMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_normal" ) ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.AARGameInfo.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f8_arg0, f8_arg1 )
			f8_arg0:__resetProperties() --[[ @ 0]]
			f8_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f8_arg0.VictoryDefeatGlow:completeAnimation() --[[ @ 0]]
			f8_arg0.VictoryDefeatGlow:setAlpha( 0.8 ) --[[ @ 0]]
			f8_arg0.VictoryDefeatGlow:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_90D57B1E92D39D7" ) ) --[[ @ 0]]
			f8_arg0.VictoryDefeatGlow:setShaderVector( 0, 0.6, 0, 0, 0 ) --[[ @ 0]]
			f8_arg0.VictoryDefeatGlow:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
			f8_arg0.VictoryDefeatGlow:setShaderVector( 2, 0.4, 0.5, 0.21, 0.6 ) --[[ @ 0]]
			f8_arg0.VictoryDefeatGlow:setRFTMaterial( LUI.UIImage.GetCachedMaterial( @"ui_normal" ) ) --[[ @ 0]]
			f8_arg0.VictoryDefeatGlow:setBackingMaterial( LUI.UIImage.GetCachedMaterial( @"ui_normal" ) ) --[[ @ 0]]
			f8_arg0.VictoryDefeatGlow:setBackingMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_normal" ) ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.VictoryDefeatGlow ) --[[ @ 0]]
			f8_arg0.VictoryDefeat:completeAnimation() --[[ @ 0]]
			f8_arg0.VictoryDefeat:setRGB( 0.4, 0.55, 0.22 ) --[[ @ 0]]
			f8_arg0.VictoryDefeat:setAlpha( 1 ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.VictoryDefeat ) --[[ @ 0]]
		end
	},
	Defeated = {
		DefaultClip = function ( f9_arg0, f9_arg1 )
			f9_arg0:__resetProperties() --[[ @ 0]]
			f9_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f9_arg0.VictoryDefeatGlow:completeAnimation() --[[ @ 0]]
			f9_arg0.VictoryDefeatGlow:setAlpha( 1 ) --[[ @ 0]]
			f9_arg0.VictoryDefeatGlow:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_2780ADEC446F483" ) ) --[[ @ 0]]
			f9_arg0.VictoryDefeatGlow:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_90D57B1E92D39D7" ) ) --[[ @ 0]]
			f9_arg0.VictoryDefeatGlow:setShaderVector( 0, 0.6, 0, 0, 0 ) --[[ @ 0]]
			f9_arg0.VictoryDefeatGlow:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
			f9_arg0.VictoryDefeatGlow:setShaderVector( 2, 1, 0, 0, 0.6 ) --[[ @ 0]]
			f9_arg0.VictoryDefeatGlow:setRFTMaterial( LUI.UIImage.GetCachedMaterial( @"ui_normal" ) ) --[[ @ 0]]
			f9_arg0.VictoryDefeatGlow:setBackingMaterial( LUI.UIImage.GetCachedMaterial( @"ui_normal" ) ) --[[ @ 0]]
			f9_arg0.VictoryDefeatGlow:setBackingMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_normal" ) ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.VictoryDefeatGlow ) --[[ @ 0]]
			f9_arg0.VictoryDefeat:completeAnimation() --[[ @ 0]]
			f9_arg0.VictoryDefeat:setRGB( 0.82, 0.33, 0.18 ) --[[ @ 0]]
			f9_arg0.VictoryDefeat:setAlpha( 1 ) --[[ @ 0]]
			f9_arg0.VictoryDefeat:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_2780ADEC446F483" ) ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.VictoryDefeat ) --[[ @ 0]]
		end
	},
	Draw = {
		DefaultClip = function ( f10_arg0, f10_arg1 )
			f10_arg0:__resetProperties() --[[ @ 0]]
			f10_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f10_arg0.VictoryDefeatGlow:completeAnimation() --[[ @ 0]]
			f10_arg0.VictoryDefeatGlow:setAlpha( 0 ) --[[ @ 0]]
			f10_arg0.VictoryDefeatGlow:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_90D57B1E92D39D7" ) ) --[[ @ 0]]
			f10_arg0.VictoryDefeatGlow:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
			f10_arg0.VictoryDefeatGlow:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
			f10_arg0.VictoryDefeatGlow:setShaderVector( 2, 1, 1, 1, 0 ) --[[ @ 0]]
			f10_arg0.VictoryDefeatGlow:setRFTMaterial( LUI.UIImage.GetCachedMaterial( @"ui_normal" ) ) --[[ @ 0]]
			f10_arg0.VictoryDefeatGlow:setBackingMaterial( LUI.UIImage.GetCachedMaterial( @"ui_normal" ) ) --[[ @ 0]]
			f10_arg0.VictoryDefeatGlow:setBackingMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_normal" ) ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.VictoryDefeatGlow ) --[[ @ 0]]
			f10_arg0.VictoryDefeat:completeAnimation() --[[ @ 0]]
			f10_arg0.VictoryDefeat:setAlpha( 0.3 ) --[[ @ 0]]
			f10_arg0.VictoryDefeat:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_5F8F9DBF6F19D92" ) ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.VictoryDefeat ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.AARGameInfo.__onClose = function ( f11_arg0 )
	f11_arg0.GametypeImage:close() --[[ @ 0]]
	f11_arg0.GametypeAndMap:close() --[[ @ 0]]
end
 --[[ @ 0]]
