-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:51
require( "ui/uieditor/widgets/pc/utility/verticallistspacer" ) --[[ @ 0]]

CoD.AARAverageWidget = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.AARAverageWidget.__defaultWidth = 1500 --[[ @ 0]]
CoD.AARAverageWidget.__defaultHeight = 38 --[[ @ 0]]
CoD.AARAverageWidget.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIHorizontalList.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9, 0, false ) --[[ @ 0]]
	self:setAlignment( LUI.Alignment.Left ) --[[ @ 0]]
	self:setClass( CoD.AARAverageWidget ) --[[ @ 0]]
	self.id = "AARAverageWidget" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local GametypeLabel = LUI.UIText.new( 0, 0, 0, 500, 0, 0, 8.5, 29.5 ) --[[ @ 0]]
	GametypeLabel:setRGB( ColorSet.PlayerYellow.r, ColorSet.PlayerYellow.g, ColorSet.PlayerYellow.b ) --[[ @ 0]]
	GametypeLabel:setAlpha( 0.3 ) --[[ @ 0]]
	GametypeLabel:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	GametypeLabel:setLetterSpacing( 4 ) --[[ @ 0]]
	GametypeLabel:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	GametypeLabel:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	GametypeLabel:linkToElementModel( self, "gametype", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			GametypeLabel:setText( LocalizeToUpperString( CoD.GameTypeUtility.GameTypeToLocalizeName( f2_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( GametypeLabel ) --[[ @ 0]]
	self.GametypeLabel = GametypeLabel --[[ @ 0]]
	
	local VerticalListSpacer2 = CoD.VerticalListSpacer.new( f1_arg0, f1_arg1, 0, 0, 500, 515, 0, 0, 0, 38 ) --[[ @ 0]]
	self:addElement( VerticalListSpacer2 ) --[[ @ 0]]
	self.VerticalListSpacer2 = VerticalListSpacer2 --[[ @ 0]]
	
	local DamageLabel = LUI.UIText.new( 0, 0, 530, 1030, 0, 0, 9, 30 ) --[[ @ 0]]
	DamageLabel:setRGB( ColorSet.PlayerYellow.r, ColorSet.PlayerYellow.g, ColorSet.PlayerYellow.b ) --[[ @ 0]]
	DamageLabel:setAlpha( 0.3 ) --[[ @ 0]]
	DamageLabel:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_573D09C07F4B5680" ) ) --[[ @ 0]]
	DamageLabel:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	DamageLabel:setLetterSpacing( 4 ) --[[ @ 0]]
	DamageLabel:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	DamageLabel:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	self:addElement( DamageLabel ) --[[ @ 0]]
	self.DamageLabel = DamageLabel --[[ @ 0]]
	
	local VerticalListSpacer = CoD.VerticalListSpacer.new( f1_arg0, f1_arg1, 0, 0, 1030, 1050, 0, 0, 0, 38 ) --[[ @ 0]]
	self:addElement( VerticalListSpacer ) --[[ @ 0]]
	self.VerticalListSpacer = VerticalListSpacer --[[ @ 0]]
	
	local Average = LUI.UIText.new( 0, 0, 1060, 1241, 0, 0, 4, 35 ) --[[ @ 0]]
	Average:setRGB( ColorSet.PlayerYellow.r, ColorSet.PlayerYellow.g, ColorSet.PlayerYellow.b ) --[[ @ 0]]
	Average:setAlpha( 0.5 ) --[[ @ 0]]
	Average:setTTF( "0arame_mono_stencil" ) --[[ @ 0]]
	Average:setLetterSpacing( 1 ) --[[ @ 0]]
	Average:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	Average:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	Average:linkToElementModel( self, "averageStat", true, function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			Average:setText( f3_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Average ) --[[ @ 0]]
	self.Average = Average --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "WinLose",
			condition = function ( menu, element, event )
				return CoD.AARUtility.IsWinLoseStat( f1_arg1 )
			end
		}
	} ) --[[ @ 0]]
	local f1_local6 = self --[[ @ 0]]
	local f1_local7 = self.subscribeToModel --[[ @ 0]]
	local f1_local8 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local7( f1_local6, f1_local8["AAR.activeStat"], function ( f5_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f5_arg0:get(),
			modelName = "AAR.activeStat"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.AARAverageWidget.__resetProperties = function ( f6_arg0 )
	f6_arg0.Average:completeAnimation() --[[ @ 0]]
	f6_arg0.DamageLabel:completeAnimation() --[[ @ 0]]
	f6_arg0.GametypeLabel:completeAnimation() --[[ @ 0]]
	f6_arg0.Average:setAlpha( 0.5 ) --[[ @ 0]]
	f6_arg0.DamageLabel:setAlpha( 0.3 ) --[[ @ 0]]
	f6_arg0.GametypeLabel:setAlpha( 0.3 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.AARAverageWidget.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f7_arg0, f7_arg1 )
			f7_arg0:__resetProperties() --[[ @ 0]]
			f7_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f7_arg0.Average:completeAnimation() --[[ @ 0]]
			f7_arg0.Average:setAlpha( 0.5 ) --[[ @ 0]]
			f7_arg0.clipFinished( f7_arg0.Average ) --[[ @ 0]]
			f7_arg0.nextClip = "DefaultClip" --[[ @ 0]]
		end
	},
	WinLose = {
		DefaultClip = function ( f8_arg0, f8_arg1 )
			f8_arg0:__resetProperties() --[[ @ 0]]
			f8_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f8_arg0.GametypeLabel:completeAnimation() --[[ @ 0]]
			f8_arg0.GametypeLabel:setAlpha( 0 ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.GametypeLabel ) --[[ @ 0]]
			f8_arg0.DamageLabel:completeAnimation() --[[ @ 0]]
			f8_arg0.DamageLabel:setAlpha( 0 ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.DamageLabel ) --[[ @ 0]]
			f8_arg0.Average:completeAnimation() --[[ @ 0]]
			f8_arg0.Average:setAlpha( 0 ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.Average ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.AARAverageWidget.__onClose = function ( f9_arg0 )
	f9_arg0.GametypeLabel:close() --[[ @ 0]]
	f9_arg0.VerticalListSpacer2:close() --[[ @ 0]]
	f9_arg0.VerticalListSpacer:close() --[[ @ 0]]
	f9_arg0.Average:close() --[[ @ 0]]
end
 --[[ @ 0]]
