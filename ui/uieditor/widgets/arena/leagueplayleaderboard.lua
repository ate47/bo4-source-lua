-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:36
require( "x64:1a876df622faedff" ) --[[ @ 0]]
require( "ui/uieditor/widgets/arena/leagueplayleaderboardentry" ) --[[ @ 0]]
require( "ui/uieditor/widgets/scrollbars/verticalcounter" ) --[[ @ 0]]

CoD.LeaguePlayLeaderboard = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.LeaguePlayLeaderboard.__defaultWidth = 1920 --[[ @ 0]]
CoD.LeaguePlayLeaderboard.__defaultHeight = 1080 --[[ @ 0]]
CoD.LeaguePlayLeaderboard.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	CoD.ArenaUtility.InitLadderListLoadedModel( f1_arg1 ) --[[ @ 0]]
	self:setClass( CoD.LeaguePlayLeaderboard ) --[[ @ 0]]
	self.id = "LeaguePlayLeaderboard" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local ErrorText = LUI.UIText.new( 0, 0, 544, 1344, 0, 0, 521.5, 558.5 ) --[[ @ 0]]
	ErrorText:setAlpha( 0 ) --[[ @ 0]]
	ErrorText:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_1354A89EC41ABE97" ) ) --[[ @ 0]]
	ErrorText:setTTF( "default" ) --[[ @ 0]]
	ErrorText:setAlignment( Enum[@"LUIAlignment"][@"hash_1FEEB12BCB0D7041"] ) --[[ @ 0]]
	ErrorText:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	self:addElement( ErrorText ) --[[ @ 0]]
	self.ErrorText = ErrorText --[[ @ 0]]
	
	local LeaderboardEntries = LUI.UIList.new( f1_arg0, f1_arg1, 13, 0, nil, false, false, false, false ) --[[ @ 0]]
	LeaderboardEntries:setLeftRight( 0, 0, 286, 1184 ) --[[ @ 0]]
	LeaderboardEntries:setTopBottom( 0, 0, 306, 903 ) --[[ @ 0]]
	LeaderboardEntries:setWidgetType( CoD.LeaguePlayLeaderboardEntry ) --[[ @ 0]]
	LeaderboardEntries:setVerticalCount( 10 ) --[[ @ 0]]
	LeaderboardEntries:setSpacing( 13 ) --[[ @ 0]]
	LeaderboardEntries:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	LeaderboardEntries:setVerticalCounter( CoD.verticalCounter ) --[[ @ 0]]
	LeaderboardEntries:setDataSource( "LeaguePlayLadderMemberList" ) --[[ @ 0]]
	LeaderboardEntries:subscribeToGlobalModel( f1_arg1, "LeaguePlayLadderMemberList", "allXuidInfoLoaded", function ( model )
		local f2_local0 = LeaderboardEntries --[[ @ 0]]
		CoD.ArenaLeaguePlayUtility.UpdateLadderListMemberRubyCount( self, f2_local0 ) --[[ @ 0]]
		CoD.ArenaLeaguePlayUtility.UpdateLadderListCurrentPlayerFocus( self, f2_local0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( LeaderboardEntries ) --[[ @ 0]]
	self.LeaderboardEntries = LeaderboardEntries --[[ @ 0]]
	
	local RankPointsTitle = LUI.UIText.new( 0, 0, 855, 1005, 0, 0, 286, 301 ) --[[ @ 0]]
	RankPointsTitle:setRGB( 0.92, 0.92, 0.92 ) --[[ @ 0]]
	RankPointsTitle:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_21275B8C997A0D5E" ) ) --[[ @ 0]]
	RankPointsTitle:setTTF( "0arame_mono_stencil" ) --[[ @ 0]]
	RankPointsTitle:setAlignment( Enum[@"LUIAlignment"][@"hash_1FEEB12BCB0D7041"] ) --[[ @ 0]]
	RankPointsTitle:setAlignment( Enum[@"LUIAlignment"][@"hash_670510683C22104B"] ) --[[ @ 0]]
	self:addElement( RankPointsTitle ) --[[ @ 0]]
	self.RankPointsTitle = RankPointsTitle --[[ @ 0]]
	
	local GemReward = LUI.UIText.new( 0, 0, 1019, 1169, 0, 0, 286, 301 ) --[[ @ 0]]
	GemReward:setRGB( 0.92, 0.92, 0.92 ) --[[ @ 0]]
	GemReward:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_7A8731E3BA139AF" ) ) --[[ @ 0]]
	GemReward:setTTF( "0arame_mono_stencil" ) --[[ @ 0]]
	GemReward:setAlignment( Enum[@"LUIAlignment"][@"hash_1FEEB12BCB0D7041"] ) --[[ @ 0]]
	GemReward:setAlignment( Enum[@"LUIAlignment"][@"hash_670510683C22104B"] ) --[[ @ 0]]
	self:addElement( GemReward ) --[[ @ 0]]
	self.GemReward = GemReward --[[ @ 0]]
	
	local RankTitle = LUI.UIText.new( 0, 0, 250, 410, 0, 0, 286, 301 ) --[[ @ 0]]
	RankTitle:setRGB( 0.92, 0.92, 0.92 ) --[[ @ 0]]
	RankTitle:setText( LocalizeToUpperString( @"hash_49C509B807FDA37" ) ) --[[ @ 0]]
	RankTitle:setTTF( "0arame_mono_stencil" ) --[[ @ 0]]
	RankTitle:setAlignment( Enum[@"LUIAlignment"][@"hash_1FEEB12BCB0D7041"] ) --[[ @ 0]]
	RankTitle:setAlignment( Enum[@"LUIAlignment"][@"hash_670510683C22104B"] ) --[[ @ 0]]
	self:addElement( RankTitle ) --[[ @ 0]]
	self.RankTitle = RankTitle --[[ @ 0]]
	
	local topline5 = LUI.UIImage.new( 0, 0, 1004, 1184, 0, 0, 303, 306 ) --[[ @ 0]]
	topline5:setRGB( 0.92, 0.89, 0.72 ) --[[ @ 0]]
	topline5:setAlpha( 0.05 ) --[[ @ 0]]
	self:addElement( topline5 ) --[[ @ 0]]
	self.topline5 = topline5 --[[ @ 0]]
	
	local topline4 = LUI.UIImage.new( 0, 0, 864, 996, 0, 0, 303, 306 ) --[[ @ 0]]
	topline4:setRGB( ColorSet.T8__BIEGE.r, ColorSet.T8__BIEGE.g, ColorSet.T8__BIEGE.b ) --[[ @ 0]]
	topline4:setAlpha( 0.05 ) --[[ @ 0]]
	self:addElement( topline4 ) --[[ @ 0]]
	self.topline4 = topline4 --[[ @ 0]]
	
	local topline3 = LUI.UIImage.new( 0, 0, 438, 856, 0, 0, 303, 306 ) --[[ @ 0]]
	topline3:setRGB( ColorSet.T8__BIEGE.r, ColorSet.T8__BIEGE.g, ColorSet.T8__BIEGE.b ) --[[ @ 0]]
	topline3:setAlpha( 0.05 ) --[[ @ 0]]
	self:addElement( topline3 ) --[[ @ 0]]
	self.topline3 = topline3 --[[ @ 0]]
	
	local topline2 = LUI.UIImage.new( 0, 0, 382, 430, 0, 0, 303, 306 ) --[[ @ 0]]
	topline2:setRGB( 0.92, 0.89, 0.72 ) --[[ @ 0]]
	topline2:setAlpha( 0.05 ) --[[ @ 0]]
	self:addElement( topline2 ) --[[ @ 0]]
	self.topline2 = topline2 --[[ @ 0]]
	
	local topline1 = LUI.UIImage.new( 0, 0, 286, 374, 0, 0, 303, 306 ) --[[ @ 0]]
	topline1:setRGB( ColorSet.T8__BIEGE.r, ColorSet.T8__BIEGE.g, ColorSet.T8__BIEGE.b ) --[[ @ 0]]
	topline1:setAlpha( 0.05 ) --[[ @ 0]]
	self:addElement( topline1 ) --[[ @ 0]]
	self.topline1 = topline1 --[[ @ 0]]
	
	local RefreshingLabel = LUI.UIText.new( 0, 0, 704, 1184, 0, 0, 178, 203 ) --[[ @ 0]]
	RefreshingLabel:setRGB( ColorSet.T8__DARK__GOLD.r, ColorSet.T8__DARK__GOLD.g, ColorSet.T8__DARK__GOLD.b ) --[[ @ 0]]
	RefreshingLabel:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_274560BEAFB9F4D1" ) ) --[[ @ 0]]
	RefreshingLabel:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	RefreshingLabel:setAlignment( Enum[@"LUIAlignment"][@"hash_3830CFD395E6AA0A"] ) --[[ @ 0]]
	RefreshingLabel:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	self:addElement( RefreshingLabel ) --[[ @ 0]]
	self.RefreshingLabel = RefreshingLabel --[[ @ 0]]
	
	local ArenaLeaguePlayLadderSkillDivision = CoD.ArenaLeaguePlay_LadderSkillDivision.new( f1_arg0, f1_arg1, 0, 0, 283, 1181, 0, 0, 120, 216 ) --[[ @ 0]]
	self:addElement( ArenaLeaguePlayLadderSkillDivision ) --[[ @ 0]]
	self.ArenaLeaguePlayLadderSkillDivision = ArenaLeaguePlayLadderSkillDivision --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "DailyBonusAvailable",
			condition = function ( menu, element, event )
				local f3_local0 = CoD.ArenaUtility.CurrentArenaEventTypeEquals( self, Enum[@"hash_6C0EA92D04BC003B"][@"hash_5C32571741C5B730"] ) --[[ @ 0]]
				if f3_local0 then
					f3_local0 = CoD.ArenaLeaguePlayUtility.HasOneMatchPlayed( self, f1_arg1 ) --[[ @ 0]]
					if f3_local0 then
						f3_local0 = not CoD.ArenaUtility.IsDailyPoolRemainingCompleteTimer( self, f1_arg1, element ) --[[ @ 0]]
					end
				end
				return f3_local0
			end
		},
		{
			stateName = "Error",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalDataSourceModelValueEqualTo( f1_arg1, "LeaguePlayLadderMemberList", "allXuidInfoLoaded", true ) and CoD.ModelUtility.IsGlobalDataSourceModelValueNil( f1_arg1, "LeaguePlayLadder", "leagueNameCode" )
			end
		}
	} ) --[[ @ 0]]
	local f1_local13 = self --[[ @ 0]]
	local f1_local14 = self.subscribeToModel --[[ @ 0]]
	local f1_local15 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local14( f1_local13, f1_local15["lobbyPlaylist.name"], function ( f5_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f5_arg0:get(),
			modelName = "lobbyPlaylist.name"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local13 = self --[[ @ 0]]
	f1_local14 = self.subscribeToModel --[[ @ 0]]
	f1_local15 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local14( f1_local13, f1_local15["lobbyRoot.lobbyNav"], function ( f6_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f6_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local13 = self --[[ @ 0]]
	f1_local14 = self.subscribeToModel --[[ @ 0]]
	f1_local15 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local14( f1_local13, f1_local15["LeaguePlayLadder.entityLadderRank"], function ( f7_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f7_arg0:get(),
			modelName = "LeaguePlayLadder.entityLadderRank"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local13 = self --[[ @ 0]]
	f1_local14 = self.subscribeToModel --[[ @ 0]]
	f1_local15 = DataSources.LeaguePlayLadderMemberList.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local14( f1_local13, f1_local15.allXuidInfoLoaded, function ( f8_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f8_arg0:get(),
			modelName = "allXuidInfoLoaded"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local13 = self --[[ @ 0]]
	f1_local14 = self.subscribeToModel --[[ @ 0]]
	f1_local15 = DataSources.LeaguePlayLadder.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local14( f1_local13, f1_local15.leagueNameCode, function ( f9_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f9_arg0:get(),
			modelName = "leagueNameCode"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:subscribeToGlobalModel( f1_arg1, "GlobalModel", "LeaguePlayLadderMemberList.loaded", function ( model )
		local f10_local0 = self --[[ @ 0]]
		if CoD.ModelUtility.IsGlobalModelValueGreaterThan( "LeaguePlayLadderMemberList.loaded", 0 ) then
			SetAlpha( self.RefreshingLabel, 0 ) --[[ @ 0]]
			CoD.ArenaLeaguePlayUtility.ForceLadderPlayerArrows( self.LeaderboardEntries, f1_arg1 ) --[[ @ 0]]
		elseif CoD.ModelUtility.IsGlobalModelValueEqualTo( "LeaguePlayLadderMemberList.loaded", 0 ) then
			SetAlpha( self.RefreshingLabel, 100 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	LeaderboardEntries.id = "LeaderboardEntries" --[[ @ 0]]
	self.__defaultFocus = LeaderboardEntries --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.LeaguePlayLeaderboard.__resetProperties = function ( f11_arg0 )
	f11_arg0.LeaderboardEntries:completeAnimation() --[[ @ 0]]
	f11_arg0.RankTitle:completeAnimation() --[[ @ 0]]
	f11_arg0.RankPointsTitle:completeAnimation() --[[ @ 0]]
	f11_arg0.GemReward:completeAnimation() --[[ @ 0]]
	f11_arg0.ErrorText:completeAnimation() --[[ @ 0]]
	f11_arg0.topline1:completeAnimation() --[[ @ 0]]
	f11_arg0.topline2:completeAnimation() --[[ @ 0]]
	f11_arg0.topline3:completeAnimation() --[[ @ 0]]
	f11_arg0.topline4:completeAnimation() --[[ @ 0]]
	f11_arg0.topline5:completeAnimation() --[[ @ 0]]
	f11_arg0.LeaderboardEntries:setAlpha( 1 ) --[[ @ 0]]
	f11_arg0.RankTitle:setAlpha( 1 ) --[[ @ 0]]
	f11_arg0.RankPointsTitle:setAlpha( 1 ) --[[ @ 0]]
	f11_arg0.GemReward:setAlpha( 1 ) --[[ @ 0]]
	f11_arg0.ErrorText:setAlpha( 0 ) --[[ @ 0]]
	f11_arg0.topline1:setAlpha( 0.05 ) --[[ @ 0]]
	f11_arg0.topline2:setAlpha( 0.05 ) --[[ @ 0]]
	f11_arg0.topline3:setAlpha( 0.05 ) --[[ @ 0]]
	f11_arg0.topline4:setAlpha( 0.05 ) --[[ @ 0]]
	f11_arg0.topline5:setAlpha( 0.05 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.LeaguePlayLeaderboard.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f12_arg0, f12_arg1 )
			f12_arg0:__resetProperties() --[[ @ 0]]
			f12_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	DailyBonusAvailable = {
		DefaultClip = function ( f13_arg0, f13_arg1 )
			f13_arg0:__resetProperties() --[[ @ 0]]
			f13_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	Error = {
		DefaultClip = function ( f14_arg0, f14_arg1 )
			f14_arg0:__resetProperties() --[[ @ 0]]
			f14_arg0:setupElementClipCounter( 10 ) --[[ @ 0]]
			f14_arg0.ErrorText:completeAnimation() --[[ @ 0]]
			f14_arg0.ErrorText:setAlpha( 1 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.ErrorText ) --[[ @ 0]]
			f14_arg0.LeaderboardEntries:completeAnimation() --[[ @ 0]]
			f14_arg0.LeaderboardEntries:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.LeaderboardEntries ) --[[ @ 0]]
			f14_arg0.RankPointsTitle:completeAnimation() --[[ @ 0]]
			f14_arg0.RankPointsTitle:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.RankPointsTitle ) --[[ @ 0]]
			f14_arg0.GemReward:completeAnimation() --[[ @ 0]]
			f14_arg0.GemReward:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.GemReward ) --[[ @ 0]]
			f14_arg0.RankTitle:completeAnimation() --[[ @ 0]]
			f14_arg0.RankTitle:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.RankTitle ) --[[ @ 0]]
			f14_arg0.topline5:completeAnimation() --[[ @ 0]]
			f14_arg0.topline5:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.topline5 ) --[[ @ 0]]
			f14_arg0.topline4:completeAnimation() --[[ @ 0]]
			f14_arg0.topline4:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.topline4 ) --[[ @ 0]]
			f14_arg0.topline3:completeAnimation() --[[ @ 0]]
			f14_arg0.topline3:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.topline3 ) --[[ @ 0]]
			f14_arg0.topline2:completeAnimation() --[[ @ 0]]
			f14_arg0.topline2:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.topline2 ) --[[ @ 0]]
			f14_arg0.topline1:completeAnimation() --[[ @ 0]]
			f14_arg0.topline1:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.topline1 ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.LeaguePlayLeaderboard.__onClose = function ( f15_arg0 )
	f15_arg0.LeaderboardEntries:close() --[[ @ 0]]
	f15_arg0.ArenaLeaguePlayLadderSkillDivision:close() --[[ @ 0]]
end
 --[[ @ 0]]
