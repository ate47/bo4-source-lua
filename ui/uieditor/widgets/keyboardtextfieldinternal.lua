-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:51
require( "x64:5c1c051c71207acb" ) --[[ @ 0]]
require( "ui/uieditor/widgets/common/commonlistbuttongenericshort" ) --[[ @ 0]]

CoD.KeyboardTextFieldInternal = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.KeyboardTextFieldInternal.__defaultWidth = 672 --[[ @ 0]]
CoD.KeyboardTextFieldInternal.__defaultHeight = 384 --[[ @ 0]]
CoD.KeyboardTextFieldInternal.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.KeyboardTextFieldInternal ) --[[ @ 0]]
	self.id = "KeyboardTextFieldInternal" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local popupBG = LUI.UIImage.new( 0, 1, -76, 0, 0, 1, -67, -37 ) --[[ @ 0]]
	popupBG:setRGB( 0, 0, 0 ) --[[ @ 0]]
	popupBG:setAlpha( 0 ) --[[ @ 0]]
	popupBG:setImage( RegisterImage( @"menu_mp_popup_bg" ) ) --[[ @ 0]]
	self:addElement( popupBG ) --[[ @ 0]]
	self.popupBG = popupBG --[[ @ 0]]
	
	local bottomFade = LUI.UIImage.new( 0, 1, 0, 0, 1, 1, -141, -45 ) --[[ @ 0]]
	bottomFade:setXRot( 180 ) --[[ @ 0]]
	bottomFade:setImage( RegisterImage( @"dots_top_bottom_fade" ) ) --[[ @ 0]]
	self:addElement( bottomFade ) --[[ @ 0]]
	self.bottomFade = bottomFade --[[ @ 0]]
	
	local middleTile = LUI.UIImage.new( 0, 1, 0, 0, 0, 0, 96, 288 ) --[[ @ 0]]
	middleTile:setImage( RegisterImage( @"dots_middle_repeat" ) ) --[[ @ 0]]
	middleTile:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_tile_scroll_normal" ) ) --[[ @ 0]]
	middleTile:setShaderVector( 0, 1, 32, 0, 0 ) --[[ @ 0]]
	middleTile:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( middleTile ) --[[ @ 0]]
	self.middleTile = middleTile --[[ @ 0]]
	
	local topFade = LUI.UIImage.new( 0, 1, 0, 0, 0, 0, 0, 96 ) --[[ @ 0]]
	topFade:setImage( RegisterImage( @"dots_top_bottom_fade" ) ) --[[ @ 0]]
	self:addElement( topFade ) --[[ @ 0]]
	self.topFade = topFade --[[ @ 0]]
	
	local bottomPart = LUI.UIImage.new( 0, 1, 0, 0, 1, 1, -24, 0 ) --[[ @ 0]]
	bottomPart:setImage( RegisterImage( @"popup_bottom" ) ) --[[ @ 0]]
	self:addElement( bottomPart ) --[[ @ 0]]
	self.bottomPart = bottomPart --[[ @ 0]]
	
	local middleStretch = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 48, -24 ) --[[ @ 0]]
	middleStretch:setImage( RegisterImage( @"popup_stretch" ) ) --[[ @ 0]]
	self:addElement( middleStretch ) --[[ @ 0]]
	self.middleStretch = middleStretch --[[ @ 0]]
	
	local topPart = LUI.UIImage.new( 0, 1, 0, 0, 0, 0, 0, 48 ) --[[ @ 0]]
	topPart:setImage( RegisterImage( @"popup_top" ) ) --[[ @ 0]]
	self:addElement( topPart ) --[[ @ 0]]
	self.topPart = topPart --[[ @ 0]]
	
	local header = LUI.UIText.new( 0, 1, 24, -24, 0, 0, 0, 72 ) --[[ @ 0]]
	header:setText( "" ) --[[ @ 0]]
	header:setTTF( "default" ) --[[ @ 0]]
	header:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	header:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	self:addElement( header ) --[[ @ 0]]
	self.header = header --[[ @ 0]]
	
	local inputContainer = CoD.KeyboardTextFieldInputContainer.new( f1_arg0, f1_arg1, 0, 1, 24, -24, 0, 0, 120, 192 ) --[[ @ 0]]
	self:addElement( inputContainer ) --[[ @ 0]]
	self.inputContainer = inputContainer --[[ @ 0]]
	
	local f1_local10 = nil --[[ @ 0]]
	self.confirmButton = LUI.UIElement.createFake() --[[ @ 0]]
	local f1_local11 = nil --[[ @ 0]]
	self.cancelButton = LUI.UIElement.createFake() --[[ @ 0]]
	local f1_local12 = nil --[[ @ 0]]
	
	local options = LUI.UIList.new( f1_arg0, f1_arg1, 10, 0, nil, true, false, false, false ) --[[ @ 0]]
	options:setLeftRight( 0, 0, 126, 546 ) --[[ @ 0]]
	options:setTopBottom( 1, 1, -117.5, -74.5 ) --[[ @ 0]]
	options:setWidgetType( CoD.CommonListButtonGenericShort ) --[[ @ 0]]
	options:setHorizontalCount( 2 ) --[[ @ 0]]
	options:setSpacing( 10 ) --[[ @ 0]]
	options:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	options:setDataSource( "ClanTagPromptList" ) --[[ @ 0]]
	options:linkToElementModel( options, "disabled", true, function ( model, f2_arg1 )
		CoD.Menu.UpdateButtonShownState( f2_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_none"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	options:registerEventHandler( "gain_focus", function ( element, event )
		local f3_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f3_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f3_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_none"] ) --[[ @ 0]]
		return f3_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( options, f1_arg1, Enum[@"luibutton"][@"lui_key_none"], "MOUSE1", function ( element, menu, controller, model )
		if not IsDisabled( element, controller ) then
			ProcessListAction( self, element, controller, menu ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsDisabled( element, controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_none"], @"menu/select", nil, "MOUSE1" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( options ) --[[ @ 0]]
	self.options = options --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Campaign",
			condition = function ( menu, element, event )
				return IsCampaign()
			end
		}
	} ) --[[ @ 0]]
	local f1_local14 = self --[[ @ 0]]
	local f1_local15 = self.subscribeToModel --[[ @ 0]]
	local f1_local16 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local15( f1_local14, f1_local16["lobbyRoot.lobbyNav"], function ( f7_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f7_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	options.id = "options" --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	f1_local15 = self --[[ @ 0]]
	CoD.PCUtility.KeyboardTextFieldFunctionality( self, f1_arg1 ) --[[ @ 0]]
	return self
end
 --[[ @ 0]]
CoD.KeyboardTextFieldInternal.__resetProperties = function ( f8_arg0 )
	f8_arg0.popupBG:completeAnimation() --[[ @ 0]]
	f8_arg0.bottomFade:completeAnimation() --[[ @ 0]]
	f8_arg0.middleTile:completeAnimation() --[[ @ 0]]
	f8_arg0.topFade:completeAnimation() --[[ @ 0]]
	f8_arg0.middleStretch:completeAnimation() --[[ @ 0]]
	f8_arg0.topPart:completeAnimation() --[[ @ 0]]
	f8_arg0.bottomPart:completeAnimation() --[[ @ 0]]
	f8_arg0.popupBG:setAlpha( 0 ) --[[ @ 0]]
	f8_arg0.bottomFade:setAlpha( 1 ) --[[ @ 0]]
	f8_arg0.middleTile:setAlpha( 1 ) --[[ @ 0]]
	f8_arg0.topFade:setAlpha( 1 ) --[[ @ 0]]
	f8_arg0.middleStretch:setAlpha( 1 ) --[[ @ 0]]
	f8_arg0.topPart:setAlpha( 1 ) --[[ @ 0]]
	f8_arg0.bottomPart:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.KeyboardTextFieldInternal.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f9_arg0, f9_arg1 )
			f9_arg0:__resetProperties() --[[ @ 0]]
			f9_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	Campaign = {
		DefaultClip = function ( f10_arg0, f10_arg1 )
			f10_arg0:__resetProperties() --[[ @ 0]]
			f10_arg0:setupElementClipCounter( 7 ) --[[ @ 0]]
			f10_arg0.popupBG:completeAnimation() --[[ @ 0]]
			f10_arg0.popupBG:setAlpha( 0.9 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.popupBG ) --[[ @ 0]]
			f10_arg0.bottomFade:completeAnimation() --[[ @ 0]]
			f10_arg0.bottomFade:setAlpha( 0 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.bottomFade ) --[[ @ 0]]
			f10_arg0.middleTile:completeAnimation() --[[ @ 0]]
			f10_arg0.middleTile:setAlpha( 0 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.middleTile ) --[[ @ 0]]
			f10_arg0.topFade:completeAnimation() --[[ @ 0]]
			f10_arg0.topFade:setAlpha( 0 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.topFade ) --[[ @ 0]]
			f10_arg0.bottomPart:completeAnimation() --[[ @ 0]]
			f10_arg0.bottomPart:setAlpha( 0 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.bottomPart ) --[[ @ 0]]
			f10_arg0.middleStretch:completeAnimation() --[[ @ 0]]
			f10_arg0.middleStretch:setAlpha( 0 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.middleStretch ) --[[ @ 0]]
			f10_arg0.topPart:completeAnimation() --[[ @ 0]]
			f10_arg0.topPart:setAlpha( 0 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.topPart ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.KeyboardTextFieldInternal.__onClose = function ( f11_arg0 )
	f11_arg0.inputContainer:close() --[[ @ 0]]
	f11_arg0.confirmButton:close() --[[ @ 0]]
	f11_arg0.cancelButton:close() --[[ @ 0]]
	f11_arg0.options:close() --[[ @ 0]]
end
 --[[ @ 0]]
