-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:51
require( "ui/uieditor/widgets/social/joinbuttonprompt" ) --[[ @ 0]]

CoD.ScoreboardButtonPrompts = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.ScoreboardButtonPrompts.__defaultWidth = 256 --[[ @ 0]]
CoD.ScoreboardButtonPrompts.__defaultHeight = 89 --[[ @ 0]]
CoD.ScoreboardButtonPrompts.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	CoD.BaseUtility.InitControllerModelIfNotSet( f1_arg1, "scoreboardInfo.muteButtonPromptVisible", false ) --[[ @ 0]]
	self:setClass( CoD.ScoreboardButtonPrompts ) --[[ @ 0]]
	self.id = "ScoreboardButtonPrompts" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local mutePrompt = CoD.JoinButtonPrompt.new( f1_arg0, f1_arg1, 0, 0, 0, 39, 0, 0, 25, 64 ) --[[ @ 0]]
	mutePrompt.KMprompt:setText( CoD.BaseUtility.AlreadyLocalized( "J" ) ) --[[ @ 0]]
	mutePrompt:subscribeToGlobalModel( f1_arg1, "Controller", "primary_button_image", function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			mutePrompt.GpadButtonImage:setImage( RegisterImage( f2_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( mutePrompt ) --[[ @ 0]]
	self.mutePrompt = mutePrompt --[[ @ 0]]
	
	local muteText = LUI.UIText.new( 0, 0, 56, 256, 0, 0, 27, 64 ) --[[ @ 0]]
	muteText:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	muteText:setTTF( "default" ) --[[ @ 0]]
	muteText:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	muteText:subscribeToGlobalModel( f1_arg1, "Scoreboard", "muteButtonPromptText", function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			muteText:setText( Engine[@"hash_4F9F1239CFD921FE"]( f3_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( muteText ) --[[ @ 0]]
	self.muteText = muteText --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "PC",
			condition = function ( menu, element, event )
				return IsPC()
			end
		},
		{
			stateName = "NotMutable",
			condition = function ( menu, element, event )
				return ScoreboardMuteButtonPromptHidden( element, f1_arg1 )
			end
		}
	} ) --[[ @ 0]]
	local f1_local3 = self --[[ @ 0]]
	local f1_local4 = self.subscribeToModel --[[ @ 0]]
	local f1_local5 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local4( f1_local3, f1_local5["scoreboardInfo.muteButtonPromptVisible"], function ( f6_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f6_arg0:get(),
			modelName = "scoreboardInfo.muteButtonPromptVisible"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local3 = self --[[ @ 0]]
	f1_local4 = self.subscribeToModel --[[ @ 0]]
	f1_local5 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local4( f1_local3, f1_local5.forceScoreboard, function ( f7_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f7_arg0:get(),
			modelName = "forceScoreboard"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.ScoreboardButtonPrompts.__resetProperties = function ( f8_arg0 )
	f8_arg0.muteText:completeAnimation() --[[ @ 0]]
	f8_arg0.mutePrompt:completeAnimation() --[[ @ 0]]
	f8_arg0.muteText:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	f8_arg0.muteText:setAlpha( 1 ) --[[ @ 0]]
	f8_arg0.mutePrompt:setRGB( 1, 1, 1 ) --[[ @ 0]]
	f8_arg0.mutePrompt:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ScoreboardButtonPrompts.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f9_arg0, f9_arg1 )
			f9_arg0:__resetProperties() --[[ @ 0]]
			f9_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	PC = {
		DefaultClip = function ( f10_arg0, f10_arg1 )
			f10_arg0:__resetProperties() --[[ @ 0]]
			f10_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f10_arg0.mutePrompt:completeAnimation() --[[ @ 0]]
			f10_arg0.mutePrompt:setAlpha( 0 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.mutePrompt ) --[[ @ 0]]
			f10_arg0.muteText:completeAnimation() --[[ @ 0]]
			f10_arg0.muteText:setAlpha( 0 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.muteText ) --[[ @ 0]]
		end
	},
	NotMutable = {
		DefaultClip = function ( f11_arg0, f11_arg1 )
			f11_arg0:__resetProperties() --[[ @ 0]]
			f11_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f11_arg0.mutePrompt:completeAnimation() --[[ @ 0]]
			f11_arg0.mutePrompt:setRGB( ColorSet.Disabled.r, ColorSet.Disabled.g, ColorSet.Disabled.b ) --[[ @ 0]]
			f11_arg0.mutePrompt:setAlpha( 0 ) --[[ @ 0]]
			f11_arg0.clipFinished( f11_arg0.mutePrompt ) --[[ @ 0]]
			f11_arg0.muteText:completeAnimation() --[[ @ 0]]
			f11_arg0.muteText:setRGB( ColorSet.Disabled.r, ColorSet.Disabled.g, ColorSet.Disabled.b ) --[[ @ 0]]
			f11_arg0.muteText:setAlpha( 0 ) --[[ @ 0]]
			f11_arg0.clipFinished( f11_arg0.muteText ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.ScoreboardButtonPrompts.__onClose = function ( f12_arg0 )
	f12_arg0.mutePrompt:close() --[[ @ 0]]
	f12_arg0.muteText:close() --[[ @ 0]]
end
 --[[ @ 0]]
