-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:51
require( "ui/uieditor/widgets/social/social_options_slidernarrowbutton" ) --[[ @ 0]]
require( "ui/uieditor/widgets/startmenu/options/flyout/startmenu_options_settingsliderlist" ) --[[ @ 0]]
require( "ui/uieditor/widgets/startmenu/options/startmenuoptionsmaincorners" ) --[[ @ 0]]
require( "ui/uieditor/widgets/startmenu/options/startmenuoptionsmainframe" ) --[[ @ 0]]

CoD.Social_Options_SliderNarrow = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.Social_Options_SliderNarrow.__defaultWidth = 530 --[[ @ 0]]
CoD.Social_Options_SliderNarrow.__defaultHeight = 60 --[[ @ 0]]
CoD.Social_Options_SliderNarrow.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.Social_Options_SliderNarrow ) --[[ @ 0]]
	self.id = "Social_Options_SliderNarrow" --[[ @ 0]]
	self.soundSet = "ChooseDecal" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local LabelBacking = LUI.UIImage.new( 0, 0, 0, 202, 0, 0, -1, 54 ) --[[ @ 0]]
	LabelBacking:setRGB( 0.13, 0.12, 0.12 ) --[[ @ 0]]
	LabelBacking:setAlpha( 0.5 ) --[[ @ 0]]
	self:addElement( LabelBacking ) --[[ @ 0]]
	self.LabelBacking = LabelBacking --[[ @ 0]]
	
	local Frame = CoD.StartMenuOptionsMainFrame.new( f1_arg0, f1_arg1, 0, 0, 0, 202, 0, 0, 7, 51 ) --[[ @ 0]]
	Frame:setAlpha( 0.01 ) --[[ @ 0]]
	self:addElement( Frame ) --[[ @ 0]]
	self.Frame = Frame --[[ @ 0]]
	
	local Corner = CoD.StartMenuOptionsMainCorners.new( f1_arg0, f1_arg1, 0, 0, 0, 202, 0, 0, 7, 51 ) --[[ @ 0]]
	Corner:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( Corner ) --[[ @ 0]]
	self.Corner = Corner --[[ @ 0]]
	
	local SettingLabel = LUI.UIText.new( 0, 0, 11.5, 193.5, 0, 0, 20.5, 39.5 ) --[[ @ 0]]
	SettingLabel:setRGB( 0.78, 0.74, 0.67 ) --[[ @ 0]]
	SettingLabel:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	SettingLabel:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	SettingLabel:setAlignment( Enum[@"luialignment"][@"lui_alignment_middle"] ) --[[ @ 0]]
	SettingLabel:linkToElementModel( self, "name", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			SettingLabel:setText( Engine[@"hash_4F9F1239CFD921FE"]( f2_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( SettingLabel ) --[[ @ 0]]
	self.SettingLabel = SettingLabel --[[ @ 0]]
	
	local SettingsList = LUI.UIList.new( f1_arg0, f1_arg1, 2, 0, nil, false, false, false, false ) --[[ @ 0]]
	SettingsList:mergeStateConditions( {
		{
			stateName = "Custom",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		}
	} ) --[[ @ 0]]
	SettingsList:setLeftRight( 0, 0, 202, 526 ) --[[ @ 0]]
	SettingsList:setTopBottom( 0, 0, -1, 59 ) --[[ @ 0]]
	SettingsList:setWidgetType( CoD.StartMenu_Options_SettingSliderList ) --[[ @ 0]]
	SettingsList:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	SettingsList:linkToElementModel( self, "optionsDatasource", true, function ( model )
		local f4_local0 = model:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			SettingsList:setDataSource( f4_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	SettingsList:registerEventHandler( "list_item_gain_focus", function ( element, event )
		local f5_local0 = nil --[[ @ 0]]
		ProcessListAction( self, element, f1_arg1, f1_arg0 ) --[[ @ 0]]
		return f5_local0
	end ) --[[ @ 0]]
	self:addElement( SettingsList ) --[[ @ 0]]
	self.SettingsList = SettingsList --[[ @ 0]]
	
	local Button = CoD.Social_Options_SliderNarrowButton.new( f1_arg0, f1_arg1, 0, 0, 208.5, 397.5, 0, 0, 7, 51 ) --[[ @ 0]]
	Button:setAlpha( 0 ) --[[ @ 0]]
	Button:linkToElementModel( self, nil, false, function ( model )
		Button:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( Button ) --[[ @ 0]]
	self.Button = Button --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "ButtonOnly",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg1, "buttonOnly" )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "buttonOnly", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "buttonOnly"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	SettingsList.id = "SettingsList" --[[ @ 0]]
	Button.id = "Button" --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PreLoadFunc then
		PreLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	local f1_local7 = self --[[ @ 0]]
	f1_local7 = SettingsList --[[ @ 0]]
	if not IsPC() then
		CoD.GridAndListUtility.AddRightStickSingleItemControl( f1_arg0, f1_local7, f1_arg1 ) --[[ @ 0]]
	end
	return self
end
 --[[ @ 0]]
CoD.Social_Options_SliderNarrow.__resetProperties = function ( f9_arg0 )
	f9_arg0.SettingsList:completeAnimation() --[[ @ 0]]
	f9_arg0.Button:completeAnimation() --[[ @ 0]]
	f9_arg0.SettingsList:setAlpha( 1 ) --[[ @ 0]]
	f9_arg0.Button:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.Social_Options_SliderNarrow.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f10_arg0, f10_arg1 )
			f10_arg0:__resetProperties() --[[ @ 0]]
			f10_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	ButtonOnly = {
		DefaultClip = function ( f11_arg0, f11_arg1 )
			f11_arg0:__resetProperties() --[[ @ 0]]
			f11_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f11_arg0.SettingsList:completeAnimation() --[[ @ 0]]
			f11_arg0.SettingsList:setAlpha( 0 ) --[[ @ 0]]
			f11_arg0.clipFinished( f11_arg0.SettingsList ) --[[ @ 0]]
			f11_arg0.Button:completeAnimation() --[[ @ 0]]
			f11_arg0.Button:setAlpha( 1 ) --[[ @ 0]]
			f11_arg0.clipFinished( f11_arg0.Button ) --[[ @ 0]]
		end,
		ChildFocus = function ( f12_arg0, f12_arg1 )
			f12_arg0:__resetProperties() --[[ @ 0]]
			f12_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f12_arg0.SettingsList:completeAnimation() --[[ @ 0]]
			f12_arg0.SettingsList:setAlpha( 0 ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.SettingsList ) --[[ @ 0]]
			f12_arg0.Button:completeAnimation() --[[ @ 0]]
			f12_arg0.Button:setAlpha( 1 ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.Button ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.Social_Options_SliderNarrow.__onClose = function ( f13_arg0 )
	f13_arg0.Frame:close() --[[ @ 0]]
	f13_arg0.Corner:close() --[[ @ 0]]
	f13_arg0.SettingLabel:close() --[[ @ 0]]
	f13_arg0.SettingsList:close() --[[ @ 0]]
	f13_arg0.Button:close() --[[ @ 0]]
end
 --[[ @ 0]]
