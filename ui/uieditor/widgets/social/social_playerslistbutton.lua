-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:51
require( "ui/uieditor/widgets/director/directorlobbyleader" ) --[[ @ 0]]
require( "ui/uieditor/widgets/onoffvoip" ) --[[ @ 0]]
require( "x64:2f732d1ff8c659ed" ) --[[ @ 0]]
require( "ui/uieditor/menus/social/social_playerdetailspopup" ) --[[ @ 0]]
require( "x64:5aa1b2447c1715a3" ) --[[ @ 0]]

CoD.Social_PlayersListButton = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.Social_PlayersListButton.__defaultWidth = 474 --[[ @ 0]]
CoD.Social_PlayersListButton.__defaultHeight = 40 --[[ @ 0]]
CoD.Social_PlayersListButton.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.Social_PlayersListButton ) --[[ @ 0]]
	self.id = "Social_PlayersListButton" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local ButtonInternal = CoD.Social_PlayersListButtonShared.new( f1_arg0, f1_arg1, 0, 0, -14, 460, 0, 0, 0, 40 ) --[[ @ 0]]
	ButtonInternal:linkToElementModel( self, nil, false, function ( model )
		ButtonInternal:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	ButtonInternal:registerEventHandler( "gain_focus", function ( element, event )
		local f3_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f3_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f3_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		return f3_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( ButtonInternal, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"], "ui_confirm", function ( element, menu, controller, model )
		if IsPC() then
			SetCurrentElementAsActive( self, self, controller ) --[[ @ 0]]
			CopyModelFindElement( menu, controller, element, "playerInfo" ) --[[ @ 0]]
			CacheSocialOnlinePlayersListModels( self, self, controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsPC() then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"hash_0", nil, "ui_confirm" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( ButtonInternal ) --[[ @ 0]]
	self.ButtonInternal = ButtonInternal --[[ @ 0]]
	
	local VoipWaves = CoD.OnOffVoip.new( f1_arg0, f1_arg1, 0, 0, -30, 9, 0, 0, 11.5, 27.5 ) --[[ @ 0]]
	VoipWaves:setAlpha( 0 ) --[[ @ 0]]
	VoipWaves:setZRot( 90 ) --[[ @ 0]]
	VoipWaves:linkToElementModel( self, "info", true, function ( model )
		local f6_local0 = model:get() --[[ @ 0]]
		if f6_local0 ~= nil then
			VoipWaves:setModel( f6_local0, f1_arg1 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( VoipWaves ) --[[ @ 0]]
	self.VoipWaves = VoipWaves --[[ @ 0]]
	
	local LeaderBacking = CoD.DirectorLobbyLeader.new( f1_arg0, f1_arg1, 0, 0, 0, 9, 0, 0, 0, 40 ) --[[ @ 0]]
	LeaderBacking:linkToElementModel( self, nil, false, function ( model )
		LeaderBacking:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( LeaderBacking ) --[[ @ 0]]
	self.LeaderBacking = LeaderBacking --[[ @ 0]]
	
	local PartyBar = LUI.UIImage.new( 0, 0, 477, 482, 0, 1, 0, 0 ) --[[ @ 0]]
	PartyBar:setRGB( 0.35, 0.35, 0.35 ) --[[ @ 0]]
	self:addElement( PartyBar ) --[[ @ 0]]
	self.PartyBar = PartyBar --[[ @ 0]]
	
	local BarPixelGridTiledBacking = LUI.UIImage.new( 0, 0, 477, 482, 0.31, 0.31, -12.5, 27.5 ) --[[ @ 0]]
	BarPixelGridTiledBacking:setAlpha( 0.4 ) --[[ @ 0]]
	BarPixelGridTiledBacking:setImage( RegisterImage( @"uie_ui_hud_notifications_pixelpattern" ) ) --[[ @ 0]]
	BarPixelGridTiledBacking:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_16CBE95C250C6D15" ) ) --[[ @ 0]]
	BarPixelGridTiledBacking:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	BarPixelGridTiledBacking:setupNineSliceShader( 128, 128 ) --[[ @ 0]]
	self:addElement( BarPixelGridTiledBacking ) --[[ @ 0]]
	self.BarPixelGridTiledBacking = BarPixelGridTiledBacking --[[ @ 0]]
	
	local SocialPlayersListButtonJoinAndInviteButton = nil --[[ @ 0]]
	
	SocialPlayersListButtonJoinAndInviteButton = CoD.Social_PlayersListButton_JoinAndInviteButton.new( f1_arg0, f1_arg1, 0, 0, 442, 477, 0, 0, 1, 38 ) --[[ @ 0]]
	SocialPlayersListButtonJoinAndInviteButton:linkToElementModel( self, nil, false, function ( model )
		SocialPlayersListButtonJoinAndInviteButton:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	SocialPlayersListButtonJoinAndInviteButton:registerEventHandler( "gain_focus", function ( element, event )
		local f9_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f9_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f9_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		return f9_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( SocialPlayersListButtonJoinAndInviteButton, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"], "ui_confirm", function ( element, menu, controller, model )
		if IsElementInState( self.SocialPlayersListButtonJoinAndInviteButton, "Joinable" ) then
			SetControllerModelValue( controller, "PositionDraft.ResetOnCloseCharacterSelection", 1 ) --[[ @ 0]]
			SetSelectedFriendXUID( self, self, controller ) --[[ @ 0]]
			LobbyQuickJoin( menu, self, self, controller, Enum[@"jointype"][@"join_type_friend"], true ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsElementInState( self.SocialPlayersListButtonJoinAndInviteButton, "Joinable" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"hash_0", nil, "ui_confirm" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( SocialPlayersListButtonJoinAndInviteButton ) --[[ @ 0]]
	self.SocialPlayersListButtonJoinAndInviteButton = SocialPlayersListButtonJoinAndInviteButton --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Empty",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualTo( element, f1_arg1, "xuid", Engine[@"stringtoxuiddecimal"]( "0" ) )
			end
		},
		{
			stateName = "PartyFirst",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualToEnum( self, f1_arg1, "partyBarType", CoD.SocialUtility.PartyBarType.FIRST )
			end
		},
		{
			stateName = "PartyMiddle",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualToEnum( self, f1_arg1, "partyBarType", CoD.SocialUtility.PartyBarType.MIDDLE )
			end
		},
		{
			stateName = "PartyLast",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualToEnum( self, f1_arg1, "partyBarType", CoD.SocialUtility.PartyBarType.LAST )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "xuid", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "xuid"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:linkToElementModel( self, "partyBarType", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "partyBarType"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:appendEventHandler( "input_source_changed", function ( f18_arg0, f18_arg1 )
		f18_arg1.menu = f18_arg1.menu or f1_arg0 --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f18_arg0, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xbx_pssquare"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local f1_local7 = self --[[ @ 0]]
	local f1_local8 = self.subscribeToModel --[[ @ 0]]
	local f1_local9 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local8( f1_local7, f1_local9.LastInput, function ( f19_arg0, f19_arg1 )
		CoD.Menu.UpdateButtonShownState( f19_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xbx_pssquare"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = self --[[ @ 0]]
	f1_local8 = self.subscribeToModel --[[ @ 0]]
	f1_local9 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local8( f1_local7, f1_local9["socialRoot.leaderboardsPlayerListActive"], function ( f20_arg0, f20_arg1 )
		CoD.Menu.UpdateButtonShownState( f20_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xbx_pssquare"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( self, f1_arg1, Enum[@"luibutton"][@"lui_key_xbx_pssquare"], nil, function ( element, menu, controller, model )
		if IsPC() and IsGamepad( controller ) and not CoD.ModelUtility.IsGlobalModelValueTrue( "socialRoot.leaderboardsPlayerListActive" ) then
			SetSelectedFriendXUID( self, element, controller ) --[[ @ 0]]
			OpenOverlay( self, "Social_PlayerDetailsPopup", controller, nil ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsPC() and IsGamepad( controller ) and not CoD.ModelUtility.IsGlobalModelValueTrue( "socialRoot.leaderboardsPlayerListActive" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xbx_pssquare"], @"hash_1E0254269ED8FFD3", nil, nil ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	ButtonInternal.id = "ButtonInternal" --[[ @ 0]]
	if CoD.isPC then
		SocialPlayersListButtonJoinAndInviteButton.id = "SocialPlayersListButtonJoinAndInviteButton" --[[ @ 0]]
	end
	self.__defaultFocus = ButtonInternal --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	f1_local8 = self --[[ @ 0]]
	if IsPC() then
		CoD.PCWidgetUtility.SetupRightClickableContextualPlayerMenu( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
		CoD.BaseUtility.CreateControllerModel( f1_arg1, "PositionDraft.ResetOnCloseCharacterSelection" ) --[[ @ 0]]
	end
	return self
end
 --[[ @ 0]]
CoD.Social_PlayersListButton.__resetProperties = function ( f23_arg0 )
	f23_arg0.PartyBar:completeAnimation() --[[ @ 0]]
	f23_arg0.BarPixelGridTiledBacking:completeAnimation() --[[ @ 0]]
	f23_arg0.ButtonInternal:completeAnimation() --[[ @ 0]]
	f23_arg0.VoipWaves:completeAnimation() --[[ @ 0]]
	f23_arg0.LeaderBacking:completeAnimation() --[[ @ 0]]
	f23_arg0.PartyBar:setAlpha( 1 ) --[[ @ 0]]
	f23_arg0.BarPixelGridTiledBacking:setAlpha( 0.4 ) --[[ @ 0]]
	f23_arg0.VoipWaves:setAlpha( 0 ) --[[ @ 0]]
	f23_arg0.LeaderBacking:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.Social_PlayersListButton.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f24_arg0, f24_arg1 )
			f24_arg0:__resetProperties() --[[ @ 0]]
			f24_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f24_arg0.PartyBar:completeAnimation() --[[ @ 0]]
			f24_arg0.PartyBar:setAlpha( 0 ) --[[ @ 0]]
			f24_arg0.clipFinished( f24_arg0.PartyBar ) --[[ @ 0]]
			f24_arg0.BarPixelGridTiledBacking:completeAnimation() --[[ @ 0]]
			f24_arg0.BarPixelGridTiledBacking:setAlpha( 0 ) --[[ @ 0]]
			f24_arg0.clipFinished( f24_arg0.BarPixelGridTiledBacking ) --[[ @ 0]]
		end,
		Active = function ( f25_arg0, f25_arg1 )
			f25_arg0:__resetProperties() --[[ @ 0]]
			f25_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f25_arg0.ButtonInternal:completeAnimation() --[[ @ 0]]
			f25_arg0.ButtonInternal:playClip( "Active" ) --[[ @ 0]]
			f25_arg0.clipFinished( f25_arg0.ButtonInternal ) --[[ @ 0]]
			f25_arg0.PartyBar:completeAnimation() --[[ @ 0]]
			f25_arg0.PartyBar:setAlpha( 0 ) --[[ @ 0]]
			f25_arg0.clipFinished( f25_arg0.PartyBar ) --[[ @ 0]]
			f25_arg0.BarPixelGridTiledBacking:completeAnimation() --[[ @ 0]]
			f25_arg0.BarPixelGridTiledBacking:setAlpha( 0 ) --[[ @ 0]]
			f25_arg0.clipFinished( f25_arg0.BarPixelGridTiledBacking ) --[[ @ 0]]
		end,
		ActiveAndFocus = function ( f26_arg0, f26_arg1 )
			f26_arg0:__resetProperties() --[[ @ 0]]
			f26_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f26_arg0.ButtonInternal:completeAnimation() --[[ @ 0]]
			f26_arg0.ButtonInternal:playClip( "ActiveAndFocus" ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.ButtonInternal ) --[[ @ 0]]
		end
	},
	Empty = {
		DefaultClip = function ( f27_arg0, f27_arg1 )
			f27_arg0:__resetProperties() --[[ @ 0]]
			f27_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f27_arg0.VoipWaves:completeAnimation() --[[ @ 0]]
			f27_arg0.VoipWaves:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.VoipWaves ) --[[ @ 0]]
			f27_arg0.LeaderBacking:completeAnimation() --[[ @ 0]]
			f27_arg0.LeaderBacking:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.LeaderBacking ) --[[ @ 0]]
			f27_arg0.PartyBar:completeAnimation() --[[ @ 0]]
			f27_arg0.PartyBar:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.PartyBar ) --[[ @ 0]]
		end
	},
	PartyFirst = {
		DefaultClip = function ( f28_arg0, f28_arg1 )
			f28_arg0:__resetProperties() --[[ @ 0]]
			f28_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end,
		Active = function ( f29_arg0, f29_arg1 )
			f29_arg0:__resetProperties() --[[ @ 0]]
			f29_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f29_arg0.ButtonInternal:completeAnimation() --[[ @ 0]]
			f29_arg0.ButtonInternal:playClip( "Active" ) --[[ @ 0]]
			f29_arg0.clipFinished( f29_arg0.ButtonInternal ) --[[ @ 0]]
		end,
		ActiveAndFocus = function ( f30_arg0, f30_arg1 )
			f30_arg0:__resetProperties() --[[ @ 0]]
			f30_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f30_arg0.ButtonInternal:completeAnimation() --[[ @ 0]]
			f30_arg0.ButtonInternal:playClip( "ActiveAndFocus" ) --[[ @ 0]]
			f30_arg0.clipFinished( f30_arg0.ButtonInternal ) --[[ @ 0]]
		end
	},
	PartyMiddle = {
		DefaultClip = function ( f31_arg0, f31_arg1 )
			f31_arg0:__resetProperties() --[[ @ 0]]
			f31_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end,
		Active = function ( f32_arg0, f32_arg1 )
			f32_arg0:__resetProperties() --[[ @ 0]]
			f32_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f32_arg0.ButtonInternal:completeAnimation() --[[ @ 0]]
			f32_arg0.ButtonInternal:playClip( "Active" ) --[[ @ 0]]
			f32_arg0.clipFinished( f32_arg0.ButtonInternal ) --[[ @ 0]]
		end,
		ActiveAndFocus = function ( f33_arg0, f33_arg1 )
			f33_arg0:__resetProperties() --[[ @ 0]]
			f33_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f33_arg0.ButtonInternal:completeAnimation() --[[ @ 0]]
			f33_arg0.ButtonInternal:playClip( "ActiveAndFocus" ) --[[ @ 0]]
			f33_arg0.clipFinished( f33_arg0.ButtonInternal ) --[[ @ 0]]
		end
	},
	PartyLast = {
		DefaultClip = function ( f34_arg0, f34_arg1 )
			f34_arg0:__resetProperties() --[[ @ 0]]
			f34_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end,
		ActiveAndFocus = function ( f35_arg0, f35_arg1 )
			f35_arg0:__resetProperties() --[[ @ 0]]
			f35_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f35_arg0.ButtonInternal:completeAnimation() --[[ @ 0]]
			f35_arg0.ButtonInternal:playClip( "ActiveAndFocus" ) --[[ @ 0]]
			f35_arg0.clipFinished( f35_arg0.ButtonInternal ) --[[ @ 0]]
		end,
		Active = function ( f36_arg0, f36_arg1 )
			f36_arg0:__resetProperties() --[[ @ 0]]
			f36_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f36_arg0.ButtonInternal:completeAnimation() --[[ @ 0]]
			f36_arg0.ButtonInternal:playClip( "Active" ) --[[ @ 0]]
			f36_arg0.clipFinished( f36_arg0.ButtonInternal ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.Social_PlayersListButton.__onClose = function ( f37_arg0 )
	f37_arg0.ButtonInternal:close() --[[ @ 0]]
	f37_arg0.VoipWaves:close() --[[ @ 0]]
	f37_arg0.LeaderBacking:close() --[[ @ 0]]
	f37_arg0.SocialPlayersListButtonJoinAndInviteButton:close() --[[ @ 0]]
end
 --[[ @ 0]]
