-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:51
require( "ui/uieditor/widgets/common/commonheader" ) --[[ @ 0]]
require( "x64:422e8e07934d5342" ) --[[ @ 0]]
require( "x64:5777135ab21d4ef5" ) --[[ @ 0]]

CoD.StageNotificationContainer = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.StageNotificationContainer.__defaultWidth = 1920 --[[ @ 0]]
CoD.StageNotificationContainer.__defaultHeight = 120 --[[ @ 0]]
CoD.StageNotificationContainer.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.StageNotificationContainer ) --[[ @ 0]]
	self.id = "StageNotificationContainer" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local CommonHeader = CoD.CommonHeader.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 0, 0, 67 ) --[[ @ 0]]
	CommonHeader.subtitle.subtitle:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_27307830087A401" ) ) --[[ @ 0]]
	self:addElement( CommonHeader ) --[[ @ 0]]
	self.CommonHeader = CommonHeader --[[ @ 0]]
	
	local DirectorMatchmakingTimer = CoD.DirectorMatchmakingTimer.new( f1_arg0, f1_arg1, 0.95, 0.95, -286, 0, 0.9, 0.9, -90.5, -14.5 ) --[[ @ 0]]
	DirectorMatchmakingTimer:mergeStateConditions( {
		{
			stateName = "MatchStarting",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalModelValueEqualToEnum( "lobbyRoot.publicLobby.stage", LuaEnum.PUBLIC_LOBBY.START_MATCH )
			end
		},
		{
			stateName = "Intermission",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalModelValueEqualToEnum( "lobbyRoot.publicLobby.stage", LuaEnum.PUBLIC_LOBBY.INTERMISSION )
			end
		},
		{
			stateName = "Matchmaking",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalModelValueLessThanOrEqualToEnum( f1_arg1, "lobbyRoot.publicLobby.stage", LuaEnum.PUBLIC_LOBBY.SEARCH_STAGE_4 ) and not CoD.ModelUtility.IsGlobalModelValueEqualToEnum( "lobbyRoot.publicLobby.stage", LuaEnum.PUBLIC_LOBBY.INVALID )
			end
		}
	} ) --[[ @ 0]]
	local f1_local3 = DirectorMatchmakingTimer --[[ @ 0]]
	local DirectorStageIndicator = DirectorMatchmakingTimer.subscribeToModel --[[ @ 0]]
	local f1_local5 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	DirectorStageIndicator( f1_local3, f1_local5["lobbyRoot.publicLobby.stage"], function ( f5_arg0 )
		f1_arg0:updateElementState( DirectorMatchmakingTimer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f5_arg0:get(),
			modelName = "lobbyRoot.publicLobby.stage"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	DirectorMatchmakingTimer:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( DirectorMatchmakingTimer ) --[[ @ 0]]
	self.DirectorMatchmakingTimer = DirectorMatchmakingTimer --[[ @ 0]]
	
	DirectorStageIndicator = CoD.StageNotificationPositionContainer.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 0, 41, 81 ) --[[ @ 0]]
	self:addElement( DirectorStageIndicator ) --[[ @ 0]]
	self.DirectorStageIndicator = DirectorStageIndicator --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return CoD.DirectorUtility.IsMainMode( f1_arg1, Enum[@"lobbymainmode"][@"lobby_mainmode_wz"] ) and CoD.ModelUtility.IsGlobalModelValueEqualToEnum( "lobbyRoot.publicLobby.stage", LuaEnum.PUBLIC_LOBBY.INVALID )
			end
		},
		{
			stateName = "Intermission",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalModelValueEqualToEnum( "lobbyRoot.publicLobby.stage", LuaEnum.PUBLIC_LOBBY.INTERMISSION )
			end
		}
	} ) --[[ @ 0]]
	f1_local5 = self --[[ @ 0]]
	f1_local3 = self.subscribeToModel --[[ @ 0]]
	local f1_local6 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local3( f1_local5, f1_local6["lobbyRoot.lobbyMainMode"], function ( f8_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f8_arg0:get(),
			modelName = "lobbyRoot.lobbyMainMode"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local5 = self --[[ @ 0]]
	f1_local3 = self.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local3( f1_local5, f1_local6["lobbyRoot.lobbyNav"], function ( f9_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f9_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local5 = self --[[ @ 0]]
	f1_local3 = self.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local3( f1_local5, f1_local6["lobbyRoot.publicLobby.stage"], function ( f10_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f10_arg0:get(),
			modelName = "lobbyRoot.publicLobby.stage"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.StageNotificationContainer.__resetProperties = function ( f11_arg0 )
	f11_arg0.DirectorStageIndicator:completeAnimation() --[[ @ 0]]
	f11_arg0.DirectorMatchmakingTimer:completeAnimation() --[[ @ 0]]
	f11_arg0.DirectorStageIndicator:setAlpha( 1 ) --[[ @ 0]]
	f11_arg0.DirectorMatchmakingTimer:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.StageNotificationContainer.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f12_arg0, f12_arg1 )
			f12_arg0:__resetProperties() --[[ @ 0]]
			f12_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end,
		Hidden = function ( f13_arg0, f13_arg1 )
			f13_arg0:__resetProperties() --[[ @ 0]]
			f13_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f13_local0 = function ( f14_arg0 )
				f13_arg0.DirectorStageIndicator:beginAnimation( 200 ) --[[ @ 0]]
				f13_arg0.DirectorStageIndicator:setAlpha( 0 ) --[[ @ 0]]
				f13_arg0.DirectorStageIndicator:registerEventHandler( "interrupted_keyframe", f13_arg0.clipInterrupted ) --[[ @ 0]]
				f13_arg0.DirectorStageIndicator:registerEventHandler( "transition_complete_keyframe", f13_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f13_arg0.DirectorStageIndicator:completeAnimation() --[[ @ 0]]
			f13_arg0.DirectorStageIndicator:setAlpha( 1 ) --[[ @ 0]]
			f13_local0( f13_arg0.DirectorStageIndicator ) --[[ @ 0]]
		end,
		Intermission = function ( f15_arg0, f15_arg1 )
			f15_arg0:__resetProperties() --[[ @ 0]]
			f15_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f15_arg0.DirectorMatchmakingTimer:completeAnimation() --[[ @ 0]]
			f15_arg0.DirectorMatchmakingTimer:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.DirectorMatchmakingTimer ) --[[ @ 0]]
			local f15_local0 = function ( f16_arg0 )
				f15_arg0.DirectorStageIndicator:beginAnimation( 200 ) --[[ @ 0]]
				f15_arg0.DirectorStageIndicator:setAlpha( 0 ) --[[ @ 0]]
				f15_arg0.DirectorStageIndicator:registerEventHandler( "interrupted_keyframe", f15_arg0.clipInterrupted ) --[[ @ 0]]
				f15_arg0.DirectorStageIndicator:registerEventHandler( "transition_complete_keyframe", f15_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f15_arg0.DirectorStageIndicator:completeAnimation() --[[ @ 0]]
			f15_arg0.DirectorStageIndicator:setAlpha( 1 ) --[[ @ 0]]
			f15_local0( f15_arg0.DirectorStageIndicator ) --[[ @ 0]]
		end
	},
	Hidden = {
		DefaultClip = function ( f17_arg0, f17_arg1 )
			f17_arg0:__resetProperties() --[[ @ 0]]
			f17_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f17_arg0.DirectorStageIndicator:completeAnimation() --[[ @ 0]]
			f17_arg0.DirectorStageIndicator:setAlpha( 0 ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.DirectorStageIndicator ) --[[ @ 0]]
		end,
		DefaultState = function ( f18_arg0, f18_arg1 )
			f18_arg0:__resetProperties() --[[ @ 0]]
			f18_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f18_local0 = function ( f19_arg0 )
				f18_arg0.DirectorStageIndicator:beginAnimation( 200 ) --[[ @ 0]]
				f18_arg0.DirectorStageIndicator:setAlpha( 1 ) --[[ @ 0]]
				f18_arg0.DirectorStageIndicator:registerEventHandler( "interrupted_keyframe", f18_arg0.clipInterrupted ) --[[ @ 0]]
				f18_arg0.DirectorStageIndicator:registerEventHandler( "transition_complete_keyframe", f18_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f18_arg0.DirectorStageIndicator:completeAnimation() --[[ @ 0]]
			f18_arg0.DirectorStageIndicator:setAlpha( 0 ) --[[ @ 0]]
			f18_local0( f18_arg0.DirectorStageIndicator ) --[[ @ 0]]
		end
	},
	Intermission = {
		DefaultClip = function ( f20_arg0, f20_arg1 )
			f20_arg0:__resetProperties() --[[ @ 0]]
			f20_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f20_arg0.DirectorMatchmakingTimer:completeAnimation() --[[ @ 0]]
			f20_arg0.DirectorMatchmakingTimer:setAlpha( 0 ) --[[ @ 0]]
			f20_arg0.clipFinished( f20_arg0.DirectorMatchmakingTimer ) --[[ @ 0]]
			f20_arg0.DirectorStageIndicator:completeAnimation() --[[ @ 0]]
			f20_arg0.DirectorStageIndicator:setAlpha( 0 ) --[[ @ 0]]
			f20_arg0.clipFinished( f20_arg0.DirectorStageIndicator ) --[[ @ 0]]
		end,
		DefaultState = function ( f21_arg0, f21_arg1 )
			f21_arg0:__resetProperties() --[[ @ 0]]
			f21_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f21_arg0.DirectorMatchmakingTimer:completeAnimation() --[[ @ 0]]
			f21_arg0.DirectorMatchmakingTimer:setAlpha( 0 ) --[[ @ 0]]
			f21_arg0.clipFinished( f21_arg0.DirectorMatchmakingTimer ) --[[ @ 0]]
			local f21_local0 = function ( f22_arg0 )
				f21_arg0.DirectorStageIndicator:beginAnimation( 200 ) --[[ @ 0]]
				f21_arg0.DirectorStageIndicator:setAlpha( 1 ) --[[ @ 0]]
				f21_arg0.DirectorStageIndicator:registerEventHandler( "interrupted_keyframe", f21_arg0.clipInterrupted ) --[[ @ 0]]
				f21_arg0.DirectorStageIndicator:registerEventHandler( "transition_complete_keyframe", f21_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f21_arg0.DirectorStageIndicator:completeAnimation() --[[ @ 0]]
			f21_arg0.DirectorStageIndicator:setAlpha( 0 ) --[[ @ 0]]
			f21_local0( f21_arg0.DirectorStageIndicator ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.StageNotificationContainer.__onClose = function ( f23_arg0 )
	f23_arg0.CommonHeader:close() --[[ @ 0]]
	f23_arg0.DirectorMatchmakingTimer:close() --[[ @ 0]]
	f23_arg0.DirectorStageIndicator:close() --[[ @ 0]]
end
 --[[ @ 0]]
