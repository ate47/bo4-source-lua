-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:51
require( "x64:100fa630f1ab8206" ) --[[ @ 0]]
require( "ui/uieditor/widgets/pc/pc_perfstatscontainer" ) --[[ @ 0]]

CoD.MainOverlay = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.MainOverlay.__defaultWidth = 1920 --[[ @ 0]]
CoD.MainOverlay.__defaultHeight = 1080 --[[ @ 0]]
CoD.MainOverlay.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	if CoD.DirectorUtility.NeedsWatermark() then
		CoD.BaseUtility.InitGlobalModel( "showPreAlphaText", 1 ) --[[ @ 0]]
		CoD.BaseUtility.InitGlobalModel( "showBuildInfo", 0 ) --[[ @ 0]]
	else
		CoD.BaseUtility.InitGlobalModel( "showPreAlphaText", 0 ) --[[ @ 0]]
		CoD.BaseUtility.InitGlobalModel( "showBuildInfo", 0 ) --[[ @ 0]]
	end
	self:setClass( CoD.MainOverlay ) --[[ @ 0]]
	self.id = "MainOverlay" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local BuildInfo = LUI.UIText.new( 0.5, 0.5, 608, 955, 0, 0, 29, 50 ) --[[ @ 0]]
	BuildInfo:setAlpha( 0.6 ) --[[ @ 0]]
	BuildInfo:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_74D16564DEF246AA" ) ) --[[ @ 0]]
	BuildInfo:setTTF( "0arame_mono_stencil" ) --[[ @ 0]]
	BuildInfo:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_90D57B1E92D39D7" ) ) --[[ @ 0]]
	BuildInfo:setShaderVector( 0, 1, 0, 0, 0 ) --[[ @ 0]]
	BuildInfo:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	BuildInfo:setShaderVector( 2, 0, 0, 0, 0.5 ) --[[ @ 0]]
	BuildInfo:setLetterSpacing( 0.9 ) --[[ @ 0]]
	BuildInfo:setAlignment( Enum[@"luialignment"][@"lui_alignment_right"] ) --[[ @ 0]]
	BuildInfo:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	self:addElement( BuildInfo ) --[[ @ 0]]
	self.BuildInfo = BuildInfo --[[ @ 0]]
	
	local BuildInfo2 = LUI.UIText.new( 0.5, 0.5, 615, 955, 0, 0, 14, 28 ) --[[ @ 0]]
	BuildInfo2:setRGB( 0.35, 0.35, 0.35 ) --[[ @ 0]]
	BuildInfo2:setTTF( "0arame_mono_stencil" ) --[[ @ 0]]
	BuildInfo2:setAlignment( Enum[@"luialignment"][@"lui_alignment_right"] ) --[[ @ 0]]
	BuildInfo2:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	BuildInfo2:linkToElementModel( self, "buildInfo", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			BuildInfo2:setText( f2_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( BuildInfo2 ) --[[ @ 0]]
	self.BuildInfo2 = BuildInfo2 --[[ @ 0]]
	
	local BuildInfo3 = LUI.UIText.new( 0.5, 0.5, 755, 955, 0, 0, 56, 70 ) --[[ @ 0]]
	BuildInfo3:setRGB( 0.47, 0.47, 0.47 ) --[[ @ 0]]
	BuildInfo3:setTTF( "0arame_mono_stencil" ) --[[ @ 0]]
	BuildInfo3:setAlignment( Enum[@"luialignment"][@"lui_alignment_right"] ) --[[ @ 0]]
	BuildInfo3:linkToElementModel( self, "hostName", true, function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			BuildInfo3:setText( f3_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( BuildInfo3 ) --[[ @ 0]]
	self.BuildInfo3 = BuildInfo3 --[[ @ 0]]
	
	local BuildInfo4 = LUI.UIText.new( 0.5, 0.5, 755, 955, 0, 0, 75, 89 ) --[[ @ 0]]
	BuildInfo4:setRGB( 0.47, 0.47, 0.47 ) --[[ @ 0]]
	BuildInfo4:setTTF( "0arame_mono_stencil" ) --[[ @ 0]]
	BuildInfo4:setAlignment( Enum[@"luialignment"][@"lui_alignment_right"] ) --[[ @ 0]]
	BuildInfo4:linkToElementModel( self, "fullBuildNameContext", true, function ( model )
		local f4_local0 = model:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			BuildInfo4:setText( f4_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( BuildInfo4 ) --[[ @ 0]]
	self.BuildInfo4 = BuildInfo4 --[[ @ 0]]
	
	local PCTelemetryWidget = nil --[[ @ 0]]
	
	PCTelemetryWidget = CoD.PC_PerfStatsContainer.new( f1_arg0, f1_arg1, 0.5, 0.5, -960, 40, 0, 0, 3.5, 18.5 ) --[[ @ 0]]
	self:addElement( PCTelemetryWidget ) --[[ @ 0]]
	self.PCTelemetryWidget = PCTelemetryWidget --[[ @ 0]]
	
	local PCAchievementNotificationContainer = nil --[[ @ 0]]
	
	PCAchievementNotificationContainer = CoD.PC_AchievementNotification_Container.new( f1_arg0, f1_arg1, 0.5, 0.5, 490, 920, 0, 0, 230, 310 ) --[[ @ 0]]
	self:addElement( PCAchievementNotificationContainer ) --[[ @ 0]]
	self.PCAchievementNotificationContainer = PCAchievementNotificationContainer --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "ShowPreAlphaWatermark",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalModelValueEqualTo( "showPreAlphaText", 1 )
			end
		},
		{
			stateName = "ShowPreAlphaWatermarkAlt",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalModelValueEqualTo( "showPreAlphaText", 2 )
			end
		},
		{
			stateName = "ShowBuildInfo",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalModelValueGreaterThan( "showBuildInfo", 0 )
			end
		}
	} ) --[[ @ 0]]
	local f1_local7 = self --[[ @ 0]]
	local f1_local8 = self.subscribeToModel --[[ @ 0]]
	local f1_local9 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local8( f1_local7, f1_local9.showPreAlphaText, function ( f8_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f8_arg0:get(),
			modelName = "showPreAlphaText"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = self --[[ @ 0]]
	f1_local8 = self.subscribeToModel --[[ @ 0]]
	f1_local9 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local8( f1_local7, f1_local9.showBuildInfo, function ( f9_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f9_arg0:get(),
			modelName = "showBuildInfo"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self.__on_menuOpened_self = function ( f10_arg0, f10_arg1, f10_arg2, f10_arg3 )
		local f10_local0 = self --[[ @ 0]]
		if CoD.BaseUtility.IsParameterValueDefined( f10_arg1 ) and not IsPC() then
			SizeToSafeArea( self, f10_arg1 ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	f1_arg0:addMenuOpenedCallback( self.__on_menuOpened_self ) --[[ @ 0]]
	self:subscribeToGlobalModel( f1_arg1, "PerController", "PC.Achievement.TotalScore", function ( model )
		local f11_local0 = self --[[ @ 0]]
	end ) --[[ @ 0]]
	self.__on_close_removeOverrides = function ()
		f1_arg0:removeMenuOpenedCallback( self.__on_menuOpened_self ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	f1_local8 = self --[[ @ 0]]
	if IsPC() then
		SetModelToGlobalDataSource( f1_arg1, self, "GlobalModel" ) --[[ @ 0]]
	else
		SetModelToGlobalDataSource( f1_arg1, self, "GlobalModel" ) --[[ @ 0]]
	end
	f1_local8 = PCTelemetryWidget --[[ @ 0]]
	if IsPC() and IsInGame() then
		SizeToHudArea( f1_local8, f1_arg1 ) --[[ @ 0]]
	end
	return self
end
 --[[ @ 0]]
CoD.MainOverlay.__resetProperties = function ( f13_arg0 )
	f13_arg0.BuildInfo:completeAnimation() --[[ @ 0]]
	f13_arg0.BuildInfo3:completeAnimation() --[[ @ 0]]
	f13_arg0.BuildInfo4:completeAnimation() --[[ @ 0]]
	f13_arg0.BuildInfo2:completeAnimation() --[[ @ 0]]
	f13_arg0.BuildInfo:setTopBottom( 0, 0, 29, 50 ) --[[ @ 0]]
	f13_arg0.BuildInfo:setAlpha( 0.6 ) --[[ @ 0]]
	f13_arg0.BuildInfo:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_74D16564DEF246AA" ) ) --[[ @ 0]]
	f13_arg0.BuildInfo3:setTopBottom( 0, 0, 56, 70 ) --[[ @ 0]]
	f13_arg0.BuildInfo4:setTopBottom( 0, 0, 75, 89 ) --[[ @ 0]]
	f13_arg0.BuildInfo2:setTopBottom( 0, 0, 14, 28 ) --[[ @ 0]]
	f13_arg0.BuildInfo2:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.MainOverlay.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f14_arg0, f14_arg1 )
			f14_arg0:__resetProperties() --[[ @ 0]]
			f14_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f14_arg0.BuildInfo:completeAnimation() --[[ @ 0]]
			f14_arg0.BuildInfo:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.BuildInfo ) --[[ @ 0]]
			f14_arg0.BuildInfo2:completeAnimation() --[[ @ 0]]
			f14_arg0.BuildInfo2:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.BuildInfo2 ) --[[ @ 0]]
			f14_arg0.BuildInfo3:completeAnimation() --[[ @ 0]]
			f14_arg0.BuildInfo3:setTopBottom( 0, 0, 38, 52 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.BuildInfo3 ) --[[ @ 0]]
			f14_arg0.BuildInfo4:completeAnimation() --[[ @ 0]]
			f14_arg0.BuildInfo4:setTopBottom( 0, 0, 54, 68 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.BuildInfo4 ) --[[ @ 0]]
		end
	},
	ShowPreAlphaWatermark = {
		DefaultClip = function ( f15_arg0, f15_arg1 )
			f15_arg0:__resetProperties() --[[ @ 0]]
			f15_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f15_arg0.BuildInfo:completeAnimation() --[[ @ 0]]
			f15_arg0.BuildInfo:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_74D16564DEF246AA" ) ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.BuildInfo ) --[[ @ 0]]
			f15_arg0.BuildInfo3:completeAnimation() --[[ @ 0]]
			f15_arg0.BuildInfo3:setTopBottom( 0, 0, 77, 91 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.BuildInfo3 ) --[[ @ 0]]
			f15_arg0.BuildInfo4:completeAnimation() --[[ @ 0]]
			f15_arg0.BuildInfo4:setTopBottom( 0, 0, 94, 108 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.BuildInfo4 ) --[[ @ 0]]
		end
	},
	ShowPreAlphaWatermarkAlt = {
		DefaultClip = function ( f16_arg0, f16_arg1 )
			f16_arg0:__resetProperties() --[[ @ 0]]
			f16_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f16_arg0.BuildInfo:completeAnimation() --[[ @ 0]]
			f16_arg0.BuildInfo:setTopBottom( 0, 0, 40, 61 ) --[[ @ 0]]
			f16_arg0.BuildInfo:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_74D16564DEF246AA" ) ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.BuildInfo ) --[[ @ 0]]
			f16_arg0.BuildInfo2:completeAnimation() --[[ @ 0]]
			f16_arg0.BuildInfo2:setTopBottom( 0, 0, 4, 18 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.BuildInfo2 ) --[[ @ 0]]
			f16_arg0.BuildInfo3:completeAnimation() --[[ @ 0]]
			f16_arg0.BuildInfo3:setTopBottom( 0, 0, 66, 80 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.BuildInfo3 ) --[[ @ 0]]
			f16_arg0.BuildInfo4:completeAnimation() --[[ @ 0]]
			f16_arg0.BuildInfo4:setTopBottom( 0, 0, 83, 97 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.BuildInfo4 ) --[[ @ 0]]
		end
	},
	ShowBuildInfo = {
		DefaultClip = function ( f17_arg0, f17_arg1 )
			f17_arg0:__resetProperties() --[[ @ 0]]
			f17_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f17_arg0.BuildInfo:completeAnimation() --[[ @ 0]]
			f17_arg0.BuildInfo:setAlpha( 0 ) --[[ @ 0]]
			f17_arg0.BuildInfo:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_74D16564DEF246AA" ) ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.BuildInfo ) --[[ @ 0]]
			f17_arg0.BuildInfo3:completeAnimation() --[[ @ 0]]
			f17_arg0.BuildInfo3:setTopBottom( 0, 0, 77, 91 ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.BuildInfo3 ) --[[ @ 0]]
			f17_arg0.BuildInfo4:completeAnimation() --[[ @ 0]]
			f17_arg0.BuildInfo4:setTopBottom( 0, 0, 94, 108 ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.BuildInfo4 ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.MainOverlay.__onClose = function ( f18_arg0 )
	f18_arg0.__on_close_removeOverrides() --[[ @ 0]]
	f18_arg0.BuildInfo2:close() --[[ @ 0]]
	f18_arg0.BuildInfo3:close() --[[ @ 0]]
	f18_arg0.BuildInfo4:close() --[[ @ 0]]
	f18_arg0.PCTelemetryWidget:close() --[[ @ 0]]
	f18_arg0.PCAchievementNotificationContainer:close() --[[ @ 0]]
end
 --[[ @ 0]]
