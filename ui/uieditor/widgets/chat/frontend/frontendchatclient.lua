-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:36
require( "ui/uieditor/widgets/chat/chatclientchatentryscrollviewcontainer" ) --[[ @ 0]]
require( "ui/uieditor/widgets/chat/chatclientfilterbutton" ) --[[ @ 0]]
require( "ui/uieditor/widgets/chat/chatclientinputtextbox" ) --[[ @ 0]]
require( "ui/uieditor/widgets/emptyfocusable" ) --[[ @ 0]]

CoD.FrontendChatClient = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.FrontendChatClient.__defaultWidth = 540 --[[ @ 0]]
CoD.FrontendChatClient.__defaultHeight = 290 --[[ @ 0]]
CoD.FrontendChatClient.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.FrontendChatClient ) --[[ @ 0]]
	self.id = "FrontendChatClient" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local emptyFocusable = CoD.emptyFocusable.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	self:addElement( emptyFocusable ) --[[ @ 0]]
	self.emptyFocusable = emptyFocusable --[[ @ 0]]
	
	local FrontendChatBG = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	FrontendChatBG:setImage( RegisterImage( @"hash_6FECB0E0003975BA" ) ) --[[ @ 0]]
	self:addElement( FrontendChatBG ) --[[ @ 0]]
	self.FrontendChatBG = FrontendChatBG --[[ @ 0]]
	
	local InputText = CoD.ChatClientInputTextBox.new( f1_arg0, f1_arg1, 0.03, 0.03, -6, 514, 0.97, 0.97, -30, 0 ) --[[ @ 0]]
	InputText:subscribeToGlobalModel( f1_arg1, "ChatGlobal", nil, function ( model )
		InputText:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	InputText:subscribeToGlobalModel( f1_arg1, "ChatGlobal", "Event", function ( model )
		CoD.PCUtility.ChatClientInputTextFieldUpdatePrompt( self, InputText, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( InputText ) --[[ @ 0]]
	self.InputText = InputText --[[ @ 0]]
	
	local ChatClientChatEntryScrollViewContainer = CoD.ChatClientChatEntryScrollViewContainer.new( f1_arg0, f1_arg1, 0.03, 0.03, -2, 516, 0.07, 0.07, 1.5, 212.5 ) --[[ @ 0]]
	self:addElement( ChatClientChatEntryScrollViewContainer ) --[[ @ 0]]
	self.ChatClientChatEntryScrollViewContainer = ChatClientChatEntryScrollViewContainer --[[ @ 0]]
	
	local FiltersButton = CoD.ChatClientFilterButton.new( f1_arg0, f1_arg1, 0.99, 0.99, -125, 0, 0.02, 0.02, 0, 25 ) --[[ @ 0]]
	FiltersButton:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( FiltersButton ) --[[ @ 0]]
	self.FiltersButton = FiltersButton --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Chatting",
			condition = function ( menu, element, event )
				return ChatClientIsAvailable( self, element, f1_arg1 )
			end
		}
	} ) --[[ @ 0]]
	local f1_local6 = self --[[ @ 0]]
	local f1_local7 = self.subscribeToModel --[[ @ 0]]
	local f1_local8 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local7( f1_local6, f1_local8["ChatGlobal.Event"], function ( f5_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f5_arg0:get(),
			modelName = "ChatGlobal.Event"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	emptyFocusable.id = "emptyFocusable" --[[ @ 0]]
	InputText.id = "InputText" --[[ @ 0]]
	ChatClientChatEntryScrollViewContainer.id = "ChatClientChatEntryScrollViewContainer" --[[ @ 0]]
	FiltersButton.id = "FiltersButton" --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	f1_local7 = self --[[ @ 0]]
	CoD.PCWidgetUtility.PrepareChatVScrollWidget( self, f1_arg1, f1_arg0, self.ChatClientChatEntryScrollViewContainer ) --[[ @ 0]]
	return self
end
 --[[ @ 0]]
CoD.FrontendChatClient.__resetProperties = function ( f6_arg0 )
	f6_arg0.InputText:completeAnimation() --[[ @ 0]]
	f6_arg0.ChatClientChatEntryScrollViewContainer:completeAnimation() --[[ @ 0]]
	f6_arg0.emptyFocusable:completeAnimation() --[[ @ 0]]
	f6_arg0.InputText:setAlpha( 1 ) --[[ @ 0]]
	f6_arg0.ChatClientChatEntryScrollViewContainer:setAlpha( 1 ) --[[ @ 0]]
	f6_arg0.emptyFocusable:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.FrontendChatClient.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f7_arg0, f7_arg1 )
			f7_arg0:__resetProperties() --[[ @ 0]]
			f7_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f7_arg0.InputText:completeAnimation() --[[ @ 0]]
			f7_arg0.InputText:setAlpha( 1 ) --[[ @ 0]]
			f7_arg0.clipFinished( f7_arg0.InputText ) --[[ @ 0]]
		end
	},
	Chatting = {
		DefaultClip = function ( f8_arg0, f8_arg1 )
			f8_arg0:__resetProperties() --[[ @ 0]]
			f8_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f8_arg0.emptyFocusable:completeAnimation() --[[ @ 0]]
			f8_arg0.emptyFocusable:setAlpha( 1 ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.emptyFocusable ) --[[ @ 0]]
			f8_arg0.InputText:completeAnimation() --[[ @ 0]]
			f8_arg0.InputText:setAlpha( 1 ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.InputText ) --[[ @ 0]]
			f8_arg0.ChatClientChatEntryScrollViewContainer:completeAnimation() --[[ @ 0]]
			f8_arg0.ChatClientChatEntryScrollViewContainer:setAlpha( 1 ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.ChatClientChatEntryScrollViewContainer ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.FrontendChatClient.__onClose = function ( f9_arg0 )
	f9_arg0.emptyFocusable:close() --[[ @ 0]]
	f9_arg0.InputText:close() --[[ @ 0]]
	f9_arg0.ChatClientChatEntryScrollViewContainer:close() --[[ @ 0]]
	f9_arg0.FiltersButton:close() --[[ @ 0]]
end
 --[[ @ 0]]
