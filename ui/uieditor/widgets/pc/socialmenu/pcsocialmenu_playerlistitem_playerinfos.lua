-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:36
require( "ui/uieditor/widgets/director/directorlobbyleader" ) --[[ @ 0]]
require( "ui/uieditor/widgets/emptyfocusable" ) --[[ @ 0]]
require( "ui/uieditor/widgets/pc/socialmenu/pcsocialmenu_playerlistitem_playerinfos_acceptinvitebutton" ) --[[ @ 0]]
require( "x64:69b0dc90c4c75e4d" ) --[[ @ 0]]
require( "x64:7fd56264606587b7" ) --[[ @ 0]]
require( "x64:40610d2417880da" ) --[[ @ 0]]
require( "x64:1a1d3d059e6cf4d9" ) --[[ @ 0]]
require( "x64:12d80af66958e98e" ) --[[ @ 0]]
require( "ui/uieditor/widgets/pc/socialmenu/pcsocialmenu_playerlistitem_playerinfos_removebutton" ) --[[ @ 0]]

CoD.PCSocialMenu_PlayerListItem_PlayerInfos = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.PCSocialMenu_PlayerListItem_PlayerInfos.__defaultWidth = 622 --[[ @ 0]]
CoD.PCSocialMenu_PlayerListItem_PlayerInfos.__defaultHeight = 85 --[[ @ 0]]
CoD.PCSocialMenu_PlayerListItem_PlayerInfos.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.PCSocialMenu_PlayerListItem_PlayerInfos ) --[[ @ 0]]
	self.id = "PCSocialMenu_PlayerListItem_PlayerInfos" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local IMG_Background = LUI.UIImage.new( 0, 1, 2, -2, 0, 1, 2, -2 ) --[[ @ 0]]
	IMG_Background:setRGB( 0.15, 0.15, 0.15 ) --[[ @ 0]]
	self:addElement( IMG_Background ) --[[ @ 0]]
	self.IMG_Background = IMG_Background --[[ @ 0]]
	
	local emblem = LUI.UIImage.new( 0, 0, 5, 128, 0, 0, 2, 83 ) --[[ @ 0]]
	emblem:setRGB( 0.9, 0.9, 0.9 ) --[[ @ 0]]
	emblem:linkToElementModel( self, "identityBadge.xuid", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			emblem:setupPlayerEmblemByXUID( f2_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( emblem ) --[[ @ 0]]
	self.emblem = emblem --[[ @ 0]]
	
	local TXTPlayerTag = LUI.UIText.new( 0, 0, 140, 450, 0, 0, 13, 43 ) --[[ @ 0]]
	TXTPlayerTag:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	TXTPlayerTag:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	TXTPlayerTag:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	TXTPlayerTag:linkToElementModel( self, "identityBadge.gamertag", true, function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			TXTPlayerTag:setText( f3_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( TXTPlayerTag ) --[[ @ 0]]
	self.TXTPlayerTag = TXTPlayerTag --[[ @ 0]]
	
	local TXTPlayerStatus = LUI.UIText.new( 0, 0, 172, 450, 0, 0, 42.5, 68.5 ) --[[ @ 0]]
	TXTPlayerStatus:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	TXTPlayerStatus:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	TXTPlayerStatus:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	TXTPlayerStatus:linkToElementModel( self, "activityString", true, function ( model )
		local f4_local0 = model:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			TXTPlayerStatus:setText( Engine[@"hash_4F9F1239CFD921FE"]( f4_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( TXTPlayerStatus ) --[[ @ 0]]
	self.TXTPlayerStatus = TXTPlayerStatus --[[ @ 0]]
	
	local IMG_PlayerStatusIcon = LUI.UIImage.new( 0, 0, 140, 159, 0, 0, 46, 65 ) --[[ @ 0]]
	IMG_PlayerStatusIcon:linkToElementModel( self, "battlenetPresence", true, function ( model )
		local f5_local0 = model:get() --[[ @ 0]]
		if f5_local0 ~= nil then
			IMG_PlayerStatusIcon:setRGB( CoD.PCBattlenetUtility.BattleNetStatusToColor( f5_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( IMG_PlayerStatusIcon ) --[[ @ 0]]
	self.IMG_PlayerStatusIcon = IMG_PlayerStatusIcon --[[ @ 0]]
	
	local emptyFocusable = CoD.emptyFocusable.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	self:addElement( emptyFocusable ) --[[ @ 0]]
	self.emptyFocusable = emptyFocusable --[[ @ 0]]
	
	local BTN_Mute = CoD.PCSocialMenu_PlayerListItem_PlayerInfos_MuteButton.new( f1_arg0, f1_arg1, 1, 1, -130, -80, 0.5, 0.5, -25, 25 ) --[[ @ 0]]
	BTN_Mute:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( BTN_Mute ) --[[ @ 0]]
	self.BTN_Mute = BTN_Mute --[[ @ 0]]
	
	local BTN_Accept = CoD.PCSocialMenu_PlayerListItem_PlayerInfos_AcceptInviteButton.new( f1_arg0, f1_arg1, 1, 1, -130, -80, 0.5, 0.5, -25, 25 ) --[[ @ 0]]
	BTN_Accept:setAlpha( 0 ) --[[ @ 0]]
	BTN_Accept:registerEventHandler( "gain_focus", function ( element, event )
		local f6_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f6_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f6_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f6_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( BTN_Accept, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		CoD.PCUtility.AcceptFriendRequest( self, controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_0", nil, "ui_confirm" ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	self:addElement( BTN_Accept ) --[[ @ 0]]
	self.BTN_Accept = BTN_Accept --[[ @ 0]]
	
	local BTN_Remove = CoD.PCSocialMenu_PlayerListItem_PlayerInfos_RemoveButton.new( f1_arg0, f1_arg1, 1, 1, -65, -15, 0.5, 0.5, -25, 25 ) --[[ @ 0]]
	BTN_Remove:setAlpha( 0 ) --[[ @ 0]]
	BTN_Remove:linkToElementModel( BTN_Remove, "inviteStatus", true, function ( model, f9_arg1 )
		CoD.Menu.UpdateButtonShownState( f9_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	BTN_Remove:registerEventHandler( "gain_focus", function ( element, event )
		local f10_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f10_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f10_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f10_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( BTN_Remove, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		if CoD.ModelUtility.IsSelfModelValueEqualToEnum( self, controller, "inviteStatus", CoD.PCWidgetUtility.SocialInviteStatus.IN_PARTY ) then
			CoD.PCUtility.RemoveFriend( self, controller ) --[[ @ 0]]
			return true
		elseif CoD.ModelUtility.IsSelfModelValueEqualToEnum( self, controller, "inviteStatus", CoD.PCWidgetUtility.SocialInviteStatus.PENDING ) then
			CoD.PCUtility.RevokeSentFriendRequest( self, controller ) --[[ @ 0]]
			return true
		elseif CoD.ModelUtility.IsSelfModelValueEqualToEnum( self, controller, "inviteStatus", CoD.PCWidgetUtility.SocialInviteStatus.RECEIVED ) then
			CoD.PCUtility.IgnoreFriendRequest( self, controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if CoD.ModelUtility.IsSelfModelValueEqualToEnum( self, controller, "inviteStatus", CoD.PCWidgetUtility.SocialInviteStatus.IN_PARTY ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_0", nil, "ui_confirm" ) --[[ @ 0]]
			return false
		elseif CoD.ModelUtility.IsSelfModelValueEqualToEnum( self, controller, "inviteStatus", CoD.PCWidgetUtility.SocialInviteStatus.PENDING ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_0", nil, "ui_confirm" ) --[[ @ 0]]
			return false
		elseif CoD.ModelUtility.IsSelfModelValueEqualToEnum( self, controller, "inviteStatus", CoD.PCWidgetUtility.SocialInviteStatus.RECEIVED ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_0", nil, "ui_confirm" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( BTN_Remove ) --[[ @ 0]]
	self.BTN_Remove = BTN_Remove --[[ @ 0]]
	
	local BTN_Invite = CoD.PCSocialMenu_PlayerListItem_PlayerInfos_InviteButton.new( f1_arg0, f1_arg1, 1, 1, -65, -15, 0.5, 0.5, -25, 25 ) --[[ @ 0]]
	self:addElement( BTN_Invite ) --[[ @ 0]]
	self.BTN_Invite = BTN_Invite --[[ @ 0]]
	
	local TXTPending = LUI.UIText.new( 1, 1, -233, -80, 0.5, 0.5, -18.5, 18.5 ) --[[ @ 0]]
	TXTPending:setAlpha( 0 ) --[[ @ 0]]
	TXTPending:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_33DD0EE1DB9F6A1C" ) ) --[[ @ 0]]
	TXTPending:setTTF( "default" ) --[[ @ 0]]
	TXTPending:setAlignment( Enum[@"LUIAlignment"][@"hash_3830CFD395E6AA0A"] ) --[[ @ 0]]
	TXTPending:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	self:addElement( TXTPending ) --[[ @ 0]]
	self.TXTPending = TXTPending --[[ @ 0]]
	
	local DirectorLobbyLeader = CoD.DirectorLobbyLeader.new( f1_arg0, f1_arg1, 0, 0, 2, 16, 0, 1, 2, -2 ) --[[ @ 0]]
	self:addElement( DirectorLobbyLeader ) --[[ @ 0]]
	self.DirectorLobbyLeader = DirectorLobbyLeader --[[ @ 0]]
	
	local BTNInviteToParty = CoD.PCSocialMenu_PlayerListItem_PlayerInfos_InviteToParty.new( f1_arg0, f1_arg1, 0, 0, 389, 469, 0, 0, 27.5, 57.5 ) --[[ @ 0]]
	BTNInviteToParty:setAlpha( 0 ) --[[ @ 0]]
	BTNInviteToParty:registerEventHandler( "gain_focus", function ( element, event )
		local f13_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f13_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f13_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f13_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( BTNInviteToParty, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		LobbyInviteFriendByXuid( self, self, controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_0", nil, "ui_confirm" ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	self:addElement( BTNInviteToParty ) --[[ @ 0]]
	self.BTNInviteToParty = BTNInviteToParty --[[ @ 0]]
	
	local BTNCancelPartyInvite = CoD.PCSocialMenu_PlayerListItem_PlayerInfos_CancelInviteToParty.new( f1_arg0, f1_arg1, 0, 0, 389, 469, 0, 0, 27.5, 57.5 ) --[[ @ 0]]
	BTNCancelPartyInvite:setAlpha( 0 ) --[[ @ 0]]
	BTNCancelPartyInvite:registerEventHandler( "gain_focus", function ( element, event )
		local f16_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f16_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f16_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f16_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( BTNCancelPartyInvite, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		CancelPartyInvite( self, self, controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_0", nil, "ui_confirm" ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	self:addElement( BTNCancelPartyInvite ) --[[ @ 0]]
	self.BTNCancelPartyInvite = BTNCancelPartyInvite --[[ @ 0]]
	
	local BTNAcceptInviteToParty = CoD.PCSocialMenu_PlayerListItem_PlayerInfos_AcceptInviteToParty.new( f1_arg0, f1_arg1, 0, 0, 389, 469, 0, 0, 27.5, 57.5 ) --[[ @ 0]]
	BTNAcceptInviteToParty:setAlpha( 0 ) --[[ @ 0]]
	BTNAcceptInviteToParty:registerEventHandler( "gain_focus", function ( element, event )
		local f19_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f19_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f19_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f19_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( BTNAcceptInviteToParty, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		LobbyQuickJoin( menu, self, self, controller, Enum[@"JoinType"][@"hash_C21E48130C4B82B"], true ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_0", nil, "ui_confirm" ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	self:addElement( BTNAcceptInviteToParty ) --[[ @ 0]]
	self.BTNAcceptInviteToParty = BTNAcceptInviteToParty --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "InvitePending",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualToEnum( self, f1_arg1, "inviteStatus", CoD.PCWidgetUtility.SocialInviteStatus.PENDING )
			end
		},
		{
			stateName = "Invite",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualToEnum( self, f1_arg1, "inviteStatus", CoD.PCWidgetUtility.SocialInviteStatus.RECEIVED )
			end
		},
		{
			stateName = "PartyPending",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualTo( self, f1_arg1, "partyInviteStatus", CoD.PCWidgetUtility.SocialInviteStatus.PENDING )
			end
		},
		{
			stateName = "PartyReceived",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualTo( self, f1_arg1, "partyInviteStatus", CoD.PCWidgetUtility.SocialInviteStatus.RECEIVED )
			end
		},
		{
			stateName = "PartyNotSent",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualTo( self, f1_arg1, "partyInviteStatus", CoD.PCWidgetUtility.PartyInviteStatus.NOT_SENT )
			end
		},
		{
			stateName = "InParty",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualToEnum( self, f1_arg1, "inviteStatus", CoD.PCWidgetUtility.SocialInviteStatus.IN_PARTY )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "inviteStatus", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "inviteStatus"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:linkToElementModel( self, "partyInviteStatus", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "partyInviteStatus"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	emptyFocusable.id = "emptyFocusable" --[[ @ 0]]
	BTN_Mute.id = "BTN_Mute" --[[ @ 0]]
	BTN_Accept.id = "BTN_Accept" --[[ @ 0]]
	BTN_Remove.id = "BTN_Remove" --[[ @ 0]]
	BTN_Invite.id = "BTN_Invite" --[[ @ 0]]
	BTNInviteToParty.id = "BTNInviteToParty" --[[ @ 0]]
	BTNCancelPartyInvite.id = "BTNCancelPartyInvite" --[[ @ 0]]
	BTNAcceptInviteToParty.id = "BTNAcceptInviteToParty" --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.PCSocialMenu_PlayerListItem_PlayerInfos.__resetProperties = function ( f30_arg0 )
	f30_arg0.BTN_Mute:completeAnimation() --[[ @ 0]]
	f30_arg0.BTN_Invite:completeAnimation() --[[ @ 0]]
	f30_arg0.BTN_Remove:completeAnimation() --[[ @ 0]]
	f30_arg0.BTN_Accept:completeAnimation() --[[ @ 0]]
	f30_arg0.TXTPending:completeAnimation() --[[ @ 0]]
	f30_arg0.TXTPlayerTag:completeAnimation() --[[ @ 0]]
	f30_arg0.BTNCancelPartyInvite:completeAnimation() --[[ @ 0]]
	f30_arg0.BTNAcceptInviteToParty:completeAnimation() --[[ @ 0]]
	f30_arg0.BTNInviteToParty:completeAnimation() --[[ @ 0]]
	f30_arg0.BTN_Mute:setLeftRight( 1, 1, -130, -80 ) --[[ @ 0]]
	f30_arg0.BTN_Mute:setTopBottom( 0.5, 0.5, -25, 25 ) --[[ @ 0]]
	f30_arg0.BTN_Mute:setAlpha( 0 ) --[[ @ 0]]
	f30_arg0.BTN_Invite:setLeftRight( 1, 1, -65, -15 ) --[[ @ 0]]
	f30_arg0.BTN_Invite:setTopBottom( 0.5, 0.5, -25, 25 ) --[[ @ 0]]
	f30_arg0.BTN_Invite:setAlpha( 1 ) --[[ @ 0]]
	f30_arg0.BTN_Remove:setAlpha( 0 ) --[[ @ 0]]
	f30_arg0.BTN_Accept:setTopBottom( 0.5, 0.5, -25, 25 ) --[[ @ 0]]
	f30_arg0.BTN_Accept:setAlpha( 0 ) --[[ @ 0]]
	f30_arg0.TXTPending:setAlpha( 0 ) --[[ @ 0]]
	f30_arg0.TXTPlayerTag:setLeftRight( 0, 0, 140, 450 ) --[[ @ 0]]
	f30_arg0.TXTPlayerTag:setTopBottom( 0, 0, 13, 43 ) --[[ @ 0]]
	f30_arg0.BTNCancelPartyInvite:setAlpha( 0 ) --[[ @ 0]]
	f30_arg0.BTNAcceptInviteToParty:setAlpha( 0 ) --[[ @ 0]]
	f30_arg0.BTNInviteToParty:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.PCSocialMenu_PlayerListItem_PlayerInfos.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f31_arg0, f31_arg1 )
			f31_arg0:__resetProperties() --[[ @ 0]]
			f31_arg0:setupElementClipCounter( 5 ) --[[ @ 0]]
			f31_arg0.BTN_Mute:completeAnimation() --[[ @ 0]]
			f31_arg0.BTN_Mute:setLeftRight( 1, 1, -130, -80 ) --[[ @ 0]]
			f31_arg0.BTN_Mute:setTopBottom( 0.5, 0.5, -25, 25 ) --[[ @ 0]]
			f31_arg0.BTN_Mute:setAlpha( 0 ) --[[ @ 0]]
			f31_arg0.clipFinished( f31_arg0.BTN_Mute ) --[[ @ 0]]
			f31_arg0.BTN_Accept:completeAnimation() --[[ @ 0]]
			f31_arg0.BTN_Accept:setAlpha( 0 ) --[[ @ 0]]
			f31_arg0.clipFinished( f31_arg0.BTN_Accept ) --[[ @ 0]]
			f31_arg0.BTN_Remove:completeAnimation() --[[ @ 0]]
			f31_arg0.BTN_Remove:setAlpha( 0 ) --[[ @ 0]]
			f31_arg0.clipFinished( f31_arg0.BTN_Remove ) --[[ @ 0]]
			f31_arg0.BTN_Invite:completeAnimation() --[[ @ 0]]
			f31_arg0.BTN_Invite:setAlpha( 1 ) --[[ @ 0]]
			f31_arg0.clipFinished( f31_arg0.BTN_Invite ) --[[ @ 0]]
			f31_arg0.TXTPending:completeAnimation() --[[ @ 0]]
			f31_arg0.TXTPending:setAlpha( 0 ) --[[ @ 0]]
			f31_arg0.clipFinished( f31_arg0.TXTPending ) --[[ @ 0]]
		end
	},
	InvitePending = {
		DefaultClip = function ( f32_arg0, f32_arg1 )
			f32_arg0:__resetProperties() --[[ @ 0]]
			f32_arg0:setupElementClipCounter( 5 ) --[[ @ 0]]
			f32_arg0.BTN_Mute:completeAnimation() --[[ @ 0]]
			f32_arg0.BTN_Mute:setAlpha( 0 ) --[[ @ 0]]
			f32_arg0.clipFinished( f32_arg0.BTN_Mute ) --[[ @ 0]]
			f32_arg0.BTN_Accept:completeAnimation() --[[ @ 0]]
			f32_arg0.BTN_Accept:setAlpha( 0 ) --[[ @ 0]]
			f32_arg0.clipFinished( f32_arg0.BTN_Accept ) --[[ @ 0]]
			f32_arg0.BTN_Remove:completeAnimation() --[[ @ 0]]
			f32_arg0.BTN_Remove:setAlpha( 1 ) --[[ @ 0]]
			f32_arg0.clipFinished( f32_arg0.BTN_Remove ) --[[ @ 0]]
			f32_arg0.BTN_Invite:completeAnimation() --[[ @ 0]]
			f32_arg0.BTN_Invite:setLeftRight( 1, 1, -65, -15 ) --[[ @ 0]]
			f32_arg0.BTN_Invite:setTopBottom( 0.5, 0.5, -25, 25 ) --[[ @ 0]]
			f32_arg0.BTN_Invite:setAlpha( 0 ) --[[ @ 0]]
			f32_arg0.clipFinished( f32_arg0.BTN_Invite ) --[[ @ 0]]
			f32_arg0.TXTPending:completeAnimation() --[[ @ 0]]
			f32_arg0.TXTPending:setAlpha( 1 ) --[[ @ 0]]
			f32_arg0.clipFinished( f32_arg0.TXTPending ) --[[ @ 0]]
		end
	},
	Invite = {
		DefaultClip = function ( f33_arg0, f33_arg1 )
			f33_arg0:__resetProperties() --[[ @ 0]]
			f33_arg0:setupElementClipCounter( 6 ) --[[ @ 0]]
			f33_arg0.TXTPlayerTag:completeAnimation() --[[ @ 0]]
			f33_arg0.TXTPlayerTag:setLeftRight( 0, 0, 140, 450 ) --[[ @ 0]]
			f33_arg0.TXTPlayerTag:setTopBottom( 0, 0, 13, 43 ) --[[ @ 0]]
			f33_arg0.clipFinished( f33_arg0.TXTPlayerTag ) --[[ @ 0]]
			f33_arg0.BTN_Mute:completeAnimation() --[[ @ 0]]
			f33_arg0.BTN_Mute:setAlpha( 0 ) --[[ @ 0]]
			f33_arg0.clipFinished( f33_arg0.BTN_Mute ) --[[ @ 0]]
			f33_arg0.BTN_Accept:completeAnimation() --[[ @ 0]]
			f33_arg0.BTN_Accept:setTopBottom( 0.5, 0.5, -25, 25 ) --[[ @ 0]]
			f33_arg0.BTN_Accept:setAlpha( 1 ) --[[ @ 0]]
			f33_arg0.clipFinished( f33_arg0.BTN_Accept ) --[[ @ 0]]
			f33_arg0.BTN_Remove:completeAnimation() --[[ @ 0]]
			f33_arg0.BTN_Remove:setAlpha( 1 ) --[[ @ 0]]
			f33_arg0.clipFinished( f33_arg0.BTN_Remove ) --[[ @ 0]]
			f33_arg0.BTN_Invite:completeAnimation() --[[ @ 0]]
			f33_arg0.BTN_Invite:setLeftRight( 1, 1, -65, -15 ) --[[ @ 0]]
			f33_arg0.BTN_Invite:setTopBottom( 0.5, 0.5, -25, 25 ) --[[ @ 0]]
			f33_arg0.BTN_Invite:setAlpha( 0 ) --[[ @ 0]]
			f33_arg0.clipFinished( f33_arg0.BTN_Invite ) --[[ @ 0]]
			f33_arg0.TXTPending:completeAnimation() --[[ @ 0]]
			f33_arg0.TXTPending:setAlpha( 0 ) --[[ @ 0]]
			f33_arg0.clipFinished( f33_arg0.TXTPending ) --[[ @ 0]]
		end
	},
	PartyPending = {
		DefaultClip = function ( f34_arg0, f34_arg1 )
			f34_arg0:__resetProperties() --[[ @ 0]]
			f34_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f34_arg0.BTNCancelPartyInvite:completeAnimation() --[[ @ 0]]
			f34_arg0.BTNCancelPartyInvite:setAlpha( 1 ) --[[ @ 0]]
			f34_arg0.clipFinished( f34_arg0.BTNCancelPartyInvite ) --[[ @ 0]]
		end
	},
	PartyReceived = {
		DefaultClip = function ( f35_arg0, f35_arg1 )
			f35_arg0:__resetProperties() --[[ @ 0]]
			f35_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f35_arg0.BTNAcceptInviteToParty:completeAnimation() --[[ @ 0]]
			f35_arg0.BTNAcceptInviteToParty:setAlpha( 1 ) --[[ @ 0]]
			f35_arg0.clipFinished( f35_arg0.BTNAcceptInviteToParty ) --[[ @ 0]]
		end
	},
	PartyNotSent = {
		DefaultClip = function ( f36_arg0, f36_arg1 )
			f36_arg0:__resetProperties() --[[ @ 0]]
			f36_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f36_arg0.BTNInviteToParty:completeAnimation() --[[ @ 0]]
			f36_arg0.BTNInviteToParty:setAlpha( 1 ) --[[ @ 0]]
			f36_arg0.clipFinished( f36_arg0.BTNInviteToParty ) --[[ @ 0]]
		end
	},
	InParty = {
		DefaultClip = function ( f37_arg0, f37_arg1 )
			f37_arg0:__resetProperties() --[[ @ 0]]
			f37_arg0:setupElementClipCounter( 5 ) --[[ @ 0]]
			f37_arg0.BTN_Mute:completeAnimation() --[[ @ 0]]
			f37_arg0.BTN_Mute:setAlpha( 1 ) --[[ @ 0]]
			f37_arg0.clipFinished( f37_arg0.BTN_Mute ) --[[ @ 0]]
			f37_arg0.BTN_Accept:completeAnimation() --[[ @ 0]]
			f37_arg0.BTN_Accept:setAlpha( 0 ) --[[ @ 0]]
			f37_arg0.clipFinished( f37_arg0.BTN_Accept ) --[[ @ 0]]
			f37_arg0.BTN_Remove:completeAnimation() --[[ @ 0]]
			f37_arg0.BTN_Remove:setAlpha( 1 ) --[[ @ 0]]
			f37_arg0.clipFinished( f37_arg0.BTN_Remove ) --[[ @ 0]]
			f37_arg0.BTN_Invite:completeAnimation() --[[ @ 0]]
			f37_arg0.BTN_Invite:setAlpha( 0 ) --[[ @ 0]]
			f37_arg0.clipFinished( f37_arg0.BTN_Invite ) --[[ @ 0]]
			f37_arg0.TXTPending:completeAnimation() --[[ @ 0]]
			f37_arg0.TXTPending:setAlpha( 0 ) --[[ @ 0]]
			f37_arg0.clipFinished( f37_arg0.TXTPending ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.PCSocialMenu_PlayerListItem_PlayerInfos.__onClose = function ( f38_arg0 )
	f38_arg0.emblem:close() --[[ @ 0]]
	f38_arg0.TXTPlayerTag:close() --[[ @ 0]]
	f38_arg0.TXTPlayerStatus:close() --[[ @ 0]]
	f38_arg0.IMG_PlayerStatusIcon:close() --[[ @ 0]]
	f38_arg0.emptyFocusable:close() --[[ @ 0]]
	f38_arg0.BTN_Mute:close() --[[ @ 0]]
	f38_arg0.BTN_Accept:close() --[[ @ 0]]
	f38_arg0.BTN_Remove:close() --[[ @ 0]]
	f38_arg0.BTN_Invite:close() --[[ @ 0]]
	f38_arg0.DirectorLobbyLeader:close() --[[ @ 0]]
	f38_arg0.BTNInviteToParty:close() --[[ @ 0]]
	f38_arg0.BTNCancelPartyInvite:close() --[[ @ 0]]
	f38_arg0.BTNAcceptInviteToParty:close() --[[ @ 0]]
end
 --[[ @ 0]]
