-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:36
CoD.Battlenet_Checkout_CloseButton = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.Battlenet_Checkout_CloseButton.__defaultWidth = 90 --[[ @ 0]]
CoD.Battlenet_Checkout_CloseButton.__defaultHeight = 90 --[[ @ 0]]
CoD.Battlenet_Checkout_CloseButton.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.Battlenet_Checkout_CloseButton ) --[[ @ 0]]
	self.id = "Battlenet_Checkout_CloseButton" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local Image = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	Image:setRGB( 0.39, 0.44, 0.54 ) --[[ @ 0]]
	Image:setImage( RegisterImage( @"uie_pc_checkoutclose_button" ) ) --[[ @ 0]]
	self:addElement( Image ) --[[ @ 0]]
	self.Image = Image --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Invisible",
			condition = function ( menu, element, event )
				return not CoD.PCUtility.IsBattlenetCheckoutReady( f1_arg1 )
			end
		},
		{
			stateName = "Disabled",
			condition = function ( menu, element, event )
				return not CoD.PCUtility.CanCancelBattlenetCheckout( f1_arg1 )
			end
		},
		{
			stateName = "MouseDown",
			condition = function ( menu, element, event )
				return CoD.PCUtility.IsLeftMouseDown( f1_arg1 ) and IsElementInFocus( self )
			end
		}
	} ) --[[ @ 0]]
	local f1_local2 = self --[[ @ 0]]
	local f1_local3 = self.subscribeToModel --[[ @ 0]]
	local f1_local4 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local3( f1_local2, f1_local4.battlenetCheckoutStatus, function ( f5_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f5_arg0:get(),
			modelName = "battlenetCheckoutStatus"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local2 = self --[[ @ 0]]
	f1_local3 = self.subscribeToModel --[[ @ 0]]
	f1_local4 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local3( f1_local2, f1_local4["KeyPressBits.MOUSE1"], function ( f6_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f6_arg0:get(),
			modelName = "KeyPressBits.MOUSE1"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.Battlenet_Checkout_CloseButton.__resetProperties = function ( f7_arg0 )
	f7_arg0.Image:completeAnimation() --[[ @ 0]]
	f7_arg0.Image:setRGB( 0.39, 0.44, 0.54 ) --[[ @ 0]]
	f7_arg0.Image:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.Battlenet_Checkout_CloseButton.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f8_arg0, f8_arg1 )
			f8_arg0:__resetProperties() --[[ @ 0]]
			f8_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end,
		Focus = function ( f9_arg0, f9_arg1 )
			f9_arg0:__resetProperties() --[[ @ 0]]
			f9_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f9_arg0.Image:completeAnimation() --[[ @ 0]]
			f9_arg0.Image:setRGB( 1, 1, 1 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.Image ) --[[ @ 0]]
		end
	},
	Invisible = {
		DefaultClip = function ( f10_arg0, f10_arg1 )
			f10_arg0:__resetProperties() --[[ @ 0]]
			f10_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f10_arg0.Image:completeAnimation() --[[ @ 0]]
			f10_arg0.Image:setAlpha( 0 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.Image ) --[[ @ 0]]
		end
	},
	Disabled = {
		DefaultClip = function ( f11_arg0, f11_arg1 )
			f11_arg0:__resetProperties() --[[ @ 0]]
			f11_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	MouseDown = {
		DefaultClip = function ( f12_arg0, f12_arg1 )
			f12_arg0:__resetProperties() --[[ @ 0]]
			f12_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end,
		Focus = function ( f13_arg0, f13_arg1 )
			f13_arg0:__resetProperties() --[[ @ 0]]
			f13_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f13_arg0.Image:completeAnimation() --[[ @ 0]]
			f13_arg0.Image:setRGB( 0.4, 0.4, 0.4 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.Image ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
