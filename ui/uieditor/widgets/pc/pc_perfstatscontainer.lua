-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:51
require( "x64:12afa491a35484d6" ) --[[ @ 0]]

CoD.PC_PerfStatsContainer = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.PC_PerfStatsContainer.__defaultWidth = 1000 --[[ @ 0]]
CoD.PC_PerfStatsContainer.__defaultHeight = 15 --[[ @ 0]]
CoD.PC_PerfStatsContainer.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIHorizontalList.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9, 5, false ) --[[ @ 0]]
	self:setAlignment( LUI.Alignment.Left ) --[[ @ 0]]
	self:setUseCylinderMapping( false ) --[[ @ 0]]
	self:setClass( CoD.PC_PerfStatsContainer ) --[[ @ 0]]
	self.id = "PC_PerfStatsContainer" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	
	local Framerate = CoD.PC_TelemetryItem.new( f1_arg0, f1_arg1, 0, 0, 0, 93, 0, 0, 0, 15 ) --[[ @ 0]]
	Framerate.Label:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_3FC9D018B3560041" ) ) --[[ @ 0]]
	Framerate:subscribeToGlobalModel( f1_arg1, "PCTelemetry", "showFPS", function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			Framerate:setAlpha( f2_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	Framerate:subscribeToGlobalModel( f1_arg1, "GlobalModel", "PCTelemetry.framerateCounter", function ( model )
		CoD.PCUtility.SetTextFromTelemetryModel( Framerate, f1_arg1, "PCTelemetry.framerateCounter", @"hash_3FC9D018B3560041", @"hash_583A0261B143DFE7" ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( Framerate ) --[[ @ 0]]
	self.Framerate = Framerate --[[ @ 0]]
	
	local Ping = CoD.PC_TelemetryItem.new( f1_arg0, f1_arg1, 0, 0, 98, 191, 0, 0, 0, 15 ) --[[ @ 0]]
	Ping.Label:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_71D6076526ACB9ED" ) ) --[[ @ 0]]
	Ping:subscribeToGlobalModel( f1_arg1, "PCTelemetry", "showPing", function ( model )
		local f4_local0 = model:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			Ping:setAlpha( f4_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	Ping:subscribeToGlobalModel( f1_arg1, "GlobalModel", "PCTelemetry.ping", function ( model )
		CoD.PCUtility.SetTextFromTelemetryModel( Ping, f1_arg1, "PCTelemetry.ping", @"hash_71D6076526ACB9ED", @"hash_4F957C5D767CC11B" ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( Ping ) --[[ @ 0]]
	self.Ping = Ping --[[ @ 0]]
	
	local GPUTemperature = CoD.PC_TelemetryItem.new( f1_arg0, f1_arg1, 0, 0, 196, 289, 0, 0, 0, 15 ) --[[ @ 0]]
	GPUTemperature.Label.__Text_Color = function ()
		GPUTemperature.Label:setRGB( RedForHighGPUTemperature( self, f1_arg1, ColorSet.T8__BUTTON_UNSELECTED_MAIN.r, ColorSet.T8__BUTTON_UNSELECTED_MAIN.g, ColorSet.T8__BUTTON_UNSELECTED_MAIN.b ) ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	GPUTemperature.Label.__Text_Color() --[[ @ 0]]
	GPUTemperature.Label:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_6947E8112027DC63" ) ) --[[ @ 0]]
	GPUTemperature:subscribeToGlobalModel( f1_arg1, "PCTelemetry", "showGPUTemp", function ( model )
		local f7_local0 = model:get() --[[ @ 0]]
		if f7_local0 ~= nil then
			GPUTemperature:setAlpha( f7_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	GPUTemperature:subscribeToGlobalModel( f1_arg1, "GlobalModel", "PCTelemetry.GPUTemperature", function ( model )
		CoD.PCUtility.SetTextFromTelemetryModel( GPUTemperature, f1_arg1, "PCTelemetry.GPUTemperature", @"hash_6947E8112027DC63", @"hash_4EFA8FC00871DCC9" ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( GPUTemperature ) --[[ @ 0]]
	self.GPUTemperature = GPUTemperature --[[ @ 0]]
	
	local GPUTime = CoD.PC_TelemetryItem.new( f1_arg0, f1_arg1, 0, 0, 294, 387, 0, 0, 0, 15 ) --[[ @ 0]]
	GPUTime.Label:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_753F6CA872F841F6" ) ) --[[ @ 0]]
	GPUTime:subscribeToGlobalModel( f1_arg1, "PCTelemetry", "showGPUTime", function ( model )
		local f9_local0 = model:get() --[[ @ 0]]
		if f9_local0 ~= nil then
			GPUTime:setAlpha( f9_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	GPUTime:subscribeToGlobalModel( f1_arg1, "GlobalModel", "PCTelemetry.GPUTime", function ( model )
		CoD.PCUtility.SetTextFromTelemetryModel( GPUTime, f1_arg1, "PCTelemetry.GPUTime", @"hash_753F6CA872F841F6", @"hash_43F5D2E263EA11BC" ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( GPUTime ) --[[ @ 0]]
	self.GPUTime = GPUTime --[[ @ 0]]
	
	local CPUClient = CoD.PC_TelemetryItem.new( f1_arg0, f1_arg1, 0, 0, 392, 485, 0, 0, 0, 15 ) --[[ @ 0]]
	CPUClient.Label:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_124312CFF5BE0980" ) ) --[[ @ 0]]
	CPUClient:subscribeToGlobalModel( f1_arg1, "PCTelemetry", "showCPUClientTime", function ( model )
		local f11_local0 = model:get() --[[ @ 0]]
		if f11_local0 ~= nil then
			CPUClient:setAlpha( f11_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	CPUClient:subscribeToGlobalModel( f1_arg1, "GlobalModel", "PCTelemetry.CPUClientTime", function ( model )
		CoD.PCUtility.SetTextFromTelemetryModel( CPUClient, f1_arg1, "PCTelemetry.CPUClientTime", @"hash_124312CFF5BE0980", @"hash_0" ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( CPUClient ) --[[ @ 0]]
	self.CPUClient = CPUClient --[[ @ 0]]
	
	local CPURender = CoD.PC_TelemetryItem.new( f1_arg0, f1_arg1, 0, 0, 490, 583, 0, 0, 0, 15 ) --[[ @ 0]]
	CPURender.Label:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_15E3881717DAB659" ) ) --[[ @ 0]]
	CPURender:subscribeToGlobalModel( f1_arg1, "PCTelemetry", "showCPURenderTime", function ( model )
		local f13_local0 = model:get() --[[ @ 0]]
		if f13_local0 ~= nil then
			CPURender:setAlpha( f13_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	CPURender:subscribeToGlobalModel( f1_arg1, "GlobalModel", "PCTelemetry.CPURenderTime", function ( model )
		CoD.PCUtility.SetTextFromTelemetryModel( CPURender, f1_arg1, "PCTelemetry.CPURenderTime", @"hash_15E3881717DAB659", @"hash_0" ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( CPURender ) --[[ @ 0]]
	self.CPURender = CPURender --[[ @ 0]]
	
	local VRAM = CoD.PC_TelemetryItem.new( f1_arg0, f1_arg1, 0, 0, 588, 681, 0, 0, 0, 15 ) --[[ @ 0]]
	VRAM.Label:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_272EA91A24216166" ) ) --[[ @ 0]]
	VRAM:subscribeToGlobalModel( f1_arg1, "PCTelemetry", "showVRAM", function ( model )
		local f15_local0 = model:get() --[[ @ 0]]
		if f15_local0 ~= nil then
			VRAM:setAlpha( f15_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	VRAM:subscribeToGlobalModel( f1_arg1, "GlobalModel", "PCTelemetry.VRAMUsed", function ( model )
		CoD.PCUtility.SetTextFromTelemetryModel( VRAM, f1_arg1, "PCTelemetry.VRAMUsed", @"hash_272EA91A24216166", @"hash_55DD2B239F8D45CC" ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( VRAM ) --[[ @ 0]]
	self.VRAM = VRAM --[[ @ 0]]
	
	local SoundMuted = CoD.PC_TelemetryItem.new( f1_arg0, f1_arg1, 0, 0, 686, 779, 0, 0, 0, 15 ) --[[ @ 0]]
	SoundMuted.Label:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_35C01ADC09C16596" ) ) --[[ @ 0]]
	SoundMuted:subscribeToGlobalModel( f1_arg1, "PCTelemetry", "showSoundMuted", function ( model )
		local f17_local0 = model:get() --[[ @ 0]]
		if f17_local0 ~= nil then
			SoundMuted:setAlpha( f17_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	SoundMuted:subscribeToGlobalModel( f1_arg1, "GlobalModel", "PCTelemetry.SoundMuted", function ( model )
		CoD.PCUtility.SetTextFromTelemetryModel( SoundMuted, f1_arg1, "", @"hash_35C01ADC09C16596", @"hash_35C01ADC09C16596" ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( SoundMuted ) --[[ @ 0]]
	self.SoundMuted = SoundMuted --[[ @ 0]]
	
	local VoiceSuspended = CoD.PC_TelemetryItem.new( f1_arg0, f1_arg1, 0, 0, 784, 877, 0, 0, 0, 15 ) --[[ @ 0]]
	VoiceSuspended.Label:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_628A1D8932CB1CD6" ) ) --[[ @ 0]]
	VoiceSuspended:subscribeToGlobalModel( f1_arg1, "PCTelemetry", "showVoiceSuspended", function ( model )
		local f19_local0 = model:get() --[[ @ 0]]
		if f19_local0 ~= nil then
			VoiceSuspended:setAlpha( f19_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	VoiceSuspended:subscribeToGlobalModel( f1_arg1, "GlobalModel", "PCTelemetry.showVoiceSuspended", function ( model )
		CoD.PCUtility.SetTextFromTelemetryModel( VoiceSuspended, f1_arg1, "", @"hash_628A1D8932CB1CD6", @"hash_628A1D8932CB1CD6" ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( VoiceSuspended ) --[[ @ 0]]
	self.VoiceSuspended = VoiceSuspended --[[ @ 0]]
	
	local f1_local10 = GPUTemperature --[[ @ 0]]
	local f1_local11 = GPUTemperature.subscribeToModel --[[ @ 0]]
	local f1_local12 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local11( f1_local10, f1_local12["PCTelemetry.GPUTemperature"], GPUTemperature.Label.__Text_Color ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.PC_PerfStatsContainer.__onClose = function ( f21_arg0 )
	f21_arg0.Framerate:close() --[[ @ 0]]
	f21_arg0.Ping:close() --[[ @ 0]]
	f21_arg0.GPUTemperature:close() --[[ @ 0]]
	f21_arg0.GPUTime:close() --[[ @ 0]]
	f21_arg0.CPUClient:close() --[[ @ 0]]
	f21_arg0.CPURender:close() --[[ @ 0]]
	f21_arg0.VRAM:close() --[[ @ 0]]
	f21_arg0.SoundMuted:close() --[[ @ 0]]
	f21_arg0.VoiceSuspended:close() --[[ @ 0]]
end
 --[[ @ 0]]
