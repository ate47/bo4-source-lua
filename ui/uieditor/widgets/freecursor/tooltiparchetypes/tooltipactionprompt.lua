-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:51
require( "ui/uieditor/widgets/freecursor/freecursordetaileddescriptioncontainer" ) --[[ @ 0]]
require( "ui/uieditor/widgets/freecursor/freecursorheaderlabelcontainer" ) --[[ @ 0]]
require( "x64:56efca540339ed2f" ) --[[ @ 0]]
require( "x64:5e92bbb6cf7249e8" ) --[[ @ 0]]

CoD.TooltipActionPrompt = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.TooltipActionPrompt.__defaultWidth = 405 --[[ @ 0]]
CoD.TooltipActionPrompt.__defaultHeight = 377 --[[ @ 0]]
CoD.TooltipActionPrompt.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIVerticalList.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9, 0, false ) --[[ @ 0]]
	self:setAlignment( LUI.Alignment.Top ) --[[ @ 0]]
	self:setClass( CoD.TooltipActionPrompt ) --[[ @ 0]]
	self.id = "TooltipActionPrompt" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local titleContainer = CoD.freeCursorHeaderLabelContainer.new( f1_arg0, f1_arg1, 0, 0, 0, 405, 0, 0, 0, 36 ) --[[ @ 0]]
	titleContainer:linkToElementModel( self, nil, false, function ( model )
		titleContainer:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( titleContainer ) --[[ @ 0]]
	self.titleContainer = titleContainer --[[ @ 0]]
	
	local detailedDescriptionContainer = CoD.freeCursorDetailedDescriptionContainer.new( f1_arg0, f1_arg1, 0, 0, 0, 405, 0, 0, 36, 236 ) --[[ @ 0]]
	detailedDescriptionContainer:linkToElementModel( self, nil, false, function ( model )
		detailedDescriptionContainer:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( detailedDescriptionContainer ) --[[ @ 0]]
	self.detailedDescriptionContainer = detailedDescriptionContainer --[[ @ 0]]
	
	local cautionHintShort = CoD.showHideImage.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 0, 236, 241 ) --[[ @ 0]]
	cautionHintShort:mergeStateConditions( {
		{
			stateName = "Show",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueNonEmptyString( element, f1_arg1, "cautionDescription" )
			end
		}
	} ) --[[ @ 0]]
	cautionHintShort:linkToElementModel( cautionHintShort, "cautionDescription", true, function ( model )
		f1_arg0:updateElementState( cautionHintShort, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "cautionDescription"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	cautionHintShort:setRGB( 0.97, 0.92, 0.1 ) --[[ @ 0]]
	cautionHintShort:linkToElementModel( self, nil, false, function ( model )
		cautionHintShort:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( cautionHintShort ) --[[ @ 0]]
	self.cautionHintShort = cautionHintShort --[[ @ 0]]
	
	local buttonPrompts = CoD.freeCursorButtonPromptInfo.new( f1_arg0, f1_arg1, 0, 0, 0, 405, 0, 0, 241, 277 ) --[[ @ 0]]
	buttonPrompts:linkToElementModel( self, nil, false, function ( model )
		buttonPrompts:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( buttonPrompts ) --[[ @ 0]]
	self.buttonPrompts = buttonPrompts --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "DetailedDescription",
			condition = function ( menu, element, event )
				return CoD.FreeCursorUtility.IsTooltipInDetailedView( element, f1_arg1 ) and IsGamepad( f1_arg1 )
			end
		},
		{
			stateName = "DetailedDescriptionKBM",
			condition = function ( menu, element, event )
				return CoD.FreeCursorUtility.IsTooltipInDetailedView( element, f1_arg1 ) and IsMouseOrKeyboard( f1_arg1 )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "detailedDescription", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "detailedDescription"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local f1_local5 = self --[[ @ 0]]
	local f1_local6 = self.subscribeToModel --[[ @ 0]]
	local f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local6( f1_local5, f1_local7["ButtonBits." .. Enum[@"luibutton"][@"lui_key_rtrig"]], function ( f11_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f11_arg0:get(),
			modelName = "ButtonBits." .. Enum[@"luibutton"][@"lui_key_rtrig"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:linkToElementModel( self, "detailedViewPC", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "detailedViewPC"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:appendEventHandler( "input_source_changed", function ( f13_arg0, f13_arg1 )
		f13_arg1.menu = f13_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( self, f13_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	f1_local5 = self --[[ @ 0]]
	f1_local6 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local6( f1_local5, f1_local7.LastInput, function ( f14_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f14_arg0:get(),
			modelName = "LastInput"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	buttonPrompts.id = "buttonPrompts" --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	f1_local6 = self --[[ @ 0]]
	CoD.FreeCursorUtility.UseMaxVisibleChildWidth( self ) --[[ @ 0]]
	CoD.FreeCursorUtility.UseVisibleChildrenHeight( self ) --[[ @ 0]]
	return self
end
 --[[ @ 0]]
CoD.TooltipActionPrompt.__resetProperties = function ( f15_arg0 )
	f15_arg0.buttonPrompts:completeAnimation() --[[ @ 0]]
	f15_arg0.detailedDescriptionContainer:completeAnimation() --[[ @ 0]]
	f15_arg0.titleContainer:completeAnimation() --[[ @ 0]]
	f15_arg0.buttonPrompts:setAlpha( 1 ) --[[ @ 0]]
	f15_arg0.detailedDescriptionContainer:setAlpha( 1 ) --[[ @ 0]]
	f15_arg0.titleContainer:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.TooltipActionPrompt.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f16_arg0, f16_arg1 )
			f16_arg0:__resetProperties() --[[ @ 0]]
			f16_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f16_arg0.titleContainer:completeAnimation() --[[ @ 0]]
			f16_arg0.titleContainer:setAlpha( 0 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.titleContainer ) --[[ @ 0]]
			f16_arg0.detailedDescriptionContainer:completeAnimation() --[[ @ 0]]
			f16_arg0.detailedDescriptionContainer:setAlpha( 0 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.detailedDescriptionContainer ) --[[ @ 0]]
			f16_arg0.buttonPrompts:completeAnimation() --[[ @ 0]]
			f16_arg0.buttonPrompts:setAlpha( 1 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.buttonPrompts ) --[[ @ 0]]
		end,
		DetailedDescription = function ( f17_arg0, f17_arg1 )
			f17_arg0:__resetProperties() --[[ @ 0]]
			f17_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f17_local0 = function ( f18_arg0 )
				local f18_local0 = function ( f19_arg0 )
					f19_arg0:beginAnimation( 49 ) --[[ @ 0]]
					f19_arg0:setAlpha( 1 ) --[[ @ 0]]
					f19_arg0:registerEventHandler( "transition_complete_keyframe", f17_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f17_arg0.buttonPrompts:beginAnimation( 150 ) --[[ @ 0]]
				f17_arg0.buttonPrompts:registerEventHandler( "interrupted_keyframe", f17_arg0.clipInterrupted ) --[[ @ 0]]
				f17_arg0.buttonPrompts:registerEventHandler( "transition_complete_keyframe", f18_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f17_arg0.buttonPrompts:completeAnimation() --[[ @ 0]]
			f17_arg0.buttonPrompts:setAlpha( 0.01 ) --[[ @ 0]]
			f17_local0( f17_arg0.buttonPrompts ) --[[ @ 0]]
		end
	},
	DetailedDescription = {
		DefaultClip = function ( f20_arg0, f20_arg1 )
			f20_arg0:__resetProperties() --[[ @ 0]]
			f20_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f20_arg0.titleContainer:completeAnimation() --[[ @ 0]]
			f20_arg0.titleContainer:setAlpha( 1 ) --[[ @ 0]]
			f20_arg0.clipFinished( f20_arg0.titleContainer ) --[[ @ 0]]
			f20_arg0.detailedDescriptionContainer:completeAnimation() --[[ @ 0]]
			f20_arg0.detailedDescriptionContainer:setAlpha( 1 ) --[[ @ 0]]
			f20_arg0.clipFinished( f20_arg0.detailedDescriptionContainer ) --[[ @ 0]]
			f20_arg0.buttonPrompts:completeAnimation() --[[ @ 0]]
			f20_arg0.buttonPrompts:setAlpha( 1 ) --[[ @ 0]]
			f20_arg0.clipFinished( f20_arg0.buttonPrompts ) --[[ @ 0]]
		end
	},
	DetailedDescriptionKBM = {
		DefaultClip = function ( f21_arg0, f21_arg1 )
			f21_arg0:__resetProperties() --[[ @ 0]]
			f21_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f21_arg0.titleContainer:completeAnimation() --[[ @ 0]]
			f21_arg0.titleContainer:setAlpha( 1 ) --[[ @ 0]]
			f21_arg0.clipFinished( f21_arg0.titleContainer ) --[[ @ 0]]
			f21_arg0.detailedDescriptionContainer:completeAnimation() --[[ @ 0]]
			f21_arg0.detailedDescriptionContainer:setAlpha( 1 ) --[[ @ 0]]
			f21_arg0.clipFinished( f21_arg0.detailedDescriptionContainer ) --[[ @ 0]]
			f21_arg0.buttonPrompts:completeAnimation() --[[ @ 0]]
			f21_arg0.buttonPrompts:setAlpha( 0 ) --[[ @ 0]]
			f21_arg0.clipFinished( f21_arg0.buttonPrompts ) --[[ @ 0]]
		end,
		DefaultState = function ( f22_arg0, f22_arg1 )
			f22_arg0:__resetProperties() --[[ @ 0]]
			f22_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			local f22_local0 = function ( f23_arg0 )
				f22_arg0.titleContainer:beginAnimation( 110 ) --[[ @ 0]]
				f22_arg0.titleContainer:setAlpha( 0 ) --[[ @ 0]]
				f22_arg0.titleContainer:registerEventHandler( "interrupted_keyframe", f22_arg0.clipInterrupted ) --[[ @ 0]]
				f22_arg0.titleContainer:registerEventHandler( "transition_complete_keyframe", f22_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f22_arg0.titleContainer:completeAnimation() --[[ @ 0]]
			f22_arg0.titleContainer:setAlpha( 1 ) --[[ @ 0]]
			f22_local0( f22_arg0.titleContainer ) --[[ @ 0]]
			f22_arg0.detailedDescriptionContainer:completeAnimation() --[[ @ 0]]
			f22_arg0.detailedDescriptionContainer:setAlpha( 1 ) --[[ @ 0]]
			f22_arg0.detailedDescriptionContainer:playClip( "Closing" ) --[[ @ 0]]
			f22_arg0.clipFinished( f22_arg0.detailedDescriptionContainer ) --[[ @ 0]]
			local f22_local1 = function ( f24_arg0 )
				f22_arg0.buttonPrompts:beginAnimation( 110 ) --[[ @ 0]]
				f22_arg0.buttonPrompts:setAlpha( 1 ) --[[ @ 0]]
				f22_arg0.buttonPrompts:registerEventHandler( "interrupted_keyframe", f22_arg0.clipInterrupted ) --[[ @ 0]]
				f22_arg0.buttonPrompts:registerEventHandler( "transition_complete_keyframe", f22_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f22_arg0.buttonPrompts:completeAnimation() --[[ @ 0]]
			f22_arg0.buttonPrompts:setAlpha( 0 ) --[[ @ 0]]
			f22_local1( f22_arg0.buttonPrompts ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.TooltipActionPrompt.__onClose = function ( f25_arg0 )
	f25_arg0.titleContainer:close() --[[ @ 0]]
	f25_arg0.detailedDescriptionContainer:close() --[[ @ 0]]
	f25_arg0.cautionHintShort:close() --[[ @ 0]]
	f25_arg0.buttonPrompts:close() --[[ @ 0]]
end
 --[[ @ 0]]
