-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:36
require( "ui/uieditor/widgets/freecursor/freecursorcursor" ) --[[ @ 0]]
require( "ui/uieditor/widgets/freecursor/freecursorinfopanelcontainer" ) --[[ @ 0]]

CoD.freeCursorWidget = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.freeCursorWidget.__defaultWidth = 140 --[[ @ 0]]
CoD.freeCursorWidget.__defaultHeight = 140 --[[ @ 0]]
CoD.freeCursorWidget.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.freeCursorWidget ) --[[ @ 0]]
	self.id = "freeCursorWidget" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local infoPanelContainer = CoD.freeCursorInfoPanelContainer.new( f1_arg0, f1_arg1, 0.5, 0.5, 33, 438, 0.5, 0.5, 32, 995 ) --[[ @ 0]]
	infoPanelContainer:linkToElementModel( self, nil, false, function ( model )
		infoPanelContainer:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( infoPanelContainer ) --[[ @ 0]]
	self.infoPanelContainer = infoPanelContainer --[[ @ 0]]
	
	local infoPanelContainerPC = nil --[[ @ 0]]
	
	infoPanelContainerPC = CoD.freeCursorInfoPanelContainer.new( f1_arg0, f1_arg1, 0.5, 0.5, 33, 438, 0.5, 0.5, 32, 995 ) --[[ @ 0]]
	infoPanelContainerPC:setAlpha( 0 ) --[[ @ 0]]
	infoPanelContainerPC:linkToElementModel( self, nil, false, function ( model )
		infoPanelContainerPC:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( infoPanelContainerPC ) --[[ @ 0]]
	self.infoPanelContainerPC = infoPanelContainerPC --[[ @ 0]]
	
	local freeCursorCursor = CoD.freeCursorCursor.new( f1_arg0, f1_arg1, -0.01, 0.99, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	freeCursorCursor:linkToElementModel( self, nil, false, function ( model )
		freeCursorCursor:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( freeCursorCursor ) --[[ @ 0]]
	self.freeCursorCursor = freeCursorCursor --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "PCHidden",
			condition = function ( menu, element, event )
				return IsPC() and IsMouseOrKeyboard( f1_arg1 )
			end
		}
	} ) --[[ @ 0]]
	self:appendEventHandler( "input_source_changed", function ( f6_arg0, f6_arg1 )
		f6_arg1.menu = f6_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( self, f6_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local f1_local4 = self --[[ @ 0]]
	local f1_local5 = self.subscribeToModel --[[ @ 0]]
	local f1_local6 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local5( f1_local4, f1_local6.LastInput, function ( f7_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f7_arg0:get(),
			modelName = "LastInput"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	infoPanelContainer.id = "infoPanelContainer" --[[ @ 0]]
	if CoD.isPC then
		infoPanelContainerPC.id = "infoPanelContainerPC" --[[ @ 0]]
	end
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	f1_local5 = self --[[ @ 0]]
	if IsMouseOrKeyboard( f1_arg1 ) then
		CallCustomElementFunction_Self( self, "setupFreeCursor", f1_arg1 ) --[[ @ 0]]
		CoD.FreeCursorUtility.PrepareTooltipPC( self.infoPanelContainerPC, f1_arg1, f1_arg0 ) --[[ @ 0]]
		CoD.FreeCursorUtility.ConfinePositionToScreenSafe( self.infoPanelContainer, f1_arg1 ) --[[ @ 0]]
	else
		CallCustomElementFunction_Self( self, "setupFreeCursor", f1_arg1 ) --[[ @ 0]]
		CoD.FreeCursorUtility.ConfinePositionToScreenSafe( self.infoPanelContainer, f1_arg1 ) --[[ @ 0]]
	end
	return self
end
 --[[ @ 0]]
CoD.freeCursorWidget.__resetProperties = function ( f8_arg0 )
	f8_arg0.freeCursorCursor:completeAnimation() --[[ @ 0]]
	f8_arg0.infoPanelContainer:completeAnimation() --[[ @ 0]]
	f8_arg0.infoPanelContainerPC:completeAnimation() --[[ @ 0]]
	f8_arg0.freeCursorCursor:setAlpha( 1 ) --[[ @ 0]]
	f8_arg0.infoPanelContainer:setAlpha( 1 ) --[[ @ 0]]
	f8_arg0.infoPanelContainerPC:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.freeCursorWidget.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f9_arg0, f9_arg1 )
			f9_arg0:__resetProperties() --[[ @ 0]]
			f9_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	PCHidden = {
		DefaultClip = function ( f10_arg0, f10_arg1 )
			f10_arg0:__resetProperties() --[[ @ 0]]
			f10_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f10_arg0.infoPanelContainer:completeAnimation() --[[ @ 0]]
			f10_arg0.infoPanelContainer:setAlpha( 0 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.infoPanelContainer ) --[[ @ 0]]
			f10_arg0.infoPanelContainerPC:completeAnimation() --[[ @ 0]]
			f10_arg0.infoPanelContainerPC:setAlpha( 1 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.infoPanelContainerPC ) --[[ @ 0]]
			f10_arg0.freeCursorCursor:completeAnimation() --[[ @ 0]]
			f10_arg0.freeCursorCursor:setAlpha( 0 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.freeCursorCursor ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.freeCursorWidget.__onClose = function ( f11_arg0 )
	f11_arg0.infoPanelContainer:close() --[[ @ 0]]
	f11_arg0.infoPanelContainerPC:close() --[[ @ 0]]
	f11_arg0.freeCursorCursor:close() --[[ @ 0]]
end
 --[[ @ 0]]
