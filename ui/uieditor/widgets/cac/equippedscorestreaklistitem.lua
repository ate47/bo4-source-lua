-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:36
require( "ui/uieditor/widgets/cac/restricteditemwarning" ) --[[ @ 0]]

CoD.EquippedScorestreakListItem = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.EquippedScorestreakListItem.__defaultWidth = 100 --[[ @ 0]]
CoD.EquippedScorestreakListItem.__defaultHeight = 150 --[[ @ 0]]
CoD.EquippedScorestreakListItem.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.EquippedScorestreakListItem ) --[[ @ 0]]
	self.id = "EquippedScorestreakListItem" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local ScorestreaksBG = LUI.UIImage.new( 0, 0, -8, 108, 0, 0, -9, 159 ) --[[ @ 0]]
	ScorestreaksBG:setImage( RegisterImage( @"hash_262843B22FDD53AB" ) ) --[[ @ 0]]
	self:addElement( ScorestreaksBG ) --[[ @ 0]]
	self.ScorestreaksBG = ScorestreaksBG --[[ @ 0]]
	
	local ScorestreakIcon = LUI.UIImage.new( 0, 0, 3, 97, 0, 0, 10, 104 ) --[[ @ 0]]
	ScorestreakIcon:linkToElementModel( self, "icon", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			ScorestreakIcon:setImage( CoD.BaseUtility.AlreadyRegistered( f2_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( ScorestreakIcon ) --[[ @ 0]]
	self.ScorestreakIcon = ScorestreakIcon --[[ @ 0]]
	
	local ScoreCost = LUI.UIText.new( 0, 0, 0, 100, 0, 0, 118, 147 ) --[[ @ 0]]
	ScoreCost:setRGB( 0.86, 0.74, 0.25 ) --[[ @ 0]]
	ScoreCost:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	ScoreCost:setLetterSpacing( 5 ) --[[ @ 0]]
	ScoreCost:setAlignment( Enum[@"LUIAlignment"][@"hash_1FEEB12BCB0D7041"] ) --[[ @ 0]]
	ScoreCost:linkToElementModel( self, "scoreToUnlock", true, function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			ScoreCost:setText( f3_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( ScoreCost ) --[[ @ 0]]
	self.ScoreCost = ScoreCost --[[ @ 0]]
	
	local ScorestreaksBGAdd = LUI.UIImage.new( 0, 0, -8, 108, 0, 0, -9, 159 ) --[[ @ 0]]
	ScorestreaksBGAdd:setAlpha( 0 ) --[[ @ 0]]
	ScorestreaksBGAdd:setImage( RegisterImage( @"hash_262843B22FDD53AB" ) ) --[[ @ 0]]
	ScorestreaksBGAdd:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_31CC85D0A86303B0" ) ) --[[ @ 0]]
	ScorestreaksBGAdd:setShaderVector( 0, 1.5, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( ScorestreaksBGAdd ) --[[ @ 0]]
	self.ScorestreaksBGAdd = ScorestreaksBGAdd --[[ @ 0]]
	
	local RestrictedIcon = CoD.RestrictedItemWarning.new( f1_arg0, f1_arg1, 0.5, 0.5, -30, 30, 0.5, 0.5, -43, 7 ) --[[ @ 0]]
	RestrictedIcon:linkToElementModel( self, nil, false, function ( model )
		RestrictedIcon:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( RestrictedIcon ) --[[ @ 0]]
	self.RestrictedIcon = RestrictedIcon --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Empty",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualTo( element, f1_arg1, "itemIndex", CoD.CACUtility.EmptyItemIndex )
			end
		},
		{
			stateName = "Focusable",
			condition = function ( menu, element, event )
				return true
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "itemIndex", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "itemIndex"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.EquippedScorestreakListItem.__resetProperties = function ( f8_arg0 )
	f8_arg0.ScorestreakIcon:completeAnimation() --[[ @ 0]]
	f8_arg0.ScoreCost:completeAnimation() --[[ @ 0]]
	f8_arg0.ScorestreaksBGAdd:completeAnimation() --[[ @ 0]]
	f8_arg0.ScorestreakIcon:setAlpha( 1 ) --[[ @ 0]]
	f8_arg0.ScoreCost:setAlpha( 1 ) --[[ @ 0]]
	f8_arg0.ScorestreaksBGAdd:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.EquippedScorestreakListItem.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f9_arg0, f9_arg1 )
			f9_arg0:__resetProperties() --[[ @ 0]]
			f9_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	Empty = {
		DefaultClip = function ( f10_arg0, f10_arg1 )
			f10_arg0:__resetProperties() --[[ @ 0]]
			f10_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f10_arg0.ScorestreakIcon:completeAnimation() --[[ @ 0]]
			f10_arg0.ScorestreakIcon:setAlpha( 0 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.ScorestreakIcon ) --[[ @ 0]]
			f10_arg0.ScoreCost:completeAnimation() --[[ @ 0]]
			f10_arg0.ScoreCost:setAlpha( 0 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.ScoreCost ) --[[ @ 0]]
		end
	},
	Focusable = {
		DefaultClip = function ( f11_arg0, f11_arg1 )
			f11_arg0:__resetProperties() --[[ @ 0]]
			f11_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end,
		Focus = function ( f12_arg0, f12_arg1 )
			f12_arg0:__resetProperties() --[[ @ 0]]
			f12_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f12_arg0.ScorestreaksBGAdd:completeAnimation() --[[ @ 0]]
			f12_arg0.ScorestreaksBGAdd:setAlpha( 1 ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.ScorestreaksBGAdd ) --[[ @ 0]]
		end,
		GainFocus = function ( f13_arg0, f13_arg1 )
			f13_arg0:__resetProperties() --[[ @ 0]]
			f13_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f13_local0 = function ( f14_arg0 )
				f13_arg0.ScorestreaksBGAdd:beginAnimation( 200, Enum[@"hash_1F50FFF429AB1890"][@"hash_15193EA7825DC097"] ) --[[ @ 0]]
				f13_arg0.ScorestreaksBGAdd:setAlpha( 1 ) --[[ @ 0]]
				f13_arg0.ScorestreaksBGAdd:registerEventHandler( "interrupted_keyframe", f13_arg0.clipInterrupted ) --[[ @ 0]]
				f13_arg0.ScorestreaksBGAdd:registerEventHandler( "transition_complete_keyframe", f13_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f13_arg0.ScorestreaksBGAdd:completeAnimation() --[[ @ 0]]
			f13_arg0.ScorestreaksBGAdd:setAlpha( 0 ) --[[ @ 0]]
			f13_local0( f13_arg0.ScorestreaksBGAdd ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.EquippedScorestreakListItem.__onClose = function ( f15_arg0 )
	f15_arg0.ScorestreakIcon:close() --[[ @ 0]]
	f15_arg0.ScoreCost:close() --[[ @ 0]]
	f15_arg0.RestrictedIcon:close() --[[ @ 0]]
end
 --[[ @ 0]]
