-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:51
CoD.SupportSelectionDescription = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.SupportSelectionDescription.__defaultWidth = 519 --[[ @ 0]]
CoD.SupportSelectionDescription.__defaultHeight = 18 --[[ @ 0]]
CoD.SupportSelectionDescription.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIVerticalList.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9, 6, false ) --[[ @ 0]]
	self:setAlignment( LUI.Alignment.Top ) --[[ @ 0]]
	self:setClass( CoD.SupportSelectionDescription ) --[[ @ 0]]
	self.id = "SupportSelectionDescription" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local SelectedDescription = LUI.UIText.new( 0, 0, 0, 614, 0, 0, 0, 18 ) --[[ @ 0]]
	SelectedDescription:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	SelectedDescription:setZoom( 90 ) --[[ @ 0]]
	SelectedDescription:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	SelectedDescription:setLetterSpacing( 2 ) --[[ @ 0]]
	SelectedDescription:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	SelectedDescription:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	SelectedDescription:linkToElementModel( self, "desc", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			SelectedDescription:setText( Engine[@"hash_4F9F1239CFD921FE"]( f2_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( SelectedDescription ) --[[ @ 0]]
	self.SelectedDescription = SelectedDescription --[[ @ 0]]
	
	local UnlockRequirements = LUI.UIText.new( 0, 1, -1, -1, 0, 0, 24, 42 ) --[[ @ 0]]
	UnlockRequirements:setRGB( 0.39, 0.39, 0.39 ) --[[ @ 0]]
	UnlockRequirements:setZoom( 90 ) --[[ @ 0]]
	UnlockRequirements:setTTF( "dinnext_regular" ) --[[ @ 0]]
	UnlockRequirements:setLetterSpacing( 3 ) --[[ @ 0]]
	UnlockRequirements:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	UnlockRequirements:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	UnlockRequirements:linkToElementModel( self, "itemIndex", true, function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			UnlockRequirements:setText( CoD.CACUtility.GetUnlockDescription( f1_arg0, f1_arg1, f3_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( UnlockRequirements ) --[[ @ 0]]
	self.UnlockRequirements = UnlockRequirements --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Locked",
			condition = function ( menu, element, event )
				return CoD.ScorestreakSelectUtility.IsScorestreakLocked( element, menu, f1_arg1 )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "itemIndex", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "itemIndex"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.SupportSelectionDescription.__resetProperties = function ( f6_arg0 )
	f6_arg0.UnlockRequirements:completeAnimation() --[[ @ 0]]
	f6_arg0.UnlockRequirements:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.SupportSelectionDescription.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f7_arg0, f7_arg1 )
			f7_arg0:__resetProperties() --[[ @ 0]]
			f7_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f7_arg0.UnlockRequirements:completeAnimation() --[[ @ 0]]
			f7_arg0.UnlockRequirements:setAlpha( 0 ) --[[ @ 0]]
			f7_arg0.clipFinished( f7_arg0.UnlockRequirements ) --[[ @ 0]]
		end
	},
	Locked = {
		DefaultClip = function ( f8_arg0, f8_arg1 )
			f8_arg0:__resetProperties() --[[ @ 0]]
			f8_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.SupportSelectionDescription.__onClose = function ( f9_arg0 )
	f9_arg0.SelectedDescription:close() --[[ @ 0]]
	f9_arg0.UnlockRequirements:close() --[[ @ 0]]
end
 --[[ @ 0]]
