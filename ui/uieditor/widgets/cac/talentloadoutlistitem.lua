-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:51
require( "ui/uieditor/widgets/cac/cacwildcardselectionanimcontainer" ) --[[ @ 0]]
require( "ui/uieditor/widgets/cac/weaponattachmentselect/attachmentslot" ) --[[ @ 0]]
require( "ui/uieditor/widgets/cacwildcardselectionanimation" ) --[[ @ 0]]

CoD.TalentLoadoutListItem = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.TalentLoadoutListItem.__defaultWidth = 110 --[[ @ 0]]
CoD.TalentLoadoutListItem.__defaultHeight = 80 --[[ @ 0]]
CoD.TalentLoadoutListItem.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.TalentLoadoutListItem ) --[[ @ 0]]
	self.id = "TalentLoadoutListItem" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local WildcardHighlightTop = CoD.CACWildcardSelectionAnimContainer.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 0, -52, 0 ) --[[ @ 0]]
	WildcardHighlightTop:setAlpha( 0 ) --[[ @ 0]]
	WildcardHighlightTop:setZRot( 180 ) --[[ @ 0]]
	self:addElement( WildcardHighlightTop ) --[[ @ 0]]
	self.WildcardHighlightTop = WildcardHighlightTop --[[ @ 0]]
	
	local WildcardHighlightBottom = CoD.CACWildcardSelectionAnimContainer.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 1, 1, 0, 52 ) --[[ @ 0]]
	WildcardHighlightBottom:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( WildcardHighlightBottom ) --[[ @ 0]]
	self.WildcardHighlightBottom = WildcardHighlightBottom --[[ @ 0]]
	
	local TalentSlot = CoD.AttachmentSlot.new( f1_arg0, f1_arg1, 0, 0, 0, 110, 0, 0, 0, 80 ) --[[ @ 0]]
	TalentSlot:mergeStateConditions( {
		{
			stateName = "WildcardNotAvailable",
			condition = function ( menu, element, event )
				return not CoD.BonuscardUtility.CanContextualEquipForSlot( menu, element )
			end
		},
		{
			stateName = "WildcardNeeded",
			condition = function ( menu, element, event )
				return not CoD.BonuscardUtility.IsRequiredGreedWildcardEquipped( menu, element )
			end
		},
		{
			stateName = "Add",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelPathValueEqualTo( element, f1_arg1, "loadoutListItem->itemIndex", CoDShared.EmptyItemIndex )
			end
		},
		{
			stateName = "DefaultStateHiddenName",
			condition = function ( menu, element, event )
				return AlwaysTrue()
			end
		}
	} ) --[[ @ 0]]
	local f1_local4 = TalentSlot --[[ @ 0]]
	local ButtonFrameSelected = TalentSlot.subscribeToModel --[[ @ 0]]
	local f1_local6 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	ButtonFrameSelected( f1_local4, f1_local6["CustomClassList.equippedItemsChanged"], function ( f6_arg0 )
		f1_arg0:updateElementState( TalentSlot, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f6_arg0:get(),
			modelName = "CustomClassList.equippedItemsChanged"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	TalentSlot:linkToElementModel( TalentSlot, "loadoutListItem", true, function ( model )
		if TalentSlot["__stateValidation_loadoutListItem->itemIndex"] then
			TalentSlot:removeSubscription( TalentSlot["__stateValidation_loadoutListItem->itemIndex"] ) --[[ @ 0]]
			TalentSlot["__stateValidation_loadoutListItem->itemIndex"] = nil --[[ @ 0]]
		end
		if model then
			local f7_local0 = model:get() --[[ @ 0]]
			local f7_local1 = model:get() --[[ @ 0]]
			model = f7_local0 and f7_local1.itemIndex --[[ @ 0]]
		end
		if model then
			TalentSlot["__stateValidation_loadoutListItem->itemIndex"] = TalentSlot:subscribeToModel( model, function ( model )
				f1_arg0:updateElementState( TalentSlot, {
					name = "model_validation",
					menu = f1_arg0,
					controller = f1_arg1,
					modelValue = model:get(),
					modelName = "loadoutListItem->itemIndex"
				} ) --[[ @ 0]]
			end ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	TalentSlot:linkToElementModel( self, nil, false, function ( model )
		TalentSlot:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	TalentSlot.AttachmentImage.__Item_Image = function ( f10_arg0 )
		local f10_local0 = f10_arg0:get() --[[ @ 0]]
		if f10_local0 ~= nil then
			TalentSlot.AttachmentImage:setImage( RegisterImage( f10_local0 ) ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	TalentSlot:linkToElementModel( self, "loadoutListItem", true, function ( model, f11_arg1 )
		if f11_arg1["__TalentSlot.AttachmentImage.__Item_Image_loadoutListItem->image"] then
			f11_arg1:removeSubscription( f11_arg1["__TalentSlot.AttachmentImage.__Item_Image_loadoutListItem->image"] ) --[[ @ 0]]
			f11_arg1["__TalentSlot.AttachmentImage.__Item_Image_loadoutListItem->image"] = nil --[[ @ 0]]
		end
		if model then
			local f11_local0 = model:get() --[[ @ 0]]
			local f11_local1 = model:get() --[[ @ 0]]
			model = f11_local0 and f11_local1.image --[[ @ 0]]
		end
		if model then
			f11_arg1["__TalentSlot.AttachmentImage.__Item_Image_loadoutListItem->image"] = f11_arg1:subscribeToModel( model, TalentSlot.AttachmentImage.__Item_Image ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	TalentSlot.AttachmentName.TextBox.__Item_Name = function ( f12_arg0 )
		local f12_local0 = f12_arg0:get() --[[ @ 0]]
		if f12_local0 ~= nil then
			TalentSlot.AttachmentName.TextBox:setText( Engine[@"hash_4F9F1239CFD921FE"]( f12_local0 ) ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	TalentSlot:linkToElementModel( self, "loadoutListItem", true, function ( model, f13_arg1 )
		if f13_arg1["__TalentSlot.AttachmentName.TextBox.__Item_Name_loadoutListItem->name"] then
			f13_arg1:removeSubscription( f13_arg1["__TalentSlot.AttachmentName.TextBox.__Item_Name_loadoutListItem->name"] ) --[[ @ 0]]
			f13_arg1["__TalentSlot.AttachmentName.TextBox.__Item_Name_loadoutListItem->name"] = nil --[[ @ 0]]
		end
		if model then
			local f13_local0 = model:get() --[[ @ 0]]
			local f13_local1 = model:get() --[[ @ 0]]
			model = f13_local0 and f13_local1.name --[[ @ 0]]
		end
		if model then
			f13_arg1["__TalentSlot.AttachmentName.TextBox.__Item_Name_loadoutListItem->name"] = f13_arg1:subscribeToModel( model, TalentSlot.AttachmentName.TextBox.__Item_Name ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( TalentSlot ) --[[ @ 0]]
	self.TalentSlot = TalentSlot --[[ @ 0]]
	
	ButtonFrameSelected = CoD.CACWildcardSelectionAnimation.new( f1_arg0, f1_arg1, 0.5, 0.5, -55, 55, 0.5, 0.5, -40, 40 ) --[[ @ 0]]
	ButtonFrameSelected:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( ButtonFrameSelected ) --[[ @ 0]]
	self.ButtonFrameSelected = ButtonFrameSelected --[[ @ 0]]
	
	LUI.OverrideFunction_CallOriginalFirst( self, "childFocusGained", function ( element )
		CoD.CACUtility.UpdateClassWeaponModel( f1_arg0, element, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	TalentSlot.id = "TalentSlot" --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.TalentLoadoutListItem.__resetProperties = function ( f15_arg0 )
	f15_arg0.TalentSlot:completeAnimation() --[[ @ 0]]
	f15_arg0.ButtonFrameSelected:completeAnimation() --[[ @ 0]]
	f15_arg0.WildcardHighlightBottom:completeAnimation() --[[ @ 0]]
	f15_arg0.WildcardHighlightTop:completeAnimation() --[[ @ 0]]
	f15_arg0.TalentSlot:setScale( 1, 1 ) --[[ @ 0]]
	f15_arg0.ButtonFrameSelected:setAlpha( 0 ) --[[ @ 0]]
	f15_arg0.WildcardHighlightBottom:setAlpha( 0 ) --[[ @ 0]]
	f15_arg0.WildcardHighlightTop:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.TalentLoadoutListItem.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f16_arg0, f16_arg1 )
			f16_arg0:__resetProperties() --[[ @ 0]]
			f16_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end,
		ChildFocus = function ( f17_arg0, f17_arg1 )
			f17_arg0:__resetProperties() --[[ @ 0]]
			f17_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f17_arg0.TalentSlot:completeAnimation() --[[ @ 0]]
			f17_arg0.TalentSlot:setScale( 1.05, 1.05 ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.TalentSlot ) --[[ @ 0]]
		end,
		GainChildFocus = function ( f18_arg0, f18_arg1 )
			f18_arg0:__resetProperties() --[[ @ 0]]
			f18_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f18_local0 = function ( f19_arg0 )
				f18_arg0.TalentSlot:beginAnimation( 200, Enum[@"luitween"][@"luitween_ease_both"] ) --[[ @ 0]]
				f18_arg0.TalentSlot:setScale( 1.05, 1.05 ) --[[ @ 0]]
				f18_arg0.TalentSlot:registerEventHandler( "interrupted_keyframe", f18_arg0.clipInterrupted ) --[[ @ 0]]
				f18_arg0.TalentSlot:registerEventHandler( "transition_complete_keyframe", f18_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f18_arg0.TalentSlot:completeAnimation() --[[ @ 0]]
			f18_arg0.TalentSlot:setScale( 1, 1 ) --[[ @ 0]]
			f18_local0( f18_arg0.TalentSlot ) --[[ @ 0]]
		end,
		LoseChildFocus = function ( f20_arg0, f20_arg1 )
			f20_arg0:__resetProperties() --[[ @ 0]]
			f20_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f20_local0 = function ( f21_arg0 )
				f20_arg0.TalentSlot:beginAnimation( 200, Enum[@"luitween"][@"luitween_ease_both"] ) --[[ @ 0]]
				f20_arg0.TalentSlot:setScale( 1, 1 ) --[[ @ 0]]
				f20_arg0.TalentSlot:registerEventHandler( "interrupted_keyframe", f20_arg0.clipInterrupted ) --[[ @ 0]]
				f20_arg0.TalentSlot:registerEventHandler( "transition_complete_keyframe", f20_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f20_arg0.TalentSlot:completeAnimation() --[[ @ 0]]
			f20_arg0.TalentSlot:setScale( 1.05, 1.05 ) --[[ @ 0]]
			f20_local0( f20_arg0.TalentSlot ) --[[ @ 0]]
		end
	},
	WildcardHighlight = {
		DefaultClip = function ( f22_arg0, f22_arg1 )
			f22_arg0:__resetProperties() --[[ @ 0]]
			f22_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f22_arg0.WildcardHighlightTop:completeAnimation() --[[ @ 0]]
			f22_arg0.WildcardHighlightTop:setAlpha( 1 ) --[[ @ 0]]
			f22_arg0.clipFinished( f22_arg0.WildcardHighlightTop ) --[[ @ 0]]
			f22_arg0.WildcardHighlightBottom:completeAnimation() --[[ @ 0]]
			f22_arg0.WildcardHighlightBottom:setAlpha( 1 ) --[[ @ 0]]
			f22_arg0.clipFinished( f22_arg0.WildcardHighlightBottom ) --[[ @ 0]]
			f22_arg0.ButtonFrameSelected:completeAnimation() --[[ @ 0]]
			f22_arg0.ButtonFrameSelected:setAlpha( 1 ) --[[ @ 0]]
			f22_arg0.clipFinished( f22_arg0.ButtonFrameSelected ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.TalentLoadoutListItem.__onClose = function ( f23_arg0 )
	f23_arg0.WildcardHighlightTop:close() --[[ @ 0]]
	f23_arg0.WildcardHighlightBottom:close() --[[ @ 0]]
	f23_arg0.TalentSlot:close() --[[ @ 0]]
	f23_arg0.ButtonFrameSelected:close() --[[ @ 0]]
end
 --[[ @ 0]]
