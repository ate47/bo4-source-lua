-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:51
require( "ui/uieditor/widgets/cac/weaponattributesbar" ) --[[ @ 0]]

CoD.WeaponAttributeStat = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.WeaponAttributeStat.__defaultWidth = 437 --[[ @ 0]]
CoD.WeaponAttributeStat.__defaultHeight = 18 --[[ @ 0]]
CoD.WeaponAttributeStat.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.WeaponAttributeStat ) --[[ @ 0]]
	self.id = "WeaponAttributeStat" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local attributeName = LUI.UIText.new( 0, 0, -5, 139, 0, 0, 0, 18 ) --[[ @ 0]]
	attributeName:setRGB( 0.39, 0.39, 0.39 ) --[[ @ 0]]
	attributeName:setText( LocalizeToUpperString( @"hash_4F669512DF581896" ) ) --[[ @ 0]]
	attributeName:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	attributeName:setLetterSpacing( 6 ) --[[ @ 0]]
	attributeName:setAlignment( Enum[@"luialignment"][@"lui_alignment_right"] ) --[[ @ 0]]
	attributeName:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	self:addElement( attributeName ) --[[ @ 0]]
	self.attributeName = attributeName --[[ @ 0]]
	
	local EmptyAttributesBar = CoD.WeaponAttributesBar.new( f1_arg0, f1_arg1, 0, 0, 150, 393, 0, 0, 0.5, 16.5 ) --[[ @ 0]]
	self:addElement( EmptyAttributesBar ) --[[ @ 0]]
	self.EmptyAttributesBar = EmptyAttributesBar --[[ @ 0]]
	
	local weaponAttribute = LUI.UIImage.new( 0, 0, 151.5, 401.5, 0, 0, 6.5, 11.5 ) --[[ @ 0]]
	weaponAttribute:setRGB( 0.69, 0.67, 0.6 ) --[[ @ 0]]
	weaponAttribute:setImage( RegisterImage( @"uie_img_t7_menu_cacselection_infoboxameterfill" ) ) --[[ @ 0]]
	weaponAttribute:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_wipe_normal" ) ) --[[ @ 0]]
	weaponAttribute:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	weaponAttribute:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	weaponAttribute:setShaderVector( 2, 1, 0, 0, 0 ) --[[ @ 0]]
	weaponAttribute:setShaderVector( 3, 0, 0, 0, 0 ) --[[ @ 0]]
	weaponAttribute:setShaderVector( 4, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( weaponAttribute ) --[[ @ 0]]
	self.weaponAttribute = weaponAttribute --[[ @ 0]]
	
	local attachmentAttribute = LUI.UIImage.new( 0, 0, 151.5, 401.5, 0, 0, 6.5, 11.5 ) --[[ @ 0]]
	attachmentAttribute:setImage( RegisterImage( @"uie_img_t7_menu_cacselection_infoboxameterfill" ) ) --[[ @ 0]]
	attachmentAttribute:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_wipe_delta_normal" ) ) --[[ @ 0]]
	attachmentAttribute:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	attachmentAttribute:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	attachmentAttribute:setShaderVector( 2, 0, 1, 0, 0 ) --[[ @ 0]]
	attachmentAttribute:setShaderVector( 3, 0, 0, 0, 0 ) --[[ @ 0]]
	attachmentAttribute:setShaderVector( 4, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( attachmentAttribute ) --[[ @ 0]]
	self.attachmentAttribute = attachmentAttribute --[[ @ 0]]
	
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.WeaponAttributeStat.__resetProperties = function ( f2_arg0 )
	f2_arg0.attachmentAttribute:completeAnimation() --[[ @ 0]]
	f2_arg0.attachmentAttribute:setRGB( 1, 1, 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.WeaponAttributeStat.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f3_arg0, f3_arg1 )
			f3_arg0:__resetProperties() --[[ @ 0]]
			f3_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f3_arg0.attachmentAttribute:completeAnimation() --[[ @ 0]]
			f3_arg0.attachmentAttribute:setRGB( 1, 0, 0 ) --[[ @ 0]]
			f3_arg0.clipFinished( f3_arg0.attachmentAttribute ) --[[ @ 0]]
		end
	},
	Increase = {
		DefaultClip = function ( f4_arg0, f4_arg1 )
			f4_arg0:__resetProperties() --[[ @ 0]]
			f4_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f4_arg0.attachmentAttribute:completeAnimation() --[[ @ 0]]
			f4_arg0.attachmentAttribute:setRGB( 0, 1, 0 ) --[[ @ 0]]
			f4_arg0.clipFinished( f4_arg0.attachmentAttribute ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.WeaponAttributeStat.__onClose = function ( f5_arg0 )
	f5_arg0.EmptyAttributesBar:close() --[[ @ 0]]
end
 --[[ @ 0]]
