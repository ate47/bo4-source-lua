-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:51
require( "ui/uieditor/widgets/cac/allocationspentwidget" ) --[[ @ 0]]

CoD.ClassAllocation = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.ClassAllocation.__defaultWidth = 445 --[[ @ 0]]
CoD.ClassAllocation.__defaultHeight = 18 --[[ @ 0]]
CoD.ClassAllocation.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.ClassAllocation ) --[[ @ 0]]
	self.id = "ClassAllocation" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local AllocationSpent = CoD.AllocationSpentWidget.new( f1_arg0, f1_arg1, 0, 0, 0, 429, 0, 0, 1, 18 ) --[[ @ 0]]
	AllocationSpent.AllocationBar10:setAlpha( 0 ) --[[ @ 0]]
	AllocationSpent.AllocationBar11:setAlpha( 0 ) --[[ @ 0]]
	AllocationSpent.AllocationBar12:setAlpha( 0 ) --[[ @ 0]]
	AllocationSpent.AllocationBar13:setAlpha( 0 ) --[[ @ 0]]
	AllocationSpent.AllocationBar14:setAlpha( 0 ) --[[ @ 0]]
	AllocationSpent.AllocationBar15:setAlpha( 0 ) --[[ @ 0]]
	AllocationSpent.AllocationBar16:setAlpha( 0 ) --[[ @ 0]]
	AllocationSpent:registerEventHandler( "update_class", function ( element, event )
		local f2_local0 = nil --[[ @ 0]]
		UpdateAllocationBar( self, element, f1_arg1 ) --[[ @ 0]]
		if not f2_local0 then
			f2_local0 = element:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f2_local0
	end ) --[[ @ 0]]
	self:addElement( AllocationSpent ) --[[ @ 0]]
	self.AllocationSpent = AllocationSpent --[[ @ 0]]
	
	local TextBoxSlash = LUI.UIText.new( 0, 0, 277, 316, 0, 0, 0, 18 ) --[[ @ 0]]
	TextBoxSlash:setRGB( 0.58, 0.58, 0.58 ) --[[ @ 0]]
	TextBoxSlash:setAlpha( 0.5 ) --[[ @ 0]]
	TextBoxSlash:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"mp/slash" ) ) --[[ @ 0]]
	TextBoxSlash:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	TextBoxSlash:setAlignment( Enum[@"luialignment"][@"lui_alignment_right"] ) --[[ @ 0]]
	TextBoxSlash:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	self:addElement( TextBoxSlash ) --[[ @ 0]]
	self.TextBoxSlash = TextBoxSlash --[[ @ 0]]
	
	local TotalCapacityLabel = LUI.UIText.new( 0, 0, 302, 360, 0, 0, 0, 18 ) --[[ @ 0]]
	TotalCapacityLabel:setRGB( 0.58, 0.58, 0.58 ) --[[ @ 0]]
	TotalCapacityLabel:setText( GetMaxAllocationAmount( f1_arg1 ) ) --[[ @ 0]]
	TotalCapacityLabel:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	TotalCapacityLabel:setLetterSpacing( 4 ) --[[ @ 0]]
	TotalCapacityLabel:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	TotalCapacityLabel:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	self:addElement( TotalCapacityLabel ) --[[ @ 0]]
	self.TotalCapacityLabel = TotalCapacityLabel --[[ @ 0]]
	
	local CapacityValueLabel = LUI.UIText.new( 0, 0, 229, 301, 0, 0, 0, 18 ) --[[ @ 0]]
	CapacityValueLabel:setRGB( 0.58, 0.58, 0.58 ) --[[ @ 0]]
	CapacityValueLabel:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	CapacityValueLabel:setLetterSpacing( 4 ) --[[ @ 0]]
	CapacityValueLabel:setAlignment( Enum[@"luialignment"][@"lui_alignment_right"] ) --[[ @ 0]]
	CapacityValueLabel:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	CapacityValueLabel:linkToElementModel( self, "allocationSpent", true, function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			CapacityValueLabel:setText( f3_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( CapacityValueLabel ) --[[ @ 0]]
	self.CapacityValueLabel = CapacityValueLabel --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "NoAllocationBar",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelPathNil( self, f1_arg1, "allocationSpent" )
			end
		},
		{
			stateName = "Alloc17",
			condition = function ( menu, element, event )
				return IsClassAllocationInState( f1_arg1, 17 )
			end
		},
		{
			stateName = "Alloc16",
			condition = function ( menu, element, event )
				return IsClassAllocationInState( f1_arg1, 16 )
			end
		},
		{
			stateName = "Alloc15",
			condition = function ( menu, element, event )
				return IsClassAllocationInState( f1_arg1, 15 )
			end
		},
		{
			stateName = "Alloc14",
			condition = function ( menu, element, event )
				return IsClassAllocationInState( f1_arg1, 14 )
			end
		},
		{
			stateName = "Alloc13",
			condition = function ( menu, element, event )
				return IsClassAllocationInState( f1_arg1, 13 )
			end
		},
		{
			stateName = "Alloc12",
			condition = function ( menu, element, event )
				return IsClassAllocationInState( f1_arg1, 12 )
			end
		},
		{
			stateName = "Alloc11",
			condition = function ( menu, element, event )
				return IsClassAllocationInState( f1_arg1, 11 )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "allocationSpent", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "allocationSpent"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:linkToElementModel( self, "allocationSpent", true, function ( model )
		local f13_local0 = self --[[ @ 0]]
		UpdateAllocationBar( self, self.AllocationSpent, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.ClassAllocation.__resetProperties = function ( f14_arg0 )
	f14_arg0.CapacityValueLabel:completeAnimation() --[[ @ 0]]
	f14_arg0.TotalCapacityLabel:completeAnimation() --[[ @ 0]]
	f14_arg0.TextBoxSlash:completeAnimation() --[[ @ 0]]
	f14_arg0.AllocationSpent:completeAnimation() --[[ @ 0]]
	f14_arg0.CapacityValueLabel:setAlpha( 1 ) --[[ @ 0]]
	f14_arg0.TotalCapacityLabel:setAlpha( 1 ) --[[ @ 0]]
	f14_arg0.TextBoxSlash:setAlpha( 0.5 ) --[[ @ 0]]
	f14_arg0.AllocationSpent:setLeftRight( 0, 0, 0, 429 ) --[[ @ 0]]
	f14_arg0.AllocationSpent:setTopBottom( 0, 0, 1, 18 ) --[[ @ 0]]
	f14_arg0.AllocationSpent:setAlpha( 1 ) --[[ @ 0]]
	f14_arg0.AllocationSpent.AllocationBar10:setAlpha( 0 ) --[[ @ 0]]
	f14_arg0.AllocationSpent.AllocationBar11:setAlpha( 0 ) --[[ @ 0]]
	f14_arg0.AllocationSpent.AllocationBar12:setAlpha( 0 ) --[[ @ 0]]
	f14_arg0.AllocationSpent.AllocationBar13:setAlpha( 0 ) --[[ @ 0]]
	f14_arg0.AllocationSpent.AllocationBar14:setAlpha( 0 ) --[[ @ 0]]
	f14_arg0.AllocationSpent.AllocationBar15:setAlpha( 0 ) --[[ @ 0]]
	f14_arg0.AllocationSpent.AllocationBar16:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ClassAllocation.__clipsPerState = {
	NoAllocationBar = {
		DefaultClip = function ( f15_arg0, f15_arg1 )
			f15_arg0:__resetProperties() --[[ @ 0]]
			f15_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f15_arg0.AllocationSpent:completeAnimation() --[[ @ 0]]
			f15_arg0.AllocationSpent:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.AllocationSpent ) --[[ @ 0]]
			f15_arg0.TextBoxSlash:completeAnimation() --[[ @ 0]]
			f15_arg0.TextBoxSlash:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.TextBoxSlash ) --[[ @ 0]]
			f15_arg0.TotalCapacityLabel:completeAnimation() --[[ @ 0]]
			f15_arg0.TotalCapacityLabel:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.TotalCapacityLabel ) --[[ @ 0]]
			f15_arg0.CapacityValueLabel:completeAnimation() --[[ @ 0]]
			f15_arg0.CapacityValueLabel:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.CapacityValueLabel ) --[[ @ 0]]
		end
	},
	DefaultState = {
		DefaultClip = function ( f16_arg0, f16_arg1 )
			f16_arg0:__resetProperties() --[[ @ 0]]
			f16_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	Alloc17 = {
		DefaultClip = function ( f17_arg0, f17_arg1 )
			f17_arg0:__resetProperties() --[[ @ 0]]
			f17_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f17_arg0.AllocationSpent:completeAnimation() --[[ @ 0]]
			f17_arg0.AllocationSpent.AllocationBar10:completeAnimation() --[[ @ 0]]
			f17_arg0.AllocationSpent.AllocationBar11:completeAnimation() --[[ @ 0]]
			f17_arg0.AllocationSpent.AllocationBar12:completeAnimation() --[[ @ 0]]
			f17_arg0.AllocationSpent.AllocationBar13:completeAnimation() --[[ @ 0]]
			f17_arg0.AllocationSpent.AllocationBar14:completeAnimation() --[[ @ 0]]
			f17_arg0.AllocationSpent.AllocationBar15:completeAnimation() --[[ @ 0]]
			f17_arg0.AllocationSpent.AllocationBar16:completeAnimation() --[[ @ 0]]
			f17_arg0.AllocationSpent:setLeftRight( 1, 1, -636, -146 ) --[[ @ 0]]
			f17_arg0.AllocationSpent:setTopBottom( 0, 0, 2, 50 ) --[[ @ 0]]
			f17_arg0.AllocationSpent.AllocationBar10:setAlpha( 1 ) --[[ @ 0]]
			f17_arg0.AllocationSpent.AllocationBar11:setAlpha( 1 ) --[[ @ 0]]
			f17_arg0.AllocationSpent.AllocationBar12:setAlpha( 1 ) --[[ @ 0]]
			f17_arg0.AllocationSpent.AllocationBar13:setAlpha( 1 ) --[[ @ 0]]
			f17_arg0.AllocationSpent.AllocationBar14:setAlpha( 1 ) --[[ @ 0]]
			f17_arg0.AllocationSpent.AllocationBar15:setAlpha( 1 ) --[[ @ 0]]
			f17_arg0.AllocationSpent.AllocationBar16:setAlpha( 1 ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.AllocationSpent ) --[[ @ 0]]
		end
	},
	Alloc16 = {
		DefaultClip = function ( f18_arg0, f18_arg1 )
			f18_arg0:__resetProperties() --[[ @ 0]]
			f18_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f18_arg0.AllocationSpent:completeAnimation() --[[ @ 0]]
			f18_arg0.AllocationSpent.AllocationBar10:completeAnimation() --[[ @ 0]]
			f18_arg0.AllocationSpent.AllocationBar11:completeAnimation() --[[ @ 0]]
			f18_arg0.AllocationSpent.AllocationBar12:completeAnimation() --[[ @ 0]]
			f18_arg0.AllocationSpent.AllocationBar13:completeAnimation() --[[ @ 0]]
			f18_arg0.AllocationSpent.AllocationBar14:completeAnimation() --[[ @ 0]]
			f18_arg0.AllocationSpent.AllocationBar15:completeAnimation() --[[ @ 0]]
			f18_arg0.AllocationSpent:setLeftRight( 1, 1, -607, -117 ) --[[ @ 0]]
			f18_arg0.AllocationSpent:setTopBottom( 0, 0, 2, 50 ) --[[ @ 0]]
			f18_arg0.AllocationSpent.AllocationBar10:setAlpha( 1 ) --[[ @ 0]]
			f18_arg0.AllocationSpent.AllocationBar11:setAlpha( 1 ) --[[ @ 0]]
			f18_arg0.AllocationSpent.AllocationBar12:setAlpha( 1 ) --[[ @ 0]]
			f18_arg0.AllocationSpent.AllocationBar13:setAlpha( 1 ) --[[ @ 0]]
			f18_arg0.AllocationSpent.AllocationBar14:setAlpha( 1 ) --[[ @ 0]]
			f18_arg0.AllocationSpent.AllocationBar15:setAlpha( 1 ) --[[ @ 0]]
			f18_arg0.clipFinished( f18_arg0.AllocationSpent ) --[[ @ 0]]
		end
	},
	Alloc15 = {
		DefaultClip = function ( f19_arg0, f19_arg1 )
			f19_arg0:__resetProperties() --[[ @ 0]]
			f19_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f19_arg0.AllocationSpent:completeAnimation() --[[ @ 0]]
			f19_arg0.AllocationSpent.AllocationBar10:completeAnimation() --[[ @ 0]]
			f19_arg0.AllocationSpent.AllocationBar11:completeAnimation() --[[ @ 0]]
			f19_arg0.AllocationSpent.AllocationBar12:completeAnimation() --[[ @ 0]]
			f19_arg0.AllocationSpent.AllocationBar13:completeAnimation() --[[ @ 0]]
			f19_arg0.AllocationSpent.AllocationBar14:completeAnimation() --[[ @ 0]]
			f19_arg0.AllocationSpent:setLeftRight( 1, 1, -579, -89 ) --[[ @ 0]]
			f19_arg0.AllocationSpent:setTopBottom( 0, 0, 2, 50 ) --[[ @ 0]]
			f19_arg0.AllocationSpent.AllocationBar10:setAlpha( 1 ) --[[ @ 0]]
			f19_arg0.AllocationSpent.AllocationBar11:setAlpha( 1 ) --[[ @ 0]]
			f19_arg0.AllocationSpent.AllocationBar12:setAlpha( 1 ) --[[ @ 0]]
			f19_arg0.AllocationSpent.AllocationBar13:setAlpha( 1 ) --[[ @ 0]]
			f19_arg0.AllocationSpent.AllocationBar14:setAlpha( 1 ) --[[ @ 0]]
			f19_arg0.clipFinished( f19_arg0.AllocationSpent ) --[[ @ 0]]
		end
	},
	Alloc14 = {
		DefaultClip = function ( f20_arg0, f20_arg1 )
			f20_arg0:__resetProperties() --[[ @ 0]]
			f20_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f20_arg0.AllocationSpent:completeAnimation() --[[ @ 0]]
			f20_arg0.AllocationSpent.AllocationBar10:completeAnimation() --[[ @ 0]]
			f20_arg0.AllocationSpent.AllocationBar11:completeAnimation() --[[ @ 0]]
			f20_arg0.AllocationSpent.AllocationBar12:completeAnimation() --[[ @ 0]]
			f20_arg0.AllocationSpent.AllocationBar13:completeAnimation() --[[ @ 0]]
			f20_arg0.AllocationSpent:setLeftRight( 1, 1, -550, -60 ) --[[ @ 0]]
			f20_arg0.AllocationSpent:setTopBottom( 0, 0, 2, 50 ) --[[ @ 0]]
			f20_arg0.AllocationSpent.AllocationBar10:setAlpha( 1 ) --[[ @ 0]]
			f20_arg0.AllocationSpent.AllocationBar11:setAlpha( 1 ) --[[ @ 0]]
			f20_arg0.AllocationSpent.AllocationBar12:setAlpha( 1 ) --[[ @ 0]]
			f20_arg0.AllocationSpent.AllocationBar13:setAlpha( 1 ) --[[ @ 0]]
			f20_arg0.clipFinished( f20_arg0.AllocationSpent ) --[[ @ 0]]
		end
	},
	Alloc13 = {
		DefaultClip = function ( f21_arg0, f21_arg1 )
			f21_arg0:__resetProperties() --[[ @ 0]]
			f21_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f21_arg0.AllocationSpent:completeAnimation() --[[ @ 0]]
			f21_arg0.AllocationSpent.AllocationBar10:completeAnimation() --[[ @ 0]]
			f21_arg0.AllocationSpent.AllocationBar11:completeAnimation() --[[ @ 0]]
			f21_arg0.AllocationSpent.AllocationBar12:completeAnimation() --[[ @ 0]]
			f21_arg0.AllocationSpent:setLeftRight( 1, 1, -522, -32 ) --[[ @ 0]]
			f21_arg0.AllocationSpent:setTopBottom( 0, 0, 2, 50 ) --[[ @ 0]]
			f21_arg0.AllocationSpent.AllocationBar10:setAlpha( 1 ) --[[ @ 0]]
			f21_arg0.AllocationSpent.AllocationBar11:setAlpha( 1 ) --[[ @ 0]]
			f21_arg0.AllocationSpent.AllocationBar12:setAlpha( 1 ) --[[ @ 0]]
			f21_arg0.clipFinished( f21_arg0.AllocationSpent ) --[[ @ 0]]
		end
	},
	Alloc12 = {
		DefaultClip = function ( f22_arg0, f22_arg1 )
			f22_arg0:__resetProperties() --[[ @ 0]]
			f22_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f22_arg0.AllocationSpent:completeAnimation() --[[ @ 0]]
			f22_arg0.AllocationSpent.AllocationBar10:completeAnimation() --[[ @ 0]]
			f22_arg0.AllocationSpent.AllocationBar11:completeAnimation() --[[ @ 0]]
			f22_arg0.AllocationSpent:setLeftRight( 1, 1, -493, -3 ) --[[ @ 0]]
			f22_arg0.AllocationSpent:setTopBottom( 0, 0, 2, 50 ) --[[ @ 0]]
			f22_arg0.AllocationSpent.AllocationBar10:setAlpha( 1 ) --[[ @ 0]]
			f22_arg0.AllocationSpent.AllocationBar11:setAlpha( 1 ) --[[ @ 0]]
			f22_arg0.clipFinished( f22_arg0.AllocationSpent ) --[[ @ 0]]
		end
	},
	Alloc11 = {
		DefaultClip = function ( f23_arg0, f23_arg1 )
			f23_arg0:__resetProperties() --[[ @ 0]]
			f23_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f23_arg0.AllocationSpent:completeAnimation() --[[ @ 0]]
			f23_arg0.AllocationSpent.AllocationBar10:completeAnimation() --[[ @ 0]]
			f23_arg0.AllocationSpent:setLeftRight( 1, 1, -465, 25 ) --[[ @ 0]]
			f23_arg0.AllocationSpent:setTopBottom( 0, 0, 2, 50 ) --[[ @ 0]]
			f23_arg0.AllocationSpent.AllocationBar10:setAlpha( 1 ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.AllocationSpent ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.ClassAllocation.__onClose = function ( f24_arg0 )
	f24_arg0.AllocationSpent:close() --[[ @ 0]]
	f24_arg0.CapacityValueLabel:close() --[[ @ 0]]
end
 --[[ @ 0]]
