-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:36
CoD.StartMenu_Options_FlyoutIndicator = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.StartMenu_Options_FlyoutIndicator.__defaultWidth = 15 --[[ @ 0]]
CoD.StartMenu_Options_FlyoutIndicator.__defaultHeight = 100 --[[ @ 0]]
CoD.StartMenu_Options_FlyoutIndicator.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.StartMenu_Options_FlyoutIndicator ) --[[ @ 0]]
	self.id = "StartMenu_Options_FlyoutIndicator" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local Indicator = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	Indicator:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	Indicator:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( Indicator ) --[[ @ 0]]
	self.Indicator = Indicator --[[ @ 0]]
	
	local Base = LUI.UIImage.new( -0.83, 1.83, 0, 0, -0.04, 1.04, 0, 0 ) --[[ @ 0]]
	Base:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	Base:setImage( RegisterImage( @"uie_ui_menu_customgame_indicator" ) ) --[[ @ 0]]
	Base:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_F755127C95CF5B6" ) ) --[[ @ 0]]
	Base:setShaderVector( 0, 2, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( Base ) --[[ @ 0]]
	self.Base = Base --[[ @ 0]]
	
	local Focus = LUI.UIImage.new( -0.83, 1.83, 0, 0, -0.04, 1.04, 0, 0 ) --[[ @ 0]]
	Focus:setRGB( 0.84, 0.47, 0.17 ) --[[ @ 0]]
	Focus:setAlpha( 0 ) --[[ @ 0]]
	Focus:setImage( RegisterImage( @"uie_ui_menu_customgame_indicator_focused" ) ) --[[ @ 0]]
	Focus:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_31CC85D0A86303B0" ) ) --[[ @ 0]]
	Focus:setShaderVector( 0, 1.5, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( Focus ) --[[ @ 0]]
	self.Focus = Focus --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.StartMenu_Options_FlyoutIndicator.__resetProperties = function ( f2_arg0 )
	f2_arg0.Indicator:completeAnimation() --[[ @ 0]]
	f2_arg0.Base:completeAnimation() --[[ @ 0]]
	f2_arg0.Focus:completeAnimation() --[[ @ 0]]
	f2_arg0.Indicator:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	f2_arg0.Indicator:setAlpha( 0 ) --[[ @ 0]]
	f2_arg0.Base:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	f2_arg0.Base:setAlpha( 1 ) --[[ @ 0]]
	f2_arg0.Focus:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.StartMenu_Options_FlyoutIndicator.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f3_arg0, f3_arg1 )
			f3_arg0:__resetProperties() --[[ @ 0]]
			f3_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f3_arg0.Indicator:completeAnimation() --[[ @ 0]]
			f3_arg0.Indicator:setRGB( 0.46, 0.44, 0.4 ) --[[ @ 0]]
			f3_arg0.clipFinished( f3_arg0.Indicator ) --[[ @ 0]]
		end
	},
	Hidden = {
		DefaultClip = function ( f4_arg0, f4_arg1 )
			f4_arg0:__resetProperties() --[[ @ 0]]
			f4_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f4_arg0.Indicator:completeAnimation() --[[ @ 0]]
			f4_arg0.Indicator:setAlpha( 0 ) --[[ @ 0]]
			f4_arg0.clipFinished( f4_arg0.Indicator ) --[[ @ 0]]
			f4_arg0.Base:completeAnimation() --[[ @ 0]]
			f4_arg0.Base:setAlpha( 0 ) --[[ @ 0]]
			f4_arg0.clipFinished( f4_arg0.Base ) --[[ @ 0]]
		end
	},
	Custom = {
		DefaultClip = function ( f5_arg0, f5_arg1 )
			f5_arg0:__resetProperties() --[[ @ 0]]
			f5_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f5_arg0.Indicator:completeAnimation() --[[ @ 0]]
			f5_arg0.Indicator:setRGB( 0.84, 0.47, 0.17 ) --[[ @ 0]]
			f5_arg0.clipFinished( f5_arg0.Indicator ) --[[ @ 0]]
			f5_arg0.Base:completeAnimation() --[[ @ 0]]
			f5_arg0.Base:setRGB( 0.84, 0.47, 0.17 ) --[[ @ 0]]
			f5_arg0.clipFinished( f5_arg0.Base ) --[[ @ 0]]
			f5_arg0.Focus:completeAnimation() --[[ @ 0]]
			f5_arg0.Focus:setAlpha( 1 ) --[[ @ 0]]
			f5_arg0.clipFinished( f5_arg0.Focus ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
