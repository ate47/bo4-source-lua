-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:36
require( "ui/uieditor/widgets/emptyfocusable" ) --[[ @ 0]]
require( "x64:32b3a36f75bb6e0e" ) --[[ @ 0]]
require( "ui/uieditor/widgets/startmenu/options/startmenuoptionsmaincorners" ) --[[ @ 0]]
require( "ui/uieditor/widgets/startmenu/options/startmenuoptionsmainframe" ) --[[ @ 0]]

CoD.StartMenu_Options_SettingSliderList = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.StartMenu_Options_SettingSliderList.__defaultWidth = 324 --[[ @ 0]]
CoD.StartMenu_Options_SettingSliderList.__defaultHeight = 60 --[[ @ 0]]
CoD.StartMenu_Options_SettingSliderList.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.StartMenu_Options_SettingSliderList ) --[[ @ 0]]
	self.id = "StartMenu_Options_SettingSliderList" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local emptyFocusable = CoD.emptyFocusable.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	self:addElement( emptyFocusable ) --[[ @ 0]]
	self.emptyFocusable = emptyFocusable --[[ @ 0]]
	
	local LabelBacking = LUI.UIImage.new( 0, 0.61, 0, 0, 0, 0, 0, 55 ) --[[ @ 0]]
	LabelBacking:setRGB( 0.13, 0.12, 0.12 ) --[[ @ 0]]
	LabelBacking:setAlpha( 0.5 ) --[[ @ 0]]
	self:addElement( LabelBacking ) --[[ @ 0]]
	self.LabelBacking = LabelBacking --[[ @ 0]]
	
	local Frame = CoD.StartMenuOptionsMainFrame.new( f1_arg0, f1_arg1, 0, 0, 0, 198, 0, 0, 0, 55 ) --[[ @ 0]]
	Frame:setRGB( 0.78, 0.74, 0.67 ) --[[ @ 0]]
	Frame:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( Frame ) --[[ @ 0]]
	self.Frame = Frame --[[ @ 0]]
	
	local Corner = CoD.StartMenuOptionsMainCorners.new( f1_arg0, f1_arg1, 0, 0, 0, 198, 0, 0, 0, 55 ) --[[ @ 0]]
	Corner:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( Corner ) --[[ @ 0]]
	self.Corner = Corner --[[ @ 0]]
	
	local SettingLabel = LUI.UIText.new( 0, 1, 5, -129, 0, 0, 17.5, 38.5 ) --[[ @ 0]]
	SettingLabel:setRGB( 0.78, 0.74, 0.67 ) --[[ @ 0]]
	SettingLabel:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	SettingLabel:setAlignment( Enum[@"LUIAlignment"][@"hash_1FEEB12BCB0D7041"] ) --[[ @ 0]]
	SettingLabel:setAlignment( Enum[@"LUIAlignment"][@"hash_6ED4298C93DC5ED"] ) --[[ @ 0]]
	SettingLabel:linkToElementModel( self, "text", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			SettingLabel:setText( CoD.BaseUtility.AlreadyLocalized( f2_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( SettingLabel ) --[[ @ 0]]
	self.SettingLabel = SettingLabel --[[ @ 0]]
	
	local OptionCountBorder = LUI.UIImage.new( 0, 0.61, 0, 0, 1, 1, -4, 0 ) --[[ @ 0]]
	OptionCountBorder:setRGB( 0.3, 0.29, 0.28 ) --[[ @ 0]]
	OptionCountBorder:setAlpha( 0.9 ) --[[ @ 0]]
	OptionCountBorder:setImage( RegisterImage( @"uie_hud_core_loadout_panel1" ) ) --[[ @ 0]]
	OptionCountBorder:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_631E7B3C72564429" ) ) --[[ @ 0]]
	OptionCountBorder:setShaderVector( 0, 0, 0, 0.55, 0.13 ) --[[ @ 0]]
	OptionCountBorder:setShaderVector( 2, 0, 1, 0, 1 ) --[[ @ 0]]
	OptionCountBorder:setupNineSliceShader( 25, 4 ) --[[ @ 0]]
	OptionCountBorder:linkToElementModel( self, "totalOptionsCount", true, function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			OptionCountBorder:setShaderVector( 1, SetVectorComponent( 2, 1, CoD.GetVectorComponentFromString( f3_local0, 1 ), CoD.GetVectorComponentFromString( f3_local0, 2 ), CoD.GetVectorComponentFromString( f3_local0, 3 ), CoD.GetVectorComponentFromString( f3_local0, 4 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( OptionCountBorder ) --[[ @ 0]]
	self.OptionCountBorder = OptionCountBorder --[[ @ 0]]
	
	local CurrentOptionBorder = LUI.UIImage.new( 0, 0.61, 0, 0, 1, 1, -4, 0 ) --[[ @ 0]]
	CurrentOptionBorder:setRGB( 0.8, 0.8, 0.8 ) --[[ @ 0]]
	CurrentOptionBorder:setImage( RegisterImage( @"uie_hud_core_loadout_panel1" ) ) --[[ @ 0]]
	CurrentOptionBorder:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_631E7B3C72564429" ) ) --[[ @ 0]]
	CurrentOptionBorder:setShaderVector( 0, 0, 0, 0.55, 0.13 ) --[[ @ 0]]
	CurrentOptionBorder:setupNineSliceShader( 25, 4 ) --[[ @ 0]]
	CurrentOptionBorder:linkToElementModel( self, "totalOptionsCount", true, function ( model )
		local f4_local0 = model:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			CurrentOptionBorder:setShaderVector( 1, SetVectorComponent( 2, 1, CoD.GetVectorComponentFromString( f4_local0, 1 ), CoD.GetVectorComponentFromString( f4_local0, 2 ), CoD.GetVectorComponentFromString( f4_local0, 3 ), CoD.GetVectorComponentFromString( f4_local0, 4 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	CurrentOptionBorder:linkToElementModel( self, "index", true, function ( model )
		local f5_local0 = model:get() --[[ @ 0]]
		if f5_local0 ~= nil then
			CurrentOptionBorder:setShaderVector( 2, CoD.OptionsUtility.GetSettingSliderCurrentOptionPip( f1_arg1, self:getModel(), CoD.GetVectorComponentFromString( f5_local0, 1 ), CoD.GetVectorComponentFromString( f5_local0, 2 ), CoD.GetVectorComponentFromString( f5_local0, 3 ), CoD.GetVectorComponentFromString( f5_local0, 4 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( CurrentOptionBorder ) --[[ @ 0]]
	self.CurrentOptionBorder = CurrentOptionBorder --[[ @ 0]]
	
	local RightArrow = CoD.StartMenu_Options_SettingSliderArrow.new( f1_arg0, f1_arg1, 1, 1, -60, 0, 0, 0, 0, 60 ) --[[ @ 0]]
	RightArrow:setZRot( 90 ) --[[ @ 0]]
	RightArrow:registerEventHandler( "gain_focus", function ( element, event )
		local f6_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f6_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f6_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f6_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( RightArrow, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		SendButtonPressToMenuEx( menu, controller, Enum[@"LUIButton"][@"hash_4571F08AD84807E0"] ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, "ui_confirm" ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	self:addElement( RightArrow ) --[[ @ 0]]
	self.RightArrow = RightArrow --[[ @ 0]]
	
	local LeftArrow = CoD.StartMenu_Options_SettingSliderArrow.new( f1_arg0, f1_arg1, 1, 1, -123, -63, 0, 0, 0, 60 ) --[[ @ 0]]
	LeftArrow:setZRot( -90 ) --[[ @ 0]]
	LeftArrow:registerEventHandler( "gain_focus", function ( element, event )
		local f9_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f9_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f9_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f9_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( LeftArrow, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		SendButtonPressToMenuEx( menu, controller, Enum[@"LUIButton"][@"hash_1057783F8DA4AAEF"] ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, "ui_confirm" ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	self:addElement( LeftArrow ) --[[ @ 0]]
	self.LeftArrow = LeftArrow --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Custom",
			condition = function ( menu, element, event )
				return not CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg1, "isDefault" )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "isDefault", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "isDefault"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	emptyFocusable.id = "emptyFocusable" --[[ @ 0]]
	RightArrow.id = "RightArrow" --[[ @ 0]]
	LeftArrow.id = "LeftArrow" --[[ @ 0]]
	self.__defaultFocus = emptyFocusable --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.StartMenu_Options_SettingSliderList.__resetProperties = function ( f14_arg0 )
	f14_arg0.LabelBacking:completeAnimation() --[[ @ 0]]
	f14_arg0.Frame:completeAnimation() --[[ @ 0]]
	f14_arg0.Corner:completeAnimation() --[[ @ 0]]
	f14_arg0.SettingLabel:completeAnimation() --[[ @ 0]]
	f14_arg0.CurrentOptionBorder:completeAnimation() --[[ @ 0]]
	f14_arg0.LabelBacking:setRGB( 0.13, 0.12, 0.12 ) --[[ @ 0]]
	f14_arg0.LabelBacking:setAlpha( 0.5 ) --[[ @ 0]]
	f14_arg0.Frame:setAlpha( 0 ) --[[ @ 0]]
	f14_arg0.Corner:setAlpha( 0 ) --[[ @ 0]]
	f14_arg0.Corner:setScale( 1, 1 ) --[[ @ 0]]
	f14_arg0.SettingLabel:setRGB( 0.78, 0.74, 0.67 ) --[[ @ 0]]
	f14_arg0.CurrentOptionBorder:setRGB( 0.8, 0.8, 0.8 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.StartMenu_Options_SettingSliderList.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f15_arg0, f15_arg1 )
			f15_arg0:__resetProperties() --[[ @ 0]]
			f15_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end,
		ChildFocus = function ( f16_arg0, f16_arg1 )
			f16_arg0:__resetProperties() --[[ @ 0]]
			f16_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f16_arg0.LabelBacking:completeAnimation() --[[ @ 0]]
			f16_arg0.LabelBacking:setRGB( 0.78, 0.74, 0.67 ) --[[ @ 0]]
			f16_arg0.LabelBacking:setAlpha( 0.2 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.LabelBacking ) --[[ @ 0]]
			f16_arg0.Frame:completeAnimation() --[[ @ 0]]
			f16_arg0.Frame:setAlpha( 0.6 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.Frame ) --[[ @ 0]]
			f16_arg0.Corner:completeAnimation() --[[ @ 0]]
			f16_arg0.Corner:setAlpha( 1 ) --[[ @ 0]]
			f16_arg0.Corner:setScale( 0.96, 0.88 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.Corner ) --[[ @ 0]]
		end,
		GainChildFocus = function ( f17_arg0, f17_arg1 )
			f17_arg0:__resetProperties() --[[ @ 0]]
			f17_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			local f17_local0 = function ( f18_arg0 )
				f17_arg0.LabelBacking:beginAnimation( 150 ) --[[ @ 0]]
				f17_arg0.LabelBacking:setRGB( 0.78, 0.74, 0.67 ) --[[ @ 0]]
				f17_arg0.LabelBacking:setAlpha( 0.2 ) --[[ @ 0]]
				f17_arg0.LabelBacking:registerEventHandler( "interrupted_keyframe", f17_arg0.clipInterrupted ) --[[ @ 0]]
				f17_arg0.LabelBacking:registerEventHandler( "transition_complete_keyframe", f17_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f17_arg0.LabelBacking:completeAnimation() --[[ @ 0]]
			f17_arg0.LabelBacking:setRGB( 0.13, 0.12, 0.12 ) --[[ @ 0]]
			f17_arg0.LabelBacking:setAlpha( 0.5 ) --[[ @ 0]]
			f17_local0( f17_arg0.LabelBacking ) --[[ @ 0]]
			local f17_local1 = function ( f19_arg0 )
				f17_arg0.Frame:beginAnimation( 150 ) --[[ @ 0]]
				f17_arg0.Frame:setAlpha( 0.6 ) --[[ @ 0]]
				f17_arg0.Frame:registerEventHandler( "interrupted_keyframe", f17_arg0.clipInterrupted ) --[[ @ 0]]
				f17_arg0.Frame:registerEventHandler( "transition_complete_keyframe", f17_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f17_arg0.Frame:completeAnimation() --[[ @ 0]]
			f17_arg0.Frame:setAlpha( 0 ) --[[ @ 0]]
			f17_local1( f17_arg0.Frame ) --[[ @ 0]]
			local f17_local2 = function ( f20_arg0 )
				f17_arg0.Corner:beginAnimation( 150 ) --[[ @ 0]]
				f17_arg0.Corner:setAlpha( 1 ) --[[ @ 0]]
				f17_arg0.Corner:setScale( 0.96, 0.88 ) --[[ @ 0]]
				f17_arg0.Corner:registerEventHandler( "interrupted_keyframe", f17_arg0.clipInterrupted ) --[[ @ 0]]
				f17_arg0.Corner:registerEventHandler( "transition_complete_keyframe", f17_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f17_arg0.Corner:completeAnimation() --[[ @ 0]]
			f17_arg0.Corner:setAlpha( 0 ) --[[ @ 0]]
			f17_arg0.Corner:setScale( 1, 1 ) --[[ @ 0]]
			f17_local2( f17_arg0.Corner ) --[[ @ 0]]
		end
	},
	Custom = {
		DefaultClip = function ( f21_arg0, f21_arg1 )
			f21_arg0:__resetProperties() --[[ @ 0]]
			f21_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f21_arg0.SettingLabel:completeAnimation() --[[ @ 0]]
			f21_arg0.SettingLabel:setRGB( 0.93, 0.45, 0.05 ) --[[ @ 0]]
			f21_arg0.clipFinished( f21_arg0.SettingLabel ) --[[ @ 0]]
			f21_arg0.CurrentOptionBorder:completeAnimation() --[[ @ 0]]
			f21_arg0.CurrentOptionBorder:setRGB( 0.93, 0.45, 0.05 ) --[[ @ 0]]
			f21_arg0.clipFinished( f21_arg0.CurrentOptionBorder ) --[[ @ 0]]
		end,
		ChildFocus = function ( f22_arg0, f22_arg1 )
			f22_arg0:__resetProperties() --[[ @ 0]]
			f22_arg0:setupElementClipCounter( 5 ) --[[ @ 0]]
			f22_arg0.LabelBacking:completeAnimation() --[[ @ 0]]
			f22_arg0.LabelBacking:setRGB( 0.78, 0.74, 0.67 ) --[[ @ 0]]
			f22_arg0.LabelBacking:setAlpha( 0.2 ) --[[ @ 0]]
			f22_arg0.clipFinished( f22_arg0.LabelBacking ) --[[ @ 0]]
			f22_arg0.Frame:completeAnimation() --[[ @ 0]]
			f22_arg0.Frame:setAlpha( 0.6 ) --[[ @ 0]]
			f22_arg0.clipFinished( f22_arg0.Frame ) --[[ @ 0]]
			f22_arg0.Corner:completeAnimation() --[[ @ 0]]
			f22_arg0.Corner:setAlpha( 1 ) --[[ @ 0]]
			f22_arg0.Corner:setScale( 0.96, 0.88 ) --[[ @ 0]]
			f22_arg0.clipFinished( f22_arg0.Corner ) --[[ @ 0]]
			f22_arg0.SettingLabel:completeAnimation() --[[ @ 0]]
			f22_arg0.SettingLabel:setRGB( 0.93, 0.45, 0.05 ) --[[ @ 0]]
			f22_arg0.clipFinished( f22_arg0.SettingLabel ) --[[ @ 0]]
			f22_arg0.CurrentOptionBorder:completeAnimation() --[[ @ 0]]
			f22_arg0.CurrentOptionBorder:setRGB( 0.93, 0.45, 0.05 ) --[[ @ 0]]
			f22_arg0.clipFinished( f22_arg0.CurrentOptionBorder ) --[[ @ 0]]
		end,
		GainChildFocus = function ( f23_arg0, f23_arg1 )
			f23_arg0:__resetProperties() --[[ @ 0]]
			f23_arg0:setupElementClipCounter( 5 ) --[[ @ 0]]
			local f23_local0 = function ( f24_arg0 )
				f23_arg0.LabelBacking:beginAnimation( 150 ) --[[ @ 0]]
				f23_arg0.LabelBacking:setRGB( 0.78, 0.74, 0.67 ) --[[ @ 0]]
				f23_arg0.LabelBacking:setAlpha( 0.2 ) --[[ @ 0]]
				f23_arg0.LabelBacking:registerEventHandler( "interrupted_keyframe", f23_arg0.clipInterrupted ) --[[ @ 0]]
				f23_arg0.LabelBacking:registerEventHandler( "transition_complete_keyframe", f23_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f23_arg0.LabelBacking:completeAnimation() --[[ @ 0]]
			f23_arg0.LabelBacking:setRGB( 0.13, 0.12, 0.12 ) --[[ @ 0]]
			f23_arg0.LabelBacking:setAlpha( 0.5 ) --[[ @ 0]]
			f23_local0( f23_arg0.LabelBacking ) --[[ @ 0]]
			local f23_local1 = function ( f25_arg0 )
				f23_arg0.Frame:beginAnimation( 150 ) --[[ @ 0]]
				f23_arg0.Frame:setAlpha( 0.6 ) --[[ @ 0]]
				f23_arg0.Frame:registerEventHandler( "interrupted_keyframe", f23_arg0.clipInterrupted ) --[[ @ 0]]
				f23_arg0.Frame:registerEventHandler( "transition_complete_keyframe", f23_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f23_arg0.Frame:completeAnimation() --[[ @ 0]]
			f23_arg0.Frame:setAlpha( 0 ) --[[ @ 0]]
			f23_local1( f23_arg0.Frame ) --[[ @ 0]]
			local f23_local2 = function ( f26_arg0 )
				f23_arg0.Corner:beginAnimation( 150 ) --[[ @ 0]]
				f23_arg0.Corner:setAlpha( 1 ) --[[ @ 0]]
				f23_arg0.Corner:setScale( 0.96, 0.88 ) --[[ @ 0]]
				f23_arg0.Corner:registerEventHandler( "interrupted_keyframe", f23_arg0.clipInterrupted ) --[[ @ 0]]
				f23_arg0.Corner:registerEventHandler( "transition_complete_keyframe", f23_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f23_arg0.Corner:completeAnimation() --[[ @ 0]]
			f23_arg0.Corner:setAlpha( 0 ) --[[ @ 0]]
			f23_arg0.Corner:setScale( 1, 1 ) --[[ @ 0]]
			f23_local2( f23_arg0.Corner ) --[[ @ 0]]
			f23_arg0.SettingLabel:completeAnimation() --[[ @ 0]]
			f23_arg0.SettingLabel:setRGB( 0.93, 0.45, 0.05 ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.SettingLabel ) --[[ @ 0]]
			f23_arg0.CurrentOptionBorder:completeAnimation() --[[ @ 0]]
			f23_arg0.CurrentOptionBorder:setRGB( 0.93, 0.45, 0.05 ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.CurrentOptionBorder ) --[[ @ 0]]
		end,
		LoseChildFocus = function ( f27_arg0, f27_arg1 )
			f27_arg0:__resetProperties() --[[ @ 0]]
			f27_arg0:setupElementClipCounter( 5 ) --[[ @ 0]]
			local f27_local0 = function ( f28_arg0 )
				f27_arg0.LabelBacking:beginAnimation( 150 ) --[[ @ 0]]
				f27_arg0.LabelBacking:setRGB( 0.13, 0.12, 0.12 ) --[[ @ 0]]
				f27_arg0.LabelBacking:setAlpha( 0.5 ) --[[ @ 0]]
				f27_arg0.LabelBacking:registerEventHandler( "interrupted_keyframe", f27_arg0.clipInterrupted ) --[[ @ 0]]
				f27_arg0.LabelBacking:registerEventHandler( "transition_complete_keyframe", f27_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f27_arg0.LabelBacking:completeAnimation() --[[ @ 0]]
			f27_arg0.LabelBacking:setRGB( 0.78, 0.74, 0.67 ) --[[ @ 0]]
			f27_arg0.LabelBacking:setAlpha( 0.2 ) --[[ @ 0]]
			f27_local0( f27_arg0.LabelBacking ) --[[ @ 0]]
			local f27_local1 = function ( f29_arg0 )
				f27_arg0.Frame:beginAnimation( 150 ) --[[ @ 0]]
				f27_arg0.Frame:setAlpha( 0 ) --[[ @ 0]]
				f27_arg0.Frame:registerEventHandler( "interrupted_keyframe", f27_arg0.clipInterrupted ) --[[ @ 0]]
				f27_arg0.Frame:registerEventHandler( "transition_complete_keyframe", f27_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f27_arg0.Frame:completeAnimation() --[[ @ 0]]
			f27_arg0.Frame:setAlpha( 0.6 ) --[[ @ 0]]
			f27_local1( f27_arg0.Frame ) --[[ @ 0]]
			local f27_local2 = function ( f30_arg0 )
				f27_arg0.Corner:beginAnimation( 150 ) --[[ @ 0]]
				f27_arg0.Corner:setAlpha( 0 ) --[[ @ 0]]
				f27_arg0.Corner:setScale( 1, 1 ) --[[ @ 0]]
				f27_arg0.Corner:registerEventHandler( "interrupted_keyframe", f27_arg0.clipInterrupted ) --[[ @ 0]]
				f27_arg0.Corner:registerEventHandler( "transition_complete_keyframe", f27_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f27_arg0.Corner:completeAnimation() --[[ @ 0]]
			f27_arg0.Corner:setAlpha( 1 ) --[[ @ 0]]
			f27_arg0.Corner:setScale( 0.96, 0.88 ) --[[ @ 0]]
			f27_local2( f27_arg0.Corner ) --[[ @ 0]]
			f27_arg0.SettingLabel:completeAnimation() --[[ @ 0]]
			f27_arg0.SettingLabel:setRGB( 0.93, 0.45, 0.05 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.SettingLabel ) --[[ @ 0]]
			f27_arg0.CurrentOptionBorder:completeAnimation() --[[ @ 0]]
			f27_arg0.CurrentOptionBorder:setRGB( 0.93, 0.45, 0.05 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.CurrentOptionBorder ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.StartMenu_Options_SettingSliderList.__onClose = function ( f31_arg0 )
	f31_arg0.emptyFocusable:close() --[[ @ 0]]
	f31_arg0.Frame:close() --[[ @ 0]]
	f31_arg0.Corner:close() --[[ @ 0]]
	f31_arg0.SettingLabel:close() --[[ @ 0]]
	f31_arg0.OptionCountBorder:close() --[[ @ 0]]
	f31_arg0.CurrentOptionBorder:close() --[[ @ 0]]
	f31_arg0.RightArrow:close() --[[ @ 0]]
	f31_arg0.LeftArrow:close() --[[ @ 0]]
end
 --[[ @ 0]]
