-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:36
CoD.StartMenu_ConnectionMeter_PacketLossImage = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.StartMenu_ConnectionMeter_PacketLossImage.__defaultWidth = 43 --[[ @ 0]]
CoD.StartMenu_ConnectionMeter_PacketLossImage.__defaultHeight = 46 --[[ @ 0]]
CoD.StartMenu_ConnectionMeter_PacketLossImage.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.StartMenu_ConnectionMeter_PacketLossImage ) --[[ @ 0]]
	self.id = "StartMenu_ConnectionMeter_PacketLossImage" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local Level1Image = LUI.UIImage.new( 0, 0, 0, 44, 0, 0, 0, 46 ) --[[ @ 0]]
	Level1Image:setAlpha( 0 ) --[[ @ 0]]
	Level1Image:setImage( RegisterImage( @"uie_t7_icon_network_packet1" ) ) --[[ @ 0]]
	self:addElement( Level1Image ) --[[ @ 0]]
	self.Level1Image = Level1Image --[[ @ 0]]
	
	local Level2Image = LUI.UIImage.new( 0, 0, 0, 44, 0, 0, 0, 46 ) --[[ @ 0]]
	Level2Image:setAlpha( 0 ) --[[ @ 0]]
	Level2Image:setImage( RegisterImage( @"uie_t7_icon_network_packet2" ) ) --[[ @ 0]]
	self:addElement( Level2Image ) --[[ @ 0]]
	self.Level2Image = Level2Image --[[ @ 0]]
	
	local Level3Image = LUI.UIImage.new( 0, 0, 0, 44, 0, 0, 0, 46 ) --[[ @ 0]]
	Level3Image:setAlpha( 0 ) --[[ @ 0]]
	Level3Image:setImage( RegisterImage( @"uie_t7_icon_network_packet3" ) ) --[[ @ 0]]
	self:addElement( Level3Image ) --[[ @ 0]]
	self.Level3Image = Level3Image --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Level1",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueGreaterThanOrEqualTo( element, f1_arg1, "NETSTATS_PACKETLOSS", 5 )
			end
		},
		{
			stateName = "Level2",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueGreaterThanOrEqualTo( element, f1_arg1, "NETSTATS_PACKETLOSS", 2 )
			end
		},
		{
			stateName = "Level3",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueGreaterThanOrEqualTo( element, f1_arg1, "NETSTATS_PACKETLOSS", 0 )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "NETSTATS_PACKETLOSS", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "NETSTATS_PACKETLOSS"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.StartMenu_ConnectionMeter_PacketLossImage.__resetProperties = function ( f6_arg0 )
	f6_arg0.Level1Image:completeAnimation() --[[ @ 0]]
	f6_arg0.Level2Image:completeAnimation() --[[ @ 0]]
	f6_arg0.Level3Image:completeAnimation() --[[ @ 0]]
	f6_arg0.Level1Image:setAlpha( 0 ) --[[ @ 0]]
	f6_arg0.Level2Image:setAlpha( 0 ) --[[ @ 0]]
	f6_arg0.Level3Image:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.StartMenu_ConnectionMeter_PacketLossImage.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f7_arg0, f7_arg1 )
			f7_arg0:__resetProperties() --[[ @ 0]]
			f7_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	Level1 = {
		DefaultClip = function ( f8_arg0, f8_arg1 )
			f8_arg0:__resetProperties() --[[ @ 0]]
			f8_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f8_arg0.Level1Image:completeAnimation() --[[ @ 0]]
			f8_arg0.Level1Image:setAlpha( 1 ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.Level1Image ) --[[ @ 0]]
		end
	},
	Level2 = {
		DefaultClip = function ( f9_arg0, f9_arg1 )
			f9_arg0:__resetProperties() --[[ @ 0]]
			f9_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f9_arg0.Level2Image:completeAnimation() --[[ @ 0]]
			f9_arg0.Level2Image:setAlpha( 1 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.Level2Image ) --[[ @ 0]]
		end
	},
	Level3 = {
		DefaultClip = function ( f10_arg0, f10_arg1 )
			f10_arg0:__resetProperties() --[[ @ 0]]
			f10_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f10_arg0.Level3Image:completeAnimation() --[[ @ 0]]
			f10_arg0.Level3Image:setAlpha( 1 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.Level3Image ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
