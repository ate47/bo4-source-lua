-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:51
require( "ui/uieditor/widgets/callingcards/callingcards_framewidget" ) --[[ @ 0]]
require( "ui/uieditor/widgets/common/commoncornerpips01" ) --[[ @ 0]]
require( "ui/uieditor/widgets/director/directorlobbyleader" ) --[[ @ 0]]
require( "x64:188882bece551bf0" ) --[[ @ 0]]
require( "ui/uieditor/widgets/onoffvoip" ) --[[ @ 0]]

CoD.DirectorTeamMemberInfo = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.DirectorTeamMemberInfo.__defaultWidth = 400 --[[ @ 0]]
CoD.DirectorTeamMemberInfo.__defaultHeight = 85 --[[ @ 0]]
CoD.DirectorTeamMemberInfo.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.DirectorTeamMemberInfo ) --[[ @ 0]]
	self.id = "DirectorTeamMemberInfo" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local SceneBlur = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	SceneBlur:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_E2354BE557C4C7A" ) ) --[[ @ 0]]
	SceneBlur:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( SceneBlur ) --[[ @ 0]]
	self.SceneBlur = SceneBlur --[[ @ 0]]
	
	local BackingBorder = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	BackingBorder:setImage( RegisterImage( @"uie_ui_menu_specialist_hub_repeat_bg" ) ) --[[ @ 0]]
	BackingBorder:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_67C9C02F608D0A75" ) ) --[[ @ 0]]
	BackingBorder:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	BackingBorder:setupNineSliceShader( 196, 88 ) --[[ @ 0]]
	self:addElement( BackingBorder ) --[[ @ 0]]
	self.BackingBorder = BackingBorder --[[ @ 0]]
	
	local BackingBorder2 = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	BackingBorder2:setImage( RegisterImage( @"uie_ui_menu_specialist_hub_repeat_bg" ) ) --[[ @ 0]]
	BackingBorder2:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_67C9C02F608D0A75" ) ) --[[ @ 0]]
	BackingBorder2:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	BackingBorder2:setupNineSliceShader( 196, 88 ) --[[ @ 0]]
	self:addElement( BackingBorder2 ) --[[ @ 0]]
	self.BackingBorder2 = BackingBorder2 --[[ @ 0]]
	
	local BackingEmblem = LUI.UIImage.new( 0, 0, 3, 82, 0, 0, 3, 82 ) --[[ @ 0]]
	BackingEmblem:setAlpha( 0.7 ) --[[ @ 0]]
	BackingEmblem:setImage( RegisterImage( @"uie_ui_menu_specialist_hub_repeat_bg" ) ) --[[ @ 0]]
	BackingEmblem:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_16CBE95C250C6D15" ) ) --[[ @ 0]]
	BackingEmblem:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	BackingEmblem:setupNineSliceShader( 196, 88 ) --[[ @ 0]]
	self:addElement( BackingEmblem ) --[[ @ 0]]
	self.BackingEmblem = BackingEmblem --[[ @ 0]]
	
	local BackingEmblemTint = LUI.UIImage.new( 0, 0, 3, 82, 0, 0, 3, 82 ) --[[ @ 0]]
	BackingEmblemTint:setRGB( 0.04, 0.04, 0.04 ) --[[ @ 0]]
	BackingEmblemTint:setAlpha( 0.5 ) --[[ @ 0]]
	self:addElement( BackingEmblemTint ) --[[ @ 0]]
	self.BackingEmblemTint = BackingEmblemTint --[[ @ 0]]
	
	local PixelGrid = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	PixelGrid:setAlpha( 0.05 ) --[[ @ 0]]
	PixelGrid:setImage( RegisterImage( @"uie_ui_hud_notifications_pixelpattern" ) ) --[[ @ 0]]
	PixelGrid:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_16CBE95C250C6D15" ) ) --[[ @ 0]]
	PixelGrid:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	PixelGrid:setupNineSliceShader( 128, 128 ) --[[ @ 0]]
	self:addElement( PixelGrid ) --[[ @ 0]]
	self.PixelGrid = PixelGrid --[[ @ 0]]
	
	local CallingCardsFrameWidget = CoD.CallingCards_FrameWidget.new( f1_arg0, f1_arg1, 0, 0, 86, 397, 0, 0, 3, 82 ) --[[ @ 0]]
	CallingCardsFrameWidget:setRGB( 0.9, 0.9, 0.9 ) --[[ @ 0]]
	CallingCardsFrameWidget:linkToElementModel( self, "info", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			CallingCardsFrameWidget:setModel( f2_local0, f1_arg1 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( CallingCardsFrameWidget ) --[[ @ 0]]
	self.CallingCardsFrameWidget = CallingCardsFrameWidget --[[ @ 0]]
	
	local Image = LUI.UIImage.new( 0, 0, 3, 82, 0, 0, 3, 82 ) --[[ @ 0]]
	Image:setRGB( 0, 0, 0 ) --[[ @ 0]]
	Image:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( Image ) --[[ @ 0]]
	self.Image = Image --[[ @ 0]]
	
	local emblem = LUI.UIImage.new( 0, 0, 3, 82, 0, 0, 3, 82 ) --[[ @ 0]]
	emblem:setRGB( 0.9, 0.9, 0.9 ) --[[ @ 0]]
	emblem.__XUID = function ( f3_arg0 )
		local f3_local0 = f3_arg0:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			emblem:setupPlayerEmblemByXUID( f3_local0 ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	emblem:linkToElementModel( self, "info", true, function ( model, f4_arg1 )
		if f4_arg1["__emblem.__XUID_info->xuid"] then
			f4_arg1:removeSubscription( f4_arg1["__emblem.__XUID_info->xuid"] ) --[[ @ 0]]
			f4_arg1["__emblem.__XUID_info->xuid"] = nil --[[ @ 0]]
		end
		if model then
			local f4_local0 = model:get() --[[ @ 0]]
			local f4_local1 = model:get() --[[ @ 0]]
			model = f4_local0 and f4_local1.xuid --[[ @ 0]]
		end
		if model then
			f4_arg1["__emblem.__XUID_info->xuid"] = f4_arg1:subscribeToModel( model, emblem.__XUID ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( emblem ) --[[ @ 0]]
	self.emblem = emblem --[[ @ 0]]
	
	local clantag = LUI.UIText.new( 0, 0, 94, 390, 0, 0, 39, 55 ) --[[ @ 0]]
	clantag:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	clantag:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	clantag:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	clantag:setBackingType( 2 ) --[[ @ 0]]
	clantag:setBackingColor( 0.22, 0.22, 0.22 ) --[[ @ 0]]
	clantag:setBackingAlpha( 0.5 ) --[[ @ 0]]
	clantag.__String_Reference = function ( f5_arg0 )
		local f5_local0 = f5_arg0:get() --[[ @ 0]]
		if f5_local0 ~= nil then
			clantag:setText( StringAsClanTag( f5_local0 ) ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	clantag:linkToElementModel( self, "info", true, function ( model, f6_arg1 )
		if f6_arg1["__clantag.__String_Reference_info->clanTag"] then
			f6_arg1:removeSubscription( f6_arg1["__clantag.__String_Reference_info->clanTag"] ) --[[ @ 0]]
			f6_arg1["__clantag.__String_Reference_info->clanTag"] = nil --[[ @ 0]]
		end
		if model then
			local f6_local0 = model:get() --[[ @ 0]]
			local f6_local1 = model:get() --[[ @ 0]]
			model = f6_local0 and f6_local1.clanTag --[[ @ 0]]
		end
		if model then
			f6_arg1["__clantag.__String_Reference_info->clanTag"] = f6_arg1:subscribeToModel( model, clantag.__String_Reference ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( clantag ) --[[ @ 0]]
	self.clantag = clantag --[[ @ 0]]
	
	local LeaderBacking = CoD.DirectorLobbyLeader.new( f1_arg0, f1_arg1, 0, 0, 4, 18, 0.5, 1.41, -38.5, -38.5 ) --[[ @ 0]]
	LeaderBacking:setRFTMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	LeaderBacking:linkToElementModel( self, "info", true, function ( model )
		local f7_local0 = model:get() --[[ @ 0]]
		if f7_local0 ~= nil then
			LeaderBacking:setModel( f7_local0, f1_arg1 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( LeaderBacking ) --[[ @ 0]]
	self.LeaderBacking = LeaderBacking --[[ @ 0]]
	
	local VoipWaves = CoD.OnOffVoip.new( f1_arg0, f1_arg1, 0, 0, -62, 18, 0.5, 0.5, -17.5, 17.5 ) --[[ @ 0]]
	VoipWaves:setZRot( 90 ) --[[ @ 0]]
	VoipWaves:linkToElementModel( self, "info", true, function ( model )
		local f8_local0 = model:get() --[[ @ 0]]
		if f8_local0 ~= nil then
			VoipWaves:setModel( f8_local0, f1_arg1 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( VoipWaves ) --[[ @ 0]]
	self.VoipWaves = VoipWaves --[[ @ 0]]
	
	local CommonCornerPips = CoD.CommonCornerPips01.new( f1_arg0, f1_arg1, 0, 0, 3, 82, 0, 0, 3, 82 ) --[[ @ 0]]
	CommonCornerPips:setAlpha( 0.5 ) --[[ @ 0]]
	self:addElement( CommonCornerPips ) --[[ @ 0]]
	self.CommonCornerPips = CommonCornerPips --[[ @ 0]]
	
	local MemberName = CoD.DirectorLobbyMemberName.new( f1_arg0, f1_arg1, 0, 0, 94, 390, 0, 0, 11.5, 32.5 ) --[[ @ 0]]
	MemberName.__Color = function ()
		MemberName:setRGB( CoD.DirectorUtility.LobbyPlayerColorByXUIDElseDefaultSelfModel( self:getModel(), "xuid", 1, 1, 1 ) ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	MemberName.__Color() --[[ @ 0]]
	MemberName:linkToElementModel( self, "info", true, function ( model )
		local f10_local0 = model:get() --[[ @ 0]]
		if f10_local0 ~= nil then
			MemberName:setModel( f10_local0, f1_arg1 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( MemberName ) --[[ @ 0]]
	self.MemberName = MemberName --[[ @ 0]]
	
	local SelectionOverlay = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	SelectionOverlay:setAlpha( 0 ) --[[ @ 0]]
	SelectionOverlay:setMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	self:addElement( SelectionOverlay ) --[[ @ 0]]
	self.SelectionOverlay = SelectionOverlay --[[ @ 0]]
	
	local FrontendFrameSelected = LUI.UIImage.new( 0, 1, -4, 4, 0, 1, -4, 4 ) --[[ @ 0]]
	FrontendFrameSelected:setAlpha( 0 ) --[[ @ 0]]
	FrontendFrameSelected:setImage( RegisterImage( @"uie_ui_menu_store_focus_frame" ) ) --[[ @ 0]]
	FrontendFrameSelected:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_add" ) ) --[[ @ 0]]
	FrontendFrameSelected:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	FrontendFrameSelected:setupNineSliceShader( 12, 12 ) --[[ @ 0]]
	self:addElement( FrontendFrameSelected ) --[[ @ 0]]
	self.FrontendFrameSelected = FrontendFrameSelected --[[ @ 0]]
	
	local FrontendFrameSelectedGlow = LUI.UIImage.new( 0.01, 0.99, -8, 8, 0.05, 0.95, -8, 8 ) --[[ @ 0]]
	FrontendFrameSelectedGlow:setAlpha( 0 ) --[[ @ 0]]
	FrontendFrameSelectedGlow:setImage( RegisterImage( @"uie_ui_menu_store_focus_frame" ) ) --[[ @ 0]]
	FrontendFrameSelectedGlow:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_add" ) ) --[[ @ 0]]
	FrontendFrameSelectedGlow:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	FrontendFrameSelectedGlow:setupNineSliceShader( 12, 12 ) --[[ @ 0]]
	self:addElement( FrontendFrameSelectedGlow ) --[[ @ 0]]
	self.FrontendFrameSelectedGlow = FrontendFrameSelectedGlow --[[ @ 0]]
	
	MemberName:linkToElementModel( self, "xuid", true, MemberName.__Color ) --[[ @ 0]]
	self:mergeStateConditions( {
		{
			stateName = "SelectedClient",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalModelValueEqualToSelfModelValue( element, "lobbyRoot.selectedXuid", "xuid" )
			end
		},
		{
			stateName = "CannotFocus",
			condition = function ( menu, element, event )
				return not CoD.DirectorUtility.ShouldClientBeActionable( f1_arg1, self )
			end
		}
	} ) --[[ @ 0]]
	local f1_local18 = self --[[ @ 0]]
	local f1_local19 = self.subscribeToModel --[[ @ 0]]
	local f1_local20 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local19( f1_local18, f1_local20["lobbyRoot.selectedXuid"], function ( f13_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f13_arg0:get(),
			modelName = "lobbyRoot.selectedXuid"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:linkToElementModel( self, "xuid", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "xuid"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:linkToElementModel( self, "team", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "team"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	f1_local18 = self --[[ @ 0]]
	f1_local19 = self.subscribeToModel --[[ @ 0]]
	f1_local20 = DataSources.LobbyRoot.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local19( f1_local18, f1_local20.selectedXuid, function ( f16_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f16_arg0:get(),
			modelName = "selectedXuid"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local18 = self --[[ @ 0]]
	f1_local19 = self.subscribeToModel --[[ @ 0]]
	f1_local20 = DataSources.LobbyRoot.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local19( f1_local18, f1_local20.selectedXuidTeam, function ( f17_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f17_arg0:get(),
			modelName = "selectedXuidTeam"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	CallingCardsFrameWidget.id = "CallingCardsFrameWidget" --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PreLoadFunc then
		PreLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	f1_local19 = self --[[ @ 0]]
	if IsPC() then
		CoD.PCWidgetUtility.SetupRightClickableContextualPlayerMenu( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	return self
end
 --[[ @ 0]]
CoD.DirectorTeamMemberInfo.__resetProperties = function ( f18_arg0 )
	f18_arg0.emblem:completeAnimation() --[[ @ 0]]
	f18_arg0.SelectionOverlay:completeAnimation() --[[ @ 0]]
	f18_arg0.FrontendFrameSelected:completeAnimation() --[[ @ 0]]
	f18_arg0.FrontendFrameSelectedGlow:completeAnimation() --[[ @ 0]]
	f18_arg0.emblem:setRGB( 0.9, 0.9, 0.9 ) --[[ @ 0]]
	f18_arg0.SelectionOverlay:setAlpha( 0 ) --[[ @ 0]]
	f18_arg0.FrontendFrameSelected:setAlpha( 0 ) --[[ @ 0]]
	f18_arg0.FrontendFrameSelectedGlow:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorTeamMemberInfo.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f19_arg0, f19_arg1 )
			f19_arg0:__resetProperties() --[[ @ 0]]
			f19_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end,
		Focus = function ( f20_arg0, f20_arg1 )
			f20_arg0:__resetProperties() --[[ @ 0]]
			f20_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f20_arg0.emblem:completeAnimation() --[[ @ 0]]
			f20_arg0.emblem:setRGB( 1, 1, 1 ) --[[ @ 0]]
			f20_arg0.clipFinished( f20_arg0.emblem ) --[[ @ 0]]
			f20_arg0.SelectionOverlay:completeAnimation() --[[ @ 0]]
			f20_arg0.SelectionOverlay:setAlpha( 0.04 ) --[[ @ 0]]
			f20_arg0.clipFinished( f20_arg0.SelectionOverlay ) --[[ @ 0]]
		end,
		GainFocus = function ( f21_arg0, f21_arg1 )
			f21_arg0:__resetProperties() --[[ @ 0]]
			f21_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			local f21_local0 = function ( f22_arg0 )
				f21_arg0.emblem:beginAnimation( 200 ) --[[ @ 0]]
				f21_arg0.emblem:setRGB( 1, 1, 1 ) --[[ @ 0]]
				f21_arg0.emblem:registerEventHandler( "interrupted_keyframe", f21_arg0.clipInterrupted ) --[[ @ 0]]
				f21_arg0.emblem:registerEventHandler( "transition_complete_keyframe", f21_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f21_arg0.emblem:completeAnimation() --[[ @ 0]]
			f21_arg0.emblem:setRGB( 0.9, 0.9, 0.9 ) --[[ @ 0]]
			f21_local0( f21_arg0.emblem ) --[[ @ 0]]
			local f21_local1 = function ( f23_arg0 )
				f21_arg0.SelectionOverlay:beginAnimation( 200 ) --[[ @ 0]]
				f21_arg0.SelectionOverlay:setAlpha( 0.04 ) --[[ @ 0]]
				f21_arg0.SelectionOverlay:registerEventHandler( "interrupted_keyframe", f21_arg0.clipInterrupted ) --[[ @ 0]]
				f21_arg0.SelectionOverlay:registerEventHandler( "transition_complete_keyframe", f21_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f21_arg0.SelectionOverlay:completeAnimation() --[[ @ 0]]
			f21_arg0.SelectionOverlay:setAlpha( 0 ) --[[ @ 0]]
			f21_local1( f21_arg0.SelectionOverlay ) --[[ @ 0]]
		end,
		LoseFocus = function ( f24_arg0, f24_arg1 )
			f24_arg0:__resetProperties() --[[ @ 0]]
			f24_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			local f24_local0 = function ( f25_arg0 )
				f24_arg0.emblem:beginAnimation( 200 ) --[[ @ 0]]
				f24_arg0.emblem:setRGB( 0.9, 0.9, 0.9 ) --[[ @ 0]]
				f24_arg0.emblem:registerEventHandler( "interrupted_keyframe", f24_arg0.clipInterrupted ) --[[ @ 0]]
				f24_arg0.emblem:registerEventHandler( "transition_complete_keyframe", f24_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f24_arg0.emblem:completeAnimation() --[[ @ 0]]
			f24_arg0.emblem:setRGB( 1, 1, 1 ) --[[ @ 0]]
			f24_local0( f24_arg0.emblem ) --[[ @ 0]]
			local f24_local1 = function ( f26_arg0 )
				f24_arg0.SelectionOverlay:beginAnimation( 200 ) --[[ @ 0]]
				f24_arg0.SelectionOverlay:setAlpha( 0 ) --[[ @ 0]]
				f24_arg0.SelectionOverlay:registerEventHandler( "interrupted_keyframe", f24_arg0.clipInterrupted ) --[[ @ 0]]
				f24_arg0.SelectionOverlay:registerEventHandler( "transition_complete_keyframe", f24_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f24_arg0.SelectionOverlay:completeAnimation() --[[ @ 0]]
			f24_arg0.SelectionOverlay:setAlpha( 0.04 ) --[[ @ 0]]
			f24_local1( f24_arg0.SelectionOverlay ) --[[ @ 0]]
		end
	},
	SelectedClient = {
		DefaultClip = function ( f27_arg0, f27_arg1 )
			f27_arg0:__resetProperties() --[[ @ 0]]
			f27_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f27_arg0.emblem:completeAnimation() --[[ @ 0]]
			f27_arg0.emblem:setRGB( 1, 1, 1 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.emblem ) --[[ @ 0]]
			f27_arg0.SelectionOverlay:completeAnimation() --[[ @ 0]]
			f27_arg0.SelectionOverlay:setAlpha( 0.04 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.SelectionOverlay ) --[[ @ 0]]
			f27_arg0.FrontendFrameSelected:completeAnimation() --[[ @ 0]]
			f27_arg0.FrontendFrameSelected:setAlpha( 1 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.FrontendFrameSelected ) --[[ @ 0]]
			f27_arg0.FrontendFrameSelectedGlow:completeAnimation() --[[ @ 0]]
			f27_arg0.FrontendFrameSelectedGlow:setAlpha( 1 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.FrontendFrameSelectedGlow ) --[[ @ 0]]
		end
	},
	CannotFocus = {
		DefaultClip = function ( f28_arg0, f28_arg1 )
			f28_arg0:__resetProperties() --[[ @ 0]]
			f28_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.DirectorTeamMemberInfo.__onClose = function ( f29_arg0 )
	f29_arg0.CallingCardsFrameWidget:close() --[[ @ 0]]
	f29_arg0.emblem:close() --[[ @ 0]]
	f29_arg0.clantag:close() --[[ @ 0]]
	f29_arg0.LeaderBacking:close() --[[ @ 0]]
	f29_arg0.VoipWaves:close() --[[ @ 0]]
	f29_arg0.CommonCornerPips:close() --[[ @ 0]]
	f29_arg0.MemberName:close() --[[ @ 0]]
end
 --[[ @ 0]]
