-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:36
require( "ui/uieditor/widgets/director/directormapandgametypecontainer" ) --[[ @ 0]]
require( "ui/uieditor/widgets/fileshare/filesharespinner" ) --[[ @ 0]]
require( "x64:6a3a4f3b51153287" ) --[[ @ 0]]
require( "ui/uieditor/widgets/pc/pc_tooltipexceptionwidget" ) --[[ @ 0]]

CoD.DirectorMapAndGameType = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.DirectorMapAndGameType.__defaultWidth = 356 --[[ @ 0]]
CoD.DirectorMapAndGameType.__defaultHeight = 200 --[[ @ 0]]
CoD.DirectorMapAndGameType.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	CoD.BaseUtility.CreateGlobalModel( "lobbyRoot.theaterDataDownloaded" ) --[[ @ 0]]
	CoD.BaseUtility.CreateGlobalModel( "lobbyRoot.theaterDownloadPercent" ) --[[ @ 0]]
	self:setClass( CoD.DirectorMapAndGameType ) --[[ @ 0]]
	self.id = "DirectorMapAndGameType" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local MapVoteNoDemoSelected = CoD.MapVoteNoDemoSelected.new( f1_arg0, f1_arg1, 0, 0, 0, 356, 0, 0, 0, 200 ) --[[ @ 0]]
	self:addElement( MapVoteNoDemoSelected ) --[[ @ 0]]
	self.MapVoteNoDemoSelected = MapVoteNoDemoSelected --[[ @ 0]]
	
	local MapImage = CoD.DirectorMapAndGameTypeContainer.new( f1_arg0, f1_arg1, 0, 0, 0, 356, 0, 0, 0, 200 ) --[[ @ 0]]
	MapImage:subscribeToGlobalModel( f1_arg1, "MapVote", "mapVoteMapNext", function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			MapImage.DirectorMapAndGameInternal.MapImage:setImage( RegisterImage( MapNameToMapImage( f2_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	MapImage:subscribeToGlobalModel( f1_arg1, "MapVote", "mapVoteGameModeNext", function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			MapImage.DirectorMapAndGameInternal.DirectorMapAndGameTypeInternalTitles.Label:setText( CoD.GameTypeUtility.GameTypeXHashToLocalizedGameType( f3_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	MapImage:subscribeToGlobalModel( f1_arg1, "MapVote", "mapVoteMapNext", function ( model )
		local f4_local0 = model:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			MapImage.DirectorMapAndGameInternal.DirectorMapAndGameTypeInternalTitles.SubTitle:setText( MapNameToLocalizedMapName( f4_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( MapImage ) --[[ @ 0]]
	self.MapImage = MapImage --[[ @ 0]]
	
	local FileshareSpinner = CoD.FileshareSpinner.new( f1_arg0, f1_arg1, 0.5, 0.5, -48, 48, 0.5, 0.5, -36, 60 ) --[[ @ 0]]
	FileshareSpinner:mergeStateConditions( {
		{
			stateName = "Visible",
			condition = function ( menu, element, event )
				return AlwaysTrue()
			end
		}
	} ) --[[ @ 0]]
	FileshareSpinner:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( FileshareSpinner ) --[[ @ 0]]
	self.FileshareSpinner = FileshareSpinner --[[ @ 0]]
	
	local DownloadPercent = LUI.UIText.new( 0.5, 0.5, -186.5, 186.5, 0, 0, 149, 187 ) --[[ @ 0]]
	DownloadPercent:setAlpha( 0 ) --[[ @ 0]]
	DownloadPercent:setTTF( "default" ) --[[ @ 0]]
	DownloadPercent:setAlignment( Enum[@"LUIAlignment"][@"hash_1FEEB12BCB0D7041"] ) --[[ @ 0]]
	DownloadPercent:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	DownloadPercent:subscribeToGlobalModel( f1_arg1, "LobbyRoot", "theaterDownloadPercent", function ( model )
		if model:get() ~= nil then
			DownloadPercent:setText( FileshareGetDownloadProgress() ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( DownloadPercent ) --[[ @ 0]]
	self.DownloadPercent = DownloadPercent --[[ @ 0]]
	
	local TeamName = LUI.UIText.new( 0, 0, 149.5, 349.5, 0, 0, 163, 193 ) --[[ @ 0]]
	TeamName:setTTF( "default" ) --[[ @ 0]]
	TeamName:setAlignment( Enum[@"LUIAlignment"][@"hash_3830CFD395E6AA0A"] ) --[[ @ 0]]
	TeamName:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	TeamName:subscribeToGlobalModel( f1_arg1, "MapVote", "mapVoteMapNext", function ( model )
		local f7_local0 = model:get() --[[ @ 0]]
		if f7_local0 ~= nil then
			TeamName:setText( Engine[@"hash_4F9F1239CFD921FE"]( CoD.MapUtility.GetMapTeamNameFromMapID( f7_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( TeamName ) --[[ @ 0]]
	self.TeamName = TeamName --[[ @ 0]]
	
	local PCTooltipExceptionWidget = nil --[[ @ 0]]
	
	PCTooltipExceptionWidget = CoD.PC_TooltipExceptionWidget.new( f1_arg0, f1_arg1, 0.5, 0.5, -178, 178, 1, 1, -28, 0 ) --[[ @ 0]]
	PCTooltipExceptionWidget:setAlpha( 0 ) --[[ @ 0]]
	PCTooltipExceptionWidget.Tip:setText( LocalizeToUpperString( @"hash_11496B17DC3093F9" ) ) --[[ @ 0]]
	self:addElement( PCTooltipExceptionWidget ) --[[ @ 0]]
	self.PCTooltipExceptionWidget = PCTooltipExceptionWidget --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "NoDemoSelected",
			condition = function ( menu, element, event )
				return CoD.DirectorUtility.ShowDirectorTheater( f1_arg1 ) and not IsFilmSelected()
			end
		},
		{
			stateName = "DemoSelectedDownloading",
			condition = function ( menu, element, event )
				local f9_local0 = CoD.DirectorUtility.ShowDirectorTheater( f1_arg1 ) --[[ @ 0]]
				if f9_local0 then
					f9_local0 = IsFilmSelected() --[[ @ 0]]
					if f9_local0 then
						f9_local0 = not CoD.ModelUtility.IsGlobalModelValueGreaterThan( "lobbyRoot.theaterDownloadPercent", 99 ) --[[ @ 0]]
					end
				end
				return f9_local0
			end
		}
	} ) --[[ @ 0]]
	local f1_local7 = self --[[ @ 0]]
	local f1_local8 = self.subscribeToModel --[[ @ 0]]
	local f1_local9 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local8( f1_local7, f1_local9["lobbyRoot.lobbyNav"], function ( f10_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f10_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = self --[[ @ 0]]
	f1_local8 = self.subscribeToModel --[[ @ 0]]
	f1_local9 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local8( f1_local7, f1_local9["lobbyRoot.theaterDataDownloaded"], function ( f11_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f11_arg0:get(),
			modelName = "lobbyRoot.theaterDataDownloaded"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = self --[[ @ 0]]
	f1_local8 = self.subscribeToModel --[[ @ 0]]
	f1_local9 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local8( f1_local7, f1_local9["lobbyRoot.theaterDownloadPercent"], function ( f12_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f12_arg0:get(),
			modelName = "lobbyRoot.theaterDownloadPercent"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	MapVoteNoDemoSelected.id = "MapVoteNoDemoSelected" --[[ @ 0]]
	MapImage.id = "MapImage" --[[ @ 0]]
	self.__defaultFocus = MapImage --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.DirectorMapAndGameType.__resetProperties = function ( f13_arg0 )
	f13_arg0.MapVoteNoDemoSelected:completeAnimation() --[[ @ 0]]
	f13_arg0.MapImage:completeAnimation() --[[ @ 0]]
	f13_arg0.DownloadPercent:completeAnimation() --[[ @ 0]]
	f13_arg0.FileshareSpinner:completeAnimation() --[[ @ 0]]
	f13_arg0.PCTooltipExceptionWidget:completeAnimation() --[[ @ 0]]
	f13_arg0.TeamName:completeAnimation() --[[ @ 0]]
	f13_arg0.MapVoteNoDemoSelected:setAlpha( 1 ) --[[ @ 0]]
	f13_arg0.MapImage:setAlpha( 1 ) --[[ @ 0]]
	f13_arg0.DownloadPercent:setAlpha( 0 ) --[[ @ 0]]
	f13_arg0.FileshareSpinner:setAlpha( 0 ) --[[ @ 0]]
	f13_arg0.PCTooltipExceptionWidget:setAlpha( 0 ) --[[ @ 0]]
	f13_arg0.TeamName:setLeftRight( 0, 0, 149.5, 349.5 ) --[[ @ 0]]
	f13_arg0.TeamName:setTopBottom( 0, 0, 163, 193 ) --[[ @ 0]]
	f13_arg0.TeamName:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorMapAndGameType.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f14_arg0, f14_arg1 )
			f14_arg0:__resetProperties() --[[ @ 0]]
			f14_arg0:setupElementClipCounter( 5 ) --[[ @ 0]]
			f14_arg0.MapVoteNoDemoSelected:completeAnimation() --[[ @ 0]]
			f14_arg0.MapVoteNoDemoSelected:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.MapVoteNoDemoSelected ) --[[ @ 0]]
			f14_arg0.MapImage:completeAnimation() --[[ @ 0]]
			f14_arg0.MapImage:setAlpha( 1 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.MapImage ) --[[ @ 0]]
			f14_arg0.FileshareSpinner:completeAnimation() --[[ @ 0]]
			f14_arg0.FileshareSpinner:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.FileshareSpinner ) --[[ @ 0]]
			f14_arg0.DownloadPercent:completeAnimation() --[[ @ 0]]
			f14_arg0.DownloadPercent:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.DownloadPercent ) --[[ @ 0]]
			f14_arg0.PCTooltipExceptionWidget:completeAnimation() --[[ @ 0]]
			f14_arg0.PCTooltipExceptionWidget:setAlpha( 1 ) --[[ @ 0]]
			f14_arg0.PCTooltipExceptionWidget:playClip( "DefaultClip" ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.PCTooltipExceptionWidget ) --[[ @ 0]]
		end
	},
	NoDemoSelected = {
		DefaultClip = function ( f15_arg0, f15_arg1 )
			f15_arg0:__resetProperties() --[[ @ 0]]
			f15_arg0:setupElementClipCounter( 5 ) --[[ @ 0]]
			f15_arg0.MapVoteNoDemoSelected:completeAnimation() --[[ @ 0]]
			f15_arg0.MapVoteNoDemoSelected:setAlpha( 1 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.MapVoteNoDemoSelected ) --[[ @ 0]]
			f15_arg0.MapImage:completeAnimation() --[[ @ 0]]
			f15_arg0.MapImage:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.MapImage ) --[[ @ 0]]
			f15_arg0.FileshareSpinner:completeAnimation() --[[ @ 0]]
			f15_arg0.FileshareSpinner:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.FileshareSpinner ) --[[ @ 0]]
			f15_arg0.DownloadPercent:completeAnimation() --[[ @ 0]]
			f15_arg0.DownloadPercent:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.DownloadPercent ) --[[ @ 0]]
			f15_arg0.TeamName:completeAnimation() --[[ @ 0]]
			f15_arg0.TeamName:setLeftRight( 0, 0, 251.5, 451.5 ) --[[ @ 0]]
			f15_arg0.TeamName:setTopBottom( 0, 0, 216, 241 ) --[[ @ 0]]
			f15_arg0.TeamName:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.TeamName ) --[[ @ 0]]
		end
	},
	DemoSelectedDownloading = {
		DefaultClip = function ( f16_arg0, f16_arg1 )
			f16_arg0:__resetProperties() --[[ @ 0]]
			f16_arg0:setupElementClipCounter( 5 ) --[[ @ 0]]
			f16_arg0.MapVoteNoDemoSelected:completeAnimation() --[[ @ 0]]
			f16_arg0.MapVoteNoDemoSelected:setAlpha( 0 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.MapVoteNoDemoSelected ) --[[ @ 0]]
			f16_arg0.MapImage:completeAnimation() --[[ @ 0]]
			f16_arg0.MapImage:setAlpha( 1 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.MapImage ) --[[ @ 0]]
			f16_arg0.FileshareSpinner:completeAnimation() --[[ @ 0]]
			f16_arg0.FileshareSpinner:setAlpha( 1 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.FileshareSpinner ) --[[ @ 0]]
			f16_arg0.DownloadPercent:completeAnimation() --[[ @ 0]]
			f16_arg0.DownloadPercent:setAlpha( 1 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.DownloadPercent ) --[[ @ 0]]
			f16_arg0.TeamName:completeAnimation() --[[ @ 0]]
			f16_arg0.TeamName:setAlpha( 0 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.TeamName ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.DirectorMapAndGameType.__onClose = function ( f17_arg0 )
	f17_arg0.MapVoteNoDemoSelected:close() --[[ @ 0]]
	f17_arg0.MapImage:close() --[[ @ 0]]
	f17_arg0.FileshareSpinner:close() --[[ @ 0]]
	f17_arg0.DownloadPercent:close() --[[ @ 0]]
	f17_arg0.TeamName:close() --[[ @ 0]]
	f17_arg0.PCTooltipExceptionWidget:close() --[[ @ 0]]
end
 --[[ @ 0]]
