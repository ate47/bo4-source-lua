-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:51
CoD.DirectorMapVoteRuleIcon = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.DirectorMapVoteRuleIcon.__defaultWidth = 150 --[[ @ 0]]
CoD.DirectorMapVoteRuleIcon.__defaultHeight = 150 --[[ @ 0]]
CoD.DirectorMapVoteRuleIcon.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.DirectorMapVoteRuleIcon ) --[[ @ 0]]
	self.id = "DirectorMapVoteRuleIcon" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local officialIcon = LUI.UIImage.new( 0.5, 0.5, -75, 75, 0.5, 0.5, -75, 75 ) --[[ @ 0]]
	officialIcon:setImage( RegisterImage( @"uie_menu_mp_frontend_icon_medal" ) ) --[[ @ 0]]
	self:addElement( officialIcon ) --[[ @ 0]]
	self.officialIcon = officialIcon --[[ @ 0]]
	
	local Custom = LUI.UIText.new( 0, 0, -25, 175, 0, 0, 22, 263 ) --[[ @ 0]]
	Custom:setAlpha( 0 ) --[[ @ 0]]
	Custom:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_B53C6BDCB1662EB" ) ) --[[ @ 0]]
	Custom:setTTF( "default" ) --[[ @ 0]]
	Custom:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	Custom:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	self:addElement( Custom ) --[[ @ 0]]
	self.Custom = Custom --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Visible",
			condition = function ( menu, element, event )
				return IsCustomMPLobby() and CoD.ModelUtility.IsGlobalModelValueTrue( "MapVote.isOfficialVariant" )
			end
		},
		{
			stateName = "Custom",
			condition = function ( menu, element, event )
				return IsCustomMPLobby()
			end
		}
	} ) --[[ @ 0]]
	local f1_local3 = self --[[ @ 0]]
	local f1_local4 = self.subscribeToModel --[[ @ 0]]
	local f1_local5 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local4( f1_local3, f1_local5["lobbyRoot.lobbyNav"], function ( f4_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f4_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local3 = self --[[ @ 0]]
	f1_local4 = self.subscribeToModel --[[ @ 0]]
	f1_local5 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local4( f1_local3, f1_local5["MapVote.isOfficialVariant"], function ( f5_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f5_arg0:get(),
			modelName = "MapVote.isOfficialVariant"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.DirectorMapVoteRuleIcon.__resetProperties = function ( f6_arg0 )
	f6_arg0.officialIcon:completeAnimation() --[[ @ 0]]
	f6_arg0.Custom:completeAnimation() --[[ @ 0]]
	f6_arg0.officialIcon:setAlpha( 1 ) --[[ @ 0]]
	f6_arg0.Custom:setRGB( 1, 1, 1 ) --[[ @ 0]]
	f6_arg0.Custom:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorMapVoteRuleIcon.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f7_arg0, f7_arg1 )
			f7_arg0:__resetProperties() --[[ @ 0]]
			f7_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f7_arg0.officialIcon:completeAnimation() --[[ @ 0]]
			f7_arg0.officialIcon:setAlpha( 0 ) --[[ @ 0]]
			f7_arg0.clipFinished( f7_arg0.officialIcon ) --[[ @ 0]]
		end
	},
	Visible = {
		DefaultClip = function ( f8_arg0, f8_arg1 )
			f8_arg0:__resetProperties() --[[ @ 0]]
			f8_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	Custom = {
		DefaultClip = function ( f9_arg0, f9_arg1 )
			f9_arg0:__resetProperties() --[[ @ 0]]
			f9_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f9_arg0.officialIcon:completeAnimation() --[[ @ 0]]
			f9_arg0.officialIcon:setAlpha( 0 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.officialIcon ) --[[ @ 0]]
			f9_arg0.Custom:completeAnimation() --[[ @ 0]]
			f9_arg0.Custom:setRGB( 0.14, 0.73, 0.87 ) --[[ @ 0]]
			f9_arg0.Custom:setAlpha( 0.6 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.Custom ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
