-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:51
require( "x64:7dab8c3a6f5b136c" ) --[[ @ 0]]
require( "ui/uieditor/widgets/director/directorselectbuttonlines" ) --[[ @ 0]]
require( "x64:71f846296f1a1b81" ) --[[ @ 0]]

CoD.DirectorPreGameButtonOption = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.DirectorPreGameButtonOption.__defaultWidth = 250 --[[ @ 0]]
CoD.DirectorPreGameButtonOption.__defaultHeight = 92 --[[ @ 0]]
CoD.DirectorPreGameButtonOption.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.DirectorPreGameButtonOption ) --[[ @ 0]]
	self.id = "DirectorPreGameButtonOption" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local DirectorSelectButtonMiniInternal = CoD.DirectorSelectButtonMiniInternal.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	DirectorSelectButtonMiniInternal:mergeStateConditions( {
		{
			stateName = "TrialLocked",
			condition = function ( menu, element, event )
				return IsSelfInState( self, "VisibleTrialLocked" )
			end
		},
		{
			stateName = "ArenaSuspended",
			condition = function ( menu, element, event )
				return CoD.BaseUtility.IsSelfInState( self, "ArenaSuspended" )
			end
		},
		{
			stateName = "Locked",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		},
		{
			stateName = "Disabled",
			condition = function ( menu, element, event )
				return CoD.BaseUtility.IsSelfInState( self, "Unselectable" )
			end
		}
	} ) --[[ @ 0]]
	DirectorSelectButtonMiniInternal.MiddleText:setText( LocalizeToUpperString( @"hash_A43B10D9DA121A" ) ) --[[ @ 0]]
	DirectorSelectButtonMiniInternal.MiddleTextFocus:setText( LocalizeToUpperString( @"hash_A43B10D9DA121A" ) ) --[[ @ 0]]
	self:addElement( DirectorSelectButtonMiniInternal ) --[[ @ 0]]
	self.DirectorSelectButtonMiniInternal = DirectorSelectButtonMiniInternal --[[ @ 0]]
	
	local SceneBlur = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	SceneBlur:setRGB( 0, 0, 0 ) --[[ @ 0]]
	SceneBlur:setAlpha( 0 ) --[[ @ 0]]
	SceneBlur:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_E2354BE557C4C7A" ) ) --[[ @ 0]]
	SceneBlur:setShaderVector( 0, 0, 0.4, 0, 0 ) --[[ @ 0]]
	self:addElement( SceneBlur ) --[[ @ 0]]
	self.SceneBlur = SceneBlur --[[ @ 0]]
	
	local NoiseTiledBacking = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	NoiseTiledBacking:setAlpha( 0 ) --[[ @ 0]]
	NoiseTiledBacking:setImage( RegisterImage( @"uie_ui_menu_specialist_hub_repeat_bg" ) ) --[[ @ 0]]
	NoiseTiledBacking:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_16CBE95C250C6D15" ) ) --[[ @ 0]]
	NoiseTiledBacking:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	NoiseTiledBacking:setupNineSliceShader( 196, 88 ) --[[ @ 0]]
	self:addElement( NoiseTiledBacking ) --[[ @ 0]]
	self.NoiseTiledBacking = NoiseTiledBacking --[[ @ 0]]
	
	local Tint = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	Tint:setRGB( 0, 0, 0 ) --[[ @ 0]]
	Tint:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( Tint ) --[[ @ 0]]
	self.Tint = Tint --[[ @ 0]]
	
	local DotTiledBacking = CoD.CommonPixelBacking.new( f1_arg0, f1_arg1, 0, 1, 4, -4, 0, 1, 4, -4 ) --[[ @ 0]]
	DotTiledBacking:setAlpha( 0 ) --[[ @ 0]]
	DotTiledBacking:setRFTMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	DotTiledBacking.NoiseBacking:setAlpha( 1 ) --[[ @ 0]]
	DotTiledBacking.TiledShaderImage:setRGB( 0.22, 0.22, 0.22 ) --[[ @ 0]]
	DotTiledBacking.TiledShaderImage:setAlpha( 0.15 ) --[[ @ 0]]
	DotTiledBacking.TiledShaderImage:setupNineSliceShader( 36, 36 ) --[[ @ 0]]
	self:addElement( DotTiledBacking ) --[[ @ 0]]
	self.DotTiledBacking = DotTiledBacking --[[ @ 0]]
	
	local FrameBorder = LUI.UIImage.new( 0, 1, -1, 1, 0, 1, -1, 1 ) --[[ @ 0]]
	FrameBorder:setAlpha( 0 ) --[[ @ 0]]
	FrameBorder:setImage( RegisterImage( @"uie_ui_menu_store_common_frame" ) ) --[[ @ 0]]
	FrameBorder:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_add" ) ) --[[ @ 0]]
	FrameBorder:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	FrameBorder:setupNineSliceShader( 12, 12 ) --[[ @ 0]]
	self:addElement( FrameBorder ) --[[ @ 0]]
	self.FrameBorder = FrameBorder --[[ @ 0]]
	
	local Lines = CoD.DirectorSelectButtonLines.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 1, 1, -1 ) --[[ @ 0]]
	Lines:setRGB( 0.64, 0.71, 0.78 ) --[[ @ 0]]
	Lines:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( Lines ) --[[ @ 0]]
	self.Lines = Lines --[[ @ 0]]
	
	local SuspendedTxt = LUI.UIText.new( 0, 1, 24, -24, 0.5, 0.5, -12, 12 ) --[[ @ 0]]
	SuspendedTxt:setRGB( 0.92, 0.92, 0.92 ) --[[ @ 0]]
	SuspendedTxt:setAlpha( 0 ) --[[ @ 0]]
	SuspendedTxt:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_3B58CF470802AA10" ) ) --[[ @ 0]]
	SuspendedTxt:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	SuspendedTxt:setLetterSpacing( 3 ) --[[ @ 0]]
	SuspendedTxt:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	SuspendedTxt:setAlignment( Enum[@"luialignment"][@"lui_alignment_middle"] ) --[[ @ 0]]
	self:addElement( SuspendedTxt ) --[[ @ 0]]
	self.SuspendedTxt = SuspendedTxt --[[ @ 0]]
	
	local Timer = LUI.UIText.new( 0.5, 0.5, -130, 130, 0.5, 0.5, 15, 29 ) --[[ @ 0]]
	Timer:setRGB( ColorSet.T8__OCHRE.r, ColorSet.T8__OCHRE.g, ColorSet.T8__OCHRE.b ) --[[ @ 0]]
	Timer:setAlpha( 0 ) --[[ @ 0]]
	Timer:setTTF( "dinnext_regular" ) --[[ @ 0]]
	Timer:setLetterSpacing( 1 ) --[[ @ 0]]
	Timer:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	Timer:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	Timer:subscribeToGlobalModel( f1_arg1, "Arena", "lockoutTimeRemaining", function ( model )
		local f6_local0 = model:get() --[[ @ 0]]
		if f6_local0 ~= nil then
			Timer:setText( f6_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Timer ) --[[ @ 0]]
	self.Timer = Timer --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "VisibleTrialLocked",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		},
		{
			stateName = "ArenaSuspended",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		},
		{
			stateName = "Unselectable",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		},
		{
			stateName = "VisibleZmOffline",
			condition = function ( menu, element, event )
				local f10_local0 = AlwaysFalse() --[[ @ 0]]
				if f10_local0 then
					f10_local0 = IsLobbyHostOfCurrentMenu() --[[ @ 0]]
					if f10_local0 then
						if not IsPublicOrLeagueGame( f1_arg1 ) then
							f10_local0 = IsZombies() --[[ @ 0]]
							if f10_local0 then
								f10_local0 = IsLobbyNetworkModeLAN() --[[ @ 0]]
								if f10_local0 then
									f10_local0 = not CoD.DirectorUtility.IsOfflineScreenStateCustomGame() --[[ @ 0]]
								end
							end
						else
							f10_local0 = false --[[ @ 0]]
						end
					end
				end
				return f10_local0
			end
		},
		{
			stateName = "Visible",
			condition = function ( menu, element, event )
				return AlwaysTrue()
			end
		}
	} ) --[[ @ 0]]
	self:appendEventHandler( "on_session_start", function ( f12_arg0, f12_arg1 )
		f12_arg1.menu = f12_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( self, f12_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:appendEventHandler( "on_session_end", function ( f13_arg0, f13_arg1 )
		f13_arg1.menu = f13_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( self, f13_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local f1_local10 = self --[[ @ 0]]
	local f1_local11 = self.subscribeToModel --[[ @ 0]]
	local f1_local12 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local11( f1_local10, f1_local12["lobbyRoot.lobbyNav"], function ( f14_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f14_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local10 = self --[[ @ 0]]
	f1_local11 = self.subscribeToModel --[[ @ 0]]
	f1_local12 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local11( f1_local10, f1_local12["lobbyRoot.gameClient.update"], function ( f15_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f15_arg0:get(),
			modelName = "lobbyRoot.gameClient.update"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local10 = self --[[ @ 0]]
	f1_local11 = self.subscribeToModel --[[ @ 0]]
	f1_local12 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local11( f1_local10, f1_local12["lobbyRoot.privateClient.update"], function ( f16_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f16_arg0:get(),
			modelName = "lobbyRoot.privateClient.update"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local10 = self --[[ @ 0]]
	f1_local11 = self.subscribeToModel --[[ @ 0]]
	f1_local12 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local11( f1_local10, f1_local12.offlineScreenState, function ( f17_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f17_arg0:get(),
			modelName = "offlineScreenState"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( self, "setState", function ( element, controller, f18_arg2, f18_arg3, f18_arg4 )
		UpdateElementState( self, "DirectorSelectButtonMiniInternal", controller ) --[[ @ 0]]
	end ) --[[ @ 0]]
	DirectorSelectButtonMiniInternal.id = "DirectorSelectButtonMiniInternal" --[[ @ 0]]
	self.__defaultFocus = DirectorSelectButtonMiniInternal --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.DirectorPreGameButtonOption.__resetProperties = function ( f19_arg0 )
	f19_arg0.DirectorSelectButtonMiniInternal:completeAnimation() --[[ @ 0]]
	f19_arg0.Lines:completeAnimation() --[[ @ 0]]
	f19_arg0.FrameBorder:completeAnimation() --[[ @ 0]]
	f19_arg0.DotTiledBacking:completeAnimation() --[[ @ 0]]
	f19_arg0.Tint:completeAnimation() --[[ @ 0]]
	f19_arg0.NoiseTiledBacking:completeAnimation() --[[ @ 0]]
	f19_arg0.SceneBlur:completeAnimation() --[[ @ 0]]
	f19_arg0.SuspendedTxt:completeAnimation() --[[ @ 0]]
	f19_arg0.Timer:completeAnimation() --[[ @ 0]]
	f19_arg0.DirectorSelectButtonMiniInternal:setAlpha( 1 ) --[[ @ 0]]
	f19_arg0.DirectorSelectButtonMiniInternal:setScale( 1, 1 ) --[[ @ 0]]
	f19_arg0.DirectorSelectButtonMiniInternal.Tint:setRGB( 0, 0, 0 ) --[[ @ 0]]
	f19_arg0.Lines:setAlpha( 0 ) --[[ @ 0]]
	f19_arg0.FrameBorder:setAlpha( 0 ) --[[ @ 0]]
	f19_arg0.DotTiledBacking:setRGB( 1, 1, 1 ) --[[ @ 0]]
	f19_arg0.DotTiledBacking:setAlpha( 0 ) --[[ @ 0]]
	f19_arg0.DotTiledBacking.TiledShaderImage:setRGB( 0.22, 0.22, 0.22 ) --[[ @ 0]]
	f19_arg0.DotTiledBacking.TiledShaderImage:setAlpha( 0.15 ) --[[ @ 0]]
	f19_arg0.Tint:setRGB( 0, 0, 0 ) --[[ @ 0]]
	f19_arg0.Tint:setAlpha( 0 ) --[[ @ 0]]
	f19_arg0.NoiseTiledBacking:setAlpha( 0 ) --[[ @ 0]]
	f19_arg0.SceneBlur:setAlpha( 0 ) --[[ @ 0]]
	f19_arg0.SuspendedTxt:setRGB( 0.92, 0.92, 0.92 ) --[[ @ 0]]
	f19_arg0.SuspendedTxt:setAlpha( 0 ) --[[ @ 0]]
	f19_arg0.Timer:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorPreGameButtonOption.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f20_arg0, f20_arg1 )
			f20_arg0:__resetProperties() --[[ @ 0]]
			f20_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f20_arg0.DirectorSelectButtonMiniInternal:completeAnimation() --[[ @ 0]]
			f20_arg0.DirectorSelectButtonMiniInternal:setAlpha( 0 ) --[[ @ 0]]
			f20_arg0.clipFinished( f20_arg0.DirectorSelectButtonMiniInternal ) --[[ @ 0]]
		end
	},
	VisibleTrialLocked = {
		DefaultClip = function ( f21_arg0, f21_arg1 )
			f21_arg0:__resetProperties() --[[ @ 0]]
			f21_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end,
		ChildFocus = function ( f22_arg0, f22_arg1 )
			f22_arg0:__resetProperties() --[[ @ 0]]
			f22_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f22_arg0.DirectorSelectButtonMiniInternal:completeAnimation() --[[ @ 0]]
			f22_arg0.DirectorSelectButtonMiniInternal:setScale( 1.05, 1.05 ) --[[ @ 0]]
			f22_arg0.clipFinished( f22_arg0.DirectorSelectButtonMiniInternal ) --[[ @ 0]]
		end,
		GainChildFocus = function ( f23_arg0, f23_arg1 )
			f23_arg0:__resetProperties() --[[ @ 0]]
			f23_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f23_local0 = function ( f24_arg0 )
				f23_arg0.DirectorSelectButtonMiniInternal:beginAnimation( 200 ) --[[ @ 0]]
				f23_arg0.DirectorSelectButtonMiniInternal:setScale( 1.05, 1.05 ) --[[ @ 0]]
				f23_arg0.DirectorSelectButtonMiniInternal:registerEventHandler( "interrupted_keyframe", f23_arg0.clipInterrupted ) --[[ @ 0]]
				f23_arg0.DirectorSelectButtonMiniInternal:registerEventHandler( "transition_complete_keyframe", f23_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f23_arg0.DirectorSelectButtonMiniInternal:completeAnimation() --[[ @ 0]]
			f23_arg0.DirectorSelectButtonMiniInternal:setScale( 1, 1 ) --[[ @ 0]]
			f23_local0( f23_arg0.DirectorSelectButtonMiniInternal ) --[[ @ 0]]
		end,
		LoseChildFocus = function ( f25_arg0, f25_arg1 )
			f25_arg0:__resetProperties() --[[ @ 0]]
			f25_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f25_local0 = function ( f26_arg0 )
				f25_arg0.DirectorSelectButtonMiniInternal:beginAnimation( 200 ) --[[ @ 0]]
				f25_arg0.DirectorSelectButtonMiniInternal:setScale( 1, 1 ) --[[ @ 0]]
				f25_arg0.DirectorSelectButtonMiniInternal:registerEventHandler( "interrupted_keyframe", f25_arg0.clipInterrupted ) --[[ @ 0]]
				f25_arg0.DirectorSelectButtonMiniInternal:registerEventHandler( "transition_complete_keyframe", f25_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f25_arg0.DirectorSelectButtonMiniInternal:completeAnimation() --[[ @ 0]]
			f25_arg0.DirectorSelectButtonMiniInternal:setScale( 1.05, 1.05 ) --[[ @ 0]]
			f25_local0( f25_arg0.DirectorSelectButtonMiniInternal ) --[[ @ 0]]
		end
	},
	ArenaSuspended = {
		DefaultClip = function ( f27_arg0, f27_arg1 )
			f27_arg0:__resetProperties() --[[ @ 0]]
			f27_arg0:setupElementClipCounter( 9 ) --[[ @ 0]]
			f27_arg0.DirectorSelectButtonMiniInternal:completeAnimation() --[[ @ 0]]
			f27_arg0.DirectorSelectButtonMiniInternal.Tint:completeAnimation() --[[ @ 0]]
			f27_arg0.DirectorSelectButtonMiniInternal:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.DirectorSelectButtonMiniInternal.Tint:setRGB( 0.27, 0.06, 0.06 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.DirectorSelectButtonMiniInternal ) --[[ @ 0]]
			f27_arg0.SceneBlur:completeAnimation() --[[ @ 0]]
			f27_arg0.SceneBlur:setAlpha( 1 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.SceneBlur ) --[[ @ 0]]
			f27_arg0.NoiseTiledBacking:completeAnimation() --[[ @ 0]]
			f27_arg0.NoiseTiledBacking:setAlpha( 0.95 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.NoiseTiledBacking ) --[[ @ 0]]
			f27_arg0.Tint:completeAnimation() --[[ @ 0]]
			f27_arg0.Tint:setRGB( 0.27, 0.06, 0.06 ) --[[ @ 0]]
			f27_arg0.Tint:setAlpha( 0.75 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.Tint ) --[[ @ 0]]
			f27_arg0.DotTiledBacking:completeAnimation() --[[ @ 0]]
			f27_arg0.DotTiledBacking.TiledShaderImage:completeAnimation() --[[ @ 0]]
			f27_arg0.DotTiledBacking:setRGB( 1, 1, 1 ) --[[ @ 0]]
			f27_arg0.DotTiledBacking:setAlpha( 1 ) --[[ @ 0]]
			f27_arg0.DotTiledBacking.TiledShaderImage:setRGB( 0.39, 0.11, 0.11 ) --[[ @ 0]]
			f27_arg0.DotTiledBacking.TiledShaderImage:setAlpha( 0.15 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.DotTiledBacking ) --[[ @ 0]]
			f27_arg0.FrameBorder:completeAnimation() --[[ @ 0]]
			f27_arg0.FrameBorder:setAlpha( 0.1 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.FrameBorder ) --[[ @ 0]]
			f27_arg0.Lines:completeAnimation() --[[ @ 0]]
			f27_arg0.Lines:setAlpha( 0.2 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.Lines ) --[[ @ 0]]
			f27_arg0.SuspendedTxt:completeAnimation() --[[ @ 0]]
			f27_arg0.SuspendedTxt:setRGB( 1, 0, 0 ) --[[ @ 0]]
			f27_arg0.SuspendedTxt:setAlpha( 1 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.SuspendedTxt ) --[[ @ 0]]
			f27_arg0.Timer:completeAnimation() --[[ @ 0]]
			f27_arg0.Timer:setAlpha( 1 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.Timer ) --[[ @ 0]]
		end
	},
	Unselectable = {
		DefaultClip = function ( f28_arg0, f28_arg1 )
			f28_arg0:__resetProperties() --[[ @ 0]]
			f28_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	VisibleZmOffline = {
		DefaultClip = function ( f29_arg0, f29_arg1 )
			f29_arg0:__resetProperties() --[[ @ 0]]
			f29_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	Visible = {
		DefaultClip = function ( f30_arg0, f30_arg1 )
			f30_arg0:__resetProperties() --[[ @ 0]]
			f30_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end,
		ChildFocus = function ( f31_arg0, f31_arg1 )
			f31_arg0:__resetProperties() --[[ @ 0]]
			f31_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f31_arg0.DirectorSelectButtonMiniInternal:completeAnimation() --[[ @ 0]]
			f31_arg0.DirectorSelectButtonMiniInternal:setScale( 1.05, 1.05 ) --[[ @ 0]]
			f31_arg0.clipFinished( f31_arg0.DirectorSelectButtonMiniInternal ) --[[ @ 0]]
		end,
		GainChildFocus = function ( f32_arg0, f32_arg1 )
			f32_arg0:__resetProperties() --[[ @ 0]]
			f32_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f32_local0 = function ( f33_arg0 )
				f32_arg0.DirectorSelectButtonMiniInternal:beginAnimation( 200 ) --[[ @ 0]]
				f32_arg0.DirectorSelectButtonMiniInternal:setScale( 1.05, 1.05 ) --[[ @ 0]]
				f32_arg0.DirectorSelectButtonMiniInternal:registerEventHandler( "interrupted_keyframe", f32_arg0.clipInterrupted ) --[[ @ 0]]
				f32_arg0.DirectorSelectButtonMiniInternal:registerEventHandler( "transition_complete_keyframe", f32_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f32_arg0.DirectorSelectButtonMiniInternal:completeAnimation() --[[ @ 0]]
			f32_arg0.DirectorSelectButtonMiniInternal:setScale( 1, 1 ) --[[ @ 0]]
			f32_local0( f32_arg0.DirectorSelectButtonMiniInternal ) --[[ @ 0]]
		end,
		LoseChildFocus = function ( f34_arg0, f34_arg1 )
			f34_arg0:__resetProperties() --[[ @ 0]]
			f34_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f34_local0 = function ( f35_arg0 )
				f34_arg0.DirectorSelectButtonMiniInternal:beginAnimation( 200 ) --[[ @ 0]]
				f34_arg0.DirectorSelectButtonMiniInternal:setScale( 1, 1 ) --[[ @ 0]]
				f34_arg0.DirectorSelectButtonMiniInternal:registerEventHandler( "interrupted_keyframe", f34_arg0.clipInterrupted ) --[[ @ 0]]
				f34_arg0.DirectorSelectButtonMiniInternal:registerEventHandler( "transition_complete_keyframe", f34_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f34_arg0.DirectorSelectButtonMiniInternal:completeAnimation() --[[ @ 0]]
			f34_arg0.DirectorSelectButtonMiniInternal:setScale( 1.05, 1.05 ) --[[ @ 0]]
			f34_local0( f34_arg0.DirectorSelectButtonMiniInternal ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.DirectorPreGameButtonOption.__onClose = function ( f36_arg0 )
	f36_arg0.DirectorSelectButtonMiniInternal:close() --[[ @ 0]]
	f36_arg0.DotTiledBacking:close() --[[ @ 0]]
	f36_arg0.Lines:close() --[[ @ 0]]
	f36_arg0.Timer:close() --[[ @ 0]]
end
 --[[ @ 0]]
