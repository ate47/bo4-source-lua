-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:36
require( "ui/uieditor/widgets/aar_t8/summary/aarperformancebg" ) --[[ @ 0]]

CoD.ZMAARGenericAllTimeStatWidget = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.ZMAARGenericAllTimeStatWidget.__defaultWidth = 163 --[[ @ 0]]
CoD.ZMAARGenericAllTimeStatWidget.__defaultHeight = 114 --[[ @ 0]]
CoD.ZMAARGenericAllTimeStatWidget.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.ZMAARGenericAllTimeStatWidget ) --[[ @ 0]]
	self.id = "ZMAARGenericAllTimeStatWidget" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local PerformBg = CoD.AARPerformanceBg.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 0, 26.5, 90.5 ) --[[ @ 0]]
	PerformBg.Tint:setRGB( 0, 0, 0 ) --[[ @ 0]]
	PerformBg.Tint:setAlpha( 0.4 ) --[[ @ 0]]
	self:addElement( PerformBg ) --[[ @ 0]]
	self.PerformBg = PerformBg --[[ @ 0]]
	
	local YellowLine = LUI.UIImage.new( 0, 1, 0, 0, 0, 0, 22, 30 ) --[[ @ 0]]
	YellowLine:setImage( RegisterImage( @"hash_1E6E505307F7B8D7" ) ) --[[ @ 0]]
	YellowLine:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_normal" ) ) --[[ @ 0]]
	YellowLine:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	YellowLine:setupNineSliceShader( 3, 60 ) --[[ @ 0]]
	self:addElement( YellowLine ) --[[ @ 0]]
	self.YellowLine = YellowLine --[[ @ 0]]
	
	local Value = LUI.UIText.new( -0.01, 1.01, 0, 0, 0.5, 0.5, -12.5, 20.5 ) --[[ @ 0]]
	Value:setRGB( 0.75, 0.75, 0.75 ) --[[ @ 0]]
	Value:setAlpha( 0.8 ) --[[ @ 0]]
	Value:setTTF( "skorzhen" ) --[[ @ 0]]
	Value:setLetterSpacing( 2 ) --[[ @ 0]]
	Value:setAlignment( Enum[@"LUIAlignment"][@"hash_1FEEB12BCB0D7041"] ) --[[ @ 0]]
	Value:setAlignment( Enum[@"LUIAlignment"][@"hash_E821F0ECFF8D1C7"] ) --[[ @ 0]]
	Value:linkToElementModel( self, "value", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			Value:setText( f2_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Value ) --[[ @ 0]]
	self.Value = Value --[[ @ 0]]
	
	local Title = LUI.UIText.new( 0.01, 0.99, -1, 1, 0, 0, 1, 19 ) --[[ @ 0]]
	Title:setRGB( 0.75, 0.75, 0.75 ) --[[ @ 0]]
	Title:setAlpha( 0.5 ) --[[ @ 0]]
	Title:setTTF( "dinnext_regular" ) --[[ @ 0]]
	Title:setLetterSpacing( 1 ) --[[ @ 0]]
	Title:setAlignment( Enum[@"LUIAlignment"][@"hash_1FEEB12BCB0D7041"] ) --[[ @ 0]]
	Title:setAlignment( Enum[@"LUIAlignment"][@"hash_670510683C22104B"] ) --[[ @ 0]]
	Title:linkToElementModel( self, "title", true, function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			Title:setText( LocalizeToUpperString( f3_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Title ) --[[ @ 0]]
	self.Title = Title --[[ @ 0]]
	
	local TopBar = LUI.UIImage.new( 0, 1, -5, 5, 0, 0, 17, 25 ) --[[ @ 0]]
	TopBar:setImage( RegisterImage( @"uie_ui_hud_zm_aar_common_bar" ) ) --[[ @ 0]]
	TopBar:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_normal" ) ) --[[ @ 0]]
	TopBar:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	TopBar:setupNineSliceShader( 20, 4 ) --[[ @ 0]]
	self:addElement( TopBar ) --[[ @ 0]]
	self.TopBar = TopBar --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "ShowMp",
			condition = function ( menu, element, event )
				return not IsZombies()
			end
		},
		{
			stateName = "ShowZm",
			condition = function ( menu, element, event )
				return IsZombies() and not CoD.HUDUtility.IsAnyGameType( f1_arg1, "zstandard" )
			end
		}
	} ) --[[ @ 0]]
	local f1_local6 = self --[[ @ 0]]
	local f1_local7 = self.subscribeToModel --[[ @ 0]]
	local f1_local8 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local7( f1_local6, f1_local8["lobbyRoot.lobbyNav"], function ( f6_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f6_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.ZMAARGenericAllTimeStatWidget.__onClose = function ( f7_arg0 )
	f7_arg0.PerformBg:close() --[[ @ 0]]
	f7_arg0.Value:close() --[[ @ 0]]
	f7_arg0.Title:close() --[[ @ 0]]
end
 --[[ @ 0]]
