-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:36
require( "ui/uieditor/widgets/zmfrontend/armory/armory_attachmentpipcontainer" ) --[[ @ 0]]
require( "ui/uieditor/widgets/zmfrontend/armory/armory_attachmentslotcontainer" ) --[[ @ 0]]

CoD.Armory_AttachmentList = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.Armory_AttachmentList.__defaultWidth = 800 --[[ @ 0]]
CoD.Armory_AttachmentList.__defaultHeight = 300 --[[ @ 0]]
CoD.Armory_AttachmentList.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.Armory_AttachmentList ) --[[ @ 0]]
	self.id = "Armory_AttachmentList" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local BlackGradientBG = LUI.UIImage.new( 0, 1, 5, -5, 0, 1, 35, 31 ) --[[ @ 0]]
	BlackGradientBG:setRGB( 0, 0, 0 ) --[[ @ 0]]
	BlackGradientBG:setAlpha( 0.3 ) --[[ @ 0]]
	BlackGradientBG:setZRot( 180 ) --[[ @ 0]]
	BlackGradientBG:setZoom( 10 ) --[[ @ 0]]
	BlackGradientBG:setImage( RegisterImage( @"hash_78A6742E3F9A2ED" ) ) --[[ @ 0]]
	self:addElement( BlackGradientBG ) --[[ @ 0]]
	self.BlackGradientBG = BlackGradientBG --[[ @ 0]]
	
	local TopLine = LUI.UIImage.new( 0, 1.01, -3, -5, 0, 0, 31, 49 ) --[[ @ 0]]
	TopLine:setAlpha( 0.5 ) --[[ @ 0]]
	TopLine:setZoom( 10 ) --[[ @ 0]]
	TopLine:setImage( RegisterImage( @"uie_ui_menu_cac_primary_button_top_line" ) ) --[[ @ 0]]
	TopLine:setMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	self:addElement( TopLine ) --[[ @ 0]]
	self.TopLine = TopLine --[[ @ 0]]
	
	local AttachmentHeader = LUI.UIText.new( 0.5, 0.5, -392.5, 392.5, 0, 0, -8, 10 ) --[[ @ 0]]
	AttachmentHeader:setRGB( 0.39, 0.39, 0.39 ) --[[ @ 0]]
	AttachmentHeader:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_56E6F15BA89EEED" ) ) --[[ @ 0]]
	AttachmentHeader:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	AttachmentHeader:setLetterSpacing( 4 ) --[[ @ 0]]
	AttachmentHeader:setAlignment( Enum[@"LUIAlignment"][@"hash_1FEEB12BCB0D7041"] ) --[[ @ 0]]
	AttachmentHeader:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	self:addElement( AttachmentHeader ) --[[ @ 0]]
	self.AttachmentHeader = AttachmentHeader --[[ @ 0]]
	
	local Attachments = LUI.UIList.new( f1_arg0, f1_arg1, 15, 0, nil, false, false, false, false ) --[[ @ 0]]
	Attachments:setLeftRight( 0.5, 0.5, -318.5, 318.5 ) --[[ @ 0]]
	Attachments:setTopBottom( 0, 0, 40, 279 ) --[[ @ 0]]
	Attachments:setZoom( 13 ) --[[ @ 0]]
	Attachments:setWidgetType( CoD.Armory_AttachmentSlotContainer ) --[[ @ 0]]
	Attachments:setHorizontalCount( 4 ) --[[ @ 0]]
	Attachments:setVerticalCount( 2 ) --[[ @ 0]]
	Attachments:setSpacing( 15 ) --[[ @ 0]]
	Attachments:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	Attachments:setFilter( function ( f2_arg0 )
		return f2_arg0.attachmentGroup:get() ~= Enum[@"hash_7420BCDBDE17A84"][@"hash_56AC43DB9B6634DA"]
	end ) --[[ @ 0]]
	Attachments:setDataSource( "ArmoryWeaponAttachments" ) --[[ @ 0]]
	Attachments:linkToElementModel( Attachments, "itemIndex", true, function ( model, f3_arg1 )
		CoD.Menu.UpdateButtonShownState( f3_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f3_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f3_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local f1_local5 = Attachments --[[ @ 0]]
	local ArmoryAttachmentPipContainer = Attachments.subscribeToModel --[[ @ 0]]
	local f1_local7 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	ArmoryAttachmentPipContainer( f1_local5, f1_local7.armoryAttachmentUpdated, function ( f4_arg0, f4_arg1 )
		CoD.Menu.UpdateButtonShownState( f4_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f4_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f4_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	Attachments:appendEventHandler( "input_source_changed", function ( f5_arg0, f5_arg1 )
		f5_arg1.menu = f5_arg1.menu or f1_arg0 --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f5_arg0, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f5_arg0, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	f1_local5 = Attachments --[[ @ 0]]
	ArmoryAttachmentPipContainer = Attachments.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	ArmoryAttachmentPipContainer( f1_local5, f1_local7.LastInput, function ( f6_arg0, f6_arg1 )
		CoD.Menu.UpdateButtonShownState( f6_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f6_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	Attachments:registerEventHandler( "list_item_gain_focus", function ( element, event )
		local f7_local0 = nil --[[ @ 0]]
		CoD.ZMLoadoutUtility.UpdateArmoryAttachmentModel( f1_arg0, element, f1_arg1, true ) --[[ @ 0]]
		CoD.ZMLoadoutUtility.UpdateAttachmentListModelForWeaponAttributes( f1_arg0, self.Attachments, f1_arg1 ) --[[ @ 0]]
		return f7_local0
	end ) --[[ @ 0]]
	Attachments:registerEventHandler( "lose_list_focus", function ( element, event )
		local f8_local0 = nil --[[ @ 0]]
		CoD.ZMLoadoutUtility.UpdateArmoryAttachmentModel( f1_arg0, element, f1_arg1, false ) --[[ @ 0]]
		CoD.WeaponAttachmentsUtility.ResetActiveListItemForList( element, f1_arg1 ) --[[ @ 0]]
		CoD.ZMLoadoutUtility.ResetAttachmentListModelForWeaponAttributes( f1_arg0, f1_arg0, f1_arg1 ) --[[ @ 0]]
		return f8_local0
	end ) --[[ @ 0]]
	Attachments:registerEventHandler( "gain_list_focus", function ( element, event )
		return nil
	end ) --[[ @ 0]]
	Attachments:registerEventHandler( "gain_focus", function ( element, event )
		local f10_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f10_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f10_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"] ) --[[ @ 0]]
		return f10_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( Attachments, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		if not IsListElementChildInState( element, "AttachmentSlot", "NotAvailable" ) and not CoD.ZMLoadoutUtility.IsArmoryAttachmentItemLocked( menu, element, controller ) and not CoD.ZMLoadoutUtility.IsArmoryElementAttachmentEquipped( element, controller, menu ) and CoD.ZMLoadoutUtility.CanArmoryElementAttachmentBeEquipped( element, controller, menu ) then
			CoD.ZMLoadoutUtility.EquipArmoryElementAttachment( element, controller, menu ) --[[ @ 0]]
			return true
		elseif IsPC() and not IsListElementChildInState( element, "AttachmentSlot", "NotAvailable" ) and not CoD.ZMLoadoutUtility.IsArmoryAttachmentItemLocked( menu, element, controller ) and CoD.ZMLoadoutUtility.CanArmoryElementAttachmentBeEquipped( element, controller, menu ) and not CoD.ZMLoadoutUtility.IsArmoryElementAttachmentEquipped( element, controller, menu ) then
			CoD.ZMLoadoutUtility.EquipArmoryElementAttachment( element, controller, menu ) --[[ @ 0]]
			return true
		elseif IsPC() and not IsListElementChildInState( element, "AttachmentSlot", "NotAvailable" ) and CoD.ZMLoadoutUtility.IsArmoryElementAttachmentEquipped( element, controller, menu ) and not CoD.ZMLoadoutUtility.IsArmoryAttachmentItemLocked( menu, element, controller ) then
			CoD.ZMLoadoutUtility.RemoveArmoryElementAttachment( element, controller, menu ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsListElementChildInState( element, "AttachmentSlot", "NotAvailable" ) and not CoD.ZMLoadoutUtility.IsArmoryAttachmentItemLocked( menu, element, controller ) and not CoD.ZMLoadoutUtility.IsArmoryElementAttachmentEquipped( element, controller, menu ) and CoD.ZMLoadoutUtility.CanArmoryElementAttachmentBeEquipped( element, controller, menu ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, "ui_confirm" ) --[[ @ 0]]
			return true
		elseif IsPC() and not IsListElementChildInState( element, "AttachmentSlot", "NotAvailable" ) and not CoD.ZMLoadoutUtility.IsArmoryAttachmentItemLocked( menu, element, controller ) and CoD.ZMLoadoutUtility.CanArmoryElementAttachmentBeEquipped( element, controller, menu ) and not CoD.ZMLoadoutUtility.IsArmoryElementAttachmentEquipped( element, controller, menu ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, "ui_confirm" ) --[[ @ 0]]
			return true
		elseif IsPC() and not IsListElementChildInState( element, "AttachmentSlot", "NotAvailable" ) and CoD.ZMLoadoutUtility.IsArmoryElementAttachmentEquipped( element, controller, menu ) and not CoD.ZMLoadoutUtility.IsArmoryAttachmentItemLocked( menu, element, controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, "ui_confirm" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( Attachments, f1_arg1, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"], nil, function ( element, menu, controller, model )
		if IsGamepad( controller ) and CoD.ZMLoadoutUtility.IsArmoryElementAttachmentEquipped( element, controller, menu ) then
			CoD.ZMLoadoutUtility.RemoveArmoryElementAttachment( element, controller, menu ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsGamepad( controller ) and CoD.ZMLoadoutUtility.IsArmoryElementAttachmentEquipped( element, controller, menu ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"], @"hash_1679ACA6FFC6C8F3", nil, nil ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( Attachments, f1_arg1, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], "ui_remove", function ( element, menu, controller, model )
		if IsMouseOrKeyboard( controller ) and CoD.ZMLoadoutUtility.IsArmoryElementAttachmentEquipped( element, controller, menu ) then
			CoD.ZMLoadoutUtility.RemoveArmoryElementAttachment( element, controller, menu ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsMouseOrKeyboard( controller ) and CoD.ZMLoadoutUtility.IsArmoryElementAttachmentEquipped( element, controller, menu ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], @"hash_0", nil, "ui_remove" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	Attachments:subscribeToGlobalModel( f1_arg1, "PerController", "LastInput", function ( model )
		local f17_local0 = Attachments --[[ @ 0]]
		if IsMouse( f1_arg1 ) and AlwaysFalse() then
			CoD.ZMLoadoutUtility.UpdateArmoryAttachmentModel( f1_arg0, f17_local0, f1_arg1, false ) --[[ @ 0]]
			CoD.WeaponAttachmentsUtility.ResetActiveListItemForList( f17_local0, f1_arg1 ) --[[ @ 0]]
		elseif not IsMouse( f1_arg1 ) and AlwaysFalse() then
			CoD.ZMLoadoutUtility.UpdateArmoryAttachmentModel( f1_arg0, f17_local0, f1_arg1, true ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Attachments ) --[[ @ 0]]
	self.Attachments = Attachments --[[ @ 0]]
	
	ArmoryAttachmentPipContainer = CoD.Armory_AttachmentPipContainer.new( f1_arg0, f1_arg1, 0.5, 0.5, -43.5, 43.5, 0, 0, 25, 37 ) --[[ @ 0]]
	ArmoryAttachmentPipContainer:mergeStateConditions( {
		{
			stateName = "FourSlots",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		},
		{
			stateName = "FourSlotsHideOptic",
			condition = function ( menu, element, event )
				return CoD.ZMLoadoutUtility.IsWeaponAttachmentPipFourSlots( menu, element )
			end
		},
		{
			stateName = "HideOptic",
			condition = function ( menu, element, event )
				return AlwaysTrue()
			end
		}
	} ) --[[ @ 0]]
	ArmoryAttachmentPipContainer:linkToElementModel( ArmoryAttachmentPipContainer, "showAttachmentPips", true, function ( model )
		f1_arg0:updateElementState( ArmoryAttachmentPipContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "showAttachmentPips"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	ArmoryAttachmentPipContainer:linkToElementModel( self, nil, false, function ( model )
		ArmoryAttachmentPipContainer:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( ArmoryAttachmentPipContainer ) --[[ @ 0]]
	self.ArmoryAttachmentPipContainer = ArmoryAttachmentPipContainer --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "UberInList",
			condition = function ( menu, element, event )
				return CoD.WeaponAttachmentsUtility.DoesWeaponHaveUberAttachment( menu, element )
			end
		}
	} ) --[[ @ 0]]
	self.__on_menuOpened_self = function ( f24_arg0, f24_arg1, f24_arg2, f24_arg3 )
		local f24_local0 = self --[[ @ 0]]
		ScaleToElementWidth( self, self.Attachments, 30 ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	f1_arg0:addMenuOpenedCallback( self.__on_menuOpened_self ) --[[ @ 0]]
	Attachments.id = "Attachments" --[[ @ 0]]
	self.__on_close_removeOverrides = function ()
		f1_arg0:removeMenuOpenedCallback( self.__on_menuOpened_self ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	f1_local5 = self --[[ @ 0]]
	f1_local5 = Attachments --[[ @ 0]]
	CoD.WeaponAttachmentsUtility.UpdateHorizontalCount( f1_arg0, self.Attachments, f1_arg1 ) --[[ @ 0]]
	return self
end
 --[[ @ 0]]
CoD.Armory_AttachmentList.__resetProperties = function ( f26_arg0 )
	f26_arg0.AttachmentHeader:completeAnimation() --[[ @ 0]]
	f26_arg0.AttachmentHeader:setLeftRight( 0.5, 0.5, -392.5, 392.5 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.Armory_AttachmentList.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f27_arg0, f27_arg1 )
			f27_arg0:__resetProperties() --[[ @ 0]]
			f27_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	UberInList = {
		DefaultClip = function ( f28_arg0, f28_arg1 )
			f28_arg0:__resetProperties() --[[ @ 0]]
			f28_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f28_arg0.AttachmentHeader:completeAnimation() --[[ @ 0]]
			f28_arg0.AttachmentHeader:setLeftRight( 0.5, 0.5, -563.5, 221.5 ) --[[ @ 0]]
			f28_arg0.clipFinished( f28_arg0.AttachmentHeader ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.Armory_AttachmentList.__onClose = function ( f29_arg0 )
	f29_arg0.__on_close_removeOverrides() --[[ @ 0]]
	f29_arg0.Attachments:close() --[[ @ 0]]
	f29_arg0.ArmoryAttachmentPipContainer:close() --[[ @ 0]]
end
 --[[ @ 0]]
