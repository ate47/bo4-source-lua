-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:36
require( "ui/uieditor/widgets/craft/emblemeditor/colorpicker/emblemeditorgradientsliderbar" ) --[[ @ 0]]

CoD.EmblemEditorGradientTypeButton = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.EmblemEditorGradientTypeButton.__defaultWidth = 807 --[[ @ 0]]
CoD.EmblemEditorGradientTypeButton.__defaultHeight = 80 --[[ @ 0]]
CoD.EmblemEditorGradientTypeButton.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.EmblemEditorGradientTypeButton ) --[[ @ 0]]
	self.id = "EmblemEditorGradientTypeButton" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local ThicknessValue = LUI.UIText.new( 0, 0, 757, 807, 0, 0, 40, 65 ) --[[ @ 0]]
	ThicknessValue:setRGB( 0.92, 0.92, 0.92 ) --[[ @ 0]]
	ThicknessValue:setTTF( "dinnext_regular" ) --[[ @ 0]]
	ThicknessValue:setAlignment( Enum[@"LUIAlignment"][@"hash_3830CFD395E6AA0A"] ) --[[ @ 0]]
	ThicknessValue:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	ThicknessValue:subscribeToGlobalModel( f1_arg1, "EmblemSelectedLayerProperties", "gradient_thickness", function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			ThicknessValue:setText( f2_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( ThicknessValue ) --[[ @ 0]]
	self.ThicknessValue = ThicknessValue --[[ @ 0]]
	
	local ThicknessSlider = CoD.EmblemEditorGradientSliderBar.new( f1_arg0, f1_arg1, 0.5, 0.5, -261.5, 350.5, 0, 0, 40, 60 ) --[[ @ 0]]
	ThicknessSlider:registerEventHandler( "gain_focus", function ( element, event )
		local f3_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f3_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f3_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.CraftUtility.EmblemGradient_ColorGradientSliderGainFocus( self, element, f1_arg1 ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_1057783F8DA4AAEF"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_4571F08AD84807E0"] ) --[[ @ 0]]
		return f3_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( ThicknessSlider, f1_arg1, Enum[@"LUIButton"][@"hash_1057783F8DA4AAEF"], nil, function ( element, menu, controller, model )
		CoD.CraftUtility.EmblemGradient_UpdateThicknessByStep( self, element, -0.01, controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_1057783F8DA4AAEF"], @"hash_0", nil, nil ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( ThicknessSlider, f1_arg1, Enum[@"LUIButton"][@"hash_4571F08AD84807E0"], nil, function ( element, menu, controller, model )
		CoD.CraftUtility.EmblemGradient_UpdateThicknessByStep( self, element, 0.01, controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_4571F08AD84807E0"], @"hash_0", nil, nil ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	self:addElement( ThicknessSlider ) --[[ @ 0]]
	self.ThicknessSlider = ThicknessSlider --[[ @ 0]]
	
	local ThicknessText = LUI.UIText.new( 0, 0, 0, 116, 0, 0, 40, 60 ) --[[ @ 0]]
	ThicknessText:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_21960EFEF4BF9116" ) ) --[[ @ 0]]
	ThicknessText:setTTF( "default" ) --[[ @ 0]]
	ThicknessText:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	ThicknessText:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	self:addElement( ThicknessText ) --[[ @ 0]]
	self.ThicknessText = ThicknessText --[[ @ 0]]
	
	local HardnessValue = LUI.UIText.new( 0, 0, 757, 807, 0, 0, 3, 28 ) --[[ @ 0]]
	HardnessValue:setRGB( 0.92, 0.92, 0.92 ) --[[ @ 0]]
	HardnessValue:setTTF( "dinnext_regular" ) --[[ @ 0]]
	HardnessValue:setAlignment( Enum[@"LUIAlignment"][@"hash_3830CFD395E6AA0A"] ) --[[ @ 0]]
	HardnessValue:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	HardnessValue:subscribeToGlobalModel( f1_arg1, "EmblemSelectedLayerProperties", "gradient_fill", function ( model )
		local f8_local0 = model:get() --[[ @ 0]]
		if f8_local0 ~= nil then
			HardnessValue:setText( f8_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( HardnessValue ) --[[ @ 0]]
	self.HardnessValue = HardnessValue --[[ @ 0]]
	
	local HardnessSlider = CoD.EmblemEditorGradientSliderBar.new( f1_arg0, f1_arg1, 0.5, 0.5, -261.5, 350.5, 0, 0, 3, 23 ) --[[ @ 0]]
	HardnessSlider:registerEventHandler( "gain_focus", function ( element, event )
		local f9_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f9_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f9_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.CraftUtility.EmblemGradient_ColorGradientSliderGainFocus( self, element, f1_arg1 ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_1057783F8DA4AAEF"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_4571F08AD84807E0"] ) --[[ @ 0]]
		return f9_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( HardnessSlider, f1_arg1, Enum[@"LUIButton"][@"hash_1057783F8DA4AAEF"], nil, function ( element, menu, controller, model )
		CoD.CraftUtility.EmblemGradient_UpdateGradientFillByStep( self, element, -0.01, controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_1057783F8DA4AAEF"], @"hash_0", nil, nil ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( HardnessSlider, f1_arg1, Enum[@"LUIButton"][@"hash_4571F08AD84807E0"], nil, function ( element, menu, controller, model )
		CoD.CraftUtility.EmblemGradient_UpdateGradientFillByStep( self, element, 0.01, controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_4571F08AD84807E0"], @"hash_0", nil, nil ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	self:addElement( HardnessSlider ) --[[ @ 0]]
	self.HardnessSlider = HardnessSlider --[[ @ 0]]
	
	local HardnessText = LUI.UIText.new( 0, 0, 0, 116, 0, 0, 3, 23 ) --[[ @ 0]]
	HardnessText:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_373519BA1E3232E" ) ) --[[ @ 0]]
	HardnessText:setTTF( "default" ) --[[ @ 0]]
	HardnessText:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	HardnessText:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	self:addElement( HardnessText ) --[[ @ 0]]
	self.HardnessText = HardnessText --[[ @ 0]]
	
	LUI.OverrideFunction_CallOriginalFirst( self, "setState", function ( element, controller, f14_arg2, f14_arg3, f14_arg4 )
		CoD.CraftUtility.EmblemGradient_UpdateSliders( controller, f1_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	ThicknessSlider.id = "ThicknessSlider" --[[ @ 0]]
	HardnessSlider.id = "HardnessSlider" --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	local f1_local7 = self --[[ @ 0]]
	CoD.CraftUtility.EmblemGradient_UpdateGradientFillByStep( self, ThicknessSlider, 0, f1_arg1 ) --[[ @ 0]]
	CoD.CraftUtility.EmblemGradient_UpdateGradientFillByStep( self, HardnessSlider, 0, f1_arg1 ) --[[ @ 0]]
	return self
end
 --[[ @ 0]]
CoD.EmblemEditorGradientTypeButton.__resetProperties = function ( f15_arg0 )
	f15_arg0.HardnessText:completeAnimation() --[[ @ 0]]
	f15_arg0.HardnessSlider:completeAnimation() --[[ @ 0]]
	f15_arg0.HardnessValue:completeAnimation() --[[ @ 0]]
	f15_arg0.ThicknessText:completeAnimation() --[[ @ 0]]
	f15_arg0.ThicknessSlider:completeAnimation() --[[ @ 0]]
	f15_arg0.ThicknessValue:completeAnimation() --[[ @ 0]]
	f15_arg0.HardnessText:setAlpha( 1 ) --[[ @ 0]]
	f15_arg0.HardnessSlider:setLeftRight( 0.5, 0.5, -261.5, 350.5 ) --[[ @ 0]]
	f15_arg0.HardnessSlider:setTopBottom( 0, 0, 3, 23 ) --[[ @ 0]]
	f15_arg0.HardnessSlider:setAlpha( 1 ) --[[ @ 0]]
	f15_arg0.HardnessValue:setTopBottom( 0, 0, 3, 28 ) --[[ @ 0]]
	f15_arg0.HardnessValue:setAlpha( 1 ) --[[ @ 0]]
	f15_arg0.ThicknessText:setAlpha( 1 ) --[[ @ 0]]
	f15_arg0.ThicknessSlider:setAlpha( 1 ) --[[ @ 0]]
	f15_arg0.ThicknessValue:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.EmblemEditorGradientTypeButton.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f16_arg0, f16_arg1 )
			f16_arg0:__resetProperties() --[[ @ 0]]
			f16_arg0:setupElementClipCounter( 6 ) --[[ @ 0]]
			f16_arg0.ThicknessValue:completeAnimation() --[[ @ 0]]
			f16_arg0.ThicknessValue:setAlpha( 0 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.ThicknessValue ) --[[ @ 0]]
			f16_arg0.ThicknessSlider:completeAnimation() --[[ @ 0]]
			f16_arg0.ThicknessSlider:setAlpha( 0 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.ThicknessSlider ) --[[ @ 0]]
			f16_arg0.ThicknessText:completeAnimation() --[[ @ 0]]
			f16_arg0.ThicknessText:setAlpha( 0 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.ThicknessText ) --[[ @ 0]]
			f16_arg0.HardnessValue:completeAnimation() --[[ @ 0]]
			f16_arg0.HardnessValue:setAlpha( 0 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.HardnessValue ) --[[ @ 0]]
			f16_arg0.HardnessSlider:completeAnimation() --[[ @ 0]]
			f16_arg0.HardnessSlider:setAlpha( 0 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.HardnessSlider ) --[[ @ 0]]
			f16_arg0.HardnessText:completeAnimation() --[[ @ 0]]
			f16_arg0.HardnessText:setAlpha( 0 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.HardnessText ) --[[ @ 0]]
		end
	},
	SingleSliderState = {
		DefaultClip = function ( f17_arg0, f17_arg1 )
			f17_arg0:__resetProperties() --[[ @ 0]]
			f17_arg0:setupElementClipCounter( 6 ) --[[ @ 0]]
			f17_arg0.ThicknessValue:completeAnimation() --[[ @ 0]]
			f17_arg0.ThicknessValue:setAlpha( 0 ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.ThicknessValue ) --[[ @ 0]]
			f17_arg0.ThicknessSlider:completeAnimation() --[[ @ 0]]
			f17_arg0.ThicknessSlider:setAlpha( 0 ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.ThicknessSlider ) --[[ @ 0]]
			f17_arg0.ThicknessText:completeAnimation() --[[ @ 0]]
			f17_arg0.ThicknessText:setAlpha( 0 ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.ThicknessText ) --[[ @ 0]]
			f17_arg0.HardnessValue:completeAnimation() --[[ @ 0]]
			f17_arg0.HardnessValue:setTopBottom( 0, 0, 19, 44 ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.HardnessValue ) --[[ @ 0]]
			f17_arg0.HardnessSlider:completeAnimation() --[[ @ 0]]
			f17_arg0.HardnessSlider:setLeftRight( 0.5, 0.5, -403.5, 338.5 ) --[[ @ 0]]
			f17_arg0.HardnessSlider:setTopBottom( 0, 0, 21, 41 ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.HardnessSlider ) --[[ @ 0]]
			f17_arg0.HardnessText:completeAnimation() --[[ @ 0]]
			f17_arg0.HardnessText:setAlpha( 0 ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.HardnessText ) --[[ @ 0]]
		end
	},
	KM = {
		DefaultClip = function ( f18_arg0, f18_arg1 )
			f18_arg0:__resetProperties() --[[ @ 0]]
			f18_arg0:setupElementClipCounter( 6 ) --[[ @ 0]]
			f18_arg0.ThicknessValue:completeAnimation() --[[ @ 0]]
			f18_arg0.ThicknessValue:setAlpha( 0 ) --[[ @ 0]]
			f18_arg0.clipFinished( f18_arg0.ThicknessValue ) --[[ @ 0]]
			f18_arg0.ThicknessSlider:completeAnimation() --[[ @ 0]]
			f18_arg0.ThicknessSlider:setAlpha( 0 ) --[[ @ 0]]
			f18_arg0.clipFinished( f18_arg0.ThicknessSlider ) --[[ @ 0]]
			f18_arg0.ThicknessText:completeAnimation() --[[ @ 0]]
			f18_arg0.ThicknessText:setAlpha( 0 ) --[[ @ 0]]
			f18_arg0.clipFinished( f18_arg0.ThicknessText ) --[[ @ 0]]
			f18_arg0.HardnessValue:completeAnimation() --[[ @ 0]]
			f18_arg0.HardnessValue:setAlpha( 0 ) --[[ @ 0]]
			f18_arg0.clipFinished( f18_arg0.HardnessValue ) --[[ @ 0]]
			f18_arg0.HardnessSlider:completeAnimation() --[[ @ 0]]
			f18_arg0.HardnessSlider:setAlpha( 0 ) --[[ @ 0]]
			f18_arg0.clipFinished( f18_arg0.HardnessSlider ) --[[ @ 0]]
			f18_arg0.HardnessText:completeAnimation() --[[ @ 0]]
			f18_arg0.HardnessText:setAlpha( 0 ) --[[ @ 0]]
			f18_arg0.clipFinished( f18_arg0.HardnessText ) --[[ @ 0]]
		end
	},
	ContourState = {
		DefaultClip = function ( f19_arg0, f19_arg1 )
			f19_arg0:__resetProperties() --[[ @ 0]]
			f19_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.EmblemEditorGradientTypeButton.__onClose = function ( f20_arg0 )
	f20_arg0.ThicknessValue:close() --[[ @ 0]]
	f20_arg0.ThicknessSlider:close() --[[ @ 0]]
	f20_arg0.HardnessValue:close() --[[ @ 0]]
	f20_arg0.HardnessSlider:close() --[[ @ 0]]
end
 --[[ @ 0]]
