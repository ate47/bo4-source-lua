-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:51
local f0_local0 = function ( f1_arg0 )
	if f1_arg0.red and f1_arg0.green and f1_arg0.blue then
		f1_arg0:setRGB( f1_arg0.red, f1_arg0.green, f1_arg0.blue ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
local PostLoadFunc = function ( self, controller )
	local f2_local0 = self:getModel() --[[ @ 0]]
	self.red = 1 --[[ @ 0]]
	self.green = 1 --[[ @ 0]]
	self.blue = 1 --[[ @ 0]]
	if f2_local0.alpha then
		self:subscribeToModel( f2_local0.alpha, function ( model )
			local f3_local0 = Engine[@"getmodelvalue"]( model ) --[[ @ 0]]
			if f3_local0 then
				self.alpha = f3_local0 --[[ @ 0]]
				self.Text:beginAnimation( f2_local0.fadeOverTime:get() * 100 ) --[[ @ 0]]
				self.Text:setAlpha( self.alpha ) --[[ @ 0]]
			end
		end ) --[[ @ 0]]
	end
	if f2_local0.height then
		self:subscribeToModel( f2_local0.height, function ( model )
			local f4_local0 = Engine[@"getmodelvalue"]( model ) --[[ @ 0]]
			if f4_local0 then
				self.Text:setHeight( CoD.setTextSizeFromHeightEnum( f4_local0 ) ) --[[ @ 0]]
			end
		end ) --[[ @ 0]]
	end
	if f2_local0.red then
		self:subscribeToModel( f2_local0.red, function ( model )
			local f5_local0 = Engine[@"getmodelvalue"]( model ) --[[ @ 0]]
			if f5_local0 then
				self.red = f5_local0 --[[ @ 0]]
				f0_local0( self ) --[[ @ 0]]
			end
		end ) --[[ @ 0]]
	end
	if f2_local0.green then
		self:subscribeToModel( f2_local0.green, function ( model )
			local f6_local0 = Engine[@"getmodelvalue"]( model ) --[[ @ 0]]
			if f6_local0 then
				self.green = f6_local0 --[[ @ 0]]
				f0_local0( self ) --[[ @ 0]]
			end
		end ) --[[ @ 0]]
	end
	if f2_local0.blue then
		self:subscribeToModel( f2_local0.blue, function ( model )
			local f7_local0 = Engine[@"getmodelvalue"]( model ) --[[ @ 0]]
			if f7_local0 then
				self.blue = f7_local0 --[[ @ 0]]
				f0_local0( self ) --[[ @ 0]]
			end
		end ) --[[ @ 0]]
	end
	if f2_local0.horizontal_alignment then
		self:subscribeToModel( f2_local0.horizontal_alignment, function ( model )
			local f8_local0 = Engine[@"getmodelvalue"]( model ) --[[ @ 0]]
			self.Text:setAlignment( f8_local0 ) --[[ @ 0]]
			if f8_local0 == 1 then
				self.Text:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
			elseif f8_local0 == 2 then
				self.Text:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
			elseif f8_local0 == 3 then
				self.Text:setAlignment( Enum[@"luialignment"][@"lui_alignment_right"] ) --[[ @ 0]]
			end
		end ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
CoD.LUIelemText = InheritFrom( CoD.Menu ) --[[ @ 0]]
LUI.createMenu.LUIelemText = function ( f9_arg0, f9_arg1 )
	local self = CoD.Menu.NewForUIEditor( "LUIelemText", f9_arg0 ) --[[ @ 0]]
	local f9_local1 = self --[[ @ 0]]
	self:setClass( CoD.LUIelemText ) --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self:setOwner( f9_arg0 ) --[[ @ 0]]
	self:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	self:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	self:playSound( "menu_open", f9_arg0 ) --[[ @ 0]]
	self.ignoreCursor = true --[[ @ 0]]
	
	local Text = LUI.UIText.new( 0, 1, 30, 30, 0, 0, 30, 67 ) --[[ @ 0]]
	Text:setTTF( "default" ) --[[ @ 0]]
	Text:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	Text:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	Text:linkToElementModel( self, "x", true, function ( model )
		local f10_local0 = model:get() --[[ @ 0]]
		if f10_local0 ~= nil then
			Text:setLeftPx( Multiple( 15, f10_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	Text:linkToElementModel( self, "y", true, function ( model )
		local f11_local0 = model:get() --[[ @ 0]]
		if f11_local0 ~= nil then
			Text:setTopPx( Multiple( 15, f11_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	Text:linkToElementModel( self, "text", true, function ( model )
		local f12_local0 = model:get() --[[ @ 0]]
		if f12_local0 ~= nil then
			Text:setText( Engine[@"hash_4F9F1239CFD921FE"]( f12_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Text ) --[[ @ 0]]
	self.Text = Text --[[ @ 0]]
	
	self:registerEventHandler( "menu_loaded", function ( self, event )
		local f13_local0 = nil --[[ @ 0]]
		if self.menuLoaded then
			f13_local0 = self:menuLoaded( event ) --[[ @ 0]]
		elseif self.super.menuLoaded then
			f13_local0 = self.super:menuLoaded( event ) --[[ @ 0]]
		end
		SizeToSafeArea( self, f9_arg0 ) --[[ @ 0]]
		if not f13_local0 then
			f13_local0 = self:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f13_local0
	end ) --[[ @ 0]]
	self:processEvent( {
		name = "menu_loaded",
		controller = f9_arg0
	} ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f9_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.LUIelemText.__onClose = function ( f14_arg0 )
	f14_arg0.Text:close() --[[ @ 0]]
end
 --[[ @ 0]]
