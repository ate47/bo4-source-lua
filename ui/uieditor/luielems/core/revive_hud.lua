-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:36
require( "ui/uieditor/widgets/hud/obituary/obituaryblurbacking" ) --[[ @ 0]]
require( "x64:376cc25e6b842a01" ) --[[ @ 0]]

CoD.revive_hud = InheritFrom( CoD.Menu ) --[[ @ 0]]
LUI.createMenu.revive_hud = function ( f1_arg0, f1_arg1 )
	local self = CoD.Menu.NewForUIEditor( "revive_hud", f1_arg0 ) --[[ @ 0]]
	local f1_local1 = self --[[ @ 0]]
	self:setClass( CoD.revive_hud ) --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self:setOwner( f1_arg0 ) --[[ @ 0]]
	self:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	self:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	self:playSound( "menu_open", f1_arg0 ) --[[ @ 0]]
	self.ignoreCursor = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_local1:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local TextBox = LUI.UIText.new( 0.5, 0.5, -960, 960, 1, 1, -284, -248 ) --[[ @ 0]]
	TextBox:setTTF( "notosans_regular" ) --[[ @ 0]]
	TextBox:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_171E049B161CD00A" ) ) --[[ @ 0]]
	TextBox:setAlignment( Enum[@"LUIAlignment"][@"hash_1FEEB12BCB0D7041"] ) --[[ @ 0]]
	TextBox:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	TextBox:setBackingType( 1 ) --[[ @ 0]]
	TextBox:setBackingWidget( CoD.ObituaryBlurBacking, f1_local1, f1_arg0 ) --[[ @ 0]]
	TextBox:setBackingColor( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	TextBox:setBackingAlpha( 0.99 ) --[[ @ 0]]
	TextBox:setBackingXPadding( 14 ) --[[ @ 0]]
	TextBox:linkToElementModel( self, "text", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			TextBox:setText( Engine[@"hash_4F9F1239CFD921FE"]( f2_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( TextBox ) --[[ @ 0]]
	self.TextBox = TextBox --[[ @ 0]]
	
	local UseTimer = CoD.WarzoneUseTimer.new( f1_local1, f1_arg0, 0.5, 0.5, -300, 300, 1, 1, -370, -290 ) --[[ @ 0]]
	UseTimer:mergeStateConditions( {
		{
			stateName = "Healing",
			condition = function ( menu, element, event )
				local f3_local0 = CoD.ModelUtility.IsModelValueGreaterThan( f1_arg0, "playerAbilities.PlayerGadget1.powerRatio", 0 ) --[[ @ 0]]
				if f3_local0 then
					f3_local0 = CoD.ModelUtility.IsModelValueEqualToEnum( f1_arg0, "playerAbilities.playerGadget1.state", Enum[@"hash_F0447219F15F7F3"][@"hash_51873A43E9D1620E"] ) --[[ @ 0]]
					if f3_local0 then
						if not Engine[@"IsVisibilityBitSet"]( f1_arg0, Enum[@"UIVisibilityBit"][@"hash_534C7B2375D2D47"] ) then
							f3_local0 = not IsZombies() --[[ @ 0]]
						else
							f3_local0 = false --[[ @ 0]]
						end
					end
				end
				return f3_local0
			end
		},
		{
			stateName = "Reviving",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsModelValueGreaterThan( f1_arg0, "hudItems.laststand.reviveProgress", 0 ) and not IsZombies()
			end
		},
		{
			stateName = "BeingRevived",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsModelValueEqualTo( f1_arg0, "hudItems.laststand.beingRevived", 1 ) and not IsZombies()
			end
		},
		{
			stateName = "Deposit",
			condition = function ( menu, element, event )
				local f6_local0 = CoD.ModelUtility.IsModelValueGreaterThan( f1_arg0, "hudItems.dynEntUseHoldProgress", 0 ) --[[ @ 0]]
				if f6_local0 then
					f6_local0 = CoD.ModelUtility.IsModelValueGreaterThan( f1_arg0, "hudItems.depositing", 0 ) --[[ @ 0]]
					if f6_local0 then
						f6_local0 = not IsZombies() --[[ @ 0]]
					end
				end
				return f6_local0
			end
		}
	} ) --[[ @ 0]]
	local f1_local4 = UseTimer --[[ @ 0]]
	local f1_local5 = UseTimer.subscribeToModel --[[ @ 0]]
	local f1_local6 = Engine[@"GetModelForController"]( f1_arg0 ) --[[ @ 0]]
	f1_local5( f1_local4, f1_local6["playerAbilities.PlayerGadget1.powerRatio"], function ( f7_arg0 )
		f1_local1:updateElementState( UseTimer, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f7_arg0:get(),
			modelName = "playerAbilities.PlayerGadget1.powerRatio"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local4 = UseTimer --[[ @ 0]]
	f1_local5 = UseTimer.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"GetModelForController"]( f1_arg0 ) --[[ @ 0]]
	f1_local5( f1_local4, f1_local6["playerAbilities.playerGadget1.state"], function ( f8_arg0 )
		f1_local1:updateElementState( UseTimer, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f8_arg0:get(),
			modelName = "playerAbilities.playerGadget1.state"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local4 = UseTimer --[[ @ 0]]
	f1_local5 = UseTimer.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"GetModelForController"]( f1_arg0 ) --[[ @ 0]]
	f1_local5( f1_local4, f1_local6["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_534C7B2375D2D47"]], function ( f9_arg0 )
		f1_local1:updateElementState( UseTimer, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f9_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_534C7B2375D2D47"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local4 = UseTimer --[[ @ 0]]
	f1_local5 = UseTimer.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local5( f1_local4, f1_local6["lobbyRoot.lobbyNav"], function ( f10_arg0 )
		f1_local1:updateElementState( UseTimer, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f10_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local4 = UseTimer --[[ @ 0]]
	f1_local5 = UseTimer.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"GetModelForController"]( f1_arg0 ) --[[ @ 0]]
	f1_local5( f1_local4, f1_local6["hudItems.laststand.reviveProgress"], function ( f11_arg0 )
		f1_local1:updateElementState( UseTimer, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f11_arg0:get(),
			modelName = "hudItems.laststand.reviveProgress"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local4 = UseTimer --[[ @ 0]]
	f1_local5 = UseTimer.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"GetModelForController"]( f1_arg0 ) --[[ @ 0]]
	f1_local5( f1_local4, f1_local6["hudItems.laststand.beingRevived"], function ( f12_arg0 )
		f1_local1:updateElementState( UseTimer, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f12_arg0:get(),
			modelName = "hudItems.laststand.beingRevived"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local4 = UseTimer --[[ @ 0]]
	f1_local5 = UseTimer.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"GetModelForController"]( f1_arg0 ) --[[ @ 0]]
	f1_local5( f1_local4, f1_local6["hudItems.lastStand.progress"], function ( f13_arg0 )
		f1_local1:updateElementState( UseTimer, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f13_arg0:get(),
			modelName = "hudItems.lastStand.progress"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local4 = UseTimer --[[ @ 0]]
	f1_local5 = UseTimer.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"GetModelForController"]( f1_arg0 ) --[[ @ 0]]
	f1_local5( f1_local4, f1_local6["hudItems.lastStand.beingRevived"], function ( f14_arg0 )
		f1_local1:updateElementState( UseTimer, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f14_arg0:get(),
			modelName = "hudItems.lastStand.beingRevived"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local4 = UseTimer --[[ @ 0]]
	f1_local5 = UseTimer.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"GetModelForController"]( f1_arg0 ) --[[ @ 0]]
	f1_local5( f1_local4, f1_local6["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"]], function ( f15_arg0 )
		f1_local1:updateElementState( UseTimer, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f15_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local4 = UseTimer --[[ @ 0]]
	f1_local5 = UseTimer.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"GetModelForController"]( f1_arg0 ) --[[ @ 0]]
	f1_local5( f1_local4, f1_local6["hudItems.beingFinished"], function ( f16_arg0 )
		f1_local1:updateElementState( UseTimer, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f16_arg0:get(),
			modelName = "hudItems.beingFinished"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local4 = UseTimer --[[ @ 0]]
	f1_local5 = UseTimer.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"GetModelForController"]( f1_arg0 ) --[[ @ 0]]
	f1_local5( f1_local4, f1_local6["hudItems.dynEntUseHoldProgress"], function ( f17_arg0 )
		f1_local1:updateElementState( UseTimer, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f17_arg0:get(),
			modelName = "hudItems.dynEntUseHoldProgress"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local4 = UseTimer --[[ @ 0]]
	f1_local5 = UseTimer.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"GetModelForController"]( f1_arg0 ) --[[ @ 0]]
	f1_local5( f1_local4, f1_local6["hudItems.depositing"], function ( f18_arg0 )
		f1_local1:updateElementState( UseTimer, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f18_arg0:get(),
			modelName = "hudItems.depositing"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:addElement( UseTimer ) --[[ @ 0]]
	self.UseTimer = UseTimer --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Visible",
			condition = function ( menu, element, event )
				return not Engine[@"IsVisibilityBitSet"]( f1_arg0, Enum[@"UIVisibilityBit"][@"hash_66FFF566DCC09BBD"] )
			end
		}
	} ) --[[ @ 0]]
	f1_local4 = self --[[ @ 0]]
	f1_local5 = self.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"GetModelForController"]( f1_arg0 ) --[[ @ 0]]
	f1_local5( f1_local4, f1_local6["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_66FFF566DCC09BBD"]], function ( f20_arg0 )
		f1_local1:updateElementState( self, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f20_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_66FFF566DCC09BBD"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:processEvent( {
		name = "menu_loaded",
		controller = f1_arg0
	} ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg0 ) --[[ @ 0]]
	end
	
	f1_local5 = self --[[ @ 0]]
	CoD.HUDUtility.SetupReviveHud( self, self.TextBox, f1_arg0 ) --[[ @ 0]]
	return self
end
 --[[ @ 0]]
CoD.revive_hud.__resetProperties = function ( f21_arg0 )
	f21_arg0.TextBox:completeAnimation() --[[ @ 0]]
	f21_arg0.TextBox:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.revive_hud.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f22_arg0, f22_arg1 )
			f22_arg0:__resetProperties() --[[ @ 0]]
			f22_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f22_arg0.TextBox:completeAnimation() --[[ @ 0]]
			f22_arg0.TextBox:setAlpha( 0 ) --[[ @ 0]]
			f22_arg0.clipFinished( f22_arg0.TextBox ) --[[ @ 0]]
		end,
		Visible = function ( f23_arg0, f23_arg1 )
			f23_arg0:__resetProperties() --[[ @ 0]]
			f23_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f23_local0 = function ( f24_arg0 )
				f23_arg0.TextBox:beginAnimation( 200, Enum[@"hash_1F50FFF429AB1890"][@"hash_55D2D9CF90AB1735"] | Enum[@"hash_1F50FFF429AB1890"][@"hash_2053CEB9A0427197"] ) --[[ @ 0]]
				f23_arg0.TextBox:setAlpha( 1 ) --[[ @ 0]]
				f23_arg0.TextBox:registerEventHandler( "interrupted_keyframe", f23_arg0.clipInterrupted ) --[[ @ 0]]
				f23_arg0.TextBox:registerEventHandler( "transition_complete_keyframe", f23_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f23_arg0.TextBox:completeAnimation() --[[ @ 0]]
			f23_arg0.TextBox:setAlpha( 0 ) --[[ @ 0]]
			f23_local0( f23_arg0.TextBox ) --[[ @ 0]]
		end
	},
	Visible = {
		DefaultClip = function ( f25_arg0, f25_arg1 )
			f25_arg0:__resetProperties() --[[ @ 0]]
			f25_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f25_arg0.TextBox:completeAnimation() --[[ @ 0]]
			f25_arg0.TextBox:setAlpha( 1 ) --[[ @ 0]]
			f25_arg0.clipFinished( f25_arg0.TextBox ) --[[ @ 0]]
		end,
		DefaultState = function ( f26_arg0, f26_arg1 )
			f26_arg0:__resetProperties() --[[ @ 0]]
			f26_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f26_local0 = function ( f27_arg0 )
				f26_arg0.TextBox:beginAnimation( 400 ) --[[ @ 0]]
				f26_arg0.TextBox:setAlpha( 0 ) --[[ @ 0]]
				f26_arg0.TextBox:registerEventHandler( "interrupted_keyframe", f26_arg0.clipInterrupted ) --[[ @ 0]]
				f26_arg0.TextBox:registerEventHandler( "transition_complete_keyframe", f26_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f26_arg0.TextBox:completeAnimation() --[[ @ 0]]
			f26_arg0.TextBox:setAlpha( 1 ) --[[ @ 0]]
			f26_local0( f26_arg0.TextBox ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.revive_hud.__onClose = function ( f28_arg0 )
	f28_arg0.TextBox:close() --[[ @ 0]]
	f28_arg0.UseTimer:close() --[[ @ 0]]
end
 --[[ @ 0]]
