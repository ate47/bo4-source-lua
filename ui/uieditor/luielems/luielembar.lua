-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:51
local f0_local0 = function ( f1_arg0 )
	if f1_arg0.red and f1_arg0.green and f1_arg0.blue then
		f1_arg0.BarForeground:setRGB( f1_arg0.red, f1_arg0.green, f1_arg0.blue ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
local PostLoadFunc = function ( self, controller )
	local f2_local0 = self:getModel( controller, "alpha" ) --[[ @ 0]]
	local f2_local1 = self:getModel( controller, "fadeOverTime" ) --[[ @ 0]]
	local f2_local2 = self:getModel( controller, "red" ) --[[ @ 0]]
	local f2_local3 = self:getModel( controller, "green" ) --[[ @ 0]]
	local f2_local4 = self:getModel( controller, "blue" ) --[[ @ 0]]
	self.red = 1 --[[ @ 0]]
	self.green = 1 --[[ @ 0]]
	self.blue = 1 --[[ @ 0]]
	if f2_local0 then
		self:subscribeToModel( f2_local0, function ( model )
			local f3_local0 = Engine[@"getmodelvalue"]( model ) --[[ @ 0]]
			if f3_local0 then
				self.alpha = f3_local0 --[[ @ 0]]
				local f3_local1 = self:getModel() --[[ @ 0]]
				f3_local1 = f3_local1.fadeOverTime:get() * 100 --[[ @ 0]]
				self.BarBackground:beginAnimation( f3_local1 ) --[[ @ 0]]
				self.BarForeground:beginAnimation( f3_local1 ) --[[ @ 0]]
				self.BarBackground:setAlpha( self.alpha ) --[[ @ 0]]
				self.BarForeground:setAlpha( self.alpha ) --[[ @ 0]]
				self:setAlpha( self.alpha ) --[[ @ 0]]
			end
		end ) --[[ @ 0]]
	end
	if f2_local2 then
		self:subscribeToModel( f2_local2, function ( model )
			local f4_local0 = Engine[@"getmodelvalue"]( model ) --[[ @ 0]]
			if f4_local0 then
				self.red = f4_local0 --[[ @ 0]]
				f0_local0( self ) --[[ @ 0]]
			end
		end ) --[[ @ 0]]
	end
	if f2_local3 then
		self:subscribeToModel( f2_local3, function ( model )
			local f5_local0 = Engine[@"getmodelvalue"]( model ) --[[ @ 0]]
			if f5_local0 then
				self.green = f5_local0 --[[ @ 0]]
				f0_local0( self ) --[[ @ 0]]
			end
		end ) --[[ @ 0]]
	end
	if f2_local4 then
		self:subscribeToModel( f2_local4, function ( model )
			local f6_local0 = Engine[@"getmodelvalue"]( model ) --[[ @ 0]]
			if f6_local0 then
				self.blue = f6_local0 --[[ @ 0]]
				f0_local0( self ) --[[ @ 0]]
			end
		end ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
CoD.LUIelemBar = InheritFrom( CoD.Menu ) --[[ @ 0]]
LUI.createMenu.LUIelemBar = function ( f7_arg0, f7_arg1 )
	local self = CoD.Menu.NewForUIEditor( "LUIelemBar", f7_arg0 ) --[[ @ 0]]
	local f7_local1 = self --[[ @ 0]]
	self:setClass( CoD.LUIelemBar ) --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self:setOwner( f7_arg0 ) --[[ @ 0]]
	self:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	self:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	self:playSound( "menu_open", f7_arg0 ) --[[ @ 0]]
	self.ignoreCursor = true --[[ @ 0]]
	
	local BarBackground = LUI.UIImage.new( 0, 0, 30, 46, 0, 0, 30, 38 ) --[[ @ 0]]
	BarBackground:setRGB( 0, 0, 0 ) --[[ @ 0]]
	BarBackground:linkToElementModel( self, "x", true, function ( model )
		local f8_local0 = model:get() --[[ @ 0]]
		if f8_local0 ~= nil then
			BarBackground:setLeftPx( Multiple( 15, f8_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	BarBackground:linkToElementModel( self, "y", true, function ( model )
		local f9_local0 = model:get() --[[ @ 0]]
		if f9_local0 ~= nil then
			BarBackground:setTopPx( Multiple( 15, f9_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	BarBackground:linkToElementModel( self, "width", true, function ( model )
		local f10_local0 = model:get() --[[ @ 0]]
		if f10_local0 ~= nil then
			BarBackground:setWidth( Multiple( 8, f10_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	BarBackground:linkToElementModel( self, "height", true, function ( model )
		local f11_local0 = model:get() --[[ @ 0]]
		if f11_local0 ~= nil then
			BarBackground:setHeight( Multiple( 4, f11_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( BarBackground ) --[[ @ 0]]
	self.BarBackground = BarBackground --[[ @ 0]]
	
	local BarForeground = LUI.UIImage.new( 0, 0, 31, 45, 0, 0, 31, 37 ) --[[ @ 0]]
	BarForeground:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_wipe_normal" ) ) --[[ @ 0]]
	BarForeground:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	BarForeground:setShaderVector( 2, 1, 0, 0, 0 ) --[[ @ 0]]
	BarForeground:setShaderVector( 3, 0, 0, 0, 0 ) --[[ @ 0]]
	BarForeground:setShaderVector( 4, 0, 0, 0, 0 ) --[[ @ 0]]
	BarForeground:linkToElementModel( self, "x", true, function ( model )
		local f12_local0 = model:get() --[[ @ 0]]
		if f12_local0 ~= nil then
			BarForeground:setLeftPx( Add( 1, Multiple( 15, f12_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	BarForeground:linkToElementModel( self, "y", true, function ( model )
		local f13_local0 = model:get() --[[ @ 0]]
		if f13_local0 ~= nil then
			BarForeground:setTopPx( Add( 1, Multiple( 15, f13_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	BarForeground:linkToElementModel( self, "width", true, function ( model )
		local f14_local0 = model:get() --[[ @ 0]]
		if f14_local0 ~= nil then
			BarForeground:setWidth( Add( -2, Multiple( 8, f14_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	BarForeground:linkToElementModel( self, "height", true, function ( model )
		local f15_local0 = model:get() --[[ @ 0]]
		if f15_local0 ~= nil then
			BarForeground:setHeight( Add( -2, Multiple( 4, f15_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	BarForeground:linkToElementModel( self, "bar_percent", true, function ( model )
		local f16_local0 = model:get() --[[ @ 0]]
		if f16_local0 ~= nil then
			BarForeground:setShaderVector( 0, CoD.GetVectorComponentFromString( f16_local0, 1 ), CoD.GetVectorComponentFromString( f16_local0, 2 ), CoD.GetVectorComponentFromString( f16_local0, 3 ), CoD.GetVectorComponentFromString( f16_local0, 4 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( BarForeground ) --[[ @ 0]]
	self.BarForeground = BarForeground --[[ @ 0]]
	
	self:processEvent( {
		name = "menu_loaded",
		controller = f7_arg0
	} ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f7_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.LUIelemBar.__onClose = function ( f17_arg0 )
	f17_arg0.BarBackground:close() --[[ @ 0]]
	f17_arg0.BarForeground:close() --[[ @ 0]]
end
 --[[ @ 0]]
