-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:36
local f0_local0 = function ( f1_arg0 )
	if f1_arg0.red and f1_arg0.green and f1_arg0.blue then
		f1_arg0.Fullscreen:setRGB( f1_arg0.red, f1_arg0.green, f1_arg0.blue ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
local PostLoadFunc = function ( f2_arg0 )
	local f2_local0 = f2_arg0:getModel( Engine[@"GetPrimaryController"](), "red" ) --[[ @ 0]]
	local f2_local1 = f2_arg0:getModel( Engine[@"GetPrimaryController"](), "green" ) --[[ @ 0]]
	local f2_local2 = f2_arg0:getModel( Engine[@"GetPrimaryController"](), "blue" ) --[[ @ 0]]
	if f2_local0 then
		f2_arg0:subscribeToModel( f2_local0, function ( model )
			local f3_local0 = Engine[@"GetModelValue"]( model ) --[[ @ 0]]
			if f3_local0 then
				f2_arg0.red = f3_local0 --[[ @ 0]]
				f0_local0( f2_arg0 ) --[[ @ 0]]
			end
		end ) --[[ @ 0]]
	end
	if f2_local1 then
		f2_arg0:subscribeToModel( f2_local1, function ( model )
			local f4_local0 = Engine[@"GetModelValue"]( model ) --[[ @ 0]]
			if f4_local0 then
				f2_arg0.green = f4_local0 --[[ @ 0]]
				f0_local0( f2_arg0 ) --[[ @ 0]]
			end
		end ) --[[ @ 0]]
	end
	if f2_local2 then
		f2_arg0:subscribeToModel( f2_local2, function ( model )
			local f5_local0 = Engine[@"GetModelValue"]( model ) --[[ @ 0]]
			if f5_local0 then
				f2_arg0.blue = f5_local0 --[[ @ 0]]
				f0_local0( f2_arg0 ) --[[ @ 0]]
			end
		end ) --[[ @ 0]]
	end
	local f2_local3 = f2_arg0:getModel() --[[ @ 0]]
	local f2_local4 = function ()
		local f6_local0 = f2_local3.fadeOverTime:get() --[[ @ 0]]
		local f6_local1 = f2_local3.startAlpha --[[ @ 0]]
		local f6_local2 = f2_local3.endAlpha --[[ @ 0]]
		local f6_local3 --[[ @ 0]]
		if f6_local1 then
			f6_local3 = f6_local1:get() --[[ @ 0]]
			if not f6_local3 then
			
			else
				local f6_local4 --[[ @ 0]]
				if f6_local2 then
					f6_local4 = f6_local2:get() --[[ @ 0]]
					if not f6_local4 then
					
					else
						if f6_local0 then
							if f6_local4 == 0 then
								if f6_local3 == 0 or f6_local0 == 0 then
									CoD.Menu.RemoveFromCurrMenuNameList( f2_arg0.menuName ) --[[ @ 0]]
								else
									f2_arg0.Fullscreen:registerEventHandler( "clip_over", function ( element, event )
										element.Fullscreen:registerEventHandler( "clip_over", CoD.NullFunction ) --[[ @ 0]]
										CoD.Menu.RemoveFromCurrMenuNameList( element.menuName ) --[[ @ 0]]
									end ) --[[ @ 0]]
								end
							else
								CoD.Menu.AddToCurrMenuNameList( f2_arg0.menuName ) --[[ @ 0]]
							end
							if f6_local3 >= 0 then
								f2_arg0.Fullscreen:setAlpha( f6_local3 ) --[[ @ 0]]
							end
							f2_arg0.Fullscreen:beginAnimation( "fadeOverTime", f6_local0 ) --[[ @ 0]]
							f2_arg0.Fullscreen:setAlpha( f6_local4 ) --[[ @ 0]]
						end
					end
				end
				f6_local4 = 0 --[[ @ 0]]
			end
		end
		f6_local3 = 0 --[[ @ 0]]
	end
	 --[[ @ 0]]
	for f2_local8, f2_local9 in ipairs( {
		f2_local3.startAlpha,
		f2_local3.endAlpha,
		f2_local3.fadeOverTime
	} ) --[[ @ 0]] do
		f2_arg0:subscribeToModel( f2_local9, f2_local4 ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
CoD.full_screen_black = InheritFrom( CoD.Menu ) --[[ @ 0]]
LUI.createMenu.full_screen_black = function ( f8_arg0, f8_arg1 )
	local self = CoD.Menu.NewForUIEditor( "full_screen_black", f8_arg0 ) --[[ @ 0]]
	local f8_local1 = self --[[ @ 0]]
	SetProperty( self, "disableInputLock", true ) --[[ @ 0]]
	self:setClass( CoD.full_screen_black ) --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self:setOwner( f8_arg0 ) --[[ @ 0]]
	self:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	self:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	self:playSound( "menu_open", f8_arg0 ) --[[ @ 0]]
	self.ignoreCursor = true --[[ @ 0]]
	
	local Fullscreen = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	self:addElement( Fullscreen ) --[[ @ 0]]
	self.Fullscreen = Fullscreen --[[ @ 0]]
	
	self.Fullscreen:linkToElementModel( self, "color", true, function ( model )
		local f9_local0 = model:get() --[[ @ 0]]
		if f9_local0 ~= nil then
			Fullscreen:setRGB( f9_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:linkToElementModel( self, "drawHUD", true, function ( model )
		local f10_local0 = self --[[ @ 0]]
		if CoD.ModelUtility.IsParamModelEqualTo( model, 1 ) then
			SetProperty( self, "_priority", -1 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:processEvent( {
		name = "menu_loaded",
		controller = f8_arg0
	} ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f8_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.full_screen_black.__onClose = function ( f11_arg0 )
	f11_arg0.Fullscreen:close() --[[ @ 0]]
end
 --[[ @ 0]]
