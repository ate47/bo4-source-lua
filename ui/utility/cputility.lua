-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:35
CoD.CPUtility = {} --[[ @ 0]]
require( "ui/utility/overlayutility" ) --[[ @ 0]]
CoD.CPUtility.DIFFICULTY = {} --[[ @ 0]]
CoD.CPUtility.DIFFICULTY[0] = @"menu/recruit" --[[ @ 0]]
CoD.CPUtility.DIFFICULTY[1] = @"menu/regular" --[[ @ 0]]
CoD.CPUtility.DIFFICULTY[2] = @"hash_5EB0FE85B0C234B0" --[[ @ 0]]
CoD.CPUtility.DIFFICULTY[3] = @"menu/veteran" --[[ @ 0]]
CoD.CPUtility.DIFFICULTY[4] = @"menu/heroic" --[[ @ 0]]
CoD.CPUtility.DIFFICULTY_DESC = {} --[[ @ 0]]
CoD.CPUtility.DIFFICULTY_DESC[0] = @"hash_6E6EE823F2A199D7" --[[ @ 0]]
CoD.CPUtility.DIFFICULTY_DESC[1] = @"hash_1DD1C9C6348D427D" --[[ @ 0]]
CoD.CPUtility.DIFFICULTY_DESC[2] = @"hash_4AE85AB083535732" --[[ @ 0]]
CoD.CPUtility.DIFFICULTY_DESC[3] = @"hash_15D910F0B084B1E8" --[[ @ 0]]
CoD.CPUtility.DIFFICULTY_DESC[4] = @"hash_C562663F9E9D20F" --[[ @ 0]]
CoD.CPUtility.DIFFICULTY_ICON = {} --[[ @ 0]]
CoD.CPUtility.DIFFICULTY_ICON[0] = "playlist_sp_recr" --[[ @ 0]]
CoD.CPUtility.DIFFICULTY_ICON[1] = "playlist_sp_reg" --[[ @ 0]]
CoD.CPUtility.DIFFICULTY_ICON[2] = "playlist_sp_hard" --[[ @ 0]]
CoD.CPUtility.DIFFICULTY_ICON[3] = "playlist_sp_vet" --[[ @ 0]]
CoD.CPUtility.DIFFICULTY_ICON[4] = "playlist_sp_real" --[[ @ 0]]
CoD.CPUtility.FrontendPlayerCharacterUpdate = "updateCpCharacter" --[[ @ 0]]
CoD.CPUtility.ObjectiveNotificationUpdateEvent = "objective_notification_update" --[[ @ 0]]
CoD.CPUtility.ObjectiveNotificationTransitionEvent = "objective_notification_transition" --[[ @ 0]]
CoD.CPUtility.ObjectiveNotificationSlideToTopEvent = "objective_notification_slide_to_top" --[[ @ 0]]
CoD.CPUtility.ObjectiveCompleteStateName = "ObjectiveComplete" --[[ @ 0]]
CoD.CPUtility.NOTIFICATION_BUFFER_ANIM_TIME_MS = 6 --[[ @ 0]]
CoD.CPUtility.NOTIFICATION_SHRINK_ANIM_TIME_MS = 300 --[[ @ 0]]
CoD.CPUtility.NOTIFICATION_SLIDE_ANIM_TIME_MS = 300 --[[ @ 0]]
CoD.CPUtility.ClearAllTransitionLives = 3 --[[ @ 0]]
CoD.CPUtility.INVALID_WAYPOINT_OBJ_ID = 0 --[[ @ 0]]
CoD.CPUtility.CP_OBJ_WIDGET_NONE = 0 --[[ @ 0]]
CoD.CPUtility.CP_OBJ_WIDGET_WAYPOINTS = 1 --[[ @ 0]]
CoD.CPUtility.CP_OBJ_WIDGET_CLEAR_ALL = 2 --[[ @ 0]]
CoD.CPUtility.CP_OBJ_WIDGET_GO_TO = 3 --[[ @ 0]]
CoD.CPUtility.CP_OBJ_WIDGET_HARDPOINT = 4 --[[ @ 0]]
CoD.CPUtility.CP_OBJ_WIDGET_PERCENT = 5 --[[ @ 0]]
CoD.CPUtility.CP_OBJ_PROGRESS_TYPE_NONE = 0 --[[ @ 0]]
CoD.CPUtility.CP_OBJ_PROGRESS_TYPE_FRACTION = 1 --[[ @ 0]]
CoD.CPUtility.CP_OBJ_PROGRESS_TYPE_PERCENT = 2 --[[ @ 0]]
CoD.CPUtility.CP_OBJ_PROGRESS_TYPE_TIME = 3 --[[ @ 0]]
CoD.CPUtility.CP_OBJ_INFO_STATE_INCOMPLETE = 0 --[[ @ 0]]
CoD.CPUtility.CP_OBJ_INFO_STATE_SUCCESS = 1 --[[ @ 0]]
CoD.CPUtility.CP_OBJ_INFO_STATE_FAILURE = 2 --[[ @ 0]]
CoD.CPUtility.CP_OBJ_INFO_TYPE_DEFAULT = 0 --[[ @ 0]]
CoD.CPUtility.CP_OBJ_INFO_TYPE_SPECIALIST = 1 --[[ @ 0]]
CoD.CPUtility.CP_OBJ_INFO_TYPE_OPTIONAL = 2 --[[ @ 0]]
CoD.CPUtility.NewsRoomChannels = LuaEnum.createEnum( "UNS", "NOBLE", "TORCH" ) --[[ @ 0]]
CoD.CPUtility.GetFactionFromStats = function ( f1_arg0 )
	if f1_arg0 then
		local f1_local0 = f1_arg0.faction --[[ @ 0]]
		local f1_local1 = f1_arg0.faction:get() --[[ @ 0]]
	end
	return f1_local0 and f1_local1 or Enum[@"team_t"][@"hash_42A34B055ADD98AB"]
end
 --[[ @ 0]]
CoD.CPUtility.GetFactionFromStatsByController = function ( f2_arg0 )
	return CoD.CPUtility.GetFactionFromStats( Engine[@"GetPlayerStats"]( f2_arg0 ) )
end
 --[[ @ 0]]
CoD.CPUtility.CreateCPFactionList = function ( f3_arg0, f3_arg1, f3_arg2, f3_arg3 )
	local f3_local0 = {} --[[ @ 0]]
	local f3_local1 = function ( f4_arg0 )
		return {
			models = {
				name = CoD.TeamUtility.GetDefaultTeamName( f4_arg0 ),
				image = CoD.TeamUtility.GetDefaultTeamFactionIcon( f4_arg0 ),
				detailedDescription = Engine[@"hash_4F9F1239CFD921FE"]( CoD.TeamUtility.GetDefaultTeamFactionDescription( f4_arg0 ) ),
				team = f4_arg0
			},
			properties = {
				faction = f4_arg0,
				action = f3_arg2,
				itemGainFocusAction = f3_arg3
			}
		}
	end
	 --[[ @ 0]]
	table.insert( f3_local0, f3_local1( Enum[@"team_t"][@"hash_42A34B055ADD98AB"] ) ) --[[ @ 0]]
	table.insert( f3_local0, f3_local1( Enum[@"team_t"][@"hash_33F83D7CE4BD7B68"] ) ) --[[ @ 0]]
	return f3_local0
end
 --[[ @ 0]]
DataSources.CPFactions = DataSourceHelpers.ListSetup( "CPFactions", function ( f5_arg0, f5_arg1 )
	return CoD.CPUtility.CreateCPFactionList( f5_arg0, f5_arg1 )
end, true ) --[[ @ 0]]
DataSources.CPFactions_Lobby = DataSourceHelpers.ListSetup( "CPFactions_Lobby", function ( f6_arg0, f6_arg1 )
	return CoD.CPUtility.CreateCPFactionList( f6_arg0, f6_arg1, function ( f7_arg0, f7_arg1, f7_arg2, f7_arg3, f7_arg4 )
		CoD.CPUtility.SelectFaction_Internal( f7_arg2, f7_arg1.faction ) --[[ @ 0]]
	end
	, function ( f8_arg0, f8_arg1, f8_arg2, f8_arg3, f8_arg4 )
		CoD.CPUtility.FactionHighlighted( f8_arg2, f8_arg4, f8_arg1 ) --[[ @ 0]]
	end
	 )
end, true, nil, function ( f9_arg0, f9_arg1, f9_arg2 )
	f9_arg1.loseFocusAction = function ( f10_arg0, f10_arg1, f10_arg2, f10_arg3, f10_arg4 )
		CoD.CPUtility.FactionHighlighted( f10_arg2, f10_arg4, {
			faction = CoD.CPUtility.GetFactionFromStatsByController( f10_arg2 )
		} ) --[[ @ 0]]
	end
	 --[[ @ 0]]
end ) --[[ @ 0]]
CoD.OverlayUtility.AddSystemOverlay( "CompleteCPFirstTimeFlow", {
	menuName = "SystemOverlay_FreeCursor",
	title = @"hash_353A77C82A092440",
	description = @"hash_57FBC646A5BC61C8",
	categoryType = CoD.OverlayUtility.OverlayTypes.Notice,
	[CoD.OverlayUtility.aCrossPromptFn] = function ( f11_arg0 )
		return function ( f12_arg0, f12_arg1 )
			GoBack( f12_arg0, f12_arg1 ) --[[ @ 0]]
		end
		
	end,
	[CoD.OverlayUtility.aCrossPromptText] = @"hash_25BE4A02B20F31F1",
	[CoD.OverlayUtility.bCirclePromptFn] = function ( f13_arg0 )
		return function ( f14_arg0, f14_arg1 )
			GoBack( f14_arg0, f14_arg1 ) --[[ @ 0]]
		end
		
	end,
	[CoD.OverlayUtility.bCirclePromptText] = @"hash_370A9FDC87CD3D48"
} ) --[[ @ 0]]
CoD.OverlayUtility.AddSystemOverlay( "ConfirmCompanionChange", {
	menuName = "SystemOverlay_FreeCursor",
	title = @"hash_2D53A1670E00816",
	description = function ( f15_arg0, f15_arg1 )
		local f15_local0 = Engine[@"GetPlayerStats"]( f15_arg0 ) --[[ @ 0]]
		local f15_local1 = CoD.PlayerRoleUtility.GetCachedHeroInfo( Enum[@"eModes"][@"hash_360063C67132EB69"], f15_local0.companion:get() ) --[[ @ 0]]
		return Engine[@"hash_4F9F1239CFD921FE"]( @"hash_F68F0D6082EA8E6", f15_local1.displayName )
	end,
	categoryType = CoD.OverlayUtility.OverlayTypes.Notice,
	[CoD.OverlayUtility.aCrossPromptFn] = function ( f16_arg0, f16_arg1 )
		return function ( f17_arg0, f17_arg1 )
			CoD.CPUtility.SelectCompanion_Internal( f17_arg1, f16_arg1 ) --[[ @ 0]]
			local f17_local0 = GoBack( f17_arg0, f17_arg1 ) --[[ @ 0]]
			SendClientScriptMenuChangeNotify( f17_arg1, f17_local0, false ) --[[ @ 0]]
			GoBack( f17_local0, f17_arg1 ) --[[ @ 0]]
		end
		
	end,
	[CoD.OverlayUtility.aCrossPromptText] = @"hash_6D8FF5E03592FD99",
	[CoD.OverlayUtility.bCirclePromptFn] = function ( f18_arg0, f18_arg1 )
		return function ( f19_arg0, f19_arg1 )
			GoBack( f19_arg0, f19_arg1 ) --[[ @ 0]]
		end
		
	end,
	[CoD.OverlayUtility.bCirclePromptText] = @"hash_7C2E92C54C2BE289"
} ) --[[ @ 0]]
CoD.OverlayUtility.AddSystemOverlay( "ConfirmFactionChange", {
	menuName = "SystemOverlay_FreeCursor",
	title = @"hash_A080AB301CEFC5C",
	description = function ( f20_arg0, f20_arg1 )
		return Engine[@"hash_4F9F1239CFD921FE"]( @"hash_401A66A45FDE33A4", CoD.TeamUtility.GetDefaultTeamName( CoD.CPUtility.GetFactionFromStatsByController( f20_arg0 ) ) )
	end,
	categoryType = CoD.OverlayUtility.OverlayTypes.Notice,
	[CoD.OverlayUtility.aCrossPromptFn] = function ( f21_arg0, f21_arg1 )
		return function ( f22_arg0, f22_arg1 )
			CoD.CPUtility.SelectFaction_Internal( f22_arg1, f21_arg1 ) --[[ @ 0]]
			local f22_local0 = GoBack( f22_arg0, f22_arg1 ) --[[ @ 0]]
			SendClientScriptMenuChangeNotify( f22_arg1, f22_local0, false ) --[[ @ 0]]
			GoBack( f22_local0, f22_arg1 ) --[[ @ 0]]
		end
		
	end,
	[CoD.OverlayUtility.aCrossPromptText] = @"hash_6D8FF5E03592FD99",
	[CoD.OverlayUtility.bCirclePromptFn] = function ( f23_arg0, f23_arg1 )
		return function ( f24_arg0, f24_arg1 )
			GoBack( f24_arg0, f24_arg1 ) --[[ @ 0]]
		end
		
	end,
	[CoD.OverlayUtility.bCirclePromptText] = @"hash_7C2E92C54C2BE289"
} ) --[[ @ 0]]
CoD.CPUtility.SelectCompanion_Internal = function ( f25_arg0, f25_arg1 )
	local f25_local0 = Engine[@"GetPlayerStats"]( f25_arg0 ) --[[ @ 0]]
	f25_local0.companion:set( f25_arg1 ) --[[ @ 0]]
	UploadStats( f25_arg0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.CPUtility.GetTeamTokenXModel = function ( f26_arg0 )
	if f26_arg0 == Enum[@"team_t"][@"hash_42A34B055ADD98AB"] or f26_arg0 == Enum[@"team_t"][@"hash_33F83D7CE4BD7B68"] then
		return "p8_frontend_cp_faction_" .. Engine[@"GetFactionForTeam"]( f26_arg0 ) .. "_base"
	else
		return "tag_origin"
	end
end
 --[[ @ 0]]
CoD.CPUtility.GetFactionBodyIndexForPlayer = function ( f27_arg0 )
	local f27_local0 --[[ @ 0]]
	if f27_arg0 == Enum[@"team_t"][@"hash_42A34B055ADD98AB"] then
		f27_local0 = 0 --[[ @ 0]]
		if not f27_local0 then
		
		else
			return f27_local0
		end
	end
	f27_local0 = 1 --[[ @ 0]]
end
 --[[ @ 0]]
CoD.CPUtility.GetFactionBodyIndexForCompanion = function ( f28_arg0, f28_arg1 )
	local f28_local0 --[[ @ 0]]
	if f28_arg0 == Enum[@"team_t"][@"hash_42A34B055ADD98AB"] then
		f28_local0 = 1 --[[ @ 0]]
		if not f28_local0 then
		
		else
			if f28_arg1 and #f28_arg1.bodies <= f28_local0 then
				f28_local0 = 0 --[[ @ 0]]
			end
			return f28_local0
		end
	end
	f28_local0 = 2 --[[ @ 0]]
end
 --[[ @ 0]]
CoD.CPUtility.GetFactionHelmetIndexForCompanion = function ( f29_arg0, f29_arg1 )
	local f29_local0 --[[ @ 0]]
	if f29_arg0 == Enum[@"team_t"][@"hash_42A34B055ADD98AB"] then
		f29_local0 = 1 --[[ @ 0]]
		if not f29_local0 then
		
		else
			if f29_arg1 and #f29_arg1.helmets <= f29_local0 then
				f29_local0 = 0 --[[ @ 0]]
			end
			return f29_local0
		end
	end
	f29_local0 = 2 --[[ @ 0]]
end
 --[[ @ 0]]
CoD.CPUtility.SelectFaction_Internal = function ( f30_arg0, f30_arg1 )
	local f30_local0 = Engine[@"GetPlayerStats"]( f30_arg0 ) --[[ @ 0]]
	f30_local0.faction:set( f30_arg1 ) --[[ @ 0]]
	CoD.LobbyUtility.LobbySetTeam( f30_arg0, f30_arg1 ) --[[ @ 0]]
	UploadStats( f30_arg0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.CPUtility.SetupFrontendForFaction = function ( f31_arg0, f31_arg1 )
	SendClientScriptNotify( f31_arg0, "changeFactionToken", CoD.CPUtility.GetTeamTokenXModel( f31_arg1 ) ) --[[ @ 0]]
	SendCustomClientScriptNotifyForAdjustedClient( f31_arg0, CoD.CPUtility.FrontendPlayerCharacterUpdate, "changeBody", CoD.CPUtility.GetFactionBodyIndexForPlayer( f31_arg1 ), Enum[@"eModes"][@"hash_360063C67132EB69"], true ) --[[ @ 0]]
	local f31_local0 = Engine[@"GetPlayerStats"]( f31_arg0 ) --[[ @ 0]]
	local f31_local1 = f31_local0.companion:get() --[[ @ 0]]
	if f31_arg1 ~= CoD.CPUtility.GetFactionFromStats( f31_local0 ) then
		for f31_local5, f31_local6 in ipairs( CoD.PlayerRoleUtility.GetHeroList( Enum[@"eModes"][@"hash_360063C67132EB69"] ) ) --[[ @ 0]] do
			if f31_local6[@"hash_F9152904EFC2385"] ~= 0 and (not f31_local6[@"hash_1679A55C07A090C1"] or f31_local6[@"hash_1679A55C07A090C1"] == f31_arg1) then
				f31_local1 = f31_local6.bodyIndex --[[ @ 0]]
				break
			end
		end
	end
end
 --[[ @ 0]]
CoD.CPUtility.EnteredCP_FlowComplete = function ( f32_arg0 )
	CoD.CPUtility.SetupFrontendForFaction( f32_arg0, CoD.CPUtility.GetFactionFromStatsByController( f32_arg0 ) ) --[[ @ 0]]
	SendCustomClientScriptNotifyForAdjustedClient( f32_arg0, CoD.CPUtility.FrontendPlayerCharacterUpdate, "show" ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.CPUtility.SelectCompanion = function ( f33_arg0, f33_arg1, f33_arg2 )
	CoD.CPUtility.SelectCompanion_Internal( f33_arg0, f33_arg2.characterIndex ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.CPUtility.ChooseFaction = function ( f34_arg0, f34_arg1, f34_arg2 )
	CoD.CPUtility.SelectFaction_Internal( f34_arg0, f34_arg2.faction ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.CPUtility.FactionHighlighted = function ( f35_arg0, f35_arg1, f35_arg2 )
	CoD.CPUtility.SetupFrontendForFaction( f35_arg0, f35_arg2.faction ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.CPUtility.UnhideAllCPLobbyItems = function ( f36_arg0 )
	if IsCampaign() then
		SendClientScriptNotifyForAdjustedClient( f36_arg0, CoD.CPUtility.FrontendPlayerCharacterUpdate, "show" ) --[[ @ 0]]
		CoD.CPUtility.FactionHighlighted( f36_arg0, nil, {
			faction = CoD.CPUtility.GetFactionFromStatsByController( f36_arg0 )
		} ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
CoD.CPUtility.SetupVehicleHack = function ( f37_arg0, f37_arg1 )
	local f37_local0 = "gamedata/tables/cp/cp_vehicleHacks.csv" --[[ @ 0]]
	local f37_local1 = DataSources.HUDItems.getModel( f37_arg1 ) --[[ @ 0]]
	f37_local1 = f37_local1:create( "vehicleHack.mode" ) --[[ @ 0]]
	f37_local1 = f37_local1:get() --[[ @ 0]]
	local f37_local2 = {} --[[ @ 0]]
	local f37_local3 = DataSources.Controller.getModel( f37_arg1 ) --[[ @ 0]]
	f37_local2.cross = f37_local3[CoD.ButtonMappings.BUTTON_A]:get() --[[ @ 0]]
	f37_local3 = DataSources.Controller.getModel( f37_arg1 ) --[[ @ 0]]
	f37_local2.circle = f37_local3[CoD.ButtonMappings.BUTTON_B]:get() --[[ @ 0]]
	f37_local3 = DataSources.Controller.getModel( f37_arg1 ) --[[ @ 0]]
	f37_local2.square = f37_local3[CoD.ButtonMappings.BUTTON_X]:get() --[[ @ 0]]
	f37_local3 = DataSources.Controller.getModel( f37_arg1 ) --[[ @ 0]]
	f37_local2.triangle = f37_local3[CoD.ButtonMappings.BUTTON_Y]:get() --[[ @ 0]]
	f37_local3 = DataSources.Controller.getModel( f37_arg1 ) --[[ @ 0]]
	f37_local2.r1 = f37_local3[CoD.ButtonMappings.BUTTON_RSHLDR]:get() --[[ @ 0]]
	f37_local3 = DataSources.Controller.getModel( f37_arg1 ) --[[ @ 0]]
	f37_local2.l1 = f37_local3[CoD.ButtonMappings.BUTTON_LSHLDR]:get() --[[ @ 0]]
	f37_local3 = DataSources.Controller.getModel( f37_arg1 ) --[[ @ 0]]
	f37_local2.r2 = f37_local3[CoD.ButtonMappings.BUTTON_RTRIG]:get() --[[ @ 0]]
	f37_local3 = DataSources.Controller.getModel( f37_arg1 ) --[[ @ 0]]
	f37_local2.l2 = f37_local3[CoD.ButtonMappings.BUTTON_LTRIG]:get() --[[ @ 0]]
	f37_local3 = DataSources.Controller.getModel( f37_arg1 ) --[[ @ 0]]
	f37_local2.left = f37_local3[CoD.ButtonMappings.DPAD_LEFT]:get() --[[ @ 0]]
	f37_local3 = DataSources.Controller.getModel( f37_arg1 ) --[[ @ 0]]
	f37_local2.right = f37_local3[CoD.ButtonMappings.DPAD_RIGHT]:get() --[[ @ 0]]
	f37_local3 = DataSources.Controller.getModel( f37_arg1 ) --[[ @ 0]]
	f37_local2.up = f37_local3[CoD.ButtonMappings.DPAD_UP]:get() --[[ @ 0]]
	f37_local3 = DataSources.Controller.getModel( f37_arg1 ) --[[ @ 0]]
	f37_local2.down = f37_local3[CoD.ButtonMappings.DPAD_DOWN]:get() --[[ @ 0]]
	f37_local3 = DataSources.Controller.getModel( f37_arg1 ) --[[ @ 0]]
	f37_local2.l3 = f37_local3[CoD.ButtonMappings.BUTTON_LSTICK]:get() --[[ @ 0]]
	f37_local3 = DataSources.Controller.getModel( f37_arg1 ) --[[ @ 0]]
	f37_local2.r3 = f37_local3[CoD.ButtonMappings.BUTTON_RSTICK]:get() --[[ @ 0]]
	f37_local3 = {} --[[ @ 0]]
	local f37_local4 = 24 --[[ @ 0]]
	for f37_local5 = 1 --[[ @ 0]], f37_local4, 1 do
		table.insert( f37_local3, "buttonTime" .. f37_local5 ) --[[ @ 0]]
		table.insert( f37_local3, "buttonType" .. f37_local5 ) --[[ @ 0]]
	end
	local f37_local5 = LuaEnum.createEnum( "index", "difficulty", "numPrompts", unpack( f37_local3 ) ) --[[ @ 0]]
	local f37_local6 = tonumber( Engine[@"TableLookup"]( f37_local0, f37_local5.numPrompts, f37_local5.index, f37_local1 ) ) --[[ @ 0]]
	local f37_local7 = DataSources.HUDItems.getModel( f37_arg1 ) --[[ @ 0]]
	f37_local7 = f37_local7:create( "vehicleHack.level" ) --[[ @ 0]]
	local f37_local8 = f37_arg0.puzzleLevels --[[ @ 0]]
	if not f37_local8 then
		f37_arg0.puzzleLevels = {} --[[ @ 0]]
		f37_local8 = f37_arg0.puzzleLevels --[[ @ 0]]
		for f37_local9 = 1 --[[ @ 0]], f37_local4, 1 do
			local f37_local12 = f37_arg0.spinnerContainer["spinner" .. f37_local9] --[[ @ 0]]
			assert( f37_local12 and f37_local12.resultContainer ) --[[ @ 0]]
			table.insert( f37_local8, {
				spinner = f37_local12,
				image = "$white",
				text = ""
			} ) --[[ @ 0]]
		end
	else
		f37_arg0:playClip( "Failure" ) --[[ @ 0]]
		for f37_local13, f37_local12 in ipairs( f37_local8 ) --[[ @ 0]] do
			f37_local12.spinner:setState( f37_arg1, "DefaultState", false, true ) --[[ @ 0]]
			if f37_local12.timer then
				f37_local12.timer:close() --[[ @ 0]]
				f37_local12.timer = nil --[[ @ 0]]
			end
		end
	end
	local f37_local9 = function ()
		f37_local2.kbcross = Engine[@"KeyBinding"]( f37_arg1, "+forward" ) --[[ @ 0]]
		f37_local2.kbsquare = Engine[@"KeyBinding"]( f37_arg1, "+moveleft" ) --[[ @ 0]]
		f37_local2.kbtriangle = Engine[@"KeyBinding"]( f37_arg1, "+moveright" ) --[[ @ 0]]
		f37_local2.kbcircle = Engine[@"KeyBinding"]( f37_arg1, "+back" ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	local f37_local10 = function ( f39_arg0, f39_arg1 )
		f39_arg0.text = f37_local2["kb" .. Engine[@"TableLookup"]( f37_local0, f37_local5["buttonType" .. f39_arg1], f37_local5.index, f37_local1 )] or "" --[[ @ 0]]
		if #f39_arg0.text > 1 then
			f39_arg0.text = Engine[@"Localize"]( f39_arg0.text ) --[[ @ 0]]
		end
		assert( f39_arg0.text ~= nil ) --[[ @ 0]]
		f39_arg0.spinner.resultContainer.resultText:setText( Engine[@"ToUpper"]( f39_arg0.text ) ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	if CoD.isPC then
		f37_local9() --[[ @ 0]]
		f37_arg0:registerEventHandler( "input_source_changed", function ( element, event )
			f37_local9() --[[ @ 0]]
			for f40_local0 = 1 --[[ @ 0]], f37_local6, 1 do
				f37_local10( f37_local8[f40_local0], f40_local0 ) --[[ @ 0]]
			end
		end ) --[[ @ 0]]
	end
	LuaUtils.shuffle( f37_local8 ) --[[ @ 0]]
	local f37_local11 = Dvar[@"hash_611459B159CA3AB5"]:exists() --[[ @ 0]]
	if f37_local11 then
		f37_local11 = Dvar[@"hash_611459B159CA3AB5"]:get() ~= 0 --[[ @ 0]]
	end
	for f37_local13 = 1 --[[ @ 0]], f37_local6, 1 do
		if f37_local11 == false then
			f37_local8[f37_local13].delay = 0 --[[ @ 0]]
		else
			f37_local8[f37_local13].delay = tonumber( Engine[@"TableLookup"]( f37_local0, f37_local5["buttonTime" .. f37_local13], f37_local5.index, f37_local1 ) ) --[[ @ 0]]
		end
		f37_local8[f37_local13].image = f37_local2[Engine[@"TableLookup"]( f37_local0, f37_local5["buttonType" .. f37_local13], f37_local5.index, f37_local1 )] or "$white" --[[ @ 0]]
		if CoD.isPC then
			f37_local10( f37_local8[f37_local13], f37_local13 ) --[[ @ 0]]
		end
		f37_local8[f37_local13].spinner.resultContainer.result:setImage( RegisterImage( f37_local8[f37_local13].image ) ) --[[ @ 0]]
		f37_local8[f37_local13].spinner:setState( f37_arg1, "DefaultState", true, true ) --[[ @ 0]]
	end
	for f37_local13 = f37_local6 + 1 --[[ @ 0]], f37_local4, 1 do
		f37_local8[f37_local13].spinner:setState( f37_arg1, "Solved", true, true ) --[[ @ 0]]
	end
	local f37_local13 = function ( f41_arg0 )
		f41_arg0.timer = LUI.UITimer.newElementTimer( f41_arg0.delay, true, function ()
			f41_arg0.timer = nil --[[ @ 0]]
			f41_arg0.spinner:setState( f37_arg1, "Revealed", false, true ) --[[ @ 0]]
		end ) --[[ @ 0]]
		f37_arg0:addElement( f41_arg0.timer ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	local f37_local12 = 0 --[[ @ 0]]
	if f37_arg0._vehicleHackSubscription then
		f37_arg0:removeSubscription( f37_arg0._vehicleHackSubscription ) --[[ @ 0]]
	end
	f37_arg0._vehicleHackSubscription = f37_arg0:subscribeToModel( f37_local7, function ()
		local f43_local0 = f37_local7:get() --[[ @ 0]]
		if f37_local12 < f43_local0 then
			for f43_local1 = f37_local12 + 1 --[[ @ 0]], f43_local0, 1 do
				f37_local8[f43_local1].spinner:setState( f37_arg1, "Solved", false, true ) --[[ @ 0]]
				if f37_local8[f43_local1].timer then
					f37_local8[f43_local1].timer:close() --[[ @ 0]]
					f37_local8[f43_local1].timer = nil --[[ @ 0]]
				end
			end
			f37_local12 = f43_local0 --[[ @ 0]]
			if f37_local12 == f37_local6 then
				f37_arg0:setState( f37_arg1, "Solved", false, true ) --[[ @ 0]]
			end
			f37_local13( f37_local8[f37_local12 + 1] ) --[[ @ 0]]
		elseif f37_local12 == 0 and not f37_local8[1].timer then
			f37_arg0:setState( f37_arg1, "DefaultState", false, true ) --[[ @ 0]]
			f37_local13( f37_local8[1] ) --[[ @ 0]]
		elseif f43_local0 < f37_local12 and f37_local12 < f37_local6 then
			f37_arg0:playClip( "Failure" ) --[[ @ 0]]
			if f37_local8[f37_local12 + 1].timer then
				f37_local8[f37_local12 + 1].timer:close() --[[ @ 0]]
				f37_local8[f37_local12 + 1].timer = nil --[[ @ 0]]
			end
			for f43_local1 = f37_local12 + 1 --[[ @ 0]], f43_local0 + 1, -1 do
				if f37_local8[f43_local1].timer then
					f37_local8[f43_local1].timer:close() --[[ @ 0]]
					f37_local8[f43_local1].timer = nil --[[ @ 0]]
				end
				if f37_local12 + 1 < f37_local4 then
					local f43_local4 = math.random( f37_local12 + 1, f37_local4 ) --[[ @ 0]]
					local f43_local5 = f37_local8[f43_local1].spinner --[[ @ 0]]
					f37_local8[f43_local1].spinner = f37_local8[f43_local4].spinner --[[ @ 0]]
					f37_local8[f43_local4].spinner = f43_local5 --[[ @ 0]]
					if CoD.isPC then
						f37_local8[f43_local1].spinner.resultContainer.resultText:setText( Engine[@"ToUpper"]( f37_local8[f43_local1].text ) ) --[[ @ 0]]
						f37_local8[f43_local4].spinner.resultContainer.resultText:setText( Engine[@"ToUpper"]( f37_local8[f43_local4].text ) ) --[[ @ 0]]
					end
					f37_local8[f43_local1].spinner.resultContainer.result:setImage( RegisterImage( f37_local8[f43_local1].image ) ) --[[ @ 0]]
					f37_local8[f43_local4].spinner.resultContainer.result:setImage( RegisterImage( f37_local8[f43_local4].image ) ) --[[ @ 0]]
					f37_local8[f43_local4].spinner:setState( f37_arg1, f37_local8[f43_local1].spinner.currentState, true ) --[[ @ 0]]
					f37_local8[f43_local1].spinner:setState( f37_arg1, "DefaultState", true, true ) --[[ @ 0]]
				end
				f37_local8[f43_local1].spinner:setState( f37_arg1, "DefaultState", false, true ) --[[ @ 0]]
			end
			f37_local12 = f43_local0 --[[ @ 0]]
			f37_local13( f37_local8[f37_local12 + 1] ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
end
 --[[ @ 0]]
DataSourceHelpers.PerControllerDataSourceSetup( "SpinnerPuzzle", "hudItems.SpinnerPuzzle", function ( f44_arg0, f44_arg1 )
	local f44_local0 = function ( f45_arg0 )
		local f45_local0 = f44_arg0:create( "piece" .. f45_arg0 ) --[[ @ 0]]
		local f45_local1 = f45_local0:create( "highlighted" ) --[[ @ 0]]
		f45_local1:set( false ) --[[ @ 0]]
		f45_local1 = f45_local0:create( "lockedIn" ) --[[ @ 0]]
		f45_local1:set( false ) --[[ @ 0]]
		f45_local1 = f45_local0:create( "rotation" ) --[[ @ 0]]
		f45_local1:set( 0 ) --[[ @ 0]]
		f45_local1 = f45_local0:create( "visibleLines" ) --[[ @ 0]]
		f45_local1:set( 0 ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	local f44_local1 = f44_arg0:create( "active" ) --[[ @ 0]]
	f44_local1:set( false ) --[[ @ 0]]
	f44_local1 = 6 --[[ @ 0]]
	for f44_local2 = 0 --[[ @ 0]], f44_local1 - 1, 1 do
		f44_local0( f44_local2 ) --[[ @ 0]]
	end
end, false ) --[[ @ 0]]
DataSourceHelpers.PerControllerDataSourceSetup( "ThreeRings", "hudItems.ThreeRings", function ( f46_arg0, f46_arg1 )
	local f46_local0 = function ( f47_arg0 )
		local f47_local0 = f46_arg0:create( f47_arg0 ) --[[ @ 0]]
		local f47_local1 = f47_local0:create( "rotation" ) --[[ @ 0]]
		f47_local1:set( 0 ) --[[ @ 0]]
		f47_local1 = f47_local0:create( "arcString" ) --[[ @ 0]]
		f47_local1:set( "0 0.15" ) --[[ @ 0]]
		f47_local1 = f47_local0:create( "state" ) --[[ @ 0]]
		f47_local1:set( "inactive" ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	local f46_local1 = f46_arg0:create( "active" ) --[[ @ 0]]
	f46_local1:set( false ) --[[ @ 0]]
	f46_local1 = f46_arg0:create( "buttonPromptActive" ) --[[ @ 0]]
	f46_local1:set( false ) --[[ @ 0]]
	f46_local1 = f46_arg0:create( "arrowRotation" ) --[[ @ 0]]
	f46_local1:set( 0 ) --[[ @ 0]]
	f46_local1 = f46_arg0:create( "activeRing" ) --[[ @ 0]]
	f46_local1:set( "outer" ) --[[ @ 0]]
	f46_local0( "inner" ) --[[ @ 0]]
	f46_local0( "middle" ) --[[ @ 0]]
	f46_local0( "outer" ) --[[ @ 0]]
end, false ) --[[ @ 0]]
DataSourceHelpers.PerControllerDataSourceSetup( "AxeHack", "hudItems.AxeHack", function ( f48_arg0, f48_arg1 )
	local f48_local0 = f48_arg0:create( "active" ) --[[ @ 0]]
	f48_local0:set( false ) --[[ @ 0]]
	f48_local0 = f48_arg0:create( "arrowPos" ) --[[ @ 0]]
	f48_local0:set( 0 ) --[[ @ 0]]
	f48_local0 = f48_arg0:create( "sweetSpotPos" ) --[[ @ 0]]
	f48_local0:set( 0 ) --[[ @ 0]]
	f48_local0 = f48_arg0:create( "redHeight" ) --[[ @ 0]]
	f48_local0:set( 0 ) --[[ @ 0]]
	f48_local0 = f48_arg0:create( "yellowHeight" ) --[[ @ 0]]
	f48_local0:set( 0 ) --[[ @ 0]]
end, false ) --[[ @ 0]]
DataSourceHelpers.PerControllerDataSourceSetup( "InterferenceSelect", "hudItems.interferenceSelect", function ( f49_arg0, f49_arg1 )
	local f49_local0 = f49_arg0:create( "active" ) --[[ @ 0]]
	f49_local0:set( 0 ) --[[ @ 0]]
	f49_local0 = f49_arg0:create( "selectedIndex" ) --[[ @ 0]]
	f49_local0:set( 0 ) --[[ @ 0]]
end, false ) --[[ @ 0]]
DataSourceHelpers.PerControllerDataSourceSetup( "InterferenceSelectorTablet", "InterferenceSelectorTablet", function ( f50_arg0, f50_arg1 )
	local f50_local0 = Engine[@"GetCurrentMapName"]() --[[ @ 0]]
	local f50_local1 = Engine[@"GetFactionForTeam"]( CoD.TeamUtility.GetTeamID( f50_arg1 ) ) --[[ @ 0]]
	local f50_local2 = CoD.BaseUtility.GetMapValue( f50_local0, @"hash_765873EF183A770A" .. f50_local1, nil ) or "" --[[ @ 0]]
	local f50_local3 = CoD.BaseUtility.GetMapValue( f50_local0, @"hash_462D533E8A3E0AA5" .. f50_local1, nil ) or "" --[[ @ 0]]
	local f50_local4 = f50_arg0:create( "title" ) --[[ @ 0]]
	f50_local4:set( f50_local2 ) --[[ @ 0]]
	f50_local4 = f50_arg0:create( "desc" ) --[[ @ 0]]
	f50_local4:set( f50_local3 ) --[[ @ 0]]
end, false ) --[[ @ 0]]
DataSources.InterferenceSelection = DataSourceHelpers.ListSetup( "InterferenceSelection", function ( f51_arg0, f51_arg1 )
	local f51_local0 = {} --[[ @ 0]]
	local f51_local1 = CoD.BaseUtility.GetMapValue( Engine[@"GetCurrentMapName"](), "interferenceSelection_" .. Engine[@"GetFactionForTeam"]( CoD.TeamUtility.GetTeamID( f51_arg0 ) ), nil ) --[[ @ 0]]
	if f51_local1 then
		for f51_local5, f51_local6 in ipairs( f51_local1 ) --[[ @ 0]] do
			table.insert( f51_local0, {
				models = {
					image = f51_local6[@"hash_31163F76402A0258"],
					desc = f51_local6[@"hash_4F33F29FEDB35478"],
					index = f51_local5
				}
			} ) --[[ @ 0]]
		end
	end
	return f51_local0
end, true ) --[[ @ 0]]
CoD.CPUtility.SetupCPAxeHackWidget = function ( f52_arg0, f52_arg1, f52_arg2 )
	f52_arg0:subscribeToGlobalModel( f52_arg2, "AxeHack", "arrowPos", function ( model )
		local f53_local0 = 1 - model:get() --[[ @ 0]]
		local f53_local1, f53_local2 = f52_arg0:getLocalSize() --[[ @ 0]]
		local f53_local3 = f53_local0 * f53_local2 --[[ @ 0]]
		local f53_local4, f53_local5 = f52_arg1:getLocalSize() --[[ @ 0]]
		f52_arg1:setTopBottom( 0, 0, f53_local3 - f53_local5 / 2, f53_local3 + f53_local5 / 2 ) --[[ @ 0]]
	end ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.CPUtility.SetupCPAxeHackWidgetRedHeight = function ( f54_arg0, f54_arg1, f54_arg2 )
	local f54_local0 = DataSources.AxeHack.getModel( f54_arg2 ) --[[ @ 0]]
	f54_local0 = f54_local0.sweetSpotPos --[[ @ 0]]
	local f54_local1 = DataSources.AxeHack.getModel( f54_arg2 ) --[[ @ 0]]
	f54_local1 = f54_local1.redHeight --[[ @ 0]]
	local f54_local2 = function ()
		local f55_local0, f55_local1 = f54_arg0:getLocalSize() --[[ @ 0]]
		local f55_local2 = f54_local1:get() --[[ @ 0]]
		local f55_local3 = f55_local1 * (1 - f54_local0:get()) --[[ @ 0]]
		f54_arg1:setTopBottom( 0, 0, f55_local3 - f55_local2 * f55_local1 / 2, f55_local3 + f55_local2 * f55_local1 / 2 ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	f54_arg0:subscribeToGlobalModel( f54_arg2, "AxeHack", "redHeight", f54_local2 ) --[[ @ 0]]
	f54_arg0:subscribeToGlobalModel( f54_arg2, "AxeHack", "sweetSpotPos", f54_local2 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.CPUtility.SetupCPAxeHackWidgetYellowHeight = function ( f56_arg0, f56_arg1, f56_arg2 )
	local f56_local0 = DataSources.AxeHack.getModel( f56_arg2 ) --[[ @ 0]]
	f56_local0 = f56_local0.sweetSpotPos --[[ @ 0]]
	local f56_local1 = DataSources.AxeHack.getModel( f56_arg2 ) --[[ @ 0]]
	f56_local1 = f56_local1.yellowHeight --[[ @ 0]]
	local f56_local2 = function ()
		local f57_local0, f57_local1 = f56_arg0:getLocalSize() --[[ @ 0]]
		local f57_local2 = f56_local1:get() --[[ @ 0]]
		local f57_local3 = f57_local1 * (1 - f56_local0:get()) --[[ @ 0]]
		f56_arg1:setTopBottom( 0, 0, f57_local3 - f57_local2 * f57_local1 / 2, f57_local3 + f57_local2 * f57_local1 / 2 ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	f56_arg0:subscribeToGlobalModel( f56_arg2, "AxeHack", "yellowHeight", f56_local2 ) --[[ @ 0]]
	f56_arg0:subscribeToGlobalModel( f56_arg2, "AxeHack", "sweetSpotPos", f56_local2 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.CPUtility.SpawnDynamicCPHUDWidgets = function ( f58_arg0, f58_arg1 )
	local f58_local0 = DataSources.WorldSpaceIndicators.getModel( f58_arg1 ) --[[ @ 0]]
	CoD.HUDUtility.SetupGrenadeWarningIndicators( f58_arg0, f58_arg1 ) --[[ @ 0]]
	local f58_local1 = function ( f59_arg0, f59_arg1, f59_arg2, f59_arg3 )
		if worldIconModel then
			local f59_local0 = Engine[@"CreateModel"]( worldIconModel, "weakpoint_" .. f59_arg0 .. "_" .. f59_arg1 ) --[[ @ 0]]
			if f59_local0 then
				LUI.CreateModelAndInitialize( f59_local0, "status", Enum[@"WeakpointWidgetStates"][@"hash_2F3FD6FEC95F5A79"] ) --[[ @ 0]]
				local f59_local1 = CoD.weakpointIndicator.new( f58_arg0, f58_arg1, 0, 0, 0, CoD.weakpointIndicator.__defaultWidth, 0, 0, 0, CoD.weakpointIndicator.__defaultHeight ) --[[ @ 0]]
				f59_local1:setModel( f59_local0, f58_arg1 ) --[[ @ 0]]
				f59_local1:setupWeakpointIndicator( f58_arg1, f59_arg0, f59_arg1, f59_arg2, f59_arg3 ) --[[ @ 0]]
				LUI.OverrideFunction_CallOriginalFirst( f59_local1, "close", function ()
					if LUI.DEV then
						local f60_local0 = LUI.DEV.ErrorIfModelsDoNotMatch( f59_local0, Engine[@"CreateModel"]( worldIconModel, "weakpoint_" .. f59_arg0 .. "_" .. f59_arg1 ) ) --[[ @ 0]]
					end
					Engine[@"UnsubscribeAndFreeModel"]( f59_local0 ) --[[ @ 0]]
				end ) --[[ @ 0]]
				return f59_local1
			end
		end
	end
	 --[[ @ 0]]
	f58_arg0.weakpoints = {} --[[ @ 0]]
	f58_arg0:subscribeToGlobalModel( f58_arg1, "PerController", "scriptNotify", function ( model )
		local f61_local0 = Engine[@"GetModelValue"]( model ) --[[ @ 0]]
		local f61_local1 = {
			controller = f58_arg1,
			name = f61_local0,
			data = CoD.GetScriptNotifyData( model )
		} --[[ @ 0]]
		if f61_local0 == "weakpoint_update" then
			local f61_local2 = f61_local1.data[2] --[[ @ 0]]
			local f61_local3 = Engine[@"GetIString"]( f61_local1.data[3], "CS_LOCALIZED_STRINGS" ) --[[ @ 0]]
			if f61_local1.data[1] == 0 then
				if f58_arg0.weakpoints[f61_local2] and f58_arg0.weakpoints[f61_local2][f61_local3] then
					local f61_local4 = f58_arg0.weakpoints[f61_local2][f61_local3]:getModel( f58_arg1, "status" ) --[[ @ 0]]
					if f61_local4 then
						Engine[@"SetModelValue"]( f61_local4, Enum[@"WeakpointWidgetStates"][@"hash_3AA342497D6148F3"] ) --[[ @ 0]]
					end
					local f61_local5 = f58_arg0.weakpoints[f61_local2][f61_local3] --[[ @ 0]]
					f61_local5:addElement( LUI.UITimer.newElementTimer( 1500, true, f61_local5.close, f61_local5 ) ) --[[ @ 0]]
					f58_arg0.weakpoints[f61_local2][f61_local3] = nil --[[ @ 0]]
				end
			elseif f61_local1.data[1] == 1 then
				if not f58_arg0.weakpoints[f61_local2] then
					f58_arg0.weakpoints[f61_local2] = {} --[[ @ 0]]
				end
				if not f58_arg0.weakpoints[f61_local2][f61_local3] then
					local f61_local6 = f58_local1( f61_local2, f61_local3, f61_local1.data[4], f61_local1.data[5] ) --[[ @ 0]]
					if f61_local6 then
						f58_arg0.weakpoints[f61_local2][f61_local3] = f61_local6 --[[ @ 0]]
						f58_arg0.fullscreenContainer:addElement( f61_local6 ) --[[ @ 0]]
						f58_arg0:sendInitializationEvents( f58_arg1, f61_local6 ) --[[ @ 0]]
					end
				end
			elseif f61_local1.data[1] == 2 then
				if f58_arg0.weakpoints[f61_local2] and f58_arg0.weakpoints[f61_local2][f61_local3] then
					f58_arg0.weakpoints[f61_local2][f61_local3]:playClip( "Damaged" ) --[[ @ 0]]
				end
			elseif f61_local1.data[1] == 3 and f58_arg0.weakpoints[f61_local2] and f58_arg0.weakpoints[f61_local2][f61_local3] then
				f58_arg0.weakpoints[f61_local2][f61_local3]:playClip( "Repulsed" ) --[[ @ 0]]
			end
			return true
		else
			
		end
	end ) --[[ @ 0]]
	local f58_local2 = DataSources.CurrentWeapon.getModel( f58_arg1 ) --[[ @ 0]]
	f58_local2 = f58_local2.viewmodelWeaponName --[[ @ 0]]
	if f58_local2 then
		f58_arg0:subscribeToModel( f58_local2, function ( model )
			if IsCurrentViewmodelWeaponName( f58_arg1, @"spike_launcher" ) then
				f58_arg0.spikeLauncherCounter = CoD.SpikeLauncherSpikeCounter.new( f58_arg0, f58_arg1, 0, 0, 0, CoD.SpikeLauncherSpikeCounter.__defaultWidth, 0, 0, 0, CoD.SpikeLauncherSpikeCounter.__defaultHeight ) --[[ @ 0]]
				f58_arg0:addElement( f58_arg0.spikeLauncherCounter ) --[[ @ 0]]
				f58_arg0.spikeLauncherCounter:dispatchEventToChildren( {
					name = "update_state",
					controller = f58_arg1
				} ) --[[ @ 0]]
			elseif f58_arg0.spikeLauncherCounter ~= nil then
				f58_arg0.spikeLauncherCounter:close() --[[ @ 0]]
				f58_arg0.spikeLauncherCounter = nil --[[ @ 0]]
			end
		end ) --[[ @ 0]]
	end
	local f58_local3 = f58_arg0.close --[[ @ 0]]
	f58_arg0.close = function ( f63_arg0 )
		f58_local3( f63_arg0 ) --[[ @ 0]]
		if f63_arg0.spikeLauncherCounter ~= nil then
			f63_arg0.spikeLauncherCounter:close() --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	if f58_local0 then
		local f58_local4 = function ( f64_arg0 )
			local f64_local0 = f64_arg0:getFirstChild() --[[ @ 0]]
			while f64_local0 do
				if LUI.startswith( f64_local0.id, "bleedOutItem" ) then
					local f64_local1 = f64_local0:getModel( f58_arg1, "playerName" ) --[[ @ 0]]
					if f64_local1 then
						Engine[@"SetModelValue"]( f64_local1, Engine[@"GetGamertagForClient"]( f58_arg1, f64_local0.bleedOutClient ) ) --[[ @ 0]]
					end
				end
				f64_local0 = f64_local0:getNextSibling() --[[ @ 0]]
			end
		end
		 --[[ @ 0]]
		local f58_local5 = 0 --[[ @ 0]]
		local f58_local6 = true --[[ @ 0]]
		while f58_local6 do
			local f58_local7 = f58_local5 --[[ @ 0]]
			local f58_local8 = Engine[@"CreateModel"]( f58_local0, "bleedOutModel" .. f58_local7 ) --[[ @ 0]]
			local f58_local9 = Engine[@"CreateModel"]( f58_local8, "playerName" ) --[[ @ 0]]
			Engine[@"SetModelValue"]( f58_local9, GetClientName( f58_arg1, f58_local7 ) ) --[[ @ 0]]
			Engine[@"SetModelValue"]( Engine[@"CreateModel"]( f58_local8, "prompt" ), @"hash_48FE93EDC5208D8" ) --[[ @ 0]]
			Engine[@"SetModelValue"]( Engine[@"CreateModel"]( f58_local8, "clockPercent" ), 0 ) --[[ @ 0]]
			Engine[@"SetModelValue"]( Engine[@"CreateModel"]( f58_local8, "bleedOutPercent" ), 0 ) --[[ @ 0]]
			Engine[@"SetModelValue"]( Engine[@"CreateModel"]( f58_local8, "stateFlags" ), 0 ) --[[ @ 0]]
			Engine[@"SetModelValue"]( Engine[@"CreateModel"]( f58_local8, "arrowAngle" ), 0 ) --[[ @ 0]]
			Engine[@"SetModelValue"]( Engine[@"CreateModel"]( f58_local8, "isCompanion" ), false ) --[[ @ 0]]
			local f58_local10 = CoD.bleedOutWidget.new( f58_arg0, f58_arg1, 0, 0, 0, CoD.bleedOutWidget.__defaultWidth, 0, 0, 0, CoD.bleedOutWidget.__defaultHeight ) --[[ @ 0]]
			f58_local10.bleedOutClient = f58_local7 --[[ @ 0]]
			f58_local10.id = "bleedOutItem" .. f58_local7 --[[ @ 0]]
			f58_local10:setLeftRight( true, false, 0, 0 ) --[[ @ 0]]
			f58_local10:setTopBottom( true, false, 0, 0 ) --[[ @ 0]]
			f58_local10:setModel( f58_local8, f58_arg1 ) --[[ @ 0]]
			f58_local6 = f58_local10:setupBleedOutWidget( f58_arg1, f58_local7 ) --[[ @ 0]]
			f58_arg0.fullscreenContainer:addElement( f58_local10 ) --[[ @ 0]]
			local f58_local11 = Engine[@"hash_E4D2F32833CFA6C"]( f58_local5 ) --[[ @ 0]]
			f58_local10:subscribeToModel( f58_local11.playerName, function ( model )
				f58_local9:set( model:get() ) --[[ @ 0]]
			end ) --[[ @ 0]]
			if not f58_arg0.fullscreenContainer._hasPlayerConnectedSubscription then
				f58_arg0.fullscreenContainer:subscribeToModel( Engine[@"GetModel"]( Engine[@"GetModelForController"]( f58_arg1 ), "playerConnected" ), function ( model )
					f58_local4( f58_arg0.fullscreenContainer ) --[[ @ 0]]
				end ) --[[ @ 0]]
				f58_arg0.fullscreenContainer._hasPlayerConnectedSubscription = true --[[ @ 0]]
			end
			f58_local5 = f58_local5 + 1 --[[ @ 0]]
		end
	end
	f58_arg0.m_inputDisabled = true --[[ @ 0]]
end
 --[[ @ 0]]
CoD.CPUtility.ChangeGender = function ( f67_arg0, f67_arg1, f67_arg2 )
	if f67_arg1.gender then
		Engine[@"SetGender"]( f67_arg0, f67_arg1.gender ) --[[ @ 0]]
		f67_arg2.__currentlySelectedGender = f67_arg1.gender --[[ @ 0]]
		SendCustomClientScriptNotifyForAdjustedClient( f67_arg0, CoD.PlayerRoleUtility.Heroes.heroUpdateEvent, {
			event_name = "changeGender",
			gender = f67_arg1.gender,
			mode = Enum[@"eModes"][@"hash_360063C67132EB69"]
		} ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
CoD.CPUtility.NewsAlertTypes = LuaEnum.createEnum( "REGULAR_NEWS", "BREAKING_NEWS" ) --[[ @ 0]]
CoD.CPUtility.SetupNewsroomDataWatchers = function ( f68_arg0, f68_arg1 )
	local f68_local0 = CoD.BaseUtility.GetMapValue( Engine[@"GetCurrentMapName"](), @"hash_13C66F2147C55B8D", nil ) --[[ @ 0]]
	local f68_local1 = f68_local0 and Engine[@"hash_2E00B2F29271C60B"]( Engine[@"hash_1C53F8D38DF9042B"]( f68_local0 ) ) --[[ @ 0]]
	local f68_local2 = f68_arg0:getModel() --[[ @ 0]]
	local f68_local3 = f68_local1 --[[ @ 0]]
	local f68_local4 = f68_local1.scenes --[[ @ 0]]
	if f68_local4 then
		f68_local4 = f68_local1.scenes --[[ @ 0]]
		local f68_local5 = f68_local2:create( "sceneIndex" ) --[[ @ 0]]
		f68_local4 = f68_local3 and f68_local4[(f68_local5:get() or 0) + 1] --[[ @ 0]]
	end
	if f68_local4 then
		local f68_local5 = f68_local2:create( "torch.donatorName" ) --[[ @ 0]]
		f68_local5:set( "" ) --[[ @ 0]]
		f68_local5 = f68_local2:create( "torch.donatorAmount" ) --[[ @ 0]]
		f68_local5:set( 0 ) --[[ @ 0]]
		f68_arg0:linkToElementModel( f68_arg0, "torch.donatorIndex", true, function ( model )
			if f68_local4.torchdonatorentries then
				local f69_local0 = f68_local4.torchdonatorentries[(model:get() or 0) + 1] or {} --[[ @ 0]]
				if f69_local0 then
					local f69_local1 = f68_local2:create( "torch.donatorName" ) --[[ @ 0]]
					f69_local1:set( f69_local0[@"name"] and Engine[@"Localize"]( f69_local0[@"name"] ) or "" ) --[[ @ 0]]
					f69_local1 = f68_local2:create( "torch.donatorAmount" ) --[[ @ 0]]
					f69_local1:set( f69_local0[@"amount"] or 0 ) --[[ @ 0]]
				end
			end
		end ) --[[ @ 0]]
		f68_local5 = f68_local2:create( "uns.header" ) --[[ @ 0]]
		f68_local5:set( "" ) --[[ @ 0]]
		f68_local5 = f68_local2:create( "uns.body" ) --[[ @ 0]]
		f68_local5:set( "" ) --[[ @ 0]]
		f68_local2:create( "uns.newsType" ) --[[ @ 0]]
		f68_arg0:linkToElementModel( f68_arg0, "uns.generalNewsIndex", true, function ( model )
			if f68_local4.unsnewsentries then
				local f70_local0 = f68_local4.unsnewsentries[model:get() or 0] or {} --[[ @ 0]]
				local f70_local1 = f70_local0[@"header"] and Engine[@"Localize"]( f70_local0[@"header"] ) or "" --[[ @ 0]]
				local f70_local2 = f70_local0[@"body"] and Engine[@"Localize"]( f70_local0[@"body"] ) or "" --[[ @ 0]]
				f68_local2["uns.header"].set( f68_local2["uns.header"], f70_local1 ) --[[ @ 0]]
				f68_local2["uns.body"].set( f68_local2["uns.body"], f70_local2 ) --[[ @ 0]]
				local f70_local3 = CoD.CPUtility.NewsAlertTypes.REGULAR_NEWS --[[ @ 0]]
				if f70_local0[@"hash_1F5A9D1C35E8A1E7"] == 1 then
					f70_local3 = CoD.CPUtility.NewsAlertTypes.BREAKING_NEWS --[[ @ 0]]
				end
				if not f68_local2["uns.newsType"]:set( f70_local3 ) then
					f68_local2["uns.newsType"].forceNotifySubscriptions( f68_local2["uns.newsType"] ) --[[ @ 0]]
				end
			end
		end ) --[[ @ 0]]
		f68_local5 = f68_local2:create( "noble.body" ) --[[ @ 0]]
		f68_local5:set( "" ) --[[ @ 0]]
		f68_local2:create( "noble.newsType" ) --[[ @ 0]]
		f68_local5 = f68_local2:create( "noble.flatImage" ) --[[ @ 0]]
		f68_local5:set( "blacktransparent" ) --[[ @ 0]]
		f68_arg0:linkToElementModel( f68_arg0, "noble.generalNewsIndex", true, function ( model )
			if f68_local4.noblenewsentries then
				local f71_local0 = f68_local4.noblenewsentries[model:get() or 0] or {} --[[ @ 0]]
				f68_local2["noble.body"].set( f68_local2["noble.body"], f71_local0[@"body"] and Engine[@"Localize"]( f71_local0[@"body"] ) or "" ) --[[ @ 0]]
				local f71_local1 = CoD.CPUtility.NewsAlertTypes.REGULAR_NEWS --[[ @ 0]]
				if f71_local0[@"hash_1F5A9D1C35E8A1E7"] == 1 then
					f71_local1 = CoD.CPUtility.NewsAlertTypes.BREAKING_NEWS --[[ @ 0]]
				end
				if not f68_local2["noble.newsType"]:set( f71_local1 ) then
					f68_local2["noble.newsType"].forceNotifySubscriptions( f68_local2["noble.newsType"] ) --[[ @ 0]]
				end
			end
		end ) --[[ @ 0]]
		f68_arg0:linkToElementModel( f68_arg0, "noble.imageIndex", true, function ( model )
			local f72_local0 = "blacktransparent" --[[ @ 0]]
			local f72_local1 = model:get() or 0 --[[ @ 0]]
			if f72_local1 > 0 and f68_local4.nobleimageentries then
				local f72_local2 = f68_local4.nobleimageentries[f72_local1] --[[ @ 0]]
				if f72_local2[@"hash_70F88707611FAD4B"] ~= "" then
					f72_local0 = f72_local2[@"hash_70F88707611FAD4B"] or f72_local0 --[[ @ 0]]
				end
			end
			local f72_local2 = f68_local2:create( "noble.flatImage" ) --[[ @ 0]]
			f72_local2:set( f72_local0 ) --[[ @ 0]]
		end ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
CoD.CPUtility.SetupNewsRoomTicker = function ( f73_arg0, f73_arg1 )
	if f73_arg0.__setupDone then
		return 
	end
	f73_arg0.__setupDone = true --[[ @ 0]]
	local f73_local0 = f73_arg0:getModel() --[[ @ 0]]
	if not f73_local0 then
		return 
	end
	local f73_local1 = {} --[[ @ 0]]
	local f73_local2 = 0 --[[ @ 0]]
	while f73_arg0["entry" .. f73_local2] do
		local f73_local3 = f73_arg0["entry" .. f73_local2] --[[ @ 0]]
		local f73_local4 = f73_arg0["spacer" .. f73_local2] --[[ @ 0]]
		f73_local3:setAlpha( 0 ) --[[ @ 0]]
		f73_local4:setAlpha( 0 ) --[[ @ 0]]
		table.insert( f73_local1, {
			text = f73_local3,
			spacer = f73_local4,
			visible = false
		} ) --[[ @ 0]]
		f73_local2 = f73_local2 + 1 --[[ @ 0]]
	end
	local f73_local3 = Engine[@"hash_2E00B2F29271C60B"]( @"hash_4E22B3E79F1C949D" ) --[[ @ 0]]
	local f73_local4 = f73_local3.scenes --[[ @ 0]]
	if f73_local4 then
		f73_local4 = f73_local3.scenes --[[ @ 0]]
		local f73_local5 = f73_local0:create( "sceneIndex" ) --[[ @ 0]]
		f73_local4 = f73_local4[(f73_local5:get() or 0) + 1] --[[ @ 0]]
	end
	if f73_local4 then
		local f73_local5 = nil --[[ @ 0]]
		if f73_arg1 == CoD.CPUtility.NewsRoomChannels.UNS then
			f73_local5 = f73_local4.unstickerentries --[[ @ 0]]
		elseif f73_arg1 == CoD.CPUtility.NewsRoomChannels.NOBLE then
			f73_local5 = f73_local4.nobletickerentries --[[ @ 0]]
		elseif f73_arg1 == CoD.CPUtility.NewsRoomChannels.TORCH then
			f73_local5 = f73_local4.torchtickerentries --[[ @ 0]]
		end
		if f73_local5 and #f73_local5 > 0 then
			local f73_local6 = 0 --[[ @ 0]]
			local f73_local7, f73_local8 = f73_arg0:getLocalSize() --[[ @ 0]]
			if #f73_local1 > 0 then
				f73_local2 = 1 --[[ @ 0]]
				local f73_local9 = nil --[[ @ 0]]
				local f73_local10 = 20 --[[ @ 0]]
				local f73_local11 = true --[[ @ 0]]
				f73_arg0:addElement( LUI.UITimer.newElementTimer( 0, false, function ( f74_arg0 )
					table.insert( f73_local1, table.remove( f73_local1, 1 ) ) --[[ @ 0]]
					local f74_local0 = f73_local2 --[[ @ 0]]
					f73_local2 = f73_local2 + 1 --[[ @ 0]]
					if #f73_local5 < f73_local2 then
						f73_local2 = 1 --[[ @ 0]]
					end
					local f74_local1 = function ()
						f74_local0 = f74_local0 + 1 --[[ @ 0]]
						if #f73_local5 < f74_local0 then
							f74_local0 = 1 --[[ @ 0]]
						end
					end
					 --[[ @ 0]]
					local f74_local2 = 0 --[[ @ 0]]
					f73_local1[1].text:setText( Engine[@"Localize"]( f73_local5[f74_local0][@"hash_3E2A85BF4C0CA913"] ) ) --[[ @ 0]]
					local f74_local3 = f73_local1[1].text:getTextWidth() --[[ @ 0]]
					local f74_local4, f74_local5 = f73_local1[1].spacer:getLocalSize() --[[ @ 0]]
					f74_local3 = f74_local3 + f74_local4 --[[ @ 0]]
					f74_local1() --[[ @ 0]]
					local f74_local6 = f73_local9.interval --[[ @ 0]]
					local f74_local7 --[[ @ 0]]
					if f74_arg0 then
						f74_local7 = f74_arg0.timeElapsed --[[ @ 0]]
						if not f74_local7 then
						
						else
							f74_local7 = f74_local3 * f73_local10 - f74_local6 - f74_local7 --[[ @ 0]]
							f73_local9.interval = f74_local7 --[[ @ 0]]
							local f74_local8 = function ( f76_arg0 )
								local f76_local0 = f76_arg0.text:getTextWidth() --[[ @ 0]]
								if not f76_arg0.visible then
									f76_arg0.text:completeAnimation() --[[ @ 0]]
									f76_arg0.text:setLeftRight( 0, 0, f74_local2, f74_local2 + f76_local0 + 5 ) --[[ @ 0]]
									f76_arg0.text:setAlpha( 1 ) --[[ @ 0]]
								end
								f76_arg0.text:beginAnimation( f74_local7 ) --[[ @ 0]]
								f76_arg0.text:setLeftRight( 0, 0, f74_local2 - f74_local3, f74_local2 + f76_local0 + 5 - f74_local3 ) --[[ @ 0]]
								f74_local2 = f74_local2 + f76_local0 --[[ @ 0]]
								local f76_local1, f76_local2 = f76_arg0.spacer:getLocalSize() --[[ @ 0]]
								if not f76_arg0.visible then
									f76_arg0.spacer:completeAnimation() --[[ @ 0]]
									f76_arg0.spacer:setLeftRight( 0, 0, f74_local2, f74_local2 + f76_local1 ) --[[ @ 0]]
									f76_arg0.spacer:setAlpha( 1 ) --[[ @ 0]]
								end
								f76_arg0.spacer:beginAnimation( f74_local7 ) --[[ @ 0]]
								f76_arg0.spacer:setLeftRight( 0, 0, f74_local2 - f74_local3, f74_local2 + f76_local1 - f74_local3 ) --[[ @ 0]]
								f74_local2 = f74_local2 + f76_local1 --[[ @ 0]]
								f76_arg0.visible = true --[[ @ 0]]
							end
							 --[[ @ 0]]
							f74_local8( f73_local1[1] ) --[[ @ 0]]
							local f74_local9 = 2 --[[ @ 0]]
							while f74_local2 - f74_local3 < f73_local7 and f74_local9 <= #f73_local1 do
								f73_local1[f74_local9].text:setText( Engine[@"Localize"]( f73_local5[f74_local0][@"hash_3E2A85BF4C0CA913"] ) ) --[[ @ 0]]
								f74_local8( f73_local1[f74_local9] ) --[[ @ 0]]
								f74_local9 = f74_local9 + 1 --[[ @ 0]]
								f74_local1() --[[ @ 0]]
							end
							while f74_local9 <= #f73_local1 do
								f73_local1[f74_local9].text:setAlpha( 0 ) --[[ @ 0]]
								f73_local1[f74_local9].text:completeAnimation() --[[ @ 0]]
								f73_local1[f74_local9].spacer:setAlpha( 0 ) --[[ @ 0]]
								f73_local1[f74_local9].spacer:completeAnimation() --[[ @ 0]]
								f73_local1[f74_local9].visible = false --[[ @ 0]]
								f74_local9 = f74_local9 + 1 --[[ @ 0]]
							end
						end
					end
					f74_local7 = f73_local9.interval --[[ @ 0]]
				end ) ) --[[ @ 0]]
			end
		end
	end
end
 --[[ @ 0]]
DataSources.CPObjectiveTeams = {
	prepared = false,
	preparedForController = {},
	subscriptions = {},
	createFractionModelListener = function ( f77_arg0, f77_arg1 )
		if f77_arg1 then
			local f77_local0 = f77_arg1:create( "fractionProgress" ) --[[ @ 0]]
			local f77_local1 = function ()
				f77_local0:set( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_631CF0F51CCA3A27", f77_arg1.clearAll.currentCount:get() or 0, f77_arg1.clearAll.totalCount:get() or 0 ) ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			DataSources.CPObjectiveTeams.subscriptions[f77_arg0]:subscribeToModel( f77_arg1:create( "clearAll.totalCount" ), f77_local1 ) --[[ @ 0]]
			DataSources.CPObjectiveTeams.subscriptions[f77_arg0]:subscribeToModel( f77_arg1:create( "clearAll.currentCount" ), f77_local1 ) --[[ @ 0]]
		end
	end,
	createPercentModelListener = function ( f79_arg0, f79_arg1, f79_arg2 )
		if f79_arg1 then
			local f79_local0 = f79_arg1:create( "percentProgress" ) --[[ @ 0]]
			local f79_local1 = function ( f80_arg0 )
				local f80_local0 = f80_arg0:get() or 0 --[[ @ 0]]
				local f80_local1 = f79_arg1.radialTimerMaxTime:get() or 0 --[[ @ 0]]
				local f80_local2 = 0 --[[ @ 0]]
				if f80_local1 > 0 then
					f80_local2 = 1 - (f80_local0 - 1000) / f80_local1 * 1000 --[[ @ 0]]
				end
				f79_local0:set( f80_local2 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			local f79_local2 = function ()
				f79_local0:set( f79_arg1.hardpoint.progress:get() or 0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			local f79_local3 = function ()
				local f82_local0 = f79_arg1.clearAll.currentCount:get() or 0 --[[ @ 0]]
				local f82_local1 = f79_arg1.clearAll.totalCount:get() or 0 --[[ @ 0]]
				local f82_local2 = 0 --[[ @ 0]]
				if f82_local1 > 0 then
					f82_local2 = f82_local0 / f82_local1 --[[ @ 0]]
				end
				f79_local0:set( f82_local2 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			local f79_local4 = function ( f83_arg0 )
				if DataSources.CPObjectiveTeams.subscriptions[f79_arg0].__timerMilliSecSubscription[f79_arg2] then
					DataSources.CPObjectiveTeams.subscriptions[f79_arg0]:removeSubscription( DataSources.CPObjectiveTeams.subscriptions[f79_arg0].__timerMilliSecSubscription[f79_arg2] ) --[[ @ 0]]
					DataSources.CPObjectiveTeams.subscriptions[f79_arg0].__timerMilliSecSubscription[f79_arg2] = nil --[[ @ 0]]
				end
				local f83_local0 = f83_arg0 --[[ @ 0]]
				local f83_local1 = f83_arg0:get() --[[ @ 0]]
				if f83_local1 then
					f83_local1 = f83_arg0:get() --[[ @ 0]]
					f83_local1 = f83_local0 and f83_local1.timeRemainingMilliSec --[[ @ 0]]
				end
				if f83_local1 then
					DataSources.CPObjectiveTeams.subscriptions[f79_arg0].__timerMilliSecSubscription[f79_arg2] = DataSources.CPObjectiveTeams.subscriptions[f79_arg0]:subscribeToModel( f83_local1, f79_local1 ) --[[ @ 0]]
				end
			end
			 --[[ @ 0]]
			DataSources.CPObjectiveTeams.subscriptions[f79_arg0].__timerMilliSecSubscription = {} --[[ @ 0]]
			DataSources.CPObjectiveTeams.subscriptions[f79_arg0]:subscribeToModel( f79_arg1:create( "timer" ), f79_local4 ) --[[ @ 0]]
			DataSources.CPObjectiveTeams.subscriptions[f79_arg0]:subscribeToModel( f79_arg1:create( "hardpoint.progress" ), f79_local2 ) --[[ @ 0]]
			DataSources.CPObjectiveTeams.subscriptions[f79_arg0]:subscribeToModel( f79_arg1:create( "clearAll.currentCount" ), f79_local3 ) --[[ @ 0]]
		end
	end,
	setupSubObjectiveModels = function ( f84_arg0, f84_arg1, f84_arg2 )
		local f84_local0 = Engine[@"GetModelForController"]( f84_arg0 ) --[[ @ 0]]
		f84_local0 = f84_local0.hudItems.cpObjective.perPlayer --[[ @ 0]]
		local f84_local1 = f84_arg1:create( "subObjective1" ) --[[ @ 0]]
		f84_local1:set( f84_local0.subObjective1 ) --[[ @ 0]]
		f84_local1 = f84_arg1:create( "subObjective2" ) --[[ @ 0]]
		f84_local1:set( f84_local0.subObjective2 ) --[[ @ 0]]
		f84_local1 = f84_arg1:create( "subObjective3" ) --[[ @ 0]]
		f84_local1:set( f84_local0.subObjective3 ) --[[ @ 0]]
		f84_local1 = f84_arg2:create( "subObjective1" ) --[[ @ 0]]
		f84_local1:set( f84_arg2.teamSubObjective1 ) --[[ @ 0]]
		f84_local1 = f84_arg2:create( "subObjective2" ) --[[ @ 0]]
		f84_local1:set( f84_arg2.teamSubObjective2 ) --[[ @ 0]]
		f84_local1 = f84_arg2:create( "subObjective3" ) --[[ @ 0]]
		f84_local1:set( f84_arg2.teamSubObjective3 ) --[[ @ 0]]
	end,
	prepare = function ( f85_arg0, f85_arg1, f85_arg2 )
		if not DataSources.CPObjectiveTeams.preparedForController then
			DataSources.CPObjectiveTeams.preparedForController = {} --[[ @ 0]]
		end
		if not DataSources.CPObjectiveTeams.subscriptions[f85_arg0] then
			DataSources.CPObjectiveTeams.subscriptions[f85_arg0] = LUI.UIElement.new() --[[ @ 0]]
		end
		DataSources.CPObjectiveTeams.subscriptions[f85_arg0]:unsubscribeFromAllModels() --[[ @ 0]]
		DataSources.CPObjectiveTeams.preparedForController[f85_arg0] = true --[[ @ 0]]
		local f85_local0 = DataSources.CPObjectiveTeams.subscriptions[f85_arg0] --[[ @ 0]]
		local f85_local1 = f85_local0 --[[ @ 0]]
		f85_local0 = f85_local0.subscribeToModel --[[ @ 0]]
		local f85_local2 = DataSources.Factions.getModel( f85_arg0 ) --[[ @ 0]]
		f85_local0( f85_local1, f85_local2.playerFactionTeamEnum, function ( f86_arg0 )
			DataSources.CPObjectiveTeams.preparedForController[f85_arg0] = false --[[ @ 0]]
			DataSources.CPObjectiveTeams.prepare( f85_arg0 ) --[[ @ 0]]
		end, false ) --[[ @ 0]]
		f85_local0 = Engine[@"GetModelForController"]( f85_arg0 ) --[[ @ 0]]
		f85_local0 = f85_local0:create( "CPObjectiveTeams" ) --[[ @ 0]]
		f85_local1 = f85_local0:create( "myTeam" ) --[[ @ 0]]
		f85_local2 = f85_local0:create( "enemyTeam" ) --[[ @ 0]]
		local f85_local3 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
		f85_local3 = f85_local3.hudItems.cpObjective --[[ @ 0]]
		local f85_local4 = f85_local3.allies:create( "timer" ) --[[ @ 0]]
		local f85_local5 = f85_local4 --[[ @ 0]]
		f85_local4 = f85_local4.set --[[ @ 0]]
		local f85_local6 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
		f85_local4( f85_local5, f85_local6.bombTimer.bomb0 ) --[[ @ 0]]
		f85_local4 = f85_local3.axis:create( "timer" ) --[[ @ 0]]
		f85_local5 = f85_local4 --[[ @ 0]]
		f85_local4 = f85_local4.set --[[ @ 0]]
		f85_local6 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
		f85_local4( f85_local5, f85_local6.bombTimer.bomb1 ) --[[ @ 0]]
		DataSources.CPObjectiveTeams.createFractionModelListener( f85_arg0, f85_local3.allies ) --[[ @ 0]]
		DataSources.CPObjectiveTeams.createFractionModelListener( f85_arg0, f85_local3.axis ) --[[ @ 0]]
		DataSources.CPObjectiveTeams.createPercentModelListener( f85_arg0, f85_local3.allies, 1 ) --[[ @ 0]]
		DataSources.CPObjectiveTeams.createPercentModelListener( f85_arg0, f85_local3.axis, 2 ) --[[ @ 0]]
		if Engine[@"GetTeamID"]( f85_arg0, Engine[@"GetPredictedClientNum"]( f85_arg0 ) ) == Enum[@"team_t"][@"hash_42A34B055ADD98AB"] then
			f85_local1:set( f85_local3.allies ) --[[ @ 0]]
			f85_local2:set( f85_local3.axis ) --[[ @ 0]]
		else
			f85_local1:set( f85_local3.axis ) --[[ @ 0]]
			f85_local2:set( f85_local3.allies ) --[[ @ 0]]
		end
		DataSources.CPObjectiveTeams.setupSubObjectiveModels( f85_arg0, f85_local1:get(), f85_local2:get() ) --[[ @ 0]]
	end,
	getModel = function ( f87_arg0 )
		if not DataSources.CPObjectiveTeams.preparedForController or not DataSources.CPObjectiveTeams.preparedForController[f87_arg0] then
			DataSources.CPObjectiveTeams.prepare( f87_arg0 ) --[[ @ 0]]
		end
		local f87_local0 = Engine[@"GetModelForController"]( f87_arg0 ) --[[ @ 0]]
		return f87_local0:create( "CPObjectiveTeams" )
	end
} --[[ @ 0]]
DataSources.CPObjectivePerPlayer = {
	getModel = function ( f88_arg0 )
		local f88_local0 = Engine[@"GetModelForController"]( f88_arg0 ) --[[ @ 0]]
		return f88_local0:create( "hudItems.cpObjective.perPlayer" )
	end
} --[[ @ 0]]
DataSources.CurrentObjectiveInfo = {
	prepared = false,
	preparedForController = {},
	subscriptions = {},
	prepare = function ( f89_arg0, f89_arg1, f89_arg2 )
		if not DataSources.CurrentObjectiveInfo.preparedForController then
			DataSources.CurrentObjectiveInfo.preparedForController = {} --[[ @ 0]]
		end
		if not DataSources.CurrentObjectiveInfo.subscriptions[f89_arg0] then
			DataSources.CurrentObjectiveInfo.subscriptions[f89_arg0] = LUI.UIElement.new() --[[ @ 0]]
		end
		DataSources.CurrentObjectiveInfo.subscriptions[f89_arg0]:unsubscribeFromAllModels() --[[ @ 0]]
		DataSources.CurrentObjectiveInfo.preparedForController[f89_arg0] = true --[[ @ 0]]
		local f89_local0 = Engine[@"GetModelForController"]( f89_arg0 ) --[[ @ 0]]
		f89_local0 = f89_local0:create( "CurrentObjectiveInfo" ) --[[ @ 0]]
		local f89_local1 = f89_local0:create( "currentObjId" ) --[[ @ 0]]
		local f89_local2 = f89_local0:create( "previousObjId" ) --[[ @ 0]]
		local f89_local3 = f89_local0:create( "objectiveIcon" ) --[[ @ 0]]
		local f89_local4 = f89_local0:create( "waypointObjective1" ) --[[ @ 0]]
		local f89_local5 = f89_local0:create( "waypointObjective2" ) --[[ @ 0]]
		local f89_local6 = f89_local0:create( "waypointObjective3" ) --[[ @ 0]]
		f89_local4:create( "objectiveModel" ) --[[ @ 0]]
		f89_local5:create( "objectiveModel" ) --[[ @ 0]]
		f89_local6:create( "objectiveModel" ) --[[ @ 0]]
		if not f89_local1:get() then
			f89_local1:set( 0 ) --[[ @ 0]]
		end
		local f89_local7 = DataSources.CPObjectiveTeams.getModel( f89_arg0 ) --[[ @ 0]]
		f89_local7 = f89_local7.myTeam --[[ @ 0]]
		DataSources.CurrentObjectiveInfo.subscriptions[f89_arg0]:subscribeToModel( f89_local7, function ( model )
			DataSources.CurrentObjectiveInfo.preparedForController[f89_arg0] = false --[[ @ 0]]
			DataSources.CurrentObjectiveInfo.prepare( f89_arg0 ) --[[ @ 0]]
		end, false ) --[[ @ 0]]
		if f89_local7 then
			f89_local7 = f89_local7:get() --[[ @ 0]]
		end
		if f89_local7 then
			local f89_local8 = function ( f91_arg0 )
				if f91_arg0 then
					f89_local2:set( f89_local1:get() ) --[[ @ 0]]
					f89_local1:set( f91_arg0 ) --[[ @ 0]]
				end
			end
			 --[[ @ 0]]
			local f89_local9 = function ( f92_arg0 )
				local f92_local0 = f92_arg0 and CoD.HUDUtility.GetCachedObjective( Engine[@"GetObjectiveName"]( f89_arg0, f92_arg0 ) ) --[[ @ 0]]
				if f92_local0 then
					local f92_local1 = Engine[@"GetObjectiveTeam"]( f89_arg0, f92_arg0 ) --[[ @ 0]]
					local f92_local2 = Engine[@"GetTeamID"]( f89_arg0, Engine[@"GetPredictedClientNum"]( f89_arg0 ) ) --[[ @ 0]]
					local f92_local3 --[[ @ 0]]
					if f92_local1 ~= Enum[@"team_t"][@"hash_BD65CBD25CCBEDC"] and f92_local1 ~= Enum[@"team_t"][@"hash_697263B3C1ABADF7"] then
						f92_local3 = false --[[ @ 0]]
					else
						f92_local3 = true --[[ @ 0]]
					end
					local f92_local4 = f92_local1 == f92_local2 --[[ @ 0]]
					local f92_local5 = f92_local0[@"hash_2E3FD1464311AFA1"] or @"blacktransparent" --[[ @ 0]]
					if f92_local3 then
						f92_local5 = f92_local0[@"hash_61F7C7371625DBE8"] or f92_local5 --[[ @ 0]]
					elseif f92_local4 then
						f92_local5 = f92_local0[@"hash_A464F3B561F16A7"] or f92_local5 --[[ @ 0]]
					else
						f92_local5 = f92_local0[@"hash_2207CD530AA845F4"] or f92_local5 --[[ @ 0]]
					end
					f89_local3:set( f92_local5 ) --[[ @ 0]]
				end
			end
			 --[[ @ 0]]
			local f89_local10 = function ( f93_arg0, f93_arg1 )
				if f93_arg1 ~= nil then
					local f93_local0 = f93_arg0.objectiveModel --[[ @ 0]]
					local f93_local1 = f93_local0 --[[ @ 0]]
					f93_local0 = f93_local0.set --[[ @ 0]]
					local f93_local2 = Engine[@"GetModelForController"]( f89_arg0 ) --[[ @ 0]]
					f93_local0( f93_local1, f93_local2["objective" .. f93_arg1] ) --[[ @ 0]]
					Engine[@"ForceNotifyModelSubscriptions"]( f93_arg0 ) --[[ @ 0]]
				end
			end
			 --[[ @ 0]]
			local f89_local11 = f89_local7:create( "activeObjective.objId" ) --[[ @ 0]]
			f89_local8( f89_local11:get() ) --[[ @ 0]]
			DataSources.CurrentObjectiveInfo.subscriptions[f89_arg0]:subscribeToModel( f89_local11, function ( model )
				f89_local8( model:get() ) --[[ @ 0]]
			end, false ) --[[ @ 0]]
			local f89_local12 = f89_local7:create( "objectiveIconObjId" ) --[[ @ 0]]
			f89_local9( f89_local11:get() ) --[[ @ 0]]
			DataSources.CurrentObjectiveInfo.subscriptions[f89_arg0]:subscribeToModel( f89_local12, function ( model )
				f89_local9( model:get() ) --[[ @ 0]]
			end, false ) --[[ @ 0]]
			local f89_local13 = f89_local7:create( "waypointObjId1" ) --[[ @ 0]]
			f89_local10( f89_local4, f89_local13:get() ) --[[ @ 0]]
			DataSources.CurrentObjectiveInfo.subscriptions[f89_arg0]:subscribeToModel( f89_local13, function ( model )
				f89_local10( f89_local4, model:get() ) --[[ @ 0]]
			end, false ) --[[ @ 0]]
			local f89_local14 = f89_local7:create( "waypointObjId2" ) --[[ @ 0]]
			f89_local10( f89_local5, f89_local14:get() ) --[[ @ 0]]
			DataSources.CurrentObjectiveInfo.subscriptions[f89_arg0]:subscribeToModel( f89_local14, function ( model )
				f89_local10( f89_local5, model:get() ) --[[ @ 0]]
			end, false ) --[[ @ 0]]
			local f89_local15 = f89_local7:create( "waypointObjId3" ) --[[ @ 0]]
			f89_local10( f89_local6, f89_local15:get() ) --[[ @ 0]]
			DataSources.CurrentObjectiveInfo.subscriptions[f89_arg0]:subscribeToModel( f89_local15, function ( model )
				f89_local10( f89_local6, model:get() ) --[[ @ 0]]
			end, false ) --[[ @ 0]]
		end
	end,
	getModel = function ( f99_arg0 )
		if not DataSources.CurrentObjectiveInfo.preparedForController or not DataSources.CurrentObjectiveInfo.preparedForController[f99_arg0] then
			DataSources.CurrentObjectiveInfo.prepare( f99_arg0 ) --[[ @ 0]]
		end
		local f99_local0 = Engine[@"GetModelForController"]( f99_arg0 ) --[[ @ 0]]
		return f99_local0:create( "CurrentObjectiveInfo" )
	end
} --[[ @ 0]]
DataSources.ClearAllLives = {
	prepared = false,
	preparedForController = {},
	subscriptions = {},
	prepare = function ( f100_arg0, f100_arg1, f100_arg2 )
		if not DataSources.ClearAllLives.preparedForController then
			DataSources.ClearAllLives.preparedForController = {} --[[ @ 0]]
		end
		if not DataSources.ClearAllLives.subscriptions[f100_arg0] then
			DataSources.ClearAllLives.subscriptions[f100_arg0] = LUI.UIElement.new() --[[ @ 0]]
		end
		DataSources.ClearAllLives.subscriptions[f100_arg0]:unsubscribeFromAllModels() --[[ @ 0]]
		DataSources.ClearAllLives.preparedForController[f100_arg0] = true --[[ @ 0]]
		local f100_local0 = function ()
			DataSources.ClearAllLives.preparedForController[f100_arg0] = false --[[ @ 0]]
			DataSources.ClearAllLives.prepare( f100_arg0 ) --[[ @ 0]]
		end
		 --[[ @ 0]]
		local f100_local1 = DataSources.CPObjectiveTeams.getModel( f100_arg0 ) --[[ @ 0]]
		f100_local1 = f100_local1.myTeam --[[ @ 0]]
		if f100_local1 then
			DataSources.ClearAllLives.subscriptions[f100_arg0]:subscribeToModel( f100_local1, f100_local0, false ) --[[ @ 0]]
		end
		if f100_local1 then
			f100_local1 = f100_local1:get() --[[ @ 0]]
		end
		if f100_local1 then
			local f100_local2 = f100_local1:create( "clearAll.totalCount" ) --[[ @ 0]]
			local f100_local3 = f100_local1:create( "clearAll.currentCount" ) --[[ @ 0]]
			local f100_local4 = f100_local2:get() or 0 --[[ @ 0]]
			local f100_local5 = f100_local3:get() or 0 --[[ @ 0]]
			local f100_local6 = 0 --[[ @ 0]]
			if f100_local4 > 0 then
				f100_local6 = f100_local5 / f100_local4 --[[ @ 0]]
			end
			local f100_local7 = Engine[@"GetModelForController"]( f100_arg0 ) --[[ @ 0]]
			f100_local7 = f100_local7:create( "ClearAllLives" ) --[[ @ 0]]
			local f100_local8 = f100_local7:create( "numTotalCount" ) --[[ @ 0]]
			f100_local8:set( f100_local4 ) --[[ @ 0]]
			f100_local8 = f100_local7:create( "numCurrentCount" ) --[[ @ 0]]
			f100_local8:set( f100_local5 ) --[[ @ 0]]
			f100_local8 = f100_local7:create( "progress" ) --[[ @ 0]]
			f100_local8:set( f100_local6 ) --[[ @ 0]]
			DataSources.ClearAllLives.subscriptions[f100_arg0]:subscribeToModel( f100_local2, f100_local0, false ) --[[ @ 0]]
			DataSources.ClearAllLives.subscriptions[f100_arg0]:subscribeToModel( f100_local3, f100_local0, false ) --[[ @ 0]]
		end
	end,
	getModel = function ( f102_arg0 )
		if not DataSources.ClearAllLives.preparedForController or not DataSources.ClearAllLives.preparedForController[f102_arg0] then
			DataSources.ClearAllLives.prepare( f102_arg0 ) --[[ @ 0]]
		end
		local f102_local0 = Engine[@"GetModelForController"]( f102_arg0 ) --[[ @ 0]]
		return f102_local0:create( "ClearAllLives" )
	end
} --[[ @ 0]]
CoD.CPUtility.InitObjectiveNotificationSlidingTransition = function ( f103_arg0, f103_arg1, f103_arg2, f103_arg3, f103_arg4, f103_arg5 )
	local f103_local0 = f103_arg0[f103_arg3] --[[ @ 0]]
	local f103_local1 = f103_arg0[f103_arg4] --[[ @ 0]]
	f103_arg1.__atTop = false --[[ @ 0]]
	f103_arg1.__originalPosition = {} --[[ @ 0]]
	f103_arg1.__savedPosition = {} --[[ @ 0]]
	local f103_local2 = function ( f104_arg0 )
		local f104_local0, f104_local1, f104_local2, f104_local3 = f103_arg1:getLocalLeftRight() --[[ @ 0]]
		local f104_local4, f104_local5, f104_local6, f104_local7 = f103_arg1:getLocalTopBottom() --[[ @ 0]]
		f104_arg0.leftPercent = f104_local0 --[[ @ 0]]
		f104_arg0.rightPercent = f104_local1 --[[ @ 0]]
		f104_arg0.topPercent = f104_local4 --[[ @ 0]]
		f104_arg0.bottomPercent = f104_local5 --[[ @ 0]]
		f104_arg0.left = f104_local2 --[[ @ 0]]
		f104_arg0.right = f104_local3 --[[ @ 0]]
		f104_arg0.top = f104_local6 --[[ @ 0]]
		f104_arg0.bottom = f104_local7 --[[ @ 0]]
	end
	 --[[ @ 0]]
	local f103_local3 = function ()
		f103_arg1:beginAnimation( CoD.CPUtility.NOTIFICATION_SLIDE_ANIM_TIME_MS, Enum[@"hash_1F50FFF429AB1890"][@"hash_66F6186B702830BC"] ) --[[ @ 0]]
		local f105_local0, f105_local1, f105_local2, f105_local3 = f103_local0:getLocalTopBottom() --[[ @ 0]]
		f103_arg1:setTopBottom( f105_local0, f105_local1, f105_local2, f105_local3 ) --[[ @ 0]]
		local f105_local4 = f103_local1:getWidth() --[[ @ 0]]
		if f103_arg5 then
			if CoD.ModelUtility.IsGlobalDataSourceModelValueEqualTo( f103_arg2, "CPObjectivePerPlayer", "isPvp", 1 ) then
				local f105_local5, f105_local6, f105_local7, f105_local8 = f103_local0:getLocalLeftRight() --[[ @ 0]]
				f103_arg1:setLeftRight( f105_local5, f105_local6, f105_local7, f105_local7 + f105_local4 ) --[[ @ 0]]
			else
				local f105_local5, f105_local6, f105_local7, f105_local8 = f103_local1:getLocalLeftRight() --[[ @ 0]]
				f103_arg1:setLeftRight( f105_local5, f105_local6, f105_local7, f105_local8 ) --[[ @ 0]]
			end
		else
			local f105_local5, f105_local6, f105_local7, f105_local8 = f103_local0:getLocalLeftRight() --[[ @ 0]]
			f103_arg1:setLeftRight( f105_local5, f105_local6, f105_local8 - f105_local4, f105_local8 ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	f103_local2( f103_arg1.__originalPosition ) --[[ @ 0]]
	f103_arg1:registerEventHandler( CoD.CPUtility.ObjectiveNotificationSlideToTopEvent, function ( element, event )
		f103_local2( element.__savedPosition ) --[[ @ 0]]
		element.__atTop = true --[[ @ 0]]
		f103_local3() --[[ @ 0]]
	end ) --[[ @ 0]]
	f103_arg1:linkToElementModel( f103_arg1, "activeObjective.state", true, function ( model )
		f103_arg1.__atTop = false --[[ @ 0]]
		if model:get() == CoD.CPUtility.CP_OBJ_INFO_STATE_INCOMPLETE then
			f103_arg1:setLeftRight( f103_arg1.__originalPosition.leftPercent, f103_arg1.__originalPosition.rightPercent, f103_arg1.__originalPosition.left, f103_arg1.__originalPosition.right ) --[[ @ 0]]
			f103_arg1:setTopBottom( f103_arg1.__originalPosition.topPercent, f103_arg1.__originalPosition.bottomPercent, f103_arg1.__originalPosition.top, f103_arg1.__originalPosition.bottom ) --[[ @ 0]]
		elseif f103_arg5 then
			f103_arg1:beginAnimation( CoD.CPUtility.NOTIFICATION_SLIDE_ANIM_TIME_MS, Enum[@"hash_1F50FFF429AB1890"][@"hash_66F6186B702830BC"] ) --[[ @ 0]]
			f103_arg1:setLeftRight( f103_arg1.__savedPosition.leftPercent, f103_arg1.__savedPosition.rightPercent, f103_arg1.__savedPosition.left, f103_arg1.__savedPosition.right ) --[[ @ 0]]
			f103_arg1:setTopBottom( f103_arg1.__savedPosition.topPercent, f103_arg1.__savedPosition.bottomPercent, f103_arg1.__savedPosition.top, f103_arg1.__savedPosition.bottom ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	if f103_arg0._isPVPSubscription == nil then
		f103_arg0._isPVPSubscription = f103_arg0:subscribeToGlobalModel( f103_arg2, "CPObjectivePerPlayer", "isPvp", function ( model )
			if f103_arg1.__atTop then
				f103_local3() --[[ @ 0]]
			end
		end ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
CoD.CPUtility.InitObjectiveNotificationWidget = function ( f109_arg0, f109_arg1, f109_arg2, f109_arg3, f109_arg4, f109_arg5 )
	local f109_local0 = function ( f110_arg0, f110_arg1 )
		local f110_local0, f110_local1, f110_local2, f110_local3 = f110_arg0:getLocalLeftRight() --[[ @ 0]]
		local f110_local4 = (f110_local3 + f110_local2) / 2 --[[ @ 0]]
		f110_arg0:setLeftRight( f110_local0, f110_local1, f110_local4 - f110_arg1 * 0.5, f110_local4 + f110_arg1 * 0.5 ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	local f109_local1 = function ( f111_arg0, f111_arg1 )
		local f111_local0, f111_local1, f111_local2, f111_local3 = f111_arg0:getLocalTopBottom() --[[ @ 0]]
		local f111_local4 = (f111_local3 + f111_local2) / 2 --[[ @ 0]]
		f111_arg0:setTopBottom( f111_local0, f111_local1, f111_local4 - f111_arg1 * 0.5, f111_local4 + f111_arg1 * 0.5 ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	local f109_local2 = function ( f112_arg0 )
		local f112_local0 = f109_arg0:getFirstChild() --[[ @ 0]]
		while f112_local0 do
			f112_local0:setState( f109_arg1, f112_arg0 ) --[[ @ 0]]
			f112_local0 = f112_local0:getNextSibling() --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	f109_arg0:registerEventHandler( CoD.CPUtility.ObjectiveNotificationUpdateEvent, function ( element, event )
		local f113_local0 = event.animTime or 0 --[[ @ 0]]
		local f113_local1 = (event.textLength or 0) + f109_arg0:getSpacing() + f109_arg5 * 2 --[[ @ 0]]
		local f113_local2 = f109_arg0[f109_arg2] --[[ @ 0]]
		if f113_local2 then
			f113_local1 = f113_local1 + f113_local2:getWidth() --[[ @ 0]]
		end
		local f113_local3 = f109_arg0:getParent() --[[ @ 0]]
		if f113_local3 then
			f113_local3:beginAnimation( f113_local0 ) --[[ @ 0]]
			f109_local0( f113_local3, f113_local1 ) --[[ @ 0]]
			if f109_arg0.__savedHeight then
				f109_local1( f113_local3, f109_arg0.__savedHeight ) --[[ @ 0]]
			end
		end
		if event.stateName then
			if not f109_arg0.__stateChangeDelayTimer and f113_local0 > 0 then
				f109_arg0.__stateChangeDelayTimer = LUI.UITimer.newElementTimer( f113_local0 + CoD.CPUtility.NOTIFICATION_BUFFER_ANIM_TIME_MS, true, function ()
					f109_local2( event.stateName ) --[[ @ 0]]
					f109_arg0.__stateChangeDelayTimer:close() --[[ @ 0]]
					f109_arg0.__stateChangeDelayTimer = nil --[[ @ 0]]
				end ) --[[ @ 0]]
				f109_arg0:addElement( f109_arg0.__stateChangeDelayTimer ) --[[ @ 0]]
			elseif f113_local0 == 0 then
				f109_local2( event.stateName ) --[[ @ 0]]
			end
		end
	end ) --[[ @ 0]]
	f109_arg0:registerEventHandler( CoD.CPUtility.ObjectiveNotificationTransitionEvent, function ( element, event )
		local f115_local0 = event.shortLabel --[[ @ 0]]
		if f115_local0 then
			local f115_local1 = f115_local0:getWidth() --[[ @ 0]]
			local f115_local2 = f115_local0:getParent() --[[ @ 0]]
			if f115_local2 then
				local f115_local3 = f109_arg0:getWidth() --[[ @ 0]]
				local f115_local4, f115_local5, f115_local6, f115_local7 = f115_local2:getLocalLeftRight() --[[ @ 0]]
				local f115_local8 = f115_local3 * 0.5 - f115_local3 * f115_local4 + f115_local6 - f115_local1 * 0.5 --[[ @ 0]]
				f115_local0:beginAnimation( CoD.CPUtility.NOTIFICATION_SHRINK_ANIM_TIME_MS, Enum[@"hash_1F50FFF429AB1890"][@"hash_66F6186B702830BC"] ) --[[ @ 0]]
				f115_local0:setLeftPx( f115_local8 ) --[[ @ 0]]
			end
			local f115_local3 = f109_arg0:getParent() --[[ @ 0]]
			if f115_local3 then
				f109_arg0.__savedHeight = f109_arg0:getHeight() --[[ @ 0]]
				f115_local3:beginAnimation( CoD.CPUtility.NOTIFICATION_SHRINK_ANIM_TIME_MS, Enum[@"hash_1F50FFF429AB1890"][@"hash_66F6186B702830BC"] ) --[[ @ 0]]
				f109_local0( f115_local3, f109_arg3 ) --[[ @ 0]]
				f109_local1( f115_local3, f109_arg4 ) --[[ @ 0]]
			end
		end
	end ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.CPUtility.InitObjectiveString = function ( f116_arg0, f116_arg1, f116_arg2, f116_arg3 )
	local f116_local0 = f116_arg0[f116_arg2] --[[ @ 0]]
	local f116_local1 = f116_arg0[f116_arg3] --[[ @ 0]]
	if not f116_local0 or not f116_local1 then
		return 
	else
		local f116_local2 = function ( f117_arg0, f117_arg1 )
			local f117_local0 = CoD.HUDUtility.GetObjectiveDescription( f116_arg1, f116_arg0:getModel(), f117_arg0 ) --[[ @ 0]]
			local f117_local1 = CoD.HUDUtility.GetShortObjectiveDescription( f116_arg1, f116_arg0:getModel(), f117_arg0 ) --[[ @ 0]]
			local f117_local2 = string.sub( f117_local0, 2, -2 ) --[[ @ 0]]
			local f117_local3 = string.sub( f117_local1, 2, -2 ) --[[ @ 0]]
			local f117_local4 = 0 --[[ @ 0]]
			if f117_local3 == "" then
				f117_local1 = f117_local0 --[[ @ 0]]
			end
			local f117_local5, f117_local6 = string.find( f117_local2, f117_local3 ) --[[ @ 0]]
			if f117_local5 and f117_local5 > 1 then
				f116_local0:setText( string.sub( f117_local2, 1, f117_local5 - 1 ) ) --[[ @ 0]]
				f117_local4 = f116_local0:getGlobalTextWidth() --[[ @ 0]]
			end
			f116_local0:setText( f117_local0 ) --[[ @ 0]]
			f116_local1:setText( f117_local1 ) --[[ @ 0]]
			ScaleWidgetToLabelGlobalTextWidthCentered( f116_arg0, f116_local0, 0 ) --[[ @ 0]]
			f116_local1:beginAnimation( f117_arg1 or 0 ) --[[ @ 0]]
			f116_local1:setLeftPx( f117_local4 ) --[[ @ 0]]
		end
		 --[[ @ 0]]
		f116_arg0.__updatedObjective = false --[[ @ 0]]
		f116_arg0:linkToElementModel( f116_arg0, "activeObjective.objId", true, function ( model )
			local f118_local0 = model:get() --[[ @ 0]]
			if f118_local0 ~= nil and f118_local0 ~= 0 then
				f116_arg0.__currentObjId = f118_local0 --[[ @ 0]]
				f116_local2( f118_local0, 0 ) --[[ @ 0]]
				f116_arg0.__updatedObjective = true --[[ @ 0]]
				f116_arg0:dispatchEventToParent( {
					name = CoD.CPUtility.ObjectiveNotificationUpdateEvent,
					controller = f116_arg1,
					textLength = f116_local0:getGlobalTextWidth(),
					animTime = 0
				} ) --[[ @ 0]]
			end
		end ) --[[ @ 0]]
		f116_arg0:registerEventHandler( "clip_over", function ( element, event )
			if f116_arg0.__updatedObjective then
				f116_arg0.__updatedObjective = false --[[ @ 0]]
				f116_arg0:dispatchEventToParent( {
					name = CoD.CPUtility.ObjectiveNotificationTransitionEvent,
					controller = f116_arg1,
					shortLabel = f116_local1
				} ) --[[ @ 0]]
				if not f116_arg0.__slideToTopTimer then
					f116_arg0.__slideToTopTimer = LUI.UITimer.newElementTimer( CoD.CPUtility.NOTIFICATION_SHRINK_ANIM_TIME_MS + CoD.CPUtility.NOTIFICATION_BUFFER_ANIM_TIME_MS, true, function ()
						f116_arg0:dispatchEventToParent( {
							name = CoD.CPUtility.ObjectiveNotificationSlideToTopEvent,
							controller = f116_arg1
						} ) --[[ @ 0]]
						f116_arg0.__slideToTopTimer:close() --[[ @ 0]]
						f116_arg0.__slideToTopTimer = nil --[[ @ 0]]
					end ) --[[ @ 0]]
					f116_arg0:addElement( f116_arg0.__slideToTopTimer ) --[[ @ 0]]
				end
			end
		end ) --[[ @ 0]]
		f116_arg0:linkToElementModel( f116_arg0, "activeObjective.state", true, function ( model )
			local f121_local0 = model:get() --[[ @ 0]]
			if f121_local0 ~= nil and f121_local0 ~= CoD.CPUtility.CP_OBJ_INFO_STATE_INCOMPLETE and not f116_arg0.__slideToMiddleTimer and f116_arg0.__currentObjId and f116_arg0.__currentObjId ~= 0 then
				f116_arg0.__slideToMiddleTimer = LUI.UITimer.newElementTimer( CoD.CPUtility.NOTIFICATION_SLIDE_ANIM_TIME_MS + CoD.CPUtility.NOTIFICATION_BUFFER_ANIM_TIME_MS, true, function ()
					local f122_local0 = CoD.CPUtility.NOTIFICATION_SHRINK_ANIM_TIME_MS --[[ @ 0]]
					f116_local2( f116_arg0.__currentObjId, f122_local0 ) --[[ @ 0]]
					f116_arg0:dispatchEventToParent( {
						name = CoD.CPUtility.ObjectiveNotificationUpdateEvent,
						controller = f116_arg1,
						textLength = f116_local0:getGlobalTextWidth(),
						animTime = f122_local0,
						stateName = CoD.CPUtility.ObjectiveCompleteStateName
					} ) --[[ @ 0]]
					f116_arg0.__slideToMiddleTimer:close() --[[ @ 0]]
					f116_arg0.__slideToMiddleTimer = nil --[[ @ 0]]
				end ) --[[ @ 0]]
				f116_arg0:addElement( f116_arg0.__slideToMiddleTimer ) --[[ @ 0]]
			end
		end ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
CoD.CPUtility.GetObjectiveNotificationHeader = function ( f123_arg0, f123_arg1, f123_arg2 )
	local f123_local0 = tonumber( f123_arg2 ) --[[ @ 0]]
	if f123_local0 then
		local f123_local1 = Engine[@"GetTeamID"]( f123_arg0, Engine[@"GetPredictedClientNum"]( f123_arg0 ) ) --[[ @ 0]]
		local f123_local2 = DataSources.CPObjectiveTeams.getModel( f123_arg0 ) --[[ @ 0]]
		f123_local2 = f123_local2.myTeam --[[ @ 0]]
		if f123_local2 then
			f123_local2 = f123_local2:get() --[[ @ 0]]
		end
		if f123_arg1 ~= f123_local2 then
			if f123_local0 == CoD.CPUtility.CP_OBJ_INFO_STATE_INCOMPLETE then
				return Engine[@"hash_4F9F1239CFD921FE"]( @"hash_25EEC631C01CCFE7" )
			else
				return ""
			end
		elseif f123_local0 == CoD.CPUtility.CP_OBJ_INFO_STATE_INCOMPLETE then
			return Engine[@"hash_4F9F1239CFD921FE"]( @"hash_2C1210DC4D4BB37A" )
		elseif f123_local0 == CoD.CPUtility.CP_OBJ_INFO_STATE_SUCCESS then
			return Engine[@"hash_4F9F1239CFD921FE"]( @"hash_526AAAE2154A14FC" )
		elseif f123_local0 == CoD.CPUtility.CP_OBJ_INFO_STATE_FAILURE then
			return Engine[@"hash_4F9F1239CFD921FE"]( @"hash_49F03C20A3866551" )
		end
	end
	return ""
end
 --[[ @ 0]]
CoD.CPUtility.ShouldHideClearAllLife = function ( f124_arg0 )
	return CoD.CPUtility.ClearAllTransitionLives < f124_arg0
end
 --[[ @ 0]]
CoD.CPUtility.IsPlayerABot = function ( f125_arg0, f125_arg1, f125_arg2 )
	local f125_local0 = f125_arg0:getModel() --[[ @ 0]]
	if f125_arg2 ~= "" and f125_local0 then
		f125_local0 = f125_local0[f125_arg2] --[[ @ 0]]
	end
	if not f125_local0 then
		return false
	else
		local f125_local1 = f125_local0:get() --[[ @ 0]]
		if f125_local1 then
			local f125_local2 = Engine[@"GetPlayerListData"]( f125_arg1, f125_local1 ) --[[ @ 0]]
			return f125_local2.isBot == true
		else
			return false
		end
	end
end
 --[[ @ 0]]
CoD.CPUtility.IsPlayerACompanion = function ( f126_arg0, f126_arg1, f126_arg2 )
	local f126_local0 = f126_arg0:getModel() --[[ @ 0]]
	if f126_arg2 ~= "" and f126_local0 then
		f126_local0 = f126_local0[f126_arg2] --[[ @ 0]]
	end
	if not f126_local0 then
		return false
	else
		local f126_local1 = f126_local0:get() --[[ @ 0]]
		if f126_local1 then
			local f126_local2 = Engine[@"GetPlayerListData"]( f126_arg1, f126_local1 ) --[[ @ 0]]
			return f126_local2.isCompanion == true
		else
			return false
		end
	end
end
 --[[ @ 0]]
CoD.CPUtility.SetGotoPlayerColor = function ( f127_arg0, f127_arg1 )
	local f127_local0 = f127_arg1 --[[ @ 0]]
	local f127_local1 = Engine[@"GetClientNum"]( f127_arg0 ) --[[ @ 0]]
	local f127_local2 = CoD.ColorUtility.GetColorBlindColorForPlayer( f127_arg0, "FriendlyBlue" ) --[[ @ 0]]
	if f127_local0 == f127_local1 then
		f127_local2 = CoD.ColorUtility.GetColorBlindColorForPlayer( f127_arg0, "PlayerYellow" ) --[[ @ 0]]
	else
		
	end
	return f127_local2.r, f127_local2.g, f127_local2.b
end
 --[[ @ 0]]
CoD.CPUtility.SetEscortTeamColor = function ( f128_arg0, f128_arg1 )
	local f128_local0 = f128_arg1 --[[ @ 0]]
	local f128_local1 = CoD.ColorUtility.GetColorBlindColorForPlayer( f128_arg0, "EnemyOrange" ) --[[ @ 0]]
	if f128_local0 == 1 then
		f128_local1 = CoD.ColorUtility.GetColorBlindColorForPlayer( f128_arg0, "FriendlyBlue" ) --[[ @ 0]]
	end
	return f128_local1.r, f128_local1.g, f128_local1.b
end
 --[[ @ 0]]
CoD.CPUtility.GetSpecialistPromptImage = function ( f129_arg0, f129_arg1 )
	local f129_local0 = f129_arg1 + 1 --[[ @ 0]]
	if f129_local0 < 2 then
		return "$blacktransparent"
	else
		local f129_local1 = CoD.PlayerRoleUtility.GetCachedHeroInfo( Engine[@"CurrentSessionMode"](), f129_local0 ) --[[ @ 0]]
		if f129_local1 == nil or f129_local1.positionDraftIcon == nil then
			return "$blacktransparent"
		else
			return f129_local1.positionDraftIcon
		end
	end
end
 --[[ @ 0]]
CoD.CPUtility.LocalizeWithShortFriendlyAndEnemyTeams = function ( f130_arg0, f130_arg1 )
	local f130_local0 = CoD.TeamUtility.GetTeam( f130_arg0 ) --[[ @ 0]]
	local f130_local1 = nil --[[ @ 0]]
	if f130_local0 == Enum[@"team_t"][@"hash_42A34B055ADD98AB"] then
		f130_local1 = Enum[@"team_t"][@"hash_33F83D7CE4BD7B68"] --[[ @ 0]]
	else
		f130_local0 = Enum[@"team_t"][@"hash_33F83D7CE4BD7B68"] --[[ @ 0]]
		f130_local1 = Enum[@"team_t"][@"hash_42A34B055ADD98AB"] --[[ @ 0]]
	end
	return Engine[@"hash_4F9F1239CFD921FE"]( f130_arg1, Engine[@"hash_4F9F1239CFD921FE"]( CoD.TeamUtility.GetDefaultTeamShortName( f130_local0 ) ), Engine[@"hash_4F9F1239CFD921FE"]( CoD.TeamUtility.GetDefaultTeamShortName( f130_local1 ) ) )
end
 --[[ @ 0]]
CoD.CPUtility.LocalizeWithShortFriendlyTeam = function ( f131_arg0, f131_arg1 )
	local f131_local0 = CoD.TeamUtility.GetTeam( f131_arg0 ) --[[ @ 0]]
	if f131_local0 ~= Enum[@"team_t"][@"hash_42A34B055ADD98AB"] then
		f131_local0 = Enum[@"team_t"][@"hash_33F83D7CE4BD7B68"] --[[ @ 0]]
	end
	return Engine[@"hash_4F9F1239CFD921FE"]( f131_arg1, Engine[@"hash_4F9F1239CFD921FE"]( CoD.TeamUtility.GetDefaultTeamShortName( f131_local0 ) ) )
end
 --[[ @ 0]]
CoD.CPUtility.LocalizeWithShortEnemyTeam = function ( f132_arg0, f132_arg1 )
	local f132_local0 = CoD.TeamUtility.GetTeam( f132_arg0 ) --[[ @ 0]]
	local f132_local1 = nil --[[ @ 0]]
	if f132_local0 == Enum[@"team_t"][@"hash_42A34B055ADD98AB"] then
		f132_local1 = Enum[@"team_t"][@"hash_33F83D7CE4BD7B68"] --[[ @ 0]]
	else
		f132_local1 = Enum[@"team_t"][@"hash_42A34B055ADD98AB"] --[[ @ 0]]
	end
	return Engine[@"hash_4F9F1239CFD921FE"]( f132_arg1, Engine[@"Localize"]( CoD.TeamUtility.GetDefaultTeamShortName( f132_local1 ) ) )
end
 --[[ @ 0]]
CoD.CPUtility.TEMP_GetOnlyOtherNonCompanionPlayerDefectionText = function ( f133_arg0, f133_arg1 )
	for f133_local0 = 0 --[[ @ 0]], LuaDefine.MAX_CLIENTS - 1, 1 do
		local f133_local3 = Engine[@"hash_E4D2F32833CFA6C"]( f133_local0 ) --[[ @ 0]]
		if f133_local3.clientNum:get() ~= Engine[@"GetClientNum"]( f133_arg0 ) and not f133_local3.isBot:get() then
			local f133_local4 --[[ @ 0]]
			if f133_local3.team:get() == Enum[@"team_t"][@"hash_42A34B055ADD98AB"] then
				f133_local4 = Enum[@"team_t"][@"hash_33F83D7CE4BD7B68"] --[[ @ 0]]
			else
				f133_local4 = Enum[@"team_t"][@"hash_42A34B055ADD98AB"] --[[ @ 0]]
			end
			return Engine[@"hash_4F9F1239CFD921FE"]( f133_arg1, GetClientNameAndClanTag( f133_arg0, f133_local3.clientNum:get() ), Engine[@"Localize"]( CoD.TeamUtility.GetDefaultTeamShortName( f133_local4 ) ) )
		end
	end
	return ""
end
 --[[ @ 0]]
CoD.CPUtility.TEMP_GetOnlyOtherNonCompanionPlayerDefectionColor = function ( f134_arg0, f134_arg1 )
	for f134_local0 = 0 --[[ @ 0]], LuaDefine.MAX_CLIENTS - 1, 1 do
		local f134_local3 = Engine[@"hash_E4D2F32833CFA6C"]( f134_local0 ) --[[ @ 0]]
		if f134_local3.clientNum:get() ~= Engine[@"GetClientNum"]( f134_arg0 ) and not f134_local3.isBot:get() then
			local f134_local4 = f134_local3.team:get() --[[ @ 0]]
			local f134_local5 = CoD.TeamUtility.GetColorSetFriendlyOrShoutCasterColor( f134_arg0 ) --[[ @ 0]]
			if f134_local4 == CoD.TeamUtility.GetTeamID( f134_arg0 ) then
				f134_local5 = CoD.TeamUtility.GetColorSetEnemyOrShoutCasterColor( f134_arg0 ) --[[ @ 0]]
			end
			return CoD.ColorUtility.ExplodeColor( f134_local5 )
		end
	end
	return 0, 0, 0
end
 --[[ @ 0]]
CoD.CPUtility.LocalizeShortTeamIntoString = function ( f135_arg0, f135_arg1 )
	return Engine[@"hash_4F9F1239CFD921FE"]( f135_arg0, Engine[@"hash_4F9F1239CFD921FE"]( CoD.TeamUtility.GetDefaultTeamShortName( f135_arg1 ) ) )
end
 --[[ @ 0]]
CoD.OverlayUtility.AddSystemOverlay( "CPDefectPopup", {
	menuName = "SystemOverlay_FreeCursor",
	title = @"hash_1EC7F5F52C453C14",
	description = function ( f136_arg0 )
		local f136_local0 --[[ @ 0]]
		if CoD.TeamUtility.GetTeam( f136_arg0 ) == Enum[@"team_t"][@"hash_42A34B055ADD98AB"] then
			f136_local0 = Enum[@"team_t"][@"hash_33F83D7CE4BD7B68"] --[[ @ 0]]
		else
			f136_local0 = Enum[@"team_t"][@"hash_42A34B055ADD98AB"] --[[ @ 0]]
		end
		return Engine[@"hash_4F9F1239CFD921FE"]( @"hash_1FA69678D2B5CF93", Engine[@"hash_4F9F1239CFD921FE"]( CoD.TeamUtility.GetDefaultTeamName( f136_local0 ) ) )
	end,
	categoryType = CoD.OverlayUtility.OverlayTypes.GenericMessage,
	[CoD.OverlayUtility.aCrossPromptFn] = function ( f137_arg0 )
		return function ( f138_arg0, f138_arg1 )
			SendOwnMenuResponse( f138_arg0, f138_arg1, "accept" ) --[[ @ 0]]
		end
		
	end,
	[CoD.OverlayUtility.aCrossPromptText] = @"hash_70DFD294FC69F682",
	[CoD.OverlayUtility.bCirclePromptFn] = function ( f139_arg0 )
		return function ( f140_arg0, f140_arg1 )
			SendOwnMenuResponse( f140_arg0, f140_arg1, "decline" ) --[[ @ 0]]
		end
		
	end,
	[CoD.OverlayUtility.bCirclePromptText] = @"hash_25C16E02B211A4F4"
} ) --[[ @ 0]]
CoD.CPUtility.AARObjectiveStates = LuaEnum.createEnum( "STATE_INCOMPLETE", "STATE_SUCCESS", "STATE_FAILURE" ) --[[ @ 0]]
CoD.CPUtility.SetupInGameCPAARModels = function ( f141_arg0, f141_arg1 )
	local f141_local0 = f141_arg0:getModel() --[[ @ 0]]
	local f141_local1 = Engine[@"GetCurrentMapName"]() --[[ @ 0]]
	local f141_local2 = function ( f142_arg0, f142_arg1, f142_arg2, f142_arg3 )
		if f142_arg1 == CoD.CPUtility.AARObjectiveStates.STATE_SUCCESS then
			return f142_arg3[f142_arg2 + 1][@"hash_496EF98AC24F8629"] or ""
		else
			return f142_arg3[f142_arg2 + 1][@"hash_5F170207A7A76F04"] or ""
		end
	end
	 --[[ @ 0]]
	local f141_local3 = function ( f143_arg0, f143_arg1 )
		local f143_local0 = CoD.BaseUtility.GetMapValue( f141_local1, "aarHeaderStrings_" .. f143_arg0, nil ) --[[ @ 0]]
		return f143_local0[f143_arg1 + 1][@"hash_5A49A51690617BB7"]
	end
	 --[[ @ 0]]
	local f141_local4 = CoD.TeamUtility.GetTeamID( f141_arg1 ) --[[ @ 0]]
	if f141_local4 == Enum[@"team_t"][@"hash_42A34B055ADD98AB"] or f141_local4 == Enum[@"team_t"][@"hash_33F83D7CE4BD7B68"] then
		local f141_local5 = Engine[@"GetFactionForTeam"]( f141_local4 ) --[[ @ 0]]
		local f141_local6 = CoD.BaseUtility.GetMapValue( f141_local1, "aarObjectives_" .. f141_local5, nil ) --[[ @ 0]]
		local f141_local7 = f141_local0:create( "missionResult" ) --[[ @ 0]]
		f141_local7:set( f141_local3( f141_local5, f141_local0.mission_result:get() ) ) --[[ @ 0]]
		if f141_local6 then
			for f141_local7 = 0 --[[ @ 0]], math.min( 9, #f141_local6 - 1 ), 1 do
				local f141_local10 = f141_local0:create( "objective" .. f141_local7 ) --[[ @ 0]]
				local f141_local11 = "obj" --[[ @ 0]]
				f141_local11 = f141_local0["obj" .. f141_local7 .. "_result"]:get() --[[ @ 0]]
				local f141_local12 = f141_local10:create( "description" ) --[[ @ 0]]
				f141_local12:set( f141_local2( f141_local5, f141_local11, f141_local7, f141_local6 ) ) --[[ @ 0]]
				f141_local12 = f141_local10:create( "result" ) --[[ @ 0]]
				f141_local12:set( f141_local11 ) --[[ @ 0]]
			end
		end
	end
end
 --[[ @ 0]]
CoD.CPUtility.SetupChyron = function ( f144_arg0, f144_arg1 )
	local f144_local0 = f144_arg0:getModel() --[[ @ 0]]
	local f144_local1 = Engine[@"GetCurrentMapName"]() --[[ @ 0]]
	for f144_local2 = 1 --[[ @ 0]], 5, 1 do
		local f144_local5 = CoD.BaseUtility.GetMapValue( f144_local1, @"hash_42CF3130917268CA" .. f144_local2, @"hash_0" ) --[[ @ 0]]
		local f144_local6 = f144_local0:create( "line" .. f144_local2 ) --[[ @ 0]]
		f144_local6:set( f144_local5 ) --[[ @ 0]]
	end
	f144_arg0:appendEventHandler( "clip_over", function ()
		SendOwnMenuResponse( f144_arg0, f144_arg1, "closed" ) --[[ @ 0]]
		return true
	end ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.CPUtility.GetLivesRemainingText = function ( f146_arg0 )
	if f146_arg0 == 1 then
		return Engine[@"hash_4F9F1239CFD921FE"]( @"hash_55F52A17196D872D", f146_arg0 )
	else
		return Engine[@"hash_4F9F1239CFD921FE"]( @"hash_7CC96249C0FC18E4", f146_arg0 )
	end
end
 --[[ @ 0]]
CoD.CPUtility.GetLivesRemainingTitle = function ( f147_arg0 )
	if f147_arg0 == 1 then
		return Engine[@"hash_4F9F1239CFD921FE"]( @"hash_7157B8AEAE96B10C", f147_arg0 )
	else
		return Engine[@"hash_4F9F1239CFD921FE"]( @"hash_4531E5936198E11F", f147_arg0 )
	end
end
 --[[ @ 0]]
