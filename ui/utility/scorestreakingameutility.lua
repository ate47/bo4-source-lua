-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:36
CoD.ScorestreakInGameUtility = {} --[[ @ 0]]
CoD.ScorestreakInGameUtility.HealthBoostMenuResponseName = "HealthBoost" --[[ @ 0]]
CoD.ScorestreakInGameUtility.ArrowState = {
	NONE = 0,
	UP = 1,
	DOWN = 2,
	BOTH = 3
} --[[ @ 0]]
CoD.ScorestreakInGameUtility.HealthBoostPlayerSelected = function ( f1_arg0, f1_arg1, f1_arg2 )
	local f1_local0 = f1_arg1:getModel() --[[ @ 0]]
	local f1_local1 = Engine[@"GetClientNum"]( f1_arg2 ) --[[ @ 0]]
	if f1_local0 then
		Engine[@"SendMenuResponse"]( f1_arg2, CoD.ScorestreakInGameUtility.HealthBoostMenuResponseName, "select_player", f1_local0.clientNum:get() ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
CoD.ScorestreakInGameUtility.AddScorestreakListNavigation = function ( f2_arg0, f2_arg1, f2_arg2 )
	if Engine[@"hash_2A55C3ACD0D2BCF0"]() then
		return 
	end
	local f2_local0 = 0 --[[ @ 0]]
	if CoD.isPC then
		f2_local0 = f2_local0 | LUI.GridLayout.NavigationFlags.CHANGE_FOCUS --[[ @ 0]]
	end
	local f2_local1 = function ()
		if f2_arg1.menu._focusTimer == nil then
			f2_arg1.menu._focusTimer = LUI.UITimer.newElementTimer( 0, true, function ()
				f2_arg1.menu:removeElement( f2_arg1.menu._focusTimer ) --[[ @ 0]]
				f2_arg1.menu._focusTimer = nil --[[ @ 0]]
				f2_arg1.hasListFocus = true --[[ @ 0]]
				f2_arg1:getFirstSelectableItem( true ) --[[ @ 0]]
			end ) --[[ @ 0]]
			f2_arg1.menu:addElement( f2_arg1.menu._focusTimer ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	f2_arg1:appendEventHandler( "register_focusable_element", f2_local1 ) --[[ @ 0]]
	f2_arg1:appendEventHandler( "unregister_focusable_element", f2_local1 ) --[[ @ 0]]
	CoD.Menu.AddButtonCallbackFunction( f2_arg0, f2_arg1, f2_arg2, Enum[@"LUIButton"][@"hash_24B11D2B20C75A7F"], "ui_navup", function ( element, menu, controller, f5_arg3 )
		if not element.m_disableNavigation and (not (not f2_arg1.dpadDisabled or not IsDpadButton( f5_arg3 )) or f2_arg1:navigateItemUp( f2_local0 )) then
			return true
		else
			
		end
	end ) --[[ @ 0]]
	CoD.Menu.AddButtonCallbackFunction( f2_arg0, f2_arg1, f2_arg2, Enum[@"LUIButton"][@"hash_6D4C15FE32148D3A"], "ui_navdown", function ( element, menu, controller, f6_arg3 )
		if not element.m_disableNavigation and (not (not f2_arg1.dpadDisabled or not IsDpadButton( f6_arg3 )) or f2_arg1:navigateItemDown( f2_local0 )) then
			return true
		else
			
		end
	end ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ScorestreakInGameUtility.SetScorestreakSelectedSlot = function ( f7_arg0, f7_arg1 )
	local f7_local0 = f7_arg0:getModel( f7_arg1, "rewardSlot" ) --[[ @ 0]]
	local f7_local1 = f7_local0 and f7_local0:get() --[[ @ 0]]
	if f7_local1 then
		Engine[@"ActionSlotSelectWeapon"]( f7_arg1, f7_local1 ) --[[ @ 0]]
	else
		Engine[@"ActionSlotSelectWeapon"]( f7_arg1, -1 ) --[[ @ 0]]
	end
	local f7_local2 = Engine[@"GetModelForController"]( f7_arg1 ) --[[ @ 0]]
	local f7_local3 = f7_local2.hudItems.currentHCStreakName --[[ @ 0]]
	local f7_local4 = f7_local3 --[[ @ 0]]
	f7_local3 = f7_local3.set --[[ @ 0]]
	local f7_local5 = f7_arg0:getModel() --[[ @ 0]]
	f7_local3( f7_local4, f7_local5.rewardName:get() ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ScorestreakInGameUtility.UpdateScorestreakArrowState = function ( f8_arg0, f8_arg1, f8_arg2, f8_arg3 )
	local f8_local0 = f8_arg0:getModel( f8_arg2, "arrowState" ) --[[ @ 0]]
	if not f8_local0 then
		return 
	end
	local f8_local1 = false --[[ @ 0]]
	local f8_local2 = false --[[ @ 0]]
	local f8_local3 = true --[[ @ 0]]
	for f8_local7, f8_local8, f8_local9 in f8_arg1:forEachElement() --[[ @ 0]] do
		if f8_local9 == f8_arg0 then
			f8_local3 = false --[[ @ 0]]
		end
		if f8_local9.currentState == f8_arg3 then
			if f8_local3 then
				f8_local1 = true --[[ @ 0]]
			else
				f8_local2 = true --[[ @ 0]]
			end
		end
	end
	f8_local4 = CoD.ScorestreakInGameUtility.ArrowState.NONE --[[ @ 0]]
	if f8_local1 and f8_local2 then
		f8_local4 = CoD.ScorestreakInGameUtility.ArrowState.BOTH --[[ @ 0]]
	elseif f8_local1 then
		f8_local4 = CoD.ScorestreakInGameUtility.ArrowState.UP --[[ @ 0]]
	elseif f8_local2 then
		f8_local4 = CoD.ScorestreakInGameUtility.ArrowState.DOWN --[[ @ 0]]
	end
	f8_local0:set( f8_local4 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ScorestreakInGameUtility.InitScorestreakUpdateListener = function ( f9_arg0, f9_arg1, f9_arg2 )
	f9_arg0:registerEventHandler( "scorestreak_state_update", function ( element, event )
		for f10_local3, f10_local4, f10_local5 in f9_arg0:forEachElement() --[[ @ 0]] do
			if f10_local5.currentState == f9_arg2 then
				CoD.ScorestreakInGameUtility.UpdateScorestreakArrowState( f10_local5, f9_arg0, f9_arg1, f9_arg2 ) --[[ @ 0]]
			end
		end
	end ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ScorestreakInGameUtility.EarningTowardsThisScorestreak = function ( f11_arg0, f11_arg1 )
	local f11_local0 = f11_arg1:getModel() --[[ @ 0]]
	local f11_local1 = Engine[@"GetModelForController"]( f11_arg0 ) --[[ @ 0]]
	local f11_local2 = Engine[@"GetModel"]( f11_local1, "rewardMomentum" ) --[[ @ 0]]
	local f11_local3 = Engine[@"GetModel"]( f11_local0, "momentumCost" ) --[[ @ 0]]
	local f11_local4 = Engine[@"GetModel"]( f11_local1, "killstreaks" ) --[[ @ 0]]
	if not f11_local3 or not f11_local2 or not f11_local4 then
		return false
	end
	local f11_local5 = f11_local3:get() --[[ @ 0]]
	local f11_local6 = f11_local2:get() --[[ @ 0]]
	if f11_local6 == nil or f11_local5 == nil or f11_local5 < f11_local6 then
		return false
	end
	for f11_local7 = 0 --[[ @ 0]], CoD.ScorestreakSelectUtility.GetMaxAllowedScorestreaks(), 1 do
		local f11_local10 = CoD.SafeGetModelValue( f11_local4, "killstreak" .. f11_local7 .. ".momentumCost" ) --[[ @ 0]]
		local f11_local11 = CoD.SafeGetModelValue( f11_local4, "killstreak" .. f11_local7 .. ".rewardImage" ) --[[ @ 0]]
		if f11_local10 and f11_local6 < f11_local10 then
			return f11_local11 == f11_local0.rewardImage:get()
		end
	end
	return false
end
 --[[ @ 0]]
CoD.ScorestreakInGameUtility.ScorestreakIsUsable = function ( f12_arg0, f12_arg1 )
	local f12_local0 = f12_arg1:getModel() --[[ @ 0]]
	f12_local0 = f12_local0.rewardImage:get() --[[ @ 0]]
	local f12_local1 = Engine[@"GetModel"]( Engine[@"GetModelForController"]( f12_arg0 ), "killstreaks" ) --[[ @ 0]]
	return f12_local0 == f12_local1.killstreak3.rewardImage:get()
end
 --[[ @ 0]]
CoD.ScorestreakInGameUtility.IsScorestreakDiscountActive = function ( f13_arg0 )
	if IsMultiplayer() then
		return (Engine[@"hash_4330A0AE3BC3A6E9"]( f13_arg0 ) or 1) < 0.99
	else
		return false
	end
end
 --[[ @ 0]]
DataSources.HealthBoostPlayerList = {
	friendlyCount = 6,
	clientSort = function ( f14_arg0, f14_arg1 )
		if f14_arg0.currentHealth ~= f14_arg1.currentHealth then
			return f14_arg0.currentHealth < f14_arg1.currentHealth
		else
			return f14_arg0.clientNum < f14_arg1.clientNum
		end
	end,
	prepare = function ( f15_arg0, f15_arg1, f15_arg2 )
		local f15_local0 = nil --[[ @ 0]]
		f15_arg1.clients = {} --[[ @ 0]]
		local f15_local1 = Engine[@"GetModelForController"]( f15_arg0 ) --[[ @ 0]]
		if CoD.IsShoutcaster( f15_arg0 ) then
			local f15_local2 = Engine[@"GetModel"]( f15_local1, "deadSpectator.playerIndex" ) --[[ @ 0]]
			f15_local0 = f15_local2:get() --[[ @ 0]]
		else
			f15_local0 = Engine[@"GetClientNum"]( f15_arg0 ) --[[ @ 0]]
		end
		local f15_local2 = Engine[@"GetTeamID"]( f15_arg0, f15_local0 ) --[[ @ 0]]
		for f15_local9, f15_local10 in pairs( Engine[@"hash_F9C4C8A66F9CB02"]( f15_arg0 ) ) --[[ @ 0]] do
			if f15_local2 == f15_local10 and f15_local9 ~= f15_local0 then
				local f15_local6 = Engine[@"hash_E4D2F32833CFA6C"]( f15_local9 ) --[[ @ 0]]
				if f15_local6.health then
					local f15_local7 = f15_local6.health.healthValue --[[ @ 0]]
					local f15_local8 = f15_local6.health.healthValue:get() --[[ @ 0]]
				end
				table.insert( f15_arg1.clients, {
					clientNum = f15_local9,
					currentHealth = f15_local7 and f15_local8 or 0
				} ) --[[ @ 0]]
			end
		end
		while #f15_arg1.clients < DataSources.HealthBoostPlayerList.friendlyCount - 1 do
			table.insert( f15_arg1.clients, {
				clientNum = -1,
				currentHealth = 0
			} ) --[[ @ 0]]
		end
		table.sort( f15_arg1.clients, DataSources.HealthBoostPlayerList.clientSort ) --[[ @ 0]]
		f15_arg1.clients[DataSources.HealthBoostPlayerList.friendlyCount] = {
			clientNum = f15_local0,
			currentHealth = 0
		} --[[ @ 0]]
		if not f15_arg1.clientCountSubscription then
			f15_local4 = f15_arg1 --[[ @ 0]]
			f15_local3 = f15_arg1.subscribeToModel --[[ @ 0]]
			f15_local5 = Engine[@"GetModelForController"]( f15_arg0 ) --[[ @ 0]]
			f15_arg1.clientCountSubscription = f15_local3( f15_local4, f15_local5:create( "Clients.clientCount" ), function ()
				f15_arg1:updateDataSource( true, true ) --[[ @ 0]]
			end, false ) --[[ @ 0]]
		end
		if not f15_arg1.clientChangedTeamSubscription then
			f15_local4 = f15_arg1 --[[ @ 0]]
			f15_local3 = f15_arg1.subscribeToModel --[[ @ 0]]
			f15_local5 = Engine[@"GetModelForController"]( f15_arg0 ) --[[ @ 0]]
			f15_arg1.clientChangedTeamSubscription = f15_local3( f15_local4, f15_local5:create( "Clients.clientChangedTeam" ), function ()
				f15_arg1:updateDataSource( true, true ) --[[ @ 0]]
			end, false ) --[[ @ 0]]
		end
	end,
	getCount = function ( f18_arg0 )
		return #f18_arg0.clients
	end,
	getItem = function ( f19_arg0, f19_arg1, f19_arg2 )
		if f19_arg1.clients[f19_arg2] and f19_arg1.clients[f19_arg2].clientNum then
			return Engine[@"hash_E4D2F32833CFA6C"]( f19_arg1.clients[f19_arg2].clientNum )
		else
			return Engine[@"hash_E4D2F32833CFA6C"]( -1 )
		end
	end
} --[[ @ 0]]
