-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:51
CoD.TeamUtility = {} --[[ @ 0]]
CoD.TeamUtility.TeamName = {} --[[ @ 0]]
CoD.TeamUtility.TeamName[Enum[@"team_t"][@"team_free"]] = @"mpui/autoassign" --[[ @ 0]]
CoD.TeamUtility.TeamName[Enum[@"team_t"][@"team_neutral"]] = @"mpui/neutral" --[[ @ 0]]
CoD.TeamUtility.TeamName[Enum[@"team_t"][@"team_spectator"]] = @"mpui/shoutcaster" --[[ @ 0]]
if not CoD.isMultiplayer then
	CoD.TeamUtility.TeamName[Enum[@"team_t"][@"team_neutral"]] = @"mpui/neutral" --[[ @ 0]]
	CoD.TeamUtility.TeamName[Enum[@"team_t"][@"team_dead"]] = @"hash_3E283EA5896DD5A6" --[[ @ 0]]
end
CoD.TeamUtility.GetTeam = function ( f1_arg0 )
	if IsCodCaster( f1_arg0 ) then
		return CoD.ShoutcasterProfileVarValue( f1_arg0, "shoutcaster_team" )
	else
		return Engine[@"getlobbyteamid"]( Enum[@"lobbymodule"][@"lobby_module_client"], Engine[@"getclientnum"]( f1_arg0 ) )
	end
end
 --[[ @ 0]]
CoD.TeamUtility.GetTeams = function ()
	CoD.TeamUtility.Teams = {} --[[ @ 0]]
	local f2_local0 = Engine[@"getteams"]( Enum[@"lobbymodule"][@"lobby_module_client"], Engine[@"lobbygetcontrollinglobbysession"]( Enum[@"lobbymodule"][@"lobby_module_client"] ) ) --[[ @ 0]]
	local f2_local1 = {} --[[ @ 0]]
	for f2_local5, f2_local6 in pairs( f2_local0.clientTeams ) --[[ @ 0]] do
		if not f2_local1[f2_local6.team] and CoD.TeamUtility.IsValidPlayerTeam( f2_local6.team ) then
			f2_local1[f2_local6.team] = true --[[ @ 0]]
			table.insert( CoD.TeamUtility.Teams, f2_local6.team ) --[[ @ 0]]
		end
	end
	return CoD.TeamUtility.Teams
end
 --[[ @ 0]]
CoD.TeamUtility.ShouldUseCustomTeamIdentity = function ( f3_arg0 )
	if not CoD.CodCasterUtility.IsCodCasterOrAssigned( f3_arg0 ) then
		return false
	elseif not CoDShared.IsGametypeTeamBased() then
		return false
	elseif not CoD.ShoutcasterProfileVarBool( f3_arg0, "shoutcaster_fe_team_identity" ) then
		return false
	else
		return true
	end
end
 --[[ @ 0]]
CoD.TeamUtility.ShouldUseBlankTeamIdentity = function ( f4_arg0 )
	if not CoD.IsShoutcaster( f4_arg0 ) then
		return false
	elseif not CoDShared.IsGametypeTeamBased() then
		return false
	elseif CoD.ShoutcasterProfileVarBool( f4_arg0, "shoutcaster_ds_team_identity" ) then
		return false
	else
		return true
	end
end
 --[[ @ 0]]
CoD.TeamUtility.GetDefaultCodCasterTeamName = function ( f5_arg0 )
	if f5_arg0 == "team2" then
		return Engine[@"hash_4F9F1239CFD921FE"]( @"hash_139A9E427416E0C7" )
	else
		return Engine[@"hash_4F9F1239CFD921FE"]( @"hash_139A9F427416E27A" )
	end
end
 --[[ @ 0]]
CoD.TeamUtility.IsValidPlayerTeam = function ( f6_arg0, f6_arg1 )
	if not f6_arg0 then
		return false
	elseif CoDShared.IsGametypeTeamBased( f6_arg1 ) then
		local f6_local0 = {
			[Enum[@"team_t"][@"team_allies"]] = true,
			[Enum[@"team_t"][@"team_axis"]] = true
		} --[[ @ 0]]
		return f6_local0[f6_arg0] ~= nil
	else
		local f6_local0 --[[ @ 0]]
		if f6_arg0 <= Enum[@"team_t"][@"team_free"] or f6_arg0 >= Enum[@"team_t"][@"team_spectator"] then
			f6_local0 = false --[[ @ 0]]
		else
			f6_local0 = true --[[ @ 0]]
		end
	end
	return f6_local0
end
 --[[ @ 0]]
CoD.TeamUtility.GetOppositeTeamAxisAllies = function ( f7_arg0 )
	if f7_arg0 == Enum[@"team_t"][@"team_allies"] then
		return Enum[@"team_t"][@"team_axis"]
	elseif f7_arg0 == Enum[@"team_t"][@"team_axis"] then
		return Enum[@"team_t"][@"team_allies"]
	else
		return f7_arg0
	end
end
 --[[ @ 0]]
CoD.TeamUtility.GetTeamColor = function ( f8_arg0, f8_arg1 )
	if CoD.IsShoutcaster( f8_arg0 ) and CoD.ShoutcasterProfileVarBool( f8_arg0, "shoutcaster_ds_flip_scorepanel" ) then
		f8_arg1 = CoD.TeamUtility.GetOppositeTeamAxisAllies( f8_arg1 ) --[[ @ 0]]
	end
	return CoD.TeamUtility.GetTeamFactionColor( f8_arg1 )
end
 --[[ @ 0]]
CoD.TeamUtility.GetTeamIDForController = function ( f9_arg0 )
	local f9_local0 = Engine[@"getteamidbyxuid"]( Engine[@"getxuid64"]( f9_arg0 ) ) --[[ @ 0]]
	if f9_local0 then
		return f9_local0
	end
	local f9_local1 = Engine[@"lobbygetsessionclients"]( Enum[@"lobbymodule"][@"lobby_module_client"], Enum[@"lobbytype"][@"lobby_type_game"] ) --[[ @ 0]]
	if f9_local1 and f9_local1.sessionClients then
		for f9_local5, f9_local6 in ipairs( f9_local1.sessionClients ) --[[ @ 0]] do
			local f9_local7 = f9_local6.team --[[ @ 0]]
			if Engine[@"getxuid64"]( f9_arg0 ) == f9_local6.xuid then
				return f9_local7
			end
		end
		
	end
	return Enum[@"team_t"][@"team_bad"]
end
 --[[ @ 0]]
CoD.TeamUtility.GetPredictedTeamID = function ( f10_arg0 )
	local f10_local0 = CoD.SafeGetModelValue( Engine[@"getmodelforcontroller"]( f10_arg0 ), "factions.playerFactionTeamEnum" ) --[[ @ 0]]
	if f10_local0 then
		return f10_local0
	else
		return CoD.TeamUtility.GetTeamIDForController( f10_arg0 )
	end
end
 --[[ @ 0]]
CoD.TeamUtility.GetTeamID = function ( f11_arg0 )
	return CoD.TeamUtility.GetPredictedTeamID( f11_arg0 )
end
 --[[ @ 0]]
CoD.TeamUtility.GetDefaultTeamName = function ( f12_arg0 )
	if IsMultiplayer() then
		if f12_arg0 == Enum[@"team_t"][@"team_allies"] then
			return @"mpui/allies"
		elseif f12_arg0 == Enum[@"team_t"][@"team_axis"] then
			return @"mpui/axis"
		end
	elseif IsCampaign() then
		if f12_arg0 == Enum[@"team_t"][@"team_allies"] then
			return @"hash_42B048C5B8811227"
		elseif f12_arg0 == Enum[@"team_t"][@"team_axis"] then
			return @"hash_38223F843A2C25CC"
		end
	end
	return CoD.TeamUtility.TeamName[f12_arg0] or @"hash_0"
end
 --[[ @ 0]]
CoD.TeamUtility.TeamDevStringToEnumTable = {
	allies = Enum[@"team_t"][@"team_allies"],
	axis = Enum[@"team_t"][@"team_axis"]
} --[[ @ 0]]
CoD.TeamUtility.TeamDevStringToEnum = function ( f13_arg0 )
	local f13_local0 = CoD.TeamUtility.TeamDevStringToEnumTable[f13_arg0] --[[ @ 0]]
	if not f13_local0 then
		f13_local0 = Enum[@"team_t"][@"team_bad"] --[[ @ 0]]
	end
	return f13_local0
end
 --[[ @ 0]]
CoD.TeamUtility.GetDefaultTeamShortName = function ( f14_arg0 )
	if IsMultiplayer() then
		if f14_arg0 == Enum[@"team_t"][@"team_allies"] then
			return @"hash_EDCCEFE94375E18"
		elseif f14_arg0 == Enum[@"team_t"][@"team_axis"] then
			return @"hash_5FFCFA8A74D3E077"
		end
	elseif IsCampaign() then
		if f14_arg0 == Enum[@"team_t"][@"team_allies"] then
			return @"hash_64A981F51DACF0A"
		elseif f14_arg0 == Enum[@"team_t"][@"team_axis"] then
			return @"hash_30258ADD73950461"
		end
	end
	return CoD.TeamUtility.TeamName[f14_arg0] or @"hash_0"
end
 --[[ @ 0]]
CoD.TeamUtility.GetDefaultTeamFactionDescription = function ( f15_arg0 )
	if IsMultiplayer() then
		if f15_arg0 == Enum[@"team_t"][@"team_allies"] then
			return @"hash_4F61ADAF3651241F"
		elseif f15_arg0 == Enum[@"team_t"][@"team_axis"] then
			return @"hash_2A8BCD7E744625EA"
		end
	elseif IsCampaign() then
		if f15_arg0 == Enum[@"team_t"][@"team_allies"] then
			return @"hash_5712156435B5EBF9"
		elseif f15_arg0 == Enum[@"team_t"][@"team_axis"] then
			return @"hash_42FED463C97B0434"
		end
	end
	return CoD.TeamUtility.TeamName[f15_arg0] or @"hash_0"
end
 --[[ @ 0]]
CoD.TeamUtility.GetDefaultTeamFactionColor = function ( f16_arg0 )
	local f16_local0 = ColorSet.CodCaster --[[ @ 0]]
	if f16_arg0 == Enum[@"team_t"][@"team_allies"] then
		f16_local0 = ColorSet.FriendlyBlue --[[ @ 0]]
	elseif f16_arg0 == Enum[@"team_t"][@"team_axis"] then
		f16_local0 = ColorSet.EnemyOrange --[[ @ 0]]
	elseif f16_arg0 == Enum[@"team_t"][@"team_three"] then
		f16_local0 = ColorSet.WarzoneCustomTeam3 --[[ @ 0]]
	elseif f16_arg0 == Enum[@"team_t"][@"team_four"] then
		f16_local0 = ColorSet.WarzoneCustomTeam4 --[[ @ 0]]
	elseif f16_arg0 == Enum[@"team_t"][@"team_five"] then
		f16_local0 = ColorSet.WarzoneCustomTeam5 --[[ @ 0]]
	elseif f16_arg0 == Enum[@"team_t"][@"team_six"] then
		f16_local0 = ColorSet.WarzoneCustomTeam6 --[[ @ 0]]
	elseif f16_arg0 == Enum[@"team_t"][@"team_spectator"] then
		f16_local0 = ColorSet.CodCaster --[[ @ 0]]
	end
	return string.format( "%d %d %d", f16_local0.r * 255, f16_local0.g * 255, f16_local0.b * 255 )
end
 --[[ @ 0]]
CoD.TeamUtility.GetDefaultTeamFactionIcon = function ( f17_arg0 )
	if IsCampaign() then
		if f17_arg0 == Enum[@"team_t"][@"team_allies"] then
			return "cp_icon_faction_allies"
		elseif f17_arg0 == Enum[@"team_t"][@"team_axis"] then
			return "cp_icon_faction_axis"
		end
	elseif f17_arg0 == Enum[@"team_t"][@"team_allies"] then
		return "faction_allies"
	elseif f17_arg0 == Enum[@"team_t"][@"team_axis"] then
		return "faction_axis"
	end
	return ""
end
 --[[ @ 0]]
CoD.TeamUtility.GetSimplifiedTeamFactionIcon = function ( f18_arg0 )
	if IsCampaign() then
		if f18_arg0 == Enum[@"team_t"][@"team_allies"] then
			return "uie_t8_cp_faction_allies"
		elseif f18_arg0 == Enum[@"team_t"][@"team_axis"] then
			return "uie_t8_cp_faction_axis"
		end
	end
	return ""
end
 --[[ @ 0]]
CoD.TeamUtility.GetTeamName = function ( f19_arg0 )
	local f19_local0 = Engine[@"getprimarycontroller"]() --[[ @ 0]]
	if CoD.IsShoutcaster( f19_local0 ) or CoD.CodCasterUtility.AreCodCasterAssigned( f19_local0 ) then
		if CoD.TeamUtility.ShouldUseCustomTeamIdentity( f19_local0 ) then
			return CoD.GetCodCasterTeamName( f19_local0, f19_arg0 )
		else
			return Engine[@"hash_4F9F1239CFD921FE"]( CoD.TeamUtility.GetDefaultTeamName( f19_arg0 ) )
		end
	else
		return Engine[@"hash_4F9F1239CFD921FE"]( CoD.TeamUtility.GetDefaultTeamName( f19_arg0 ) )
	end
end
 --[[ @ 0]]
CoD.TeamUtility.GetTeamFactionColor = function ( f20_arg0 )
	local f20_local0 = Engine[@"getprimarycontroller"]() --[[ @ 0]]
	if CoD.CodCasterUtility.IsCodCasterOrAssigned( f20_local0 ) then
		if CoD.TeamUtility.ShouldUseCustomTeamIdentity( f20_local0 ) then
			return CoD.GetCodCasterTeamColor( f20_local0, f20_arg0 )
		end
		local f20_local1 = ColorSet.CodCaster --[[ @ 0]]
		if f20_arg0 == Enum[@"team_t"][@"team_allies"] then
			f20_local1 = ColorSet.FriendlyBlue --[[ @ 0]]
		elseif f20_arg0 == Enum[@"team_t"][@"team_spectator"] then
			f20_local1 = ColorSet.CodCaster --[[ @ 0]]
		else
			f20_local1 = ColorSet.EnemyOrange --[[ @ 0]]
		end
		return string.format( "%d %d %d", f20_local1.r * 255, f20_local1.g * 255, f20_local1.b * 255 )
	end
	local f20_local1 = nil --[[ @ 0]]
	if IsInGame() then
		f20_local1 = CoDShared.IsGametypeTeamBased() --[[ @ 0]]
	elseif IsWarzone() then
		f20_local1 = not IsMaxTeamPlayersEqualTo( 1 ) --[[ @ 0]]
	else
		f20_local1 = IsTeamBasedGameMode( f20_local0 ) --[[ @ 0]]
	end
	if not f20_local1 then
		local f20_local2 = ColorSet.CodCaster --[[ @ 0]]
		return string.format( "%d %d %d", f20_local2.r * 255, f20_local2.g * 255, f20_local2.b * 255 )
	end
	return CoD.TeamUtility.GetDefaultTeamFactionColor( f20_arg0 )
end
 --[[ @ 0]]
CoD.TeamUtility.GetTeamFactionIcon = function ( f21_arg0 )
	local f21_local0 = Engine[@"getprimarycontroller"]() --[[ @ 0]]
	if CoD.CodCasterUtility.IsCodCasterOrAssigned( f21_local0 ) then
		if CoD.TeamUtility.ShouldUseBlankTeamIdentity( f21_local0 ) then
			return "blacktransparent"
		elseif CoD.TeamUtility.ShouldUseCustomTeamIdentity( f21_local0 ) then
			return CoD.CodCasterUtility.GetCodCasterFactionIcon( f21_local0, f21_arg0 )
		else
			return CoD.CodCasterUtility.GetDefaultCodCasterFactionIcon( f21_arg0 )
		end
	else
		return CoD.TeamUtility.GetDefaultTeamFactionIcon( f21_arg0 )
	end
end
 --[[ @ 0]]
CoD.TeamUtility.GetTeamNameCaps = function ( f22_arg0 )
	if Engine[@"gamemodeismode"]( Enum[@"egamemodes"][@"mode_game_league"] ) then
		if f22_arg0 == Enum[@"team_t"][@"team_allies"] and Dvar[@"g_customteamname_allies"]:get() ~= "" then
			return Engine[@"toupper"]( Dvar[@"g_customteamname_allies"]:get() )
		elseif f22_arg0 == Enum[@"team_t"][@"team_axis"] and Dvar[@"g_customteamname_axis"]:get() ~= "" then
			return Engine[@"toupper"]( Dvar[@"g_customteamname_axis"]:get() )
		end
	end
	if CoD.CodCasterUtility.IsCodCasterOrAssigned( Engine[@"getprimarycontroller"]() ) then
		local f22_local0 = CoD.TeamUtility.GetTeamName( f22_arg0 ) --[[ @ 0]]
		if f22_local0 ~= "" then
			return Engine[@"toupper"]( f22_local0 )
		else
			return f22_local0
		end
	end
	local f22_local0 = CoD.TeamUtility.GetTeamName( f22_arg0 ) --[[ @ 0]]
	if f22_arg0 == Enum[@"team_t"][@"team_spectator"] then
		f22_local0 = Engine[@"hash_4F9F1239CFD921FE"]( @"hash_379A28BE744E24FB" ) --[[ @ 0]]
	end
	return ToUpper( f22_local0 )
end
 --[[ @ 0]]
CoD.TeamUtility.GetColorSetNameFriendlyColor = function ( f23_arg0, f23_arg1 )
	local f23_local0 = "White" --[[ @ 0]]
	if CoD.IsShoutcaster( f23_arg0 ) then
		if f23_arg1 == Enum[@"team_t"][@"team_allies"] then
			f23_local0 = "CodCasterFactionAllies" --[[ @ 0]]
		elseif f23_arg1 == Enum[@"team_t"][@"team_axis"] then
			f23_local0 = "CodCasterFactionAxis" --[[ @ 0]]
		end
	else
		f23_local0 = CoD.ColorUtility.GetColorBlindColorNameForPlayer( f23_arg0, "FriendlyBlue" ) --[[ @ 0]]
	end
	return f23_local0
end
 --[[ @ 0]]
CoD.TeamUtility.GetColorSetFriendlyColor = function ( f24_arg0, f24_arg1 )
	return ColorSet[CoD.TeamUtility.GetColorSetNameFriendlyColor( f24_arg0, f24_arg1 )]
end
 --[[ @ 0]]
CoD.TeamUtility.GetColorSetNameEnemyColor = function ( f25_arg0, f25_arg1 )
	local f25_local0 = "White" --[[ @ 0]]
	if CoD.IsShoutcaster( f25_arg0 ) then
		if f25_arg1 == Enum[@"team_t"][@"team_allies"] then
			f25_local0 = "CodCasterFactionAllies" --[[ @ 0]]
		elseif f25_arg1 == Enum[@"team_t"][@"team_axis"] then
			f25_local0 = "CodCasterFactionAxis" --[[ @ 0]]
		end
	else
		f25_local0 = CoD.ColorUtility.GetColorBlindColorNameForPlayer( f25_arg0, "EnemyOrange" ) --[[ @ 0]]
	end
	return f25_local0
end
 --[[ @ 0]]
CoD.TeamUtility.GetColorSetEnemyColor = function ( f26_arg0, f26_arg1 )
	return ColorSet[CoD.TeamUtility.GetColorSetNameEnemyColor( f26_arg0, f26_arg1 )]
end
 --[[ @ 0]]
CoD.TeamUtility.GetColorSetFriendlyOrShoutCasterColor = function ( f27_arg0 )
	local f27_local0 = nil --[[ @ 0]]
	if CoD.IsShoutcaster( f27_arg0 ) then
		f27_local0 = ColorSet.CodCasterFactionAllies --[[ @ 0]]
	else
		f27_local0 = CoD.ColorUtility.GetColorBlindColorForPlayer( f27_arg0, "FriendlyBlue" ) --[[ @ 0]]
	end
	return f27_local0
end
 --[[ @ 0]]
CoD.TeamUtility.GetColorSetEnemyOrShoutCasterColor = function ( f28_arg0 )
	local f28_local0 = nil --[[ @ 0]]
	if CoD.IsShoutcaster( f28_arg0 ) then
		f28_local0 = ColorSet.CodCasterFactionAxis --[[ @ 0]]
	else
		f28_local0 = CoD.ColorUtility.GetColorBlindColorForPlayer( f28_arg0, "EnemyOrange" ) --[[ @ 0]]
	end
	return f28_local0
end
 --[[ @ 0]]
CoD.TeamUtility.IsTeamLivesLow = function ( f29_arg0 )
	local f29_local0 = 0 --[[ @ 0]]
	local f29_local1 = 0 --[[ @ 0]]
	if f29_arg0 == Enum[@"team_t"][@"team_allies"] then
		local f29_local2 = Engine[@"getglobalmodel"]() --[[ @ 0]]
		f29_local0 = f29_local2.hudItems.team1.livesCount:get() --[[ @ 0]]
		f29_local2 = Engine[@"getglobalmodel"]() --[[ @ 0]]
		f29_local1 = f29_local2.scoreboard.team1.count:get() --[[ @ 0]]
	elseif f29_arg0 == Enum[@"team_t"][@"team_axis"] then
		local f29_local2 = Engine[@"getglobalmodel"]() --[[ @ 0]]
		f29_local0 = f29_local2.hudItems.team2.livesCount:get() --[[ @ 0]]
		f29_local2 = Engine[@"getglobalmodel"]() --[[ @ 0]]
		f29_local1 = f29_local2.scoreboard.team2.count:get() --[[ @ 0]]
	end
	return f29_local0 <= f29_local1
end
 --[[ @ 0]]
CoD.TeamUtility.GetTeamCount = function ( f30_arg0 )
	local f30_local0 = 0 --[[ @ 0]]
	if f30_arg0 == Enum[@"team_t"][@"team_allies"] then
		local f30_local1 = Engine[@"getglobalmodel"]() --[[ @ 0]]
		f30_local0 = f30_local1.scoreboard.team1.count:get() --[[ @ 0]]
	elseif f30_arg0 == Enum[@"team_t"][@"team_axis"] then
		local f30_local1 = Engine[@"getglobalmodel"]() --[[ @ 0]]
		f30_local0 = f30_local1.scoreboard.team2.count:get() --[[ @ 0]]
	end
	return f30_local0
end
 --[[ @ 0]]
CoD.TeamUtility.IsMyTeamLivesLow = function ( f31_arg0 )
	return CoD.TeamUtility.IsTeamLivesLow( CoD.TeamUtility.GetTeamID( f31_arg0 ) )
end
 --[[ @ 0]]
CoD.TeamUtility.IsEnemyTeamLivesLow = function ( f32_arg0 )
	local f32_local0 = CoD.TeamUtility.GetTeamID( f32_arg0 ) --[[ @ 0]]
	local f32_local1 = Enum[@"team_t"][@"team_allies"] --[[ @ 0]]
	if f32_local1 == f32_local0 then
		f32_local1 = Enum[@"team_t"][@"team_axis"] --[[ @ 0]]
	end
	return CoD.TeamUtility.IsTeamLivesLow( f32_local1 )
end
 --[[ @ 0]]
CoD.TeamUtility.IsLastLivesDataLivesLow = function ( f33_arg0, f33_arg1 )
	local f33_local0 = f33_arg0:getModel( f33_arg1, "numPlayersAlive" ) --[[ @ 0]]
	local f33_local1 = f33_local0 and f33_local0:get() --[[ @ 0]]
	local f33_local2 = f33_arg0:getModel( f33_arg1, "teamSize" ) --[[ @ 0]]
	local f33_local3 = f33_local2 and f33_local2:get() --[[ @ 0]]
	if f33_local1 and f33_local3 then
		return f33_local1 <= f33_local3
	else
		return false
	end
end
 --[[ @ 0]]
CoD.TeamUtility.IsClientSameTeam = function ( f34_arg0, f34_arg1 )
	local f34_local0 = CoD.SafeGetModelValue( f34_arg0:getModel(), "clientNum" ) --[[ @ 0]]
	if not f34_local0 or f34_local0 < 0 or f34_local0 >= LuaDefine.MAX_CLIENTS then
		return false
	else
		return Engine[@"getteamid"]( f34_arg1, f34_local0 ) == CoD.TeamUtility.GetTeamID( f34_arg1 )
	end
end
 --[[ @ 0]]
CoD.TeamUtility.GetTeamNameForTeamEnum = function ( f35_arg0, f35_arg1 )
	return CoD.TeamUtility.GetTeamName( f35_arg1 )
end
 --[[ @ 0]]
CoD.TeamUtility.GetTeamNameForPlayer = function ( f36_arg0, f36_arg1 )
	return CoD.TeamUtility.GetDefaultTeamName( CoD.TeamUtility.GetTeamID( f36_arg0 ) )
end
 --[[ @ 0]]
CoD.TeamUtility.GetTeamImageForTeamEnum = function ( f37_arg0, f37_arg1 )
	return CoD.TeamUtility.GetTeamFactionIcon( f37_arg1 )
end
 --[[ @ 0]]
CoD.TeamUtility.GetTeamImageForPlayer = function ( f38_arg0, f38_arg1 )
	return CoD.TeamUtility.GetDefaultTeamFactionIcon( CoD.TeamUtility.GetTeamID( f38_arg0 ) )
end
 --[[ @ 0]]
DataSources.InGamePlayerListRowData = DataSourceHelpers.ListSetup( "InGamePlayerListRowData", function ( f39_arg0 )
	local f39_local0 = function ( f40_arg0, f40_arg1, f40_arg2, f40_arg3, f40_arg4, f40_arg5 )
		return {
			models = {
				teamBGColor = f40_arg1,
				rankText = f40_arg2,
				rankIcon = f40_arg3,
				playerNameText = f40_arg4,
				playerNameColor = f40_arg5
			},
			properties = {}
		}
	end
	 --[[ @ 0]]
	local f39_local1 = function ( f41_arg0, f41_arg1, f41_arg2 )
		local f41_local0 = CoD.TeamUtility.GetTeamNameCaps( f41_arg2 ) --[[ @ 0]]
		local f41_local1 = Engine[@"getingameplayerlist"]( f41_arg0, f41_arg2 ) --[[ @ 0]]
		if not f41_local1 or #f41_local1 == 0 then
			return 
		end
		local f41_local2 = 0.75 --[[ @ 0]]
		local f41_local3 = {
			r = 1,
			g = 1,
			b = 1
		} --[[ @ 0]]
		local f41_local4 = CoD.TeamUtility.GetTeamColor( f41_arg0, f41_arg2 ) --[[ @ 0]]
		local f41_local5 = {} --[[ @ 0]]
		for f41_local9 in string.gmatch( f41_local4, "%S+" ) --[[ @ 0]] do
			table.insert( f41_local5, f41_local9 ) --[[ @ 0]]
		end
		f41_local6 = {
			r = tonumber( f41_local5[1] ) / 255,
			g = tonumber( f41_local5[2] ) / 255,
			b = tonumber( f41_local5[3] ) / 255
		} --[[ @ 0]]
		for f41_local16, f41_local17 in pairs( f41_local1 ) --[[ @ 0]] do
			local f41_local10 = CoD.ColorUtility.ConvertColor( f41_local6.r, f41_local6.g, f41_local6.b ) --[[ @ 0]]
			if f41_local16 % 2 == 1 then
				f41_local10 = CoD.ColorUtility.ConvertColor( f41_local6.r * f41_local2, f41_local6.g * f41_local2, f41_local6.b * f41_local2 ) --[[ @ 0]]
			end
			local f41_local11 = f41_local17.rank --[[ @ 0]]
			local f41_local12 = Engine[@"getrankicon"]( f41_local11, 0 ) --[[ @ 0]]
			local f41_local13 = f41_local17.playerName --[[ @ 0]]
			local f41_local14 = CoD.ColorUtility.ConvertColor( f41_local3.r, f41_local3.g, f41_local3.b ) --[[ @ 0]]
			local f41_local15 = {
				r = 0.9,
				g = 0.69,
				b = 0.2
			} --[[ @ 0]]
			if f41_local17.isSelf then
				f41_local14 = CoD.ColorUtility.ConvertColor( f41_local15.r, f41_local15.g, f41_local15.b ) --[[ @ 0]]
			end
			table.insert( f41_arg1, f39_local0( f41_arg0, f41_local10, f41_local11, f41_local12, f41_local13, f41_local14 ) ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	local f39_local2 = {} --[[ @ 0]]
	local f39_local3 = Engine[@"getgametypesetting"]( @"teamcount" ) --[[ @ 0]]
	for f39_local4 = 1 --[[ @ 0]], f39_local3, 1 do
		f39_local1( f39_arg0, f39_local2, f39_local4 ) --[[ @ 0]]
	end
	return f39_local2
end, true ) --[[ @ 0]]
DataSources.ChangeTeamOptions = DataSourceHelpers.ListSetup( "ChangeTeamOptions", function ( f42_arg0 )
	local f42_local0 = function ( f43_arg0, f43_arg1, f43_arg2, f43_arg3, f43_arg4, f43_arg5 )
		local f43_local0 = 0 --[[ @ 0]]
		local f43_local1 = f43_arg1 --[[ @ 0]]
		if f43_arg4 ~= "" then
			f43_local0 = 1 --[[ @ 0]]
			f43_local1 = @"hash_0" --[[ @ 0]]
		end
		return {
			models = {
				displayText = f43_local1,
				name = f43_arg1,
				desc = f43_arg3,
				disabled = f43_arg5,
				icon = f43_arg4,
				iconVisible = f43_local0,
				action = function ( f44_arg0, f44_arg1, f44_arg2, f44_arg3, f44_arg4 )
					HUD_IngameMenuClosed() --[[ @ 0]]
					SendMenuResponse( f44_arg0, "ChangeTeam", f43_arg2, f44_arg2 ) --[[ @ 0]]
					if f44_arg4.previousMenuId then
						LUI.savedMenuStates[f44_arg4.previousMenuId] = nil --[[ @ 0]]
					end
					local f44_local0 = Engine[@"createmodel"]( Engine[@"getmodelforcontroller"]( f44_arg2 ), "factions.isCoDCaster" ) --[[ @ 0]]
					if f43_arg2 == "spectator" then
						Engine[@"lockinput"]( f44_arg2, false ) --[[ @ 0]]
						Engine[@"setuiactive"]( f44_arg2, false ) --[[ @ 0]]
						Engine[@"setmodelvalue"]( f44_local0, true ) --[[ @ 0]]
					else
						Engine[@"setmodelvalue"]( f44_local0, false ) --[[ @ 0]]
					end
					Engine[@"setmodelvalue"]( Engine[@"createmodel"]( Engine[@"createmodel"]( Engine[@"getmodelforcontroller"]( f44_arg2 ), "CodCaster" ), "showCodCasterScoreboard" ), false ) --[[ @ 0]]
					SetControllerModelValue( f44_arg2, "forceScoreboard", 0 ) --[[ @ 0]]
					if IsIntDvarNonZero( "mp_prototype" ) then
						StartMenuGoBack( f44_arg4, f44_arg2 ) --[[ @ 0]]
					end
				end
				,
				param = {}
			},
			properties = {}
		}
	end
	 --[[ @ 0]]
	local f42_local1 = function ( f45_arg0, f45_arg1 )
		local f45_local0 = CoD.PlayerRoleUtility.GetHeroList( Engine[@"currentsessionmode"]() ) --[[ @ 0]]
		local f45_local1 = Engine[@"getgametypesettings"]() --[[ @ 0]]
		local f45_local2 = Engine[@"hash_4FCDE749B09C3D6"]( f45_arg0 ) --[[ @ 0]]
		local f45_local3 = 1 --[[ @ 0]]
		for f45_local7, f45_local8 in pairs( f45_local2 ) --[[ @ 0]] do
			if f45_local8 == f45_arg1 and Engine[@"getcharacterindexforclientnum"]( f45_arg0, f45_local7 ) == 0 then
				f45_local3 = f45_local3 + 1 --[[ @ 0]]
			end
		end
		f45_local4 = 0 --[[ @ 0]]
		for f45_local8, f45_local9 in ipairs( f45_local0 ) --[[ @ 0]] do
			if Engine[@"getcharactercountforteam"]( f45_arg0, f45_local9.bodyIndex, f45_arg1 ) < f45_local1.maxUniqueRolesPerTeam[f45_local9.bodyIndex]:get() then
				f45_local4 = f45_local4 + 1 --[[ @ 0]]
			end
		end
		return f45_local3 <= f45_local4
	end
	 --[[ @ 0]]
	local f42_local2 = {} --[[ @ 0]]
	local f42_local3 = Engine[@"team"]( f42_arg0, "index" ) --[[ @ 0]]
	local f42_local4 --[[ @ 0]]
	if Engine[@"getgametypesetting"]( @"spectatetype" ) >= 1 and Engine[@"getgametypesetting"]( @"allowspectating" ) == 1 then
		f42_local4 = not Engine[@"issplitscreen"]() --[[ @ 0]]
	else
		f42_local4 = false --[[ @ 0]]
	end
	if f42_local4 then
		if CoD.DirectorUtility.IsOfflineOnlyDemo() then
			f42_local4 = IsLobbyHost() --[[ @ 0]]
		else
			f42_local4 = true --[[ @ 0]]
		end
	end
	if f42_local4 then
		f42_local4 = CoD.CodCasterUtility.IsCodCasterEnabled() --[[ @ 0]]
	end
	if f42_local4 then
		f42_local4 = Engine[@"getdvarint"]( "allow_shoutcaster_team_switch" ) == 1 --[[ @ 0]]
	end
	local f42_local5 = function ( f46_arg0 )
		local f46_local0 = CoD.TeamUtility.GetTeamNameCaps( f46_arg0 ) --[[ @ 0]]
		if f46_local0 == "" then
			f46_local0 = Engine[@"toupper"]( CoD.TeamUtility.GetDefaultTeamName( f46_arg0 ) ) --[[ @ 0]]
		end
		return f46_local0
	end
	 --[[ @ 0]]
	if CoDShared.IsGametypeTeamBased() == true and CoD.IsTeamChangeAllowed( f42_arg0 ) then
		if f42_local3 ~= Enum[@"team_t"][@"team_allies"] then
			if f42_local1( f42_arg0, Enum[@"team_t"][@"team_allies"] ) then
				table.insert( f42_local2, f42_local0( f42_arg0, @"mpui/allies", "allies", @"hash_617E759991A40568", CoD.TeamUtility.GetTeamFactionIcon( Enum[@"team_t"][@"team_allies"] ), false ) ) --[[ @ 0]]
			else
				table.insert( f42_local2, f42_local0( f42_arg0, @"mpui/allies", "allies", @"hash_6A3EE0239CF6265D", CoD.TeamUtility.GetTeamFactionIcon( Enum[@"team_t"][@"team_allies"] ), true ) ) --[[ @ 0]]
			end
		end
		if f42_local3 ~= Enum[@"team_t"][@"team_axis"] then
			if f42_local1( f42_arg0, Enum[@"team_t"][@"team_axis"] ) then
				table.insert( f42_local2, f42_local0( f42_arg0, @"mpui/axis", "axis", @"hash_46838CD03F01BF13", CoD.TeamUtility.GetTeamFactionIcon( Enum[@"team_t"][@"team_axis"] ), false ) ) --[[ @ 0]]
			else
				table.insert( f42_local2, f42_local0( f42_arg0, @"mpui/axis", "axis", @"hash_6A3EE0239CF6265D", CoD.TeamUtility.GetTeamFactionIcon( Enum[@"team_t"][@"team_axis"] ), true ) ) --[[ @ 0]]
			end
		end
	end
	if CoDShared.IsGametypeTeamBased() == true or f42_local3 == Enum[@"team_t"][@"team_spectator"] then
		table.insert( f42_local2, f42_local0( f42_arg0, @"hash_2AD8F376215AE5D7", "autoassign", @"hash_38BFAF5D14337A27", "" ) ) --[[ @ 0]]
	end
	if f42_local3 ~= Enum[@"team_t"][@"team_spectator"] and f42_local4 == true then
		table.insert( f42_local2, f42_local0( f42_arg0, @"hash_379A28BE744E24FB", "spectator", @"hash_6E6B92255B28A2BF", "", false ) ) --[[ @ 0]]
	end
	if true == Dvar[@"ui_autocontrolledplayer"]:get() then
		table.insert( f42_local2, f42_local0( f42_arg0, "MENU_AUTO_CONTROL_PLAYER", "autocontrol", "MENU_AUTO_CONTROL_PLAYER_DESC", "", false ) ) --[[ @ 0]]
	end
	return f42_local2
end, true ) --[[ @ 0]]
DataSources.Factions = {
	prepared = false,
	preparedForController = {},
	factionSubscription = {},
	prepare = function ( f47_arg0, f47_arg1, f47_arg2 )
		if not DataSources.Factions.preparedForController then
			DataSources.Factions.preparedForController = {} --[[ @ 0]]
		end
		if not DataSources.Factions.factionSubscription[f47_arg0] then
			DataSources.Factions.factionSubscription[f47_arg0] = LUI.UIElement.new() --[[ @ 0]]
		end
		local f47_local0 = Engine[@"getmodelforcontroller"]( f47_arg0 ) --[[ @ 0]]
		local f47_local1 = Engine[@"createmodel"]( f47_local0, "factions" ) --[[ @ 0]]
		local f47_local2 = Engine[@"createmodel"]( f47_local1, "isCoDCaster" ) --[[ @ 0]]
		local f47_local3 = Engine[@"createmodel"]( f47_local1, "playerFactionTeamEnum" ) --[[ @ 0]]
		local f47_local4 = Engine[@"createmodel"]( f47_local1, "playerFactionName" ) --[[ @ 0]]
		local f47_local5 = Engine[@"createmodel"]( f47_local1, "playerFactionDisplayName" ) --[[ @ 0]]
		local f47_local6 = Engine[@"createmodel"]( f47_local1, "playerFactionIcon" ) --[[ @ 0]]
		local f47_local7 = Engine[@"createmodel"]( f47_local1, "playerFactionColor" ) --[[ @ 0]]
		local f47_local8 = Engine[@"createmodel"]( f47_local1, "playerFactionFlagColor" ) --[[ @ 0]]
		local f47_local9 = Engine[@"createmodel"]( f47_local1, "playerFactionModel" ) --[[ @ 0]]
		local f47_local10 = f47_local1:create( "actualTeam" ) --[[ @ 0]]
		local f47_local11 = Engine[@"createmodel"]( f47_local1, "enemyFactionTeamEnum" ) --[[ @ 0]]
		local f47_local12 = Engine[@"createmodel"]( f47_local1, "enemyFactionName" ) --[[ @ 0]]
		local f47_local13 = Engine[@"createmodel"]( f47_local1, "enemyFactionDisplayName" ) --[[ @ 0]]
		local f47_local14 = Engine[@"createmodel"]( f47_local1, "enemyFactionIcon" ) --[[ @ 0]]
		local f47_local15 = Engine[@"createmodel"]( f47_local1, "enemyFactionColor" ) --[[ @ 0]]
		local f47_local16 = Engine[@"createmodel"]( f47_local1, "enemyFactionFlagColor" ) --[[ @ 0]]
		local f47_local17 = Engine[@"createmodel"]( f47_local1, "enemyFactionModel" ) --[[ @ 0]]
		DataSources.Factions.factionSubscription[f47_arg0]:unsubscribeFromAllModels() --[[ @ 0]]
		DataSources.Factions.preparedForController[f47_arg0] = true --[[ @ 0]]
		DataSources.Factions.factionSubscription[f47_arg0]:subscribeToModel( f47_local3, function ( model )
			local f48_local0 = Engine[@"getmodelvalue"]( model ) --[[ @ 0]]
			if f48_local0 then
				if CoD.IsShoutcaster( f47_arg0 ) then
					f48_local0 = Enum[@"team_t"][@"team_allies"] --[[ @ 0]]
					local f48_local1 = f47_local0:create( "factionList" ) --[[ @ 0]]
					f48_local1 = f48_local1:create( "faction" .. f48_local0 ) --[[ @ 0]]
					f48_local1:create( "factionScore" ) --[[ @ 0]]
					f47_local9:set( f48_local1 ) --[[ @ 0]]
					f47_local6:set( CoD.TeamUtility.GetTeamFactionIcon( f48_local0 ) ) --[[ @ 0]]
				else
					local f48_local1 = CoD.TeamUtility.GetTeamIDForController( f47_arg0 ) --[[ @ 0]]
					local f48_local2 = f47_local0:create( "factionList" ) --[[ @ 0]]
					f48_local2 = f48_local2:create( "faction" .. f48_local1 ) --[[ @ 0]]
					f48_local2:create( "factionScore" ) --[[ @ 0]]
					f47_local9:set( f48_local2 ) --[[ @ 0]]
					f47_local6:set( CoD.TeamUtility.GetTeamFactionIcon( f48_local1 ) ) --[[ @ 0]]
				end
				Engine[@"setmodelvalue"]( f47_local5, CoD.TeamUtility.GetTeamNameCaps( f48_local0 ) ) --[[ @ 0]]
				Engine[@"setmodelvalue"]( f47_local7, CoD.TeamUtility.GetTeamFactionColor( f48_local0 ) ) --[[ @ 0]]
				local f48_local1 = CoD.ColorUtility.GetColorBlindColorForPlayer( f47_arg0, "FriendlyBlue" ) --[[ @ 0]]
				local f48_local2 = string.format( "%d %d %d", f48_local1.r * 255, f48_local1.g * 255, f48_local1.b * 255 ) --[[ @ 0]]
				if CoD.IsShoutcaster( f47_arg0 ) then
					local f48_local3 = CoD.TeamUtility.GetTeamFactionColor( Enum[@"team_t"][@"team_allies"] ) --[[ @ 0]]
					if not CoDShared.IsGametypeTeamBased() then
						f48_local3 = f48_local2 --[[ @ 0]]
					end
					CoD.ColorUtility.UpdateColorSet( "CodCasterFriendly", f48_local3 ) --[[ @ 0]]
					CoD.ColorUtility.UpdateColorSet( "CodCasterFriendlyEffect", f48_local3 ) --[[ @ 0]]
					Engine[@"setupcompasscolors"]( f47_arg0 ) --[[ @ 0]]
					f48_local2 = f48_local3 --[[ @ 0]]
				end
				Engine[@"setmodelvalue"]( f47_local8, f48_local2 ) --[[ @ 0]]
			end
		end ) --[[ @ 0]]
		DataSources.Factions.factionSubscription[f47_arg0]:subscribeToModel( f47_local11, function ( model )
			local f49_local0 = Engine[@"getmodelvalue"]( model ) --[[ @ 0]]
			if f49_local0 then
				if CoD.IsShoutcaster( f47_arg0 ) then
					f49_local0 = Enum[@"team_t"][@"team_axis"] --[[ @ 0]]
					local f49_local1 = f47_local0:create( "factionList" ) --[[ @ 0]]
					f49_local1 = f49_local1:create( "faction" .. f49_local0 ) --[[ @ 0]]
					f49_local1:create( "factionScore" ) --[[ @ 0]]
					f47_local17:set( f49_local1 ) --[[ @ 0]]
					Engine[@"setmodelvalue"]( f47_local14, CoD.TeamUtility.GetTeamFactionIcon( f49_local0 ) ) --[[ @ 0]]
				else
					local f49_local1 = CoD.TeamUtility.GetOppositeTeamAxisAllies( CoD.TeamUtility.GetTeamIDForController( f47_arg0 ) ) --[[ @ 0]]
					local f49_local2 = f47_local0:create( "factionList" ) --[[ @ 0]]
					f49_local2 = f49_local2:create( "faction" .. f49_local1 ) --[[ @ 0]]
					f49_local2:create( "factionScore" ) --[[ @ 0]]
					f47_local17:set( f49_local2 ) --[[ @ 0]]
					Engine[@"setmodelvalue"]( f47_local14, CoD.TeamUtility.GetTeamFactionIcon( f49_local1 ) ) --[[ @ 0]]
				end
				Engine[@"setmodelvalue"]( f47_local13, CoD.TeamUtility.GetTeamNameCaps( f49_local0 ) ) --[[ @ 0]]
				Engine[@"setmodelvalue"]( f47_local15, CoD.TeamUtility.GetTeamFactionColor( f49_local0 ) ) --[[ @ 0]]
				local f49_local1 = CoD.ColorUtility.GetColorBlindColorForPlayer( f47_arg0, "EnemyOrange" ) --[[ @ 0]]
				local f49_local2 = string.format( "%d %d %d", f49_local1.r * 255, f49_local1.g * 255, f49_local1.b * 255 ) --[[ @ 0]]
				if CoD.IsShoutcaster( f47_arg0 ) then
					local f49_local3 = CoD.TeamUtility.GetTeamFactionColor( Enum[@"team_t"][@"team_axis"] ) --[[ @ 0]]
					if not CoDShared.IsGametypeTeamBased() then
						f49_local3 = f49_local2 --[[ @ 0]]
					end
					CoD.ColorUtility.UpdateColorSet( "CodCasterEnemy", f49_local3 ) --[[ @ 0]]
					CoD.ColorUtility.UpdateColorSet( "CodCasterEnemyEffect", f49_local3 ) --[[ @ 0]]
					Engine[@"setupcompasscolors"]( f47_arg0 ) --[[ @ 0]]
					f49_local2 = f49_local3 --[[ @ 0]]
				end
				Engine[@"setmodelvalue"]( f47_local16, f49_local2 ) --[[ @ 0]]
			end
		end ) --[[ @ 0]]
		local f47_local18 = {
			name = CoD.TeamUtility.GetTeamNameCaps( Enum[@"team_t"][@"team_allies"] ),
			icon = CoD.TeamUtility.GetTeamFactionIcon( Enum[@"team_t"][@"team_allies"] ),
			color = CoD.TeamUtility.GetTeamFactionColor( Enum[@"team_t"][@"team_allies"] )
		} --[[ @ 0]]
		local f47_local19 = {
			name = CoD.TeamUtility.GetTeamNameCaps( Enum[@"team_t"][@"team_axis"] ),
			icon = CoD.TeamUtility.GetTeamFactionIcon( Enum[@"team_t"][@"team_axis"] ),
			color = CoD.TeamUtility.GetTeamFactionColor( Enum[@"team_t"][@"team_axis"] )
		} --[[ @ 0]]
		if CoD.IsShoutcaster( f47_arg0 ) and CoD.ShoutcasterProfileVarBool( f47_arg0, "shoutcaster_ds_flip_scorepanel" ) then
			f47_local19 = {
				name = CoD.TeamUtility.GetTeamNameCaps( Enum[@"team_t"][@"team_allies"] ),
				icon = CoD.TeamUtility.GetTeamFactionIcon( Enum[@"team_t"][@"team_allies"] ),
				color = CoD.TeamUtility.GetTeamFactionColor( Enum[@"team_t"][@"team_allies"] )
			} --[[ @ 0]]
			f47_local18 = {
				name = CoD.TeamUtility.GetTeamNameCaps( Enum[@"team_t"][@"team_axis"] ),
				icon = CoD.TeamUtility.GetTeamFactionIcon( Enum[@"team_t"][@"team_axis"] ),
				color = CoD.TeamUtility.GetTeamFactionColor( Enum[@"team_t"][@"team_axis"] )
			} --[[ @ 0]]
		end
		Engine[@"setmodelvalue"]( Engine[@"createmodel"]( f47_local1, "axisFactionDisplayName" ), f47_local19.name ) --[[ @ 0]]
		Engine[@"setmodelvalue"]( Engine[@"createmodel"]( f47_local1, "axisFactionIcon" ), f47_local19.icon ) --[[ @ 0]]
		Engine[@"setmodelvalue"]( Engine[@"createmodel"]( f47_local1, "axisFactionColor" ), f47_local19.color ) --[[ @ 0]]
		Engine[@"setmodelvalue"]( Engine[@"createmodel"]( f47_local1, "alliesFactionDisplayName" ), f47_local18.name ) --[[ @ 0]]
		Engine[@"setmodelvalue"]( Engine[@"createmodel"]( f47_local1, "alliesFactionIcon" ), f47_local18.icon ) --[[ @ 0]]
		Engine[@"setmodelvalue"]( Engine[@"createmodel"]( f47_local1, "alliesFactionColor" ), f47_local18.color ) --[[ @ 0]]
		if CoD.IsShoutcaster( f47_arg0 ) then
			CoD.ColorUtility.UpdateColorSet( "CodCasterFactionAllies", f47_local18.color ) --[[ @ 0]]
			CoD.ColorUtility.UpdateColorSet( "CodCasterFactionAxis", f47_local19.color ) --[[ @ 0]]
			Engine[@"setupcompasscolors"]( f47_arg0 ) --[[ @ 0]]
		end
		local f47_local20 = Engine[@"getmodel"]( f47_local0, "team" ) --[[ @ 0]]
		if f47_local20 then
			DataSources.Factions.factionSubscription[f47_arg0]:subscribeToModel( f47_local20, function ( model )
				DataSources.Factions.preparedForController[f47_arg0] = false --[[ @ 0]]
				DataSources.Factions.prepare( f47_arg0 ) --[[ @ 0]]
			end, false ) --[[ @ 0]]
		end
		local f47_local21 = Engine[@"getmodel"]( f47_local0, "CodCaster.profileSettingsUpdated" ) --[[ @ 0]]
		if f47_local21 then
			DataSources.Factions.factionSubscription[f47_arg0]:subscribeToModel( f47_local21, function ( model )
				DataSources.Factions.preparedForController[f47_arg0] = false --[[ @ 0]]
				DataSources.Factions.prepare( f47_arg0 ) --[[ @ 0]]
			end, false ) --[[ @ 0]]
		end
		local f47_local22 = Engine[@"getmodel"]( f47_local0, "profile.colorblindMode" ) --[[ @ 0]]
		if f47_local22 then
			DataSources.Factions.factionSubscription[f47_arg0]:subscribeToModel( f47_local22, function ( model )
				DataSources.Factions.preparedForController[f47_arg0] = false --[[ @ 0]]
				DataSources.Factions.prepare( f47_arg0 ) --[[ @ 0]]
			end, false ) --[[ @ 0]]
		end
	end,
	getModel = function ( f53_arg0 )
		if not DataSources.Factions.preparedForController or not DataSources.Factions.preparedForController[f53_arg0] then
			DataSources.Factions.prepare( f53_arg0 ) --[[ @ 0]]
		end
		if not f53_arg0 then
			f53_arg0 = Engine[@"getprimarycontroller"]() --[[ @ 0]]
		end
		return Engine[@"createmodel"]( Engine[@"getmodelforcontroller"]( f53_arg0 ), "factions" )
	end
} --[[ @ 0]]
DataSources.FactionsGlobal = {
	prepare = function ( f54_arg0, f54_arg1, f54_arg2 )
		local f54_local0 = Engine[@"createmodel"]( Engine[@"getglobalmodel"](), "factions" ) --[[ @ 0]]
		local f54_local1 = Engine[@"getmodelforcontroller"]( f54_arg0 ) --[[ @ 0]]
		if not DataSources.FactionsGlobal.factionSubscription then
			DataSources.FactionsGlobal.factionSubscription = LUI.UIElement.new() --[[ @ 0]]
		end
		DataSources.FactionsGlobal.factionSubscription:unsubscribeFromAllModels() --[[ @ 0]]
		local f54_local2 = {
			name = CoD.TeamUtility.GetTeamNameCaps( Enum[@"team_t"][@"team_allies"] ),
			icon = CoD.TeamUtility.GetTeamFactionIcon( Enum[@"team_t"][@"team_allies"] ),
			color = CoD.TeamUtility.GetTeamFactionColor( Enum[@"team_t"][@"team_allies"] )
		} --[[ @ 0]]
		local f54_local3 = {
			name = CoD.TeamUtility.GetTeamNameCaps( Enum[@"team_t"][@"team_axis"] ),
			icon = CoD.TeamUtility.GetTeamFactionIcon( Enum[@"team_t"][@"team_axis"] ),
			color = CoD.TeamUtility.GetTeamFactionColor( Enum[@"team_t"][@"team_axis"] )
		} --[[ @ 0]]
		if CoD.IsShoutcaster( f54_arg0 ) and CoD.ShoutcasterProfileVarBool( f54_arg0, "shoutcaster_ds_flip_scorepanel" ) then
			f54_local3 = {
				name = CoD.TeamUtility.GetTeamNameCaps( Enum[@"team_t"][@"team_allies"] ),
				icon = CoD.TeamUtility.GetTeamFactionIcon( Enum[@"team_t"][@"team_allies"] ),
				color = CoD.TeamUtility.GetTeamFactionColor( Enum[@"team_t"][@"team_allies"] )
			} --[[ @ 0]]
			f54_local2 = {
				name = CoD.TeamUtility.GetTeamNameCaps( Enum[@"team_t"][@"team_axis"] ),
				icon = CoD.TeamUtility.GetTeamFactionIcon( Enum[@"team_t"][@"team_axis"] ),
				color = CoD.TeamUtility.GetTeamFactionColor( Enum[@"team_t"][@"team_axis"] )
			} --[[ @ 0]]
		end
		Engine[@"setmodelvalue"]( Engine[@"createmodel"]( f54_local0, "axisFactionDisplayName" ), f54_local3.name ) --[[ @ 0]]
		Engine[@"setmodelvalue"]( Engine[@"createmodel"]( f54_local0, "axisFactionIcon" ), f54_local3.icon ) --[[ @ 0]]
		Engine[@"setmodelvalue"]( Engine[@"createmodel"]( f54_local0, "axisFactionColor" ), f54_local3.color ) --[[ @ 0]]
		Engine[@"setmodelvalue"]( Engine[@"createmodel"]( f54_local0, "alliesFactionDisplayName" ), f54_local2.name ) --[[ @ 0]]
		Engine[@"setmodelvalue"]( Engine[@"createmodel"]( f54_local0, "alliesFactionIcon" ), f54_local2.icon ) --[[ @ 0]]
		Engine[@"setmodelvalue"]( Engine[@"createmodel"]( f54_local0, "alliesFactionColor" ), f54_local2.color ) --[[ @ 0]]
		local f54_local4 = Engine[@"getmodel"]( f54_local1, "team" ) --[[ @ 0]]
		if f54_local4 then
			DataSources.FactionsGlobal.factionSubscription:subscribeToModel( f54_local4, function ( model )
				DataSources.FactionsGlobal.prepared = false --[[ @ 0]]
				DataSources.FactionsGlobal.prepare( f54_arg0 ) --[[ @ 0]]
			end, false ) --[[ @ 0]]
		end
		local f54_local5 = Engine[@"getmodel"]( f54_local1, "CodCaster.profileSettingsUpdated" ) --[[ @ 0]]
		if f54_local5 then
			DataSources.FactionsGlobal.factionSubscription:subscribeToModel( f54_local5, function ( model )
				DataSources.FactionsGlobal.prepared = false --[[ @ 0]]
				DataSources.FactionsGlobal.prepare( f54_arg0 ) --[[ @ 0]]
			end, false ) --[[ @ 0]]
		end
		local f54_local6 = Engine[@"getmodel"]( f54_local1, "profile.colorblindMode" ) --[[ @ 0]]
		if f54_local6 then
			DataSources.FactionsGlobal.factionSubscription:subscribeToModel( f54_local6, function ( model )
				DataSources.FactionsGlobal.prepared = false --[[ @ 0]]
				DataSources.FactionsGlobal.prepare( f54_arg0 ) --[[ @ 0]]
			end, false ) --[[ @ 0]]
		end
		DataSources.FactionsGlobal.prepared = true --[[ @ 0]]
	end,
	getModel = function ( f58_arg0 )
		if not DataSources.FactionsGlobal.prepared then
			DataSources.FactionsGlobal.prepare( f58_arg0 ) --[[ @ 0]]
		end
		return Engine[@"createmodel"]( Engine[@"getglobalmodel"](), "factions" )
	end
} --[[ @ 0]]
DataSources.FactionList = {
	prepare = function ( f59_arg0, f59_arg1, f59_arg2 )
		f59_arg1.factions = {} --[[ @ 0]]
		local f59_local0 = Engine[@"createmodel"]( Engine[@"getmodelforcontroller"]( f59_arg0 ), "factionList" ) --[[ @ 0]]
		for f59_local4, f59_local5 in ipairs( Engine[@"getteampositions"]( f59_arg0 ) ) --[[ @ 0]] do
			local f59_local6 = Engine[@"getfactionforteam"]( f59_local4 ) --[[ @ 0]]
			f59_arg1.factions[f59_local4] = Engine[@"createmodel"]( f59_local0, "faction" .. f59_local4 ) --[[ @ 0]]
			local f59_local7 = 0 --[[ @ 0]]
			local f59_local8 = "faction_" .. f59_local6 --[[ @ 0]]
			Engine[@"setmodelvalue"]( Engine[@"createmodel"]( f59_arg1.factions[f59_local4], "factionName" ), f59_local6 ) --[[ @ 0]]
			Engine[@"setmodelvalue"]( Engine[@"createmodel"]( f59_arg1.factions[f59_local4], "factionIcon" ), f59_local8 ) --[[ @ 0]]
			Engine[@"setmodelvalue"]( Engine[@"createmodel"]( f59_arg1.factions[f59_local4], "factionScore" ), f59_local7 ) --[[ @ 0]]
		end
	end,
	getCount = function ( f60_arg0 )
		return #f60_arg0.factions
	end,
	getItem = function ( f61_arg0, f61_arg1, f61_arg2 )
		return f61_arg1.factions[f61_arg2]
	end
} --[[ @ 0]]
