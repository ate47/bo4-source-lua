-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:36
CoD.WaypointUtility = {} --[[ @ 0]]
CoD.WaypointUtility.IsObjectiveRequirementLabelHidden = function ( f1_arg0, f1_arg1 )
	if f1_arg0.objective[@"hash_1E9970BB9777A47E"] == 1 then
		return false
	end
	local f1_local0 = Engine[@"GetModel"]( Engine[@"GetModelForController"]( f1_arg1 ), "interactivePrompt.activeObjectiveID" ) --[[ @ 0]]
	if f1_local0 then
		f1_local0 = Engine[@"GetModelValue"]( f1_local0 ) --[[ @ 0]]
	end
	if f1_local0 and f1_arg0.objId == f1_local0 then
		return false
	elseif f1_arg0.objId then
		local f1_local1 = Engine[@"GetTeamID"]( f1_arg1, Engine[@"GetPredictedClientNum"]( f1_arg1 ) ) --[[ @ 0]]
		if CoD.HUDUtility.IsPlayerUsingWaypoint( f1_arg0, f1_arg1, Engine[@"ObjectiveIsTeamUsing"]( f1_arg1, f1_arg0.objId, f1_local1 ), Engine[@"ObjectiveIsAnyOtherTeamUsing"]( f1_arg1, f1_arg0.objId, f1_local1 ) ) then
			return false
		end
	end
	return true
end
 --[[ @ 0]]
CoD.WaypointUtility.ShouldShowWaypointFrame = function ( f2_arg0, f2_arg1 )
	if f2_arg1.objective[@"hash_C89FB9D9D1E0F33"] == 1 or f2_arg1.objective[@"hash_2E614D1FE7F77CDF"] == 1 then
		return false
	end
	local f2_local0 = Engine[@"GetTeamID"]( f2_arg0, Engine[@"GetPredictedClientNum"]( f2_arg0 ) ) --[[ @ 0]]
	local f2_local1 = Engine[@"ObjectiveIsTeamUsing"]( f2_arg0, f2_arg1.objId, f2_local0 ) --[[ @ 0]]
	local f2_local2 = Engine[@"ObjectiveIsAnyOtherTeamUsing"]( f2_arg0, f2_arg1.objId, f2_local0 ) --[[ @ 0]]
	if not CoD.HUDUtility.IsPlayerUsingWaypoint( f2_arg1, f2_arg0, f2_local1, f2_local2 ) and (not f2_local1 or not f2_local2) and f2_arg1.objective[@"hash_761856A88046E4AE"] ~= 1 and (not f2_local1 or f2_arg1.objective[@"hash_5F9D561CC4D4EBEB"] ~= 1) then
		return false
	end
	local f2_local3 = CoD.SafeGetModelValue( f2_arg1:getModel(), "progress" ) --[[ @ 0]]
	local f2_local4 --[[ @ 0]]
	if not f2_local3 or f2_local3 <= 0 then
		local f2_local5 = f2_local1 --[[ @ 0]]
		f2_local4 = f2_local2 --[[ @ 0]]
	else
		f2_local4 = f2_local5 and true --[[ @ 0]]
	end
	return f2_local4
end
 --[[ @ 0]]
CoD.WaypointUtility.IsFriendlyUsing = function ( f3_arg0, f3_arg1 )
	local f3_local0 = Engine[@"GetTeamID"]( f3_arg1, Engine[@"GetPredictedClientNum"]( f3_arg1 ) ) --[[ @ 0]]
	local f3_local1 = Engine[@"ObjectiveIsTeamUsing"] --[[ @ 0]]
	local f3_local2 = f3_arg1 --[[ @ 0]]
	local f3_local3 = f3_arg0:getModel() --[[ @ 0]]
	return f3_local1( f3_local2, f3_local3.objId:get(), f3_local0 )
end
 --[[ @ 0]]
CoD.WaypointUtility.ShouldShowWaypointIcon = function ( f4_arg0, f4_arg1 )
	if not CoD.ModelUtility.IsSelfModelValueNonEmptyString( f4_arg1, f4_arg0, "icon" ) then
		return false
	elseif f4_arg1.objective[@"hash_A8F7A3EDE89CCD7"] and CoD.CodCasterUtility.CodCasterIsInAerialCam( f4_arg0 ) then
		return true
	else
		local f4_local0 --[[ @ 0]]
		if f4_arg1.objective[@"hash_193D42E7917D43BD"] == 1 then
			f4_local0 = not f4_arg1.snappedToCenter --[[ @ 0]]
		else
			f4_local0 = true --[[ @ 0]]
		end
	end
	return f4_local0
end
 --[[ @ 0]]
CoD.WaypointUtility.ShouldShowWaypointAsContestedHelper = function ( f5_arg0, f5_arg1, f5_arg2, f5_arg3 )
	if GetObjectiveXHashProperty( @"hash_303F152058C30382", f5_arg1 ) == 1 then
		return false
	elseif f5_arg3 and CoD.CodCasterUtility.CodCasterIsInAerialCam( f5_arg0 ) then
		return false
	else
		local f5_local0 = Engine[@"GetTeamID"]( f5_arg0, Engine[@"GetPredictedClientNum"]( f5_arg0 ) ) --[[ @ 0]]
		return Engine[@"ObjectiveIsTeamUsing"]( f5_arg0, f5_arg2, f5_local0 ) and Engine[@"ObjectiveIsAnyOtherTeamUsing"]( f5_arg0, f5_arg2, f5_local0 )
	end
end
 --[[ @ 0]]
CoD.WaypointUtility.ShouldShowWaypointAsContested = function ( f6_arg0, f6_arg1 )
	return CoD.WaypointUtility.ShouldShowWaypointAsContestedHelper( f6_arg0, f6_arg1.objective.id, f6_arg1.objId, f6_arg1.objective[@"hash_A8F7A3EDE89CCD7"] )
end
 --[[ @ 0]]
CoD.WaypointUtility.ShouldShowWaypointAsProtect = function ( f7_arg0, f7_arg1 )
	local f7_local0 = Engine[@"GetObjectiveGamemodeFlags"]( f7_arg0, f7_arg1.objId ) or 0 --[[ @ 0]]
	if f7_local0 > 0 then
		local f7_local1 --[[ @ 0]]
		if Engine[@"GetObjectiveTeam"]( f7_arg0, f7_arg1.objId ) ~= Engine[@"GetTeamID"]( f7_arg0, Engine[@"GetPredictedClientNum"]( f7_arg0 ) ) or f7_arg1.objective[@"hash_2D24079C4886368B" .. f7_local0] ~= 1 then
			f7_local1 = false --[[ @ 0]]
		else
			f7_local1 = true --[[ @ 0]]
		end
		return f7_local1
	else
		return false
	end
end
 --[[ @ 0]]
CoD.WaypointUtility.ShouldShowWaypointAsPulsing = function ( f8_arg0, f8_arg1 )
	local f8_local0 = f8_arg1:getParent() --[[ @ 0]]
	if not f8_local0 or not f8_local0.objective or f8_local0.objective[@"pulse"] ~= 1 or not f8_local0.objId then
		return false
	elseif f8_local0.objective[@"hash_FE5A27608B78BD9"] ~= 1 then
		local f8_local1 = Engine[@"GetObjectiveProgress"]( f8_arg0, f8_local0.objId ) --[[ @ 0]]
		if f8_local1 == 0 then
			return false
		elseif f8_local0.objective[@"hash_7EFFC4867F3CA257"] == 1 then
			local f8_local2 = f8_local0.objective[@"hash_74BD46E9CEA006"] --[[ @ 0]]
			for f8_local3 = 1 --[[ @ 0]], f8_local2 - 1, 1 do
				if f8_local1 == f8_local3 / f8_local2 then
					return false
				end
			end
		end
	end
	return Engine[@"ObjectiveGetTeamUsingCount"]( f8_arg0, f8_local0.objId ) == 1
end
 --[[ @ 0]]
CoD.WaypointUtility.ShouldShowWaypointFlatProgressBar = function ( f9_arg0, f9_arg1 )
	if f9_arg1.objective[@"hash_A8F7A3EDE89CCD7"] and CoD.CodCasterUtility.CodCasterIsInAerialCam( f9_arg0 ) then
		return false
	else
		local f9_local0 --[[ @ 0]]
		if f9_arg1.objective[@"hash_5089F12D51F50A71"] == 1 then
			f9_local0 = f9_arg1.snappedToCenter --[[ @ 0]]
		else
			f9_local0 = false --[[ @ 0]]
		end
	end
	return f9_local0
end
 --[[ @ 0]]
CoD.WaypointUtility.ShouldShowProgressOnIcon = function ( f10_arg0, f10_arg1 )
	local f10_local0 = f10_arg1:getModel() --[[ @ 0]]
	local f10_local1 = f10_local0 --[[ @ 0]]
	local f10_local2 = f10_local0.objId --[[ @ 0]]
	if f10_local2 then
		f10_local2 = f10_local1 and f10_local0.objId:get() --[[ @ 0]]
	end
	if f10_local2 then
		local f10_local3 = CoD.HUDUtility.GetCachedObjective( Engine[@"GetObjectiveName"]( f10_arg0, f10_local2 ) ) --[[ @ 0]]
		local f10_local4 = f10_local3 --[[ @ 0]]
		local f10_local5 --[[ @ 0]]
		if f10_local3[@"hash_C89FB9D9D1E0F33"] ~= 0 or f10_local3[@"hash_2E614D1FE7F77CDF"] ~= 1 then
			f10_local5 = false --[[ @ 0]]
		else
			f10_local5 = f10_local4 and true --[[ @ 0]]
		end
		return f10_local5
	else
		return false
	end
end
 --[[ @ 0]]
CoD.WaypointUtility.ShouldShowRadialTimerOnIcon = function ( f11_arg0, f11_arg1 )
	local f11_local0 = f11_arg1:getModel() --[[ @ 0]]
	local f11_local1 = f11_local0 --[[ @ 0]]
	local f11_local2 = f11_local0.objId --[[ @ 0]]
	if f11_local2 then
		f11_local2 = f11_local1 and f11_local0.objId:get() --[[ @ 0]]
	end
	if f11_local2 then
		local f11_local3 = CoD.HUDUtility.GetCachedObjective( Engine[@"GetObjectiveName"]( f11_arg0, f11_local2 ) ) --[[ @ 0]]
		if f11_local3 and f11_local3[@"hash_7758ECC3699C3FDC"] == 1 then
			if f11_local3[@"hash_546D19887AADFEB7"] == 1 then
				return Engine[@"IsVisibilityBitSet"]( f11_arg0, Enum[@"UIVisibilityBit"][@"hash_4ABEA56F8DE7F1E2"] )
			else
				return Engine[@"IsVisibilityBitSet"]( f11_arg0, Enum[@"UIVisibilityBit"][@"hash_4ABEA46F8DE7F02F"] )
			end
		end
	end
	return false
end
 --[[ @ 0]]
CoD.WaypointUtility.ShouldShowPulsingProgressOnIcon = function ( f12_arg0, f12_arg1 )
	local f12_local0 = f12_arg1:getModel() --[[ @ 0]]
	local f12_local1 = f12_local0 --[[ @ 0]]
	local f12_local2 = f12_local0.objId --[[ @ 0]]
	if f12_local2 then
		f12_local2 = f12_local1 and f12_local0.objId:get() --[[ @ 0]]
	end
	if f12_local2 then
		local f12_local3 = CoD.HUDUtility.GetCachedObjective( Engine[@"GetObjectiveName"]( f12_arg0, f12_local2 ) ) --[[ @ 0]]
		if f12_local3 and f12_local3[@"hash_C89FB9D9D1E0F33"] == 0 and f12_local3[@"hash_2E614D1FE7F77CDF"] == 1 and f12_local3[@"hash_254042508436EDA"] == 1 then
			local f12_local4 = f12_local0.progress and f12_local0.progress:get() or 0 --[[ @ 0]]
			if f12_local4 > 0 then
				return f12_local4 < f12_local3[@"hash_4D21C49136F5621B"]
			end
		end
	end
	return false
end
 --[[ @ 0]]
CoD.WaypointUtility.IsWeaponPickupActive = function ( f13_arg0, f13_arg1 )
	local f13_local0 = DataSources.HUDItems.getModel( f13_arg0 ) --[[ @ 0]]
	local f13_local1 = f13_local0.showPickupHint:get() --[[ @ 0]]
	local f13_local2 = f13_local0.inventory.open:get() --[[ @ 0]]
	local f13_local3 = Engine[@"GetModel"]( Engine[@"GetModelForController"]( f13_arg0 ), "interactivePrompt.activeObjectiveID" ) --[[ @ 0]]
	f13_local3 = f13_local3:get() --[[ @ 0]]
	local f13_local4 = f13_local1 --[[ @ 0]]
	local f13_local5 --[[ @ 0]]
	if f13_local2 or f13_local3 ~= -1 then
		f13_local5 = false --[[ @ 0]]
	else
		f13_local5 = f13_local4 and true --[[ @ 0]]
	end
	return f13_local5
end
 --[[ @ 0]]
CoD.WaypointUtility.IsWeaponPickupInRange = function ( f14_arg0, f14_arg1 )
	local f14_local0 = DataSources.HUDItems.getModel( f14_arg0 ) --[[ @ 0]]
	local f14_local1 = f14_local0.showPickupHint:get() --[[ @ 0]]
	local f14_local2 = f14_local0.inventory.open:get() --[[ @ 0]]
	local f14_local3 = Engine[@"GetModel"]( Engine[@"GetModelForController"]( f14_arg0 ), "interactivePrompt.activeObjectiveID" ) --[[ @ 0]]
	f14_local3 = f14_local3:get() --[[ @ 0]]
	local f14_local4 = f14_arg1:getModel( f14_arg0, "isOffscreen" ) --[[ @ 0]]
	local f14_local5 --[[ @ 0]]
	if f14_local2 or (f14_local4 and f14_local4:get()) or f14_local1 and f14_local3 == -1 then
		f14_local5 = false --[[ @ 0]]
	else
		f14_local5 = true --[[ @ 0]]
	end
	return f14_local5
end
 --[[ @ 0]]
CoD.WaypointUtility.SetIconProgressMeter = function ( f15_arg0, f15_arg1, f15_arg2 )
	local f15_local0 = 1 - f15_arg2 --[[ @ 0]]
	if f15_arg1 then
		return f15_local0, 1, 0, 0
	else
		return 0, f15_local0, 0, 0
	end
end
 --[[ @ 0]]
CoD.WaypointUtility.SetProgressMeterSegmentationIfNeeded = function ( f16_arg0, f16_arg1, f16_arg2 )
	local f16_local0 = CoD.HUDUtility.GetCachedObjective( Engine[@"GetObjectiveName"]( f16_arg0, f16_arg2 ) ) --[[ @ 0]]
	if f16_local0 and f16_local0[@"hash_7EFFC4867F3CA257"] == 1 then
		return f16_local0[@"hash_74BD46E9CEA006"], f16_arg1, 1, 0
	else
		return 0, 0, 0, 0
	end
end
 --[[ @ 0]]
CoD.WaypointUtility.SetHealthMeterSegmentationIfNeeded = function ( f17_arg0, f17_arg1, f17_arg2 )
	local f17_local0 = CoD.HUDUtility.GetCachedObjective( Engine[@"GetObjectiveName"]( f17_arg0, f17_arg2 ) ) --[[ @ 0]]
	if (f17_local0[@"hash_7437D7B32AC35178"] or 0) > 0 then
		return f17_local0[@"hash_7437D7B32AC35178"], f17_arg1, 1, 0
	else
		return 0, 0, 0, 0
	end
end
 --[[ @ 0]]
CoD.WaypointUtility.ShouldBypassFiltersForMinimap = function ( f18_arg0, f18_arg1 )
	if f18_arg0.objective[@"hash_4AAC8CB98C8D8A34"] ~= nil and f18_arg0.objective[@"hash_4AAC8CB98C8D8A34"] ~= "" and not Engine[@"hash_54B80DF7F86F7002"]( f18_arg1, f18_arg0.objective[@"hash_4AAC8CB98C8D8A34"] ) then
		return f18_arg0.objective[@"hash_555883052FE10427"] == 1
	else
		return false
	end
end
 --[[ @ 0]]
CoD.WaypointUtility.ConvertToColorInternal = function ( f19_arg0, f19_arg1 )
	local f19_local0 = ColorSet[f19_arg0] --[[ @ 0]]
	if not f19_local0 then
		f19_local0 = ColorSet[f19_arg1] --[[ @ 0]]
	end
	return f19_local0.r, f19_local0.g, f19_local0.b
end
 --[[ @ 0]]
CoD.WaypointUtility.ConvertToBaseColor = function ( f20_arg0 )
	return CoD.ColorUtility.ConvertColorFromTable( ColorSet[f20_arg0] )
end
 --[[ @ 0]]
CoD.WaypointUtility.ConvertToMutedColor = function ( f21_arg0 )
	return CoD.WaypointUtility.ConvertToColorInternal( f21_arg0 .. "_Muted", f21_arg0 )
end
 --[[ @ 0]]
CoD.WaypointUtility.ConvertToBrightColor = function ( f22_arg0 )
	return CoD.WaypointUtility.ConvertToColorInternal( f22_arg0 .. "_Bright", f22_arg0 )
end
 --[[ @ 0]]
CoD.WaypointUtility.ShouldHideWaypointAndMinimapIcon = function ( f23_arg0, f23_arg1 )
	if f23_arg0.objective then
		if not IsObjectiveVisibleForMyTeam( f23_arg1, f23_arg0.objId ) then
			return true
		end
		local f23_local0 = Engine[@"GetPredictedClientNum"]( f23_arg1 ) --[[ @ 0]]
		if f23_arg0.objective[@"hash_2D4D7F1719DFA984"] == 1 then
			return f23_local0 == Engine[@"GetObjectiveEntity"]( f23_arg1, f23_arg0.objId )
		elseif f23_arg0.objective[@"hash_303587AE58E18B34"] == 1 then
			return Engine[@"GetPredictedClientNum"]( f23_arg1 ) == Engine[@"hash_4C43D7E71B1CA70B"]( f23_arg1, f23_arg0.objId )
		elseif f23_arg0.objective[@"hash_4AAC8CB98C8D8A34"] ~= nil and f23_arg0.objective[@"hash_4AAC8CB98C8D8A34"] ~= "" and not Engine[@"hash_54B80DF7F86F7002"]( f23_arg1, f23_arg0.objective[@"hash_4AAC8CB98C8D8A34"] ) then
			return true
		elseif f23_arg0.objective[@"hash_567F5E53382B3161"] == 1 and Engine[@"IsVisibilityBitSet"]( f23_arg1, Enum[@"UIVisibilityBit"][@"hash_66FFF566DCC09BBD"] ) then
			return true
		elseif CoD.isCampaign and not Engine[@"IsVisibilityBitSet"]( f23_arg1, Enum[@"UIVisibilityBit"][@"hash_7ADC477DDE486DD7"] ) then
			return true
		end
	end
	if CoD.SafeGetModelValue( f23_arg0:getModel(), "state" ) == Enum[@"objectiveState_t"][@"hash_259FDE7D12BCC045"] then
		return true
	end
	return false
end
 --[[ @ 0]]
CoD.WaypointUtility.ShouldHideMinimapIcon = function ( f24_arg0, f24_arg1 )
	if CoD.WaypointUtility.ShouldHideWaypointAndMinimapIcon( f24_arg0, f24_arg1 ) and not CoD.WaypointUtility.ShouldBypassFiltersForMinimap( f24_arg0, f24_arg1 ) then
		return true
	elseif f24_arg0.objective[@"hash_38113640727D2288"] == 1 then
		return Engine[@"GetObjectiveTeam"]( f24_arg1, f24_arg0.objId ) ~= Engine[@"GetTeamID"]( f24_arg1, Engine[@"GetPredictedClientNum"]( f24_arg1 ) )
	else
		return false
	end
end
 --[[ @ 0]]
CoD.WaypointUtility.ShouldHideWaypoint = function ( f25_arg0, f25_arg1 )
	if CoD.WaypointUtility.ShouldHideWaypointAndMinimapIcon( f25_arg0, f25_arg1 ) then
		return true
	elseif f25_arg0.objective then
		local f25_local0 = Engine[@"GetPredictedClientNum"]( f25_arg1 ) --[[ @ 0]]
		local f25_local1 --[[ @ 0]]
		if f25_arg0.objective[@"hash_3B78F04652A4E122"] ~= 1 and f25_arg0.objective[@"hash_429FF873E6357558"] ~= 1 and f25_arg0.objective[@"hash_2D6D209C87C35EEA"] ~= 1 then
			f25_local1 = false --[[ @ 0]]
		else
			f25_local1 = true --[[ @ 0]]
		end
		if f25_local1 and Engine[@"ObjectiveIsPlayerUsing"]( f25_arg1, f25_arg0.objId, f25_local0 ) then
			local f25_local2 = Engine[@"GetTeamID"]( f25_arg1, f25_local0 ) --[[ @ 0]]
			local f25_local3 = Engine[@"ObjectiveIsTeamUsing"]( f25_arg1, f25_arg0.objId, f25_local2 ) and Engine[@"ObjectiveIsAnyOtherTeamUsing"]( f25_arg1, f25_arg0.objId, f25_local2 ) --[[ @ 0]]
			if f25_local3 and f25_arg0.objective[@"hash_2D6D209C87C35EEA"] == 1 then
				return true
			elseif CoD.HUDUtility.IsWaypointOwnedByMyTeam( f25_arg0, f25_arg1 ) then
				if f25_arg0.objective[@"hash_3B78F04652A4E122"] == 1 and not f25_local3 then
					return true
				end
			elseif f25_arg0.objective[@"hash_429FF873E6357558"] == 1 and not f25_local3 then
				return true
			end
		end
		if f25_arg0.objective[@"hash_5BBC97D237FCBEA6"] == 1 then
			local f25_local2 = f25_arg0:getModel( f25_arg1, "isOffscreen" ) --[[ @ 0]]
			if f25_local2 and f25_local2:get() and CoD.WaypointUtility.IsObjectiveRequirementLabelHidden( f25_arg0, f25_arg1 ) then
				return true
			end
		end
		local f25_local2 = Engine[@"GetModelForController"]( f25_arg1 ) --[[ @ 0]]
		if Engine[@"IsVisibilityBitSet"]( f25_arg1, Enum[@"UIVisibilityBit"][@"hash_59333FC97F7870"] ) or f25_local2.hudItems.hacked:get() > 0 then
			return f25_arg0.objective[@"hash_761B460B26283391"] == 1
		elseif Engine[@"IsVisibilityBitSet"]( f25_arg1, Enum[@"UIVisibilityBit"][@"hash_1C630DB86D235A5"] ) then
			return f25_arg0.objective[@"hash_729120244683F1CF"] == 1
		end
	end
	return false
end
 --[[ @ 0]]
CoD.WaypointUtility.SetupWaypointCloseShowMessageListener = function ( f26_arg0, f26_arg1, f26_arg2 )
	local f26_local0 = Engine[@"GetModelForController"]( f26_arg2 ) --[[ @ 0]]
	f26_arg0:subscribeToModel( f26_local0:create( "onWaypointClose" ), function ( model )
		f26_arg1:setText( model:get() or "" ) --[[ @ 0]]
		f26_arg0:playClip( "ShowMessage" ) --[[ @ 0]]
	end ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.WaypointUtility.ShowMessageOnCloseIfNeeded = function ( f28_arg0, f28_arg1 )
	local f28_local0 = f28_arg1.objective --[[ @ 0]]
	local f28_local1 = f28_local0[@"hash_3853F0A0E60B64D"] --[[ @ 0]]
	if f28_local1 then
		local f28_local2 = true --[[ @ 0]]
		if f28_local0[@"hash_304E9883B54B9B7C"] and f28_local0[@"hash_304E9883B54B9B7C"] ~= "Any" then
			f28_local2 = f28_arg1.currentState == f28_local0[@"hash_304E9883B54B9B7C"] --[[ @ 0]]
		end
		if f28_local2 then
			local f28_local3 = Engine[@"GetModelForController"]( f28_arg0 ) --[[ @ 0]]
			f28_local3 = f28_local3:create( "onWaypointClose" ) --[[ @ 0]]
			if not f28_local3:set( Engine[@"Localize"]( f28_local1 ) ) then
				f28_local3:forceNotifySubscriptions() --[[ @ 0]]
			end
		end
	end
end
 --[[ @ 0]]
CoD.WaypointUtility.GetCarryIcon = function ( f29_arg0, f29_arg1 )
	if not f29_arg1 or f29_arg1 == -1 then
		return "blacktransparent"
	else
		local f29_local0 = CoD.HUDUtility.GetCachedObjective( Engine[@"GetObjectiveName"]( f29_arg0, f29_arg1 ) ) --[[ @ 0]]
		if f29_local0 and f29_local0[@"hash_4366BE37A5AE3011"] and f29_local0[@"hash_4366BE37A5AE3011"] ~= "" then
			return f29_local0[@"hash_4366BE37A5AE3011"]
		else
			return "blacktransparent"
		end
	end
end
 --[[ @ 0]]
CoD.WaypointUtility.ShouldShowCarryIconBadge = function ( f30_arg0 )
	local f30_local0 = DataSources.HUDItems.getModel( f30_arg0 ) --[[ @ 0]]
	f30_local0 = f30_local0.heldObjectiveId:get() --[[ @ 0]]
	if f30_local0 == -1 then
		return false
	else
		local f30_local1 = CoD.HUDUtility.GetCachedObjective( Engine[@"GetObjectiveName"]( f30_arg0, f30_local0 ) ) --[[ @ 0]]
		return f30_local1 and f30_local1[@"hash_590212E3CB9EE11"] == 1
	end
end
 --[[ @ 0]]
CoD.WaypointUtility.GetContributedCaptureText = function ( f31_arg0, f31_arg1 )
	local f31_local0 = CoD.HUDUtility.GetCachedObjective( f31_arg1 ) --[[ @ 0]]
	if f31_local0 then
		return f31_local0[@"hash_12F6637F605A66D2"] or @"hash_0"
	else
		return @"hash_0"
	end
end
 --[[ @ 0]]
