-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:51
CoD.DirectorUtility = {} --[[ @ 0]]
require( "ui/utility/overlayutility" ) --[[ @ 0]]
CoD.DirectorUtility.Filters = nil --[[ @ 0]]
CoD.DirectorUtility.FocusFeaturedFiltered = Engine[@"currentsessionmode"]() == Enum[@"emodes"][@"mode_invalid"] --[[ @ 0]]
DataSources.DirectorFilters = DataSourceHelpers.ListSetup( "DirectorFilters", function ( f1_arg0, f1_arg1 )
	local f1_local0 = {} --[[ @ 0]]
	local f1_local1 --[[ @ 0]]
	if not CoD.DirectorUtility.FocusFeaturedFiltered then
		f1_local1 = Engine[@"getplaylistid"]() --[[ @ 0]]
	else
		f1_local1 = false --[[ @ 0]]
	end
	for f1_local11, f1_local12 in ipairs( CoD.DirectorUtility.Filters ) --[[ @ 0]] do
		local f1_local8 = false --[[ @ 0]]
		if f1_local12.id ~= "Featured" then
			for f1_local9, f1_local10 in ipairs( f1_local12.cards ) --[[ @ 0]] do
				if f1_local10.playlist == f1_local1 then
					f1_local8 = true --[[ @ 0]]
					break
				end
			end
		end
		table.insert( f1_local0, {
			models = {
				name = f1_local12.name,
				dataSource = "DirectorCardList_" .. f1_local12.id,
				icon = f1_local12.icon,
				mainMode = f1_local12.mainMode,
				available = f1_local12.available
			},
			properties = {
				tabId = f1_local12.id,
				action = f1_local12.action,
				param = f1_local12,
				selectIndex = f1_local8
			}
		} ) --[[ @ 0]]
	end
	if IsArenaMode() then
		table.insert( f1_local0, {
			models = {
				name = @"hash_13E0FB9041E49A72",
				dataSource = "DirectorCardList_ArenaNews",
				available = true
			},
			properties = {
				tabId = "news"
			}
		} ) --[[ @ 0]]
	end
	return f1_local0
end, true ) --[[ @ 0]]
CoD.DirectorUtility.MultiplePlaylistTabsAvailable = function ( f2_arg0 )
	local f2_local0 = CoD.DirectorUtility.Filters --[[ @ 0]]
	if f2_local0 then
		f2_local0 = #CoD.DirectorUtility.Filters --[[ @ 0]]
		if f2_local0 then
			f2_local0 = #CoD.DirectorUtility.Filters > 1 --[[ @ 0]]
		end
	end
	return f2_local0
end
 --[[ @ 0]]
DataSources.ServerBrowserFilters = DataSourceHelpers.ListSetup( "ServerBrowserFilters", function ( f3_arg0, f3_arg1 )
	local f3_local0 = {
		{
			models = {
				name = @"hash_146513144F1265BA",
				filter = Enum[@"lobbymainmode"][@"lobby_mainmode_invalid"]
			}
		}
	} --[[ @ 0]]
	for f3_local4, f3_local5 in ipairs( {
		Enum[@"lobbymainmode"][@"lobby_mainmode_mp"],
		Enum[@"lobbymainmode"][@"lobby_mainmode_zm"],
		Enum[@"lobbymainmode"][@"lobby_mainmode_wz"],
		Enum[@"lobbymainmode"][@"lobby_mainmode_cp"]
	} ) --[[ @ 0]] do
		local f3_local6 = LuaUtils.GetDisplayNameForLobbyMainMode( f3_local5 ) --[[ @ 0]]
		if f3_local6 ~= @"hash_0" then
			table.insert( f3_local0, {
				models = {
					name = f3_local6,
					filter = f3_local5
				}
			} ) --[[ @ 0]]
		end
	end
	return f3_local0
end, true ) --[[ @ 0]]
CoD.DirectorUtility.CreateCardListDataSource = function ( f4_arg0, f4_arg1, f4_arg2, f4_arg3 )
	local f4_local0 = {} --[[ @ 0]]
	if f4_arg3.cards then
		local f4_local1 = 0 --[[ @ 0]]
		local f4_local2 --[[ @ 0]]
		if not CoD.DirectorUtility.FocusFeaturedFiltered then
			f4_local2 = Engine[@"getplaylistid"]() --[[ @ 0]]
		else
			f4_local2 = false --[[ @ 0]]
		end
		for f4_local10, f4_local11 in ipairs( f4_arg3.cards ) --[[ @ 0]] do
			if f4_local11.mode == nil or LuaUtils.GetDisplayNameForLobbyMainMode( f4_local11.mode ) ~= @"hash_0" then
				local f4_local6 = f4_local11.featured and 2 or 1 --[[ @ 0]]
				local f4_local7 = {
					models = f4_local11
				} --[[ @ 0]]
				local f4_local8 = {
					param = f4_local11,
					rowSpan = f4_local6
				} --[[ @ 0]]
				local f4_local9 --[[ @ 0]]
				if f4_arg0._hasSetDefault or f4_local11.playlist ~= f4_local2 then
					f4_local9 = false --[[ @ 0]]
				else
					f4_local9 = true --[[ @ 0]]
				end
				f4_local8.selectIndex = f4_local9 --[[ @ 0]]
				f4_local7.properties = f4_local8 --[[ @ 0]]
				if f4_local11.featured then
					f4_local1 = f4_local1 + 1 --[[ @ 0]]
					if f4_local11.isQuickplayCard then
						table.insert( f4_local0, 1, f4_local7 ) --[[ @ 0]]
					else
						table.insert( f4_local0, f4_local1, f4_local7 ) --[[ @ 0]]
						goto basicblock_21:
					end
				end
				if not CoD.DirectorUtility.RegionOnlyAllowsFeaturedPlaylistForMode( f4_arg1, f4_local11.mode ) or f4_local11.playlist == Engine[@"getplaylistid"]() or f4_local11.lowPopPlaylist then
					table.insert( f4_local0, f4_local7 ) --[[ @ 0]]
				end
			end
		end
	end
	f4_arg0._hasSetDefault = true --[[ @ 0]]
	CoD.DirectorUtility.FocusFeaturedFiltered = false --[[ @ 0]]
	return f4_local0
end
 --[[ @ 0]]
DataSources.DirectorTextModes = DataSourceHelpers.ListSetup( "DirectorTextModes", function ( f5_arg0, f5_arg1 )
	local f5_local0 = {} --[[ @ 0]]
	table.insert( f5_local0, {
		models = {
			available = true,
			mode = Enum[@"emodes"][@"mode_multiplayer"]
		},
		properties = {
			selectIndex = true
		}
	} ) --[[ @ 0]]
	table.insert( f5_local0, {
		models = {
			available = true,
			mode = Enum[@"emodes"][@"mode_zombies"]
		}
	} ) --[[ @ 0]]
	table.insert( f5_local0, {
		models = {
			available = true,
			mode = Enum[@"emodes"][@"mode_warzone"]
		}
	} ) --[[ @ 0]]
	for f5_local4, f5_local5 in ipairs( f5_local0 ) --[[ @ 0]] do
		f5_local5.models.name = LuaUtils.GetDisplayNameForEMode( f5_local5.models.mode ) --[[ @ 0]]
	end
	if f5_arg1.menu:getSessionMode() == Enum[@"emodes"][@"mode_invalid"] then
		f5_arg1.menu:setSessionMode( Enum[@"emodes"][@"mode_multiplayer"] ) --[[ @ 0]]
	end
	return f5_local0
end, true ) --[[ @ 0]]
CoD.DirectorUtility.ClientListFlags = {
	SHOW_EXPANDED = 1,
	FIRST_EMPTY = 2
} --[[ @ 0]]
CoD.DirectorUtility.DirectorPartyListUpdateClientInfo = function ( f6_arg0, f6_arg1, f6_arg2 )
	local f6_local0 = 1 --[[ @ 0]]
	if f6_arg1.rankIcon == nil then
		f6_local0 = 0 --[[ @ 0]]
		f6_arg1.rankIcon = @"blacktransparent" --[[ @ 0]]
	end
	f6_arg1.displayRank = "0" --[[ @ 0]]
	f6_arg1.rankTitle = "" --[[ @ 0]]
	local f6_local1 = "" --[[ @ 0]]
	f6_arg1.highlightDisplayRankString = false --[[ @ 0]]
	if f6_arg1.rank then
		local f6_local2 = Engine[@"currentsessionmode"]() --[[ @ 0]]
		if LuaUtils.GameModeAvailable( f6_local2 ) then
			if IsArenaMode() then
				f6_arg1.rankTitle = CoD.ArenaUtility.SetArenaDisplayRankAndIcon( f6_arg1 ) --[[ @ 0]]
			else
				f6_arg1.displayRank = Engine[@"getrankdisplaylevel"]( f6_arg1.rank ) --[[ @ 0]]
				if LuaUtils.IsGameModeParagonCapable( f6_local2 ) and f6_arg1.paragonRank and f6_arg1.prestige == CoD.PrestigeUtility.GetPrestigeCap() then
					f6_arg1.displayRank = Engine[@"getparagonrankdisplaylevel"]( f6_arg1.paragonRank ) --[[ @ 0]]
				end
				if f6_local2 == Enum[@"emodes"][@"mode_warzone"] then
					f6_local1 = CoD.WZUtility.GetDecoratedStringForRank( f6_arg1.wzRank, f6_arg1.wzParagonRank, f6_arg1.wzPrestige ) --[[ @ 0]]
				else
					f6_local1 = tostring( f6_arg1.displayRank ) --[[ @ 0]]
				end
				if IsGameModeParagonCapable( f6_local2 ) and Engine[@"getprestigecap"]( f6_local2 ) <= f6_arg1.prestige then
					f6_arg1.highlightDisplayRankString = true --[[ @ 0]]
				end
				if f6_arg1.prestige then
					f6_arg1.rankTitle = CoD.GetRankName( f6_arg1.rank, f6_arg1.prestige ) --[[ @ 0]]
				else
					f6_arg1.rankTitle = CoD.GetRankName( f6_arg1.rank, 0 ) --[[ @ 0]]
				end
			end
		end
	end
	local f6_local2 = f6_arg1.team --[[ @ 0]]
	if not f6_local2 then
		f6_local2 = 0 --[[ @ 0]]
	end
	local f6_local3 = f6_arg2[f6_local2] --[[ @ 0]]
	if not f6_local3 then
		f6_local3 = 0 --[[ @ 0]]
	end
	f6_arg2[f6_local2] = f6_local3 + 1 --[[ @ 0]]
	if f6_arg1.isMemberLeader and f6_arg1.isMemberLeader ~= 0 and 1 < f6_arg0 then
		f6_local3 = 1 --[[ @ 0]]
		if not f6_local3 then
		
		else
			f6_arg1.isMemberLeader = f6_local3 --[[ @ 0]]
			if f6_arg1.isMember and f6_arg1.isMember ~= 0 and 1 < f6_arg0 then
				f6_local3 = 1 --[[ @ 0]]
				if not f6_local3 then
				
				else
					if f6_arg1.isOtherMember then
						local f6_local4 = f6_arg1.isOtherMember --[[ @ 0]]
						local f6_local5 = 1 --[[ @ 0]]
					end
					local f6_local6 = f6_local4 and f6_local5 or 0 --[[ @ 0]]
					local f6_local7 = Enum[@"presenceactivity"][@"presence_activity_menu_inlobby"] --[[ @ 0]]
					if Engine[@"getlobbynetworkmode"]() ~= Enum[@"lobbynetworkmode"][@"lobby_networkmode_live"] then
						f6_arg1.isMemberLeader = 0 --[[ @ 0]]
						f6_arg1.isOtherMember = 0 --[[ @ 0]]
					end
					if 0 < Dvar[@"ui_lobbydebugvis"]:get() then
						local f6_local8 = f6_arg1.skillRating --[[ @ 0]]
						if f6_local8 > 10 then
							f6_local8 = 10 --[[ @ 0]]
						elseif f6_local8 < -10 then
							f6_local8 = -10 --[[ @ 0]]
						end
						f6_arg1.gamertag = "s" .. math.floor( f6_local8 * 100 ) .. " " .. f6_arg1.gamertag --[[ @ 0]]
					end
					local f6_local8 = "" --[[ @ 0]]
					if string.len( f6_arg1.clantag ) > 0 then
						f6_local8 = "[" .. f6_arg1.clantag .. "]" --[[ @ 0]]
					end
					local f6_local9, f6_local10 = CoD.ArenaLeaguePlayUtility.GetRubies( f6_arg1.arenaLeaguePlayPoints ) --[[ @ 0]]
					if IsArenaMode() and (f6_local3 == nil or f6_local3 == 0) and not CoD.ModelUtility.IsGlobalModelValueTrue( "lobbyRoot.lobbyLockedIn" ) and not CoD.LobbyUtility.MapVoteInState( LuaEnum.MAP_VOTE_STATE.RESULT ) then
						Engine[@"restrictvoicechatforclient"]( Enum[@"lobbytype"][@"lobby_type_game"], f6_arg1.xuid ) --[[ @ 0]]
					end
				end
			end
			f6_local3 = 0 --[[ @ 0]]
		end
	end
	f6_local3 = 0 --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorUtility.DirectorPartyListEntryForXUID = function ( f7_arg0, f7_arg1, f7_arg2 )
	local f7_local0 = {} --[[ @ 0]]
	local f7_local1 = {} --[[ @ 0]]
	local f7_local2 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f7_local1.info = f7_local2.LobbyClients:create( Engine[@"xuidtostring"]( f7_arg1 ) ) --[[ @ 0]]
	f7_local1.team = f7_arg2 --[[ @ 0]]
	f7_local1.xuid = f7_arg1 --[[ @ 0]]
	f7_local1.clientListFlags = 0 --[[ @ 0]]
	f7_local0.models = f7_local1 --[[ @ 0]]
	f7_local0.properties = {
		selectIndex = f7_arg0 == f7_arg1
	} --[[ @ 0]]
	return f7_local0
end
 --[[ @ 0]]
CoD.DirectorUtility.IsPartyBarTopOrMiddle = function ( f8_arg0 )
	local f8_local0 = f8_arg0:getModel() --[[ @ 0]]
	if f8_local0 then
		local f8_local1 = CoD.SafeGetModelValue( f8_local0, "isPartyMemberTopOrMiddle" ) --[[ @ 0]]
		if not f8_local1 then
			f8_local1 = CoD.SafeGetModelValue( f8_local0, "isOtherMemberTopOrMiddle" ) --[[ @ 0]]
		end
		return f8_local1
	else
		
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.MaxLobbyPoseMembers = 6 --[[ @ 0]]
DataSourceHelpers.GlobalDataSourceSetup( "DirectorLobbyPoseMembers", "lobbyRoot.lobbyPoseMembers", function ( f9_arg0, f9_arg1 )
	if not DataSources.DirectorLobbyPoseMembers.__callbackElement then
		local f9_local0 = {} --[[ @ 0]]
		for f9_local1 = 1 --[[ @ 0]], CoD.DirectorUtility.MaxLobbyPoseMembers, 1 do
			local f9_local4 = f9_arg0:create( "lobbyPoseMember" .. f9_local1 ) --[[ @ 0]]
			f9_local4:create( "gamertag" ) --[[ @ 0]]
			f9_local4:create( "clantag" ) --[[ @ 0]]
			table.insert( f9_local0, f9_local4 ) --[[ @ 0]]
		end
		local f9_local1 = function ()
			local f10_local0 = Enum[@"lobbymodule"][@"lobby_module_client"] --[[ @ 0]]
			local f10_local1 = Engine[@"lobbygetcontrollinglobbysession"]( f10_local0 ) --[[ @ 0]]
			local f10_local2 = Engine[@"lobbygetsessionclients"]( f10_local0, f10_local1 ) --[[ @ 0]]
			local f10_local3 = Engine[@"getclientnum"]( Engine[@"getprimarycontroller"]() ) --[[ @ 0]]
			local f10_local4 = {} --[[ @ 0]]
			local f10_local5 = CoD.TeamUtility.GetTeam( Engine[@"getprimarycontroller"]() ) --[[ @ 0]]
			for f10_local9, f10_local10 in ipairs( f10_local2.sessionClients ) --[[ @ 0]] do
				if f10_local1 ~= Enum[@"lobbytype"][@"lobby_type_game"] or f10_local5 == f10_local10.team then
					if f10_local10.clientNum == f10_local3 then
						table.insert( f10_local4, 1, f10_local10 ) --[[ @ 0]]
					else
						table.insert( f10_local4, f10_local10 ) --[[ @ 0]]
					end
				end
			end
			for f10_local9, f10_local10 in ipairs( f9_local0 ) --[[ @ 0]] do
				if f10_local9 <= #f10_local4 then
					f10_local10.gamertag:set( f10_local4[f10_local9].gamertag ) --[[ @ 0]]
					f10_local10.clantag:set( f10_local4[f10_local9].clantag ) --[[ @ 0]]
				else
					f10_local10.gamertag:set( "" ) --[[ @ 0]]
					f10_local10.clantag:set( "" ) --[[ @ 0]]
				end
			end
		end
		 --[[ @ 0]]
		local f9_local2 = Engine[@"getglobalmodel"]() --[[ @ 0]]
		f9_local2 = f9_local2.lobbyRoot --[[ @ 0]]
		local self = LUI.UIElement.new() --[[ @ 0]]
		DataSources.DirectorLobbyPoseMembers.__callbackElement = self --[[ @ 0]]
		self:subscribeToModel( f9_local2.privateClient.update, f9_local1, false ) --[[ @ 0]]
		self:subscribeToModel( f9_local2.gameClient.update, f9_local1, false ) --[[ @ 0]]
		self:subscribeToModel( f9_local2.lobbyNav, f9_local1, false ) --[[ @ 0]]
	end
end ) --[[ @ 0]]
CoD.DirectorUtility.UpdateLobbyClientInfo = function ( f11_arg0, f11_arg1 )
	DataSources.DirectorPartyList.ClientList = CoD.LobbyUtility.GetClientList() --[[ @ 0]]
	DataSources.DirectorPartyList.TeamCounts = {} --[[ @ 0]]
	if CoD.isWarzone then
		DataSources.DirectorPartyList.TeamCounts = {
			[Enum[@"team_t"][@"team_allies"]] = 0,
			[Enum[@"team_t"][@"team_axis"]] = 0,
			[Enum[@"team_t"][@"team_three"]] = 0,
			[Enum[@"team_t"][@"team_four"]] = 0,
			[Enum[@"team_t"][@"team_five"]] = 0,
			[Enum[@"team_t"][@"team_six"]] = 0
		} --[[ @ 0]]
	elseif CoDShared.IsGametypeTeamBased() then
		DataSources.DirectorPartyList.TeamCounts = {
			[Enum[@"team_t"][@"team_spectator"]] = 0,
			[Enum[@"team_t"][@"team_allies"]] = 0,
			[Enum[@"team_t"][@"team_axis"]] = 0
		} --[[ @ 0]]
	else
		DataSources.DirectorPartyList.TeamCounts = {
			[Enum[@"team_t"][@"team_spectator"]] = 0,
			[Enum[@"team_t"][@"team_free"]] = 0
		} --[[ @ 0]]
	end
	local f11_local0 = f11_arg0:create( "lobbyList" ) --[[ @ 0]]
	local f11_local1 = f11_local0:create( "playerCount" ) --[[ @ 0]]
	f11_local1:set( #DataSources.DirectorPartyList.ClientList ) --[[ @ 0]]
	local f11_local2 = Enum[@"lobbymodule"][@"lobby_module_client"] --[[ @ 0]]
	local f11_local3 = Engine[@"getlobbyclientnumbyxuid"]( f11_local2, Engine[@"lobbygetcontrollinglobbysession"]( f11_local2 ), Engine[@"getxuid64"]( Engine[@"getprimarycontroller"]() ) ) --[[ @ 0]]
	if f11_local3 == LuaDefine.INVALID_CLIENT_INDEX then
		f11_local3 = Engine[@"getclientnum"]( Engine[@"getprimarycontroller"]() ) --[[ @ 0]]
	end
	local f11_local4 = {} --[[ @ 0]]
	local f11_local5 = Engine[@"getlobbyteamid"]( f11_local2, f11_local3 ) --[[ @ 0]]
	if IsCodCaster( Engine[@"getprimarycontroller"]() ) then
		f11_local5 = CoD.ShoutcasterProfileVarValue( Engine[@"getprimarycontroller"](), "shoutcaster_team" ) --[[ @ 0]]
	end
	for f11_local9, f11_local10 in ipairs( DataSources.DirectorPartyList.ClientList ) --[[ @ 0]] do
		table.insert( f11_local4, f11_local10 ) --[[ @ 0]]
	end
	f11_local6 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f11_local6 = f11_local6.PartyPrivacy.privacy:get() == Enum[@"partyprivacy"][@"party_privacy_closed"] --[[ @ 0]]
	f11_local7 = DataSources.LobbyClients.getModel() --[[ @ 0]]
	f11_local8 = f11_local7:create( Engine[@"xuidtostring"]( LuaDefine.INVALID_XUID_X64 ) ) --[[ @ 0]]
	f11_local9 = {} --[[ @ 0]]
	for f11_local10 = 1 --[[ @ 0]], CoD.PlayerRoleUtility.MAX_SUPPORTED_LOBBY_CLIENTS, 1 do
		local f11_local13 = {
			info = f11_local8,
			xuid = LuaDefine.INVALID_XUID_X64,
			visible = false
		} --[[ @ 0]]
		local f11_local14 --[[ @ 0]]
		if f11_local10 <= f11_arg1 then
			f11_local14 = not f11_local6 --[[ @ 0]]
		else
			f11_local14 = false --[[ @ 0]]
		end
		f11_local13.available = f11_local14 --[[ @ 0]]
		f11_local9[f11_local10] = f11_local13 --[[ @ 0]]
	end
	f11_local10 = function ( f12_arg0 )
		local f12_local0 = Engine[@"getglobalmodel"]() --[[ @ 0]]
		f12_local0 = f12_local0.LobbyClientPose --[[ @ 0]]
		if f12_local0 then
			for f12_local1 = 0 --[[ @ 0]], CoD.PlayerRoleUtility.MAX_SUPPORTED_LOBBY_CLIENTS - 1, 1 do
				if f12_local0[f12_local1] and f12_arg0 == f12_local0[f12_local1]:get() then
					return f12_local1 + 1
				end
			end
		end
		return nil
	end
	 --[[ @ 0]]
	for f11_local13, f11_local14 in ipairs( f11_local4 ) --[[ @ 0]] do
		local f11_local20 = Engine[@"xuidtostring"]( f11_local14.xuid ) --[[ @ 0]]
		local f11_local21 = f11_local10( f11_local20 ) --[[ @ 0]]
		CoD.DirectorUtility.DirectorPartyListUpdateClientInfo( #f11_local4, f11_local14, DataSources.DirectorPartyList.TeamCounts ) --[[ @ 0]]
		local f11_local22 = Engine[@"getglobalmodel"]() --[[ @ 0]]
		f11_local22 = f11_local22.LobbyClients:create( f11_local20 ) --[[ @ 0]]
		local f11_local16 --[[ @ 0]]
		if f11_local14.isMember and f11_local14.isMember ~= 0 and #f11_local4 > 1 then
			f11_local16 = 1 --[[ @ 0]]
			if not f11_local16 then
			
			else
				local f11_local17 = f11_local22:create( "clantag" ) --[[ @ 0]]
				f11_local17:set( f11_local14.clantag ) --[[ @ 0]]
				f11_local17 = f11_local22:create( "isInAParty" ) --[[ @ 0]]
				f11_local17:set( f11_local14.isInAParty ) --[[ @ 0]]
				f11_local17 = f11_local22:create( "isLeader" ) --[[ @ 0]]
				local f11_local18 = f11_local17 --[[ @ 0]]
				f11_local17 = f11_local17.set --[[ @ 0]]
				local f11_local19 --[[ @ 0]]
				if f11_local14.isLeader == 1 and f11_local16 == 1 then
					f11_local19 = 1 --[[ @ 0]]
					if not f11_local19 then
					
					else
						f11_local17( f11_local18, f11_local19 ) --[[ @ 0]]
						f11_local17 = f11_local22:create( "isMemberLeader" ) --[[ @ 0]]
						f11_local17:set( f11_local14.isMemberLeader ) --[[ @ 0]]
						f11_local17 = f11_local22:create( "isPartyMember" ) --[[ @ 0]]
						f11_local17:set( f11_local14.isMember == 1 ) --[[ @ 0]]
						f11_local17 = f11_local22:create( "isPartyMemberTopOrMiddle" ) --[[ @ 0]]
						f11_local17:set( f11_local14.isMemberTopOrMiddle == 1 ) --[[ @ 0]]
						f11_local17 = f11_local22:create( "team" ) --[[ @ 0]]
						f11_local17:set( f11_local14.team ) --[[ @ 0]]
						f11_local17 = f11_local22:create( "arenaLeaguePlayFirstSubdivisionRankStreak" ) --[[ @ 0]]
						f11_local17:set( f11_local14.arenaLeaguePlayFirstSubdivisionRankStreak ) --[[ @ 0]]
						f11_local17 = f11_local22:create( "arenaLeaguePlayPoints" ) --[[ @ 0]]
						f11_local17:set( f11_local14.arenaLeaguePlayPoints ) --[[ @ 0]]
						f11_local17 = CoD.RankUtility.GetCurrentRankMode() --[[ @ 0]]
						if f11_local17 == CoD.RankUtility.RankMode.Multiplayer then
							CoD.RankUtility.UpdateMPRankForClient( f11_local14.xuid, f11_local14.displayRank, f11_local14.mpRankIcon, f11_local14.rankTitle, f11_local14.highlightDisplayRankString, true ) --[[ @ 0]]
						elseif f11_local17 == CoD.RankUtility.RankMode.Warzone then
							CoD.RankUtility.UpdateWZRankForClient( f11_local14.xuid, CoD.WZUtility.GetDecoratedStringForRank( f11_local14.wzRank, f11_local14.wzParagonRank, f11_local14.wzPrestige ), f11_local14.wzRankIcon, f11_local14.rankTitle, f11_local14.highlightDisplayRankString, true ) --[[ @ 0]]
						elseif f11_local17 == CoD.RankUtility.RankMode.Zombies then
							CoD.RankUtility.UpdateZMRankForClient( f11_local14.xuid, f11_local14.displayRank, f11_local14.zmRankIcon, f11_local14.rankTitle, f11_local14.highlightDisplayRankString, true ) --[[ @ 0]]
						elseif f11_local17 == CoD.RankUtility.RankMode.Arena then
							CoD.RankUtility.UpdateArenaRankForClient( f11_local14.xuid, f11_local14.displayRank, f11_local14.rankIcon, f11_local14.rankTitle, f11_local14.highlightDisplayRankString, f11_local14.arenaLeaguePlayBestFirstSubdivisionRankStreak, f11_local14.arenaLeaguePlayFirstSubdivisionRankStreak, f11_local14.arenaLeaguePlayPoints, CoD.ArenaLeaguePlayUtility.GetClientSkillDivisionIconSmall( f11_local14.xuid ), true ) --[[ @ 0]]
						end
						f11_local18 = CoD.RankUtility.GetClientRankInfoModel( f11_local14.xuid ) --[[ @ 0]]
						f11_local19 = f11_local22:create( "rankInfo" ) --[[ @ 0]]
						f11_local19:set( f11_local18 ) --[[ @ 0]]
						if f11_local21 and f11_local7[f11_local21] then
							f11_local9[f11_local21] = {
								info = f11_local22,
								xuid = f11_local14.xuid,
								visible = true,
								available = true
							} --[[ @ 0]]
						end
					end
				end
				f11_local19 = 0 --[[ @ 0]]
			end
		end
		f11_local16 = 0 --[[ @ 0]]
	end
	for f11_local13, f11_local14 in ipairs( f11_local9 ) --[[ @ 0]] do
		local f11_local20 = f11_local7[f11_local13] --[[ @ 0]]
		for f11_local17, f11_local18 in pairs( f11_local14 ) --[[ @ 0]] do
			f11_local20[f11_local17]:set( f11_local18 ) --[[ @ 0]]
		end
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.InitLobbyListsOnce = function ( f13_arg0, f13_arg1 )
	if not DataSources.DirectorPartyList._subscriptionElement then
		CoD.DirectorUtility.UpdateLobbyClientInfo( f13_arg0, f13_arg1 ) --[[ @ 0]]
		DataSources.DirectorPartyList._subscriptionElement = LUI.UIElement.new() --[[ @ 0]]
		local f13_local0 = {} --[[ @ 0]]
		local f13_local1 = f13_arg0.privateClient.update --[[ @ 0]]
		local f13_local2 = f13_arg0.privateClient.count --[[ @ 0]]
		local f13_local3 = f13_arg0.gameClient.update --[[ @ 0]]
		local f13_local4 = f13_arg0.lobbyNav --[[ @ 0]]
		local f13_local5 = f13_arg0.publicLobby.stage --[[ @ 0]]
		local f13_local6 = Engine[@"getglobalmodel"]() --[[ @ 0]]
		f13_local6 = f13_local6:create( "LobbyClientPose" ) --[[ @ 0]]
		local f13_local7 = Engine[@"getglobalmodel"]() --[[ @ 0]]
		f13_local7 = f13_local7.PartyPrivacy.privacy --[[ @ 0]]
		f13_local0[1] = f13_local1 --[[ @ 0]]
		f13_local0[2] = f13_local2 --[[ @ 0]]
		f13_local0[3] = f13_local3 --[[ @ 0]]
		f13_local0[4] = f13_local4 --[[ @ 0]]
		f13_local0[5] = f13_local5 --[[ @ 0]]
		f13_local0[6] = f13_local6 --[[ @ 0]]
		f13_local0[7] = f13_local7 --[[ @ 0]]
		DataSources.DirectorPartyList._listsToUpdate = {} --[[ @ 0]]
		DataSources.DirectorPartyList.OnSubListClose = function ( f14_arg0 )
			if DataSources.DirectorPartyList._listsToUpdate then
				table.remove( DataSources.DirectorPartyList._listsToUpdate, LuaUtils.FindItemInArray( DataSources.DirectorPartyList._listsToUpdate, f14_arg0 ) ) --[[ @ 0]]
			end
		end
		 --[[ @ 0]]
		DataSources.DirectorPartyList.OnSubscriptionNotified = function ( f15_arg0 )
			if f15_arg0 == f13_arg0.privateClient.update and (f13_arg0.lobbyMode:get() ~= Enum[@"lobbymode"][@"lobby_mode_custom"] or Enum[@"emodes"][@"mode_zombies"] == Engine[@"currentsessionmode"]()) then
				return 
			end
			CoD.DirectorUtility.UpdateLobbyClientInfo( f13_arg0, f13_arg1 ) --[[ @ 0]]
			local f15_local0 = {} --[[ @ 0]]
			for f15_local9, f15_local10 in ipairs( DataSources.DirectorPartyList._listsToUpdate or {} ) --[[ @ 0]] do
				if f15_local0[f15_local10.customDataSourceHelper] then
					f15_local10[f15_local10.customDataSourceHelper] = f15_local0[f15_local10.customDataSourceHelper] --[[ @ 0]]
				end
				local f15_local4 = f15_local10 --[[ @ 0]]
				local f15_local5 = f15_local10.updateDataSource --[[ @ 0]]
				local f15_local6 = nil --[[ @ 0]]
				local f15_local7 = true --[[ @ 0]]
				local f15_local8 --[[ @ 0]]
				if not f15_local10._isCustom then
					f15_local8 = f15_local0[f15_local10.customDataSourceHelper] --[[ @ 0]]
				else
					f15_local8 = false --[[ @ 0]]
				end
				f15_local5( f15_local4, f15_local6, f15_local7, f15_local8 ) --[[ @ 0]]
				if not f15_local0[f15_local10.customDataSourceHelper] then
					f15_local0[f15_local10.customDataSourceHelper] = f15_local10[f15_local10.customDataSourceHelper] --[[ @ 0]]
				end
			end
		end
		 --[[ @ 0]]
		for f13_local4, f13_local5 in ipairs( f13_local0 ) --[[ @ 0]] do
			DataSources.DirectorPartyList._subscriptionElement:subscribeToModel( f13_local5, DataSources.DirectorPartyList.OnSubscriptionNotified, false ) --[[ @ 0]]
		end
		f13_local1 = f13_arg0.lobbyMode --[[ @ 0]]
		f13_local2 = f13_arg0.lobbyMainMode --[[ @ 0]]
		DataSources.DirectorPartyList._subscriptionElement:subscribeToModel( f13_local1, function ()
			CoD.RankUtility.UpdateRankModeModel( f13_local1:get(), f13_local2:get() ) --[[ @ 0]]
		end, false ) --[[ @ 0]]
		DataSources.DirectorPartyList._subscriptionElement:subscribeToModel( f13_local2, function ()
			CoD.RankUtility.UpdateRankModeModel( f13_local1:get(), f13_local2:get() ) --[[ @ 0]]
		end ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.DirectorPartyAndCustomListHelper = function ( f18_arg0, f18_arg1, f18_arg2 )
	local f18_local0 = CoD.BitUtility.IsBitwiseAndNonZero( f18_arg2, CoD.DirectorUtility.DirectorListFlags.IS_CUSTOM ) --[[ @ 0]]
	local f18_local1 = CoD.BitUtility.IsBitwiseAndNonZero( f18_arg2, CoD.DirectorUtility.DirectorListFlags.SHOW_PARTY ) --[[ @ 0]]
	local f18_local2 = CoD.BitUtility.IsBitwiseAndNonZero( f18_arg2, CoD.DirectorUtility.DirectorListFlags.SHOW_NON_PARTY ) --[[ @ 0]]
	local f18_local3 = CoD.BitUtility.IsBitwiseAndNonZero( f18_arg2, CoD.DirectorUtility.DirectorListFlags.SHOW_EMPTY ) --[[ @ 0]]
	local f18_local4 = CoD.BitUtility.IsBitwiseAndNonZero( f18_arg2, CoD.DirectorUtility.DirectorListFlags.SHOW_FIRST_EMPTY ) --[[ @ 0]]
	if f18_local4 then
		if not IsLobbyNetworkModeLAN() then
			f18_local4 = not CoD.DirectorUtility.IsMatchmakingInProgress( f18_arg0 ) --[[ @ 0]]
		else
			f18_local4 = false --[[ @ 0]]
		end
	end
	local f18_local5 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f18_arg1.lobbyRootModel = f18_local5.lobbyRoot --[[ @ 0]]
	f18_local5 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f18_local5 = f18_local5.LobbyClients:create( Engine[@"xuidtostring"]( LuaDefine.INVALID_XUID_X64 ) ) --[[ @ 0]]
	if not f18_local5.rank then
		f18_local5:create( "clantag" ) --[[ @ 0]]
		f18_local5:create( "isInAParty" ) --[[ @ 0]]
		f18_local5:create( "isLeader" ) --[[ @ 0]]
		f18_local5:create( "isMemberLeader" ) --[[ @ 0]]
		f18_local5:create( "isPartyMember" ) --[[ @ 0]]
		f18_local5:create( "isPartyMemberTopOrMiddle" ) --[[ @ 0]]
		f18_local5:create( "team" ) --[[ @ 0]]
		f18_local5:create( "arenaLeaguePlayFirstSubdivisionRankStreak" ) --[[ @ 0]]
		f18_local5:create( "arenaLeaguePlayPoints" ) --[[ @ 0]]
	end
	local f18_local6 = CoD.LobbyUtility.GetMaxClientCount() --[[ @ 0]]
	CoD.DirectorUtility.InitLobbyListsOnce( f18_arg1.lobbyRootModel, f18_local6 ) --[[ @ 0]]
	local f18_local7 = DataSources.DirectorPartyList.ClientList --[[ @ 0]]
	local f18_local8 = CoDShared.IsGametypeTeamBased() --[[ @ 0]]
	local f18_local9 = f18_arg1.lobbyRootModel:create( "localClientTeam" ) --[[ @ 0]]
	local f18_local10 = f18_arg1.lobbyRootModel:create( "lobbyList" ) --[[ @ 0]]
	local f18_local11 = f18_local10:create( "maxPlayers" ) --[[ @ 0]]
	f18_local11:set( f18_local6 ) --[[ @ 0]]
	f18_arg1._isCustom = f18_local0 --[[ @ 0]]
	if LuaUtils.FindItemInArray( DataSources.DirectorPartyList._listsToUpdate, f18_arg1 ) == nil then
		table.insert( DataSources.DirectorPartyList._listsToUpdate, f18_arg1 ) --[[ @ 0]]
		LUI.OverrideFunction_CallOriginalSecond( f18_arg1, "close", DataSources.DirectorPartyList.OnSubListClose ) --[[ @ 0]]
	end
	local f18_local12 = {} --[[ @ 0]]
	local f18_local13 = LobbyData.GetCurrentMenuTarget() --[[ @ 0]]
	local f18_local14 = 0 --[[ @ 0]]
	if f18_local13[@"name"] ~= LuaEnum.UI.DIRECTOR_ONLINE and f18_local13[@"name"] ~= LuaEnum.UI.DIRECTOR_LAN and f18_local13[@"name"] ~= LuaEnum.UI.DIRECTOR_ONLINE_WZ_PUBLIC then
		for f18_local18, f18_local19 in ipairs( f18_local7 ) --[[ @ 0]] do
			if f18_local19.isMember == 1 then
				f18_local14 = f18_local14 + 1 --[[ @ 0]]
			end
			if not (not f18_local1 or f18_local19.isMember ~= 1) or f18_local2 and f18_local19.isMember == 0 then
				table.insert( f18_local12, CoD.DirectorUtility.DirectorPartyListEntryForXUID( f18_arg1.menu.selectXUID, f18_local19.xuid, f18_local19.team ) ) --[[ @ 0]]
				if f18_local19.isLocal == 1 then
					f18_local9:set( f18_local19.team ) --[[ @ 0]]
				end
			end
		end
	else
		local f18_local15 = -1 --[[ @ 0]]
		for f18_local19, f18_local20 in ipairs( f18_local7 ) --[[ @ 0]] do
			if f18_local20.isMember == 1 then
				f18_local14 = f18_local14 + 1 --[[ @ 0]]
			end
			if f18_local20.isLocal == 1 then
				f18_local15 = f18_local15 + 1 --[[ @ 0]]
				f18_local9:set( f18_local20.team ) --[[ @ 0]]
			end
		end
		for f18_local16 = 0 --[[ @ 0]], f18_local15, 1 do
			for f18_local23, f18_local24 in ipairs( f18_local7 ) --[[ @ 0]] do
				if f18_local24.isLocal == 1 and f18_local24.localController == f18_local16 and f18_local1 then
					table.insert( f18_local12, CoD.DirectorUtility.DirectorPartyListEntryForXUID( f18_arg1.menu.selectXUID, f18_local24.xuid, f18_local24.team ) ) --[[ @ 0]]
				end
			end
		end
		for f18_local19, f18_local20 in ipairs( f18_local7 ) --[[ @ 0]] do
			if f18_local20.isLocal == 0 and (f18_local13[@"name"] ~= LuaEnum.UI.DIRECTOR_ONLINE_WZ_PUBLIC or f18_local20.isMember == 1) and f18_local1 then
				table.insert( f18_local12, CoD.DirectorUtility.DirectorPartyListEntryForXUID( f18_arg1.menu.selectXUID, f18_local20.xuid, f18_local20.team ) ) --[[ @ 0]]
			end
		end
	end
	local f18_local15 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f18_local15 = f18_local15.PartyPrivacy.privacy:get() == Enum[@"partyprivacy"][@"party_privacy_closed"] --[[ @ 0]]
	if Engine[@"currentsessionmode"]() == Enum[@"emodes"][@"mode_warzone"] or Engine[@"currentsessionmode"]() == Enum[@"emodes"][@"mode_zombies"] then
		Engine[@"sendclientscriptnotify"]( f18_arg0, "PositionDraft_Update", {
			localClientNum = Engine[@"getlocalclientnum"]( f18_arg0 )
		} ) --[[ @ 0]]
	end
	local f18_local16 = {} --[[ @ 0]]
	if CoD.isWarzone then
		local f18_local17 = 1 --[[ @ 0]]
		local f18_local18 = 1 --[[ @ 0]]
		if IsMaxTeamPlayersEqualTo( 4 ) then
			f18_local17 = 4 --[[ @ 0]]
			f18_local18 = 0 --[[ @ 0]]
		elseif IsMaxTeamPlayersEqualTo( 2 ) then
			f18_local17 = 2 --[[ @ 0]]
			f18_local18 = 2 --[[ @ 0]]
		end
		f18_local16 = {
			[Enum[@"team_t"][@"team_allies"]] = f18_local17,
			[Enum[@"team_t"][@"team_axis"]] = f18_local17,
			[Enum[@"team_t"][@"team_three"]] = f18_local17,
			[Enum[@"team_t"][@"team_four"]] = f18_local18,
			[Enum[@"team_t"][@"team_five"]] = f18_local18,
			[Enum[@"team_t"][@"team_six"]] = f18_local18
		} --[[ @ 0]]
	elseif f18_local8 then
		f18_local16 = {
			[Enum[@"team_t"][@"team_spectator"]] = 2,
			[Enum[@"team_t"][@"team_allies"]] = 6,
			[Enum[@"team_t"][@"team_axis"]] = 6
		} --[[ @ 0]]
	else
		f18_local16 = {
			[Enum[@"team_t"][@"team_spectator"]] = 2,
			[Enum[@"team_t"][@"team_free"]] = 12
		} --[[ @ 0]]
	end
	local f18_local17 = nil --[[ @ 0]]
	if f18_local0 or not Engine[@"sessionmodeismode"]( Enum[@"enetworkmodes"][@"mode_network_online"] ) then
		f18_local17 = Engine[@"getlobbymaxclients"]( Enum[@"lobbymodule"][@"lobby_module_client"], Enum[@"lobbytype"][@"lobby_type_private"] ) --[[ @ 0]]
	else
		local f18_local18 = Engine[@"getplaylistinfobyid"]( Engine[@"getplaylistid"]() ) --[[ @ 0]]
		f18_local17 = f18_local18.maxPlayers --[[ @ 0]]
	end
	local f18_local18 = 0 --[[ @ 0]]
	for f18_local22, f18_local23 in pairs( DataSources.DirectorPartyList.TeamCounts ) --[[ @ 0]] do
		f18_local18 = f18_local18 + f18_local23 --[[ @ 0]]
	end
	f18_local19 = true --[[ @ 0]]
	if (f18_local3 or f18_local4) and f18_local1 and f18_local18 < f18_local6 and not f18_local15 then
		for f18_local23, f18_local24 in pairs( DataSources.DirectorPartyList.TeamCounts ) --[[ @ 0]] do
			if f18_local4 and not f18_local19 then
				break
			elseif f18_local8 or f18_local23 == Enum[@"team_t"][@"team_spectator"] or f18_local23 == Enum[@"team_t"][@"team_free"] then
				local f18_local25 = f18_local16[f18_local23] --[[ @ 0]]
				if not f18_local25 then
					f18_local25 = 0 --[[ @ 0]]
				end
				if f18_local24 < f18_local25 then
					table.insert( f18_local12, {
						models = {
							info = f18_local5,
							team = f18_local23,
							xuid = LuaDefine.INVALID_XUID_X64,
							clientListFlags = CoD.DirectorUtility.ClientListFlags.FIRST_EMPTY
						}
					} ) --[[ @ 0]]
					f18_local19 = false --[[ @ 0]]
					f18_local18 = f18_local18 + 1 --[[ @ 0]]
				end
			end
		end
	end
	if f18_local3 and f18_local0 and f18_local1 then
	
	else
		if f18_local3 and not f18_local1 then
			if f18_local17 > 12 then
				f18_local17 = 12 --[[ @ 0]]
			end
			f18_local18 = #f18_local7 --[[ @ 0]]
			while f18_local18 < f18_local17 do
				f18_local20 = table.insert --[[ @ 0]]
				f18_local21 = f18_local12 --[[ @ 0]]
				f18_local22 = {} --[[ @ 0]]
				f18_local23 = {
					info = f18_local5,
					team = 0,
					xuid = LuaDefine.INVALID_XUID_X64
				} --[[ @ 0]]
				local f18_local24 --[[ @ 0]]
				if f18_local19 then
					f18_local24 = CoD.DirectorUtility.ClientListFlags.FIRST_EMPTY --[[ @ 0]]
					if not f18_local24 then
					
					else
						f18_local23.clientListFlags = f18_local24 --[[ @ 0]]
						f18_local22.models = f18_local23 --[[ @ 0]]
						f18_local20( f18_local21, f18_local22 ) --[[ @ 0]]
						f18_local18 = f18_local18 + 1 --[[ @ 0]]
					end
				end
				f18_local24 = 0 --[[ @ 0]]
			end
		end
		f18_arg1.menu.selectXUID = nil --[[ @ 0]]
		if #f18_local12 == 1 or #f18_local12 == 2 and CoD.BitUtility.IsBitwiseAndNonZero( f18_local12[2].models.clientListFlags, CoD.DirectorUtility.ClientListFlags.FIRST_EMPTY ) then
			f18_local12[1].models.clientListFlags = CoD.DirectorUtility.ClientListFlags.SHOW_EXPANDED --[[ @ 0]]
		end
		return f18_local12
	end
	while f18_local18 < f18_local17 do
		f18_local20 = table.insert --[[ @ 0]]
		f18_local21 = f18_local12 --[[ @ 0]]
		f18_local22 = {} --[[ @ 0]]
		f18_local23 = {
			info = f18_local5,
			team = 0,
			xuid = LuaDefine.INVALID_XUID_X64
		} --[[ @ 0]]
		local f18_local24 --[[ @ 0]]
		if f18_local19 then
			f18_local24 = CoD.DirectorUtility.ClientListFlags.FIRST_EMPTY --[[ @ 0]]
			if not f18_local24 then
			
			else
				f18_local23.clientListFlags = f18_local24 --[[ @ 0]]
				f18_local22.models = f18_local23 --[[ @ 0]]
				f18_local20( f18_local21, f18_local22 ) --[[ @ 0]]
				f18_local18 = f18_local18 + 1 --[[ @ 0]]
			end
		end
		f18_local24 = 0 --[[ @ 0]]
	end
	if f18_local3 and not f18_local1 then
		if f18_local17 > 12 then
			f18_local17 = 12 --[[ @ 0]]
		end
		f18_local18 = #f18_local7 --[[ @ 0]]
		while f18_local18 < f18_local17 do
			f18_local20 = table.insert --[[ @ 0]]
			f18_local21 = f18_local12 --[[ @ 0]]
			f18_local22 = {} --[[ @ 0]]
			f18_local23 = {
				info = f18_local5,
				team = 0,
				xuid = LuaDefine.INVALID_XUID_X64
			} --[[ @ 0]]
			local f18_local24 --[[ @ 0]]
			if f18_local19 then
				f18_local24 = CoD.DirectorUtility.ClientListFlags.FIRST_EMPTY --[[ @ 0]]
				if not f18_local24 then
				
				else
					f18_local23.clientListFlags = f18_local24 --[[ @ 0]]
					f18_local22.models = f18_local23 --[[ @ 0]]
					f18_local20( f18_local21, f18_local22 ) --[[ @ 0]]
					f18_local18 = f18_local18 + 1 --[[ @ 0]]
				end
			end
			f18_local24 = 0 --[[ @ 0]]
		end
	end
	f18_arg1.menu.selectXUID = nil --[[ @ 0]]
	if #f18_local12 == 1 or #f18_local12 == 2 and CoD.BitUtility.IsBitwiseAndNonZero( f18_local12[2].models.clientListFlags, CoD.DirectorUtility.ClientListFlags.FIRST_EMPTY ) then
		f18_local12[1].models.clientListFlags = CoD.DirectorUtility.ClientListFlags.SHOW_EXPANDED --[[ @ 0]]
	end
	return f18_local12
end
 --[[ @ 0]]
CoD.DirectorUtility.DirectorListFlags = LuaEnum.createBitFieldEnum( "IS_CUSTOM", "SHOW_PARTY", "SHOW_NON_PARTY", "SHOW_EMPTY", "SHOW_FIRST_EMPTY" ) --[[ @ 0]]
DataSources.DirectorPartyList = DataSourceHelpers.ListSetup( "DirectorPartyList", function ( f19_arg0, f19_arg1 )
	return CoD.DirectorUtility.DirectorPartyAndCustomListHelper( f19_arg0, f19_arg1, CoD.DirectorUtility.DirectorListFlags.SHOW_PARTY )
end, true ) --[[ @ 0]]
DataSources.DirectorPartyListWithEmpty = DataSourceHelpers.ListSetup( "DirectorPartyListWithEmpty", function ( f20_arg0, f20_arg1 )
	return CoD.DirectorUtility.DirectorPartyAndCustomListHelper( f20_arg0, f20_arg1, CoD.DirectorUtility.DirectorListFlags.SHOW_PARTY | CoD.DirectorUtility.DirectorListFlags.SHOW_EMPTY )
end, true ) --[[ @ 0]]
DataSources.DirectorPartyListWithFirstEmpty = DataSourceHelpers.ListSetup( "DirectorPartyListWithFirstEmpty", function ( f21_arg0, f21_arg1 )
	return CoD.DirectorUtility.DirectorPartyAndCustomListHelper( f21_arg0, f21_arg1, CoD.DirectorUtility.DirectorListFlags.SHOW_PARTY | CoD.DirectorUtility.DirectorListFlags.SHOW_FIRST_EMPTY )
end, true ) --[[ @ 0]]
DataSources.DirectorPartyListHorizontal = DataSourceHelpers.ListSetup( "DirectorPartyListHorizontal", function ( f22_arg0, f22_arg1 )
	return CoD.DirectorUtility.DirectorPartyAndCustomListHelper( f22_arg0, f22_arg1, CoD.DirectorUtility.DirectorListFlags.SHOW_PARTY | CoD.DirectorUtility.DirectorListFlags.SHOW_FIRST_EMPTY )
end, true, {
	getWidgetTypeForItem = function ( f23_arg0, f23_arg1, f23_arg2 )
		if f23_arg2 == 1 then
			return CoD.DirectorLobbyMember
		else
			return CoD.DirectorLobbyMemberNeverExpand
		end
	end
} ) --[[ @ 0]]
DataSources.DirectorPartyListCustom = DataSourceHelpers.ListSetup( "DirectorPartyListCustom", function ( f24_arg0, f24_arg1 )
	return CoD.DirectorUtility.DirectorPartyAndCustomListHelper( f24_arg0, f24_arg1, CoD.DirectorUtility.DirectorListFlags.IS_CUSTOM | CoD.DirectorUtility.DirectorListFlags.SHOW_PARTY | CoD.DirectorUtility.DirectorListFlags.SHOW_NON_PARTY | CoD.DirectorUtility.DirectorListFlags.SHOW_EMPTY )
end, true, nil, function ( f25_arg0, f25_arg1, f25_arg2 )
	if not f25_arg1.__directorPartyListCustomSubscriptions then
		f25_arg1.__directorPartyListCustomSubscriptions = true --[[ @ 0]]
		local f25_local0 = f25_arg1 --[[ @ 0]]
		local f25_local1 = f25_arg1.subscribeToModel --[[ @ 0]]
		local f25_local2 = Engine[@"getglobalmodel"]() --[[ @ 0]]
		f25_local1( f25_local0, f25_local2.MapVote.mapVoteGameModeNext, function ( f26_arg0 )
			f25_arg1:updateDataSource( false, false ) --[[ @ 0]]
		end ) --[[ @ 0]]
	end
end ) --[[ @ 0]]
DataSources.DirectorLobbyNonPartyList = DataSourceHelpers.ListSetup( "DirectorLobbyNonPartyList", function ( f27_arg0, f27_arg1 )
	return CoD.DirectorUtility.DirectorPartyAndCustomListHelper( f27_arg0, f27_arg1, CoD.DirectorUtility.DirectorListFlags.SHOW_NON_PARTY | CoD.DirectorUtility.DirectorListFlags.SHOW_EMPTY )
end, true ) --[[ @ 0]]
DataSources.DirectorLobbyListAll = DataSourceHelpers.ListSetup( "DirectorLobbyListAll", function ( f28_arg0, f28_arg1 )
	return CoD.DirectorUtility.DirectorPartyAndCustomListHelper( f28_arg0, f28_arg1, CoD.DirectorUtility.DirectorListFlags.SHOW_PARTY | CoD.DirectorUtility.DirectorListFlags.SHOW_NON_PARTY )
end, true ) --[[ @ 0]]
CoD.DirectorUtility.PlaylistIDToPlaylistName = function ( f29_arg0 )
	if not IsLobbyNetworkModeLive() then
		return @"hash_0"
	end
	local f29_local0 = Engine[@"getplaylistinfobyid"]( f29_arg0 ) --[[ @ 0]]
	local f29_local1 --[[ @ 0]]
	if f29_local0 then
		f29_local1 = f29_local0.name --[[ @ 0]]
		if not f29_local1 then
		
		else
			return f29_local1
		end
	end
	f29_local1 = @"hash_0" --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorUtility.PlaylistIDToPlaylistIcon = function ( f30_arg0 )
	if not IsLobbyNetworkModeLive() then
		return @"blacktransparent"
	end
	local f30_local0 = Engine[@"getplaylistinfobyid"]( f30_arg0 ) --[[ @ 0]]
	local f30_local1 --[[ @ 0]]
	if f30_local0 then
		f30_local1 = f30_local0.image --[[ @ 0]]
		if not f30_local1 then
		
		else
			return f30_local1
		end
	end
	f30_local1 = @"blacktransparent" --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorUtility.PlaylistIDToPlaylistImage = function ( f31_arg0 )
	if not IsLobbyNetworkModeLive() then
		return @"blacktransparent"
	end
	local f31_local0 = Engine[@"getplaylistinfobyid"]( f31_arg0 ) --[[ @ 0]]
	local f31_local1 --[[ @ 0]]
	if f31_local0 then
		f31_local1 = f31_local0.imageBackground --[[ @ 0]]
		if not f31_local1 then
		
		else
			return f31_local1
		end
	end
	f31_local1 = @"blacktransparent" --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorUtility.PlaylistIDToPlaylistImageTileSideInfo = function ( f32_arg0 )
	if not IsLobbyNetworkModeLive() then
		return @"blacktransparent"
	else
		local f32_local0 = Engine[@"getplaylistinfobyid"]( f32_arg0 ) --[[ @ 0]]
		if f32_local0 then
			local f32_local1 = f32_local0.imageTileSideInfo --[[ @ 0]]
			if not f32_local1 then
				f32_local1 = f32_local0.imageBackground or @"blacktransparent" --[[ @ 0]]
			end
			return f32_local1
		else
			return @"blacktransparent"
		end
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.PlaylistIDToPlaylistImageTileSmall = function ( f33_arg0 )
	if not IsLobbyNetworkModeLive() then
		return @"blacktransparent"
	else
		local f33_local0 = Engine[@"getplaylistinfobyid"]( f33_arg0 ) --[[ @ 0]]
		if f33_local0 then
			local f33_local1 = f33_local0.imageTileSmall --[[ @ 0]]
			if not f33_local1 then
				f33_local1 = f33_local0.imageBackground or @"blacktransparent" --[[ @ 0]]
			end
			return f33_local1
		else
			return @"blacktransparent"
		end
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.IsPlaylistGametype = function ( f34_arg0, f34_arg1 )
	if not IsLobbyNetworkModeLive() then
		return false
	elseif #f34_arg0.rotationList > 0 then
		local f34_local0 = Engine[@"hash_1F2CD89B3C345FD3"]( f34_arg0.rotationList[1].gametype ) --[[ @ 0]]
		if f34_local0 then
			return f34_local0.gametype == f34_arg1
		end
	end
	return false
end
 --[[ @ 0]]
CoD.DirectorUtility.PlaylistIDToZMPlaylistImage = function ( f35_arg0 )
	if not IsLobbyNetworkModeLive() then
		return @"blacktransparent"
	else
		local f35_local0 = Engine[@"getplaylistinfobyid"]( f35_arg0 ) --[[ @ 0]]
		if f35_local0 then
			if f35_local0.isQuickplayCard then
				return f35_local0.imageTileLarge or @"blacktransparent"
			elseif f35_local0[@"featured"] then
				local f35_local1 = f35_local0.imageTileSideInfo --[[ @ 0]]
				if not f35_local1 then
					f35_local1 = f35_local0.imageBackground or @"blacktransparent" --[[ @ 0]]
				end
				return f35_local1
			elseif not f35_local0.excludePublicLobby or CoD.DirectorUtility.IsPlaylistGametype( f35_local0, @"ztutorial" ) then
				return f35_local0.imageTileLarge or @"blacktransparent"
			else
				return f35_local0.imageTileSmall or @"blacktransparent"
			end
		else
			return @"blacktransparent"
		end
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.PlaylistIDToZMPlaylistName = function ( f36_arg0 )
	if not IsLobbyNetworkModeLive() then
		return @"hash_0"
	end
	local f36_local0 = Engine[@"getplaylistinfobyid"]( f36_arg0 ) --[[ @ 0]]
	if f36_local0 then
		if not f36_local0.excludePublicLobby or #f36_local0.rotationList > 1 or CoD.DirectorUtility.IsPlaylistGametype( f36_local0, @"ztutorial" ) then
			return f36_local0.name or @"hash_0"
		elseif #f36_local0.rotationList > 0 then
			local f36_local1 = f36_local0.rotationList[1].map --[[ @ 0]]
			if CoD.DirectorUtility.IsPlaylistGametype( f36_local0, @"ztrials" ) then
				return CoD.MapUtility.GetMapValue( f36_local1, CoD.ZombieUtility.GetTrialMapNameFieldName( CoD.ZombieUtility.GetZMPlaylistTrialVariant( f36_local0 ) ), @"hash_0" )
			else
				return CoD.MapUtility.GetMapValue( f36_local1, "mapName", @"hash_0" )
			end
		end
	end
	return @"hash_0"
end
 --[[ @ 0]]
CoD.DirectorUtility.PlaylistIDToZMPlaylistSubtitle = function ( f37_arg0 )
	if not IsLobbyNetworkModeLive() then
		return @"hash_0"
	end
	local f37_local0 = Engine[@"getplaylistinfobyid"]( f37_arg0 ) --[[ @ 0]]
	if f37_local0 and f37_local0.excludePublicLobby and not CoD.DirectorUtility.IsPlaylistGametype( f37_local0, @"ztutorial" ) then
		local f37_local1 = Engine[@"hash_1F2CD89B3C345FD3"]( f37_local0.rotationList[1].gametype ) --[[ @ 0]]
		if f37_local1 then
			return CoD.GameTypeUtility.GameTypeToLocalizeToUpperName( f37_local1.gametype )
		end
	end
	return @"hash_0"
end
 --[[ @ 0]]
CoD.DirectorUtility.PlaylistIDToZMPlaylistDifficulty = function ( f38_arg0 )
	if not IsLobbyNetworkModeLive() then
		return @"blacktransparent"
	else
		local f38_local0 = Engine[@"getplaylistinfobyid"]( f38_arg0 ) --[[ @ 0]]
		if f38_local0 and f38_local0.excludePublicLobby and CoD.DirectorUtility.IsPlaylistGametype( f38_local0, @"zclassic" ) and CoD.ZombieUtility then
			local f38_local1 = {
				"ui_icon_difficulty_zm_casual_large",
				"ui_icon_difficulty_zm_normal_large",
				"ui_icon_difficulty_zm_hardcore_large",
				"ui_icon_difficulty_zm_realistic_large"
			} --[[ @ 0]]
			return f38_local1[CoD.ZombieUtility.GetZMPlaylistDifficulty( f38_local0 ) + 1]
		else
			return @"blacktransparent"
		end
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.PlaylistIDToPlaylistDesc = function ( f39_arg0 )
	if not IsLobbyNetworkModeLive() then
		return ""
	end
	local f39_local0 = Engine[@"getplaylistinfobyid"]( f39_arg0 ) --[[ @ 0]]
	local f39_local1 --[[ @ 0]]
	if f39_local0 then
		f39_local1 = f39_local0.description --[[ @ 0]]
		if not f39_local1 then
		
		else
			return f39_local1
		end
	end
	f39_local1 = "" --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorUtility.SetPlaylist = function ( f40_arg0, f40_arg1 )
	Engine[@"setplaylistid"]( f40_arg1.playlistID ) --[[ @ 0]]
	LuaUtils.SetQuickplayPlaylistID( f40_arg1.playlistID ) --[[ @ 0]]
	CoD.DirectorUtility.SaveCurrentPlaylistForMainMode( f40_arg0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorUtility.UpdateChosenPlaylist = function ( f41_arg0 )
	Engine[@"lobbyevent"]( "OnGameLobbyGameServerDataUpdate", {} ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorUtility.DifficultyToLocalizedDifficultyName = function ( f42_arg0 )
	if f42_arg0 == -1 then
		return @"hash_0"
	else
		return Engine[@"toupper"]( CoD.ZombieUtility.GetDifficultyText( f42_arg0 ) )
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.GetCustomGamesName = function ( f43_arg0 )
	if IsZombies() then
		return @"hash_60D3DE85892CAF1F"
	else
		return f43_arg0
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.TrialsMapEnabledDvars = {
	[@"zm_orange"] = @"hash_23B9C106CFCDE18B"
} --[[ @ 0]]
DataSources.DirectorMapList = DataSourceHelpers.ListSetup( "DirectorMapList", function ( f44_arg0, f44_arg1 )
	local f44_local0 = {} --[[ @ 0]]
	local f44_local1 = LobbyData.GetCurrentMenuTarget() --[[ @ 0]]
	CoD.perController[f44_arg0].mapCategory = 0 --[[ @ 0]]
	local f44_local2 = {} --[[ @ 0]]
	local f44_local3 = {
		[@"zclassic"] = @"hash_4B1B381DE2ADC014",
		[@"ztrials"] = @"hash_37EEA154A1D4F3C1",
		[@"zgrief"] = @"hash_704F1EA0CA4EC9E3",
		[@"zstandard"] = @"hash_5154C514171FEE9",
		[@"ztcm"] = @"hash_D126B224D84608C",
		[@"ztutorial"] = @"hash_674923AD245EF8BE"
	} --[[ @ 0]]
	local f44_local4 = function ( f45_arg0 )
		return f44_local2[f45_arg0] ~= nil
	end
	 --[[ @ 0]]
	local f44_local5 = nil --[[ @ 0]]
	f44_local5 = function ( f46_arg0, f46_arg1 )
		return CoD.MapUtility.MapsTable[f46_arg0].uniqueID < CoD.MapUtility.MapsTable[f46_arg1].uniqueID
	end
	 --[[ @ 0]]
	local f44_local6 = function ( f47_arg0 )
		if CoD.gameModeEnum ~= CoD.MapUtility.MapsTable[f47_arg0].session_mode then
			return false
		elseif not Engine[@"ismapvalid"]( f47_arg0 ) then
			return false
		end
		local f47_local0 = Engine[@"getglobalmodel"]() --[[ @ 0]]
		f47_local0 = f47_local0:create( "lobbyRoot.selectedGameType" ) --[[ @ 0]]
		f47_local0 = f47_local0:get() --[[ @ 0]]
		if CoD.MapUtility.MapsTable[f47_arg0][f44_local3[f47_local0]] == 1 then
			if f47_local0 == @"ztrials" then
				local f47_local1 = CoD.DirectorUtility.TrialsMapEnabledDvars[f47_arg0] --[[ @ 0]]
				if not f47_local1 or not IsBooleanDvarSet( f47_local1 ) then
					return false
				end
			else
				return false
			end
		end
		local f47_local1 = false --[[ @ 0]]
		local f47_local2 = LobbyData.GetCurrentMenuTarget() --[[ @ 0]]
		if f47_local2[@"name"] == LuaEnum.UI.DIRECTOR_ONLINE_CP_STORY then
			f47_local1 = CoD.MapUtility.MapsTable[f47_arg0].dlc_pack == 4 --[[ @ 0]]
		else
			f47_local1 = CoD.MapUtility.MapsTable[f47_arg0].dlc_pack > -1 --[[ @ 0]]
		end
		if Dvar[@"ui_execdemo"]:get() and f47_local1 then
			f47_local1 = isMapInDemo( f47_arg0 ) --[[ @ 0]]
		end
		if Engine[@"hash_77D47312EBA41751"]() and f47_local1 then
			f47_local1 = f44_local4( f47_arg0 ) --[[ @ 0]]
		end
		if f47_local2[@"lobbymode"] == Enum[@"lobbymode"][@"hash_3B3A1BBF18C0B176"] and CoD.MapUtility.MapsTable[f47_arg0][@"combattrainingenabled"] ~= 1 then
			return false
		elseif CoD.MapUtility.MapsTable[f47_arg0].isSubLevel then
			return false
		end
		return f47_local1
	end
	 --[[ @ 0]]
	local f44_local7 = Engine[@"sessionmodeismode"]( Enum[@"enetworkmodes"][@"mode_network_offline"] ) --[[ @ 0]]
	local f44_local8 = 1 --[[ @ 0]]
	local f44_local9 = Engine[@"converttoxhash"]( Engine[@"lobbygetmap"]() ) --[[ @ 0]]
	if f44_local7 == false then
		local f44_local10 = false --[[ @ 0]]
		for f44_local26, f44_local27 in LUI.IterateTableBySortedKeys( CoD.MapUtility.MapsTable, f44_local5, f44_local6 ) --[[ @ 0]] do
			if f44_local27.mapName == nil then
				LuaUtils.UI_ShowErrorMessageDialog( f44_arg0, "Map Name field for " .. f44_local26 .. " cannot be empty" ) --[[ @ 0]]
			end
			local f44_local14 = f44_local26 == f44_local9 --[[ @ 0]]
			if not f44_local10 then
				f44_local10 = f44_local14 --[[ @ 0]]
			end
			local f44_local15 = f44_local27.mapDescription and CoD.StoreUtility.AddUpsellToDescriptionIfNeeded( f44_arg0, f44_local26, Engine[@"hash_4F9F1239CFD921FE"]( f44_local27.mapDescription ) ) or "" --[[ @ 0]]
			if CoD.DirectorUtility.IsOfflineOnlyDemo() then
				f44_local15 = nil --[[ @ 0]]
			end
			local f44_local16 = Engine[@"getglobalmodel"]() --[[ @ 0]]
			f44_local16 = f44_local16:create( "lobbyRoot.selectedGameType" ) --[[ @ 0]]
			local f44_local17 = 0 --[[ @ 0]]
			if f44_local16 and f44_local16:get() == @"ztrials" then
				local f44_local18 = CoD.MapUtility.GetMapValue( f44_local26, @"hash_4C3A04783CB1D6BE", @"hash_0" ) --[[ @ 0]]
				if f44_local18 ~= @"hash_0" then
					f44_local17 = Engine[@"getdvarint"]( f44_local18 ) or 0 --[[ @ 0]]
				end
				f44_local17 = math.min( f44_local17, CoD.MapUtility.GetMapValue( f44_local26, @"hash_64D5E4CA4AC8AFEB", 0 ) ) --[[ @ 0]]
			end
			for f44_local18 = 0 --[[ @ 0]], f44_local17, 1 do
				if f44_local16 and f44_local16:get() == @"ztrials" then
					local f44_local21 = Engine[@"getglobalmodel"]() --[[ @ 0]]
					f44_local21 = f44_local21:create( "localZMTrialVariant" ) --[[ @ 0]]
					if f44_local14 then
						local f44_local22 = f44_local21:get() --[[ @ 0]]
						if not f44_local22 then
							f44_local22 = 0 --[[ @ 0]]
						end
						f44_local14 = f44_local18 == f44_local22 --[[ @ 0]]
					end
					if not f44_local10 then
						f44_local10 = f44_local14 --[[ @ 0]]
					end
				end
				local f44_local21 = table.insert --[[ @ 0]]
				local f44_local22 = f44_local0 --[[ @ 0]]
				local f44_local23 = {
					models = {
						id = f44_local26,
						name = @"hash_0",
						text = Engine[@"localize"]( f44_local27.mapName ),
						buttonText = Engine[@"localize"]( CoD.StoreUtility.PrependPurchaseIconIfNeeded( f44_arg0, f44_local26, f44_local27.mapName ) ),
						image = f44_local27.previewImage,
						difficulty = 1,
						trialVariant = f44_local18
					}
				} --[[ @ 0]]
				local f44_local24 = {
					mapName = f44_local26,
					selectIndex = f44_local14
				} --[[ @ 0]]
				local f44_local25 = Engine[@"hash_77D47312EBA41751"]() --[[ @ 0]]
				if not f44_local25 then
					f44_local25 = Engine[@"hash_5CB675CA7856DA25"]() --[[ @ 0]]
				end
				f44_local24.disabled = f44_local25 --[[ @ 0]]
				f44_local24.purchasable = not Engine[@"ismapvalid"]( f44_local26 ) --[[ @ 0]]
				f44_local23.properties = f44_local24 --[[ @ 0]]
				f44_local21( f44_local22, f44_local23 ) --[[ @ 0]]
				if f44_local14 then
					Engine[@"setgametypesetting"]( "zmTrialsVariant", f44_local18 ) --[[ @ 0]]
					CoD.ZombieUtility.SetLocalZMTrialVariantModel( f44_local18 ) --[[ @ 0]]
					f44_local21 = Engine[@"lobbygetcontrollinglobbysession"]( Enum[@"lobbymodule"][@"lobby_module_host"] ) --[[ @ 0]]
					Engine[@"lobbyevent"]( "OnGametypeSettingsChange", {
						lobbyModule = Enum[@"lobbymodule"][@"lobby_module_host"],
						lobbyType = f44_local21,
						fromUI = true
					} ) --[[ @ 0]]
					Engine[@"lobbyhostsessionsetdirty"]( f44_local21, Enum[@"sessiondirty"][@"session_dirty_state"] ) --[[ @ 0]]
				end
			end
		end
		if not f44_local10 and #f44_local0 > 0 then
			SetMap( f44_arg0, CoD.MapUtility.MapsTable[f44_local0[1].properties.mapName].mapToLoad, false ) --[[ @ 0]]
			f44_local0[1].properties.selectIndex = true --[[ @ 0]]
			Engine[@"setgametypesetting"]( "zmTrialsVariant", f44_local0[1].models.trialVariant ) --[[ @ 0]]
			CoD.ZombieUtility.SetLocalZMTrialVariantModel( f44_local0[1].models.trialVariant ) --[[ @ 0]]
			f44_local11 = Engine[@"lobbygetcontrollinglobbysession"]( Enum[@"lobbymodule"][@"lobby_module_host"] ) --[[ @ 0]]
			Engine[@"lobbyevent"]( "OnGametypeSettingsChange", {
				lobbyModule = Enum[@"lobbymodule"][@"lobby_module_host"],
				lobbyType = f44_local11,
				fromUI = true
			} ) --[[ @ 0]]
			Engine[@"lobbyhostsessionsetdirty"]( f44_local11, Enum[@"sessiondirty"][@"session_dirty_state"] ) --[[ @ 0]]
		end
	end
	local f44_local10 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f44_local10 = f44_local10:create( "lobbyRoot.selectedGameType" ) --[[ @ 0]]
	if f44_local10 and f44_local10:get() == @"ztutorial" then
		local f44_local11 = {} --[[ @ 0]]
		local f44_local12 = Engine[@"getgametypesetting"]( @"zmdifficulty" ) --[[ @ 0]]
		local f44_local13 = {
			@"hash_364122F25F791280",
			@"hash_C9580DAB628ED90"
		} --[[ @ 0]]
		local f44_local26 = false --[[ @ 0]]
		for f44_local27 = 1 --[[ @ 0]], #f44_local0, 1 do
			local f44_local17 = f44_local0[f44_local27] --[[ @ 0]]
			for f44_local18 = 0 --[[ @ 0]], 1, 1 do
				local f44_local21 --[[ @ 0]]
				if f44_local17.models.id ~= f44_local9 or f44_local18 ~= f44_local12 then
					f44_local21 = false --[[ @ 0]]
				else
					f44_local21 = true --[[ @ 0]]
				end
				if not f44_local26 then
					f44_local26 = f44_local21 --[[ @ 0]]
				end
				table.insert( f44_local11, {
					models = {
						id = f44_local17.models.id,
						name = f44_local13[f44_local18 + 1],
						text = f44_local17.models.text,
						buttonText = f44_local17.models.buttonText,
						image = f44_local17.models.image,
						difficulty = f44_local18
					},
					properties = {
						mapName = f44_local17.properties.mapName,
						selectIndex = f44_local21,
						disabled = f44_local17.properties.disabled,
						purchasable = f44_local17.properties.purchasable
					}
				} ) --[[ @ 0]]
			end
		end
		if not f44_local26 then
			f44_local11[1].properties.selectIndex = true --[[ @ 0]]
		end
		f44_local0 = f44_local11 --[[ @ 0]]
	end
	return f44_local0
end, true ) --[[ @ 0]]
DataSources.CustomGamesMapModeTabs = DataSourceHelpers.ListSetup( "CustomGamesMapModeTabs", function ( f48_arg0, f48_arg1 )
	local f48_local0 = "CoD.DirectorChooseGameTypeFrame" --[[ @ 0]]
	if IsZombies() then
		f48_local0 = "CoD.DirectorChooseGameTypeFrameZM" --[[ @ 0]]
	elseif IsWarzone() then
		f48_local0 = "CoD.DirectorChooseGameTypeFrameWZ" --[[ @ 0]]
	end
	local f48_local1 = {} --[[ @ 0]]
	table.insert( f48_local1, {
		models = {
			tabName = @"hash_5ED2FACC41C9E672",
			frameWidget = f48_local0
		}
	} ) --[[ @ 0]]
	if not IsWarzone() then
		table.insert( f48_local1, {
			models = {
				tabName = @"hash_357456FA52303FCB",
				frameWidget = "CoD.DirectorChooseMapFrame"
			}
		} ) --[[ @ 0]]
	end
	return f48_local1
end, true ) --[[ @ 0]]
DataSourceHelpers.PerControllerDataSourceSetup( "MapModePreview", "MapModePreview", function ( f49_arg0, f49_arg1 )
	local f49_local0 = f49_arg0:create( "mapName" ) --[[ @ 0]]
	f49_local0:set( Engine[@"converttoxhash"]( Engine[@"lobbygetmap"]() ) ) --[[ @ 0]]
	f49_local0 = f49_arg0:create( "modeName" ) --[[ @ 0]]
	f49_local0:set( Dvar[@"g_gametype"]:get() ) --[[ @ 0]]
end, true ) --[[ @ 0]]
CoD.DirectorUtility.CombatTrainingGameTypes = {
	"ct_recon",
	"ct_ruin",
	"ct_firebreak",
	"ct_nomad",
	"ct_battery",
	"ct_prophet",
	"ct_seraph",
	"ct_crash",
	"ct_torque",
	"ct_ajax"
} --[[ @ 0]]
CoD.DirectorUtility.IsGameTypeCombatTraining = function ( f50_arg0 )
	for f50_local3, f50_local4 in ipairs( CoD.DirectorUtility.CombatTrainingGameTypes ) --[[ @ 0]] do
		if f50_local4 == f50_arg0 then
			return true
		end
	end
	return false
end
 --[[ @ 0]]
DataSources.DirectorGameTypeList = DataSourceHelpers.ListSetup( "DirectorGameTypeList", function ( f51_arg0, f51_arg1 )
	local f51_local0 = {} --[[ @ 0]]
	local f51_local1 = Engine[@"createmodel"]( Engine[@"createmodel"]( Engine[@"getmodel"]( Engine[@"getglobalmodel"](), "lobbyRoot" ), "lobbyList" ), "playerCount" ) --[[ @ 0]]
	local f51_local2 = Engine[@"getmodelvalue"]( f51_local1 ) or 0 --[[ @ 0]]
	local f51_local3 = LobbyData.GetCurrentMenuTarget() --[[ @ 0]]
	local f51_local4 = Engine[@"getgametypesbase"]() --[[ @ 0]]
	local f51_local5 = Engine[@"lobbygetgametype"]() --[[ @ 0]]
	if f51_local3[@"lobbymode"] == Enum[@"lobbymode"][@"hash_3B3A1BBF18C0B176"] then
		for f51_local9, f51_local10 in ipairs( CoD.DirectorUtility.CombatTrainingGameTypes ) --[[ @ 0]] do
			local f51_local11 = Engine[@"getgametypeinfo"]( f51_local10 ) --[[ @ 0]]
			table.insert( f51_local0, {
				models = {
					id = f51_local10,
					name = f51_local11.name,
					detailedDesc = f51_local11.descriptionRef and Engine[@"hash_4F9F1239CFD921FE"]( f51_local11.descriptionRef ) or "",
					tooltipArchetype = CoD.FreeCursorUtility.TooltipArchetypes.FEATURE_TITLE,
					available = true
				},
				properties = {
					selectIndex = f51_local10 == f51_local5
				}
			} ) --[[ @ 0]]
		end
	else
		local f51_local6 = function ( f52_arg0, f52_arg1 )
			local f52_local0 = {} --[[ @ 0]]
			if f52_arg0 == Enum[@"lobbymainmode"][@"lobby_mainmode_zm"] then
				f52_local0 = {
					@"zclassic",
					@"zstandard",
					@"ztrials",
					@"ztcm",
					@"ztutorial"
				} --[[ @ 0]]
			end
			for f52_local4, f52_local5 in ipairs( f52_local0 ) --[[ @ 0]] do
				if f52_local5 == f52_arg1 then
					return f52_local4
				end
			end
			return #f52_local0 + 1
		end
		 --[[ @ 0]]
		for f51_local10, f51_local11 in pairs( f51_local4 ) --[[ @ 0]] do
			if f51_local11.category == "standard" or f51_local3[@"mainmode"] == Enum[@"lobbymainmode"][@"lobby_mainmode_cp"] or f51_local3[@"mainmode"] == Enum[@"lobbymainmode"][@"lobby_mainmode_zm"] and f51_local11.category ~= "hidden" then
				local f51_local12 = Engine[@"getgametypeinfo"]( f51_local11.gametype ) --[[ @ 0]]
				local f51_local13 = Engine[@"converttoxhash"]( f51_local11.gametype ) --[[ @ 0]]
				local f51_local14 = Engine[@"converttoxhash"]( f51_local12.groupName ) --[[ @ 0]]
				if f51_local3[@"lobbymode"] ~= Enum[@"lobbymode"][@"lobby_mode_custom"] or f51_local3[@"mainmode"] ~= Enum[@"lobbymainmode"][@"lobby_mainmode_zm"] or f51_local13 == @"zclassic" or IsLobbyNetworkModeLAN() and not CoD.DirectorUtility.IsOfflineScreenStateCustomGame() then
					if f51_local14 ~= @"ztcm" and (f51_local13 ~= @"ztrials" or not IsBooleanDvarSet( @"hash_70431CAAEFB37761" ) and f51_local13 == @"ztrials") and (f51_local13 ~= @"ztutorial" or f51_local13 == @"ztutorial" and f51_local2 == 1) then
						table.insert( f51_local0, {
							models = {
								id = f51_local11.gametype,
								name = f51_local11.name,
								detailedDesc = f51_local12.descriptionRef and Engine[@"hash_4F9F1239CFD921FE"]( f51_local12.descriptionRef ) or "",
								tooltipArchetype = CoD.FreeCursorUtility.TooltipArchetypes.FEATURE_TITLE,
								available = true
							},
							properties = {
								selectIndex = f51_local11.gametype == f51_local5,
								sortIndex = f51_local6( f51_local3[@"mainmode"], f51_local13 )
							}
						} ) --[[ @ 0]]
					end
				end
			end
		end
		table.sort( f51_local0, function ( f53_arg0, f53_arg1 )
			if not f53_arg0.properties.sortIndex or not f53_arg1.properties.sortIndex then
				return not f53_arg1.properties.sortIndex
			else
				return f53_arg0.properties.sortIndex < f53_arg1.properties.sortIndex
			end
		end ) --[[ @ 0]]
	end
	if f51_arg1.playerCountSubscription == nil then
		f51_arg1.playerCountSubscription = f51_arg1:subscribeToModel( f51_local1, function ()
			f51_arg1:updateDataSource() --[[ @ 0]]
		end, false ) --[[ @ 0]]
	end
	return f51_local0
end, true ) --[[ @ 0]]
CoD.DirectorUtility.GetCombatTrainingMapIterator = function ()
	return LUI.IterateTableBySortedKeys( CoD.mapsTable, function ( f56_arg0, f56_arg1 )
		return CoD.mapsTable[f56_arg0].uniqueID < CoD.mapsTable[f56_arg1].uniqueID
	end
	, function ( f57_arg0 )
		local f57_local0 --[[ @ 0]]
		if CoD.mapsTable[f57_arg0].session_mode ~= Enum[@"emodes"][@"mode_multiplayer"] or CoD.mapsTable[f57_arg0][@"combattrainingenabled"] ~= 1 then
			f57_local0 = false --[[ @ 0]]
		else
			f57_local0 = true --[[ @ 0]]
		end
		return f57_local0
	end
	 )
end
 --[[ @ 0]]
DataSources.DirectorSuggestedActivities = DataSourceHelpers.ListSetup( "DirectorSuggestedActivities", function ( f58_arg0, f58_arg1 )
	local f58_local0 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f58_local0 = f58_local0.LobbyClients --[[ @ 0]]
	if not f58_arg1._lobbyMembersChangedSubscription then
		f58_arg1._lobbyMembersChangedSubscription = f58_arg1:subscribeToModel( f58_local0.membersChanged, function ()
			f58_arg1:updateDataSource() --[[ @ 0]]
		end, false ) --[[ @ 0]]
	end
	if f58_arg1._lobbyMembersSuggestionSubscriptions ~= nil and #f58_arg1._lobbyMembersSuggestionSubscriptions > 0 then
		for f58_local4, f58_local5 in ipairs( f58_arg1._lobbyMembersSuggestionSubscriptions ) --[[ @ 0]] do
			f58_arg1:removeSubscription( f58_local5 ) --[[ @ 0]]
		end
	end
	f58_arg1._lobbyMembersSuggestionSubscriptions = {} --[[ @ 0]]
	local f58_local1 = Engine[@"hash_38020859DF7AAF7B"]( Enum[@"lobbymodule"][@"lobby_module_client"], Enum[@"lobbytype"][@"lobby_type_private"] ) --[[ @ 0]]
	local f58_local2 = {} --[[ @ 0]]
	for f58_local6, f58_local7 in ipairs( f58_local1 ) --[[ @ 0]] do
		local f58_local8 = f58_local0[Engine[@"xuidtostring"]( f58_local7 )].playerSuggestion --[[ @ 0]]
		table.insert( f58_arg1._lobbyMembersSuggestionSubscriptions, f58_arg1:subscribeToModel( f58_local8, function ()
			f58_arg1:updateDataSource() --[[ @ 0]]
		end, false ) ) --[[ @ 0]]
		local f58_local9 = f58_local8:get() --[[ @ 0]]
		if f58_local9 ~= nil and f58_local9 ~= 0 then
			if f58_local2[f58_local9] == nil then
				f58_local2[f58_local9] = {
					f58_local7
				} --[[ @ 0]]
			else
				table.insert( f58_local2[f58_local9], f58_local7 ) --[[ @ 0]]
			end
		end
	end
	f58_local3 = {} --[[ @ 0]]
	f58_local4 = 1 --[[ @ 0]]
	for f58_local8, f58_local9 in pairs( f58_local2 ) --[[ @ 0]] do
		local f58_local10 = "DirectorSuggestedActivities_" .. f58_local4 --[[ @ 0]]
		DataSources[f58_local10] = DataSourceHelpers.ListSetup( f58_local10, function ( f61_arg0, f61_arg1 )
			local f61_local0 = {} --[[ @ 0]]
			for f61_local4, f61_local5 in ipairs( f58_local9 ) --[[ @ 0]] do
				table.insert( f61_local0, {
					models = {
						xuid = f61_local5
					}
				} ) --[[ @ 0]]
			end
			return f61_local0
		end ) --[[ @ 0]]
		local f58_local11 = Engine[@"getplaylistinfobyid"]( f58_local8 ) --[[ @ 0]]
		table.insert( f58_local3, {
			models = {
				icon = f58_local11.image,
				mode = f58_local11.mainMode,
				name = f58_local11.name,
				playlist = f58_local8,
				detailedDescription = Engine[@"localize"]( @"hash_AA599434213FFE3", f58_local11.description ),
				tooltipArchetype = CoD.FreeCursorUtility.TooltipArchetypes.FEATURE_TITLE,
				xuidDataSource = f58_local10,
				playerListDataSource = f58_local10,
				action = CoD.DirectorUtility.CardNavigateToLobby,
				secondaryAction = CoD.ArenaUtility.CardDisplayDetails
			},
			properties = {
				param = {
					mode = f58_local11.mainMode,
					playlist = f58_local8
				}
			}
		} ) --[[ @ 0]]
		f58_local4 = f58_local4 + 1 --[[ @ 0]]
	end
	f58_local0.SuggestedActivityCount:set( #f58_local3 ) --[[ @ 0]]
	return f58_local3
end, true ) --[[ @ 0]]
DataSources.PlayerListDataSourceDefault = DataSourceHelpers.ListSetup( "PlayerListDataSourceDefault", function ( f62_arg0, f62_arg1 )
	return {}
end, true ) --[[ @ 0]]
CoD.DirectorUtility.DirectorSelectTabValues = {
	Home = 1,
	Play = 2
} --[[ @ 0]]
CoD.DirectorUtility.AddLobbyNavSubscriptionOnce = function ( f63_arg0 )
	if not f63_arg0._hasLobbyNavSubscription then
		f63_arg0._hasLobbyNavSubscription = true --[[ @ 0]]
		f63_arg0:subscribeToModel( Engine[@"createmodel"]( Engine[@"getglobalmodel"](), "lobbyRoot.lobbyNav" ), function ()
			f63_arg0:updateDataSource( false, false ) --[[ @ 0]]
		end, false ) --[[ @ 0]]
		local f63_local0 = f63_arg0 --[[ @ 0]]
		local f63_local1 = f63_arg0.subscribeToModel --[[ @ 0]]
		local f63_local2 = Engine[@"getglobalmodel"]() --[[ @ 0]]
		f63_local1( f63_local0, f63_local2.lobbyRoot.privateClient.count, function ()
			f63_arg0:updateDataSource( false, false ) --[[ @ 0]]
		end, false ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.AddInstallSubscriptionOnce = function ( f66_arg0 )
	if not f66_arg0._hasInstallSubscription then
		f66_arg0._hasInstallSubscription = true --[[ @ 0]]
		local f66_local0 = Engine[@"createmodel"]( Engine[@"getglobalmodel"](), "lobbyRoot.percentInstalled" ) --[[ @ 0]]
		local f66_local1 = Engine[@"createmodel"]( Engine[@"getglobalmodel"](), "lobbyRoot.owns_MP" ) --[[ @ 0]]
		local f66_local2 = Engine[@"createmodel"]( Engine[@"getglobalmodel"](), "lobbyRoot.owns_ZM" ) --[[ @ 0]]
		local f66_local3 = function ()
			f66_arg0:updateDataSource( false, false ) --[[ @ 0]]
		end
		 --[[ @ 0]]
		f66_arg0:subscribeToModel( f66_local0, f66_local3, false ) --[[ @ 0]]
		f66_arg0:subscribeToModel( f66_local1, f66_local3, false ) --[[ @ 0]]
		f66_arg0:subscribeToModel( f66_local2, f66_local3, false ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
DataSources.DirectorSelectTabs = ListHelper_SetupDataSource( "DirectorSelectTabs", function ( f68_arg0, f68_arg1 )
	local f68_local0 = {} --[[ @ 0]]
	if not IsLobbyNetworkModeLAN() and not CoD.DirectorUtility.DisableForCurrentMilestone( f68_arg0 ) then
		table.insert( f68_local0, {
			models = {
				name = Engine[@"hash_4F9F1239CFD921FE"]( @"hash_170D6B6F438918B5" ),
				activeTab = CoD.DirectorUtility.DirectorSelectTabValues.Home,
				available = true
			}
		} ) --[[ @ 0]]
	end
	table.insert( f68_local0, {
		models = {
			name = Engine[@"hash_4F9F1239CFD921FE"]( @"hash_6A4A8D3983C3FED4" ),
			activeTab = CoD.DirectorUtility.DirectorSelectTabValues.Play,
			available = true
		},
		properties = {
			selectIndex = true
		}
	} ) --[[ @ 0]]
	CoD.DirectorUtility.AddLobbyNavSubscriptionOnce( f68_arg1 ) --[[ @ 0]]
	return f68_local0
end ) --[[ @ 0]]
CoD.DirectorUtility.GetPlaylists = function ()
	if IsLobbyNetworkModeLive() and Engine[@"getplaylistchecksum"]() ~= Engine[@"defaultid64value"]() then
		return LuaUtils.GetOnlinePlaylists()
	else
		return LuaUtils.GetOfflinePlaylists()
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.IsPlaylistRankRestrictedForPlayer = function ( f70_arg0, f70_arg1, f70_arg2 )
	local f70_local0 = f70_arg0.locked --[[ @ 0]]
	for f70_local1 = 1 --[[ @ 0]], #f70_arg0.rules, 1 do
		local f70_local4 = f70_arg0.rules[f70_local1] --[[ @ 0]]
		if f70_local4.name == @"scr_max_rank" then
			local f70_local5 = tonumber( f70_local4.value ) --[[ @ 0]]
			local f70_local6 = Engine[@"getplayerstats"]( f70_arg2, CoD.STATS_LOCATION_NORMAL, f70_arg1 ) --[[ @ 0]]
			return f70_local5 <= (f70_local6.PlayerStatsList.RANK and f70_local6.PlayerStatsList.RANK.StatValue:get() or 0)
		end
	end
	return false
end
 --[[ @ 0]]
CoD.DirectorUtility.CreateFeatureCardsFromPlaylists = function ( f71_arg0, f71_arg1 )
	CoD.DirectorUtility.Filters = {} --[[ @ 0]]
	local f71_local0 = CoD.DirectorUtility.GetPlaylists() --[[ @ 0]]
	local f71_local1 = #f71_local0 --[[ @ 0]]
	local f71_local2 = nil --[[ @ 0]]
	local f71_local3 = 1 --[[ @ 0]]
	for f71_local4 = 1 --[[ @ 0]], f71_local1, 1 do
		local f71_local7 = f71_local0[f71_local4] --[[ @ 0]]
		if f71_local7.hidden ~= true then
			local f71_local8 = LuaUtils.GetEModeForLobbyMainMode( f71_local7.lobbyMainMode ) --[[ @ 0]]
			if f71_local8 == nil or CoD.DirectorUtility.IsSessionModeAvailable( f71_arg1, f71_local8 ) then
				local f71_local9 = CoD.DirectorUtility.CreateFilter( f71_arg1, f71_local7.lobbyMainMode, "Grp" .. f71_local3, f71_local7.nameRef, f71_local7.icon, f71_local7.entries, nil, nil ) --[[ @ 0]]
				if #f71_local9.cards > 0 then
					for f71_local14, f71_local15 in ipairs( f71_local9.cards ) --[[ @ 0]] do
						if f71_local15.featured and (f71_local15.mode == nil or LuaUtils.GetDisplayNameForLobbyMainMode( f71_local15.mode ) ~= @"hash_0") then
							local f71_local13 = f71_local15.detailedDesc --[[ @ 0]]
							f71_local15.detailedDesc = nil --[[ @ 0]]
							f71_local15.descriptionText = f71_local13 --[[ @ 0]]
							f71_local15.subtitle = @"hash_0" --[[ @ 0]]
							table.insert( f71_arg0, {
								models = f71_local15,
								properties = {
									param = f71_local15
								}
							} ) --[[ @ 0]]
						end
					end
				end
			end
		end
		f71_local3 = f71_local3 + 1 --[[ @ 0]]
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.GetFirstOrFeaturedPlaylistEntry = function ( f72_arg0, f72_arg1, f72_arg2, f72_arg3, f72_arg4 )
	local f72_local0 = nil --[[ @ 0]]
	local f72_local1 = f72_arg2.mainMode --[[ @ 0]]
	local f72_local2 = f72_arg2.arena --[[ @ 0]]
	local f72_local3 = 1 --[[ @ 0]]
	local f72_local4, f72_local5 = nil --[[ @ 0]]
	local f72_local6 = false --[[ @ 0]]
	local f72_local7 = LuaUtils.GetEModeForLobbyMainMode( f72_local1 ) --[[ @ 0]]
	if f72_local7 ~= nil and not f72_arg2.isVisible() then
		f72_arg1 = LuaUtils.GetOfflinePlaylists() --[[ @ 0]]
		f72_local6 = true --[[ @ 0]]
	end
	if not f72_arg3 and not f72_local6 then
		f72_local6 = CoD.DirectorUtility.IsMainModeLocked( f72_arg0, f72_arg2 ) --[[ @ 0]]
	end
	local f72_local8 = LuaUtils.GetSelectDescriptionForEMode( f72_local7 ) --[[ @ 0]]
	local f72_local9 = nil --[[ @ 0]]
	if f72_local2 then
		if IsLobbyNetworkModeLAN() then
			for f72_local13, f72_local14 in ipairs( f72_arg1 ) --[[ @ 0]] do
				if f72_local14.nameHash == @"arena" and #f72_local14.entries > 0 then
					f72_local9 = f72_local14.entries[1].id --[[ @ 0]]
				end
			end
		else
			local f72_local10 = LuaUtils.GetCurrentEventEntry() --[[ @ 0]]
			if f72_local10 then
				local f72_local11 = LuaUtils.GetArenaEventEntryPlaylistByName( f72_local10 ) --[[ @ 0]]
				f72_local9 = f72_local11.id --[[ @ 0]]
			end
		end
	end
	for f72_local13, f72_local14 in ipairs( f72_arg1 ) --[[ @ 0]] do
		if f72_local14.lobbyMainMode == f72_local1 or f72_local14.lobbyMainMode == Enum[@"lobbymainmode"][@"lobby_mainmode_invalid"] then
			local f72_local15 --[[ @ 0]]
			if f72_local14.nameHash ~= @"arena" and f72_local14.nameHash ~= @"hash_298A15D908A3089F" then
				f72_local15 = false --[[ @ 0]]
			else
				f72_local15 = true --[[ @ 0]]
			end
			if f72_local2 == f72_local15 then
				f72_local15 = CoD.DirectorUtility.CreateFilter( f72_arg0, f72_local14.lobbyMainMode, "Grp" .. f72_local3, f72_local14.nameRef, f72_local14.icon, f72_local14.entries, f72_local1, nil ) --[[ @ 0]]
				if #f72_local15.cards > 0 then
					for f72_local20, f72_local21 in ipairs( f72_local15.cards ) --[[ @ 0]] do
						local f72_local22 = f72_local21.locked or f72_local6 --[[ @ 0]]
						if not f72_arg4 or not f72_local22 then
							if f72_local21.featured then
								local f72_local19 = f72_local21.detailedDesc --[[ @ 0]]
								f72_local21.detailedDesc = nil --[[ @ 0]]
								f72_local21.descriptionText = f72_local19 --[[ @ 0]]
								f72_local21.subtitle = @"hash_0" --[[ @ 0]]
								f72_local21.locked = f72_local22 --[[ @ 0]]
								f72_local21.description = f72_local8 --[[ @ 0]]
								if f72_local21.isQuickplayCard then
									f72_local19 = Dvar[@"ui_prioritizequickplayforshowcase"]:exists() and Dvar[@"ui_prioritizequickplayforshowcase"]:get() or -1 --[[ @ 0]]
									if f72_local19 < 0 and f72_local4 == nil then
										f72_local4 = {
											models = f72_local21,
											properties = {
												param = f72_local21
											}
										} --[[ @ 0]]
									elseif f72_local19 == 0 and f72_local5 == nil then
										f72_local5 = {
											models = f72_local21,
											properties = {
												param = f72_local21
											}
										} --[[ @ 0]]
									elseif f72_local19 > 0 then
										return {
											models = f72_local21,
											properties = {
												param = f72_local21
											}
										}
									end
								elseif f72_local5 == nil then
									f72_local5 = {
										models = f72_local21,
										properties = {
											param = f72_local21
										}
									} --[[ @ 0]]
								end
							elseif not f72_local2 then
								if f72_local4 == nil then
									f72_local21.subtitle = @"hash_0" --[[ @ 0]]
									f72_local21.locked = f72_local22 --[[ @ 0]]
									f72_local4 = {
										models = f72_local21,
										properties = {
											param = f72_local21
										}
									} --[[ @ 0]]
								end
							elseif f72_local21.playlist == f72_local9 then
								f72_local21.subtitle = @"hash_0" --[[ @ 0]]
								f72_local21.locked = f72_local22 --[[ @ 0]]
								f72_local4 = {
									models = f72_local21,
									properties = {
										param = f72_local21
									}
								} --[[ @ 0]]
							end
							if not f72_local21.iconBackground then
								f72_local21.iconBackground = @"blacktransparent" --[[ @ 0]]
							end
							if not f72_local21.iconBackgroundFocus then
								f72_local21.iconBackgroundFocus = @"blacktransparent" --[[ @ 0]]
							end
						end
					end
				end
			end
		end
		f72_local3 = f72_local3 + 1 --[[ @ 0]]
	end
	return f72_local5 or f72_local4 and f72_local8
end
 --[[ @ 0]]
CoD.DirectorUtility.HasZombie = function ()
	if CoD.isPC and CoD.PCKoreaUtility.ShowKorea15Plus() then
		return false
	else
		return true
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.HasArena = function ()
	if Dvar[@"hash_1C1B99856528FDF9"]:exists() and Dvar[@"hash_1C1B99856528FDF9"]:get() == 0 then
		return false
	else
		return true
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.DisableArenaMainMode = function ( f75_arg0, f75_arg1 )
	if not f75_arg1.arena then
		return false
	elseif IsBooleanDvarSet( @"hash_7D0DEAAF76B222DB" ) then
		return true
	elseif not IsLobbyNetworkModeLAN() and not LuaUtils.GetArenaSeason() then
		return true
	else
		return false
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.IsWZFeatureCardVisible = function ()
	if CoD.BaseUtility.IsDvarEnabled( "ui_showWZCustomGameOption" ) then
		return true
	elseif IsLobbyNetworkModeLAN() then
		return false
	else
		return true
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.MainScreenModes = {
	{
		arena = false,
		mainMode = Enum[@"lobbymainmode"][@"lobby_mainmode_mp"],
		stringIfLocked = @"menu/multiplayer",
		lockedOffline = false,
		isVisible = AlwaysTrue,
		trialDisable = true
	},
	{
		arena = true,
		mainMode = Enum[@"lobbymainmode"][@"lobby_mainmode_mp"],
		stringIfLocked = @"menu/arena",
		lockedOffline = false,
		isVisible = CoD.DirectorUtility.HasArena,
		trialDisable = true
	},
	{
		arena = false,
		mainMode = Enum[@"lobbymainmode"][@"lobby_mainmode_wz"],
		stringIfLocked = @"menu/warzone",
		lockedOffline = false,
		isVisible = CoD.DirectorUtility.IsWZFeatureCardVisible,
		trialDisable = false
	},
	{
		arena = false,
		mainMode = Enum[@"lobbymainmode"][@"lobby_mainmode_zm"],
		stringIfLocked = @"menu/zombies",
		lockedOffline = false,
		isVisible = CoD.DirectorUtility.HasZombie,
		trialDisable = true
	}
} --[[ @ 0]]
CoD.DirectorUtility.IsMainModeLocked = function ( f77_arg0, f77_arg1 )
	if f77_arg1.arena and LuaUtils.MPArenaDisabled() then
		return true
	elseif IsLobbyNetworkModeLAN() and f77_arg1.lockedOffline then
		return true
	elseif CoD.DirectorUtility.DisableForCurrentMilestone() and f77_arg1.mainMode == Enum[@"lobbymainmode"][@"lobby_mainmode_zm"] and LuaUtils.MatchmakingTest() ~= 1 then
		return true
	elseif CoD.DirectorUtility.DisableArenaMainMode( f77_arg0, f77_arg1 ) then
		return true
	else
		return LuaUtils.GetDisplayNameForLobbyMainMode( f77_arg1.mainMode ) == @"hash_0"
	end
end
 --[[ @ 0]]
DataSources.DirectorFeaturedButtons = ListHelper_SetupDataSource( "DirectorFeaturedButtons", function ( f78_arg0, f78_arg1 )
	local f78_local0 = {} --[[ @ 0]]
	local f78_local1 = CoD.DirectorUtility.GetPlaylists() --[[ @ 0]]
	for f78_local9, f78_local10 in ipairs( CoD.DirectorUtility.MainScreenModes ) --[[ @ 0]] do
		if f78_local10.isVisible() then
			local f78_local5 = LuaUtils.LobbyMainModeData[f78_local10.mainMode] --[[ @ 0]]
			local f78_local6 = CoD.DirectorUtility.GetFirstOrFeaturedPlaylistEntry( f78_arg0, f78_local1, f78_local10 ) --[[ @ 0]]
			if f78_local6 then
				local f78_local7 = f78_local6.models --[[ @ 0]]
				local f78_local8 = f78_local10.trialDisable --[[ @ 0]]
				if f78_local8 then
					f78_local8 = Engine[@"hash_5CB675CA7856DA25"]() --[[ @ 0]]
				end
				f78_local7.trialLocked = f78_local8 --[[ @ 0]]
				f78_local6.properties.lockedAction = CoD.DirectorUtility.DirectorSelectLockedAction --[[ @ 0]]
				f78_local7 = f78_local6.properties --[[ @ 0]]
				if f78_local5 then
					f78_local8 = f78_local5.PregameMenu --[[ @ 0]]
					if not f78_local8 then
					
					else
						f78_local7.actionParam = f78_local8 --[[ @ 0]]
						table.insert( f78_local0, f78_local6 ) --[[ @ 0]]
					end
				end
				f78_local8 = nil --[[ @ 0]]
			end
		end
	end
	if not f78_arg1._hasSubscriptions then
		f78_arg1._hasSubscriptions = true --[[ @ 0]]
		f78_arg1:subscribeToModel( Engine[@"createmodel"]( Engine[@"getglobalmodel"](), "lobbyRoot.lobbyNetworkMode" ), function ()
			f78_arg1:updateDataSource( false, false ) --[[ @ 0]]
		end, false ) --[[ @ 0]]
		f78_local4 = f78_arg1 --[[ @ 0]]
		f78_local3 = f78_arg1.subscribeToModel --[[ @ 0]]
		f78_local9 = Engine[@"getglobalmodel"]() --[[ @ 0]]
		f78_local3( f78_local4, f78_local9.lobbyRoot.privateClient.count, function ()
			f78_arg1:updateDataSource( false, false ) --[[ @ 0]]
		end, false ) --[[ @ 0]]
	end
	CoD.DirectorUtility.AddInstallSubscriptionOnce( f78_arg1 ) --[[ @ 0]]
	if f78_arg1._entitlementUpdateSubscription == nil then
		f78_local2 = Engine[@"getglobalmodel"]() --[[ @ 0]]
		f78_arg1._entitlementUpdateSubscription = f78_arg1:subscribeToModel( f78_local2.lobbyRoot.entitlementsUpdated, function ()
			f78_arg1:updateDataSource() --[[ @ 0]]
		end, false ) --[[ @ 0]]
	end
	return f78_local0
end ) --[[ @ 0]]
DataSources.DirectorHomeButtons = ListHelper_SetupDataSource( "DirectorHomeButtons", function ( f82_arg0, f82_arg1 )
	local f82_local0 = {} --[[ @ 0]]
	if not f82_arg1._lobbyNetworkModeSubscription then
		f82_arg1._lobbyNetworkModeSubscription = true --[[ @ 0]]
		local f82_local1 = f82_arg1 --[[ @ 0]]
		local f82_local2 = f82_arg1.subscribeToModel --[[ @ 0]]
		local f82_local3 = Engine[@"getglobalmodel"]() --[[ @ 0]]
		f82_local2( f82_local1, f82_local3.lobbyRoot.lobbyNetworkMode, function ( f83_arg0 )
			f82_arg1:updateDataSource( true ) --[[ @ 0]]
		end, false ) --[[ @ 0]]
	end
	if CoD.DirectorUtility.ShouldHideCRMFeatureList( nil, f82_arg0 ) then
		return f82_local0
	elseif IsGameTrial() then
		CoD.WZUtility.CreateMOTDWZTrialCard( f82_local0, f82_arg0 ) --[[ @ 0]]
	end
	CoD.VideoStreamingUtility.CreateLEVFeaturedCard( f82_local0, f82_arg0 ) --[[ @ 0]]
	CoD.MOTDUtility.CreateMOTDFeatureCard( f82_local0, f82_arg0 ) --[[ @ 0]]
	CoD.MOTDUtility.FeatureCard_AddFeatureCards( f82_local0, f82_arg0 ) --[[ @ 0]]
	CoD.MOTDUtility.MOTD_AddMOTDCards( f82_local0, f82_arg0 ) --[[ @ 0]]
	return f82_local0
end ) --[[ @ 0]]
CoD.DirectorUtility.DirectorNavigateToSpecialistHeadquarters = function ( f84_arg0, f84_arg1, f84_arg2, f84_arg3, f84_arg4 )
	CoD.FTUEUtility.ShouldBlockMPFTUE = true --[[ @ 0]]
	CoD.CTUtility.SetNavMethodFrontend( f84_arg2 ) --[[ @ 0]]
	CoD.LobbyUtility.NavigateToLobby( f84_arg4, LuaEnum.UI.DIRECTOR_ONLINE_MP_TRAINING, false, f84_arg2 ) --[[ @ 0]]
end
 --[[ @ 0]]
DataSources.DirectorExtraHomeButtons = ListHelper_SetupDataSource( "DirectorExtraHomeButtons", function ( f85_arg0, f85_arg1 )
	local f85_local0 = {} --[[ @ 0]]
	local f85_local1 = IsLobbyNetworkModeLAN() --[[ @ 0]]
	local f85_local2 --[[ @ 0]]
	if Engine[@"hash_77D47312EBA41751"]() or LobbyData.GetLobbyMenuByName( LuaEnum.UI.DIRECTOR_ONLINE_MP_TRAINING ) == nil then
		f85_local2 = false --[[ @ 0]]
	else
		f85_local2 = true --[[ @ 0]]
	end
	local f85_local3 = false --[[ @ 0]]
	local f85_local4 = false --[[ @ 0]]
	local f85_local5 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f85_local5 = f85_local5:create( CoD.LobbyUtility.LobbyNavigationActionModel ) --[[ @ 0]]
	f85_local5 = f85_local5:get() --[[ @ 0]]
	if f85_local5 == LuaEnum.UI.DIRECTOR_LAN_SELECT then
		f85_local3 = true --[[ @ 0]]
	elseif f85_local5 == LuaEnum.UI.DIRECTOR_ONLINE then
		f85_local4 = true --[[ @ 0]]
	end
	if f85_local1 then
		if not LuaUtils.OfflineOnlyDemo() then
			table.insert( f85_local0, {
				models = {
					subtitle = @"menu/play_online",
					iconBackground = @"blacktransparent",
					iconBackgroundFocus = @"blacktransparent",
					showOnLeft = true,
					small = true,
					locked = false
				},
				properties = {
					action = CoD.DirectorUtility.DirectorSelectAction,
					actionParam = LuaEnum.UI.DIRECTOR_ONLINE,
					selectIndex = f85_local3
				}
			} ) --[[ @ 0]]
		end
		table.insert( f85_local0, {
			models = {
				subtitle = @"hash_5D7DF8AD7167B198",
				iconBackground = @"blacktransparent",
				iconBackgroundFocus = @"blacktransparent",
				showOnLeft = true,
				small = true,
				locked = false
			},
			properties = {
				action = CoD.DirectorUtility.DirectorSelectOpenPopup,
				actionParam = "LobbyServerBrowserOverlay"
			}
		} ) --[[ @ 0]]
	else
		if f85_local2 then
			table.insert( f85_local0, {
				models = {
					showOnLeft = true,
					small = false,
					locked = false,
					trialLocked = Engine[@"hash_5CB675CA7856DA25"](),
					iconBackground = @"ui_icon_director_ct_tile",
					iconBackgroundFocus = @"ui_icon_director_ct_tile_focus",
					subtitle = @"hash_5AA1920F2AF31A03",
					showForAllClients = false
				},
				properties = {
					action = CoD.DirectorUtility.DirectorNavigateToSpecialistHeadquarters
				}
			} ) --[[ @ 0]]
		end
		table.insert( f85_local0, {
			models = {
				subtitle = @"menu/theater",
				iconBackground = @"blacktransparent",
				iconBackgroundFocus = @"blacktransparent",
				showOnLeft = true,
				small = true,
				locked = CoD.DirectorUtility.DisableForCurrentMilestone( f85_arg0 ) and not CoD.BaseUtility.IsDvarEnabled( "ui_showTheater" ),
				trialLocked = Engine[@"hash_5CB675CA7856DA25"]()
			},
			properties = {
				action = CoD.DirectorUtility.DirectorSelectTheater,
				actionParam = LuaEnum.UI.DIRECTOR_ONLINE_THEATER
			}
		} ) --[[ @ 0]]
		local f85_local6 = @"ui_icon_blackmarket_store_tile_default_01" --[[ @ 0]]
		local f85_local7 = @"ui_icon_blackmarket_store_tile_focus_01" --[[ @ 0]]
		if IsBooleanDvarSet( @"loot_enableblackmarket" ) then
			local f85_local8 = Engine[@"hash_2E00B2F29271C60B"]( CoDShared.Loot.GetCurrentSeason() ) --[[ @ 0]]
			local f85_local9 --[[ @ 0]]
			if f85_local8 then
				f85_local9 = f85_local8[@"squareimage"] --[[ @ 0]]
				if not f85_local9 then
				
				else
					local f85_local10 --[[ @ 0]]
					if f85_local8 then
						f85_local10 = f85_local8[@"hash_7B4983E074152C2D"] --[[ @ 0]]
						if not f85_local10 then
						
						else
							if f85_local8 then
								f85_local6 = f85_local8[@"hash_751E7101B70C8A6C"] or f85_local6 --[[ @ 0]]
							end
							if f85_local8 then
								f85_local7 = f85_local8[@"hash_170243CFDCD07174"] or f85_local7 --[[ @ 0]]
							end
							table.insert( f85_local0, {
								models = {
									showOnLeft = false,
									locked = false,
									iconBackground = f85_local9,
									iconBackgroundFocus = f85_local10,
									subtitle = @"menu/black_market",
									small = false,
									showForAllClients = true
								},
								properties = {
									action = OpenQuarterMaster
								}
							} ) --[[ @ 0]]
						end
					end
					f85_local10 = @"ui_icon_blackmarket_store_tile_focus" --[[ @ 0]]
				end
			end
			f85_local9 = @"ui_icon_blackmarket_store_tile_default" --[[ @ 0]]
		end
		if IsCommerceEnabledOnPC() then
			table.insert( f85_local0, {
				models = {
					showOnLeft = not IsBooleanDvarSet( @"loot_enableblackmarket" ),
					iconBackground = f85_local6,
					iconBackgroundFocus = f85_local7,
					locked = false,
					subtitle = @"hash_4191CDDA584B4408",
					small = false,
					showForAllClients = true
				},
				properties = {
					action = OpenStore,
					actionParam = "DirectorPlayButton"
				}
			} ) --[[ @ 0]]
		end
		if not CoD.isPC then
			table.insert( f85_local0, {
				models = {
					subtitle = @"menu/play_local",
					iconBackground = @"blacktransparent",
					iconBackgroundFocus = @"blacktransparent",
					showOnLeft = true,
					small = true,
					locked = LuaUtils.OnlineOnlyDemo(),
					trialLocked = Engine[@"hash_5CB675CA7856DA25"]()
				},
				properties = {
					action = CoD.DirectorUtility.DirectorSelectAction,
					actionParam = LuaEnum.UI.DIRECTOR_LAN_SELECT,
					selectIndex = f85_local4
				}
			} ) --[[ @ 0]]
		end
	end
	CoD.DirectorUtility.AddLobbyNavSubscriptionOnce( f85_arg1 ) --[[ @ 0]]
	CoD.DirectorUtility.AddInstallSubscriptionOnce( f85_arg1 ) --[[ @ 0]]
	if not f85_arg1._hasAutoEventSubscription then
		local f85_local11 = f85_arg1 --[[ @ 0]]
		local f85_local12 = f85_arg1.subscribeToModel --[[ @ 0]]
		local f85_local6 = Engine[@"getglobalmodel"]() --[[ @ 0]]
		f85_local6 = f85_local6:create( "AutoEvents" ) --[[ @ 0]]
		f85_local12( f85_local11, f85_local6:create( "cycled" ), function ()
			f85_arg1:updateDataSource() --[[ @ 0]]
		end, false ) --[[ @ 0]]
		f85_arg1._hasAutoEventSubscription = true --[[ @ 0]]
	end
	return f85_local0
end ) --[[ @ 0]]
CoD.DirectorUtility.DirectorOpenVodAction = function ( f87_arg0, f87_arg1, f87_arg2, f87_arg3, f87_arg4 )
	CoD.VideoStreamingUtility.SetupVoDMovie( f87_arg2, f87_arg1, f87_arg3 ) --[[ @ 0]]
	DelayOpenOverlay( f87_arg4, "VoDViewer", f87_arg2, nil ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorUtility.AddBlackoutVODFeaturedCard = function ( f88_arg0, f88_arg1 )
	table.insert( f88_arg0, {
		models = {
			locked = false,
			name = Engine[@"hash_4F9F1239CFD921FE"]( @"menu/warzone" ),
			iconBackground = @"hash_7722D4EEEAD86C3A",
			iconBackgroundFocus = @"hash_7722D4EEEAD86C3A",
			descriptionText = @"hash_36CF46BE979E096B",
			action = CoD.DirectorUtility.DirectorOpenVodAction,
			param = "vod",
			vod = {
				movieName = "wz_teaser_trailer"
			},
			showForAllClients = true,
			hasDoubleXP = false,
			hasDoubleWeaponXP = false
		}
	} ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorUtility.DirectorSelectAction = function ( f89_arg0, f89_arg1, f89_arg2, f89_arg3, f89_arg4 )
	local f89_local0 = f89_arg3 --[[ @ 0]]
	CoD.DirectorUtility.NavigateToLobby( f89_arg4, f89_arg2, f89_local0 ) --[[ @ 0]]
	local f89_local1 = LobbyData.GetLobbyMenuByName( f89_local0 ) --[[ @ 0]]
	local f89_local2 = f89_local1[@"mainmode"] --[[ @ 0]]
	local f89_local3 = f89_local1[@"lobbymode"] == Enum[@"lobbymode"][@"lobby_mode_arena"] --[[ @ 0]]
	if IsLobbyNetworkModeLive() then
		CoD.DirectorUtility.LoadPreferredPlaylist( f89_arg2, f89_local2, f89_local3 ) --[[ @ 0]]
	end
	PlaySoundSetSound( f89_arg0, "toggle" ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorUtility.DirectorSelectLockedAction = function ( f90_arg0, f90_arg1, f90_arg2, f90_arg3, f90_arg4 )
	local f90_local0 = LobbyData.GetLobbyMenuByName( f90_arg3 ) --[[ @ 0]]
	local f90_local1 = f90_local0[@"mainmode"] --[[ @ 0]]
	local f90_local2 = false --[[ @ 0]]
	if CoD.isPC and (CoD.DirectorUtility.ZombieLimitedShouldOpenStore( f90_local1 ) or Engine[@"hash_5CB675CA7856DA25"]()) then
		OpenStore( f90_arg0, f90_arg1, f90_arg2, "", f90_arg4 ) --[[ @ 0]]
		f90_local2 = true --[[ @ 0]]
	end
	if f90_local2 then
		PlaySoundSetSound( f90_arg0, "toggle" ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.DirectorSelectTheater = function ( f91_arg0, f91_arg1, f91_arg2, f91_arg3, f91_arg4 )
	CoD.FileshareUtility.InitModels() --[[ @ 0]]
	CoD.DirectorUtility.DirectorSelectAction( f91_arg0, f91_arg1, f91_arg2, f91_arg3, f91_arg4 ) --[[ @ 0]]
	CoD.FileshareUtility.SetupFileshareForTheater( f91_arg2 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorUtility.DirectorTheaterOpenSelectFilm = function ( f92_arg0, f92_arg1, f92_arg2, f92_arg3, f92_arg4 )
	if not CoDShared.IsInTheaterLobby() then
		return 
	elseif f92_arg3 ~= Enum[@"emodes"][@"mode_invalid"] then
		CoD.FileshareUtility.SetCurrentFilter( Enum[@"fileshareprimarytags_e"][@"hash_7309C4BC434A44FC"], Engine[@"numbertouint64"]( f92_arg3 ) ) --[[ @ 0]]
	end
	CoD.LobbyUtility.OpenTheaterSelectFilm( f92_arg4, f92_arg2 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorUtility.DirectorTheaterLaunchDemo = function ( f93_arg0, f93_arg1, f93_arg2 )
	local f93_local0 = Engine[@"lobbygetdemoinformation"]( Enum[@"lobbymodule"][@"lobby_module_client"], Engine[@"lobbygetcontrollinglobbysession"]( Enum[@"lobbymodule"][@"lobby_module_client"] ) ) --[[ @ 0]]
	if not f93_local0 then
		return 
	elseif f93_arg2 == nil then
		f93_arg2 = "" --[[ @ 0]]
	end
	f93_local0.map = Engine[@"lobbygetmap"]() --[[ @ 0]]
	f93_local0.gametype = Engine[@"lobbygetgametype"]() --[[ @ 0]]
	f93_local0.controller = f93_arg1 --[[ @ 0]]
	f93_local0.demoMode = f93_arg2 --[[ @ 0]]
	Engine[@"lobbyupdatedemoinformation"]( Enum[@"lobbymodule"][@"lobby_module_host"], Engine[@"lobbygetcontrollinglobbysession"]( Enum[@"lobbymodule"][@"lobby_module_host"] ), f93_local0 ) --[[ @ 0]]
	CoD.MetricsUtility.WatchVideoEvent( f93_arg1, f93_local0 ) --[[ @ 0]]
	CoD.LobbyUtility.LaunchDemo( f93_arg0, f93_arg1, Enum[@"lobbytype"][@"lobby_type_game"] ) --[[ @ 0]]
	CoD.FileshareUtility.SetAutoStart( false ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorUtility.IsQuickplayAvailableForMode = function ( f94_arg0 )
	if Dvar[@"lobbymultiplaylistsearchenabled"]:exists() and Dvar[@"lobbymultiplaylistsearchenabled"]:get() then
		if f94_arg0 == Enum[@"lobbymainmode"][@"lobby_mainmode_mp"] then
			return Dvar[@"hash_3A7864B7F74641C9"]:exists() and Dvar[@"hash_3A7864B7F74641C9"]:get()
		elseif f94_arg0 == Enum[@"lobbymainmode"][@"lobby_mainmode_wz"] then
			return Dvar[@"hash_3A646AB7F735A2F1"]:exists() and Dvar[@"hash_3A646AB7F735A2F1"]:get()
		elseif f94_arg0 == Enum[@"lobbymainmode"][@"lobby_mainmode_zm"] then
			return Dvar[@"ui_showquickplayinplaylistszm"]:exists() and Dvar[@"ui_showquickplayinplaylistszm"]:get()
		end
	end
	return false
end
 --[[ @ 0]]
CoD.DirectorUtility.GetQuickplayPlaylistsForCurrentMode = function ( f95_arg0, f95_arg1 )
	local f95_local0 = {} --[[ @ 0]]
	local f95_local1 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f95_local1 = f95_local1.lobbyRoot.lobbyMainMode:get() --[[ @ 0]]
	if f95_local1 == Enum[@"lobbymainmode"][@"lobby_mainmode_zm"] then
		f95_local0 = CoD.ZombieUtility.GetQuickplayPlaylists( f95_arg0, f95_arg1 ) --[[ @ 0]]
	else
		local f95_local2 = Engine[@"getglobalmodel"]() --[[ @ 0]]
		f95_local2 = f95_local2.lobbyRoot.lobbyList.playerCount:get() --[[ @ 0]]
		for f95_local11, f95_local12 in ipairs( CoD.DirectorUtility.GetDirectorFiltersCardsForMode( f95_arg0, f95_arg1, f95_local1, true ) ) --[[ @ 0]] do
			if f95_local12.cards then
				for f95_local9, f95_local10 in ipairs( f95_local12.cards ) --[[ @ 0]] do
					if f95_local10.canQuickplay and f95_local2 <= f95_local10.maxPartySize then
						table.insert( f95_local0, f95_local10.playlist ) --[[ @ 0]]
					end
				end
			end
		end
	end
	return f95_local0
end
 --[[ @ 0]]
CoD.DirectorUtility.PrepareSearchPlaylistModels = function ( f96_arg0, f96_arg1 )
	local f96_local0 = true --[[ @ 0]]
	if Dvar[@"lobbymultiplaylistsearchenabled"]:exists() and Dvar[@"lobbymultiplaylistsearchenabled"]:get() then
		local f96_local1 = Engine[@"getglobalmodel"]() --[[ @ 0]]
		local f96_local2 = f96_local1.lobbyRoot:create( "searchPlaylistIDs" ) --[[ @ 0]]
		local f96_local3 = 0 --[[ @ 0]]
		local f96_local4 = Engine[@"getplaylistid"]() --[[ @ 0]]
		local f96_local5 = Engine[@"getplaylistinfobyid"]( f96_local4 ) --[[ @ 0]]
		if f96_local5.isQuickplayCard then
			for f96_local9, f96_local10 in ipairs( CoD.DirectorUtility.GetQuickplayPlaylistsForCurrentMode( f96_arg0, f96_arg1 ) ) --[[ @ 0]] do
				f96_local3 = f96_local3 + 1 --[[ @ 0]]
				local f96_local11 = f96_local2:create( f96_local3 ) --[[ @ 0]]
				f96_local11:set( f96_local10 ) --[[ @ 0]]
			end
			if f96_local3 == 0 then
				f96_local0 = false --[[ @ 0]]
			end
		end
		if f96_local3 == 0 then
			f96_local3 = 1 --[[ @ 0]]
			local f96_local12 = f96_local2:create( f96_local3 ) --[[ @ 0]]
			f96_local12:set( f96_local4 ) --[[ @ 0]]
		end
		local f96_local12 = f96_local2:create( "count" ) --[[ @ 0]]
		f96_local12:set( f96_local3 ) --[[ @ 0]]
	end
	return f96_local0
end
 --[[ @ 0]]
CoD.DirectorUtility.NavigateToPublicLobbyForCurrentMenuMode = function ( f97_arg0, f97_arg1 )
	local f97_local0 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f97_local0 = f97_local0.lobbyRoot.lobbyMainMode:get() --[[ @ 0]]
	if LuaUtils.LobbyMainModeData[f97_local0] then
		if CoD.DirectorUtility.PrepareSearchPlaylistModels( f97_arg0, f97_arg1 ) then
			CoD.DirectorUtility.NavigateToLobby( f97_arg0, f97_arg1, LuaUtils.LobbyMainModeData[f97_local0].PublicMenu ) --[[ @ 0]]
		end
	elseif LUI.DEV then
		error( "LuaUtils.LobbyMainModeData[ mainMode ] is nil for mode " .. (f97_local0 or "nil") ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.DirectorSelectOpenPopup = function ( f98_arg0, f98_arg1, f98_arg2, f98_arg3, f98_arg4 )
	OpenPopup( f98_arg0, f98_arg3, f98_arg2, "", "" ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorUtility.DirectorOpenOverlayWithMenuSessionMode = function ( f99_arg0, f99_arg1, f99_arg2, f99_arg3, f99_arg4 )
	OpenOverlay( f99_arg0, f99_arg3.menuName, f99_arg2, {
		_sessionMode = f99_arg3.eMode
	} ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorUtility.OpenCACWithMenuSessionMode = function ( f100_arg0, f100_arg1, f100_arg2, f100_arg3, f100_arg4 )
	if CoD.DirectorUtility.ShouldShowAppLoadoutAvailable( f100_arg4, f100_arg2 ) then
		CoD.OverlayUtility.CreateOverlay( f100_arg2, f100_arg4, "AppLoadoutConfirmLoadout", f100_arg2, nil ) --[[ @ 0]]
		return 
	end
	local f100_local0 = f100_arg3.eMode --[[ @ 0]]
	local f100_local1 = "MPCustomizeClassMenu" --[[ @ 0]]
	if f100_local0 == Enum[@"emodes"][@"mode_zombies"] then
		f100_local1 = "ZMCustomizeClassMenu" --[[ @ 0]]
		if CoD.DirectorUtility.IsLoadoutPreviewWidgetShown( f100_arg2 ) then
			CoD.DirectorUtility.HideLoadoutPreview( f100_arg2 ) --[[ @ 0]]
		end
	end
	OpenOverlay( f100_arg0, f100_local1, f100_arg2, {
		_sessionMode = f100_local0
	} ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorUtility.OpenArmoryMenu = function ( f101_arg0, f101_arg1, f101_arg2, f101_arg3, f101_arg4 )
	OpenOverlay( f101_arg0, "Armory", f101_arg2, f101_arg3 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorUtility.OpenWZPersonalizeWeaponMenu = function ( f102_arg0, f102_arg1, f102_arg2, f102_arg3, f102_arg4 )
	OpenOverlay( f102_arg0, "WZPersonalizeWeapon", f102_arg2, f102_arg3 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorUtility.NavigateToCustomGames = function ( f103_arg0, f103_arg1, f103_arg2, f103_arg3, f103_arg4 )
	CoD.DirectorUtility.NavigateToCustomLobbyForCurrentMode( f103_arg4, f103_arg2 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorUtility.OpenDirectorChangeCharacterMenu = function ( f104_arg0, f104_arg1, f104_arg2, f104_arg3, f104_arg4 )
	if f104_arg3 and f104_arg3._sessionMode == Enum[@"emodes"][@"mode_multiplayer"] then
		OpenOverlay( f104_arg0, "DirectorPersonalizeCharacterMP", f104_arg2, f104_arg3 ) --[[ @ 0]]
	elseif f104_arg3 and f104_arg3._sessionMode == Enum[@"emodes"][@"mode_zombies"] then
		OpenOverlay( f104_arg0, "ZMPersonalizeCharacterMain", f104_arg2, f104_arg3 ) --[[ @ 0]]
	elseif f104_arg3 and f104_arg3._sessionMode == Enum[@"emodes"][@"mode_warzone"] then
		OpenOverlay( f104_arg0, "DirectorChangeCharacter", f104_arg2, f104_arg3 ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.OpenDirectorPersonalizationMenu = function ( f105_arg0, f105_arg1, f105_arg2, f105_arg3, f105_arg4 )
	OpenOverlay( f105_arg4, "MPSpecialistHUBBindWheel", f105_arg2, f105_arg3 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorUtility.DirectorOpenOverlayWithCurrentMenuMode = function ( f106_arg0, f106_arg1, f106_arg2 )
	local f106_local0 = Engine[@"createmodel"]( Engine[@"getglobalmodel"](), "lobbyRoot.lobbyMainMode" ) --[[ @ 0]]
	f106_local0 = f106_local0:get() --[[ @ 0]]
	OpenOverlay( f106_arg0, f106_arg2, f106_arg1, {
		_mainMode = f106_local0,
		_sessionMode = LuaUtils.GetEModeForLobbyMainMode( f106_local0 )
	} ) --[[ @ 0]]
end
 --[[ @ 0]]
DataSources.DirectorPlayButtons = ListHelper_SetupDataSource( "DirectorPlayButtons", function ( f107_arg0, f107_arg1 )
	local f107_local0 = {} --[[ @ 0]]
	local f107_local1 = IsLobbyNetworkModeLAN() --[[ @ 0]]
	for f107_local16, f107_local17 in ipairs( CoD.DirectorUtility.MainScreenModes ) --[[ @ 0]] do
		if f107_local17.isVisible() then
			local f107_local5 = LuaUtils.LobbyMainModeData[f107_local17.mainMode] --[[ @ 0]]
			local f107_local6 = f107_local5 and LuaUtils.GetDisplayNameForEMode( f107_local5.eMode ) --[[ @ 0]]
			local f107_local7 = f107_local5 and LuaUtils.GetSelectDescriptionForEMode( f107_local5.eMode ) --[[ @ 0]]
			local f107_local8 = CoD.DirectorUtility.IsMainModeLocked( f107_arg0, f107_local17 ) --[[ @ 0]]
			if not f107_local5 or (not f107_local1 or not f107_local5.LanMenu) and not f107_local5.PregameMenu then
				local f107_local9 = nil --[[ @ 0]]
			end
			if f107_local8 then
				f107_local6 = f107_local17.stringIfLocked --[[ @ 0]]
				f107_local7 = @"hash_0" --[[ @ 0]]
			end
			local f107_local9 --[[ @ 0]]
			if f107_local17.arena then
				f107_local6 = @"menu/arena" --[[ @ 0]]
				f107_local7 = @"menu/arena_desc" --[[ @ 0]]
				if f107_local1 then
					f107_local9 = LuaEnum.UI.DIRECTOR_LAN_MP_ARENA --[[ @ 0]]
				else
					f107_local9 = LuaEnum.UI.DIRECTOR_ONLINE_MP_ARENA_PREGAME --[[ @ 0]]
				end
			end
			if f107_local1 and f107_local17.lockedOffline then
				f107_local8 = true --[[ @ 0]]
			end
			local f107_local10 --[[ @ 0]]
			if f107_local5 then
				f107_local10 = f107_local5.eMode --[[ @ 0]]
				if not f107_local10 then
				
				else
					local f107_local11 = table.insert --[[ @ 0]]
					local f107_local12 = f107_local0 --[[ @ 0]]
					local f107_local13 = {} --[[ @ 0]]
					local f107_local14 = {
						subtitle = f107_local6,
						description = f107_local7,
						mode = f107_local10,
						small = false,
						locked = f107_local8
					} --[[ @ 0]]
					local f107_local15 = f107_local17.trialDisable --[[ @ 0]]
					if f107_local15 then
						f107_local15 = Engine[@"hash_5CB675CA7856DA25"]() --[[ @ 0]]
					end
					f107_local14.trialLocked = f107_local15 --[[ @ 0]]
					f107_local13.models = f107_local14 --[[ @ 0]]
					f107_local13.properties = {
						action = CoD.DirectorUtility.DirectorSelectAction,
						actionParam = f107_local9,
						lockedAction = CoD.DirectorUtility.DirectorSelectLockedAction
					} --[[ @ 0]]
					f107_local11( f107_local12, f107_local13 ) --[[ @ 0]]
				end
			end
			f107_local10 = -1 --[[ @ 0]]
		end
	end
	CoD.DirectorUtility.AddLobbyNavSubscriptionOnce( f107_arg1 ) --[[ @ 0]]
	CoD.DirectorUtility.AddInstallSubscriptionOnce( f107_arg1 ) --[[ @ 0]]
	return f107_local0
end ) --[[ @ 0]]
CoD.DirectorUtility.GameModeData = {
	[Enum[@"emodes"][@"mode_multiplayer"]] = {
		theaterButtonImage = @"ui_icon_theater_tile_mp"
	},
	[Enum[@"emodes"][@"mode_zombies"]] = {
		theaterButtonImage = @"ui_icon_theater_tile_zm"
	},
	[Enum[@"emodes"][@"mode_warzone"]] = {
		theaterButtonImage = @"ui_icon_theater_tile_wz"
	}
} --[[ @ 0]]
DataSources.DirectorTheaterLandingPageModes = ListHelper_SetupDataSource( "DirectorTheaterLandingPageModes", function ( f108_arg0, f108_arg1 )
	local f108_local0 = {} --[[ @ 0]]
	for f108_local11, f108_local12 in ipairs( CoD.DirectorUtility.MainScreenModes ) --[[ @ 0]] do
		if f108_local12.isVisible() then
			local f108_local4 = LuaUtils.LobbyMainModeData[f108_local12.mainMode] --[[ @ 0]]
			local f108_local5 = f108_local4 and LuaUtils.GetDisplayNameForEMode( f108_local4.eMode ) --[[ @ 0]]
			if f108_local4 then
				local f108_local6 = CoD.DirectorUtility.GameModeData[f108_local4.eMode] --[[ @ 0]]
				local f108_local7 = CoD.DirectorUtility.GameModeData[f108_local4.eMode].theaterButtonImage --[[ @ 0]]
			end
			local f108_local8 = f108_local6 and f108_local7 or @"blacktransparent" --[[ @ 0]]
			local f108_local9 = CoD.isPC --[[ @ 0]]
			if f108_local9 then
				f108_local9 = CoD.DirectorUtility.IsMainModeLocked( f108_arg0, f108_local12 ) --[[ @ 0]]
			end
			if not f108_local12.arena then
				local f108_local10 --[[ @ 0]]
				if f108_local4 then
					f108_local10 = f108_local4.eMode --[[ @ 0]]
					if not f108_local10 then
					
					else
						table.insert( f108_local0, {
							models = {
								subtitle = f108_local5,
								buttonImage = f108_local8,
								mode = f108_local10,
								small = false,
								locked = f108_local9
							},
							properties = {
								action = CoD.DirectorUtility.DirectorTheaterOpenSelectFilm,
								actionParam = f108_local10
							}
						} ) --[[ @ 0]]
					end
				end
				f108_local10 = -1 --[[ @ 0]]
			end
		end
	end
	table.insert( f108_local0, {
		models = {
			subtitle = @"hash_146513144F1265BA",
			mode = Enum[@"emodes"][@"mode_invalid"],
			small = true,
			locked = false
		},
		properties = {
			action = CoD.DirectorUtility.DirectorTheaterOpenSelectFilm,
			actionParam = Enum[@"emodes"][@"mode_invalid"]
		}
	} ) --[[ @ 0]]
	return f108_local0
end ) --[[ @ 0]]
CoD.DirectorUtility.CreateFilter = function ( f109_arg0, f109_arg1, f109_arg2, f109_arg3, f109_arg4, f109_arg5, f109_arg6, f109_arg7, f109_arg8, f109_arg9 )
	local f109_local0 = {
		mainMode = f109_arg1,
		id = f109_arg2,
		name = f109_arg3,
		icon = f109_arg4,
		available = true,
		cards = {}
	} --[[ @ 0]]
	if f109_arg7 then
		CoD.ArenaUtility.CreateArenaCards( f109_local0, f109_arg0, f109_arg2, f109_arg5 ) --[[ @ 0]]
	else
		CoD.DirectorUtility.CreateFilterCards( f109_local0, f109_arg0, f109_arg2, f109_arg5, f109_arg6, f109_arg7, f109_arg8, f109_arg9 ) --[[ @ 0]]
	end
	return f109_local0
end
 --[[ @ 0]]
CoD.DirectorUtility.ShouldFeaturedAlternativeEntry = function ( f110_arg0, f110_arg1 )
	return false
end
 --[[ @ 0]]
CoD.DirectorUtility.IsAutoFeatured = function ( f111_arg0, f111_arg1, f111_arg2 )
	local f111_local0 = nil --[[ @ 0]]
	if CoD.DirectorUtility.RegionOnlyAllowsFeaturedPlaylistForMode( f111_arg0, f111_arg1 ) then
		f111_local0 = CoDShared.Playlists.GetLowpopFeatured( f111_arg1 ) --[[ @ 0]]
	else
		f111_local0 = CoDShared.Playlists.GetFeatured( f111_arg1 ) --[[ @ 0]]
	end
	if f111_local0 ~= nil then
		for f111_local4, f111_local5 in pairs( f111_local0 ) --[[ @ 0]] do
			if f111_arg2.uniqueName == f111_local5 then
				return true
			end
		end
	end
	return false
end
 --[[ @ 0]]
CoD.DirectorUtility.IsAutoShowcased = function ( f112_arg0, f112_arg1, f112_arg2 )
	local f112_local0 = nil --[[ @ 0]]
	if CoD.DirectorUtility.RegionOnlyAllowsFeaturedPlaylistForMode( f112_arg0, f112_arg1 ) then
		f112_local0 = CoDShared.Playlists.GetLowpopShowcased( f112_arg1 ) --[[ @ 0]]
	else
		f112_local0 = CoDShared.Playlists.GetShowcased( f112_arg1 ) --[[ @ 0]]
	end
	if f112_local0 ~= nil and f112_local0 ~= @"hash_0" and f112_arg2.uniqueName == f112_local0 then
		return true
	else
		return false
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.CreateFilterCards = function ( f113_arg0, f113_arg1, f113_arg2, f113_arg3, f113_arg4, f113_arg5, f113_arg6, f113_arg7 )
	local f113_local0 = 1 --[[ @ 0]]
	for f113_local1 = 1 --[[ @ 0]], #f113_arg3, 1 do
		local f113_local4 = f113_arg3[f113_local1] --[[ @ 0]]
		if f113_local4 ~= nil then
			local f113_local5 = CoD.DirectorUtility.CardNavigateToLobby --[[ @ 0]]
			local f113_local6 = f113_local4.id --[[ @ 0]]
			local f113_local7 = f113_local4.name --[[ @ 0]]
			if f113_local4.isNewGameOrResumeGame == true then
				f113_local5 = CoD.DirectorUtility.CPOnlineNewGame --[[ @ 0]]
				f113_local6 = 0 --[[ @ 0]]
			end
			local f113_local8 = false --[[ @ 0]]
			local f113_local9 = Engine[@"getusertier"]( f113_arg1 ) --[[ @ 0]]
			local f113_local10 = Engine[@"hash_514ECF96E169F000"]( f113_arg1, f113_local6 ) --[[ @ 0]]
			local f113_local11 = false --[[ @ 0]]
			local f113_local12 = false --[[ @ 0]]
			local f113_local13 = false --[[ @ 0]]
			local f113_local14 = false --[[ @ 0]]
			if CoD.DirectorUtility.DisableForCurrentMilestone( f113_arg1 ) then
				local f113_local15 = Engine[@"getxpscale"]( f113_arg1 ) --[[ @ 0]]
				f113_local11 = f113_local15 and f113_local15 >= 2 --[[ @ 0]]
				local f113_local16 = Engine[@"getgunxpscale"]( f113_arg1 ) --[[ @ 0]]
				f113_local12 = f113_local16 and f113_local16 >= 2 --[[ @ 0]]
			else
				f113_local11 = LuaUtils.PlaylistRulesIncludes( f113_local4.rules, @"scr_xpscalemp", "2" ) --[[ @ 0]]
				f113_local12 = LuaUtils.PlaylistRulesIncludes( f113_local4.rules, @"scr_gunxpscalemp", "2" ) --[[ @ 0]]
				f113_local13 = LuaUtils.PlaylistRulesIncludes( f113_local4.rules, @"scr_credit_scale", "2" ) --[[ @ 0]]
				f113_local14 = CoD.ZombieUtility.IsDoubleNP( f113_arg1 ) and f113_local4.mainMode == Enum[@"lobbymainmode"][@"lobby_mainmode_zm"] --[[ @ 0]]
			end
			if not (f113_local4.minUserTier == Enum[@"eusertier"][@"user_tier_none"] or f113_local9 >= f113_local4.minUserTier) or f113_local4.maxUserTier ~= Enum[@"eusertier"][@"user_tier_none"] and f113_local4.maxUserTier < f113_local9 then
				f113_local8 = true --[[ @ 0]]
			end
			if f113_local10 == Enum[@"playlistlockstate"][@"hash_5B469AFA64270B7E"] then
				f113_local8 = true --[[ @ 0]]
			end
			if f113_arg4 ~= nil and f113_arg4 ~= f113_local4.mainMode then
				f113_local8 = true --[[ @ 0]]
			end
			if f113_arg5 ~= nil and f113_arg5 ~= f113_local4.arenaSlot >= 0 then
				f113_local8 = true --[[ @ 0]]
			end
			if f113_local4.hidden == true and f113_arg7 ~= true then
				f113_local8 = true --[[ @ 0]]
			end
			if f113_arg6 ~= nil then
				if true == Dvar.tu17_playlist_autoschedule:get() then
					if f113_arg6 ~= CoD.DirectorUtility.IsAutoFeatured( f113_arg1, f113_arg4, f113_local4 ) then
						f113_local8 = true --[[ @ 0]]
					end
				elseif f113_arg6 ~= f113_local4.featuredCategory then
					f113_local8 = true --[[ @ 0]]
				end
			end
			local f113_local15 = {} --[[ @ 0]]
			local f113_local16 = {} --[[ @ 0]]
			local f113_local17 = {} --[[ @ 0]]
			local f113_local18 = {} --[[ @ 0]]
			for f113_local22, f113_local23 in ipairs( f113_local4.rotationList ) --[[ @ 0]] do
				if not f113_local16[f113_local23.map] then
					f113_local16[f113_local23.map] = true --[[ @ 0]]
					table.insert( f113_local15, f113_local23.map ) --[[ @ 0]]
				end
				if not f113_local18[f113_local23.gametype] then
					f113_local18[f113_local23.gametype] = true --[[ @ 0]]
					table.insert( f113_local17, f113_local23.gametype ) --[[ @ 0]]
				end
			end
			f113_local19, f113_local20 = nil --[[ @ 0]]
			for f113_local25, f113_local26 in ipairs( f113_local15 ) --[[ @ 0]] do
				local f113_local27 = Engine[@"hash_4F9F1239CFD921FE"]( CoD.BaseUtility.GetMapValue( f113_local26, "mapName", @"hash_0" ) ) --[[ @ 0]]
				if CoD.MapUtility.IsDLCMapFromName( f113_local26 ) then
					local f113_local24 --[[ @ 0]]
					if f113_local20 then
						f113_local24 = f113_local20 .. ", " --[[ @ 0]]
						if not f113_local24 then
						
						else
							f113_local20 = f113_local24 .. f113_local27 --[[ @ 0]]
							goto basicblock_49:
						end
					end
					f113_local24 = "" --[[ @ 0]]
				end
				local f113_local24 --[[ @ 0]]
				if f113_local19 then
					f113_local24 = f113_local19 .. ", " --[[ @ 0]]
					if not f113_local24 then
					
					else
						f113_local19 = f113_local24 .. f113_local27 --[[ @ 0]]
					end
				end
				f113_local24 = "" --[[ @ 0]]
			end
			if f113_local20 then
				if f113_local19 then
					f113_local21 = f113_local19 .. "\n\n" --[[ @ 0]]
					if not f113_local21 then
					
					else
						f113_local19 = f113_local21 .. Engine[@"hash_4F9F1239CFD921FE"]( @"hash_16407D1BFF6842DA", f113_local20 ) --[[ @ 0]]
					end
				end
				f113_local21 = "" --[[ @ 0]]
			end
			if IsBooleanDvarSet( "ui_freeMPDLC" ) then
				if f113_local19 then
					f113_local21 = f113_local19 .. "\n\n" --[[ @ 0]]
					if not f113_local21 then
					
					else
						f113_local19 = f113_local21 .. Engine[@"hash_4F9F1239CFD921FE"]( @"hash_4C83606D26B21D6E" ) --[[ @ 0]]
					end
				end
				f113_local21 = "" --[[ @ 0]]
			end
			f113_local21 = nil --[[ @ 0]]
			for f113_local26, f113_local27 in ipairs( f113_local17 ) --[[ @ 0]] do
				local f113_local24 = Engine[@"hash_4F9F1239CFD921FE"] --[[ @ 0]]
				local f113_local28 = Engine[@"hash_1F2CD89B3C345FD3"]( f113_local27 ) --[[ @ 0]]
				f113_local24 = f113_local24( f113_local28.nameRef ) --[[ @ 0]]
				if f113_local21 then
					f113_local28 = f113_local21 .. ", " --[[ @ 0]]
					if not f113_local28 then
					
					else
						f113_local21 = f113_local28 .. f113_local24 --[[ @ 0]]
					end
				end
				f113_local28 = "" --[[ @ 0]]
			end
			f113_local22 = Engine[@"hash_4F9F1239CFD921FE"]( @"menu/player_range", f113_local4.minPlayers, f113_local4.maxPlayers ) --[[ @ 0]]
			if f113_local4.isQuickplayCard then
				if not CoD.DirectorUtility.IsQuickplayAvailableForMode( f113_local4.mainMode ) then
					f113_local8 = true --[[ @ 0]]
				end
				f113_local19 = Engine[@"hash_4F9F1239CFD921FE"]( @"hash_323ED5097167B286" ) --[[ @ 0]]
				f113_local21 = Engine[@"hash_4F9F1239CFD921FE"]( @"hash_323ED5097167B286" ) --[[ @ 0]]
				f113_local22 = Engine[@"hash_4F9F1239CFD921FE"]( @"hash_307AE56507881BD6" ) --[[ @ 0]]
			end
			if true == Dvar.tu17_playlist_autoschedule:get() and CoDShared.Playlists.IsBlacklisted( f113_local4.uniqueName ) then
				f113_local8 = true --[[ @ 0]]
			end
			if CoD.isPC and CoD.PCKoreaUtility.IsPlaylistEntryBlacklisted( f113_local4 ) then
				f113_local8 = true --[[ @ 0]]
			end
			if f113_local8 ~= true then
				f113_local23 = false --[[ @ 0]]
				if CoD.DirectorUtility.ShouldFeaturedAlternativeEntry( f113_arg1, f113_local4.mainMode ) then
					f113_local23 = f113_local4.featuredAlt == true --[[ @ 0]]
				else
					f113_local23 = f113_local4[@"featured"] == true --[[ @ 0]]
				end
				if CoD.DirectorUtility.RegionOnlyAllowsFeaturedPlaylistForMode( f113_arg1, f113_local4.mainMode ) and Dvar.ui_wzFeaturedOnlyCountriesPlaylistEntryID:exists() and 0 ~= tonumber( Dvar.ui_wzFeaturedOnlyCountriesPlaylistEntryID:get() ) then
					if f113_local6 == tonumber( Dvar.ui_wzFeaturedOnlyCountriesPlaylistEntryID:get() ) then
						f113_local23 = true --[[ @ 0]]
					else
						f113_local23 = false --[[ @ 0]]
					end
				end
				if true == Dvar.tu17_playlist_autoschedule:get() then
					if CoD.DirectorUtility.IsAutoShowcased( f113_arg1, f113_arg4, f113_local4 ) then
						f113_local23 = true --[[ @ 0]]
					else
						f113_local23 = false --[[ @ 0]]
					end
				end
				f113_arg0.cards[f113_local0] = {
					id = f113_arg2 .. "Ent" .. f113_local0,
					playlist = f113_local6,
					name = Engine[@"hash_4F9F1239CFD921FE"]( f113_local7 ),
					playlistDesc = Engine[@"hash_632A860841DBD025"]( f113_arg1, f113_local6 ),
					mapsString = f113_local19,
					modesString = f113_local21,
					playersString = f113_local22,
					icon = f113_local4.image,
					iconBackground = f113_local4.imageBackground,
					iconBackgroundFocus = f113_local4.imageBackgroundFocus,
					action = f113_local5,
					mode = f113_local4.mainMode,
					locked = Engine[@"isplaylistlocked"]( f113_arg1, f113_local6 ),
					lockState = f113_local10,
					featured = f113_local23,
					isQuickplayCard = f113_local4.isQuickplayCard,
					canQuickplay = f113_local4.canQuickplay,
					lowPopPlaylist = f113_local4.lowPopPlaylist,
					maxPartySize = f113_local4.maxPartySize,
					hasDoubleXP = f113_local11,
					hasDoubleWeaponXP = f113_local12,
					hasTierBoost = f113_local13,
					hasDoubleNP = f113_local14,
					showForAllClients = false
				} --[[ @ 0]]
				f113_local0 = f113_local0 + 1 --[[ @ 0]]
			end
		end
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.HideCustomizationGametypes = {
	[@"bounty"] = true,
	[@"gun"] = true,
	[@"infect"] = true,
	[@"oic"] = true,
	[@"prop"] = true
} --[[ @ 0]]
CoD.DirectorUtility.HideCustomizationPlaylistGametypes = {
	[@"hash_2BF17621068CE209"] = true,
	[@"hash_534D54D59EAE90F4"] = true,
	[@"hash_4202A359A02FC4E8"] = true,
	[@"hash_3B415F2EBD0C392F"] = true,
	[@"hash_31664269E7867977"] = true,
	[@"hash_5C6EFE9D61260D1B"] = true,
	[@"hash_1002B3EDD06160A9"] = true,
	[@"hash_7D75A75AC73396CB"] = true,
	[@"hash_4601861FF493F249"] = true,
	[@"hash_7D8367413C4EA3DC"] = true
} --[[ @ 0]]
CoD.DirectorUtility.ShowCustomGameButtonForCurrentLobby = function ( f114_arg0 )
	if CoD.DirectorUtility.ShowDirectorPregame( f114_arg0 ) and not CoD.DirectorUtility.DisableForCurrentMilestone( f114_arg0 ) then
		return true
	elseif IsZombies() and IsLobbyNetworkModeLAN() then
		return true
	else
		return false
	end
end
 --[[ @ 0]]
DataSources.DirectorPregameButtons = ListHelper_SetupDataSource( "DirectorPregameButtons", function ( f115_arg0, f115_arg1 )
	local f115_local0 = {} --[[ @ 0]]
	local f115_local1 = Engine[@"createmodel"]( Engine[@"getglobalmodel"](), "lobbyRoot.lobbyMainMode" ) --[[ @ 0]]
	f115_local1 = f115_local1:get() --[[ @ 0]]
	local f115_local2 = LuaUtils.GetEModeForLobbyMainMode( f115_local1 ) --[[ @ 0]]
	local f115_local3 = CoD.BreadcrumbUtility.GetStorageLoadoutBufferForPlayer( f115_arg0, f115_local2 ) --[[ @ 0]]
	local f115_local4 = function ( f116_arg0, f116_arg1 )
		local f116_local0 = {} --[[ @ 0]]
		local f116_local1 = f116_arg0.hintText --[[ @ 0]]
		local f116_local2 = false --[[ @ 0]]
		local f116_local3 = false --[[ @ 0]]
		if not f116_local1 and f116_arg0.featureItemIndex then
			f116_local1 = nil --[[ @ 0]]
			if CoD.CACUtility.IsFeatureItemLocked( f115_arg0, f116_arg0.featureItemIndex, f115_local2 ) then
				f116_local1 = CoD.GetUnlockStringForItemIndex( f115_arg0, f116_arg0.featureItemIndex, Enum[@"statindexoffset"][@"hash_13057ABF96AF8289"], f115_local2 ) --[[ @ 0]]
			end
		end
		if f116_arg0.newBreadcrumbFunc then
			f116_local2 = f116_arg0.newBreadcrumbFunc( nil, f115_arg0, f115_local2 ) --[[ @ 0]]
		end
		if f116_arg0.hasRestrictionsEquippedFunc then
			f116_local3 = f116_arg0.hasRestrictionsEquippedFunc( f115_arg0 ) --[[ @ 0]]
		end
		local f116_local4 = table.insert --[[ @ 0]]
		local f116_local5 = f115_local0 --[[ @ 0]]
		local f116_local6 = {} --[[ @ 0]]
		local f116_local7 = {
			name = f116_arg0.name,
			subtitle = f116_arg0.subtitle,
			iconBackground = f116_arg0.iconBackground,
			featureItemIndex = f116_arg0.featureItemIndex or -1,
			showPregameButton = f116_arg0.showPregameButton,
			hintText = f116_local1 or "",
			hasBreadcrumb = f116_local2,
			isRestricted = f116_local3,
			trialLocked = f116_arg0.trialLocked or false
		} --[[ @ 0]]
		local f116_local8 = f116_arg0.breadcrumbModel --[[ @ 0]]
		if not f116_local8 then
			f116_local8 = Engine[@"getglobalmodel"]() --[[ @ 0]]
		end
		f116_local7.breadcrumbModel = f116_local8 --[[ @ 0]]
		f116_local6.models = f116_local7 --[[ @ 0]]
		f116_local6.properties = {
			action = f116_arg1.action,
			actionParam = f116_arg1.actionParam,
			selectIndex = f116_arg1.selectIndex
		} --[[ @ 0]]
		f116_local4( f116_local5, f116_local6 ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	if f115_local1 == Enum[@"lobbymainmode"][@"lobby_mainmode_mp"] then
		local f115_local5 = Engine[@"getglobalmodel"]() --[[ @ 0]]
		f115_local5 = f115_local5["lobbyRoot.selectedGameType"] --[[ @ 0]]
		local f115_local6 = true --[[ @ 0]]
		if f115_arg1:getParent() then
			local f115_local7 = f115_arg1:getParent() --[[ @ 0]]
			if f115_local7._preGameType == "custom" and CoD.DirectorUtility.HideCustomizationGametypes[f115_local5:get()] then
				f115_local6 = false --[[ @ 0]]
			end
		end
		if f115_arg1:getParent() then
			local f115_local7 = f115_arg1:getParent() --[[ @ 0]]
			if f115_local7._preGameType == "public" then
				f115_local7 = Engine[@"getglobalmodel"]() --[[ @ 0]]
				f115_local7 = f115_local7["lobbyRoot.playlistId"] --[[ @ 0]]
				if f115_local7 and f115_local7:get() then
					local f115_local8 = IsLobbyNetworkModeLive() --[[ @ 0]]
					if f115_local8 then
						f115_local8 = Engine[@"getplaylistinfobyid"]( f115_local7:get() ) --[[ @ 0]]
					end
					if f115_local8 and #f115_local8.rotationList > 0 then
						f115_local6 = not CoD.DirectorUtility.HideCustomizationPlaylistGametypes[f115_local8.rotationList[1].gametype] --[[ @ 0]]
					end
				end
			end
		end
		if not CoDShared.IsInTheaterLobby() then
			if not IsLobbyNetworkModeLAN() and (not CoD.DirectorUtility.IsOfflineDemo() or Engine[@"hash_5CB675CA7856DA25"]()) then
				f115_local4( {
					name = @"menu/depot",
					subtitle = @"menu/depot",
					iconBackground = @"$blacktransparent",
					showPregameButton = true,
					breadcrumbModel = DataSources.DepotBreadcrumbs.getModel( f115_arg0 )
				}, {
					action = CoD.DirectorUtility.OpenDirectorPersonalizationMenu,
					actionParam = {
						_sessionMode = f115_local2,
						_storageLoadoutBuffer = f115_local3,
						_allowsQuickSelect = true
					}
				} ) --[[ @ 0]]
				f115_local4( {
					name = @"hash_6FF94A9EB646C873",
					subtitle = @"hash_6FF94A9EB646C873",
					iconBackground = @"$blacktransparent",
					showPregameButton = true,
					breadcrumbModel = DataSources.CharacterBreadcrumbs.recreateCharacterBreadcrumbModelsIfNeeded( f115_arg0, f115_local2 )
				}, {
					action = CoD.DirectorUtility.OpenDirectorChangeCharacterMenu,
					actionParam = {
						_sessionMode = f115_local2,
						_storageLoadoutBuffer = f115_local3,
						_selectIndex = 1
					}
				} ) --[[ @ 0]]
			end
			f115_local4( {
				name = @"menu/change",
				subtitle = @"hash_31A1B9A85C55950F",
				iconBackground = @"$blacktransparent",
				showPregameButton = f115_local6,
				newBreadcrumbFunc = CoD.BreadcrumbUtility.IsAnyScorestreaksNew,
				hasRestrictionsEquippedFunc = CoD.CACUtility.AnyEquippedScorestreaksBanned
			}, {
				action = CoD.DirectorUtility.DirectorOpenOverlayWithMenuSessionMode,
				actionParam = {
					menuName = "SupportSelection",
					eMode = f115_local2
				}
			} ) --[[ @ 0]]
			f115_local4( {
				name = @"menu/edit",
				subtitle = @"hash_6C705394F8BCCCC9",
				iconBackground = @"$blacktransparent",
				featureItemIndex = CoD.CACUtility.GetFeatureCACItemIndex(),
				showPregameButton = f115_local6,
				newBreadcrumbFunc = CoD.BreadcrumbUtility.IsAnythingInCACNew,
				hasRestrictionsEquippedFunc = CoD.CACUtility.AnyClassContainsRestrictedItems
			}, {
				action = CoD.DirectorUtility.OpenCACWithMenuSessionMode,
				actionParam = {
					eMode = f115_local2
				},
				selectIndex = true
			} ) --[[ @ 0]]
		end
	end
	if f115_local1 == Enum[@"lobbymainmode"][@"lobby_mainmode_zm"] then
		if not IsLobbyNetworkModeLAN() and (not CoD.DirectorUtility.IsOfflineDemo() or Engine[@"hash_5CB675CA7856DA25"]()) then
			f115_local4( {
				name = @"menu/characters",
				subtitle = @"menu/characters",
				iconBackground = @"$blacktransparent",
				showPregameButton = true,
				breadcrumbModel = DataSources.CharacterBreadcrumbs.recreateCharacterBreadcrumbModelsIfNeeded( f115_arg0, f115_local2 )
			}, {
				action = CoD.DirectorUtility.OpenDirectorChangeCharacterMenu,
				actionParam = {
					_sessionMode = f115_local2,
					_storageLoadoutBuffer = f115_local3,
					_selectIndex = 1
				}
			} ) --[[ @ 0]]
		end
		f115_local4( {
			name = @"menu/armory",
			subtitle = @"menu/armory",
			iconBackground = @"$blacktransparent",
			showPregameButton = true
		}, {
			action = CoD.DirectorUtility.OpenArmoryMenu,
			actionParam = {
				_sessionMode = f115_local2,
				_loadoutSlot = "armory"
			}
		} ) --[[ @ 0]]
		f115_local4( {
			name = @"menu/edit",
			subtitle = @"hash_43E876868767ECEB",
			iconBackground = @"$blacktransparent",
			showPregameButton = true
		}, {
			action = CoD.DirectorUtility.OpenCACWithMenuSessionMode,
			actionParam = {
				eMode = f115_local2
			},
			selectIndex = true
		} ) --[[ @ 0]]
	end
	if f115_local1 == Enum[@"lobbymainmode"][@"lobby_mainmode_wz"] then
		if not IsLobbyNetworkModeLAN() and (not CoD.DirectorUtility.IsOfflineDemo() or Engine[@"hash_5CB675CA7856DA25"]()) then
			f115_local4( {
				name = @"menu/depot",
				subtitle = @"menu/depot",
				iconBackground = @"$blacktransparent",
				showPregameButton = true,
				breadcrumbModel = DataSources.DepotBreadcrumbs.getModel( f115_arg0 )
			}, {
				action = CoD.DirectorUtility.OpenDirectorPersonalizationMenu,
				actionParam = {
					_sessionMode = f115_local2,
					_storageLoadoutBuffer = f115_local3,
					_allowsQuickSelect = true
				}
			} ) --[[ @ 0]]
		end
		f115_local4( {
			name = @"menu/characters",
			subtitle = @"menu/characters",
			iconBackground = @"$blacktransparent",
			showPregameButton = true,
			breadcrumbModel = DataSources.CharacterBreadcrumbs.recreateCharacterBreadcrumbModelsIfNeeded( f115_arg0, f115_local2 )
		}, {
			action = CoD.DirectorUtility.OpenDirectorChangeCharacterMenu,
			actionParam = {
				_sessionMode = f115_local2,
				_storageLoadoutBuffer = f115_local3
			}
		} ) --[[ @ 0]]
		f115_local4( {
			name = @"menu/armory",
			subtitle = @"menu/armory",
			iconBackground = @"$blacktransparent",
			showPregameButton = true,
			trialLocked = IsGameTrial()
		}, {
			action = CoD.DirectorUtility.OpenWZPersonalizeWeaponMenu,
			actionParam = {
				_sessionMode = f115_local2,
				_loadoutSlot = "wzpersonalize"
			},
			selectIndex = true
		} ) --[[ @ 0]]
	end
	local f115_local5 = CoD.DirectorUtility.CreateOfflineScreenState() --[[ @ 0]]
	if f115_arg1.offlineScreenStateSubscription == nil then
		f115_arg1.offlineScreenStateSubscription = f115_arg1:subscribeToModel( f115_local5, function ()
			f115_arg1:updateDataSource() --[[ @ 0]]
		end, false ) --[[ @ 0]]
	end
	if not f115_arg1.occlusionChangeSubscription then
		f115_arg1.occlusionChangeSubscription = true --[[ @ 0]]
		f115_arg1.menu:appendEventHandler( "occlusion_change", function ( f118_arg0, f118_arg1 )
			if not f118_arg1.occluded then
				f115_arg1:updateDataSource() --[[ @ 0]]
			end
		end ) --[[ @ 0]]
	end
	CoD.DirectorUtility.AddLobbyNavSubscriptionOnce( f115_arg1 ) --[[ @ 0]]
	return f115_local0
end ) --[[ @ 0]]
CoD.DirectorUtility.IsLobbyMenu = function ( f119_arg0, f119_arg1 )
	local f119_local0 = LobbyData.GetCurrentMenuTarget() --[[ @ 0]]
	return f119_local0[@"name"] == f119_arg1
end
 --[[ @ 0]]
CoD.DirectorUtility.IsMainMode = function ( f120_arg0, f120_arg1 )
	local f120_local0 = LobbyData.GetCurrentMenuTarget() --[[ @ 0]]
	return f120_local0[@"mainmode"] == f120_arg1
end
 --[[ @ 0]]
CoD.DirectorUtility.ShowDirectorSelect = function ( f121_arg0 )
	local f121_local0 = LobbyData.GetCurrentMenuTarget() --[[ @ 0]]
	local f121_local1 = Engine[@"getmodel"]( Engine[@"getglobalmodel"](), "lobbyRoot.showSelect" ) --[[ @ 0]]
	local f121_local2 --[[ @ 0]]
	if f121_local0[@"name"] == LuaEnum.UI.DIRECTOR_ONLINE then
		f121_local2 = f121_local1:get() --[[ @ 0]]
		if not f121_local2 then
		
		else
			return f121_local2
		end
	end
	f121_local2 = f121_local0[@"name"] == LuaEnum.UI.DIRECTOR_LAN_SELECT --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorUtility.ShowDirectorMain = function ( f122_arg0, f122_arg1 )
	local f122_local0 = CoD.ModelUtility.IsSelfModelValueNilOrTrue( f122_arg0, f122_arg1, "available" ) --[[ @ 0]]
	local f122_local1 = LobbyData.GetCurrentMenuTarget() --[[ @ 0]]
	local f122_local2 = Engine[@"getmodel"]( Engine[@"getglobalmodel"](), "lobbyRoot.showSelect" ) --[[ @ 0]]
	local f122_local3 --[[ @ 0]]
	if not (f122_local1[@"name"] ~= LuaEnum.UI.DIRECTOR_ONLINE or f122_local2:get()) or f122_local1[@"name"] == LuaEnum.UI.DIRECTOR_LAN then
		f122_local3 = f122_local0 --[[ @ 0]]
	else
		f122_local3 = false --[[ @ 0]]
	end
	return f122_local3
end
 --[[ @ 0]]
CoD.DirectorUtility.ShowDirectorPregame = function ( f123_arg0 )
	local f123_local0 = LobbyData.GetCurrentMenuTarget() --[[ @ 0]]
	local f123_local1 --[[ @ 0]]
	if f123_local0[@"name"] ~= LuaEnum.UI.DIRECTOR_ONLINE_MP_PREGAME and f123_local0[@"name"] ~= LuaEnum.UI.DIRECTOR_ONLINE_ZM_PREGAME and f123_local0[@"name"] ~= LuaEnum.UI.DIRECTOR_ONLINE_WZ_PREGAME then
		f123_local1 = false --[[ @ 0]]
	else
		f123_local1 = true --[[ @ 0]]
	end
	return f123_local1
end
 --[[ @ 0]]
CoD.DirectorUtility.ShowDirectorPublic = function ( f124_arg0 )
	local f124_local0 = LobbyData.GetCurrentMenuTarget() --[[ @ 0]]
	local f124_local1 --[[ @ 0]]
	if f124_local0[@"lobbymode"] ~= Enum[@"lobbymode"][@"lobby_mode_public"] or f124_local0[@"isadvertised"] == 0 then
		f124_local1 = false --[[ @ 0]]
	else
		f124_local1 = true --[[ @ 0]]
	end
	return f124_local1
end
 --[[ @ 0]]
CoD.DirectorUtility.ShowDirectorCustom = function ( f125_arg0, f125_arg1 )
	if not CoD.ModelUtility.IsSelfModelValueNilOrTrue( f125_arg0, f125_arg1, "available" ) then
		return false
	else
		local f125_local0 = LobbyData.GetCurrentMenuTarget() --[[ @ 0]]
		return f125_local0[@"lobbymode"] == Enum[@"lobbymode"][@"lobby_mode_custom"]
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.ShowDirectorPrivate = function ( f126_arg0, f126_arg1 )
	local f126_local0 = LobbyData.GetCurrentMenuTarget() --[[ @ 0]]
	local f126_local1 --[[ @ 0]]
	if f126_local0[@"lobbymode"] ~= Enum[@"lobbymode"][@"lobby_mode_public"] or f126_local0[@"isadvertised"] ~= 0 then
		f126_local1 = false --[[ @ 0]]
	else
		f126_local1 = true --[[ @ 0]]
	end
	return f126_local1
end
 --[[ @ 0]]
CoD.DirectorUtility.ShowDirectorTraining = function ( f127_arg0 )
	local f127_local0 = LobbyData.GetCurrentMenuTarget() --[[ @ 0]]
	return f127_local0[@"lobbymode"] == Enum[@"lobbymode"][@"hash_3B3A1BBF18C0B176"]
end
 --[[ @ 0]]
CoD.DirectorUtility.ShowDirectorArena = function ( f128_arg0 )
	local f128_local0 = LobbyData.GetCurrentMenuTarget() --[[ @ 0]]
	local f128_local1 --[[ @ 0]]
	if f128_local0[@"lobbymode"] ~= Enum[@"lobbymode"][@"lobby_mode_arena"] or f128_local0[@"lobbytype"] ~= Enum[@"lobbytype"][@"lobby_type_private"] then
		f128_local1 = false --[[ @ 0]]
	else
		f128_local1 = true --[[ @ 0]]
	end
	return f128_local1
end
 --[[ @ 0]]
CoD.DirectorUtility.ShowDirectorArenaMatchmaking = function ( f129_arg0 )
	local f129_local0 = LobbyData.GetCurrentMenuTarget() --[[ @ 0]]
	local f129_local1 --[[ @ 0]]
	if f129_local0[@"lobbymode"] ~= Enum[@"lobbymode"][@"lobby_mode_arena"] or f129_local0[@"lobbytype"] ~= Enum[@"lobbytype"][@"lobby_type_game"] then
		f129_local1 = false --[[ @ 0]]
	else
		f129_local1 = true --[[ @ 0]]
	end
	return f129_local1
end
 --[[ @ 0]]
CoD.DirectorUtility.IsMatchmakingInProgress = function ( f130_arg0 )
	local f130_local0 = LobbyData.GetCurrentMenuTarget() --[[ @ 0]]
	if f130_local0[@"lobbymode"] == Enum[@"lobbymode"][@"lobby_mode_arena"] and f130_local0[@"lobbytype"] == Enum[@"lobbytype"][@"lobby_type_game"] then
		return true
	elseif not CoD.ModelUtility.IsGlobalModelValueEqualToEnum( "lobbyRoot.publicLobby.stage", LuaEnum.PUBLIC_LOBBY.INVALID ) and not CoD.DirectorUtility.ShowDirectorPrivate( nil, f130_arg0 ) then
		return true
	else
		return false
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.ShowDirectorLobbyList = function ( f131_arg0 )
	local f131_local0 = CoD.DirectorUtility.IsMatchmakingInProgress( f131_arg0 ) --[[ @ 0]]
	if f131_local0 then
		if not CoD.DirectorUtility.IsMainMode( f131_arg0, Enum[@"emodes"][@"mode_warzone"] ) then
			f131_local0 = not CoD.DirectorUtility.ShowDirectorPrivate( nil, f131_arg0 ) --[[ @ 0]]
		else
			f131_local0 = false --[[ @ 0]]
		end
	end
	return f131_local0
end
 --[[ @ 0]]
CoD.DirectorUtility.ShowDirectorCustomMatchCoDCasterList = function ( f132_arg0 )
	local f132_local0 = LobbyData.GetCurrentMenuTarget() --[[ @ 0]]
	if f132_local0[@"name"] == LuaEnum.UI.DIRECTOR_ONLINE_CP_STORY then
		return false
	elseif Engine[@"getlobbyclientcount"]( Enum[@"lobbymodule"][@"lobby_module_client"], Engine[@"lobbygetcontrollinglobbysession"]( Enum[@"lobbymodule"][@"lobby_module_client"] ), Enum[@"lobbyclientfiltertype"][@"lobby_client_filter_type_local"] ) == 1 and Engine[@"getgametypesetting"]( @"allowspectating" ) == 1 then
		return true
	else
		return false
	end
end
 --[[ @ 0]]
CoD.DirectorUtility[@"hash_61E20A632CB63092"] = function ( f133_arg0 )
	local f133_local0 = LobbyData.GetCurrentMenuTarget() --[[ @ 0]]
	local f133_local1 = Engine[@"converttoxhash"]( f133_local0[@"room"] ) --[[ @ 0]]
	local f133_local2 --[[ @ 0]]
	if f133_local1 ~= @"lobby_pose" and f133_local1 ~= @"warzone" and f133_local1 ~= @"arena_pose" and f133_local1 ~= @"private_lobby_pose" then
		f133_local2 = false --[[ @ 0]]
	else
		f133_local2 = true --[[ @ 0]]
	end
	return f133_local2
end
 --[[ @ 0]]
CoD.DirectorUtility.ForceNotifyPrivateClientUpdate = function ()
	local f134_local0 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f134_local0.lobbyRoot.privateClient.update:forceNotifySubscriptions() --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorUtility.ShowDirectorCustomMatchPartyOverflowList = function ( f135_arg0 )
	local f135_local0 = LobbyData.GetCurrentMenuTarget() --[[ @ 0]]
	if f135_local0[@"name"] == LuaEnum.UI.DIRECTOR_ONLINE_CP_STORY then
		return false
	end
	local f135_local1 = Engine[@"getteams"]( Enum[@"lobbymodule"][@"lobby_module_client"], Engine[@"lobbygetcontrollinglobbysession"]( Enum[@"lobbymodule"][@"lobby_module_client"] ) ) --[[ @ 0]]
	for f135_local5, f135_local6 in pairs( f135_local1.clientTeams ) --[[ @ 0]] do
		if f135_local6.team == Enum[@"team_t"][@"team_free"] then
			return true
		end
	end
	return false
end
 --[[ @ 0]]
CoD.DirectorUtility.ShowDirectorCustomMatchBotButtons = function ( f136_arg0 )
	local f136_local0 = LobbyData.GetCurrentMenuTarget() --[[ @ 0]]
	if Dvar[@"lobby_hostbots"]:get() == true and f136_local0[@"name"] ~= LuaEnum.UI.DIRECTOR_ONLINE_CP_STORY then
		local f136_local1 = Engine[@"getglobalmodel"]() --[[ @ 0]]
		f136_local1 = f136_local1.MapVote.mapVoteGameModeNext --[[ @ 0]]
		if f136_local1 and CoD.GameTypeUtility.DoesGameTypeSupportBots( f136_local1:get() ) then
			return true
		end
	end
	return false
end
 --[[ @ 0]]
CoD.DirectorUtility.ShowDirectorCustomMatchStartButton = function ( f137_arg0 )
	local f137_local0 = LobbyData.GetCurrentMenuTarget() --[[ @ 0]]
	if f137_local0[@"name"] ~= LuaEnum.UI.DIRECTOR_ONLINE_MP_CUSTOM and f137_local0[@"name"] ~= LuaEnum.UI.DIRECTOR_ONLINE_MP_ARENA_CUSTOM then
		return false
	else
		return Engine[@"islobbyhost"]( Enum[@"lobbytype"][@"lobby_type_private"] )
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.ShowDirectorTheater = function ( f138_arg0 )
	local f138_local0 = LobbyData.GetCurrentMenuTarget() --[[ @ 0]]
	return f138_local0[@"lobbymode"] == Enum[@"lobbymode"][@"lobby_mode_theater"]
end
 --[[ @ 0]]
CoD.DirectorUtility.ShouldShowFillSquadButton = function ()
	local f139_local0 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f139_local0 = f139_local0.lobbyRoot --[[ @ 0]]
	if f139_local0.lobbyMainMode:get() ~= Enum[@"lobbymainmode"][@"lobby_mainmode_wz"] then
		return false
	elseif f139_local0.publicLobby.stage:get() ~= LuaEnum.PUBLIC_LOBBY.INVALID then
		return false
	elseif IsPrivateLobbyFull() then
		return false
	elseif CoD.DirectorUtility.DisableForCurrentMilestone() then
		return false
	else
		return true
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.IsLobbyReadyUp = function ( f140_arg0, f140_arg1 )
	local f140_local0 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	local f140_local1 = LobbyData.GetLobbyMenuByID( f140_local0.lobbyRoot.lobbyNav:get() ) --[[ @ 0]]
	if f140_local1 == nil then
		return false
	else
		local f140_local2 --[[ @ 0]]
		if f140_local1[@"id"] ~= LobbyData.GetLobbyMenuIDByName( LuaEnum.UI.DIRECTOR_ONLINE_ZM_PRIVATE ) and f140_local1[@"id"] ~= LobbyData.GetLobbyMenuIDByName( LuaEnum.UI.DIRECTOR_ONLINE_ZM_PUBLIC ) then
			f140_local2 = false --[[ @ 0]]
		else
			f140_local2 = true --[[ @ 0]]
		end
	end
	return f140_local2
end
 --[[ @ 0]]
CoD.DirectorUtility.WaitingForMorePlayers = function ()
	return (Engine[@"getmodelvalue"]( Engine[@"createmodel"]( Engine[@"createmodel"]( Engine[@"getmodel"]( Engine[@"getglobalmodel"](), "lobbyRoot" ), "lobbyList" ), "playerCount" ) ) or 0) < LuaUtils.GetMinPlayersToStart()
end
 --[[ @ 0]]
CoD.DirectorUtility.IsDirectorButtonOptionLocked = function ( f142_arg0, f142_arg1, f142_arg2 )
	local f142_local0 = f142_arg1 --[[ @ 0]]
	local f142_local1 = f142_arg1.actionParam --[[ @ 0]]
	if f142_local1 then
		if type( f142_arg1.actionParam ) == "table" then
			f142_local1 = f142_arg1.actionParam.eMode --[[ @ 0]]
		else
			f142_local1 = false --[[ @ 0]]
		end
	end
	if not f142_local1 then
		local f142_local2 = Engine[@"createmodel"]( Engine[@"getglobalmodel"](), "lobbyRoot.lobbyMainMode" ) --[[ @ 0]]
		f142_local1 = LuaUtils.GetEModeForLobbyMainMode( f142_local2:get() ) --[[ @ 0]]
	end
	if CoD.SafeGetModelValue( f142_arg1:getModel(), "locked" ) then
		return true
	elseif not f142_local1 then
		return false
	elseif CoD.CACUtility.IsProgressionEnabled( f142_local1 ) then
		local f142_local3 = f142_arg1:getModel() --[[ @ 0]]
		if f142_local3 and f142_local3.featureItemIndex then
			local f142_local4 = f142_local3.featureItemIndex:get() --[[ @ 0]]
			if CoD.CACUtility.GetUnlockableItemInfo( f142_local4, f142_local1 ) then
				return Engine[@"isitemlocked"]( f142_arg2, f142_local4, f142_local1 )
			end
		end
	end
	return false
end
 --[[ @ 0]]
CoD.DirectorUtility.ShowForAllClients = function ( f143_arg0, f143_arg1 )
	local f143_local0 = IsLobbyHostOfCurrentMenu() --[[ @ 0]]
	local f143_local1 = CoD.ModelUtility.IsSelfModelValueTrue( f143_arg0, f143_arg1, "showForAllClients" ) --[[ @ 0]]
	local f143_local2 = f143_local0 --[[ @ 0]]
	local f143_local3 --[[ @ 0]]
	if not f143_local0 then
		f143_local3 = f143_local1 --[[ @ 0]]
	else
		f143_local3 = false --[[ @ 0]]
	end
	return f143_local3
end
 --[[ @ 0]]
CoD.DirectorUtility.ShouldHideCRMFeatureList = function ( f144_arg0, f144_arg1 )
	if IsGameTrial() and IsBooleanDvarSet( @"hash_31C389A5A38BA7C" ) then
		return false
	end
	local f144_local0 = CoD.MOTDUtility.MOTD_ShouldShowMOTD( f144_arg1 ) --[[ @ 0]]
	if not f144_local0 then
		f144_local0 = CoD.MOTDUtility.HasMessageAtLocation( f144_arg1, "crm_featured" ) --[[ @ 0]]
	end
	local f144_local1 = CoD.VideoStreamingUtility.HasLiveEvent( f144_arg1 ) --[[ @ 0]]
	if f144_local1 then
		f144_local1 = CoD.VideoStreamingUtility.IsLEVFeaturedCardEnabled() --[[ @ 0]]
	end
	local f144_local2 --[[ @ 0]]
	if f144_local0 or f144_local1 then
		f144_local2 = IsLobbyNetworkModeLAN() --[[ @ 0]]
	else
		f144_local2 = true --[[ @ 0]]
	end
	return f144_local2
end
 --[[ @ 0]]
CoD.DirectorUtility.IsElementMapOrGameTypeSelected = function ( f145_arg0, f145_arg1 )
	local f145_local0 = nil --[[ @ 0]]
	local f145_local1 = false --[[ @ 0]]
	local f145_local2 = {} --[[ @ 0]]
	if f145_arg0.isMapElement or f145_arg0.mapList then
		f145_local0 = Engine[@"converttoxhash"]( Engine[@"lobbygetmap"]() ) --[[ @ 0]]
		f145_local2 = f145_arg0.mapList or {} --[[ @ 0]]
	elseif f145_arg0.isGameTypeElement or f145_arg0.gametypeList then
		f145_local1 = true --[[ @ 0]]
		local f145_local3 = DataSources.MapVote.getModel( f145_arg1 ) --[[ @ 0]]
		if f145_local3.mapVoteGameModeNext then
			f145_local0 = f145_local3.mapVoteGameModeNext:get() --[[ @ 0]]
		end
		f145_local2 = f145_arg0.gametypeList or {} --[[ @ 0]]
	end
	if f145_local0 then
		local f145_local3 = f145_arg0:getModel( f145_arg1, "id" ) --[[ @ 0]]
		local f145_local4 = f145_local3 and f145_local3:get() --[[ @ 0]]
		if f145_local1 and type( f145_local4 ) == "string" then
			f145_local4 = Engine[@"converttoxhash"]( f145_local4 ) --[[ @ 0]]
		end
		if f145_local4 == f145_local0 then
			return true
		end
		for f145_local9, f145_local10 in ipairs( f145_local2 ) --[[ @ 0]] do
			local f145_local8 = f145_local10.id --[[ @ 0]]
			if f145_local1 and type( f145_local8 ) == "string" then
				f145_local8 = Engine[@"converttoxhash"]( f145_local8 ) --[[ @ 0]]
			end
			if f145_local8 == f145_local0 then
				return true
			end
		end
	end
	return false
end
 --[[ @ 0]]
CoD.DirectorUtility.LobbyListPlayerCountAndMax = function ( f146_arg0 )
	local f146_local0 = Engine[@"createmodel"]( Engine[@"getmodel"]( Engine[@"getglobalmodel"](), "lobbyRoot" ), "lobbyList" ) --[[ @ 0]]
	local f146_local1 = Engine[@"createmodel"]( f146_local0, "playerCount" ) --[[ @ 0]]
	local f146_local2 = Engine[@"createmodel"]( f146_local0, "maxPlayers" ) --[[ @ 0]]
	local f146_local3 = Engine[@"getmodelvalue"]( f146_local1 ) or 0 --[[ @ 0]]
	local f146_local4 = Engine[@"getmodelvalue"]( f146_local2 ) or 0 --[[ @ 0]]
	local f146_local5 --[[ @ 0]]
	if f146_local3 > 1 then
		f146_local5 = @"hash_A8276D01F6CFB14" --[[ @ 0]]
		if not f146_local5 then
		
		else
			return Engine[@"hash_4F9F1239CFD921FE"]( f146_local5, f146_local3, f146_local4 )
		end
	end
	f146_local5 = @"hash_1733142924212699" --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorUtility.PrivateLobbyListPlayerCountAndMax = function ( f147_arg0 )
	local f147_local0 = Engine[@"getlobbyclientcount"]( Enum[@"lobbymodule"][@"lobby_module_client"], Enum[@"lobbytype"][@"lobby_type_private"], Enum[@"lobbyclientfiltertype"][@"lobby_client_filter_type_all"] ) --[[ @ 0]]
	local f147_local1 = Engine[@"getlobbymaxclients"]( Enum[@"lobbymodule"][@"lobby_module_client"], Enum[@"lobbytype"][@"lobby_type_private"] ) --[[ @ 0]]
	local f147_local2 --[[ @ 0]]
	if f147_local0 > 1 then
		f147_local2 = @"hash_A8276D01F6CFB14" --[[ @ 0]]
		if not f147_local2 then
		
		else
			return Engine[@"hash_4F9F1239CFD921FE"]( f147_local2, f147_local0, f147_local1 )
		end
	end
	f147_local2 = @"hash_1733142924212699" --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorUtility.TimeRemainingForMatchStart = function ( f148_arg0 )
	if not CoD.isPC and f148_arg0 > 10 then
		return "10+"
	else
		return f148_arg0
	end
end
 --[[ @ 0]]
local f0_local0 = function ( f149_arg0, f149_arg1, f149_arg2 )
	if not CoD.isZombie and IsFirstTimeSetup( f149_arg1, Enum[@"emodes"][@"mode_multiplayer"] ) and (not Engine[@"iscampaigngame"]() or not IsFirstTimeSetup( f149_arg1, Enum[@"emodes"][@"mode_campaign"] )) then
		return 
	end
	local f149_local0 = f149_arg0.occludedBy --[[ @ 0]]
	while f149_local0 ~= nil do
		if f149_local0.occludedBy ~= nil then
			f149_local0 = f149_local0.occludedBy --[[ @ 0]]
		end
		if f149_arg2 == true and f149_local0.disableLeaderChangePopupShutdown ~= nil then
			return 
		end
		while f149_local0 and f149_local0.menuName ~= "Director" do
			f149_local0 = GoBack( f149_local0, f149_arg1 ) --[[ @ 0]]
		end
		Engine[@"sendclientscriptnotify"]( f149_arg1, "menu_change" .. Engine[@"getlocalclientnum"]( f149_arg1 ), {
			menu = "Main",
			status = "closeToMenu"
		} ) --[[ @ 0]]
		LuaUtils.MessageDialogForceSubscriptionFire() --[[ @ 0]]
		return 
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.GetDirectorFiltersCardsForMode = function ( f150_arg0, f150_arg1, f150_arg2, f150_arg3 )
	local f150_local0 = {} --[[ @ 0]]
	local f150_local1 = CoD.DirectorUtility.GetPlaylists() --[[ @ 0]]
	local f150_local2 = #f150_local1 --[[ @ 0]]
	local f150_local3 = nil --[[ @ 0]]
	local f150_local4 = Enum[@"lobbymainmode"][@"lobby_mainmode_mp"] --[[ @ 0]]
	if CoD.DirectorUtility.IsMainMode( f150_arg1, f150_local4 ) then
		for f150_local5 = 1 --[[ @ 0]], f150_local2, 1 do
			local f150_local8 = f150_local1[f150_local5] --[[ @ 0]]
			if f150_local4 == f150_local8.lobbyMainMode then
				local f150_local9 = CoD.DirectorUtility.CreateFilter( f150_arg1, f150_local8.lobbyMainMode, "Featured", @"menu/featured", @"hash_4F713C5F8E1A479C", f150_local8.entries, f150_arg0._mainMode, IsArenaMode(), true, f150_arg3 ) --[[ @ 0]]
				if f150_local3 == nil then
					f150_local3 = f150_local9 --[[ @ 0]]
				end
				for f150_local10 = 1 --[[ @ 0]], #f150_local9.cards, 1 do
					table.insert( f150_local3.cards, f150_local9.cards[f150_local10] ) --[[ @ 0]]
				end
			end
		end
	end
	if f150_local3 and #f150_local3.cards > 0 then
		f150_local0[#f150_local0 + 1] = {} --[[ @ 0]]
		f150_local0[#f150_local0] = f150_local3 --[[ @ 0]]
	end
	local f150_local5 = 1 --[[ @ 0]]
	for f150_local6 = 1 --[[ @ 0]], f150_local2, 1 do
		local f150_local9 = f150_local1[f150_local6] --[[ @ 0]]
		if f150_local9.hidden ~= true then
			local f150_local10 = LuaUtils.GetEModeForLobbyMainMode( f150_local9.lobbyMainMode ) --[[ @ 0]]
			if f150_local10 == nil or LuaUtils.GetDisplayNameForEMode( f150_local10 ) ~= @"hash_0" then
				local f150_local11 = CoD.DirectorUtility.CreateFilter( f150_arg1, f150_local9.lobbyMainMode, "Grp" .. f150_local5, f150_local9.nameRef, f150_local9.icon, f150_local9.entries, f150_arg2, IsArenaMode(), nil, f150_arg3 ) --[[ @ 0]]
				if f150_local3 and #f150_local3.cards > 0 then
					for f150_local12 = 1 --[[ @ 0]], #f150_local11.cards, 1 do
						if f150_local11.cards[f150_local12] then
							f150_local11.cards[f150_local12].featured = false --[[ @ 0]]
						end
					end
				end
				if #f150_local11.cards > 0 then
					f150_local0[#f150_local0 + 1] = {} --[[ @ 0]]
					f150_local0[#f150_local0] = f150_local11 --[[ @ 0]]
				end
			end
			f150_local5 = f150_local5 + 1 --[[ @ 0]]
		end
	end
	return f150_local0
end
 --[[ @ 0]]
CoD.DirectorUtility.SetupDirectorFiltersCardsForMode = function ( f151_arg0, f151_arg1, f151_arg2 )
	CoD.DirectorUtility.Filters = {} --[[ @ 0]]
	CoD.DirectorUtility.Filters = CoD.DirectorUtility.GetDirectorFiltersCardsForMode( f151_arg0, f151_arg1, f151_arg2, false ) --[[ @ 0]]
	for f151_local3, f151_local4 in ipairs( CoD.DirectorUtility.Filters ) --[[ @ 0]] do
		DataSources["DirectorCardList_" .. f151_local4.id] = DataSourceHelpers.ListSetup( "DirectorCardList_" .. f151_local4.id, function ( f152_arg0, f152_arg1 )
			if not f152_arg1.__hasGameUpdateSubscription then
				f152_arg1.__hasGameUpdateSubscription = true --[[ @ 0]]
				local f152_local0 = f152_arg1 --[[ @ 0]]
				local f152_local1 = f152_arg1.subscribeToModel --[[ @ 0]]
				local f152_local2 = Engine[@"getglobalmodel"]() --[[ @ 0]]
				f152_local1( f152_local0, f152_local2:create( "lobbyRoot.privateClient.update" ), function ()
					f152_arg1:updateDataSource( true ) --[[ @ 0]]
				end, false ) --[[ @ 0]]
			end
			return CoD.DirectorUtility.CreateCardListDataSource( f152_arg1, f152_arg0, f151_local4.id, f151_local4 )
		end, true ) --[[ @ 0]]
	end
	if IsArenaMode() then
		DataSources.DirectorCardList_ArenaNews = DataSourceHelpers.ListSetup( "DirectorCardList_ArenaNews", function ( f154_arg0, f154_arg1 )
			return {}
		end, true ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.SetupDirectorFiltersCards = function ( f155_arg0, f155_arg1, f155_arg2 )
	CoD.DirectorUtility.SetupDirectorFiltersCardsForMode( f155_arg0, f155_arg1, f155_arg0._mainMode ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorUtility.IsPlaylistShown = function ( f156_arg0 )
	local f156_local0 = IsLobbyNetworkModeLive() --[[ @ 0]]
	if f156_local0 then
		f156_local0 = CoD.DirectorUtility.GetPlaylists() --[[ @ 0]]
	end
	for f156_local7, f156_local8 in ipairs( f156_local0 or {} ) --[[ @ 0]] do
		for f156_local4, f156_local5 in ipairs( f156_local8.entries or {} ) --[[ @ 0]] do
			if f156_local5.id == f156_arg0 then
				return not f156_local8.hidden
			end
		end
	end
	return false
end
 --[[ @ 0]]
CoD.DirectorUtility.RegionOnlyAllowsFeaturedPlaylistForMode = function ( f157_arg0, f157_arg1 )
	if f157_arg1 ~= Enum[@"lobbymainmode"][@"lobby_mainmode_wz"] then
		return false
	end
	local f157_local0 = Dvar[@"ui_wzfeaturedonlycountries"]:get() --[[ @ 0]]
	if not f157_local0 then
		return false
	end
	local f157_local1 = "" --[[ @ 0]]
	if Dvar[@"hash_50A227017683285B"]:exists() == true and Dvar[@"hash_50A227017683285B"]:get() == true then
		Engine[@"printinfo"]( Enum[@"consolelabel_e"][@"con_label_live"], "RegionOnlyAllowsFeaturedPlaylistForMode: Using geoip\n" ) --[[ @ 0]]
		local f157_local2 = Engine[@"hash_36D9D7474CDD485B"]() --[[ @ 0]]
		if f157_local2 ~= nil then
			local f157_local3, f157_local4 = string.match( f157_local2, "(%a+)-(%a+)" ) --[[ @ 0]]
			f157_local1 = string.lower( f157_local4 ) --[[ @ 0]]
		else
			Engine[@"printwarning"]( Enum[@"consolelabel_e"][@"con_label_live"], "RegionOnlyAllowsFeaturedPlaylistForMode: Couldn't get country code\n" ) --[[ @ 0]]
		end
	else
		local f157_local2 = Engine[@"hash_56BA9980BA648FB3"]( f157_arg0 ) --[[ @ 0]]
		f157_local1 = f157_local2.Country --[[ @ 0]]
	end
	Engine[@"printinfo"]( Enum[@"consolelabel_e"][@"con_label_live"], "RegionOnlyAllowsFeaturedPlaylistForMode: Country is " .. f157_local1 .. "\n" ) --[[ @ 0]]
	for f157_local5 in string.gmatch( f157_local0, "([^,]+)" ) --[[ @ 0]] do
		if f157_local5 == f157_local1 then
			return true
		end
	end
	return false
end
 --[[ @ 0]]
CoD.DirectorUtility.IsInLowPopRegion = function ( f158_arg0 )
	local f158_local0 = Dvar[@"hash_19FECDADF7181E65"]:get() --[[ @ 0]]
	if not f158_local0 then
		return false
	end
	local f158_local1 = "" --[[ @ 0]]
	if Dvar[@"hash_50A227017683285B"]:exists() == true and Dvar[@"hash_50A227017683285B"]:get() == true then
		Engine[@"printinfo"]( Enum[@"consolelabel_e"][@"con_label_live"], "IsInLowPopRegion: Using geoip\n" ) --[[ @ 0]]
		local f158_local2 = Engine[@"hash_36D9D7474CDD485B"]() --[[ @ 0]]
		if f158_local2 ~= nil then
			local f158_local3, f158_local4 = string.match( f158_local2, "(%a+)-(%a+)" ) --[[ @ 0]]
			f158_local1 = string.lower( f158_local4 ) --[[ @ 0]]
		else
			Engine[@"printwarning"]( Enum[@"consolelabel_e"][@"con_label_live"], "IsInLowPopRegion: Couldn't get country code\n" ) --[[ @ 0]]
		end
	else
		local f158_local2 = Engine[@"hash_56BA9980BA648FB3"]( f158_arg0 ) --[[ @ 0]]
		f158_local1 = f158_local2.Country --[[ @ 0]]
	end
	Engine[@"printinfo"]( Enum[@"consolelabel_e"][@"con_label_live"], "IsInLowPopRegion: Country is " .. f158_local1 .. "\n" ) --[[ @ 0]]
	for f158_local5 in string.gmatch( f158_local0, "([^,]+)" ) --[[ @ 0]] do
		if f158_local5 == f158_local1 then
			return true
		end
	end
	return false
end
 --[[ @ 0]]
CoD.DirectorUtility.GetPreferredPlaylistForMainMode = function ( f159_arg0, f159_arg1, f159_arg2 )
	local f159_local0 = CoD.LobbyUtility.GetClientList() --[[ @ 0]]
	local f159_local1 = LuaUtils.GetAbbreviationForMainMode( f159_arg1 ) --[[ @ 0]]
	local f159_local2 --[[ @ 0]]
	if f159_arg2 then
		f159_local2 = "playlist_arena" --[[ @ 0]]
		if not f159_local2 then
		
		else
			local f159_local3 = Engine[@"getprofilevarint"]( f159_arg0, f159_local2 ) --[[ @ 0]]
			local f159_local4 = Engine[@"getplaylistinfobyid"]( f159_local3 ) --[[ @ 0]]
			if f159_local4 and f159_local4.mainMode == f159_arg1 and CoD.DirectorUtility.AllMembersHaveAMapInPlaylist( f159_local0, f159_local4 ) and not f159_arg2 and CoD.DirectorUtility.IsPlaylistShown( f159_local3 ) and not CoD.DirectorUtility.RegionOnlyAllowsFeaturedPlaylistForMode( f159_arg0, f159_arg1 ) and (not f159_local4.isQuickplayCard or CoD.DirectorUtility.IsQuickplayAvailableForMode( f159_arg1 )) and (not CoD.isPC or not CoD.PCKoreaUtility.IsPlaylistEntryBlacklisted( f159_local4 )) then
				return f159_local3
			end
			local f159_local5 = IsLobbyNetworkModeLive() --[[ @ 0]]
			if f159_local5 then
				f159_local5 = CoD.DirectorUtility.GetPlaylists() --[[ @ 0]]
			end
			if f159_local5 then
				for f159_local9, f159_local10 in ipairs( CoD.DirectorUtility.MainScreenModes ) --[[ @ 0]] do
					if f159_local10.isVisible() and f159_local10.mainMode == f159_arg1 and f159_local10.arena == f159_arg2 then
						f159_local4 = CoD.DirectorUtility.GetFirstOrFeaturedPlaylistEntry( f159_arg0, f159_local5, f159_local10, false, true ) --[[ @ 0]]
						if f159_local4 and f159_local4.properties then
							return f159_local4.properties.param.playlist
						end
					end
				end
			end
		end
	end
	f159_local2 = "playlist_" .. f159_local1 --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorUtility.SetPreferredPlaylistForMainMode = function ( f160_arg0, f160_arg1, f160_arg2, f160_arg3 )
	local f160_local0 = LuaUtils.GetAbbreviationForMainMode( f160_arg1 ) --[[ @ 0]]
	local f160_local1 --[[ @ 0]]
	if f160_arg3 then
		f160_local1 = "playlist_arena" --[[ @ 0]]
		if not f160_local1 then
		
		else
			Engine[@"setprofilevar"]( f160_arg0, f160_local1, f160_arg2 ) --[[ @ 0]]
		end
	end
	f160_local1 = "playlist_" .. f160_local0 --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorUtility.LoadPreferredPlaylist = function ( f161_arg0, f161_arg1, f161_arg2 )
	if f161_arg1 ~= Enum[@"lobbymainmode"][@"lobby_mainmode_invalid"] then
		local f161_local0 = CoD.DirectorUtility.GetPreferredPlaylistForMainMode( f161_arg0, f161_arg1, f161_arg2 ) --[[ @ 0]]
		if f161_local0 then
			Engine[@"setplaylistid"]( f161_local0 ) --[[ @ 0]]
			LuaUtils.SetQuickplayPlaylistID( f161_local0 ) --[[ @ 0]]
			Engine[@"lobbyevent"]( "OnGameLobbyGameServerDataUpdate", {} ) --[[ @ 0]]
		end
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.SaveCurrentPlaylistForMainMode = function ( f162_arg0, f162_arg1, f162_arg2 )
	local f162_local0 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f162_local0 = f162_local0.lobbyRoot.lobbyMainMode:get() --[[ @ 0]]
	if f162_local0 ~= Enum[@"lobbymainmode"][@"lobby_mainmode_invalid"] or f162_arg1 ~= nil then
		local f162_local1 = Engine[@"getglobalmodel"]() --[[ @ 0]]
		f162_local1 = f162_local1.lobbyRoot.playlistId:get() --[[ @ 0]]
		if Engine[@"getplaylistinfobyid"]( f162_local1 ) then
			if f162_local0 ~= Enum[@"lobbymainmode"][@"lobby_mainmode_invalid"] then
				local f162_local2 = f162_local0 --[[ @ 0]]
			end
			local f162_local3 = f162_local2 or f162_arg1 --[[ @ 0]]
			if f162_arg2 then
				local f162_local4 = f162_arg2 --[[ @ 0]]
			end
			CoD.DirectorUtility.SetPreferredPlaylistForMainMode( f162_arg0, f162_local3, f162_local1, f162_local4 or IsArenaMode() ) --[[ @ 0]]
		end
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.SetupDirectorStateDefaultFocusCallbacks = function ( f163_arg0, f163_arg1 )
	f163_arg0._stateFocusMap = {} --[[ @ 0]]
	f163_arg0._customLobbySavedState = {} --[[ @ 0]]
	f163_arg0._updateDefaultFocus = function ()
		f163_arg0:ChangeFocusedElement( f163_arg1, nil, true ) --[[ @ 0]]
		if f163_arg0:restoreState( f163_arg1 ) then
			
		elseif f163_arg0._stateFocusMap[f163_arg0.currentState] and IsGamepadOrKeyboardNavigation( f163_arg1 ) then
			CoD.FreeCursorUtility.GiveFocusToElementsDefaultFocus( f163_arg0, f163_arg0._stateFocusMap[f163_arg0.currentState], f163_arg1 ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( f163_arg0, "setState", f163_arg0._updateDefaultFocus ) --[[ @ 0]]
	f163_arg0.restoreState = function ( f165_arg0, f165_arg1 )
		if f165_arg0._customLobbySavedState[f165_arg0.currentState] then
			local f165_local0 = LUI.savedMenuStates[f165_arg0.id] --[[ @ 0]]
			LUI.savedMenuStates[f165_arg0.id] = f165_arg0._customLobbySavedState[f165_arg0.currentState] --[[ @ 0]]
			if CoD.Menu.restoreState( f165_arg0, f165_arg1 ) then
				return true
			else
				LUI.savedMenuStates[f165_arg0.id] = f165_local0 --[[ @ 0]]
				return CoD.Menu.restoreState( f165_arg0, f165_arg1 )
			end
		else
			return false
		end
	end
	 --[[ @ 0]]
	f163_arg0.saveState = function ( f166_arg0, f166_arg1 )
		if f166_arg0.currentState then
			f166_arg0._customLobbySavedState[f166_arg0.currentState] = f166_arg0:getSaveStateTable( f166_arg1 ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	f163_arg0.clearSavedState = function ( f167_arg0, f167_arg1 )
		if f167_arg0.currentState then
			f167_arg0._customLobbySavedState[f167_arg0.currentState] = nil --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorUtility.RegisterDirectorStateDefaultFocus = function ( f168_arg0, f168_arg1, f168_arg2 )
	f168_arg0._stateFocusMap[f168_arg2] = f168_arg1 --[[ @ 0]]
	if f168_arg2 == f168_arg0.currentState then
		f168_arg0.__defaultFocus = f168_arg1 --[[ @ 0]]
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.ForceStreamedPlaylistImages = {} --[[ @ 0]]
CoD.DirectorUtility.ForceStreamPlaylistImages = function ( f169_arg0 )
	local f169_local0 = {} --[[ @ 0]]
	for f169_local7, f169_local8 in pairs( CoD.DirectorUtility.GetPlaylists() ) --[[ @ 0]] do
		for f169_local4, f169_local5 in ipairs( f169_local8.entries ) --[[ @ 0]] do
			if f169_arg0 == Enum[@"emodes"][@"mode_invalid"] or f169_arg0 == LuaUtils.GetEModeForLobbyMainMode( f169_local5.mainMode ) then
				CoD.BaseUtility.AddForcedImageToTable( f169_local5.image, f169_local0 ) --[[ @ 0]]
			end
		end
	end
	CoD.DirectorUtility.ForceStreamedPlaylistImages = CoD.BaseUtility.ForceStreamHelper( CoD.DirectorUtility.ForceStreamedPlaylistImages, f169_local0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorUtility.ForceStreamDirectorImagesForMode = function ( f170_arg0, f170_arg1 )
	CoD.CACUtility.ForceStreamCACImages( f170_arg0, f170_arg1 ) --[[ @ 0]]
	CoD.MapUtility.ForceStreamMapAndGameTypeImages( f170_arg1 ) --[[ @ 0]]
	CoD.RankUtility.ForceStreamRankIcons( f170_arg1 ) --[[ @ 0]]
	CoD.DirectorUtility.ForceStreamPlaylistImages( f170_arg1 ) --[[ @ 0]]
	if CoD.DirectorUtility.PostponingForceStreamedImages then
		CoD.DirectorUtility.PostponeForceStreamedImages( f170_arg0 ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.PostponingForceStreamedImages = false --[[ @ 0]]
CoD.DirectorUtility.PostponeForceStreamedImages = function ( f171_arg0 )
	CoD.BaseUtility.ForceStreamHelper( CoD.CACUtility.ForceStreamedImages, {} ) --[[ @ 0]]
	CoD.BaseUtility.ForceStreamHelper( CoD.MapUtility.ForceStreamedImages, {} ) --[[ @ 0]]
	CoD.BaseUtility.ForceStreamHelper( CoD.RankUtility.ForceStreamedRankIcons, {} ) --[[ @ 0]]
	CoD.BaseUtility.ForceStreamHelper( CoD.DirectorUtility.ForceStreamedPlaylistImages, {} ) --[[ @ 0]]
	CoD.DirectorUtility.PostponingForceStreamedImages = true --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorUtility.ResumeForceStreamedImages = function ( f172_arg0 )
	CoD.BaseUtility.ForceStreamHelper( {}, CoD.CACUtility.ForceStreamedImages ) --[[ @ 0]]
	CoD.BaseUtility.ForceStreamHelper( {}, CoD.MapUtility.ForceStreamedImages ) --[[ @ 0]]
	CoD.BaseUtility.ForceStreamHelper( {}, CoD.RankUtility.ForceStreamedRankIcons ) --[[ @ 0]]
	CoD.BaseUtility.ForceStreamHelper( {}, CoD.DirectorUtility.ForceStreamedPlaylistImages ) --[[ @ 0]]
	CoD.DirectorUtility.PostponingForceStreamedImages = false --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorUtility.GameTypeAllowsBots = function ()
	return CoD.ZombieUtility and CoD.ZombieUtility.GameTypeAllowsBots()
end
 --[[ @ 0]]
CoD.DirectorUtility.IsOfflineScreenStateCustomGame = function ()
	return CoD.ZombieUtility and CoD.ZombieUtility.IsZMOfflineScreenStateCustomGame() or false
end
 --[[ @ 0]]
CoD.DirectorUtility.OfflineNavigateToCustomGames = function ( f175_arg0, f175_arg1 )
	if CoD.ZombieUtility ~= nil then
		CoD.ZombieUtility.ZMOfflineNavigateToCustomGames( f175_arg1 ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.CreateOfflineScreenState = function ()
	local f176_local0 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	return f176_local0:create( "offlineScreenState", true )
end
 --[[ @ 0]]
CoD.DirectorUtility.SetDefaultGameTypeDifficulty = function ( f177_arg0, f177_arg1 )
	if CoD.ZombieUtility and IsZombies() then
		CoD.ZombieUtility.SetDefaultGameTypeZMDifficulty( CoD.SafeGetModelValue( f177_arg1:getModel(), "id" ) ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
DataSourceHelpers.GlobalDataSourceSetup( "ZMLobbyExclusions", "ZMLobbyExclusions", function ( f178_arg0 )
	local f178_local0 = f178_arg0:create( "PublicMatchExcluded" ) --[[ @ 0]]
	f178_local0:set( false ) --[[ @ 0]]
	f178_local0 = f178_arg0:create( "PrivateMatchExcluded" ) --[[ @ 0]]
	f178_local0:set( false ) --[[ @ 0]]
	f178_local0 = f178_arg0:create( "PrivateMatchName" ) --[[ @ 0]]
	f178_local0:set( true ) --[[ @ 0]]
	f178_local0 = f178_arg0:create( "ZMPrivateDifficulty" ) --[[ @ 0]]
	f178_local0:set( 1 ) --[[ @ 0]]
	f178_local0 = f178_arg0:create( "ZMPlaylistTab" ) --[[ @ 0]]
	f178_local0:set( 1 ) --[[ @ 0]]
	f178_local0 = f178_arg0:create( "PlaylistMapsString" ) --[[ @ 0]]
	f178_local0:set( "" ) --[[ @ 0]]
	f178_local0 = f178_arg0:create( "PlaylistGamemodesString" ) --[[ @ 0]]
	f178_local0:set( "" ) --[[ @ 0]]
end, false ) --[[ @ 0]]
CoD.DirectorUtility.IsMPFirstTimeComplete = function ( f179_arg0 )
	local f179_local0 = Engine[@"storagegetbuffer"]( f179_arg0, Enum[@"storagefiletype"][@"hash_5D5A7695E03A7A90"] ) --[[ @ 0]]
	local f179_local1 = Engine[@"storagegetbuffer"]( f179_arg0, Enum[@"storagefiletype"][@"storage_mp_stats_online"] ) --[[ @ 0]]
	if not f179_local0 or not f179_local1 then
		return true
	else
		local f179_local2 = f179_local0.PlayerStatsList.time_played_total.statValue:get() --[[ @ 0]]
		local f179_local3 = f179_local1.completedFirstTimeFlow:get() --[[ @ 0]]
		if f179_local3 == 0 and f179_local2 > 0 then
			CoD.DirectorUtility.SetMPFirstTimeComplete( f179_arg0, true ) --[[ @ 0]]
			return true
		elseif f179_local3 == 1 then
			return true
		else
			return false
		end
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.SetMPFirstTimeComplete = function ( f180_arg0, f180_arg1 )
	local f180_local0 = Engine[@"storagegetbuffer"]( f180_arg0, Enum[@"storagefiletype"][@"storage_mp_stats_online"] ) --[[ @ 0]]
	if f180_local0 then
		local f180_local1 = f180_local0.completedFirstTimeFlow --[[ @ 0]]
		if f180_arg1 then
			f180_local1:set( 1 ) --[[ @ 0]]
			Engine[@"storagewrite"]( f180_arg0, Enum[@"storagefiletype"][@"storage_mp_stats_online"] ) --[[ @ 0]]
		else
			f180_local1:set( 0 ) --[[ @ 0]]
		end
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.PostLoad = function ( f181_arg0, f181_arg1 )
	CoD.LobbyUtility.RegisterEventHandlers( f181_arg1 ) --[[ @ 0]]
	f181_arg1:addMenuOpenedCallback( function ()
		if Engine[@"currentsessionmode"]() == Enum[@"emodes"][@"mode_invalid"] and not f181_arg1._openedEntitlementPopups then
			f181_arg1:registerEventHandler( "entitlement_popups_all_done", function ( element, event )
				if IsKoreaBonusXPSpecialEventActive( f181_arg0 ) then
					CoD.FTUEUtility.ShowFTUESequence( element, f181_arg0, "KoreaSpecialEvent" ) --[[ @ 0]]
				end
			end ) --[[ @ 0]]
			f181_arg1._openedEntitlementPopups = true --[[ @ 0]]
			CoD.EntitlementUtility.OpenEntitlementPopups( f181_arg0, f181_arg1 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	local f181_local0 = DataSources.FreeCursor.getModel( f181_arg0 ) --[[ @ 0]]
	f181_local0 = f181_local0.hidden --[[ @ 0]]
	local f181_local1 = DataSources.FreeCursor.getModel( f181_arg0 ) --[[ @ 0]]
	f181_local1 = f181_local1.ignoreNextMenuHides --[[ @ 0]]
	if f181_local1 and f181_local1:get() then
		f181_local1:set( false ) --[[ @ 0]]
		f181_local0:set( f181_local0:get() - 1 ) --[[ @ 0]]
	end
	local f181_local2 = Engine[@"currentsessionmode"]() --[[ @ 0]]
	if f181_local2 ~= Enum[@"emodes"][@"mode_invalid"] and f181_local2 ~= Engine[@"getmostrecentplayedmode"]( f181_arg0 ) then
		Engine[@"setmostrecentplayedmode"]( f181_local2 ) --[[ @ 0]]
		Engine[@"commitprofilechanges"]( f181_arg0 ) --[[ @ 0]]
	end
	local f181_local3 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f181_local3 = f181_local3:create( "lobbyRoot" ) --[[ @ 0]]
	local f181_local4 = f181_local3:create( "lobbyList" ) --[[ @ 0]]
	f181_local4 = f181_local4:create( "playerCount" ) --[[ @ 0]]
	local f181_local5 = f181_local3:create( "playlistID" ) --[[ @ 0]]
	local f181_local6 = IsLobbyNetworkModeLive() --[[ @ 0]]
	if f181_local6 then
		f181_local6 = CoD.DirectorUtility.GetPlaylists() --[[ @ 0]]
	end
	if f181_local6 then
		for f181_local13, f181_local14 in ipairs( CoD.DirectorUtility.MainScreenModes ) --[[ @ 0]] do
			if f181_local14.isVisible() then
				local f181_local10 = CoD.DirectorUtility.GetPreferredPlaylistForMainMode( f181_arg0, f181_local14.mainMode, f181_local14.arena ) --[[ @ 0]]
				if not f181_local10 then
					local f181_local11 = CoD.DirectorUtility.GetFirstOrFeaturedPlaylistEntry( f181_arg0, f181_local6, f181_local14 ) --[[ @ 0]]
					if f181_local11 and f181_local11.properties then
						local f181_local12 = f181_local11.properties.param.playlist --[[ @ 0]]
						if Engine[@"getplaylistinfobyid"]( f181_local12 ) then
							CoD.DirectorUtility.SetPreferredPlaylistForMainMode( f181_arg0, f181_local14.mainMode, f181_local12, f181_local14.arena ) --[[ @ 0]]
						end
					end
				end
				if f181_local14.arena then
					CoD.DirectorUtility.SetPreferredPlaylistForMainMode( f181_arg0, f181_local14.mainMode, f181_local10, f181_local14.arena ) --[[ @ 0]]
				end
			end
		end
	end
	local f181_local7 = Engine[@"hash_632F6BF9B0A31ED5"]() --[[ @ 0]]
	if Engine[@"hash_23ADF2C70B61E0EF"]( f181_local7 ) then
		Engine[@"setplaylistid"]( f181_local7 ) --[[ @ 0]]
	end
	local f181_local8 = {} --[[ @ 0]]
	local f181_local9 = f181_local3:create( "lobbyNav" ) --[[ @ 0]]
	f181_arg1:subscribeToModel( f181_local9, function ( model )
		local f184_local0 = Engine[@"getmodelvalue"]( model ) --[[ @ 0]]
		if f184_local0 == LobbyData.GetLobbyMenuIDByName( LuaEnum.UI.MAIN ) then
			local f184_local1 = CoD.Menu.safeCreateMenu( "Main", f181_arg0 ) --[[ @ 0]]
			local f184_local2 = f181_arg1:getParent() --[[ @ 0]]
			f184_local2:addElement( f184_local1 ) --[[ @ 0]]
			f181_arg1:close() --[[ @ 0]]
			f184_local1:menuOpened( f181_arg0, f184_local1 ) --[[ @ 0]]
			return 
		end
		DisableAllMenuInput( f181_arg1, false ) --[[ @ 0]]
		Engine[@"forcenotifymodelsubscriptions"]( Engine[@"createmodel"]( Engine[@"getglobalmodel"](), "pubstorageFilesChanged" ) ) --[[ @ 0]]
		CoD.PlayFrontendMusicForLobby( f184_local0 ) --[[ @ 0]]
		local f184_local2 = LobbyData.GetLobbyMenuByID( f184_local0 ) --[[ @ 0]]
		local f184_local3 = LuaUtils.GetEModeForLobbyMainMode( f184_local2[@"mainmode"] ) --[[ @ 0]]
		if f184_local3 ~= nil then
			if f184_local3 == Enum[@"emodes"][@"mode_multiplayer"] and f184_local2[@"id"] == LobbyData.GetLobbyMenuIDByName( LuaEnum.UI.DIRECTOR_ONLINE_MP_TRAINING ) then
				CoD.FTUEUtility.ShouldBlockMPFTUE = false --[[ @ 0]]
			elseif f184_local3 == Enum[@"emodes"][@"mode_multiplayer"] and CoD.FTUEUtility.ShouldBlockMPFTUE then
				CoD.FTUEUtility.ShouldBlockMPFTUE = false --[[ @ 0]]
			elseif f181_arg1:getParent() then
				if f184_local3 == Enum[@"emodes"][@"mode_multiplayer"] then
					if f184_local2[@"lobbymode"] == Enum[@"lobbymode"][@"lobby_mode_arena"] then
						if not CoD.FTUEUtility.ShowFTUESequenceIfNotSeen( f181_arg1, f181_arg0, "LeaguePlayIntroduction" ) then
							CoD.FTUEUtility.ShowFTUESequenceIfNotSeen( f181_arg1, f181_arg0, "GestureChanges" ) --[[ @ 0]]
						end
					elseif not CoD.DirectorUtility.IsMPFirstTimeComplete( f181_arg0 ) and CoD.FTUEUtility.SetCurrentSequenceThroughMode( f181_arg1, f181_arg0, f184_local3 ) then
						OpenOverlay( f181_arg1, "FTUEInfoScreen", f181_arg0, nil ) --[[ @ 0]]
						CoD.DirectorUtility.SetMPFirstTimeComplete( f181_arg0, true ) --[[ @ 0]]
					else
						CoD.FTUEUtility.ShowFTUESequenceIfNotSeen( f181_arg1, f181_arg0, "GestureChanges" ) --[[ @ 0]]
					end
				elseif not Engine[@"isfirsttimecomplete"]( f181_arg0, f184_local3 ) and CoD.FTUEUtility.SetCurrentSequenceThroughMode( f181_arg1, f181_arg0, f184_local3 ) then
					OpenOverlay( f181_arg1, "FTUEInfoScreen", f181_arg0, nil ) --[[ @ 0]]
					Engine[@"setfirsttimecomplete"]( f181_arg0, f184_local3, true ) --[[ @ 0]]
				elseif f184_local3 == Enum[@"emodes"][@"mode_warzone"] then
					CoD.FTUEUtility.ShowFTUESequenceIfNotSeen( f181_arg1, f181_arg0, "GestureChanges" ) --[[ @ 0]]
				elseif f184_local3 == Enum[@"emodes"][@"mode_zombies"] then
					CoD.FTUEUtility.ShowFTUESequenceIfNotSeen( f181_arg1, f181_arg0, "ZMGestureChanges" ) --[[ @ 0]]
				end
			end
			if f184_local3 ~= Enum[@"emodes"][@"mode_invalid"] then
				local f184_local4 --[[ @ 0]]
				if f184_local0 ~= LobbyData.GetLobbyMenuIDByName( LuaEnum.UI.DIRECTOR_ONLINE_MP_PUBLIC ) and f184_local0 ~= LobbyData.GetLobbyMenuIDByName( LuaEnum.UI.DIRECTOR_ONLINE_MP_ARENA_MATCHMAKING ) then
					f184_local4 = false --[[ @ 0]]
				else
					f184_local4 = true --[[ @ 0]]
				end
				for f184_local5 = 0 --[[ @ 0]], Engine[@"getmaxcontrollercount"]() - 1, 1 do
					if Engine[@"iscontrollerbeingused"]( f184_local5 ) then
						CoD.PlayerRoleUtility[@"hash_12B307D12327547E"]( f184_local5 ) --[[ @ 0]]
						CoD.PlayerRoleUtility[@"hash_4D150AB859D3C2D7"]( f184_local5 ) --[[ @ 0]]
						CoD.PlayerRoleUtility[@"hash_718E8191AD006E3E"]( f184_local5 ) --[[ @ 0]]
						CoD.CACUtility[@"hash_5E6E8B9715ECC201"]( f184_local5, f184_local4 ) --[[ @ 0]]
					end
				end
			end
		end
	end, true ) --[[ @ 0]]
	local f181_local13, f181_local14, f181_local10 = nil --[[ @ 0]]
	local f181_local11 = function ()
		local f185_local0 = Engine[@"getglobalmodel"]() --[[ @ 0]]
		f185_local0 = f185_local0:create( "MapVote.mapVoteMapNext" ) --[[ @ 0]]
		local f185_local1 = f185_local0 and f185_local0:get() --[[ @ 0]]
		if not f185_local1 or f185_local1 == @"hash_0" then
			local f185_local2 = Engine[@"getglobalmodel"]() --[[ @ 0]]
			f185_local2 = f185_local2.lobbyRoot.selectedMapId --[[ @ 0]]
			f185_local1 = f185_local2 and f185_local2:get() --[[ @ 0]]
		end
		local f185_local2 = Engine[@"getglobalmodel"]() --[[ @ 0]]
		f185_local2 = f185_local2.lobbyRoot.lobbyNav:get() --[[ @ 0]]
		if f185_local2 then
			local f185_local3 = LobbyData.GetLobbyMenuByID( f185_local2 ) --[[ @ 0]]
			if f185_local3 then
				local f185_local4 = LuaUtils.GetEModeForLobbyMainMode( f185_local3[@"mainmode"] ) --[[ @ 0]]
				if f185_local4 ~= nil and f185_local4 ~= f181_local13 then
					if f185_local3[@"lobbymode"] ~= Enum[@"lobbymode"][@"hash_3B3A1BBF18C0B176"] then
						CoD.DirectorUtility.ForceStreamDirectorImagesForMode( f181_arg0, f185_local4 ) --[[ @ 0]]
						if CoD.DirectorUtility.IsGameTypeCombatTraining( Dvar[@"g_gametype"]:get() ) then
							local f185_local5 = LuaUtils.EModeData[f185_local4] --[[ @ 0]]
							if f185_local5 then
								SetMap( f181_arg0, f185_local5.DefaultMap, false ) --[[ @ 0]]
								SetGameType( f181_arg0, f185_local5.DefaultGameType ) --[[ @ 0]]
							end
						end
					end
				elseif f185_local3[@"mainmode"] == Enum[@"lobbymainmode"][@"lobby_mainmode_invalid"] then
					CoD.DirectorUtility.ForceStreamDirectorImagesForMode( f181_arg0, Enum[@"emodes"][@"mode_invalid"] ) --[[ @ 0]]
				elseif CoD.DirectorUtility.IsLobbyMenu( f181_arg0, LuaEnum.UI.DIRECTOR_ONLINE_MP_PREGAME ) and CoD.HUDUtility.IsGameTypeBareBones() then
					SetGameType( f181_arg0, LuaUtils.EModeData[f185_local4].DefaultGameType ) --[[ @ 0]]
				end
				f181_local13 = f185_local4 --[[ @ 0]]
				if f185_local4 ~= nil and f185_local4 ~= Enum[@"emodes"][@"mode_invalid"] and (f181_local14 ~= f185_local3[@"name"] == LuaUtils.LobbyMainModeData[f185_local3[@"mainmode"]].OnlineCustomMenu or f181_local10 ~= f185_local3[@"name"] == LuaUtils.LobbyMainModeData[f185_local3[@"mainmode"]].OnlineArenaCustomMenu) then
					if f181_local14 or f181_local10 then
						local f185_local6 = Engine[@"getglobalmodel"]() --[[ @ 0]]
						f185_local6 = f185_local6.lobbyRoot:create( "closePopups" ) --[[ @ 0]]
						f185_local6:forceNotifySubscriptions() --[[ @ 0]]
					end
					f181_local14 = f185_local3[@"name"] == LuaUtils.LobbyMainModeData[f185_local3[@"mainmode"]].OnlineCustomMenu --[[ @ 0]]
					f181_local10 = f185_local3[@"name"] == LuaUtils.LobbyMainModeData[f185_local3[@"mainmode"]].OnlineArenaCustomMenu --[[ @ 0]]
				end
			end
			if f185_local1 and CoD.mapsTable[f185_local1] then
				if f185_local2 == LobbyData.GetLobbyMenuIDByName( LuaEnum.UI.DIRECTOR_ONLINE_WZ_CUSTOM ) and (IsBooleanDvarSet( "use_wz_escape" ) or IsBooleanDvarSet( "use_wz_escape_alt" ) or IsBooleanDvarSet( "use_wz_alt" )) then
					if IsBooleanDvarSet( "use_wz_escape" ) or IsBooleanDvarSet( "use_wz_escape_alt" ) then
						if IsBooleanDvarSet( "use_wz_escape_alt" ) then
							SetMap( f181_arg0, @"wz_escape_alt", false ) --[[ @ 0]]
						else
							SetMap( f181_arg0, @"wz_escape", false ) --[[ @ 0]]
						end
						SetGameType( f181_arg0, "warzone_duo" ) --[[ @ 0]]
						Engine[@"setgametypesetting"]( "killcamHistorySeconds", 1800 ) --[[ @ 0]]
						Engine[@"setgametypesetting"]( "allowKillcam", 1 ) --[[ @ 0]]
						Engine[@"setgametypesetting"]( "maxTeamPlayers", 4 ) --[[ @ 0]]
						Engine[@"setgametypesetting"]( "wzPlayerInsertionTypeIndex", 1 ) --[[ @ 0]]
						Engine[@"setgametypesetting"]( "wzAIZones", 0 ) --[[ @ 0]]
						Engine[@"setgametypesetting"]( "wzZombies", 0 ) --[[ @ 0]]
					else
						SetMap( f181_arg0, @"wz_open_skyscrapers_alt", false ) --[[ @ 0]]
					end
				elseif not Engine[@"ismapvalid"]( f185_local1 ) and not CoD.LobbyUtility.isMapFree( f185_local1 ) then
					local f185_local4 = LuaUtils.GetDefaultMap( f185_local3 ) --[[ @ 0]]
					if f185_local4 then
						f185_local4 = Engine[@"converttoxhash"]( f185_local4 ) --[[ @ 0]]
						if f185_local4 ~= @"hash_0" and CoD.mapsTable[f185_local4] then
							SetMap( f181_arg0, f185_local4, false ) --[[ @ 0]]
						end
					end
				end
				if f185_local3[@"mainmode"] == Enum[@"lobbymainmode"][@"lobby_mainmode_zm"] then
					CoD.ZMStoryUtility.SetSelectedStoryToCurrentMapStory( f181_arg0 ) --[[ @ 0]]
				end
			end
		end
	end
	 --[[ @ 0]]
	local f181_local12 = function ()
		if IsLobbyNetworkModeLive() then
			local f186_local0 = f181_local5:get() --[[ @ 0]]
			if f186_local0 ~= nil then
				local f186_local1 = Engine[@"getplaylistinfobyid"]( f186_local0 ) --[[ @ 0]]
				if f186_local1 then
					local f186_local2 = f181_local4:get() --[[ @ 0]]
					local f186_local3 = DataSources.ZMLobbyExclusions.getModel() --[[ @ 0]]
					local f186_local4 = f186_local3:create( "PublicMatchExcluded" ) --[[ @ 0]]
					f186_local4:set( f186_local1.excludePublicLobby ) --[[ @ 0]]
					if f186_local2 ~= 1 then
						f186_local4 = f186_local3:create( "PrivateMatchName" ) --[[ @ 0]]
						f186_local4:set( true ) --[[ @ 0]]
					else
						f186_local4 = f186_local3:create( "PrivateMatchName" ) --[[ @ 0]]
						f186_local4:set( false ) --[[ @ 0]]
					end
					f186_local4 = Engine[@"getplaylistinfobyid"]( f186_local0 ) --[[ @ 0]]
					local f186_local5 = f186_local3:create( "PrivateMatchExcluded" ) --[[ @ 0]]
					local f186_local6 = f186_local5 --[[ @ 0]]
					f186_local5 = f186_local5.set --[[ @ 0]]
					local f186_local7 --[[ @ 0]]
					if #f186_local4.rotationList <= 1 then
						f186_local7 = not f186_local1.excludePublicLobby --[[ @ 0]]
					else
						f186_local7 = true --[[ @ 0]]
					end
					f186_local5( f186_local6, f186_local7 ) --[[ @ 0]]
				end
			end
		end
	end
	 --[[ @ 0]]
	local f181_local15 = function ()
		if IsLobbyNetworkModeLive() and IsZombies() then
			CoD.DirectorUtility.InitQuickPlayModel( f181_arg0 ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	local f181_local16 = function ()
		CoD.DirectorUtility.HideLoadoutPreview( f181_arg0 ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	f181_arg1:subscribeToModel( f181_local4, f181_local12, true ) --[[ @ 0]]
	f181_arg1:subscribeToModel( f181_local5, f181_local12, true ) --[[ @ 0]]
	f181_arg1:subscribeToModel( f181_local9, f181_local15, true ) --[[ @ 0]]
	f181_arg1:subscribeToModel( f181_local9, f181_local16, true ) --[[ @ 0]]
	f181_arg1:subscribeToModel( f181_local9, f181_local11, true ) --[[ @ 0]]
	local f181_local17 = f181_local3:create( "selectedMapId" ) --[[ @ 0]]
	local f181_local18 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f181_local18 = f181_local18:create( "MapVote.mapVoteMapNext" ) --[[ @ 0]]
	f181_arg1:subscribeToModel( f181_local17, f181_local11, true ) --[[ @ 0]]
	f181_arg1:subscribeToModel( f181_local18, f181_local11, true ) --[[ @ 0]]
	f181_arg1:subscribeToModel( f181_local3:create( "lobbyMainMode" ), function ( model )
		f0_local0( f181_arg1, f181_arg0, true ) --[[ @ 0]]
		Engine[@"markpsdatadirty"]( f181_arg0, true ) --[[ @ 0]]
		if model:get() == Enum[@"lobbymainmode"][@"lobby_mainmode_zm"] then
			Engine[@"setdvar"]( "tu13_enableMPRankedItemPurchasedCheck", 0 ) --[[ @ 0]]
		else
			Engine[@"setdvar"]( "tu13_enableMPRankedItemPurchasedCheck", 1 ) --[[ @ 0]]
		end
	end, false ) --[[ @ 0]]
	f181_arg1:subscribeToModel( f181_local3.privateClient.count, function ( model )
		LuaUtils.ReloadOnlinePlaylists() --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f181_arg1:subscribeToModel( f181_local3:create( "closePopups" ), function ( model )
		f0_local0( f181_arg1, f181_arg0, false ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f181_arg1.occluded = false --[[ @ 0]]
	f181_arg1:subscribeToModel( Engine[@"createmodel"]( Engine[@"getglobalmodel"](), "pubstorageFilesChanged" ), function ( model )
		if Engine[@"islobbyactive"]( Enum[@"lobbymodule"][@"lobby_module_client"], Enum[@"lobbytype"][@"lobby_type_game"] ) then
			return 
		elseif Engine[@"getmodelvalue"]( model ) == true and f181_arg1.occluded ~= nil and f181_arg1.occluded == false then
			CoD.OverlayUtility.OpenPublisherFilesChangedOverlay( f181_arg0, f181_arg1 ) --[[ @ 0]]
		end
	end, false ) --[[ @ 0]]
	f181_arg1:registerEventHandler( "occlusion_change", function ( element, event )
		element.occluded = event.occluded --[[ @ 0]]
		if event.occluded == false then
			Engine[@"forcenotifymodelsubscriptions"]( Engine[@"createmodel"]( Engine[@"getglobalmodel"](), "pubstorageFilesChanged" ) ) --[[ @ 0]]
		end
		local f193_local0 = f181_local3:create( "lobbyMenuOccluded" ) --[[ @ 0]]
		f193_local0:set( event.occluded ) --[[ @ 0]]
		CoD.DirectorUtility.ClearSelectedClient( event.controller ) --[[ @ 0]]
		element:OcclusionChange( event ) --[[ @ 0]]
	end ) --[[ @ 0]]
	f181_arg1:subscribeToModel( Engine[@"createmodel"]( Engine[@"getglobalmodel"](), "lobbyDebug.debugEnabled" ), function ( model )
		if Engine[@"getmodelvalue"]( model ) then
			if not f181_arg1.LobbyDebugyOverlay then
				local f194_local0 = CoD.LobbyDebugOverlay.new( f181_arg1, f181_arg0, 0, 0, 0, CoD.LobbyDebugOverlay.__defaultWidth, 0, 0, 0, CoD.LobbyDebugOverlay.__defaultHeight ) --[[ @ 0]]
				f194_local0:setLeftRight( true, true, 0, 0 ) --[[ @ 0]]
				f194_local0:setTopBottom( true, true, 0, 0 ) --[[ @ 0]]
				f181_arg1:addElement( f194_local0 ) --[[ @ 0]]
				f181_arg1:sendInitializationEvents( f181_arg0, f194_local0 ) --[[ @ 0]]
				f181_arg1.LobbyDebugOverlay = f194_local0 --[[ @ 0]]
			end
		elseif f181_arg1.LobbyDebugOverlay then
			f181_arg1.LobbyDebugOverlay:close() --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	CoD.OptionsUtility.SetGameSettingValidateFunction( "maxPlayers", CoD.DirectorUtility.ValidateMaxPlayers ) --[[ @ 0]]
	if CoD.isPC then
		CoD.PCUtility.SetupUIMenuShortcuts( f181_arg1, f181_arg0 ) --[[ @ 0]]
	end
	if Engine[@"currentsessionmode"]() == Enum[@"emodes"][@"mode_invalid"] then
		Engine[@"execnow"]( f181_arg0, "exec gamedata/configs/common/frontend_gametype_settings.cfg" ) --[[ @ 0]]
		if IsLobbyNetworkModeLive() and Dvar[@"hash_65ACE5F4E5F09824"]:exists() then
			local f181_local19 = Dvar[@"hash_65ACE5F4E5F09824"]:get() --[[ @ 0]]
			if IsGameTrial() then
				Engine[@"setclanname"]( f181_arg0, f181_local19 ) --[[ @ 0]]
			elseif string.lower( Engine[@"getclanname"]( f181_arg0 ) ) == string.lower( f181_local19 ) then
				Engine[@"hash_267D4F08B41BB4DD"]( f181_arg0 ) --[[ @ 0]]
			end
		end
	end
	if Engine[@"isdevelopmentbuild"]() then
		CoD.AARUtility.InitAARDevgui( f181_arg1, f181_arg0 ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.OnDirectorClose = function ( f195_arg0 )
	if DataSources.DirectorPartyList._subscriptionElement then
		DataSources.DirectorPartyList._subscriptionElement:close() --[[ @ 0]]
		DataSources.DirectorPartyList._subscriptionElement = nil --[[ @ 0]]
	end
	DataSources.DirectorPartyList.OnSubListClose = nil --[[ @ 0]]
	DataSources.DirectorPartyList.OnSubscriptionNotified = nil --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorUtility.ValidateMaxPlayers = function ( f196_arg0 )
	local f196_local0 = LobbyData.GetCurrentLobbySizes() --[[ @ 0]]
	if f196_arg0 >= Engine[@"getlobbyclientcount"]( Enum[@"lobbymodule"][@"lobby_module_host"], Engine[@"lobbygetcontrollinglobbysession"]( Enum[@"lobbymodule"][@"lobby_module_host"] ), Enum[@"lobbyclientfiltertype"][@"lobby_client_filter_type_all"] ) and f196_arg0 <= f196_local0.maxClients - f196_local0.maxCoDcasterClients then
		return true
	else
		return false
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.TryOpenFreshRestartPopup = function ( f197_arg0, f197_arg1 )
	if not CoD.DirectorUtility.OpenedFreshRestartPopup then
		local f197_local0 = Engine[@"getglobalmodel"]() --[[ @ 0]]
		f197_local0 = f197_local0:create( "FreshRestartOccurred", true ) --[[ @ 0]]
		if f197_local0:get() then
			CoD.DirectorUtility.OpenedFreshRestartPopup = true --[[ @ 0]]
			LuaUtils.UI_ShowInfoMessageDialog( f197_arg1, Engine[@"hash_4F9F1239CFD921FE"]( @"hash_776C832471BA98BA" ), Engine[@"hash_4F9F1239CFD921FE"]( @"hash_1C6A9AEDD55F909C" ) ) --[[ @ 0]]
		end
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.CardNavigateToLobby = function ( f198_arg0, f198_arg1, f198_arg2, f198_arg3, f198_arg4 )
	local f198_local0 = LobbyData.GetCurrentMenuTarget() --[[ @ 0]]
	local f198_local1 = f198_arg1:getModel() --[[ @ 0]]
	local f198_local2 = f198_local1 --[[ @ 0]]
	local f198_local3 = f198_local1.mode --[[ @ 0]]
	if f198_local3 then
		f198_local3 = f198_local2 and f198_local1.mode:get() --[[ @ 0]]
	end
	if not f198_local1 or f198_local3 == Enum[@"lobbymainmode"][@"lobby_mainmode_invalid"] then
		return 
	end
	local f198_local4 = f198_local1.playlist --[[ @ 0]]
	if f198_local4 then
		f198_local4 = f198_local1.playlist:get() --[[ @ 0]]
	end
	if IsLobbyNetworkModeLive() then
		if f198_local0[@"egamemodes"] == Enum[@"egamemodes"][@"mode_game_theater"] then
			if f198_local0[@"name"] ~= LuaEnum.UI.DIRECTOR_ONLINE_THEATER then
				CoD.LobbyUtility.NavigateToLobby( f198_arg4, theaterMenuForMode, false, f198_arg2 ) --[[ @ 0]]
			end
		elseif f198_local4 > LuaDefine.INVALID_PLAYLIST_ID then
			if f198_local3 == Enum[@"lobbymainmode"][@"lobby_mainmode_cp"] then
				local f198_local5 = Engine[@"getplaylistinfobyid"]( f198_local4 ) --[[ @ 0]]
				Dvar[@"cp_queued_level"]:set( f198_local5.rotationList[1].map ) --[[ @ 0]]
			else
				if f198_local3 == Enum[@"lobbymainmode"][@"lobby_mainmode_wz"] then
					local f198_local5 = Engine[@"getglobalmodel"]() --[[ @ 0]]
					f198_local5 = f198_local5.lobbyRoot.lobbyList.playerCount:get() --[[ @ 0]]
					local f198_local6 = Engine[@"getplaylistinfobyid"]( f198_local4 ) --[[ @ 0]]
					if not f198_local6 or f198_local5 > f198_local6.maxPartySize then
						return 
					end
				end
				if f198_local3 == Enum[@"lobbymainmode"][@"lobby_mainmode_zm"] then
					Engine[@"lobbyevent"]( "OnGameLobbyGameServerDataUpdate", {} ) --[[ @ 0]]
				end
			end
			if IsArenaMode() then
				Engine[@"runplaylistrules"]( f198_arg2 ) --[[ @ 0]]
				CoD.ArenaUtility.UpdateArenaOnLobbyNav() --[[ @ 0]]
				GoBack( f198_arg0, f198_arg2 ) --[[ @ 0]]
			else
				local f198_local5 = LuaUtils.LobbyMainModeData[f198_local3].QuickPlaylistTarget --[[ @ 0]]
				local f198_local6 = LuaUtils.IsArenaPlaylist( f198_local4 ) --[[ @ 0]]
				if f198_local6 then
					f198_local5 = LuaUtils.LobbyMainModeData[f198_local3].QuickPlaylistArenaTarget --[[ @ 0]]
				end
				if f198_local0[@"name"] ~= f198_local5 then
					CoD.LobbyUtility.NavigateToLobby( f198_arg4, f198_local5, false, f198_arg2, f198_local4 ) --[[ @ 0]]
				else
					Engine[@"setplaylistid"]( f198_local4 ) --[[ @ 0]]
					LuaUtils.SetQuickplayPlaylistID( f198_local4 ) --[[ @ 0]]
					CoD.DirectorUtility.SaveCurrentPlaylistForMainMode( f198_arg2, f198_local3, f198_local6 ) --[[ @ 0]]
					if f198_local3 == Enum[@"lobbymainmode"][@"lobby_mainmode_wz"] then
						Engine[@"lobbyevent"]( "OnGameLobbyGameServerDataUpdate", {} ) --[[ @ 0]]
					end
				end
			end
		else
			if f198_local3 == Enum[@"lobbymainmode"][@"lobby_mainmode_cp"] then
				Dvar[@"cp_queued_level"]:set( Engine[@"getsavedmapqueuedmap"]() ) --[[ @ 0]]
			end
			local f198_local5 = LuaUtils.LobbyMainModeData[f198_local3].OnlineCustomMenu --[[ @ 0]]
			if IsArenaMode() then
				customArenaMenuForMode = LuaUtils.LobbyMainModeData[f198_local3].OnlineArenaCustomMenu --[[ @ 0]]
			end
			if f198_local0[@"name"] ~= f198_local5 then
				CoD.LobbyUtility.NavigateToLobby( f198_arg4, f198_local5, false, f198_arg2 ) --[[ @ 0]]
			end
		end
	else
		local f198_local5 = LuaUtils.LobbyMainModeData[f198_local3].LanMenu --[[ @ 0]]
		if IsArenaMode() then
			f198_local5 = LuaUtils.LobbyMainModeData[f198_local3].LanArenaMenu --[[ @ 0]]
		end
		if f198_local0[@"name"] ~= f198_local5 then
			CoD.LobbyUtility.NavigateToLobby( f198_arg4, f198_local5, false, f198_arg2 ) --[[ @ 0]]
		end
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.NavigateToLobby = function ( f199_arg0, f199_arg1, f199_arg2 )
	CoD.LobbyUtility.NavigateToLobby( f199_arg0, f199_arg2, false, f199_arg1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorUtility.NavigateToCustomLobbyForMode = function ( f200_arg0, f200_arg1, f200_arg2, f200_arg3, f200_arg4 )
	local f200_local0 = f200_arg3:getParent() --[[ @ 0]]
	f200_local0 = f200_local0:getModel() --[[ @ 0]]
	local f200_local1 = f200_arg4 --[[ @ 0]]
	if f200_local0 and f200_local0.mainMode then
		f200_local1 = f200_local0.mainMode:get() --[[ @ 0]]
	end
	if IsLobbyNetworkModeLive() then
		if IsArenaMode() then
			CoD.LobbyUtility.NavigateToLobby( f200_arg1, LuaUtils.LobbyMainModeData[f200_local1].OnlineArenaCustomMenu, false, f200_arg2 ) --[[ @ 0]]
		else
			CoD.LobbyUtility.NavigateToLobby( f200_arg1, LuaUtils.LobbyMainModeData[f200_local1].OnlineCustomMenu, false, f200_arg2 ) --[[ @ 0]]
		end
	elseif IsArenaMode() then
		CoD.LobbyUtility.NavigateToLobby( f200_arg1, LuaUtils.LobbyMainModeData[f200_local1].LanArenaMenu, false, f200_arg2 ) --[[ @ 0]]
	else
		CoD.LobbyUtility.NavigateToLobby( f200_arg1, LuaUtils.LobbyMainModeData[f200_local1].LanMenu, false, f200_arg2 ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.NavigateToCustomLobbyForCurrentMode = function ( f201_arg0, f201_arg1 )
	local f201_local0 = Engine[@"createmodel"]( Engine[@"getglobalmodel"](), "lobbyRoot.lobbyNav" ) --[[ @ 0]]
	local f201_local1 = LobbyData.GetLobbyMenuByID( f201_local0:get() ) --[[ @ 0]]
	local f201_local2 = f201_local1[@"mainmode"] --[[ @ 0]]
	if f201_local2 then
		if IsLobbyNetworkModeLive() then
			if IsArenaMode() then
				CoD.LobbyUtility.NavigateToLobby( f201_arg0, LuaUtils.LobbyMainModeData[f201_local2].OnlineArenaCustomMenu, false, f201_arg1 ) --[[ @ 0]]
			else
				Engine[@"hash_1A3312DC8E11989"]( f201_arg1 ) --[[ @ 0]]
				CoD.LobbyUtility.NavigateToLobby( f201_arg0, LuaUtils.LobbyMainModeData[f201_local2].OnlineCustomMenu, false, f201_arg1 ) --[[ @ 0]]
			end
		elseif IsArenaMode() then
			CoD.LobbyUtility.NavigateToLobby( f201_arg0, LuaUtils.LobbyMainModeData[f201_local2].LanArenaMenu, false, f201_arg1 ) --[[ @ 0]]
		else
			CoD.LobbyUtility.NavigateToLobby( f201_arg0, LuaUtils.LobbyMainModeData[f201_local2].LanMenu, false, f201_arg1 ) --[[ @ 0]]
		end
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.NavigateToCustomLobby = function ( f202_arg0, f202_arg1, f202_arg2, f202_arg3 )
	CoD.DirectorUtility.NavigateToCustomLobbyForMode( f202_arg0, f202_arg1, f202_arg2, f202_arg3, Enum[@"lobbymainmode"][@"lobby_mainmode_mp"] ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorUtility.NavigateToPrivateLobbyForCurrentMode = function ( f203_arg0, f203_arg1 )
	local f203_local0 = Engine[@"createmodel"]( Engine[@"getglobalmodel"](), "lobbyRoot.lobbyNav" ) --[[ @ 0]]
	local f203_local1 = LobbyData.GetLobbyMenuByID( f203_local0:get() ) --[[ @ 0]]
	local f203_local2 = f203_local1[@"mainmode"] --[[ @ 0]]
	if f203_local2 and IsLobbyNetworkModeLive() then
		CoD.LobbyUtility.NavigateToLobby( f203_arg0, LuaUtils.LobbyMainModeData[f203_local2].PrivateMenu, false, f203_arg1 ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.IsSessionModeAvailable = function ( f204_arg0, f204_arg1 )
	if Engine[@"hash_77D47312EBA41751"]() or Engine[@"hash_5CB675CA7856DA25"]() then
		return f204_arg1 == Enum[@"emodes"][@"mode_warzone"]
	else
		return LuaUtils.GetDisplayNameForEMode( f204_arg1 ) ~= @"hash_0"
	end
end
 --[[ @ 0]]
DataSourceHelpers.GlobalDataSourceSetup( "WarzoneTrialInfo", "WarzoneTrialInfo", function ( f205_arg0 )
	f205_arg0:create( "countdown_timer" ) --[[ @ 0]]
	CoD.DirectorUtility.TickTrialCountdown() --[[ @ 0]]
end, false ) --[[ @ 0]]
CoD.DirectorUtility.GetTrialEndDate = function ()
	return Dvar[@"trialendtimestamp"]:get()
end
 --[[ @ 0]]
CoD.DirectorUtility.TickTrialCountdown = function ()
	local f207_local0 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f207_local0 = f207_local0:create( "WarzoneTrialInfo" ) --[[ @ 0]]
	f207_local0 = f207_local0:create( "countdown_timer" ) --[[ @ 0]]
	local f207_local1 = Engine[@"getsecondsremainingserver"]( string.format( "%.0f", CoD.DirectorUtility.GetTrialEndDate() ) ) + 1 --[[ @ 0]]
	if f207_local1 < 0 then
		f207_local1 = 0 --[[ @ 0]]
	end
	f207_local0:set( LuaUtils.SecondsToTimeRemainingString( f207_local1 ) ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorUtility.EnableTrialTick = function ( f208_arg0 )
	f208_arg0:registerEventHandler( "trial_countdown_tick", function ( element, event )
		CoD.DirectorUtility.TickTrialCountdown() --[[ @ 0]]
	end ) --[[ @ 0]]
	f208_arg0:addElement( LUI.UITimer.new( 1, "trial_countdown_tick", false, f208_arg0 ) ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorUtility.NavigateToArenaLobby = function ( f210_arg0, f210_arg1, f210_arg2, f210_arg3 )
	local f210_local0 = f210_arg3:getParent() --[[ @ 0]]
	f210_local0 = f210_local0:getModel() --[[ @ 0]]
	local f210_local1 = Enum[@"lobbymainmode"][@"lobby_mainmode_mp"] --[[ @ 0]]
	if f210_local0 and f210_local0.mainMode then
		f210_local1 = f210_local0.mainMode:get() --[[ @ 0]]
	end
	if IsLobbyNetworkModeLive() then
		CoD.LobbyUtility.NavigateToLobby( f210_arg1, LuaUtils.LobbyMainModeData[f210_local1].OnlineArenaMenuPregame, false, f210_arg2 ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.NavigateToArenaMatchmakingLobby = function ( f211_arg0, f211_arg1, f211_arg2, f211_arg3 )
	local f211_local0 = f211_arg3:getParent() --[[ @ 0]]
	f211_local0 = f211_local0:getModel() --[[ @ 0]]
	local f211_local1 = Enum[@"lobbymainmode"][@"lobby_mainmode_mp"] --[[ @ 0]]
	if f211_local0 and f211_local0.mainMode then
		f211_local1 = f211_local0.mainMode:get() --[[ @ 0]]
	end
	if IsLobbyNetworkModeLive() and CoD.DirectorUtility.PrepareSearchPlaylistModels( f211_arg1, f211_arg2 ) then
		CoD.LobbyUtility.NavigateToLobby( f211_arg1, LuaUtils.LobbyMainModeData[f211_local1].OnlineArenaMenuMatchmaking, false, f211_arg2 ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.SetPrivatePartySuggestion = function ( f212_arg0, f212_arg1 )
	local f212_local0 = Engine[@"hash_91B6247B44FCAFE"] --[[ @ 0]]
	local f212_local1 = f212_arg0 --[[ @ 0]]
	local f212_local2 = Enum[@"lobbytype"][@"lobby_type_private"] --[[ @ 0]]
	local f212_local3 = f212_arg1:getModel() --[[ @ 0]]
	f212_local0( f212_local1, f212_local2, f212_local3.playlist:get() ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorUtility.ClearPrivatePartySuggestion = function ( f213_arg0, f213_arg1 )
	Engine[@"hash_91B6247B44FCAFE"]( f213_arg0, Enum[@"lobbytype"][@"lobby_type_private"], LuaDefine.INVALID_PLAYLIST_ID ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorUtility.IsPlaylistSuggestedBySelf = function ( f214_arg0, f214_arg1 )
	local f214_local0 = f214_arg1:getModel() --[[ @ 0]]
	f214_local0 = f214_local0.playlist:get() --[[ @ 0]]
	local f214_local1 = Engine[@"getxuid64"]( f214_arg0 ) --[[ @ 0]]
	local f214_local2 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	return f214_local2.LobbyClients[Engine[@"xuidtostring"]( f214_local1 )].playerSuggestion:get() == f214_local0
end
 --[[ @ 0]]
CoD.DirectorUtility.IsPlaylistCardRestricted = function ( f215_arg0, f215_arg1 )
	local f215_local0 = false --[[ @ 0]]
	local f215_local1 = f215_arg1:getModel() --[[ @ 0]]
	if f215_local1 and f215_local1.playlist then
		local f215_local2 = f215_local1.playlist:get() --[[ @ 0]]
		local f215_local3 = Engine[@"getplaylistminpartysize"]( f215_local2 ) --[[ @ 0]]
		local f215_local4 = Engine[@"getplaylistmaxpartysize"]( f215_local2 ) --[[ @ 0]]
		local f215_local5 = Engine[@"getplayerinfo"]( f215_arg0, Engine[@"getxuid64"]( f215_arg0 ) ) --[[ @ 0]]
		local f215_local6 = f215_local5.info.partySize --[[ @ 0]]
		if f215_local6 >= f215_local3 and f215_local4 >= f215_local6 then
			f215_local0 = false --[[ @ 0]]
		else
			f215_local0 = true --[[ @ 0]]
		end
	end
	return f215_local0
end
 --[[ @ 0]]
CoD.DirectorUtility.NavigateToTheaterLobby = function ( f216_arg0, f216_arg1, f216_arg2, f216_arg3 )
	if IsLobbyNetworkModeLive() then
		CoD.LobbyUtility.NavigateToLobby( f216_arg1, LuaEnum.UI.DIRECTOR_ONLINE_THEATER, false, f216_arg2 ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.GetSelectedXuidModel = function ()
	local f217_local0 = DataSources.LobbyRoot.getModel() --[[ @ 0]]
	return f217_local0.selectedXuid
end
 --[[ @ 0]]
CoD.DirectorUtility.GetSelectedXuidTeamModel = function ()
	local f218_local0 = DataSources.LobbyRoot.getModel() --[[ @ 0]]
	return f218_local0.selectedXuidTeam
end
 --[[ @ 0]]
CoD.DirectorUtility.HasSelectedClient = function ( f219_arg0 )
	local f219_local0 = CoD.DirectorUtility.GetSelectedXuidModel() --[[ @ 0]]
	f219_local0 = f219_local0:get() --[[ @ 0]]
	local f219_local1 --[[ @ 0]]
	if f219_local0 == nil or f219_local0 == LuaDefine.INVALID_XUID_X64 then
		f219_local1 = false --[[ @ 0]]
	else
		f219_local1 = true --[[ @ 0]]
	end
	return f219_local1
end
 --[[ @ 0]]
CoD.DirectorUtility.ClearSelectedClient = function ( f220_arg0 )
	local f220_local0 = CoD.DirectorUtility.GetSelectedXuidModel() --[[ @ 0]]
	f220_local0:set( LuaDefine.INVALID_XUID_X64 ) --[[ @ 0]]
	f220_local0 = CoD.DirectorUtility.GetSelectedXuidTeamModel() --[[ @ 0]]
	f220_local0:set( Enum[@"team_t"][@"team_free"] ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorUtility.MoveClient_Internal = function ( f221_arg0, f221_arg1, f221_arg2 )
	local f221_local0 = CoD.DirectorUtility.GetSelectedXuidModel() --[[ @ 0]]
	local f221_local1 = {
		controller = f221_arg0,
		requestedTeam = f221_arg1,
		swapXuid = f221_local0:get(),
		lobbyClientType = Enum[@"lobbyclienttype"][@"lobby_client_type_normal"]
	} --[[ @ 0]]
	if f221_arg2 ~= LuaDefine.INVALID_XUID_X64 then
		f221_local1.withXuid = f221_arg2 --[[ @ 0]]
	end
	Engine[@"lobbyevent"]( "OnSwitchTeam", f221_local1 ) --[[ @ 0]]
	f221_local0:set( LuaDefine.INVALID_XUID_X64 ) --[[ @ 0]]
	local f221_local2 = CoD.DirectorUtility.GetSelectedXuidTeamModel() --[[ @ 0]]
	f221_local2:set( Enum[@"team_t"][@"team_free"] ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorUtility.IsClientEmpty = function ( f222_arg0, f222_arg1 )
	local f222_local0 = CoD.SafeGetModelValue( f222_arg1:getModel(), "xuid" ) --[[ @ 0]]
	local f222_local1 --[[ @ 0]]
	if f222_local0 and f222_local0 ~= LuaDefine.INVALID_XUID_X64 then
		f222_local1 = false --[[ @ 0]]
	else
		f222_local1 = true --[[ @ 0]]
	end
	return f222_local1
end
 --[[ @ 0]]
CoD.DirectorUtility.CanSelectClient = function ( f223_arg0, f223_arg1 )
	local f223_local0 = CoD.SafeGetModelValue( f223_arg1:getModel(), "xuid" ) --[[ @ 0]]
	local f223_local1 = CoD.SafeGetModelValue( f223_arg1:getModel(), "team" ) --[[ @ 0]]
	local f223_local2 = CoD.DirectorUtility.GetSelectedXuidModel() --[[ @ 0]]
	f223_local2 = f223_local2:get() --[[ @ 0]]
	if not f223_local0 or not f223_local1 then
		return false
	elseif f223_local2 ~= LuaDefine.INVALID_XUID_X64 then
		return false
	elseif f223_local2 == LuaDefine.INVALID_XUID_X64 and f223_local0 == LuaDefine.INVALID_XUID_X64 then
		return false
	else
		return true
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.SelectClient = function ( f224_arg0, f224_arg1 )
	if not CoD.DirectorUtility.CanSelectClient( f224_arg0, f224_arg1 ) then
		return 
	else
		local f224_local0 = CoD.SafeGetModelValue( f224_arg1:getModel(), "xuid" ) --[[ @ 0]]
		local f224_local1 = CoD.SafeGetModelValue( f224_arg1:getModel(), "team" ) --[[ @ 0]]
		local f224_local2 = CoD.DirectorUtility.GetSelectedXuidModel() --[[ @ 0]]
		f224_local2:set( f224_local0 ) --[[ @ 0]]
		f224_local2 = CoD.DirectorUtility.GetSelectedXuidTeamModel() --[[ @ 0]]
		f224_local2:set( f224_local1 ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.CanSwapWithSelectedClient = function ( f225_arg0, f225_arg1 )
	local f225_local0 = CoD.SafeGetModelValue( f225_arg1:getModel(), "xuid" ) --[[ @ 0]]
	local f225_local1 = CoD.SafeGetModelValue( f225_arg1:getModel(), "team" ) --[[ @ 0]]
	local f225_local2 = CoD.DirectorUtility.GetSelectedXuidModel() --[[ @ 0]]
	f225_local2 = f225_local2:get() --[[ @ 0]]
	local f225_local3 = CoD.DirectorUtility.GetSelectedXuidTeamModel() --[[ @ 0]]
	f225_local3 = f225_local3:get() --[[ @ 0]]
	if not f225_local0 or not f225_local1 then
		return false
	elseif f225_local2 == LuaDefine.INVALID_XUID_X64 or f225_local1 == f225_local3 then
		return false
	elseif f225_local2 == f225_local0 then
		return false
	else
		return true
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.ShouldClientBeActionable = function ( f226_arg0, f226_arg1 )
	local f226_local0 = CoD.DirectorUtility.CanSelectClient( f226_arg0, f226_arg1 ) --[[ @ 0]]
	if not f226_local0 then
		f226_local0 = CoD.DirectorUtility.CanSwapWithSelectedClient( f226_arg0, f226_arg1 ) --[[ @ 0]]
	end
	return f226_local0
end
 --[[ @ 0]]
CoD.DirectorUtility.SwapWithSelectedClient = function ( f227_arg0, f227_arg1 )
	if not CoD.DirectorUtility.CanSwapWithSelectedClient( f227_arg0, f227_arg1 ) then
		return 
	else
		CoD.DirectorUtility.MoveClient_Internal( f227_arg0, CoD.SafeGetModelValue( f227_arg1:getModel(), "team" ), CoD.SafeGetModelValue( f227_arg1:getModel(), "xuid" ) ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.CanMoveSelectedClientToTeam = function ( f228_arg0, f228_arg1 )
	local f228_local0 = CoD.DirectorUtility.GetSelectedXuidModel() --[[ @ 0]]
	f228_local0 = f228_local0:get() --[[ @ 0]]
	local f228_local1 = CoD.DirectorUtility.GetSelectedXuidTeamModel() --[[ @ 0]]
	f228_local1 = f228_local1:get() --[[ @ 0]]
	if f228_local0 == LuaDefine.INVALID_XUID_X64 then
		return false
	elseif f228_local0 ~= LuaDefine.INVALID_XUID_X64 and f228_local1 == f228_arg1 then
		return false
	else
		return true
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.MoveSelectedClientToTeam = function ( f229_arg0, f229_arg1 )
	if not CoD.DirectorUtility.CanMoveSelectedClientToTeam( f229_arg0, f229_arg1 ) then
		return 
	else
		CoD.DirectorUtility.MoveClient_Internal( f229_arg0, f229_arg1, LuaDefine.INVALID_XUID_X64 ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.InitPublicLobbyModels = function ( f230_arg0, f230_arg1, f230_arg2 )
	local f230_local0 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f230_local0 = f230_local0:create( "lobbyRoot.publicLobby" ) --[[ @ 0]]
	local f230_local1 = f230_local0:create( "stage" ) --[[ @ 0]]
	f230_local1:set( LuaEnum.PUBLIC_LOBBY.INVALID ) --[[ @ 0]]
	f230_local1 = f230_local0:create( "stageTitle" ) --[[ @ 0]]
	f230_local1:set( @"hash_0" ) --[[ @ 0]]
	f230_local1 = f230_local0:create( "stageDetails" ) --[[ @ 0]]
	f230_local1:set( "" ) --[[ @ 0]]
	f230_local1 = f230_local0:create( "stageLoadedFraction" ) --[[ @ 0]]
	f230_local1:set( 0 ) --[[ @ 0]]
	f230_local1 = f230_local0:create( "matchmakingEstimatedTime" ) --[[ @ 0]]
	f230_local1:set( 35 ) --[[ @ 0]]
	f230_local1 = f230_local0:create( "matchmakingElapsedTime" ) --[[ @ 0]]
	f230_local1:set( 0 ) --[[ @ 0]]
	f230_local1 = f230_local0:create( "matchmakingStartTime" ) --[[ @ 0]]
	f230_local1:set( 5 ) --[[ @ 0]]
	f230_local1 = f230_local0:create( "matchmakingIntermissionTime" ) --[[ @ 0]]
	f230_local1:set( Dvar[@"lobbytimerstatusvotinginterval"]:get() / 1000 ) --[[ @ 0]]
	f230_local1 = f230_local0:create( "waitingAnimation" ) --[[ @ 0]]
	f230_local1:set( false ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorUtility.GetMatchmakingEstimatedTimeString = function ( f231_arg0 )
	return Engine[@"hash_4F9F1239CFD921FE"]( @"hash_477D6F0B08C5E000", f231_arg0 )
end
 --[[ @ 0]]
CoD.DirectorUtility.GetMatchmakingElapsedTimeString = function ( f232_arg0 )
	return Engine[@"hash_4F9F1239CFD921FE"]( @"hash_2498E6569F77AEBA", f232_arg0 )
end
 --[[ @ 0]]
CoD.DirectorUtility.GetMatchMakingMatchStartTimeString = function ( f233_arg0 )
	return Engine[@"hash_4F9F1239CFD921FE"]( @"menu/timeremaining_s", f233_arg0 )
end
 --[[ @ 0]]
CoD.DirectorUtility.ConvertLobbyMainModeToModeString = function ( f234_arg0 )
	return LuaUtils.GetDisplayNameForLobbyMainMode( f234_arg0 )
end
 --[[ @ 0]]
CoD.DirectorUtility.ConvertLobbyMainModeToModeOrArenaString = function ( f235_arg0 )
	local f235_local0 = f235_arg0 --[[ @ 0]]
	if f235_local0 == Enum[@"emodes"][@"mode_multiplayer"] and LuaUtils.IsArenaMode() then
		return @"hash_407D527CD96A3419"
	else
		return LuaUtils.GetDisplayNameForLobbyMainMode( f235_local0 )
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.ConvertEModeToModeString = function ( f236_arg0 )
	return LuaUtils.GetDisplayNameForEMode( f236_arg0 )
end
 --[[ @ 0]]
CoD.DirectorUtility.GetModeDisplayName = function ( f237_arg0, f237_arg1 )
	return LuaUtils.GetDisplayNameForEMode( f237_arg0 )
end
 --[[ @ 0]]
CoD.DirectorUtility.LobbyPlayerColorByXUID = function ( f238_arg0 )
	return CoD.ColorUtility.ConvertTableToRGB( Engine[@"islocalclient"]( f238_arg0 ) and ColorSet.PlayerYellow or ColorSet.T8__OFF__GRAY )
end
 --[[ @ 0]]
CoD.DirectorUtility.IsPrimaryLocalClientByXUID = function ( f239_arg0, f239_arg1, f239_arg2 )
	local f239_local0 = f239_arg0:getModel() --[[ @ 0]]
	if f239_arg2 ~= "" and f239_local0 then
		f239_local0 = Engine[@"getmodel"]( f239_local0, f239_arg2 ) --[[ @ 0]]
	end
	local f239_local1 = f239_local0 and Engine[@"getmodelvalue"]( f239_local0 ) --[[ @ 0]]
	local f239_local2 = Engine[@"getxuid64"]( Engine[@"getprimarycontroller"]() ) --[[ @ 0]]
	local f239_local3 --[[ @ 0]]
	if f239_local1 == nil or f239_local2 == nil or f239_local2 ~= f239_local1 then
		f239_local3 = false --[[ @ 0]]
	else
		f239_local3 = true --[[ @ 0]]
	end
	return f239_local3
end
 --[[ @ 0]]
CoD.DirectorUtility.LobbyPlayerColorByXUIDElseDefaultSelfModel = function ( f240_arg0, f240_arg1, f240_arg2, f240_arg3, f240_arg4 )
	if f240_arg0 then
		local f240_local0 = f240_arg0:create( f240_arg1 ) --[[ @ 0]]
		local f240_local1 = f240_local0:get() --[[ @ 0]]
		if f240_local1 ~= nil and Engine[@"islocalclient"]( f240_local1 ) then
			return CoD.ColorUtility.ConvertTableToRGB( ColorSet.PlayerYellow )
		end
	end
	return f240_arg2, f240_arg3, f240_arg4
end
 --[[ @ 0]]
CoD.DirectorUtility.LobbyPlayerColorByXUIDElseDefaultControllerModel = function ( f241_arg0, f241_arg1, f241_arg2, f241_arg3, f241_arg4 )
	local f241_local0 = Engine[@"getmodelforcontroller"]( f241_arg0 ) --[[ @ 0]]
	local f241_local1 = f241_local0:create( f241_arg1 ) --[[ @ 0]]
	local f241_local2 = f241_local1:get() --[[ @ 0]]
	if f241_local2 and Engine[@"islocalclient"]( f241_local2 ) then
		return CoD.ColorUtility.ConvertTableToRGB( ColorSet.PlayerYellow )
	else
		return f241_arg2, f241_arg3, f241_arg4
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.PartyExceedsPlaylistMax = function ( f242_arg0 )
	local f242_local0 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f242_local0 = f242_local0.lobbyRoot.lobbyList.playerCount:get() or 0 --[[ @ 0]]
	local f242_local1 = f242_arg0:getModel() --[[ @ 0]]
	return (f242_local1.maxPartySize:get() or 0) < f242_local0
end
 --[[ @ 0]]
CoD.DirectorUtility.LobbyMaxPartySizeWarningText = function ( f243_arg0 )
	local f243_local0 = f243_arg0 --[[ @ 0]]
	local f243_local1 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	if f243_local1.lobbyRoot.lobbyList.playerCount:get() <= f243_local0 then
		return ""
	else
		return Engine[@"hash_4F9F1239CFD921FE"]( @"hash_6128045808A178F3", f243_local0 )
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.ShouldHideMatchmakingEstimatedTime = function ()
	local f244_local0 = Engine[@"getmodel"]( Engine[@"getglobalmodel"](), "lobbyRoot.publicLobby.matchmakingElapsedTime" ) --[[ @ 0]]
	local f244_local1 = Engine[@"getmodel"]( Engine[@"getglobalmodel"](), "lobbyRoot.publicLobby.matchmakingEstimatedTime" ) --[[ @ 0]]
	if f244_local0 and f244_local1 then
		return Engine[@"getmodelvalue"]( f244_local1 ) <= Engine[@"getmodelvalue"]( f244_local0 )
	else
		return false
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.CPOnlineNewGame = function ( f245_arg0, f245_arg1, f245_arg2, f245_arg3 )
	Engine[@"switchcampaignmode"]( Enum[@"campaignmode"][@"hash_10BC3515387CDAB7"] ) --[[ @ 0]]
	Engine[@"resetcampaign"]() --[[ @ 0]]
	local f245_local0 = LuaEnum.UI.DIRECTOR_ONLINE_CP_STORY --[[ @ 0]]
	CoD.LobbyUtility.NavigateToLobby( f245_arg1, f245_local0, false, f245_arg2 ) --[[ @ 0]]
	SetMap( f245_arg2, LuaUtils.GetDefaultMap( LobbyData.GetLobbyMenuByName( f245_local0 ) ), false ) --[[ @ 0]]
	Engine[@"setdvar"]( "cp_queued_level", "" ) --[[ @ 0]]
	Engine[@"setdvar"]( "ui_useloadingmovie", "1" ) --[[ @ 0]]
	Engine[@"setdvar"]( "skipto", "" ) --[[ @ 0]]
	Engine[@"setdvar"]( "sv_saveGameSkipto", "" ) --[[ @ 0]]
	Engine[@"setdvar"]( "ui_blocksaves", "0" ) --[[ @ 0]]
	Engine[@"setfirsttimecomplete"]( f245_arg2, Enum[@"emodes"][@"mode_campaign"], false ) --[[ @ 0]]
	Engine[@"setmodelvalue"]( Engine[@"createmodel"]( Engine[@"getglobalmodel"](), "firstTimeFlowCPConfirm" ), false ) --[[ @ 0]]
	OpenOverlay( f245_arg1, "ChooseFace", f245_arg2, "", "" ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorUtility.CPOnlineResumeGame = function ( f246_arg0, f246_arg1, f246_arg2, f246_arg3 )
	CoD.LobbyUtility.NavigateToLobby( f246_arg1, LuaEnum.UI.DIRECTOR_ONLINE_CP_STORY, false, f246_arg2 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorUtility.PlayFrozenMomentForPartyMember = function ( f247_arg0, f247_arg1, f247_arg2, f247_arg3 )
	local f247_local0 = f247_arg3:getModel() --[[ @ 0]]
	if f247_local0 then
		f247_local0 = f247_local0.info and f247_local0.info:get() --[[ @ 0]]
	end
	if f247_local0 then
		f247_local0 = f247_local0.selectedCharacterType --[[ @ 0]]
	end
	if f247_local0 then
		Engine[@"sendclientscriptnotify"]( f247_arg2, "update_frozen_moment_character", {
			index = f247_local0:get()
		} ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.PlayFrozenMomentForLocalClient = function ( f248_arg0 )
	Engine[@"sendclientscriptnotify"]( f248_arg0, "update_frozen_moment_character", {
		index = -1
	} ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorUtility.ShowDirectorCustomLobbyModeNav = function ( f249_arg0, f249_arg1 )
	local f249_local0 = LobbyData.GetCurrentMenuTarget() --[[ @ 0]]
	if f249_local0[@"name"] == f249_arg1 then
		return false
	elseif LobbyConnectedToDedicatedHost() then
		return false
	else
		return Engine[@"islobbyhost"]( f249_local0[@"lobbytype"] )
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.AllowShortPressToGoBack = function ( f250_arg0, f250_arg1 )
	if CoD.DirectorUtility.ShowDirectorTheater( f250_arg0, f250_arg1 ) or CoD.DirectorUtility.ShowDirectorPublic( f250_arg0, f250_arg1 ) or CoD.DirectorUtility.ShowDirectorArenaMatchmaking( f250_arg1 ) then
		return false
	elseif CoD.DirectorUtility.ShowDirectorCustom( f250_arg0, f250_arg1 ) and not CoD.DirectorUtility.ShowDirectorPregame( f250_arg0, f250_arg1 ) and not CoD.DirectorUtility.ShowDirectorArena( f250_arg1 ) and (not CoD.ModelUtility.IsGlobalModelValueGreaterThan( "lobbyRoot.lobbyTimeRemaining", 0 ) or not IsLobbyHostOfCurrentMenu()) then
		return false
	elseif CoD.isPC and CoD.DirectorUtility.ShowDirectorSelect( f250_arg0, f250_arg1 ) then
		return false
	else
		return true
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.IsSocialButtonDisabledForDemo = function ( f251_arg0 )
	if not CoD.DirectorUtility.IsOfflineDemo() then
		return false
	else
		return not IsLobbyPrivateHost()
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.DisableForCurrentMilestone = function ( f252_arg0 )
	local f252_local0 = LuaUtils.OnlineOnlyDemo() --[[ @ 0]]
	if not f252_local0 then
		f252_local0 = CoD.DirectorUtility.IsOfflineDemo() --[[ @ 0]]
	end
	return f252_local0
end
 --[[ @ 0]]
CoD.DirectorUtility.DisableForCurrentMilestoneOrUserContentRestricted = function ( f253_arg0 )
	local f253_local0 = CoD.DirectorUtility.DisableForCurrentMilestone( f253_arg0 ) --[[ @ 0]]
	if not f253_local0 then
		f253_local0 = Engine[@"isusercontentrestricted"]( f253_arg0 ) --[[ @ 0]]
	end
	return f253_local0
end
 --[[ @ 0]]
CoD.DirectorUtility.IsDevelopmentOnlyTargetVersion = function ( f254_arg0 )
	if f254_arg0.arena then
		return false
	else
		return CoD.WZUtility.AllowWZOffline()
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.ZombieLimitedShouldOpenStore = function ( f255_arg0 )
	local f255_local0 --[[ @ 0]]
	if f255_arg0 == Enum[@"lobbymainmode"][@"lobby_mainmode_zm"] then
		f255_local0 = Engine[@"hash_45405A6484A88367"]() --[[ @ 0]]
		if f255_local0 then
			f255_local0 = IsCommerceEnabledOnPC() --[[ @ 0]]
			if f255_local0 then
				f255_local0 = CoD.BaseUtility.IsDvarEnabled( "loot_enableIGS" ) --[[ @ 0]]
			end
		end
	else
		f255_local0 = false --[[ @ 0]]
	end
	return f255_local0
end
 --[[ @ 0]]
CoD.DirectorUtility.ModifyAmplitudeBasedOnVoipStatus = function ( f256_arg0, f256_arg1, f256_arg2, f256_arg3 )
	f256_arg1:linkToElementModel( f256_arg0, "voipStatus", true, function ( model )
		local f257_local0 = model:get() --[[ @ 0]]
		local f257_local1 = 0 --[[ @ 0]]
		if f257_local0 == Enum[@"hash_6B5FD9E48749F3BC"][@"hash_73BCCB00011FC920"] or f257_local0 == Enum[@"hash_6B5FD9E48749F3BC"][@"hash_DBA2B10D2AEAC8A"] then
			f257_local1 = 1 --[[ @ 0]]
		end
		if f256_arg1._previousValue <= f257_local1 then
			f256_arg1:beginAnimation( f256_arg3, Enum[@"luitween"][@"luitween_ease_out"] ) --[[ @ 0]]
		else
			f256_arg1:beginAnimation( f256_arg2, Enum[@"luitween"][@"luitween_ease_out"] ) --[[ @ 0]]
		end
		f256_arg1:setShaderVector( 0, f257_local1, 0, 0, 0 ) --[[ @ 0]]
		f256_arg1._previousValue = f257_local1 --[[ @ 0]]
	end ) --[[ @ 0]]
	f256_arg1._previousValue = 1 --[[ @ 0]]
	f256_arg1:setShaderVector( 0, 1, 0, 0, 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorUtility.UpdateVOIPStatusForModel = function ( f258_arg0, f258_arg1, f258_arg2 )
	if not f258_arg1 then
		return 
	end
	local f258_local0 = f258_arg1[f258_arg2] --[[ @ 0]]
	if f258_local0 then
		f258_local0 = f258_arg1[f258_arg2]:get() --[[ @ 0]]
	end
	if not f258_local0 then
		return 
	end
	local f258_local1 = f258_arg1:create( "voipStatus" ) --[[ @ 0]]
	f258_arg0:setupVoipWidget( f258_local0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorUtility.NeedsWatermark = function ()
	local f259_local0 --[[ @ 0]]
	if not CoD.isPC then
		f259_local0 = CoD.DirectorUtility.IsOnlineOnlyDemo() --[[ @ 0]]
	else
		f259_local0 = false --[[ @ 0]]
	end
	return f259_local0
end
 --[[ @ 0]]
CoD.DirectorUtility.IsOfflineOnlyDemo = function ()
	local f260_local0 --[[ @ 0]]
	if not CoD.isPC then
		f260_local0 = LuaUtils.OfflineOnlyDemo() --[[ @ 0]]
	else
		f260_local0 = false --[[ @ 0]]
	end
	return f260_local0
end
 --[[ @ 0]]
CoD.DirectorUtility.IsOfflineDemo = function ()
	local f261_local0 --[[ @ 0]]
	if not CoD.isPC and LuaUtils.GetDisplayNameForLobbyMainMode( Enum[@"lobbymainmode"][@"lobby_mainmode_zm"] ) == @"hash_0" and not LuaUtils.OnlineOnlyDemo() then
		f261_local0 = not Engine[@"hash_5CB675CA7856DA25"]() --[[ @ 0]]
	else
		f261_local0 = false --[[ @ 0]]
	end
	return f261_local0
end
 --[[ @ 0]]
CoD.DirectorUtility.IsOnlineOnlyDemo = function ()
	local f262_local0 --[[ @ 0]]
	if not CoD.isPC then
		f262_local0 = LuaUtils.OnlineOnlyDemo() --[[ @ 0]]
	else
		f262_local0 = false --[[ @ 0]]
	end
	return f262_local0
end
 --[[ @ 0]]
CoD.DirectorUtility.DisableLeaderChangeShutdown = function ( f263_arg0 )
	f263_arg0.disableLeaderChangePopupShutdown = true --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorUtility.IsNumClientsExceeded = function ( f264_arg0 )
	if IsLobbyNetworkModeLive() then
		local f264_local0 = Engine[@"getglobalmodel"]() --[[ @ 0]]
		f264_local0 = f264_local0:create( "lobbyRoot.playlistId" ) --[[ @ 0]]
		local f264_local1 = Engine[@"getplaylistinfobyid"]( f264_local0:get() ) --[[ @ 0]]
		local f264_local2 = Engine[@"getglobalmodel"]() --[[ @ 0]]
		if f264_local1 and f264_local2.lobbyRoot.lobbyMainMode:get() == f264_local1.mainMode then
			local f264_local3 = Engine[@"getglobalmodel"]() --[[ @ 0]]
			f264_local3 = f264_local3:create( "lobbyRoot.lobbyList.playerCount" ) --[[ @ 0]]
			if f264_local1.maxPartySize < f264_local3:get() then
				return true
			end
		end
	end
	return false
end
 --[[ @ 0]]
CoD.DirectorUtility.OpenTooManyClientsPopup = function ( f265_arg0, f265_arg1 )
	if IsLobbyNetworkModeLive() then
		local f265_local0 = Engine[@"getglobalmodel"]() --[[ @ 0]]
		f265_local0 = f265_local0:create( "lobbyRoot.playlistId" ) --[[ @ 0]]
		local f265_local1 = Engine[@"getplaylistinfobyid"]( f265_local0:get() ) --[[ @ 0]]
		OpenGenericSmallPopup( f265_arg0, f265_arg1, Engine[@"hash_4F9F1239CFD921FE"]( @"menu/warning" ), Engine[@"hash_4F9F1239CFD921FE"]( @"hash_6128045808A178F3", f265_local1.maxPartySize ), nil, CoD.isPC and Engine[@"hash_4F9F1239CFD921FE"]( @"menu/ok" ) or nil ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.AllClientsOwnDLCForPlaylist = function ( f266_arg0 )
	local f266_local0 = CoD.LobbyUtility.GetClientList() --[[ @ 0]]
	if IsLobbyNetworkModeLive() then
		local f266_local1 = Engine[@"getglobalmodel"]() --[[ @ 0]]
		f266_local1 = f266_local1:create( "lobbyRoot.playlistId" ) --[[ @ 0]]
		local f266_local2 = Engine[@"getplaylistinfobyid"]( f266_local1:get() ) --[[ @ 0]]
		local f266_local3 = Engine[@"getglobalmodel"]() --[[ @ 0]]
		if f266_local2 and f266_local3.lobbyRoot.lobbyMainMode:get() == f266_local2.mainMode then
			return CoD.DirectorUtility.AllMembersHaveAMapInPlaylist( f266_local0, f266_local2 )
		end
	end
	return false
end
 --[[ @ 0]]
CoD.DirectorUtility.AllClientsOwnDLCForMap = function ( f267_arg0 )
	local f267_local0 = CoD.LobbyUtility.GetClientList() --[[ @ 0]]
	local f267_local1 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f267_local1 = f267_local1:create( "lobbyRoot.selectedMapId" ) --[[ @ 0]]
	return CoD.MapUtility.AllMembersHaveDLCMap( f267_local0, f267_local1:get() )
end
 --[[ @ 0]]
CoD.DirectorUtility.OpenMapsNotEnabledPopup = function ( f268_arg0, f268_arg1 )
	OpenGenericSmallPopup( f268_arg0, f268_arg1, Engine[@"hash_4F9F1239CFD921FE"]( @"menu/warning" ), Engine[@"hash_4F9F1239CFD921FE"]( @"hash_1C103184D0E20B3B" ), nil, CoD.isPC and Engine[@"hash_4F9F1239CFD921FE"]( @"menu/ok" ) or nil ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorUtility.AllMembersHaveAMapInPlaylist = function ( f269_arg0, f269_arg1 )
	if f269_arg1.rotationList and #f269_arg1.rotationList > 0 then
		for f269_local3, f269_local4 in ipairs( f269_arg1.rotationList ) --[[ @ 0]] do
			if CoD.MapUtility.AllMembersHaveDLCMap( f269_arg0, f269_local4.map ) then
				return true
			end
		end
	end
	return false
end
 --[[ @ 0]]
CoD.DirectorUtility.SetLocalClientsReady = function ()
	local f270_local0 = 0 --[[ @ 0]]
	local f270_local1 = Engine[@"getmaxlocalcontrollers"]() - 1 --[[ @ 0]]
	local f270_local2 = LobbyData.GetCurrentMenuTarget() --[[ @ 0]]
	local f270_local3 = f270_local2[@"lobbytype"] --[[ @ 0]]
	for f270_local4 = f270_local0 --[[ @ 0]], f270_local1, 1 do
		Engine[@"setreadyup"]( f270_local4, f270_local3, not Engine[@"getreadyup"]( Engine[@"islobbyhost"]( f270_local3 ) and Enum[@"lobbymodule"][@"lobby_module_host"] or Enum[@"lobbymodule"][@"lobby_module_client"], f270_local3, f270_local4 ) ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.SetPlayerReady = function ( f271_arg0 )
	local f271_local0 = LobbyData.GetCurrentMenuTarget() --[[ @ 0]]
	local f271_local1 = f271_local0[@"lobbytype"] --[[ @ 0]]
	local f271_local2 = Engine[@"getreadyup"]( Engine[@"islobbyhost"]( f271_local1 ) and Enum[@"lobbymodule"][@"lobby_module_host"] or Enum[@"lobbymodule"][@"lobby_module_client"], f271_local1, f271_arg0 ) --[[ @ 0]]
	local f271_local3 = 0 --[[ @ 0]]
	local f271_local4 = Engine[@"getmaxlocalcontrollers"]() - 1 --[[ @ 0]]
	for f271_local5 = f271_local3 --[[ @ 0]], f271_local4, 1 do
		if Engine[@"iscontrollerbeingused"]( f271_local5 ) then
			Engine[@"setreadyup"]( f271_local5, f271_local1, not f271_local2 ) --[[ @ 0]]
		end
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.GetPlayerReady = function ( f272_arg0 )
	local f272_local0 = LobbyData.GetCurrentMenuTarget() --[[ @ 0]]
	local f272_local1 = f272_local0[@"lobbytype"] --[[ @ 0]]
	return Engine[@"getreadyup"]( Engine[@"islobbyhost"]( f272_local1 ) and Enum[@"lobbymodule"][@"lobby_module_host"] or Enum[@"lobbymodule"][@"lobby_module_client"], f272_local1, f272_arg0 )
end
 --[[ @ 0]]
CoD.DirectorUtility.CanReadyUp = function ( f273_arg0 )
	local f273_local0 = LobbyData.GetCurrentMenuTarget() --[[ @ 0]]
	local f273_local1 = f273_local0[@"lobbytype"] --[[ @ 0]]
	local f273_local2 --[[ @ 0]]
	if not Engine[@"getreadyup"]( Engine[@"islobbyhost"]( f273_local1 ) and Enum[@"lobbymodule"][@"lobby_module_host"] or Enum[@"lobbymodule"][@"lobby_module_client"], f273_local1, f273_arg0 ) then
		f273_local2 = CoD.DirectorUtility.InReadyStage( f273_arg0 ) --[[ @ 0]]
	else
		f273_local2 = false --[[ @ 0]]
	end
	return f273_local2
end
 --[[ @ 0]]
CoD.DirectorUtility.CanReadyDown = function ( f274_arg0 )
	local f274_local0 = LobbyData.GetCurrentMenuTarget() --[[ @ 0]]
	local f274_local1 = f274_local0[@"lobbytype"] --[[ @ 0]]
	return Engine[@"getreadyup"]( Engine[@"islobbyhost"]( f274_local1 ) and Enum[@"lobbymodule"][@"lobby_module_host"] or Enum[@"lobbymodule"][@"lobby_module_client"], f274_local1, f274_arg0 ) and CoD.DirectorUtility.InReadyStage( f274_arg0 )
end
 --[[ @ 0]]
CoD.DirectorUtility.InReadyStage = function ( f275_arg0 )
	local f275_local0 = Engine[@"getmodelvalue"]( Engine[@"createmodel"]( Engine[@"getglobalmodel"](), "lobbyRoot.lobbyNav" ) ) --[[ @ 0]]
	local f275_local1 = f275_local0 == LobbyData.GetLobbyMenuIDByName( LuaEnum.UI.DIRECTOR_ONLINE_ZM_PRIVATE ) --[[ @ 0]]
	local f275_local2 = f275_local0 == LobbyData.GetLobbyMenuIDByName( LuaEnum.UI.DIRECTOR_ONLINE_ZM_PUBLIC ) --[[ @ 0]]
	if f275_local1 then
		return true
	elseif f275_local2 then
		local f275_local3 = Engine[@"getglobalmodel"]() --[[ @ 0]]
		f275_local3 = f275_local3:create( "lobbyRoot.publicLobby" ) --[[ @ 0]]
		local f275_local4 = f275_local3:create( "stage" ) --[[ @ 0]]
		f275_local4 = f275_local4:get() --[[ @ 0]]
		local f275_local5 --[[ @ 0]]
		if f275_local4 == nil or f275_local4 ~= LuaEnum.PUBLIC_LOBBY.SEARCH_STAGE_3 and f275_local4 ~= LuaEnum.PUBLIC_LOBBY.START_MATCH then
			f275_local5 = false --[[ @ 0]]
		else
			f275_local5 = true --[[ @ 0]]
		end
		return f275_local5
	else
		return false
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.GetPrivateMatchName = function ( f276_arg0 )
	if f276_arg0 then
		return @"menu/private_match"
	else
		return @"menu/solo_match"
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.UsingLobbyPoses = function ( f277_arg0 )
	if IsLobbyNetworkModeLAN() then
		return false
	end
	local f277_local0 = DataSources.LobbyRoot.getModel( f277_arg0 ) --[[ @ 0]]
	f277_local0 = f277_local0.room:get() --[[ @ 0]]
	local f277_local1 --[[ @ 0]]
	if f277_local0 ~= "lobby_pose" and f277_local0 ~= "arena_pose" and f277_local0 ~= "private_lobby_pose" then
		f277_local1 = false --[[ @ 0]]
	else
		f277_local1 = true --[[ @ 0]]
	end
	return f277_local1
end
 --[[ @ 0]]
CoD.DirectorUtility.AddFeaturedWidgetListAction = function ( f278_arg0, f278_arg1, f278_arg2 )
	f278_arg0:AddButtonCallbackFunction( f278_arg0, f278_arg2, Enum[@"luibutton"][@"lui_key_xbx_pssquare"], nil, function ( element, menu, controller, model )
		if CoD.DirectorUtility.ShowDirectorSelect( controller ) and f278_arg1.activeWidget and not f278_arg1.m_disableNavigation then
			ProcessListAction( f278_arg1, f278_arg1.activeWidget, controller, menu ) --[[ @ 0]]
		end
		return true
	end ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorUtility.SubscribeForSoloMatchLobbyTitle = function ( f280_arg0 )
	if CoD.ZombieUtility ~= nil then
		CoD.ZombieUtility.SubscribeForSoloMatchLobbyTitle( f280_arg0 ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.GetMainModeByLobbyNav = function ()
	local f281_local0 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	local f281_local1 = LobbyData.GetLobbyMenuByID( f281_local0.lobbyRoot.lobbyNav:get() ) --[[ @ 0]]
	if f281_local1 then
		return f281_local1[@"mainmode"]
	else
		return Enum[@"lobbymainmode"][@"lobby_mainmode_invalid"]
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.HideLoadoutPreview = function ( f282_arg0 )
	if CoD.ZombieUtility then
		CoD.ZombieUtility.HideZMLoadoutPreview( f282_arg0 ) --[[ @ 0]]
	else
		local f282_local0 = DataSources.DirectorZMLoadoutPreview.getModel( f282_arg0 ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.IsLoadoutPreviewWidgetShown = function ( f283_arg0 )
	return CoD.ZombieUtility and CoD.ZombieUtility.IsZMLoadoutPreviewWidgetShown( f283_arg0 )
end
 --[[ @ 0]]
CoD.DirectorUtility.InitQuickPlayModel = function ( f284_arg0 )
	if CoD.ZombieUtility then
		CoD.ZombieUtility.InitTutorialQuickPlayModel( f284_arg0 ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
DataSourceHelpers.PerControllerDataSourceSetup( "DirectorZMLoadoutPreview", "DirectorZMLoadoutPreview", function ( f285_arg0, f285_arg1 )
	local f285_local0 = f285_arg0:create( "ZMLoadoutPreviewWidgetPrivate" ) --[[ @ 0]]
	f285_local0:set( "CoD.NOTHING" ) --[[ @ 0]]
	f285_local0 = f285_arg0:create( "ZMLoadoutPreviewWidgetPublic" ) --[[ @ 0]]
	f285_local0:set( "CoD.NOTHING" ) --[[ @ 0]]
	f285_local0 = f285_arg0:create( "ZMLoadoutPreviewWidgetCustom" ) --[[ @ 0]]
	f285_local0:set( "CoD.NOTHING" ) --[[ @ 0]]
	f285_local0 = f285_arg0:create( "ZMLoadoutPreviewWidgetShown" ) --[[ @ 0]]
	f285_local0:set( false ) --[[ @ 0]]
	f285_local0 = f285_arg0:create( "ZMLoadoutPreviewInfoShown" ) --[[ @ 0]]
	f285_local0:set( false ) --[[ @ 0]]
	f285_local0 = f285_arg0:create( "ZMLoadoutPreviewItemName" ) --[[ @ 0]]
	f285_local0:set( "" ) --[[ @ 0]]
	f285_local0 = f285_arg0:create( "ZMLoadoutPreviewItemDesc" ) --[[ @ 0]]
	f285_local0:set( @"hash_0" ) --[[ @ 0]]
	f285_local0 = f285_arg0:create( "ZMLoadoutPreviewItemImage" ) --[[ @ 0]]
	f285_local0:set( @"hash_0" ) --[[ @ 0]]
	f285_local0 = f285_arg0:create( "ZMLoadoutPreviewItemIsRestricted" ) --[[ @ 0]]
	f285_local0:set( false ) --[[ @ 0]]
end, false ) --[[ @ 0]]
DataSourceHelpers.GlobalDataSourceSetup( "DirectorCharacterButtonZMList", "DirectorCharacterButtonZMList", function ( f286_arg0, f286_arg1 )
	local f286_local0 = {} --[[ @ 0]]
	local f286_local1 = DataSources.LobbyClients.getModel( f286_arg1 ) --[[ @ 0]]
	for f286_local2 = 1 --[[ @ 0]], CoD.PlayerRoleUtility.MAX_SUPPORTED_LOBBY_CLIENTS, 1 do
		local f286_local5 = {
			model = f286_local1[f286_local2]
		} --[[ @ 0]]
		if IsZombies() and CoD.ZombieUtility then
			local f286_local6 = f286_local5.model.xuid --[[ @ 0]]
			if f286_local6 and f286_local6:get() then
				local f286_local7 = CoD.ZombieUtility.GetPositionDraftClient( f286_arg1, f286_local6:get() ) --[[ @ 0]]
				if f286_local7 then
					local f286_local8 = f286_local7.characterIndex --[[ @ 0]]
					if f286_local8 then
						f286_local8 = f286_local7.characterIndex:get() --[[ @ 0]]
					end
					if f286_local8 then
						local f286_local9 = Engine[@"getherobundleinfo"]( Enum[@"emodes"][@"mode_zombies"], f286_local8 ) --[[ @ 0]]
						if f286_local9 and f286_local9 ~= 0 then
							f286_local5.bundle = f286_local9 --[[ @ 0]]
						end
					end
				end
			end
		end
		table.insert( f286_local0, f286_local5 ) --[[ @ 0]]
	end
	if IsZombies() and CoD.ZombieUtility then
		f286_local0 = CoD.ZombieUtility.OrderCharacterButtonZMList( f286_arg0, f286_arg1, f286_local0 ) --[[ @ 0]]
	end
	for f286_local2 = 1 --[[ @ 0]], #f286_local0, 1 do
		local f286_local5 = f286_arg0:create( f286_local2 ) --[[ @ 0]]
		f286_local5:set( f286_local0[f286_local2].model ) --[[ @ 0]]
	end
end, false ) --[[ @ 0]]
CoD.DirectorUtility.IsBotByXuid = function ( f287_arg0, f287_arg1 )
	local f287_local0 = CoD.SafeGetModelValue( f287_arg0:getModel(), f287_arg1 ) --[[ @ 0]]
	return f287_local0 and Engine[@"hash_65CB8E6B7FBBFFD5"]( f287_local0 )
end
 --[[ @ 0]]
CoD.DirectorUtility.UpdateDescriptionTextFromSelectMenu = function ( f288_arg0, f288_arg1 )
	local f288_local0 = @"hash_0" --[[ @ 0]]
	if f288_arg1 then
		f288_local0 = CoD.SafeGetModelValue( f288_arg1:getModel(), "description" ) or @"hash_0" --[[ @ 0]]
	end
	local f288_local1 = DataSources.LobbyRoot.getModel( f288_arg0 ) --[[ @ 0]]
	f288_local1.selectScreenDescription:set( f288_local0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorUtility.IsInvalidLobbyClientInfo = function ( f289_arg0, f289_arg1 )
	local f289_local0 = CoD.SafeGetModelValue( f289_arg0:getModel(), f289_arg1 ) --[[ @ 0]]
	local f289_local1 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	local f289_local2 --[[ @ 0]]
	if f289_local0 ~= nil and f289_local0 ~= f289_local1.LobbyClients:create( Engine[@"xuidtostring"]( LuaDefine.INVALID_XUID_X64 ) ) then
		f289_local2 = false --[[ @ 0]]
	else
		f289_local2 = true --[[ @ 0]]
	end
	return f289_local2
end
 --[[ @ 0]]
CoD.DirectorUtility.IsHostOfLobbyType = function ( f290_arg0 )
	return Engine[@"islobbyhost"]( f290_arg0 )
end
 --[[ @ 0]]
CoD.DirectorUtility.ShouldLockFindMatchButton = function ( f291_arg0 )
	if IsZombies() then
		return true
	else
		return CoD.SocialUtility.IsPartyMissingRequiredDLCForSelectedPlaylist( f291_arg0 )
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.ShouldShowFindMatchError = function ( f292_arg0 )
	if IsMultiplayer() then
		return CoD.SocialUtility.IsPartyMissingRequiredDLCForSelectedPlaylist( f292_arg0 )
	else
		return false
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.LoadPlaylistFileFromLPC = function ()
	Engine[@"hash_1348A01BF0F3BCCE"]( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorUtility.LoadFFOTDFileFromLPC = function ()
	Engine[@"hash_1348A01BF0F3BCCE"]( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorUtility.GetColorForDisplayRankText = function ( f295_arg0 )
	if f295_arg0 then
		return CoD.ColorUtility.ConvertTableToRGB( ColorSet.PlayerParagonOrange )
	else
		return CoD.ColorUtility.ConvertTableToRGB( ColorSet.T8__BEIGE__HEADER )
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.GetRankColorForPLevel = function ( f296_arg0 )
	local f296_local0 = Engine[@"createmodel"]( Engine[@"getglobalmodel"](), "lobbyRoot.lobbyMainMode" ) --[[ @ 0]]
	local f296_local1 = LuaUtils.GetEModeForLobbyMainMode( f296_local0:get() ) --[[ @ 0]]
	if IsGameModeParagonCapable( f296_local1 ) and Engine[@"getprestigecap"]( f296_local1 ) <= f296_arg0 then
		return CoD.ColorUtility.ConvertTableToRGB( ColorSet.PlayerParagonOrange )
	else
		return CoD.ColorUtility.ConvertTableToRGB( ColorSet.T8__OFF__GRAY )
	end
end
 --[[ @ 0]]
CoD.OverlayUtility.AddAutoDetectOverlay( "AppLoadoutConfirmLoadout", {
	menuName = "SystemOverlay_Compact",
	title = @"hash_685E4E247DA8817C",
	description = @"hash_275346BBB59A1D8B",
	categoryType = CoD.OverlayUtility.OverlayTypes.GenericMessage,
	options = function ()
		local f297_local0 = function ( f298_arg0, f298_arg1 )
			CoD.OverlayUtility.ShowToast( nil, Engine[@"hash_4F9F1239CFD921FE"]( @"hash_367B78DCFF483B23" ), "" ) --[[ @ 0]]
			CoD.DirectorUtility.AcceptAppLoadout( f298_arg1, Enum[@"emodes"][@"mode_multiplayer"] ) --[[ @ 0]]
			Engine[@"hash_45217EA14A38494C"]( f298_arg1 ) --[[ @ 0]]
			OpenOverlay( GoBack( f298_arg0, f298_arg1 ), "MPCustomizeClassMenu", f298_arg1, {
				_sessionMode = Enum[@"emodes"][@"mode_multiplayer"]
			} ) --[[ @ 0]]
		end
		 --[[ @ 0]]
		local f297_local1 = function ( f299_arg0, f299_arg1 )
			CoD.OverlayUtility.ShowToast( nil, Engine[@"hash_4F9F1239CFD921FE"]( @"hash_3C263BC8DC1F47D0" ), "" ) --[[ @ 0]]
			Engine[@"hash_45217EA14A38494C"]( f299_arg1 ) --[[ @ 0]]
			OpenOverlay( GoBack( f299_arg0, f299_arg1 ), "MPCustomizeClassMenu", f299_arg1, {
				_sessionMode = Enum[@"emodes"][@"mode_multiplayer"]
			} ) --[[ @ 0]]
		end
		 --[[ @ 0]]
		local f297_local2 = {} --[[ @ 0]]
		table.insert( f297_local2, {
			text = @"menu/accept",
			action = f297_local0
		} ) --[[ @ 0]]
		table.insert( f297_local2, {
			text = @"menu/decline",
			action = f297_local1
		} ) --[[ @ 0]]
		return f297_local2
	end
} ) --[[ @ 0]]
CoD.DirectorUtility.IsCompanionAppEnabled = function ()
	return CoD.BaseUtility.IsDvarEnabled( "live_use_companion_app" ) and CoD.BaseUtility.IsDvarEnabled( "live_companion_app_loadouts" )
end
 --[[ @ 0]]
CoD.DirectorUtility.AppLoadoutReady = function ( f301_arg0 )
	if CoD.BaseUtility.IsDvarEnabled( "ui_debugAppLoadout" ) then
		return true
	elseif Engine[@"storageisfileready"]( f301_arg0, Enum[@"storagefiletype"][@"hash_5492E24872A65D74"] ) then
		local f301_local0 = Engine[@"storagegetbuffer"]( f301_arg0, Enum[@"storagefiletype"][@"hash_5492E24872A65D74"] ) --[[ @ 0]]
		if f301_local0 and f301_local0.loadoutVersion:get() == Dvar[@"loadoutversionmp"]:get() then
			return true
		end
	end
	return false
end
 --[[ @ 0]]
CoD.DirectorUtility.InitCompanionApp = function ( f302_arg0, f302_arg1 )
	local f302_local0 = Engine[@"getmodelforcontroller"]( f302_arg1 ) --[[ @ 0]]
	local f302_local1 = f302_local0:create( "extLoadoutReady" ) --[[ @ 0]]
	f302_local1:set( false ) --[[ @ 0]]
	f302_arg0:subscribeToModel( f302_local1, function ( model )
		if CoD.DirectorUtility.AppLoadoutReady( f302_arg1 ) then
			CoD.OverlayUtility.ShowToast( "ContentLarge", Engine[@"hash_4F9F1239CFD921FE"]( @"hash_48152CCDA4092F26" ), Engine[@"hash_4F9F1239CFD921FE"]( @"hash_5F38CEC3ADA4E7C1" ) ) --[[ @ 0]]
		end
	end, false ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorUtility.ShouldShowAppLoadoutAvailable = function ( f304_arg0, f304_arg1 )
	local f304_local0 = CoD.DirectorUtility.IsCompanionAppEnabled() --[[ @ 0]]
	local f304_local1 --[[ @ 0]]
	if Engine[@"currentsessionmode"]() == Enum[@"emodes"][@"mode_multiplayer"] then
		f304_local1 = not LuaUtils.IsArenaMode() --[[ @ 0]]
	else
		f304_local1 = false --[[ @ 0]]
	end
	return f304_local1 and CoD.DirectorUtility.AppLoadoutReady( f304_arg1 ) and f304_local0 and Engine[@"sessionmode_ispubliconlinegame"]()
end
 --[[ @ 0]]
CoD.DirectorUtility.AcceptAppLoadout = function ( f305_arg0, f305_arg1 )
	if f305_arg1 ~= Enum[@"emodes"][@"mode_multiplayer"] then
		return 
	end
	local f305_local0 = Engine[@"storagegetbuffer"]( f305_arg0, Enum[@"storagefiletype"][@"storage_mp_loadouts"] ) --[[ @ 0]]
	local f305_local1 = Engine[@"storagegetbuffer"]( f305_arg0, Enum[@"storagefiletype"][@"hash_5492E24872A65D74"] ) --[[ @ 0]]
	if f305_local0 and f305_local1 then
		local f305_local2 = f305_local0.cacLoadouts --[[ @ 0]]
		if f305_local2 then
			f305_local2 = f305_local0.cacLoadouts.customClass --[[ @ 0]]
		end
		local f305_local3 = f305_local1.cacLoadouts --[[ @ 0]]
		if f305_local3 then
			f305_local3 = f305_local1.cacLoadouts.customClass --[[ @ 0]]
		end
		local f305_local4 = f305_local0.cacLoadouts --[[ @ 0]]
		if f305_local4 then
			f305_local4 = f305_local0.cacLoadouts.customClassName --[[ @ 0]]
		end
		local f305_local5 = f305_local1.cacLoadouts --[[ @ 0]]
		if f305_local5 then
			f305_local5 = f305_local1.cacLoadouts.customClassName --[[ @ 0]]
		end
		if f305_local2 and f305_local3 then
			for f305_local6 = Enum[@"loadoutclass_t"][@"custom_class_first"] --[[ @ 0]], Enum[@"loadoutclass_t"][@"custom_class_count"] - 1, 1 do
				CoDLoadoutsShared.CopyClassLoadout( f305_local2[f305_local6], f305_local3[f305_local6], f305_arg1 ) --[[ @ 0]]
				f305_local4[f305_local6]:set( f305_local5[f305_local6]:get() ) --[[ @ 0]]
			end
			Engine[@"saveloadout"]( f305_arg0, f305_arg1 ) --[[ @ 0]]
		end
	end
end
 --[[ @ 0]]
CoD.DirectorUtility.CreditsPostLoad = function ( f306_arg0, f306_arg1 )
	if CursorInputEnabledForBuild() then
		f306_arg0:setHandleMouse( true ) --[[ @ 0]]
		f306_arg0.ImageWithButtonPrompt:setHandleMouse( true ) --[[ @ 0]]
	end
	f306_arg0.__disableAutoButtonCallback = true --[[ @ 0]]
	f306_arg0.Credit0:setupCredit( f306_arg1 ) --[[ @ 0]]
	local f306_local0 = function ()
		return false
	end
	 --[[ @ 0]]
	f306_arg0.sticksDown = 0 --[[ @ 0]]
	local f306_local1 = function ()
		SetProperty( f306_arg0, "showPrompt", true ) --[[ @ 0]]
		PlayClipOnElement( f306_arg0, {
			elementName = "skipPrompt",
			clipName = "Show"
		}, f306_arg1 ) --[[ @ 0]]
		PlayClipOnElement( f306_arg0, {
			elementName = "speedUpPrompt",
			clipName = "Show"
		}, f306_arg1 ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	local f306_local2 = function ()
		SetProperty( f306_arg0, "showPrompt", false ) --[[ @ 0]]
		PlayClipOnElement( f306_arg0, {
			elementName = "skipPrompt",
			clipName = "Hide"
		}, f306_arg1 ) --[[ @ 0]]
		PlayClipOnElement( f306_arg0, {
			elementName = "speedUpPrompt",
			clipName = "Hide"
		}, f306_arg1 ) --[[ @ 0]]
		if f306_arg0.skipHideTimer then
			f306_arg0.skipHideTimer:close() --[[ @ 0]]
			f306_arg0.skipHideTimer = nil --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	local f306_local3 = function ()
		f306_arg0.skipHideTimer = LUI.UITimer.newElementTimer( 5000, true, f306_local2 ) --[[ @ 0]]
		f306_arg0:addElement( f306_arg0.skipHideTimer ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	local f306_local4 = function ( f311_arg0, f311_arg1, f311_arg2, f311_arg3 )
		if f306_arg0.sticksDown == 0 then
			if f306_arg0.skipHideTimer then
				f306_arg0.skipHideTimer:reset() --[[ @ 0]]
			else
				f306_local1() --[[ @ 0]]
				f306_local3() --[[ @ 0]]
			end
		end
	end
	 --[[ @ 0]]
	local f306_local5 = function ( f312_arg0, f312_arg1, f312_arg2, f312_arg3 )
		if PropertyIsTrue( f306_arg0, "showPrompt" ) then
			Engine[@"playsound"]( "uin_paint_decal_nav" ) --[[ @ 0]]
			if InFrontend() then
				GoBack( f312_arg1, f312_arg2 ) --[[ @ 0]]
			else
				SendOwnMenuResponse( f312_arg1, f312_arg2, "skip" ) --[[ @ 0]]
			end
		else
			f306_local4( f312_arg0, f312_arg1, f312_arg2, f312_arg3 ) --[[ @ 0]]
		end
		return true
	end
	 --[[ @ 0]]
	local f306_local6 = function ( f313_arg0, f313_arg1, f313_arg2, f313_arg3 )
		if IsDpadButton( f313_arg3 ) then
			f306_local4( f313_arg0, f313_arg1, f313_arg2, f313_arg3 ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	local f306_local7 = function ()
		if f306_arg0.skipHideTimer then
			f306_arg0.skipHideTimer:close() --[[ @ 0]]
			f306_arg0.skipHideTimer = nil --[[ @ 0]]
		else
			f306_local1() --[[ @ 0]]
			f306_local3() --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	f306_arg0:AddButtonCallbackFunction( f306_arg0, f306_arg1, Enum[@"luibutton"][@"lui_key_left"], nil, f306_local6, f306_local0, false ) --[[ @ 0]]
	f306_arg0:AddButtonCallbackFunction( f306_arg0, f306_arg1, Enum[@"luibutton"][@"lui_key_up"], nil, f306_local6, f306_local0, false ) --[[ @ 0]]
	f306_arg0:AddButtonCallbackFunction( f306_arg0, f306_arg1, Enum[@"luibutton"][@"lui_key_right"], nil, f306_local6, f306_local0, false ) --[[ @ 0]]
	f306_arg0:AddButtonCallbackFunction( f306_arg0, f306_arg1, Enum[@"luibutton"][@"lui_key_down"], nil, f306_local6, f306_local0, false ) --[[ @ 0]]
	f306_arg0:AddButtonCallbackFunction( f306_arg0, f306_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"], "ESCAPE", f306_local5, f306_local0, false ) --[[ @ 0]]
	f306_arg0:AddButtonCallbackFunction( f306_arg0, f306_arg1, Enum[@"luibutton"][@"lui_key_xbb_pscircle"], nil, f306_local4, f306_local0, false ) --[[ @ 0]]
	f306_arg0:AddButtonCallbackFunction( f306_arg0, f306_arg1, Enum[@"luibutton"][@"lui_key_xbx_pssquare"], nil, f306_local4, f306_local0, false ) --[[ @ 0]]
	f306_arg0:AddButtonCallbackFunction( f306_arg0, f306_arg1, Enum[@"luibutton"][@"lui_key_xby_pstriangle"], nil, f306_local4, f306_local0, false ) --[[ @ 0]]
	if LUI.DEV == nil then
		f306_arg0:AddButtonCallbackFunction( f306_arg0, f306_arg1, Enum[@"luibutton"][@"lui_key_back"], nil, f306_local4, f306_local0, false ) --[[ @ 0]]
	end
	f306_arg0:AddButtonCallbackFunction( f306_arg0, f306_arg1, Enum[@"luibutton"][@"lui_key_start"], nil, f306_local4, f306_local0, false ) --[[ @ 0]]
	f306_arg0:AddButtonCallbackFunction( f306_arg0, f306_arg1, Enum[@"luibutton"][@"lui_key_lb"], nil, f306_local4, f306_local0, false ) --[[ @ 0]]
	f306_arg0:AddButtonCallbackFunction( f306_arg0, f306_arg1, Enum[@"luibutton"][@"lui_key_rb"], nil, f306_local4, f306_local0, false ) --[[ @ 0]]
	f306_arg0:AddButtonCallbackFunction( f306_arg0, f306_arg1, Enum[@"luibutton"][@"lui_key_ltrig"], nil, f306_local4, f306_local0, false ) --[[ @ 0]]
	f306_arg0:AddButtonCallbackFunction( f306_arg0, f306_arg1, Enum[@"luibutton"][@"lui_key_rtrig"], nil, f306_local4, f306_local0, false ) --[[ @ 0]]
	f306_arg0:AddButtonCallbackFunction( f306_arg0, f306_arg1, Enum[@"luibutton"][@"lui_key_lstick_pressed"], nil, f306_local4, f306_local0, false ) --[[ @ 0]]
	f306_arg0:AddButtonCallbackFunction( f306_arg0, f306_arg1, Enum[@"luibutton"][@"lui_key_rstick_pressed"], nil, f306_local4, f306_local0, false ) --[[ @ 0]]
	f306_arg0:AddButtonCallbackFunction( f306_arg0, f306_arg1, Enum[@"luibutton"][@"lui_key_none"], "SPACE", f306_local7, false, false ) --[[ @ 0]]
	local f306_local8 = {
		x = false,
		y = false
	} --[[ @ 0]]
	local f306_local9 = function ( f315_arg0, f315_arg1, f315_arg2 )
		local f315_local0 = Engine[@"getmodelvalue"]( f315_arg1 ) --[[ @ 0]]
		local f315_local1 = f315_local0 and math.abs( f315_local0 ) > 0.2 --[[ @ 0]]
		if f315_local1 and not f306_local8[f315_arg2] then
			if f306_arg0.skipHideTimer then
				f306_arg0.skipHideTimer:close() --[[ @ 0]]
				f306_arg0.skipHideTimer = nil --[[ @ 0]]
			elseif f306_arg0.sticksDown == 0 then
				f306_local1() --[[ @ 0]]
			end
			f306_arg0.sticksDown = f306_arg0.sticksDown + 1 --[[ @ 0]]
		elseif not f315_local1 and f306_local8[f315_arg2] then
			f306_arg0.sticksDown = f306_arg0.sticksDown - 1 --[[ @ 0]]
			if f306_arg0.sticksDown == 0 then
				f306_local3() --[[ @ 0]]
			end
		end
		f306_local8[f315_arg2] = f315_local1 --[[ @ 0]]
	end
	 --[[ @ 0]]
	f306_arg0:subscribeToGlobalModel( f306_arg1, "RightStick", "X", function ( model )
		f306_local9( f306_arg1, model, "x" ) --[[ @ 0]]
	end ) --[[ @ 0]]
	f306_arg0:subscribeToGlobalModel( f306_arg1, "RightStick", "Y", function ( model )
		f306_local9( f306_arg1, model, "y" ) --[[ @ 0]]
	end ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorUtility.LiveEventViewerPreLoad = function ( f318_arg0, f318_arg1 )
	f318_arg0:setOwner( f318_arg1 ) --[[ @ 0]]
	f318_arg0.buttonModel = Engine[@"createmodel"]( Engine[@"getmodelforcontroller"]( f318_arg1 ), "LiveEventViewer.buttonPrompts" ) --[[ @ 0]]
	if CoD.isPC then
		f318_arg0:setHandleMouse( true ) --[[ @ 0]]
		f318_arg0.ImageWithButtonPrompt:setHandleMouse( true ) --[[ @ 0]]
	end
	local f318_local0 = function ()
		return false
	end
	 --[[ @ 0]]
	local f318_local1 = function ()
		return true
	end
	 --[[ @ 0]]
	local f318_local2 = function ()
		SetProperty( f318_arg0, "showPrompt", true ) --[[ @ 0]]
		f318_arg0:setState( f318_arg1, "ShowPrompts" ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	local f318_local3 = function ()
		SetProperty( f318_arg0, "showPrompt", false ) --[[ @ 0]]
		f318_arg0:setState( f318_arg1, "DefaultState" ) --[[ @ 0]]
		if f318_arg0.skipHideTimer then
			f318_arg0.skipHideTimer:close() --[[ @ 0]]
			f318_arg0.skipHideTimer = nil --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	local f318_local4 = function ()
		f318_arg0.skipHideTimer = LUI.UITimer.newElementTimer( 5000, true, f318_local3 ) --[[ @ 0]]
		f318_arg0:addElement( f318_arg0.skipHideTimer ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	local f318_local5 = function ( f324_arg0, f324_arg1, f324_arg2, f324_arg3 )
		if f318_arg0.skipHideTimer then
			f318_arg0.skipHideTimer:reset() --[[ @ 0]]
		else
			f318_local2() --[[ @ 0]]
			f318_local4() --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	local f318_local6 = function ( f325_arg0, f325_arg1, f325_arg2, f325_arg3 )
		if PropertyIsTrue( f318_arg0, "showPrompt" ) then
			GoBack( f325_arg1, f325_arg2 ) --[[ @ 0]]
		else
			f318_local5( f325_arg0, f325_arg1, f325_arg2, f325_arg3 ) --[[ @ 0]]
		end
		return true
	end
	 --[[ @ 0]]
	local f318_local7 = AlwaysFalse() --[[ @ 0]]
	if f318_local7 then
		local f318_local8 = function ( f326_arg0, f326_arg1, f326_arg2, f326_arg3 )
			if PropertyIsTrue( f318_arg0, "showPrompt" ) and CoD.VideoStreamingUtility.IsMLGStream( f326_arg2 ) then
				OpenPopup( f326_arg1, "LiveEventViewerQualities", f326_arg2 ) --[[ @ 0]]
				f318_local3() --[[ @ 0]]
			else
				f318_local5( f326_arg0, f326_arg1, f326_arg2, f326_arg3 ) --[[ @ 0]]
			end
			return true
		end
		 --[[ @ 0]]
	end
	local f318_local8 = function ( f327_arg0, f327_arg1, f327_arg2, f327_arg3 )
		if PropertyIsTrue( f318_arg0, "showPrompt" ) then
			if IsChildElementInState( f327_arg1, "LiveEventViewerMovieAndBackground", "Windowed" ) then
				SetElementStateByElementName( f327_arg1, "LiveEventViewerMovieAndBackground", f327_arg2, "DefaultState" ) --[[ @ 0]]
				CoD.Menu.UpdateButtonShownState( f327_arg0, f327_arg1, f327_arg2, Enum[@"luibutton"][@"lui_key_xby_pstriangle"] ) --[[ @ 0]]
				return true
			else
				SetElementStateByElementName( f327_arg1, "LiveEventViewerMovieAndBackground", f327_arg2, "Windowed" ) --[[ @ 0]]
				CoD.Menu.UpdateButtonShownState( f327_arg0, f327_arg1, f327_arg2, Enum[@"luibutton"][@"lui_key_xby_pstriangle"] ) --[[ @ 0]]
				return true
			end
		else
			f318_local5( f327_arg0, f327_arg1, f327_arg2, f327_arg3 ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	local f318_local9 = function ( f328_arg0, f328_arg1, f328_arg2, f328_arg3 )
		if IsDpadButton( f328_arg3 ) then
			f318_local5( f328_arg0, f328_arg1, f328_arg2, f328_arg3 ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	f318_arg0:AddButtonCallbackFunction( f318_arg0, f318_arg1, Enum[@"luibutton"][@"lui_key_left"], nil, f318_local9, f318_local0, false ) --[[ @ 0]]
	f318_arg0:AddButtonCallbackFunction( f318_arg0, f318_arg1, Enum[@"luibutton"][@"lui_key_up"], nil, f318_local9, f318_local0, false ) --[[ @ 0]]
	f318_arg0:AddButtonCallbackFunction( f318_arg0, f318_arg1, Enum[@"luibutton"][@"lui_key_right"], nil, f318_local9, f318_local0, false ) --[[ @ 0]]
	f318_arg0:AddButtonCallbackFunction( f318_arg0, f318_arg1, Enum[@"luibutton"][@"lui_key_down"], nil, f318_local9, f318_local0, false ) --[[ @ 0]]
	f318_arg0:AddButtonCallbackFunction( f318_arg0, f318_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"], nil, f318_local5, f318_local0, false ) --[[ @ 0]]
	if LUI.DEV == nil then
		f318_arg0:AddButtonCallbackFunction( f318_arg0, f318_arg1, Enum[@"luibutton"][@"lui_key_back"], nil, f318_local5, f318_local0, false ) --[[ @ 0]]
	end
	f318_arg0:AddButtonCallbackFunction( f318_arg0, f318_arg1, Enum[@"luibutton"][@"lui_key_start"], nil, f318_local5, f318_local0, false ) --[[ @ 0]]
	f318_arg0:AddButtonCallbackFunction( f318_arg0, f318_arg1, Enum[@"luibutton"][@"lui_key_lb"], nil, f318_local5, f318_local0, false ) --[[ @ 0]]
	f318_arg0:AddButtonCallbackFunction( f318_arg0, f318_arg1, Enum[@"luibutton"][@"lui_key_rb"], nil, f318_local5, f318_local0, false ) --[[ @ 0]]
	f318_arg0:AddButtonCallbackFunction( f318_arg0, f318_arg1, Enum[@"luibutton"][@"lui_key_ltrig"], nil, f318_local5, f318_local0, false ) --[[ @ 0]]
	f318_arg0:AddButtonCallbackFunction( f318_arg0, f318_arg1, Enum[@"luibutton"][@"lui_key_rtrig"], nil, f318_local5, f318_local0, false ) --[[ @ 0]]
	f318_arg0:AddButtonCallbackFunction( f318_arg0, f318_arg1, Enum[@"luibutton"][@"lui_key_lstick_pressed"], nil, f318_local5, f318_local0, false ) --[[ @ 0]]
	f318_arg0:AddButtonCallbackFunction( f318_arg0, f318_arg1, Enum[@"luibutton"][@"lui_key_rstick_pressed"], nil, f318_local5, f318_local0, false ) --[[ @ 0]]
	f318_arg0:AddButtonCallbackFunction( f318_arg0, f318_arg1, Enum[@"luibutton"][@"lui_key_xbb_pscircle"], nil, f318_local6, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xbb_pscircle"], @"hash_382A84E964320CF4" ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	if f318_local7 then
		f318_arg0:AddButtonCallbackFunction( f318_arg0, f318_arg1, Enum[@"luibutton"][@"lui_key_xbx_pssquare"], nil, squareButtonPress, function ( element, menu, controller )
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xbx_pssquare"], @"hash_456FFD43E4B03BCF" ) --[[ @ 0]]
			if CoD.VideoStreamingUtility.IsMLGStream( controller ) then
				return true
			else
				return true
			end
		end, false ) --[[ @ 0]]
	end
	f318_arg0:AddButtonCallbackFunction( f318_arg0, f318_arg1, Enum[@"luibutton"][@"lui_key_xby_pstriangle"], nil, f318_local8, function ( element, menu, controller )
		if menu.LiveEventViewerMovieAndBackground and IsChildElementInState( menu, "LiveEventViewerMovieAndBackground", "Windowed" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xby_pstriangle"], @"menu/fullscreen" ) --[[ @ 0]]
			return true
		else
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xby_pstriangle"], @"hash_4B7DCA76B1E2C72E" ) --[[ @ 0]]
			return true
		end
	end, false ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorUtility.LiveEventViewerPostLoad = function ( f332_arg0, f332_arg1 )
	CoD.PlayFrontendMusic( "" ) --[[ @ 0]]
	Dvar[@"ui_liveeventvieweropen"]:set( true ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( f332_arg0, "close", function ( element )
		Dvar[@"ui_liveeventvieweropen"]:set( false ) --[[ @ 0]]
		local f333_local0 = CoD.SafeGetModelValue( Engine[@"getglobalmodel"](), "lobbyRoot.lobbyNav" ) --[[ @ 0]]
		if f333_local0 then
			CoD.PlayFrontendMusicForLobby( f333_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorUtility.ShowBonusForYourBOPass = function ( f334_arg0 )
	return CoDShared.Loot.GetBOPassTierBoost( f334_arg0 ) ~= 0
end
 --[[ @ 0]]
CoD.DirectorUtility.ShowBonusForPartyMemberBOPass = function ( f335_arg0 )
	return CoDShared.Loot.GetBOPassPartyTierBoost( f335_arg0 ) ~= 0
end
 --[[ @ 0]]
