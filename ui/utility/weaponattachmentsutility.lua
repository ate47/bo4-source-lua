-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:51
CoD.WeaponAttachmentsUtility = {} --[[ @ 0]]
CoD.WeaponAttachmentsUtility.Spacer = 10 --[[ @ 0]]
CoD.WeaponAttachmentsUtility.ContainerPadding = 25 --[[ @ 0]]
CoD.WeaponAttachmentsUtility.UberAttachmentPadding = 20 --[[ @ 0]]
CoD.WeaponAttachmentsUtility.WeaponAttachmentListTable = {
	primary = {
		weaponRefHash = @"hash_0",
		attachmentList = {},
		isArenaMode = false
	},
	secondary = {
		weaponRefHash = @"hash_0",
		attachmentList = {},
		isArenaMode = false
	}
} --[[ @ 0]]
CoD.WeaponAttachmentsUtility.WeaponAttachmentGroupNames = {
	{
		attachmentGroup = Enum[@"eattachmentgroup"][@"attachment_group_optic"],
		name = @"hash_313BE4995FD8DBF8"
	},
	{
		attachmentGroup = Enum[@"eattachmentgroup"][@"attachment_group_rig"],
		name = @"hash_649BD5D27E45D8A4"
	},
	{
		attachmentGroup = Enum[@"eattachmentgroup"][@"attachment_group_mod"],
		name = @"hash_7DBA1D8EA36A999"
	},
	{
		attachmentGroup = Enum[@"eattachmentgroup"][@"hash_26EE211053211305"],
		name = @"hash_4CD6625B5DAFD45F"
	},
	{
		attachmentGroup = Enum[@"eattachmentgroup"][@"attachment_group_weaponoptions"],
		name = @"hash_649BD5D27E45D8A4"
	}
} --[[ @ 0]]
CoD.WeaponAttachmentsUtility.AttachmentTierType = LuaEnum.createEnum( "NONE", "BASE", "UPGRADE" ) --[[ @ 0]]
CoD.WeaponAttachmentsUtility.GetBaseAttachmentRef = function ( f1_arg0, f1_arg1 )
	if f1_arg1 and f1_arg0.attachmentUpgrades then
		for f1_local3, f1_local4 in ipairs( f1_arg0.attachmentUpgrades ) --[[ @ 0]] do
			if f1_local4[@"hash_1BF43C7495E3788C"] == f1_arg1 then
				return f1_local4[@"baseattachment"]
			end
		end
	end
end
 --[[ @ 0]]
CoD.WeaponAttachmentsUtility.GetUpgradedAttachmentRef = function ( f2_arg0, f2_arg1 )
	if f2_arg1 and f2_arg0.attachmentUpgrades then
		for f2_local3, f2_local4 in ipairs( f2_arg0.attachmentUpgrades ) --[[ @ 0]] do
			if f2_local4[@"baseattachment"] == f2_arg1 then
				return f2_local4[@"hash_1BF43C7495E3788C"]
			end
		end
	end
end
 --[[ @ 0]]
CoD.WeaponAttachmentsUtility.IsAttachmentUpgrade = function ( f3_arg0, f3_arg1 )
	return CoD.WeaponAttachmentsUtility.GetBaseAttachmentRef( f3_arg0, f3_arg1 ) ~= nil
end
 --[[ @ 0]]
CoD.WeaponAttachmentsUtility.DoesAttachmentHaveUpgrade = function ( f4_arg0, f4_arg1 )
	return CoD.WeaponAttachmentsUtility.GetUpgradedAttachmentRef( f4_arg0, f4_arg1 ) ~= nil
end
 --[[ @ 0]]
CoD.WeaponAttachmentsUtility.GetBaseAttachmentIndex = function ( f5_arg0, f5_arg1, f5_arg2 )
	return Engine[@"getattachmentindexbyattachmenttableindex"]( f5_arg0, Engine[@"getattachmentindexbyref"]( f5_arg1 ), f5_arg2 )
end
 --[[ @ 0]]
CoD.WeaponAttachmentsUtility.GetAttachmentIndexForWeaponAttachmentRef = function ( f6_arg0, f6_arg1, f6_arg2 )
	return Engine[@"getattachmentindexbyattachmenttableindex"]( f6_arg0, Engine[@"getattachmentindexbyref"]( f6_arg1 ), f6_arg2 )
end
 --[[ @ 0]]
CoD.WeaponAttachmentsUtility.GetDisplayNameForAttachmentGroup = function ( f7_arg0 )
	for f7_local3, f7_local4 in ipairs( CoD.WeaponAttachmentsUtility.WeaponAttachmentGroupNames ) --[[ @ 0]] do
		if f7_local4.attachmentGroup == f7_arg0 then
			return f7_local4.name
		end
	end
	return @"hash_649BD5D27E45D8A4"
end
 --[[ @ 0]]
CoD.WeaponAttachmentsUtility.GetAttachmentTierType = function ( f8_arg0, f8_arg1 )
	local f8_local0 = CoD.WeaponAttachmentsUtility.AttachmentTierType.NONE --[[ @ 0]]
	if CoD.WeaponAttachmentsUtility.DoesAttachmentHaveUpgrade( f8_arg0, f8_arg1 ) then
		f8_local0 = CoD.WeaponAttachmentsUtility.AttachmentTierType.BASE --[[ @ 0]]
	elseif CoD.WeaponAttachmentsUtility.IsAttachmentUpgrade( f8_arg0, f8_arg1 ) then
		f8_local0 = CoD.WeaponAttachmentsUtility.AttachmentTierType.UPGRADE --[[ @ 0]]
	end
	return f8_local0
end
 --[[ @ 0]]
CoD.WeaponAttachmentsUtility.GetAttachmentCautionText = function ( f9_arg0, f9_arg1, f9_arg2, f9_arg3, f9_arg4, f9_arg5 )
	local f9_local0 = f9_arg1.classNum:get() --[[ @ 0]]
	local f9_local1 = @"hash_0" --[[ @ 0]]
	local f9_local2 = CoD.CACUtility.GetMutuallyExclusiveAttachments( f9_arg0, f9_local0, f9_arg2, f9_arg4, f9_arg5 ) --[[ @ 0]]
	if #f9_local2 > 0 then
		local f9_local3 = Engine[@"getitemattachment"]( f9_arg3, f9_local2[1].attachmentIndex, f9_arg5 ) --[[ @ 0]]
		if not Engine[@"isoptic"]( f9_arg3, f9_arg4 ) or not Engine[@"isoptic"]( f9_arg3, f9_local2[1].attachmentIndex ) then
			if Engine[@"hash_6037522AE910C327"]( f9_local3, f9_arg5 ) == Enum[@"eattachmentgroup"][@"hash_26EE211053211305"] then
				f9_local1 = @"menu/removes_uber" --[[ @ 0]]
			else
				f9_local1 = @"menu/removes_attachments" --[[ @ 0]]
			end
		end
	end
	return f9_local1
end
 --[[ @ 0]]
CoD.WeaponAttachmentsUtility.SetWeaponInfo = function ( f10_arg0, f10_arg1, f10_arg2 )
	local f10_local0 = CoD.BaseUtility.GetMenuLoadoutSlot( f10_arg2 ) --[[ @ 0]]
	local f10_local1 = CoD.BaseUtility.GetMenuModel( f10_arg2 ) --[[ @ 0]]
	if f10_arg0.WeaponLevel and f10_local1[f10_local0] then
		f10_arg0.WeaponLevel:setModel( f10_local1[f10_local0], f10_arg1 ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
CoD.WeaponAttachmentsUtility.UpdateHorizontalCount = function ( f11_arg0, f11_arg1, f11_arg2 )
	local f11_local0, f11_local1, f11_local2 = CoD.BaseUtility.GetMenuModelModeLoadoutSlot( f11_arg0 ) --[[ @ 0]]
	local f11_local3 = CoD.CACUtility.EmptyItemIndex --[[ @ 0]]
	local f11_local4 = CoD.BaseUtility.GetMenuAttachmentFilter( f11_arg0 ) --[[ @ 0]]
	local f11_local5 = 0 --[[ @ 0]]
	if f11_arg0._inArmory then
		f11_local1 = CoD.BaseUtility.GetMenuSessionMode( f11_arg0 ) --[[ @ 0]]
		f11_local3 = f11_arg0._weaponItemIndex --[[ @ 0]]
		if f11_arg1._isOptic == true then
			f11_local4 = "optic" --[[ @ 0]]
		else
			f11_local4 = false --[[ @ 0]]
		end
		if CoD.CACUtility.EmptyItemIndex < Engine[@"hash_3EF453A0A31D191A"]( f11_local3, f11_local1 ) then
			local f11_local6 = 1 --[[ @ 0]]
		end
		f11_local5 = f11_local6 or 0 --[[ @ 0]]
	else
		local f11_local7, f11_local8, f11_local9 = CoD.BaseUtility.GetMenuModelModeLoadoutSlot( f11_arg0 ) --[[ @ 0]]
		f11_local1 = f11_local8 --[[ @ 0]]
		f11_local3 = f11_local7[f11_local9].itemIndex:get() --[[ @ 0]]
	end
	if f11_local1 and CoD.CACUtility.EmptyItemIndex < f11_local3 then
		local f11_local7 = Engine[@"getunlockableitemkvpinfo"]( f11_local3, f11_local1 ) --[[ @ 0]]
		if f11_local4 == "optic" then
			f11_arg1:setHorizontalCount( f11_local7[@"hash_1A9C48738BFE4409"] or 0 ) --[[ @ 0]]
		else
			f11_arg1:setHorizontalCount( f11_local7[@"hash_406E3B76844E6637"] + f11_local5 or 0 ) --[[ @ 0]]
		end
	end
end
 --[[ @ 0]]
CoD.WeaponAttachmentsUtility.GetClipCountAndSizeForWeapon = function ( f12_arg0, f12_arg1 )
	if f12_arg0 then
		local f12_local0 = "" --[[ @ 0]]
		for f12_local4, f12_local5 in ipairs( f12_arg1 ) --[[ @ 0]] do
			if f12_local5 then
				f12_local0 = LUI.appendStringWithDelimiter( f12_local0, f12_local5, "+" ) --[[ @ 0]]
			end
		end
		return Engine[@"hash_29268F8D899F10DF"]( f12_arg0, f12_local0 )
	else
		return 0, 0
	end
end
 --[[ @ 0]]
CoD.WeaponAttachmentsUtility.UpdateEquippedWeaponAttachmentAttributes = function ( f13_arg0, f13_arg1, f13_arg2, f13_arg3 )
	local f13_local0 = Enum[@"weaponattributescolumn"][@"weaponattributes_reference"] --[[ @ 0]]
	local f13_local1 = Enum[@"weaponattributescolumn"][@"weaponattributes_weapon_name"] --[[ @ 0]]
	local f13_local2 = Enum[@"weaponattributescolumn"][@"weaponattributes_damage"] --[[ @ 0]]
	local f13_local3 = Enum[@"weaponattributescolumn"][@"weaponattributes_range"] --[[ @ 0]]
	local f13_local4 = Enum[@"weaponattributescolumn"][@"weaponattributes_fire_rate"] --[[ @ 0]]
	local f13_local5 = Enum[@"weaponattributescolumn"][@"weaponattributes_accuracy"] --[[ @ 0]]
	local f13_local6 = f13_arg0[f13_arg1 .. ".itemIndex"]:get() --[[ @ 0]]
	local f13_local7 = Engine[@"hash_7B98952F69D937F9"]( f13_local6, Enum[@"statindexoffset"][@"hash_6569E84652131CD7"], f13_arg3 ) --[[ @ 0]]
	local f13_local8 = {
		damage = 0,
		range = 0,
		fireRate = 0,
		accuracy = 0,
		magCount = 0,
		magSize = 0
	} --[[ @ 0]]
	local f13_local9 = CoD.CACUtility.GetAttachmentListForSlot( f13_arg1 ) --[[ @ 0]]
	local f13_local10 = {} --[[ @ 0]]
	for f13_local21, f13_local22 in ipairs( f13_local9 ) --[[ @ 0]] do
		local f13_local23 = f13_arg0[f13_local22].itemIndex:get() --[[ @ 0]]
		if f13_local22 ~= f13_arg2 and f13_local23 > CoD.CACUtility.EmptyItemIndex then
			local f13_local14 = Engine[@"getattachmentref"]( f13_local6, f13_local23, f13_arg3 ) --[[ @ 0]]
			table.insert( f13_local10, f13_local14 ) --[[ @ 0]]
			local f13_local15 = Engine[@"tablelookup"]( CoD.weaponAttributes, f13_local2, f13_local0, f13_local14, f13_local1, f13_local7 ) --[[ @ 0]]
			local f13_local16 = Engine[@"tablelookup"]( CoD.weaponAttributes, f13_local3, f13_local0, f13_local14, f13_local1, f13_local7 ) --[[ @ 0]]
			local f13_local17 = Engine[@"tablelookup"]( CoD.weaponAttributes, f13_local4, f13_local0, f13_local14, f13_local1, f13_local7 ) --[[ @ 0]]
			local f13_local18 = Engine[@"tablelookup"]( CoD.weaponAttributes, f13_local5, f13_local0, f13_local14, f13_local1, f13_local7 ) --[[ @ 0]]
			local f13_local19 = f13_local8.damage --[[ @ 0]]
			local f13_local20 --[[ @ 0]]
			if not f13_local15 then
				f13_local20 = 0 --[[ @ 0]]
				if not f13_local20 then
				
				else
					f13_local8.damage = f13_local19 + f13_local20 --[[ @ 0]]
					f13_local19 = f13_local8.range --[[ @ 0]]
					if not f13_local16 then
						f13_local20 = 0 --[[ @ 0]]
						if not f13_local20 then
						
						else
							f13_local8.range = f13_local19 + f13_local20 --[[ @ 0]]
							f13_local19 = f13_local8.fireRate --[[ @ 0]]
							if not f13_local17 then
								f13_local20 = 0 --[[ @ 0]]
								if not f13_local20 then
								
								else
									f13_local8.fireRate = f13_local19 + f13_local20 --[[ @ 0]]
									f13_local19 = f13_local8.accuracy --[[ @ 0]]
									if not f13_local18 then
										f13_local20 = 0 --[[ @ 0]]
										if not f13_local20 then
										
										else
											f13_local8.accuracy = f13_local19 + f13_local20 --[[ @ 0]]
										end
									end
									f13_local20 = f13_local18 --[[ @ 0]]
								end
							end
							f13_local20 = f13_local17 --[[ @ 0]]
						end
					end
					f13_local20 = f13_local16 --[[ @ 0]]
				end
			end
			f13_local20 = f13_local15 --[[ @ 0]]
		end
	end
	f13_local8.magCount, f13_local8.magSize = CoD.WeaponAttachmentsUtility.GetClipCountAndSizeForWeapon( f13_local7, f13_local10 ) --[[ @ 0]]
	return f13_local10, f13_local8
end
 --[[ @ 0]]
CoD.WeaponAttachmentsUtility.GetWeaponAttachmentAttributes = function ( f14_arg0, f14_arg1, f14_arg2, f14_arg3, f14_arg4 )
	local f14_local0 = Enum[@"weaponattributescolumn"][@"weaponattributes_reference"] --[[ @ 0]]
	local f14_local1 = Enum[@"weaponattributescolumn"][@"weaponattributes_weapon_name"] --[[ @ 0]]
	local f14_local2 = Engine[@"hash_7B98952F69D937F9"]( f14_arg0, Enum[@"statindexoffset"][@"hash_6569E84652131CD7"], f14_arg2 ) --[[ @ 0]]
	local f14_local3 = CoD.CACUtility.GetUnlockableItemInfo( f14_arg0, f14_arg2 ) --[[ @ 0]]
	local f14_local4 = f14_local3.attributesTable --[[ @ 0]]
	if f14_local3.attributesTableZM and f14_arg2 == Enum[@"emodes"][@"mode_zombies"] then
		f14_local4 = f14_local3.attributesTableZM --[[ @ 0]]
	end
	local f14_local5 = function ( f15_arg0, f15_arg1 )
		local f15_local0 = f14_local4 and f14_local4[f15_arg0] or 0 --[[ @ 0]]
		local f15_local1 = Engine[@"tablelookup"]( CoD.weaponAttributes, f15_arg1, f14_local0, f14_arg1, f14_local1, f14_local2 ) or 0 --[[ @ 0]]
		local f15_local2 = false --[[ @ 0]]
		for f15_local6, f15_local7 in ipairs( f14_arg3 ) --[[ @ 0]] do
			if f15_local7 == f14_arg1 then
				f15_local2 = true --[[ @ 0]]
				break
			end
		end
		f15_local3 = f15_local0 + f14_arg4[f15_arg0] --[[ @ 0]]
		if not f15_local2 then
			f15_local3 = f15_local3 + f15_local1 --[[ @ 0]]
		end
		return f15_local0 .. "," .. f15_local3
	end
	 --[[ @ 0]]
	local f14_local6 = {
		damage = f14_local5( "damage", Enum[@"weaponattributescolumn"][@"weaponattributes_damage"] ),
		range = f14_local5( "range", Enum[@"weaponattributescolumn"][@"weaponattributes_range"] ),
		fireRate = f14_local5( "fireRate", Enum[@"weaponattributescolumn"][@"weaponattributes_fire_rate"] ),
		accuracy = f14_local5( "accuracy", Enum[@"weaponattributescolumn"][@"weaponattributes_accuracy"] ),
		magCount = 0,
		magSize = 0,
		uberName = @"hash_0",
		uberImage = @"hash_0"
	} --[[ @ 0]]
	local f14_local7 = LUI.ShallowCopy( f14_arg3 ) --[[ @ 0]]
	for f14_local11, f14_local12 in ipairs( f14_arg3 ) --[[ @ 0]] do
		if f14_local12 == f14_arg1 then
			table.remove( f14_local7, f14_local11 ) --[[ @ 0]]
			break
		end
	end
	if f14_arg2 == Enum[@"emodes"][@"mode_zombies"] then
		if #f14_local7 < CoD.ZMLoadoutUtility.MaxArmoryAttachments then
			table.insert( f14_local7, f14_arg1 ) --[[ @ 0]]
		end
	else
		table.insert( f14_local7, f14_arg1 ) --[[ @ 0]]
	end
	if f14_arg1 == "extclip2" then
		f14_local8 = false --[[ @ 0]]
		for f14_local12, f14_local13 in ipairs( f14_arg3 ) --[[ @ 0]] do
			if f14_local13 == "extclip" then
				f14_local8 = true --[[ @ 0]]
				break
			end
		end
		if not f14_local8 and f14_arg1 ~= "extclip" then
			table.insert( f14_local7, "extclip" ) --[[ @ 0]]
		end
	end
	if f14_local4 then
		f14_local8, f14_local9 = CoD.WeaponAttachmentsUtility.GetClipCountAndSizeForWeapon( f14_local2, f14_local7 ) --[[ @ 0]]
		f14_local10 = f14_local8 - f14_local4.magCount --[[ @ 0]]
		f14_local11 = f14_local9 - f14_local4.magSize --[[ @ 0]]
		f14_local12 = "" --[[ @ 0]]
		local f14_local13 = "" --[[ @ 0]]
		f14_local12 = "," .. f14_local10 .. "" --[[ @ 0]]
		f14_local13 = "," .. f14_local11 .. "" --[[ @ 0]]
		f14_local6.magCount = f14_local4.magCount .. f14_local12 --[[ @ 0]]
		f14_local6.magSize = f14_local4.magSize .. f14_local13 --[[ @ 0]]
		f14_local6.uberName = f14_local4.uberName --[[ @ 0]]
		f14_local6.uberImage = f14_local4.uberImage --[[ @ 0]]
	end
	return f14_local6
end
 --[[ @ 0]]
CoD.WeaponAttachmentsUtility.GetUberAttachmentWidget = function ( f16_arg0, f16_arg1 )
	local f16_local0 = CoD.UberAttachmentSlot --[[ @ 0]]
	if f16_arg0 and f16_arg0.menu then
		local f16_local1 = CoD.BaseUtility.GetMenuAttachmentFilter( f16_arg0.menu ) --[[ @ 0]]
		if f16_local1 and f16_local1 == "attachment" then
			f16_local0 = CoD.UberOperatorModContainer --[[ @ 0]]
		end
	end
	return f16_local0
end
 --[[ @ 0]]
CoD.WeaponAttachmentsUtility.ReorderAttachmentsToRemoveRestricted = function ( f17_arg0 )
	local f17_local0 = 1 --[[ @ 0]]
	local f17_local1 = 1 --[[ @ 0]]
	local f17_local2 = table.getn( f17_arg0 ) --[[ @ 0]]
	while f17_local0 < f17_local2 and f17_local1 <= f17_local2 do
		while f17_local0 < f17_local2 and not f17_arg0[f17_local0].models.isRestricted do
			f17_local0 = f17_local0 + 1 --[[ @ 0]]
		end
		if f17_local1 <= f17_local0 then
			f17_local1 = f17_local0 + 1 --[[ @ 0]]
			while f17_local1 <= f17_local2 and (f17_arg0[f17_local1].models.isRestricted or f17_arg0[f17_local1].models.tierType ~= CoD.WeaponAttachmentsUtility.AttachmentTierType.NONE) do
				f17_local1 = f17_local1 + 1 --[[ @ 0]]
			end
			if f17_local0 < f17_local2 and f17_local1 <= f17_local2 then
				local f17_local3 = f17_arg0[f17_local1] --[[ @ 0]]
				f17_arg0[f17_local1] = f17_arg0[f17_local0] --[[ @ 0]]
				f17_arg0[f17_local0] = f17_local3 --[[ @ 0]]
				f17_local0 = f17_local0 + 1 --[[ @ 0]]
			end
		end
	end
	while f17_local0 < f17_local2 and not f17_arg0[f17_local0].models.isRestricted do
		f17_local0 = f17_local0 + 1 --[[ @ 0]]
	end
	if f17_local1 <= f17_local0 then
		f17_local1 = f17_local0 + 1 --[[ @ 0]]
		while f17_local1 <= f17_local2 and (f17_arg0[f17_local1].models.isRestricted or f17_arg0[f17_local1].models.tierType ~= CoD.WeaponAttachmentsUtility.AttachmentTierType.NONE) do
			f17_local1 = f17_local1 + 1 --[[ @ 0]]
		end
		if f17_local0 < f17_local2 and f17_local1 <= f17_local2 then
			local f17_local3 = f17_arg0[f17_local1] --[[ @ 0]]
			f17_arg0[f17_local1] = f17_arg0[f17_local0] --[[ @ 0]]
			f17_arg0[f17_local0] = f17_local3 --[[ @ 0]]
			f17_local0 = f17_local0 + 1 --[[ @ 0]]
		end
	end
end
 --[[ @ 0]]
CoD.WeaponAttachmentsUtility.GetWeaponAttachmentList = function ( f18_arg0, f18_arg1, f18_arg2 )
	local f18_local0 = {} --[[ @ 0]]
	local f18_local1, f18_local2, f18_local3 = CoD.BaseUtility.GetMenuModelModeLoadoutSlot( f18_arg1.menu ) --[[ @ 0]]
	local f18_local4 = CoD.BaseUtility.GetMenuLoadoutListItemSlot( f18_arg1.menu ) --[[ @ 0]]
	local f18_local5 = f18_local1[f18_local3].itemIndex:get() --[[ @ 0]]
	local f18_local6 = Engine[@"getunlockableitemkvpinfo"]( f18_local5, f18_local2 ) --[[ @ 0]]
	local f18_local7 = Engine[@"getnumattachments"]( f18_local5, f18_local2 ) --[[ @ 0]]
	local f18_local8 = f18_local1[f18_local3].numGunfightersEquipped:get() --[[ @ 0]]
	local f18_local9, f18_local10 = CoD.WeaponAttachmentsUtility.UpdateEquippedWeaponAttachmentAttributes( f18_local1, f18_local3, f18_local4, f18_local2 ) --[[ @ 0]]
	for f18_local11 = 1 --[[ @ 0]], f18_local7 - 1, 1 do
		local f18_local14 = Engine[@"getitemattachment"]( f18_local5, f18_local11, f18_local2 ) --[[ @ 0]]
		if CoD.CACUtility.EmptyItemIndex < f18_local14 then
			local f18_local15 = Engine[@"getattachmentref"]( f18_local5, f18_local11, f18_local2 ) --[[ @ 0]]
			local f18_local16 = Engine[@"getattachmentname"]( f18_local5, f18_local11, f18_local2 ) --[[ @ 0]]
			local f18_local17 = Engine[@"getattachmentnameshort"]( f18_local5, f18_local11, f18_local2 ) --[[ @ 0]]
			local f18_local18 = Engine[@"getattachmentuniqueimagebyindex"]( f18_local5, f18_local11, f18_local2 ) --[[ @ 0]]
			local f18_local19 = Engine[@"getattachmentdesc"]( f18_local5, f18_local11, f18_local2 ) --[[ @ 0]]
			local f18_local20 = Engine[@"hash_61F444BD03EB910E"]( f18_local5, f18_local14, f18_local2 ) --[[ @ 0]]
			local f18_local21 = Engine[@"hash_6037522AE910C327"]( f18_local14, f18_local2 ) --[[ @ 0]]
			local f18_local22 = CoD.WeaponAttachmentsUtility.GetWeaponAttachmentAttributes( f18_local5, f18_local15, f18_local2, f18_local9, f18_local10 ) --[[ @ 0]]
			local f18_local23 = CoD.CACUtility.EmptyItemIndex --[[ @ 0]]
			local f18_local24 = CoD.WeaponAttachmentsUtility.GetBaseAttachmentRef( f18_local6, f18_local15 ) --[[ @ 0]]
			if f18_local24 then
				f18_local23 = CoD.WeaponAttachmentsUtility.GetAttachmentIndexForWeaponAttachmentRef( f18_local5, f18_local24, f18_local2 ) --[[ @ 0]]
			end
			local f18_local25 = CoD.CACUtility.EmptyItemIndex --[[ @ 0]]
			local f18_local26 = CoD.WeaponAttachmentsUtility.GetUpgradedAttachmentRef( f18_local6, f18_local15 ) --[[ @ 0]]
			if f18_local26 then
				f18_local25 = CoD.WeaponAttachmentsUtility.GetAttachmentIndexForWeaponAttachmentRef( f18_local5, f18_local26, f18_local2 ) --[[ @ 0]]
			end
			local f18_local27 = CoD.WeaponAttachmentsUtility.IsAttachmentUpgrade( f18_local6, f18_local15 ) --[[ @ 0]]
			local f18_local28 = f18_local21 == Enum[@"eattachmentgroup"][@"hash_26EE211053211305"] --[[ @ 0]]
			local f18_local29 = Engine[@"hash_793ABA160B5D7323"]( f18_local5, Engine[@"getattachmentindexbyref"]( f18_local15 ), false ) --[[ @ 0]]
			local f18_local30 = nil --[[ @ 0]]
			if f18_local29 then
				f18_local30 = CoD.FillerWidget140_90 --[[ @ 0]]
			elseif f18_local27 then
				f18_local30 = CoD.AttachmentUpgradeSlotContainer --[[ @ 0]]
			elseif f18_local28 then
				if f18_local2 == Enum[@"emodes"][@"mode_multiplayer"] then
					f18_local30 = CoD.WeaponAttachmentsUtility.GetUberAttachmentWidget --[[ @ 0]]
				else
					f18_local30 = CoD.UberAttachmentSlot --[[ @ 0]]
				end
			end
			table.insert( f18_local0, {
				models = {
					attachmentRef = f18_local15,
					displayName = f18_local16,
					displayNameShort = f18_local17,
					image = f18_local18,
					itemIndex = f18_local11,
					weaponIndex = f18_local5,
					attachmentIndex = f18_local14,
					attachmentGroup = f18_local21,
					weaponSlot = f18_local3,
					isUpgradedAttachment = f18_local27,
					baseAttachmentItemIndex = f18_local23,
					tierType = CoD.WeaponAttachmentsUtility.GetAttachmentTierType( f18_local6, f18_local15 ),
					isUberAttachment = f18_local28,
					upgradedAttachmentIndex = f18_local25,
					weaponAttributes = f18_local22,
					description = Engine[@"hash_4F9F1239CFD921FE"]( f18_local19 ),
					cautionText = CoD.WeaponAttachmentsUtility.GetAttachmentCautionText( f18_arg0, f18_local1, f18_local4, f18_local5, f18_local11, f18_local2 ),
					stateLeft = true,
					attachmentInFocus = false,
					isRestricted = f18_local29
				},
				properties = {
					baseAttachmentItemIndex = f18_local23,
					equipSound = f18_local20 and f18_local20.equipSound,
					unequipSound = f18_local20 and f18_local20.unequipSound,
					customWidgetOverride = f18_local30
				}
			} ) --[[ @ 0]]
		end
	end
	if LuaUtils.IsArenaMode() then
		CoD.WeaponAttachmentsUtility.ReorderAttachmentsToRemoveRestricted( f18_local0 ) --[[ @ 0]]
	end
	return f18_local0
end
 --[[ @ 0]]
DataSources.WeaponAttachments = ListHelper_SetupDataSource( "WeaponAttachments", function ( f19_arg0, f19_arg1, f19_arg2 )
	local f19_local0, f19_local1, f19_local2, f19_local3, f19_local4, f19_local5 = nil --[[ @ 0]]
	local f19_local6 = LuaUtils.IsArenaMode() --[[ @ 0]]
	if f19_arg1.menu then
		f19_local0, f19_local1, f19_local2 = CoD.BaseUtility.GetMenuModelModeLoadoutSlot( f19_arg1.menu ) --[[ @ 0]]
		f19_local3 = CoD.BaseUtility.GetMenuLoadoutListItemSlot( f19_arg1.menu ) --[[ @ 0]]
		f19_local5 = f19_local0[f19_local2].refHash:get() --[[ @ 0]]
		local f19_local7 = CoD.BaseUtility.GetMenuLoadoutListItemSlot( f19_arg1.menu ) --[[ @ 0]]
		if f19_local7 then
			f19_local4 = f19_local0[f19_local7].attachmentIndex:get() --[[ @ 0]]
		end
	end
	local f19_local8 = function ()
		if CoD.WeaponAttachmentsUtility.WeaponAttachmentListTable[f19_local2] then
			if CoD.WeaponAttachmentsUtility.WeaponAttachmentListTable[f19_local2].isArenaMode == f19_local6 and CoD.WeaponAttachmentsUtility.WeaponAttachmentListTable[f19_local2].weaponRefHash == f19_local5 then
				return CoD.WeaponAttachmentsUtility.WeaponAttachmentListTable[f19_local2].attachmentList
			else
				CoD.WeaponAttachmentsUtility.WeaponAttachmentListTable[f19_local2].isArenaMode = f19_local6 --[[ @ 0]]
				CoD.WeaponAttachmentsUtility.WeaponAttachmentListTable[f19_local2].weaponRefHash = f19_local5 --[[ @ 0]]
				CoD.WeaponAttachmentsUtility.WeaponAttachmentListTable[f19_local2].attachmentList = CoD.WeaponAttachmentsUtility.GetWeaponAttachmentList( f19_arg0, f19_arg1, f19_arg2 ) --[[ @ 0]]
				return CoD.WeaponAttachmentsUtility.WeaponAttachmentListTable[f19_local2].attachmentList
			end
		else
			DebugPrint( "\n WeaponAttachmentUtility: Did not get a valid loadoutSlot, classModel, or weaponRefHash" ) --[[ @ 0]]
			return CoD.WeaponAttachmentsUtility.GetWeaponAttachmentList( f19_arg0, f19_arg1, f19_arg2 )
		end
	end
	 --[[ @ 0]]
	f19_local8 = f19_local8() --[[ @ 0]]
	local f19_local9, f19_local10 = nil --[[ @ 0]]
	if f19_local0 then
		f19_local9, f19_local10 = CoD.WeaponAttachmentsUtility.UpdateEquippedWeaponAttachmentAttributes( f19_local0, f19_local2, f19_local3, f19_local1 ) --[[ @ 0]]
	end
	for f19_local18, f19_local19 in ipairs( f19_local8 ) --[[ @ 0]] do
		f19_local19.properties.selectIndex = f19_local19.models.attachmentIndex == f19_local4 --[[ @ 0]]
		if f19_local19.models and f19_local19.models.weaponIndex and f19_local19.models.attachmentRef then
			local f19_local14 = f19_local19.models.weaponIndex --[[ @ 0]]
			local f19_local15 = f19_local19.models.itemIndex --[[ @ 0]]
			local f19_local16 = f19_local19.models.attachmentRef --[[ @ 0]]
			local f19_local17 = Engine[@"hash_793ABA160B5D7323"]( f19_local14, Engine[@"getattachmentindexbyref"]( f19_local16 ), false ) --[[ @ 0]]
			f19_local19.models.weaponAttributes = CoD.WeaponAttachmentsUtility.GetWeaponAttachmentAttributes( f19_local14, f19_local16, f19_local1, f19_local9, f19_local10 ) --[[ @ 0]]
			f19_local19.models.cautionText = CoD.WeaponAttachmentsUtility.GetAttachmentCautionText( f19_arg0, f19_local0, f19_local3, f19_local14, f19_local15, f19_local1 ) --[[ @ 0]]
			f19_local19.models.isRestricted = f19_local17 --[[ @ 0]]
		end
	end
	return f19_local8
end, false, {
	getModelForAttachmentIndex = function ( f21_arg0, f21_arg1 )
		local f21_local0 = Engine[@"getmodelforcontroller"]( f21_arg0 ) --[[ @ 0]]
		f21_local0 = f21_local0.WeaponAttachments --[[ @ 0]]
		if f21_local0 and f21_local0[f21_arg1] then
			return f21_local0[f21_arg1]
		else
			
		end
	end
} ) --[[ @ 0]]
CoD.WeaponAttachmentsUtility.UpdateAttachmentFilter = function ( f22_arg0, f22_arg1, f22_arg2 )
	local f22_local0 = CoD.BaseUtility.GetMenuAttachmentFilter( f22_arg0 ) --[[ @ 0]]
	local f22_local1 = function ( f23_arg0 )
		if f22_local0 == "optic" then
			return f23_arg0 == Enum[@"eattachmentgroup"][@"attachment_group_optic"]
		elseif f22_local0 == "uber" then
			return f23_arg0 == Enum[@"eattachmentgroup"][@"hash_26EE211053211305"]
		else
			local f23_local0 --[[ @ 0]]
			if f23_arg0 == Enum[@"eattachmentgroup"][@"attachment_group_optic"] or f23_arg0 == Enum[@"eattachmentgroup"][@"hash_26EE211053211305"] then
				f23_local0 = false --[[ @ 0]]
			else
				f23_local0 = true --[[ @ 0]]
			end
		end
		return f23_local0
	end
	 --[[ @ 0]]
	f22_arg1:setFilter( function ( f24_arg0 )
		local f24_local0 = f24_arg0.attachmentGroup --[[ @ 0]]
		if f24_local0 then
			return f22_local1( f24_local0:get() )
		else
			
		end
	end ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.WeaponAttachmentsUtility.LayoutAttachmentOptionsDiamondGridSetupKeyboardnavigation = function ( f25_arg0, f25_arg1, f25_arg2, f25_arg3 )
	local f25_local0 = function ( f26_arg0, f26_arg1 )
		local f26_local0 = f26_arg1:getFirstChild() --[[ @ 0]]
		local f26_local1 = true --[[ @ 0]]
		while f26_local1 and f26_local0 ~= nil do
			f26_local1 = false --[[ @ 0]]
			for f26_local5, f26_local6 in ipairs( f26_arg0._attachmentUpgradeWidgets ) --[[ @ 0]] do
				if f26_local6 == f26_local0 then
					f26_local1 = true --[[ @ 0]]
				end
			end
			if f26_local1 then
				f26_local0 = f26_local0:getNextSibling() --[[ @ 0]]
			end
		end
		return f26_local0
	end
	 --[[ @ 0]]
	local f25_local1 = f25_local0( f25_arg0, f25_arg0._attachmentWidgets[f25_arg1] ) --[[ @ 0]]
	if not f25_local1.CustomNavigation then
		f25_local1.CustomNavigation = {} --[[ @ 0]]
	end
	if f25_arg2 ~= nil then
		if f25_local1.CustomNavigation == nil then
			f25_local1.CustomNavigation = {} --[[ @ 0]]
		end
		if f25_arg3 == 1 or f25_arg3 == 8 then
			f25_local1.CustomNavigation.up = f25_arg2 --[[ @ 0]]
		elseif f25_arg3 == 2 or f25_arg3 == 3 then
			f25_local1.CustomNavigation.right = f25_arg2 --[[ @ 0]]
		elseif f25_arg3 == 4 or f25_arg3 == 5 then
			f25_local1.CustomNavigation.down = f25_arg2 --[[ @ 0]]
		elseif f25_arg3 == 6 or f25_arg3 == 7 then
			f25_local1.CustomNavigation.left = f25_arg2 --[[ @ 0]]
		end
	end
	if f25_arg1 == 1 then
		return 
	elseif (f25_arg1 - 1) % 3 == 0 then
		local f25_local2 = f25_local0( f25_arg0, f25_arg0._attachmentWidgets[f25_arg1 - 1] ) --[[ @ 0]]
		if f25_local2.CustomNavigation == nil then
			f25_local2.CustomNavigation = {} --[[ @ 0]]
		end
		if f25_local1.CustomNavigation == nil then
			f25_local1.CustomNavigation = {} --[[ @ 0]]
		end
		if not f25_local2.CustomNavigation.down then
			f25_local2.CustomNavigation.down = f25_local1 --[[ @ 0]]
		else
			if f25_local2.CustomNavigation.down.CustomNavigation == nil then
				f25_local2.CustomNavigation.down.CustomNavigation = {} --[[ @ 0]]
			end
			f25_local2.CustomNavigation.down.CustomNavigation.down = f25_local1 --[[ @ 0]]
		end
		if not f25_local1.CustomNavigation.up then
			f25_local1.CustomNavigation.up = f25_local2 --[[ @ 0]]
		else
			if f25_local1.CustomNavigation.up.CustomNavigation == nil then
				f25_local1.CustomNavigation.up.CustomNavigation = {} --[[ @ 0]]
			end
			f25_local1.CustomNavigation.up.CustomNavigation.up = f25_local2 --[[ @ 0]]
		end
		if f25_arg1 >= 7 then
			local f25_local3 = f25_local0( f25_arg0, f25_arg0._attachmentWidgets[f25_arg1 - 3] ) --[[ @ 0]]
			if f25_local3.CustomNavigation == nil then
				f25_local3.CustomNavigation = {} --[[ @ 0]]
			end
			if not f25_local3.CustomNavigation.right then
				f25_local3.CustomNavigation.right = f25_local1 --[[ @ 0]]
			else
				if f25_local3.CustomNavigation.right.CustomNavigation == nil then
					f25_local3.CustomNavigation.right.CustomNavigation = {} --[[ @ 0]]
				end
				f25_local3.CustomNavigation.right.CustomNavigation.right = f25_local1 --[[ @ 0]]
			end
			f25_local1.CustomNavigation.left = f25_local3 --[[ @ 0]]
		end
	elseif (f25_arg1 + 1) % 3 == 0 then
		local f25_local4 = f25_arg1 - 3 --[[ @ 0]]
		if f25_arg1 == 2 then
			f25_local4 = 1 --[[ @ 0]]
		end
		local f25_local2 = f25_local0( f25_arg0, f25_arg0._attachmentWidgets[f25_local4] ) --[[ @ 0]]
		if f25_local2.CustomNavigation == nil then
			f25_local2.CustomNavigation = {} --[[ @ 0]]
		end
		if f25_local1.CustomNavigation == nil then
			f25_local1.CustomNavigation = {} --[[ @ 0]]
		end
		if not f25_local2.CustomNavigation.right then
			f25_local2.CustomNavigation.right = f25_local1 --[[ @ 0]]
		else
			if f25_local2.CustomNavigation.right.CustomNavigation == nil then
				f25_local2.CustomNavigation.right.CustomNavigation = {} --[[ @ 0]]
			end
			f25_local2.CustomNavigation.right.CustomNavigation.right = f25_local1 --[[ @ 0]]
		end
		if not f25_local1.CustomNavigation.left then
			f25_local1.CustomNavigation.left = f25_local2 --[[ @ 0]]
		else
			if f25_local1.CustomNavigation.left.CustomNavigation == nil then
				f25_local1.CustomNavigation.left.CustomNavigation = {} --[[ @ 0]]
			end
			f25_local1.CustomNavigation.left.CustomNavigation.left = f25_local2 --[[ @ 0]]
		end
	elseif f25_arg1 % 3 == 0 and f25_arg1 >= 6 then
		local f25_local4 = f25_local0( f25_arg0, f25_arg0._attachmentWidgets[f25_arg1 - 3] ) --[[ @ 0]]
		if f25_local4.CustomNavigation == nil then
			f25_local4.CustomNavigation = {} --[[ @ 0]]
		end
		if not f25_local4.CustomNavigation.right then
			f25_local4.CustomNavigation.right = f25_local1 --[[ @ 0]]
		else
			if f25_local4.CustomNavigation.right.CustomNavigation == nil then
				f25_local4.CustomNavigation.right.CustomNavigation = {} --[[ @ 0]]
			end
			f25_local4.CustomNavigation.right.CustomNavigation.right = f25_local1 --[[ @ 0]]
		end
		f25_local1.CustomNavigation.left = f25_local4 --[[ @ 0]]
	end
end
 --[[ @ 0]]
CoD.WeaponAttachmentsUtility.UpdateAttachmentContainerLayout = function ( f27_arg0, f27_arg1, f27_arg2 )
	local f27_local0 = f27_arg0.UberAttachmentContainer --[[ @ 0]]
	if f27_local0 and f27_local0.UberList and f27_local0.UberList.itemCount <= 0 then
		f27_local0:setAlpha( 0 ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
CoD.WeaponAttachmentsUtility.CenterAttachmentLayout = function ( f28_arg0, f28_arg1, f28_arg2, f28_arg3 )
	RecalculateScaleToElementWidth( f28_arg3, f28_arg3 ) --[[ @ 0]]
	local f28_local0, f28_local1, f28_local2, f28_local3 = f28_arg3:getLocalLeftRight() --[[ @ 0]]
	local f28_local4 = (f28_local3 - f28_local2) / 2 --[[ @ 0]]
	f28_arg3:setLeftRight( 0.5, 0.5, -f28_local4, f28_local4 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.WeaponAttachmentsUtility.GetAttachmentSlotForItemIndex = function ( f29_arg0, f29_arg1, f29_arg2, f29_arg3, f29_arg4 )
	local f29_local0 = Engine[@"getcustomclasscacroot"]( f29_arg0, f29_arg2, f29_arg4 ) --[[ @ 0]]
	if f29_local0 then
		for f29_local4, f29_local5 in ipairs( f29_arg3 ) --[[ @ 0]] do
			local f29_local6 = LUI.getTableFromPath( CoD.CACUtility.GetDDLPathForModelPath( f29_local0, f29_local5 ), f29_local0 ) --[[ @ 0]]
			if f29_local6:get() == f29_arg1 then
				return f29_local5
			end
		end
	end
	return nil
end
 --[[ @ 0]]
CoD.WeaponAttachmentsUtility.ValidateUpgradeAttachmentLoadoutHelper = function ( f30_arg0, f30_arg1, f30_arg2, f30_arg3 )
	local f30_local0 = f30_arg1[f30_arg2].itemIndex:get() --[[ @ 0]]
	if f30_local0 <= CoD.CACUtility.EmptyItemIndex then
		return 
	end
	local f30_local1 = Engine[@"getunlockableitemkvpinfo"]( f30_local0, f30_arg3 ) --[[ @ 0]]
	local f30_local2 = CoD.CACUtility.GetAttachmentListForSlot( f30_arg2 ) --[[ @ 0]]
	local f30_local3 = f30_arg1.classNum:get() --[[ @ 0]]
	for f30_local8, f30_local9 in ipairs( f30_local2 ) --[[ @ 0]] do
		local f30_local10 = f30_arg1[f30_local9] --[[ @ 0]]
		local f30_local11 = f30_local10.ref:get() --[[ @ 0]]
		if CoD.WeaponAttachmentsUtility.IsAttachmentUpgrade( f30_local1, f30_local11 ) and not CoD.WeaponAttachmentsUtility.GetAttachmentSlotForItemIndex( f30_arg0, CoD.WeaponAttachmentsUtility.GetAttachmentIndexForWeaponAttachmentRef( f30_local0, CoD.WeaponAttachmentsUtility.GetBaseAttachmentRef( f30_local1, f30_local11 ), f30_arg3 ), f30_local3, f30_local2, f30_arg3 ) then
			local f30_local7 = f30_local10.itemIndex:get() --[[ @ 0]]
			CoD.CACUtility.GetCustomClassModel( f30_arg0, f30_local3, f30_arg1, nil, f30_arg3 ) --[[ @ 0]]
			if CoD.CACUtility.RemoveAttachmentFromClassHelper( f30_arg0, f30_arg1, f30_local7, f30_local2, f30_arg3 ) then
				CoD.WeaponAttachmentsUtility.ValidateUpgradeAttachmentLoadoutHelper( f30_arg0, f30_arg1, f30_arg2, f30_arg3 ) --[[ @ 0]]
			end
		end
	end
end
 --[[ @ 0]]
CoD.WeaponAttachmentsUtility.ValidateUpgradeAttachmentLoadout = function ( f31_arg0, f31_arg1, f31_arg2 )
	local f31_local0, f31_local1, f31_local2 = CoD.BaseUtility.GetMenuModelModeLoadoutSlot( f31_arg0 ) --[[ @ 0]]
	if f31_arg2 and f31_arg2 ~= "" then
		f31_local2 = f31_arg2 --[[ @ 0]]
	end
	if not f31_local2 then
		return 
	else
		CoD.WeaponAttachmentsUtility.ValidateUpgradeAttachmentLoadoutHelper( f31_arg1, f31_local0, f31_local2, f31_local1 ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
CoD.WeaponAttachmentsUtility.SetupAttachmentDescriptionFlyouts = function ( f32_arg0, f32_arg1, f32_arg2, f32_arg3 )
	if not f32_arg0._flyouts then
		f32_arg0._flyouts = {} --[[ @ 0]]
		local f32_local0 = CoDShared.EmptyItemIndex --[[ @ 0]]
		local f32_local1 = nil --[[ @ 0]]
		if f32_arg3._weaponItemIndex then
			f32_local0 = f32_arg3._weaponItemIndex --[[ @ 0]]
			f32_local1 = "ArmoryWeaponAttachments" --[[ @ 0]]
		else
			local f32_local2, f32_local3, f32_local4 = CoD.BaseUtility.GetMenuModelModeLoadoutSlot( f32_arg3 ) --[[ @ 0]]
			f32_local0 = f32_local2[f32_local4].itemIndex:get() --[[ @ 0]]
			f32_local1 = "WeaponAttachments" --[[ @ 0]]
		end
		local f32_local2 = Engine[@"getmodelforcontroller"]( f32_arg2 ) --[[ @ 0]]
		f32_local2 = f32_local2[f32_local1] --[[ @ 0]]
		local f32_local3 = 1 --[[ @ 0]]
		local f32_local4 = f32_local2[f32_local3] --[[ @ 0]]
		while f32_local4 do
			if f32_local4.weaponIndex:get() == f32_local0 then
				local f32_local5 = CoD.AttachmentDescriptionContainer.new( f32_arg3, f32_arg2, 0, 0, 0, CoD.AttachmentDescriptionContainer.__defaultWidth, 0, 0, 0, CoD.AttachmentDescriptionContainer.__defaultHeight ) --[[ @ 0]]
				f32_local5:setModel( f32_local4, f32_arg2 ) --[[ @ 0]]
				f32_arg0:addElement( f32_local5 ) --[[ @ 0]]
				f32_arg3:sendInitializationEvents( f32_arg2, f32_local5 ) --[[ @ 0]]
				table.insert( f32_arg0._flyouts, f32_local5 ) --[[ @ 0]]
				UpdateState( f32_local5, {
					controller = f32_arg2
				} ) --[[ @ 0]]
				local f32_local6 = Engine[@"getmodelforcontroller"]( f32_arg2 ) --[[ @ 0]]
				local f32_local7 = f32_local6:create( "WeaponAttachmentFlyout.entNum" ) --[[ @ 0]]
				local f32_local8 = function ( f33_arg0, f33_arg1 )
					local f33_local0 = f33_arg1:get() --[[ @ 0]]
					if f33_local0 then
						f32_local5:setupWeaponAttachmentFlyout( f33_local0 ) --[[ @ 0]]
						if f32_local5.Connector then
							f32_local5.Connector:setupWeaponAttachmentFlyoutConnector() --[[ @ 0]]
						end
					end
				end
				 --[[ @ 0]]
				f32_local5:subscribeToModel( f32_local7, function ( model, f34_arg1 )
					f32_local8( f32_local5, model ) --[[ @ 0]]
				end, false ) --[[ @ 0]]
				f32_local8( f32_local5, f32_local7 ) --[[ @ 0]]
			end
			f32_local3 = f32_local3 + 1 --[[ @ 0]]
			f32_local4 = f32_local2[f32_local3] --[[ @ 0]]
		end
	end
end
 --[[ @ 0]]
CoD.WeaponAttachmentsUtility.CleanAttachmentDescriptionFlyouts = function ( f35_arg0, f35_arg1, f35_arg2, f35_arg3 )
	if f35_arg0._flyouts then
		for f35_local3, f35_local4 in ipairs( f35_arg0._flyouts ) --[[ @ 0]] do
			f35_local4:close() --[[ @ 0]]
		end
		f35_arg0._flyouts = nil --[[ @ 0]]
	end
end
 --[[ @ 0]]
CoD.WeaponAttachmentsUtility.ResetActiveListItemForList = function ( f36_arg0, f36_arg1 )
	if f36_arg0 then
		f36_arg0.activeWidget = nil --[[ @ 0]]
		f36_arg0:setModel( nil, f36_arg1 ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
CoD.WeaponAttachmentsUtility.SetupUberHintText = function ( f37_arg0, f37_arg1, f37_arg2 )
	local f37_local0, f37_local1, f37_local2 = CoD.BaseUtility.GetMenuModelModeLoadoutSlot( f37_arg0 ) --[[ @ 0]]
	local f37_local3 = CoD.BaseUtility.GetMenuLoadoutListItemSlot( f37_arg0 ) --[[ @ 0]]
	local f37_local4 = CoD.WeaponAttachmentsUtility.CanEquipUberAttachmentInSlot( f37_arg0 ) --[[ @ 0]]
	if f37_local0 then
		local f37_local5 = CoD.BonuscardUtility.IsOperatorModBonuscardEquipped( f37_local0, f37_local2, f37_local1 ) --[[ @ 0]]
		local f37_local6 = @"hash_0" --[[ @ 0]]
		if not f37_local5 then
			f37_local6 = @"hash_17A1F89C3CFA8A86" --[[ @ 0]]
			if f37_local2 == "secondary" then
				f37_local6 = @"hash_2015D4FED971424A" --[[ @ 0]]
			end
		elseif not f37_local4 then
			f37_local6 = @"hash_2B6269F85047C8B4" --[[ @ 0]]
		end
		f37_arg1:setText( Engine[@"hash_4F9F1239CFD921FE"]( f37_local6 ) ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
CoD.WeaponAttachmentsUtility.CanEquipUberAttachmentInSlot = function ( f38_arg0 )
	local f38_local0, f38_local1, f38_local2 = CoD.BaseUtility.GetMenuModelModeLoadoutSlot( f38_arg0 ) --[[ @ 0]]
	local f38_local3 = CoD.BaseUtility.GetMenuLoadoutListItemSlot( f38_arg0 ) --[[ @ 0]]
	if f38_local0 and CoD.BonuscardUtility.IsOperatorModBonuscardEquipped( f38_local0, f38_local2, f38_local1 ) then
		local f38_local4 = LUI.splitString( f38_local3, "." ) --[[ @ 0]]
		local f38_local5 = f38_local4[3] --[[ @ 0]]
		if f38_local5 then
			f38_local5 = tonumber( f38_local4[3] ) --[[ @ 0]]
		end
		if f38_local5 == CoD.CACUtility.UberIndexSlot then
			return true
		end
	end
	return false
end
 --[[ @ 0]]
CoD.WeaponAttachmentsUtility.IsAttachmentOptic = function ( f39_arg0, f39_arg1 )
	local f39_local0 = CoD.SafeGetModelValue( f39_arg1:getModel(), "loadoutListItem" ) --[[ @ 0]]
	if f39_local0 == nil then
		return false
	else
		local f39_local1 = CoD.SafeGetModelValue( f39_local0, "itemIndex" ) --[[ @ 0]]
		local f39_local2 = CoD.SafeGetModelValue( f39_local0, "weaponIndex" ) --[[ @ 0]]
		if f39_local1 == nil or f39_local2 == nil then
			return false
		else
			return Engine[@"isoptic"]( f39_local2, f39_local1 )
		end
	end
end
 --[[ @ 0]]
CoD.WeaponAttachmentsUtility.IsBaseAttachmentEquipped = function ( f40_arg0, f40_arg1, f40_arg2 )
	local f40_local0, f40_local1, f40_local2 = CoD.BaseUtility.GetMenuModelModeLoadoutSlot( f40_arg0 ) --[[ @ 0]]
	return f40_local0 and CoD.CACUtility.GetAttachmentEquipSlot( f40_arg1.baseAttachmentItemIndex, f40_local0, f40_local2 ) ~= nil
end
 --[[ @ 0]]
CoD.WeaponAttachmentsUtility.ShouldShowAttachmentFlyout = function ( f41_arg0, f41_arg1, f41_arg2 )
	if CoD.ModelUtility.IsSelfModelValueTrue( f41_arg1, f41_arg2, "attachmentInFocus" ) then
		return true
	end
	local f41_local0 = "WeaponAttachments" --[[ @ 0]]
	if f41_arg0._inArmory then
		f41_local0 = "ArmoryWeaponAttachments" --[[ @ 0]]
	elseif CoD.CACUtility.IsElementAttachmentEquippedInCurrentClass( f41_arg0, f41_arg1, f41_arg2 ) then
		return true
	end
	local f41_local1 = f41_arg1:getModel() --[[ @ 0]]
	if f41_local1.isUpgradedAttachment:get() then
		local f41_local2 = DataSources[f41_local0].getModelForAttachmentIndex( f41_arg2, f41_local1.baseAttachmentItemIndex:get() ) --[[ @ 0]]
		if f41_local2 and f41_local1 ~= f41_local2 then
			f41_local2.attachmentInFocus:forceNotifySubscriptions() --[[ @ 0]]
		end
	end
	return false
end
 --[[ @ 0]]
CoD.WeaponAttachmentsUtility.ShouldHideBaseAttachmentFlyout = function ( f42_arg0, f42_arg1, f42_arg2 )
	local f42_local0, f42_local1, f42_local2 = CoD.BaseUtility.GetMenuModelModeLoadoutSlot( f42_arg0 ) --[[ @ 0]]
	local f42_local3 = f42_arg1:getModel() --[[ @ 0]]
	if f42_local0 and f42_local3 then
		if f42_local3.isUpgradedAttachment:get() then
			local f42_local4 = DataSources.WeaponAttachments.getModelForAttachmentIndex( f42_arg2, f42_local3.baseAttachmentItemIndex:get() ) --[[ @ 0]]
			if f42_local4 and f42_local3 ~= f42_local4 then
				f42_local4.attachmentInFocus:forceNotifySubscriptions() --[[ @ 0]]
			end
		elseif f42_local3.upgradedAttachmentIndex then
			local f42_local5 = f42_local3.upgradedAttachmentIndex:get() --[[ @ 0]]
			if CoD.CACUtility.EmptyItemIndex < f42_local5 then
				if CoD.CACUtility.GetAttachmentEquipSlot( f42_local5, f42_local0, f42_local2 ) ~= nil then
					return true
				else
					return CoD.SafeGetModelValue( DataSources.WeaponAttachments.getModelForAttachmentIndex( f42_arg2, f42_local5 ), "attachmentInFocus" )
				end
			end
		end
	end
	return false
end
 --[[ @ 0]]
CoD.WeaponAttachmentsUtility.DoesWeaponHaveUberAttachment = function ( f43_arg0, f43_arg1 )
	local f43_local0, f43_local1, f43_local2 = CoD.BaseUtility.GetMenuModelModeLoadoutSlot( f43_arg0 ) --[[ @ 0]]
	if f43_local0 and f43_local0[f43_local2] then
		return CoD.CACUtility.EmptyItemIndex < Engine[@"hash_3EF453A0A31D191A"]( f43_local0[f43_local2].itemIndex:get(), f43_local1 )
	else
		return false
	end
end
 --[[ @ 0]]
CoD.WeaponAttachmentsUtility.ShouldShowWeaponUberInfo = function ( f44_arg0 )
	return CoD.BaseUtility.GetMenuAttachmentFilter( f44_arg0 ) == "attachment"
end
 --[[ @ 0]]
CoD.WeaponAttachmentsUtility.UpdateAttachmentHeader = function ( f45_arg0, f45_arg1 )
	local f45_local0 = CoD.BaseUtility.GetMenuAttachmentFilter( f45_arg0 ) --[[ @ 0]]
	if f45_local0 == "optic" then
		f45_arg1 = @"hash_2BB87386985BA15F" --[[ @ 0]]
	elseif f45_local0 == "uber" then
		f45_arg1 = @"hash_6912DE50663D611C" --[[ @ 0]]
	end
	return f45_arg1
end
 --[[ @ 0]]
