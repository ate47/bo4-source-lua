-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:49
require( "ui/uieditor/widgets/footer/fe_footercontainermain" ) --[[ @ 0]]
require( "ui/uieditor/widgets/main/atvicopy" ) --[[ @ 0]]
require( "ui/uieditor/widgets/main/connectionlabel" ) --[[ @ 0]]
require( "ui/uieditor/widgets/main/startlabel" ) --[[ @ 0]]
require( "ui/uieditor/widgets/director/directorquitbuttoncontainer" ) --[[ @ 0]]
require( "x64:73a1772776cde124" ) --[[ @ 0]]
require( "x64:3ae1040cb9e1ab23" ) --[[ @ 0]]

CoD.Main = InheritFrom( CoD.Menu ) --[[ @ 0]]
LUI.createMenu.Main = function ( f1_arg0, f1_arg1 )
	local self = CoD.Menu.NewForUIEditor( "Main", f1_arg0 ) --[[ @ 0]]
	local f1_local1 = self --[[ @ 0]]
	if IsPC() then
		CoD.LobbyUtility.MainPreLoad( self ) --[[ @ 0]]
		CoD.PCWidgetUtility.ResetAllKeysColor() --[[ @ 0]]
		CoD.PCWidgetUtility.DefaultKeyboardPulseColor() --[[ @ 0]]
	else
		CoD.LobbyUtility.MainPreLoad( self ) --[[ @ 0]]
	end
	self:setClass( CoD.Main ) --[[ @ 0]]
	self.soundSet = "FrontendMain" --[[ @ 0]]
	self:setOwner( f1_arg0 ) --[[ @ 0]]
	self:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	self:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	self:playSound( "menu_open", f1_arg0 ) --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_local1:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	local BGFill = nil --[[ @ 0]]
	
	BGFill = LUI.UIImage.new( -0.03, 1.02, -50, 50, 0, 1, 0, 0 ) --[[ @ 0]]
	BGFill:setRGB( 0, 0, 0 ) --[[ @ 0]]
	self:addElement( BGFill ) --[[ @ 0]]
	self.BGFill = BGFill --[[ @ 0]]
	
	local PCBnetStoreKeyart = nil --[[ @ 0]]
	
	PCBnetStoreKeyart = CoD.PC_BnetStore_Keyart.new( f1_local1, f1_arg0, 0.5, 0.5, -744, 1176, 1, 1, -1304, 1 ) --[[ @ 0]]
	self:addElement( PCBnetStoreKeyart ) --[[ @ 0]]
	self.PCBnetStoreKeyart = PCBnetStoreKeyart --[[ @ 0]]
	
	local AspectRatioBorder = nil --[[ @ 0]]
	
	AspectRatioBorder = LUI.UIImage.new( 0.5, 0.5, -2066, -197, 0, 1, 0, 0 ) --[[ @ 0]]
	AspectRatioBorder:setRGB( 0, 0, 0 ) --[[ @ 0]]
	AspectRatioBorder:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_feather_edges" ) ) --[[ @ 0]]
	AspectRatioBorder:setShaderVector( 0, 0, 0, 0.39, 0 ) --[[ @ 0]]
	self:addElement( AspectRatioBorder ) --[[ @ 0]]
	self.AspectRatioBorder = AspectRatioBorder --[[ @ 0]]
	
	local AspectRatioBorder2 = nil --[[ @ 0]]
	
	AspectRatioBorder2 = LUI.UIImage.new( 0.5, 0.5, 303, 2172, 0, 1, 0, 0 ) --[[ @ 0]]
	AspectRatioBorder2:setRGB( 0, 0, 0 ) --[[ @ 0]]
	AspectRatioBorder2:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_feather_edges" ) ) --[[ @ 0]]
	AspectRatioBorder2:setShaderVector( 0, 0.39, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( AspectRatioBorder2 ) --[[ @ 0]]
	self.AspectRatioBorder2 = AspectRatioBorder2 --[[ @ 0]]
	
	local f1_local6 = nil --[[ @ 0]]
	self.FullScreenBlack = LUI.UIElement.createFake() --[[ @ 0]]
	
	local StartLabel = CoD.StartLabel.new( f1_local1, f1_arg0, 0, 0, 0, 1920, 0, 0, 0, 1080 ) --[[ @ 0]]
	StartLabel:setZoom( 20 ) --[[ @ 0]]
	StartLabel:registerEventHandler( "menu_loaded", function ( element, event )
		local f2_local0 = nil --[[ @ 0]]
		if element.menuLoaded then
			f2_local0 = element:menuLoaded( event ) --[[ @ 0]]
		elseif element.super.menuLoaded then
			f2_local0 = element.super:menuLoaded( event ) --[[ @ 0]]
		end
		SizeToSafeArea( element, f1_arg0 ) --[[ @ 0]]
		if not f2_local0 then
			f2_local0 = element:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f2_local0
	end ) --[[ @ 0]]
	StartLabel:registerEventHandler( "gain_focus", function ( element, event )
		local f3_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f3_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f3_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_local1, f1_arg0, Enum[@"luibutton"][@"lui_key_pckey_0"] ) --[[ @ 0]]
		return f3_local0
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( StartLabel, f1_arg0, Enum[@"luibutton"][@"lui_key_pckey_0"], nil, function ( element, menu, controller, model )
		SendButtonPressToMenu( menu, controller, model, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_pckey_0"], @"hash_0", nil, nil ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	self:addElement( StartLabel ) --[[ @ 0]]
	self.StartLabel = StartLabel --[[ @ 0]]
	
	local ConnectionLabel = CoD.ConnectionLabel.new( f1_local1, f1_arg0, 0.5, 0.5, -960, 960, 0.5, 0.5, -540, 540 ) --[[ @ 0]]
	ConnectionLabel:setAlpha( 0 ) --[[ @ 0]]
	ConnectionLabel:setZoom( 20 ) --[[ @ 0]]
	self:addElement( ConnectionLabel ) --[[ @ 0]]
	self.ConnectionLabel = ConnectionLabel --[[ @ 0]]
	
	local feFooterContainer = CoD.fe_FooterContainerMain.new( f1_local1, f1_arg0, 0, 1, 0, 0, 1, 1, -153, -33 ) --[[ @ 0]]
	feFooterContainer:registerEventHandler( "menu_loaded", function ( element, event )
		local f6_local0 = nil --[[ @ 0]]
		if element.menuLoaded then
			f6_local0 = element:menuLoaded( event ) --[[ @ 0]]
		elseif element.super.menuLoaded then
			f6_local0 = element.super:menuLoaded( event ) --[[ @ 0]]
		end
		SizeToSafeArea( element, f1_arg0 ) --[[ @ 0]]
		if not f6_local0 then
			f6_local0 = element:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f6_local0
	end ) --[[ @ 0]]
	self:addElement( feFooterContainer ) --[[ @ 0]]
	self.feFooterContainer = feFooterContainer --[[ @ 0]]
	
	local AtviCopyDurango = CoD.AtviCopy.new( f1_local1, f1_arg0, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	AtviCopyDurango:registerEventHandler( "menu_loaded", function ( element, event )
		local f7_local0 = nil --[[ @ 0]]
		if element.menuLoaded then
			f7_local0 = element:menuLoaded( event ) --[[ @ 0]]
		elseif element.super.menuLoaded then
			f7_local0 = element.super:menuLoaded( event ) --[[ @ 0]]
		end
		SizeToSafeArea( element, f1_arg0 ) --[[ @ 0]]
		if not f7_local0 then
			f7_local0 = element:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f7_local0
	end ) --[[ @ 0]]
	self:addElement( AtviCopyDurango ) --[[ @ 0]]
	self.AtviCopyDurango = AtviCopyDurango --[[ @ 0]]
	
	local DirectorQuitButtonContainer = nil --[[ @ 0]]
	
	DirectorQuitButtonContainer = CoD.DirectorQuitButtonContainer.new( f1_local1, f1_arg0, 0.5, 0.5, 655, 855, 0, 0, 125, 161 ) --[[ @ 0]]
	self:addElement( DirectorQuitButtonContainer ) --[[ @ 0]]
	self.DirectorQuitButtonContainer = DirectorQuitButtonContainer --[[ @ 0]]
	
	local PCConnectionQueuingOverlayContainer = nil --[[ @ 0]]
	
	PCConnectionQueuingOverlayContainer = CoD.PC_ConnectionQueuingOverlayContainer.new( f1_local1, f1_arg0, 0.5, 0.5, -960, 960, 0.5, 0.5, -540, 540 ) --[[ @ 0]]
	PCConnectionQueuingOverlayContainer:subscribeToGlobalModel( f1_arg0, "PCConnectionQueue", nil, function ( model )
		PCConnectionQueuingOverlayContainer:setModel( model, f1_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( PCConnectionQueuingOverlayContainer ) --[[ @ 0]]
	self.PCConnectionQueuingOverlayContainer = PCConnectionQueuingOverlayContainer --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Durango",
			condition = function ( menu, element, event )
				return IsDurango()
			end
		},
		{
			stateName = "PC",
			condition = function ( menu, element, event )
				return IsPC()
			end
		}
	} ) --[[ @ 0]]
	self:registerEventHandler( "menu_loaded", function ( self, event )
		local f11_local0 = nil --[[ @ 0]]
		if self.menuLoaded then
			f11_local0 = self:menuLoaded( event ) --[[ @ 0]]
		elseif self.super.menuLoaded then
			f11_local0 = self.super:menuLoaded( event ) --[[ @ 0]]
		end
		CoD.LobbyUtility.SetInitLobbyMenu( self, f1_arg0 ) --[[ @ 0]]
		MenuHidesFreeCursor( f1_local1, f1_arg0 ) --[[ @ 0]]
		if not f11_local0 then
			f11_local0 = self:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f11_local0
	end ) --[[ @ 0]]
	self:registerEventHandler( "occlusion_change", function ( self, event )
		local f12_local0 = nil --[[ @ 0]]
		if self.OcclusionChange then
			f12_local0 = self:OcclusionChange( event ) --[[ @ 0]]
		elseif self.super.OcclusionChange then
			f12_local0 = self.super:OcclusionChange( event ) --[[ @ 0]]
		end
		if IsEventPropertyEqualTo( event, "occluded", true ) then
			MenuUnhideFreeCursor( f1_local1, f1_arg0 ) --[[ @ 0]]
		else
			MenuHidesFreeCursor( f1_local1, f1_arg0 ) --[[ @ 0]]
		end
		if not f12_local0 then
			f12_local0 = self:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f12_local0
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"luibutton"][@"lui_key_back"], nil, function ( element, menu, controller, model )
		if IsDurango() then
			ShowAccountPicker( controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsDurango() then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_back"], @"hash_0", nil, nil ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self.__on_menuOpened_self = function ( f15_arg0, f15_arg1, f15_arg2, f15_arg3 )
		local f15_local0 = self --[[ @ 0]]
		CoD.DirectorUtility.TryOpenFreshRestartPopup( f15_arg2, f15_arg1 ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	f1_local1:addMenuOpenedCallback( self.__on_menuOpened_self ) --[[ @ 0]]
	feFooterContainer:setModel( self.buttonModel, f1_arg0 ) --[[ @ 0]]
	feFooterContainer.id = "feFooterContainer" --[[ @ 0]]
	if CoD.isPC then
		DirectorQuitButtonContainer.id = "DirectorQuitButtonContainer" --[[ @ 0]]
	end
	self:processEvent( {
		name = "menu_loaded",
		controller = f1_arg0
	} ) --[[ @ 0]]
	self.__on_close_removeOverrides = function ()
		f1_local1:removeMenuOpenedCallback( self.__on_menuOpened_self ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg0 ) --[[ @ 0]]
	end
	
	local f1_local13 = self --[[ @ 0]]
	CoD.LobbyUtility.MainPostLoad( self, f1_arg0 ) --[[ @ 0]]
	return self
end
 --[[ @ 0]]
CoD.Main.__resetProperties = function ( f17_arg0 )
	f17_arg0.StartLabel:completeAnimation() --[[ @ 0]]
	f17_arg0.feFooterContainer:completeAnimation() --[[ @ 0]]
	f17_arg0.AtviCopyDurango:completeAnimation() --[[ @ 0]]
	f17_arg0.ConnectionLabel:completeAnimation() --[[ @ 0]]
	f17_arg0.StartLabel:setAlpha( 1 ) --[[ @ 0]]
	f17_arg0.feFooterContainer:setAlpha( 1 ) --[[ @ 0]]
	f17_arg0.AtviCopyDurango:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	f17_arg0.AtviCopyDurango:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	f17_arg0.AtviCopyDurango:setAlpha( 1 ) --[[ @ 0]]
	f17_arg0.ConnectionLabel:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.Main.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f18_arg0, f18_arg1 )
			f18_arg0:__resetProperties() --[[ @ 0]]
			f18_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			local f18_local0 = function ( f19_arg0 )
				local f19_local0 = function ( f20_arg0 )
					f20_arg0:beginAnimation( 520 ) --[[ @ 0]]
					f20_arg0:setAlpha( 1 ) --[[ @ 0]]
					f20_arg0:registerEventHandler( "transition_complete_keyframe", f18_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f18_arg0.StartLabel:beginAnimation( 1500 ) --[[ @ 0]]
				f18_arg0.StartLabel:registerEventHandler( "interrupted_keyframe", f18_arg0.clipInterrupted ) --[[ @ 0]]
				f18_arg0.StartLabel:registerEventHandler( "transition_complete_keyframe", f19_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f18_arg0.StartLabel:completeAnimation() --[[ @ 0]]
			f18_arg0.StartLabel:setAlpha( 0 ) --[[ @ 0]]
			f18_local0( f18_arg0.StartLabel ) --[[ @ 0]]
			f18_arg0.feFooterContainer:completeAnimation() --[[ @ 0]]
			f18_arg0.feFooterContainer:setAlpha( 0 ) --[[ @ 0]]
			f18_arg0.clipFinished( f18_arg0.feFooterContainer ) --[[ @ 0]]
			local f18_local1 = function ( f21_arg0 )
				f18_arg0.AtviCopyDurango:beginAnimation( 2820 ) --[[ @ 0]]
				f18_arg0.AtviCopyDurango:registerEventHandler( "interrupted_keyframe", f18_arg0.clipInterrupted ) --[[ @ 0]]
				f18_arg0.AtviCopyDurango:registerEventHandler( "transition_complete_keyframe", f18_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f18_arg0.AtviCopyDurango:completeAnimation() --[[ @ 0]]
			f18_arg0.AtviCopyDurango:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
			f18_arg0.AtviCopyDurango:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
			f18_arg0.AtviCopyDurango:setAlpha( 0 ) --[[ @ 0]]
			f18_local1( f18_arg0.AtviCopyDurango ) --[[ @ 0]]
		end
	},
	Durango = {
		DefaultClip = function ( f22_arg0, f22_arg1 )
			f22_arg0:__resetProperties() --[[ @ 0]]
			f22_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f22_arg0.StartLabel:completeAnimation() --[[ @ 0]]
			f22_arg0.StartLabel:setAlpha( 0 ) --[[ @ 0]]
			f22_arg0.clipFinished( f22_arg0.StartLabel ) --[[ @ 0]]
			local f22_local0 = function ( f23_arg0 )
				f22_arg0.AtviCopyDurango:beginAnimation( 1500 ) --[[ @ 0]]
				f22_arg0.AtviCopyDurango:registerEventHandler( "interrupted_keyframe", f22_arg0.clipInterrupted ) --[[ @ 0]]
				f22_arg0.AtviCopyDurango:registerEventHandler( "transition_complete_keyframe", f22_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f22_arg0.AtviCopyDurango:completeAnimation() --[[ @ 0]]
			f22_arg0.AtviCopyDurango:setAlpha( 1 ) --[[ @ 0]]
			f22_local0( f22_arg0.AtviCopyDurango ) --[[ @ 0]]
		end
	},
	PC = {
		DefaultClip = function ( f24_arg0, f24_arg1 )
			f24_arg0:__resetProperties() --[[ @ 0]]
			f24_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f24_arg0.StartLabel:completeAnimation() --[[ @ 0]]
			f24_arg0.StartLabel:setAlpha( 0 ) --[[ @ 0]]
			f24_arg0.clipFinished( f24_arg0.StartLabel ) --[[ @ 0]]
			local f24_local0 = function ( f25_arg0 )
				f24_arg0.ConnectionLabel:beginAnimation( 1000 ) --[[ @ 0]]
				f24_arg0.ConnectionLabel:setAlpha( 1 ) --[[ @ 0]]
				f24_arg0.ConnectionLabel:registerEventHandler( "interrupted_keyframe", f24_arg0.clipInterrupted ) --[[ @ 0]]
				f24_arg0.ConnectionLabel:registerEventHandler( "transition_complete_keyframe", f24_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f24_arg0.ConnectionLabel:completeAnimation() --[[ @ 0]]
			f24_arg0.ConnectionLabel:setAlpha( 0 ) --[[ @ 0]]
			f24_local0( f24_arg0.ConnectionLabel ) --[[ @ 0]]
			f24_arg0.feFooterContainer:completeAnimation() --[[ @ 0]]
			f24_arg0.feFooterContainer:setAlpha( 0 ) --[[ @ 0]]
			f24_arg0.clipFinished( f24_arg0.feFooterContainer ) --[[ @ 0]]
			local f24_local1 = function ( f26_arg0 )
				local f26_local0 = function ( f27_arg0 )
					f27_arg0:beginAnimation( 1099 ) --[[ @ 0]]
					f27_arg0:registerEventHandler( "transition_complete_keyframe", f24_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f24_arg0.AtviCopyDurango:beginAnimation( 1720 ) --[[ @ 0]]
				f24_arg0.AtviCopyDurango:registerEventHandler( "interrupted_keyframe", f24_arg0.clipInterrupted ) --[[ @ 0]]
				f24_arg0.AtviCopyDurango:registerEventHandler( "transition_complete_keyframe", f26_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f24_arg0.AtviCopyDurango:completeAnimation() --[[ @ 0]]
			f24_arg0.AtviCopyDurango:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
			f24_arg0.AtviCopyDurango:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
			f24_arg0.AtviCopyDurango:setAlpha( 0 ) --[[ @ 0]]
			f24_local1( f24_arg0.AtviCopyDurango ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.Main.__onClose = function ( f28_arg0 )
	f28_arg0.__on_close_removeOverrides() --[[ @ 0]]
	f28_arg0.PCBnetStoreKeyart:close() --[[ @ 0]]
	f28_arg0.FullScreenBlack:close() --[[ @ 0]]
	f28_arg0.StartLabel:close() --[[ @ 0]]
	f28_arg0.ConnectionLabel:close() --[[ @ 0]]
	f28_arg0.feFooterContainer:close() --[[ @ 0]]
	f28_arg0.AtviCopyDurango:close() --[[ @ 0]]
	f28_arg0.DirectorQuitButtonContainer:close() --[[ @ 0]]
	f28_arg0.PCConnectionQueuingOverlayContainer:close() --[[ @ 0]]
end
 --[[ @ 0]]
