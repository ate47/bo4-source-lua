-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:50
require( "ui/uieditor/widgets/mp/specialisthub/hubinfostripe" ) --[[ @ 0]]

CoD.CommonInformationFrame = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.CommonInformationFrame.__defaultWidth = 487 --[[ @ 0]]
CoD.CommonInformationFrame.__defaultHeight = 510 --[[ @ 0]]
CoD.CommonInformationFrame.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.CommonInformationFrame ) --[[ @ 0]]
	self.id = "CommonInformationFrame" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local SceneBlur = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	SceneBlur:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_E2354BE557C4C7A" ) ) --[[ @ 0]]
	SceneBlur:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( SceneBlur ) --[[ @ 0]]
	self.SceneBlur = SceneBlur --[[ @ 0]]
	
	local TiledBacking = LUI.UIImage.new( 0, 0, 0, 487, 0, 1, 0, 0 ) --[[ @ 0]]
	TiledBacking:setAlpha( 0.7 ) --[[ @ 0]]
	TiledBacking:setImage( RegisterImage( @"uie_ui_menu_specialist_hub_repeat_bg" ) ) --[[ @ 0]]
	TiledBacking:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_16CBE95C250C6D15" ) ) --[[ @ 0]]
	TiledBacking:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	TiledBacking:setupNineSliceShader( 196, 88 ) --[[ @ 0]]
	self:addElement( TiledBacking ) --[[ @ 0]]
	self.TiledBacking = TiledBacking --[[ @ 0]]
	
	local altHeader = LUI.UIText.new( 0, 0, 24.5, 224.5, 0, 0, -101, -83 ) --[[ @ 0]]
	altHeader:setRGB( 0.92, 0.92, 0.92 ) --[[ @ 0]]
	altHeader:setAlpha( 0.15 ) --[[ @ 0]]
	altHeader:setText( "" ) --[[ @ 0]]
	altHeader:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	altHeader:setLetterSpacing( 6 ) --[[ @ 0]]
	altHeader:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	self:addElement( altHeader ) --[[ @ 0]]
	self.altHeader = altHeader --[[ @ 0]]
	
	local header = LUI.UIText.new( 0, 0, 19.5, 219.5, 0, 0, -82, -15 ) --[[ @ 0]]
	header:setRGB( 0.96, 0.93, 0.84 ) --[[ @ 0]]
	header:setAlpha( 0.7 ) --[[ @ 0]]
	header:setText( "" ) --[[ @ 0]]
	header:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	header:setLetterSpacing( 14 ) --[[ @ 0]]
	header:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	self:addElement( header ) --[[ @ 0]]
	self.header = header --[[ @ 0]]
	
	local description = LUI.UIText.new( 0, 0, 29, 458, 0, 0, 28, 46 ) --[[ @ 0]]
	description:setRGB( 0.96, 0.93, 0.84 ) --[[ @ 0]]
	description:setAlpha( 0.3 ) --[[ @ 0]]
	description:setText( "" ) --[[ @ 0]]
	description:setTTF( "dinnext_regular" ) --[[ @ 0]]
	description:setLetterSpacing( 1 ) --[[ @ 0]]
	description:setLineSpacing( 1 ) --[[ @ 0]]
	description:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	description:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	self:addElement( description ) --[[ @ 0]]
	self.description = description --[[ @ 0]]
	
	local InfoBracketTop = LUI.UIImage.new( 0, 0, -2, 490, 0, 0, 0, 28 ) --[[ @ 0]]
	InfoBracketTop:setImage( RegisterImage( @"uie_ui_menu_specialist_hub_info_bracket" ) ) --[[ @ 0]]
	InfoBracketTop:setMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	self:addElement( InfoBracketTop ) --[[ @ 0]]
	self.InfoBracketTop = InfoBracketTop --[[ @ 0]]
	
	local InfoBracketBot = LUI.UIImage.new( 0, 0, -2.5, 489.5, 1, 1, -28, 0 ) --[[ @ 0]]
	InfoBracketBot:setZRot( 180 ) --[[ @ 0]]
	InfoBracketBot:setImage( RegisterImage( @"uie_ui_menu_specialist_hub_info_bracket" ) ) --[[ @ 0]]
	InfoBracketBot:setMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	self:addElement( InfoBracketBot ) --[[ @ 0]]
	self.InfoBracketBot = InfoBracketBot --[[ @ 0]]
	
	local InfoDotline = LUI.UIImage.new( 0, 0, 0, 491, 0, 0, 136, 140 ) --[[ @ 0]]
	InfoDotline:setImage( RegisterImage( @"uie_ui_menu_specialist_hub_info_dotline" ) ) --[[ @ 0]]
	InfoDotline:setMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	self:addElement( InfoDotline ) --[[ @ 0]]
	self.InfoDotline = InfoDotline --[[ @ 0]]
	
	local InfoDivider = LUI.UIImage.new( 0.5, 0.5, -2, 2, 0, 0, 171.5, 292.5 ) --[[ @ 0]]
	InfoDivider:setImage( RegisterImage( @"uie_ui_menu_specialist_hub_info_divider" ) ) --[[ @ 0]]
	InfoDivider:setMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	self:addElement( InfoDivider ) --[[ @ 0]]
	self.InfoDivider = InfoDivider --[[ @ 0]]
	
	local LayoutElementBR = LUI.UIImage.new( 0, 0, 443, 475, 0, 0, 743.5, 775.5 ) --[[ @ 0]]
	LayoutElementBR:setAlpha( 0.2 ) --[[ @ 0]]
	LayoutElementBR:setZRot( -90 ) --[[ @ 0]]
	LayoutElementBR:setImage( RegisterImage( @"hash_634B575F15CDD376" ) ) --[[ @ 0]]
	LayoutElementBR:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_F755127C95CF5B6" ) ) --[[ @ 0]]
	LayoutElementBR:setShaderVector( 0, 2, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( LayoutElementBR ) --[[ @ 0]]
	self.LayoutElementBR = LayoutElementBR --[[ @ 0]]
	
	local LayoutInfoPip = LUI.UIImage.new( 0, 0, 433, 445, 0, 0, 9, 17 ) --[[ @ 0]]
	LayoutInfoPip:setAlpha( 0.3 ) --[[ @ 0]]
	LayoutInfoPip:setImage( RegisterImage( @"hash_5F50E28EEFD20BD2" ) ) --[[ @ 0]]
	self:addElement( LayoutInfoPip ) --[[ @ 0]]
	self.LayoutInfoPip = LayoutInfoPip --[[ @ 0]]
	
	local InfoText = LUI.UIText.new( 0, 0, 445, 645, 0, 0, 8, 18 ) --[[ @ 0]]
	InfoText:setRGB( 0.92, 0.92, 0.92 ) --[[ @ 0]]
	InfoText:setAlpha( 0.05 ) --[[ @ 0]]
	InfoText:setText( LocalizeToUpperString( @"menu/info" ) ) --[[ @ 0]]
	InfoText:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	InfoText:setLetterSpacing( 2 ) --[[ @ 0]]
	InfoText:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	InfoText:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	self:addElement( InfoText ) --[[ @ 0]]
	self.InfoText = InfoText --[[ @ 0]]
	
	local CommonStripeBarTop = CoD.HubInfoStripe.new( f1_arg0, f1_arg1, 0, 0, 0.5, 487.5, 0, 0, -16, 0 ) --[[ @ 0]]
	self:addElement( CommonStripeBarTop ) --[[ @ 0]]
	self.CommonStripeBarTop = CommonStripeBarTop --[[ @ 0]]
	
	local CommonStripeBarBot = CoD.HubInfoStripe.new( f1_arg0, f1_arg1, 0, 0, 0, 487, 1, 1, 0, 16 ) --[[ @ 0]]
	self:addElement( CommonStripeBarBot ) --[[ @ 0]]
	self.CommonStripeBarBot = CommonStripeBarBot --[[ @ 0]]
	
	local bgEkia = LUI.UIImage.new( 0, 0, 11, 477, 1, 1, -127, -12 ) --[[ @ 0]]
	bgEkia:setRGB( 0.23, 0.23, 0.23 ) --[[ @ 0]]
	bgEkia:setAlpha( 0.25 ) --[[ @ 0]]
	self:addElement( bgEkia ) --[[ @ 0]]
	self.bgEkia = bgEkia --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "HideSecondaryLines",
			condition = function ( menu, element, event )
				return not IsMultiplayer()
			end
		}
	} ) --[[ @ 0]]
	local f1_local16 = self --[[ @ 0]]
	local f1_local17 = self.subscribeToModel --[[ @ 0]]
	local f1_local18 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local17( f1_local16, f1_local18["lobbyRoot.lobbyNav"], function ( f3_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f3_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.CommonInformationFrame.__resetProperties = function ( f4_arg0 )
	f4_arg0.InfoDivider:completeAnimation() --[[ @ 0]]
	f4_arg0.InfoDotline:completeAnimation() --[[ @ 0]]
	f4_arg0.bgEkia:completeAnimation() --[[ @ 0]]
	f4_arg0.InfoDivider:setAlpha( 1 ) --[[ @ 0]]
	f4_arg0.InfoDotline:setAlpha( 1 ) --[[ @ 0]]
	f4_arg0.bgEkia:setAlpha( 0.25 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.CommonInformationFrame.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f5_arg0, f5_arg1 )
			f5_arg0:__resetProperties() --[[ @ 0]]
			f5_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	HideSecondaryLines = {
		DefaultClip = function ( f6_arg0, f6_arg1 )
			f6_arg0:__resetProperties() --[[ @ 0]]
			f6_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f6_arg0.InfoDotline:completeAnimation() --[[ @ 0]]
			f6_arg0.InfoDotline:setAlpha( 0 ) --[[ @ 0]]
			f6_arg0.clipFinished( f6_arg0.InfoDotline ) --[[ @ 0]]
			f6_arg0.InfoDivider:completeAnimation() --[[ @ 0]]
			f6_arg0.InfoDivider:setAlpha( 0 ) --[[ @ 0]]
			f6_arg0.clipFinished( f6_arg0.InfoDivider ) --[[ @ 0]]
			f6_arg0.bgEkia:completeAnimation() --[[ @ 0]]
			f6_arg0.bgEkia:setAlpha( 0 ) --[[ @ 0]]
			f6_arg0.clipFinished( f6_arg0.bgEkia ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.CommonInformationFrame.__onClose = function ( f7_arg0 )
	f7_arg0.CommonStripeBarTop:close() --[[ @ 0]]
	f7_arg0.CommonStripeBarBot:close() --[[ @ 0]]
end
 --[[ @ 0]]
