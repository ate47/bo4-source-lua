-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:50
require( "x64:7021fe3cd1ed559" ) --[[ @ 0]]

CoD.ZMAARTrialTabRoundList = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.ZMAARTrialTabRoundList.__defaultWidth = 388 --[[ @ 0]]
CoD.ZMAARTrialTabRoundList.__defaultHeight = 635 --[[ @ 0]]
CoD.ZMAARTrialTabRoundList.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.ZMAARTrialTabRoundList ) --[[ @ 0]]
	self.id = "ZMAARTrialTabRoundList" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local ZMAARTrialTabRoundListInternal = CoD.ZMAARTrialTabRoundListInternal.new( f1_arg0, f1_arg1, 0.5, 0.5, -194, 194, 0.5, 0.5, -317.5, 317.5 ) --[[ @ 0]]
	ZMAARTrialTabRoundListInternal.MedalText:setText( LocalizeToUpperString( @"hash_4F2A2FD2DB27D84" ) ) --[[ @ 0]]
	ZMAARTrialTabRoundListInternal.MedalAchievedText:setText( LocalizeToUpperString( @"hash_677E29E95B5D6719" ) ) --[[ @ 0]]
	ZMAARTrialTabRoundListInternal:linkToElementModel( self, nil, false, function ( model )
		ZMAARTrialTabRoundListInternal:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( ZMAARTrialTabRoundListInternal ) --[[ @ 0]]
	self.ZMAARTrialTabRoundListInternal = ZMAARTrialTabRoundListInternal --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "BronzeMedal",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualTo( element, f1_arg1, "roundCompleteRequirement", 10 ) and CoD.ModelUtility.IsModelValueEqualTo( f1_arg1, "AAR.trialStats.zmTrialsVariant", 0 )
			end
		},
		{
			stateName = "SilverMedal",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualTo( element, f1_arg1, "roundCompleteRequirement", 20 ) and CoD.ModelUtility.IsModelValueEqualTo( f1_arg1, "AAR.trialStats.zmTrialsVariant", 0 )
			end
		},
		{
			stateName = "GoldMedal",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualTo( element, f1_arg1, "roundCompleteRequirement", 30 ) and CoD.ModelUtility.IsModelValueEqualTo( f1_arg1, "AAR.trialStats.zmTrialsVariant", 0 )
			end
		},
		{
			stateName = "PlatinumMedal",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualTo( element, f1_arg1, "roundCompleteRequirement", 10 ) and CoD.ModelUtility.IsModelValueEqualTo( f1_arg1, "AAR.trialStats.zmTrialsVariant", 1 )
			end
		},
		{
			stateName = "DiamondMedal",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualTo( element, f1_arg1, "roundCompleteRequirement", 20 ) and CoD.ModelUtility.IsModelValueEqualTo( f1_arg1, "AAR.trialStats.zmTrialsVariant", 1 )
			end
		},
		{
			stateName = "DarkMatterMedal",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualTo( element, f1_arg1, "roundCompleteRequirement", 30 ) and CoD.ModelUtility.IsModelValueEqualTo( f1_arg1, "AAR.trialStats.zmTrialsVariant", 1 )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "roundCompleteRequirement", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "roundCompleteRequirement"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local f1_local2 = self --[[ @ 0]]
	local f1_local3 = self.subscribeToModel --[[ @ 0]]
	local f1_local4 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local3( f1_local2, f1_local4["AAR.trialStats.zmTrialsVariant"], function ( f10_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f10_arg0:get(),
			modelName = "AAR.trialStats.zmTrialsVariant"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.ZMAARTrialTabRoundList.__resetProperties = function ( f11_arg0 )
	f11_arg0.ZMAARTrialTabRoundListInternal:completeAnimation() --[[ @ 0]]
	f11_arg0.ZMAARTrialTabRoundListInternal.ListBg:setImage( RegisterImage( @"uie_trial_rules_gold_normal" ) ) --[[ @ 0]]
	f11_arg0.ZMAARTrialTabRoundListInternal.Medal:setImage( RegisterImage( @"uie_trial_medal_gold" ) ) --[[ @ 0]]
	f11_arg0.ZMAARTrialTabRoundListInternal.MedalText:setRGB( 1, 1, 1 ) --[[ @ 0]]
	f11_arg0.ZMAARTrialTabRoundListInternal.MedalText:setText( LocalizeToUpperString( @"hash_4F2A2FD2DB27D84" ) ) --[[ @ 0]]
	f11_arg0.ZMAARTrialTabRoundListInternal.MedalAchievedText:setRGB( 1, 1, 1 ) --[[ @ 0]]
	f11_arg0.ZMAARTrialTabRoundListInternal.MedalAchievedText:setText( LocalizeToUpperString( @"hash_677E29E95B5D6719" ) ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ZMAARTrialTabRoundList.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f12_arg0, f12_arg1 )
			f12_arg0:__resetProperties() --[[ @ 0]]
			f12_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	BronzeMedal = {
		DefaultClip = function ( f13_arg0, f13_arg1 )
			f13_arg0:__resetProperties() --[[ @ 0]]
			f13_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f13_arg0.ZMAARTrialTabRoundListInternal:completeAnimation() --[[ @ 0]]
			f13_arg0.ZMAARTrialTabRoundListInternal.ListBg:completeAnimation() --[[ @ 0]]
			f13_arg0.ZMAARTrialTabRoundListInternal.Medal:completeAnimation() --[[ @ 0]]
			f13_arg0.ZMAARTrialTabRoundListInternal.MedalText:completeAnimation() --[[ @ 0]]
			f13_arg0.ZMAARTrialTabRoundListInternal.MedalAchievedText:completeAnimation() --[[ @ 0]]
			f13_arg0.ZMAARTrialTabRoundListInternal.ListBg:setImage( RegisterImage( @"uie_trial_rules_bronze_normal" ) ) --[[ @ 0]]
			f13_arg0.ZMAARTrialTabRoundListInternal.Medal:setImage( RegisterImage( @"uie_trial_medal_bronze" ) ) --[[ @ 0]]
			f13_arg0.ZMAARTrialTabRoundListInternal.MedalText:setRGB( 0.66, 0.3, 0.2 ) --[[ @ 0]]
			f13_arg0.ZMAARTrialTabRoundListInternal.MedalText:setText( LocalizeToUpperString( @"hash_6F90209F61BD41EA" ) ) --[[ @ 0]]
			f13_arg0.ZMAARTrialTabRoundListInternal.MedalAchievedText:setRGB( 0.66, 0.3, 0.2 ) --[[ @ 0]]
			f13_arg0.ZMAARTrialTabRoundListInternal.MedalAchievedText:setText( LocalizeToUpperString( @"hash_4C951B199209617A" ) ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.ZMAARTrialTabRoundListInternal ) --[[ @ 0]]
		end
	},
	SilverMedal = {
		DefaultClip = function ( f14_arg0, f14_arg1 )
			f14_arg0:__resetProperties() --[[ @ 0]]
			f14_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f14_arg0.ZMAARTrialTabRoundListInternal:completeAnimation() --[[ @ 0]]
			f14_arg0.ZMAARTrialTabRoundListInternal.ListBg:completeAnimation() --[[ @ 0]]
			f14_arg0.ZMAARTrialTabRoundListInternal.Medal:completeAnimation() --[[ @ 0]]
			f14_arg0.ZMAARTrialTabRoundListInternal.MedalText:completeAnimation() --[[ @ 0]]
			f14_arg0.ZMAARTrialTabRoundListInternal.MedalAchievedText:completeAnimation() --[[ @ 0]]
			f14_arg0.ZMAARTrialTabRoundListInternal.ListBg:setImage( RegisterImage( @"uie_trial_rules_silver_normal" ) ) --[[ @ 0]]
			f14_arg0.ZMAARTrialTabRoundListInternal.Medal:setImage( RegisterImage( @"uie_trial_medal_silver" ) ) --[[ @ 0]]
			f14_arg0.ZMAARTrialTabRoundListInternal.MedalText:setRGB( 0.79, 0.79, 0.79 ) --[[ @ 0]]
			f14_arg0.ZMAARTrialTabRoundListInternal.MedalText:setText( LocalizeToUpperString( @"hash_356AFC9EB0C32053" ) ) --[[ @ 0]]
			f14_arg0.ZMAARTrialTabRoundListInternal.MedalAchievedText:setRGB( 0.79, 0.79, 0.79 ) --[[ @ 0]]
			f14_arg0.ZMAARTrialTabRoundListInternal.MedalAchievedText:setText( LocalizeToUpperString( @"hash_6FE924858B948E51" ) ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.ZMAARTrialTabRoundListInternal ) --[[ @ 0]]
		end
	},
	GoldMedal = {
		DefaultClip = function ( f15_arg0, f15_arg1 )
			f15_arg0:__resetProperties() --[[ @ 0]]
			f15_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f15_arg0.ZMAARTrialTabRoundListInternal:completeAnimation() --[[ @ 0]]
			f15_arg0.ZMAARTrialTabRoundListInternal.ListBg:completeAnimation() --[[ @ 0]]
			f15_arg0.ZMAARTrialTabRoundListInternal.Medal:completeAnimation() --[[ @ 0]]
			f15_arg0.ZMAARTrialTabRoundListInternal.MedalText:completeAnimation() --[[ @ 0]]
			f15_arg0.ZMAARTrialTabRoundListInternal.MedalAchievedText:completeAnimation() --[[ @ 0]]
			f15_arg0.ZMAARTrialTabRoundListInternal.ListBg:setImage( RegisterImage( @"uie_trial_rules_gold_normal" ) ) --[[ @ 0]]
			f15_arg0.ZMAARTrialTabRoundListInternal.Medal:setImage( RegisterImage( @"uie_trial_medal_gold" ) ) --[[ @ 0]]
			f15_arg0.ZMAARTrialTabRoundListInternal.MedalText:setRGB( 1, 0.74, 0.28 ) --[[ @ 0]]
			f15_arg0.ZMAARTrialTabRoundListInternal.MedalText:setText( LocalizeToUpperString( @"hash_4F2A2FD2DB27D84" ) ) --[[ @ 0]]
			f15_arg0.ZMAARTrialTabRoundListInternal.MedalAchievedText:setRGB( 1, 0.74, 0.28 ) --[[ @ 0]]
			f15_arg0.ZMAARTrialTabRoundListInternal.MedalAchievedText:setText( LocalizeToUpperString( @"hash_677E29E95B5D6719" ) ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.ZMAARTrialTabRoundListInternal ) --[[ @ 0]]
		end
	},
	PlatinumMedal = {
		DefaultClip = function ( f16_arg0, f16_arg1 )
			f16_arg0:__resetProperties() --[[ @ 0]]
			f16_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f16_arg0.ZMAARTrialTabRoundListInternal:completeAnimation() --[[ @ 0]]
			f16_arg0.ZMAARTrialTabRoundListInternal.ListBg:completeAnimation() --[[ @ 0]]
			f16_arg0.ZMAARTrialTabRoundListInternal.Medal:completeAnimation() --[[ @ 0]]
			f16_arg0.ZMAARTrialTabRoundListInternal.MedalText:completeAnimation() --[[ @ 0]]
			f16_arg0.ZMAARTrialTabRoundListInternal.MedalAchievedText:completeAnimation() --[[ @ 0]]
			f16_arg0.ZMAARTrialTabRoundListInternal.ListBg:setImage( RegisterImage( @"hash_3BD93EB9B6EAD186" ) ) --[[ @ 0]]
			f16_arg0.ZMAARTrialTabRoundListInternal.Medal:setImage( RegisterImage( @"hash_40772C55AAA62BD0" ) ) --[[ @ 0]]
			f16_arg0.ZMAARTrialTabRoundListInternal.MedalText:setRGB( 0.79, 0.79, 0.79 ) --[[ @ 0]]
			f16_arg0.ZMAARTrialTabRoundListInternal.MedalText:setText( LocalizeToUpperString( @"hash_774B40DC9E8748CA" ) ) --[[ @ 0]]
			f16_arg0.ZMAARTrialTabRoundListInternal.MedalAchievedText:setRGB( 0.79, 0.79, 0.79 ) --[[ @ 0]]
			f16_arg0.ZMAARTrialTabRoundListInternal.MedalAchievedText:setText( LocalizeToUpperString( @"hash_3E964B7C1F487D1A" ) ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.ZMAARTrialTabRoundListInternal ) --[[ @ 0]]
		end
	},
	DiamondMedal = {
		DefaultClip = function ( f17_arg0, f17_arg1 )
			f17_arg0:__resetProperties() --[[ @ 0]]
			f17_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f17_arg0.ZMAARTrialTabRoundListInternal:completeAnimation() --[[ @ 0]]
			f17_arg0.ZMAARTrialTabRoundListInternal.ListBg:completeAnimation() --[[ @ 0]]
			f17_arg0.ZMAARTrialTabRoundListInternal.Medal:completeAnimation() --[[ @ 0]]
			f17_arg0.ZMAARTrialTabRoundListInternal.MedalText:completeAnimation() --[[ @ 0]]
			f17_arg0.ZMAARTrialTabRoundListInternal.MedalAchievedText:completeAnimation() --[[ @ 0]]
			f17_arg0.ZMAARTrialTabRoundListInternal.ListBg:setImage( RegisterImage( @"hash_34230D3A2AA576B2" ) ) --[[ @ 0]]
			f17_arg0.ZMAARTrialTabRoundListInternal.Medal:setImage( RegisterImage( @"hash_FD6B3DF8A0BA964" ) ) --[[ @ 0]]
			f17_arg0.ZMAARTrialTabRoundListInternal.MedalText:setRGB( 0.84, 0.84, 0.84 ) --[[ @ 0]]
			f17_arg0.ZMAARTrialTabRoundListInternal.MedalText:setText( LocalizeToUpperString( @"hash_6C5F4DF36C73F36" ) ) --[[ @ 0]]
			f17_arg0.ZMAARTrialTabRoundListInternal.MedalAchievedText:setRGB( 0.84, 0.84, 0.84 ) --[[ @ 0]]
			f17_arg0.ZMAARTrialTabRoundListInternal.MedalAchievedText:setText( LocalizeToUpperString( @"hash_869344F2E6672B6" ) ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.ZMAARTrialTabRoundListInternal ) --[[ @ 0]]
		end
	},
	DarkMatterMedal = {
		DefaultClip = function ( f18_arg0, f18_arg1 )
			f18_arg0:__resetProperties() --[[ @ 0]]
			f18_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f18_arg0.ZMAARTrialTabRoundListInternal:completeAnimation() --[[ @ 0]]
			f18_arg0.ZMAARTrialTabRoundListInternal.ListBg:completeAnimation() --[[ @ 0]]
			f18_arg0.ZMAARTrialTabRoundListInternal.Medal:completeAnimation() --[[ @ 0]]
			f18_arg0.ZMAARTrialTabRoundListInternal.MedalText:completeAnimation() --[[ @ 0]]
			f18_arg0.ZMAARTrialTabRoundListInternal.MedalAchievedText:completeAnimation() --[[ @ 0]]
			f18_arg0.ZMAARTrialTabRoundListInternal.ListBg:setImage( RegisterImage( @"hash_3C026AC93C711B7D" ) ) --[[ @ 0]]
			f18_arg0.ZMAARTrialTabRoundListInternal.Medal:setImage( RegisterImage( @"hash_18F9261A2CAA7739" ) ) --[[ @ 0]]
			f18_arg0.ZMAARTrialTabRoundListInternal.MedalText:setRGB( 0.66, 0.28, 1 ) --[[ @ 0]]
			f18_arg0.ZMAARTrialTabRoundListInternal.MedalText:setText( LocalizeToUpperString( @"hash_1254131A56580416" ) ) --[[ @ 0]]
			f18_arg0.ZMAARTrialTabRoundListInternal.MedalAchievedText:setRGB( 0.66, 0.28, 1 ) --[[ @ 0]]
			f18_arg0.ZMAARTrialTabRoundListInternal.MedalAchievedText:setText( LocalizeToUpperString( @"hash_42AB6C638ED90856" ) ) --[[ @ 0]]
			f18_arg0.clipFinished( f18_arg0.ZMAARTrialTabRoundListInternal ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.ZMAARTrialTabRoundList.__onClose = function ( f19_arg0 )
	f19_arg0.ZMAARTrialTabRoundListInternal:close() --[[ @ 0]]
end
 --[[ @ 0]]
