-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:50
CoD.zm_towers_challenges_hud = InheritFrom( CoD.Menu ) --[[ @ 0]]
CoD.zm_towers_challenges_hud.__stateMap = {
	"DefaultState",
	"Hidden"
} --[[ @ 0]]
LUI.createMenu.zm_towers_challenges_hud = function ( f1_arg0, f1_arg1 )
	local self = CoD.Menu.NewForUIEditor( "zm_towers_challenges_hud", f1_arg0 ) --[[ @ 0]]
	local f1_local1 = self --[[ @ 0]]
	self:setClass( CoD.zm_towers_challenges_hud ) --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self:setOwner( f1_arg0 ) --[[ @ 0]]
	self:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	self:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	self:playSound( "menu_open", f1_arg0 ) --[[ @ 0]]
	self.ignoreCursor = true --[[ @ 0]]
	f1_local1:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local ChallengeText = LUI.UIText.new( 0, 0, 83, 368, 0, 0, 440, 473 ) --[[ @ 0]]
	ChallengeText:setRGB( ColorSet.GroupName.r, ColorSet.GroupName.g, ColorSet.GroupName.b ) --[[ @ 0]]
	ChallengeText:setTTF( "default" ) --[[ @ 0]]
	ChallengeText:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_171E049B161CD00A" ) ) --[[ @ 0]]
	ChallengeText:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	ChallengeText:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	ChallengeText:linkToElementModel( self, "challenge_text", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			ChallengeText:setText( Engine[@"hash_4F9F1239CFD921FE"]( f2_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( ChallengeText ) --[[ @ 0]]
	self.ChallengeText = ChallengeText --[[ @ 0]]
	
	local ChallengeProgress = LUI.UIText.new( 0, 0, 83, 128, 0, 0, 530.5, 575.5 ) --[[ @ 0]]
	ChallengeProgress:setRGB( 1, 0.94, 0.04 ) --[[ @ 0]]
	ChallengeProgress:setAlpha( 0 ) --[[ @ 0]]
	ChallengeProgress:setTTF( "skorzhen" ) --[[ @ 0]]
	ChallengeProgress:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_171E049B161CD00A" ) ) --[[ @ 0]]
	ChallengeProgress:setAlignment( Enum[@"luialignment"][@"lui_alignment_right"] ) --[[ @ 0]]
	ChallengeProgress:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	ChallengeProgress:linkToElementModel( self, "progress", true, function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			ChallengeProgress:setText( CoD.BaseUtility.AlreadyLocalized( f3_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( ChallengeProgress ) --[[ @ 0]]
	self.ChallengeProgress = ChallengeProgress --[[ @ 0]]
	
	local TextOf = LUI.UIText.new( 0, 0, 128, 184, 0, 0, 530.5, 575.5 ) --[[ @ 0]]
	TextOf:setRGB( 1, 0.95, 0.04 ) --[[ @ 0]]
	TextOf:setAlpha( 0 ) --[[ @ 0]]
	TextOf:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_61FEEEE687293F9F" ) ) --[[ @ 0]]
	TextOf:setTTF( "skorzhen" ) --[[ @ 0]]
	TextOf:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_171E049B161CD00A" ) ) --[[ @ 0]]
	TextOf:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	TextOf:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	self:addElement( TextOf ) --[[ @ 0]]
	self.TextOf = TextOf --[[ @ 0]]
	
	local RequiredProgress = LUI.UIText.new( 0, 0, 184, 242, 0, 0, 530.5, 575.5 ) --[[ @ 0]]
	RequiredProgress:setRGB( 1, 0.95, 0.04 ) --[[ @ 0]]
	RequiredProgress:setAlpha( 0 ) --[[ @ 0]]
	RequiredProgress:setTTF( "skorzhen" ) --[[ @ 0]]
	RequiredProgress:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	RequiredProgress:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	RequiredProgress:linkToElementModel( self, "required_goal", true, function ( model )
		local f4_local0 = model:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			RequiredProgress:setText( CoD.BaseUtility.AlreadyLocalized( f4_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( RequiredProgress ) --[[ @ 0]]
	self.RequiredProgress = RequiredProgress --[[ @ 0]]
	
	self:processEvent( {
		name = "menu_loaded",
		controller = f1_arg0
	} ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg0 ) --[[ @ 0]]
	end
	
	SizeToSafeArea( self, f1_arg0 ) --[[ @ 0]]
	return self
end
 --[[ @ 0]]
CoD.zm_towers_challenges_hud.__resetProperties = function ( f5_arg0 )
	f5_arg0.ChallengeText:completeAnimation() --[[ @ 0]]
	f5_arg0.ChallengeProgress:completeAnimation() --[[ @ 0]]
	f5_arg0.TextOf:completeAnimation() --[[ @ 0]]
	f5_arg0.RequiredProgress:completeAnimation() --[[ @ 0]]
	f5_arg0.ChallengeText:setLeftRight( 0, 0, 83, 368 ) --[[ @ 0]]
	f5_arg0.ChallengeText:setTopBottom( 0, 0, 440, 473 ) --[[ @ 0]]
	f5_arg0.ChallengeProgress:setLeftRight( 0, 0, 83, 128 ) --[[ @ 0]]
	f5_arg0.ChallengeProgress:setTopBottom( 0, 0, 530.5, 575.5 ) --[[ @ 0]]
	f5_arg0.ChallengeProgress:setRGB( 1, 0.94, 0.04 ) --[[ @ 0]]
	f5_arg0.ChallengeProgress:setAlpha( 0 ) --[[ @ 0]]
	f5_arg0.TextOf:setLeftRight( 0, 0, 128, 184 ) --[[ @ 0]]
	f5_arg0.TextOf:setTopBottom( 0, 0, 530.5, 575.5 ) --[[ @ 0]]
	f5_arg0.TextOf:setRGB( 1, 0.95, 0.04 ) --[[ @ 0]]
	f5_arg0.TextOf:setAlpha( 0 ) --[[ @ 0]]
	f5_arg0.RequiredProgress:setLeftRight( 0, 0, 184, 242 ) --[[ @ 0]]
	f5_arg0.RequiredProgress:setTopBottom( 0, 0, 530.5, 575.5 ) --[[ @ 0]]
	f5_arg0.RequiredProgress:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.zm_towers_challenges_hud.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f6_arg0, f6_arg1 )
			f6_arg0:__resetProperties() --[[ @ 0]]
			f6_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f6_arg0.ChallengeText:completeAnimation() --[[ @ 0]]
			f6_arg0.ChallengeText:setLeftRight( 0, 0, 83, 381 ) --[[ @ 0]]
			f6_arg0.ChallengeText:setTopBottom( 0, 0, 440, 473 ) --[[ @ 0]]
			f6_arg0.clipFinished( f6_arg0.ChallengeText ) --[[ @ 0]]
			f6_arg0.ChallengeProgress:completeAnimation() --[[ @ 0]]
			f6_arg0.ChallengeProgress:setLeftRight( 0, 0, 57, 105 ) --[[ @ 0]]
			f6_arg0.ChallengeProgress:setTopBottom( 0, 0, 510, 555 ) --[[ @ 0]]
			f6_arg0.ChallengeProgress:setRGB( 1, 0.89, 0.04 ) --[[ @ 0]]
			f6_arg0.ChallengeProgress:setAlpha( 1 ) --[[ @ 0]]
			f6_arg0.clipFinished( f6_arg0.ChallengeProgress ) --[[ @ 0]]
			f6_arg0.TextOf:completeAnimation() --[[ @ 0]]
			f6_arg0.TextOf:setLeftRight( 0, 0, 129, 171 ) --[[ @ 0]]
			f6_arg0.TextOf:setTopBottom( 0, 0, 510, 555 ) --[[ @ 0]]
			f6_arg0.TextOf:setRGB( 1, 0.89, 0.04 ) --[[ @ 0]]
			f6_arg0.TextOf:setAlpha( 1 ) --[[ @ 0]]
			f6_arg0.clipFinished( f6_arg0.TextOf ) --[[ @ 0]]
			f6_arg0.RequiredProgress:completeAnimation() --[[ @ 0]]
			f6_arg0.RequiredProgress:setLeftRight( 0, 0, 173.5, 221.5 ) --[[ @ 0]]
			f6_arg0.RequiredProgress:setTopBottom( 0, 0, 510, 555 ) --[[ @ 0]]
			f6_arg0.RequiredProgress:setAlpha( 1 ) --[[ @ 0]]
			f6_arg0.clipFinished( f6_arg0.RequiredProgress ) --[[ @ 0]]
		end
	},
	Hidden = {
		DefaultClip = function ( f7_arg0, f7_arg1 )
			f7_arg0:__resetProperties() --[[ @ 0]]
			f7_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f7_arg0.ChallengeText:completeAnimation() --[[ @ 0]]
			f7_arg0.ChallengeText:setLeftRight( 0, 0, 83, 368 ) --[[ @ 0]]
			f7_arg0.ChallengeText:setTopBottom( 0, 0, 440, 473 ) --[[ @ 0]]
			f7_arg0.clipFinished( f7_arg0.ChallengeText ) --[[ @ 0]]
			f7_arg0.ChallengeProgress:completeAnimation() --[[ @ 0]]
			f7_arg0.ChallengeProgress:setAlpha( 0 ) --[[ @ 0]]
			f7_arg0.clipFinished( f7_arg0.ChallengeProgress ) --[[ @ 0]]
			f7_arg0.TextOf:completeAnimation() --[[ @ 0]]
			f7_arg0.TextOf:setAlpha( 0 ) --[[ @ 0]]
			f7_arg0.clipFinished( f7_arg0.TextOf ) --[[ @ 0]]
			f7_arg0.RequiredProgress:completeAnimation() --[[ @ 0]]
			f7_arg0.RequiredProgress:setAlpha( 0 ) --[[ @ 0]]
			f7_arg0.clipFinished( f7_arg0.RequiredProgress ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.zm_towers_challenges_hud.__onClose = function ( f8_arg0 )
	f8_arg0.ChallengeText:close() --[[ @ 0]]
	f8_arg0.ChallengeProgress:close() --[[ @ 0]]
	f8_arg0.RequiredProgress:close() --[[ @ 0]]
end
 --[[ @ 0]]
