-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
require( "ui/uieditor/widgets/hud/console/console" ) --[[ @ 0]]
require( "x64:f69112fd769661b" ) --[[ @ 0]]
require( "ui/uieditor/widgets/hud/mp_voipwidget/voip_container" ) --[[ @ 0]]
require( "x64:74d729e1fdbf4dd5" ) --[[ @ 0]]
require( "ui/uieditor/widgets/hud/zm_ammowidgetfactory/zmammocontainerfactory" ) --[[ @ 0]]
require( "ui/uieditor/widgets/hud/zm_notiffactory/zmnotifbgb_containerfactory" ) --[[ @ 0]]
require( "x64:38347cf5ab5f2b69" ) --[[ @ 0]]
require( "ui/uieditor/widgets/hud/zm_roundwidget/zmrndcontainer" ) --[[ @ 0]]
require( "x64:c1919dd635b8435" ) --[[ @ 0]]
require( "ui/uieditor/widgets/hud/zm_score/zmscr" ) --[[ @ 0]]
require( "x64:69aab8cc9bba9c21" ) --[[ @ 0]]
require( "ui/uieditor/widgets/notifications/notification" ) --[[ @ 0]]
require( "x64:2d0a7bdc0ff77d2c" ) --[[ @ 0]]
require( "x64:56023cffd4324342" ) --[[ @ 0]]
require( "x64:21a6f0f462dba05f" ) --[[ @ 0]]
require( "x64:210a16c38de9fa76" ) --[[ @ 0]]
require( "x64:1bbef8f69b570835" ) --[[ @ 0]]
require( "x64:74967b333b95ffa4" ) --[[ @ 0]]
require( "x64:4f16dbc88a0700ff" ) --[[ @ 0]]
require( "x64:1e72482b6a33f7e9" ) --[[ @ 0]]
require( "ui/uieditor/widgets/chat/ingame/ingamechatclientcontainer" ) --[[ @ 0]]

CoD.Hud_ZM_Factory_SafeAreaContainer = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.Hud_ZM_Factory_SafeAreaContainer.__defaultWidth = 1920 --[[ @ 0]]
CoD.Hud_ZM_Factory_SafeAreaContainer.__defaultHeight = 1080 --[[ @ 0]]
CoD.Hud_ZM_Factory_SafeAreaContainer.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	if CoD.HUDUtility.IsAnyGameType( f1_arg1, "ztrials" ) then
		CoD.ZombieUtility.SetupTrialsStaggerDisables( self, f1_arg1 ) --[[ @ 0]]
		CoD.BaseUtility.InitControllerModelIfNotSet( f1_arg1, "luielement.zm_red_challenges_hud.tributeAvailable", 0 ) --[[ @ 0]]
	else
		CoD.BaseUtility.InitControllerModelIfNotSet( f1_arg1, "luielement.zm_red_challenges_hud.tributeAvailable", 0 ) --[[ @ 0]]
	end
	self:setClass( CoD.Hud_ZM_Factory_SafeAreaContainer ) --[[ @ 0]]
	self.id = "Hud_ZM_Factory_SafeAreaContainer" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local ScoreInfo = CoD.ZMScoreInfoContainer.new( f1_arg0, f1_arg1, 0, 0, 1598.5, 1764.5, 0, 0, 437, 643 ) --[[ @ 0]]
	self:addElement( ScoreInfo ) --[[ @ 0]]
	self.ScoreInfo = ScoreInfo --[[ @ 0]]
	
	local ZmNotifBGBContainerFactory = CoD.ZmNotifBGB_ContainerFactory.new( f1_arg0, f1_arg1, 0.5, 0.5, -234, 234, 0, 0, -9, 371 ) --[[ @ 0]]
	ZmNotifBGBContainerFactory:setScale( 0.75, 0.75 ) --[[ @ 0]]
	ZmNotifBGBContainerFactory:subscribeToGlobalModel( f1_arg1, "PerController", "scriptNotify", function ( model )
		local f2_local0 = ZmNotifBGBContainerFactory --[[ @ 0]]
		if CoD.ModelUtility.IsParamModelEqualToHashString( model, @"hash_139DD32AD1CB76B9" ) and not CoD.ModelUtility.IsGlobalModelValueEqualTo( "ZMHudGlobal.trials.hudDeactivated", 1 ) then
			AddZombieBGBTokenNotification( self, f2_local0, f1_arg1, model ) --[[ @ 0]]
		elseif CoD.ModelUtility.IsParamModelEqualToHashString( model, @"zombie_bgb_notification" ) and not CoD.ModelUtility.IsGlobalModelValueEqualTo( "ZMHudGlobal.trials.hudDeactivated", 1 ) then
			AddZombieBGBNotification( self, f2_local0, f1_arg1, model ) --[[ @ 0]]
		elseif CoD.ModelUtility.IsParamModelEqualToHashString( model, @"zombie_notification" ) and not CoD.ModelUtility.IsGlobalModelValueEqualTo( "ZMHudGlobal.trials.hudDeactivated", 1 ) then
			AddZombieNotification( self, f2_local0, f1_arg1, model ) --[[ @ 0]]
		elseif CoD.ModelUtility.IsParamModelEqualToHashString( model, @"zombie_callings_notification" ) and not CoD.ModelUtility.IsGlobalModelValueEqualTo( "ZMHudGlobal.trials.hudDeactivated", 1 ) then
			CoD.ZombiesCallingsUtility.AddZombieCallingsNotification( self, f2_local0, model ) --[[ @ 0]]
		elseif CoD.ModelUtility.IsParamModelEqualToHashString( model, @"hash_658CF088766F3AFF" ) and not CoD.ModelUtility.IsGlobalModelValueEqualTo( "ZMHudGlobal.trials.hudDeactivated", 1 ) then
			AddZombieRushNotification( self, f2_local0, model, "Key" ) --[[ @ 0]]
		elseif CoD.ModelUtility.IsParamModelEqualToHashString( model, @"hash_3AC2171741B33FC9" ) and not CoD.ModelUtility.IsGlobalModelValueEqualTo( "ZMHudGlobal.trials.hudDeactivated", 1 ) then
			AddZombieRushNotification( self, f2_local0, model, "ExtraLife" ) --[[ @ 0]]
		elseif CoD.ModelUtility.IsParamModelEqualToHashString( model, @"hash_6B83E3ECA730E165" ) then
			CoD.ZombieUtility.AddTrialsRoundSplashNotification( self, f2_local0, model ) --[[ @ 0]]
		elseif CoD.ModelUtility.IsParamModelEqualToHashString( model, @"zombie_special_notification" ) and not CoD.ModelUtility.IsGlobalModelValueEqualTo( "ZMHudGlobal.trials.hudDeactivated", 1 ) then
			CoD.ZombieUtility.SpecialZombieNotification( self, f2_local0, model ) --[[ @ 0]]
		elseif CoD.ModelUtility.IsParamModelEqualToHashString( model, @"hash_2F5757AD20BC3AE" ) then
			CoD.ZombieUtility.AddTcmSplashNotification( self, f2_local0, model ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	ZmNotifBGBContainerFactory:subscribeToGlobalModel( f1_arg1, "PerController", "luielement.zm_red_challenges_hud.tributeAvailable", function ( model )
		CoD.ZombieUtility.AddTributeSplashNotification( self, ZmNotifBGBContainerFactory, model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( ZmNotifBGBContainerFactory ) --[[ @ 0]]
	self.ZmNotifBGBContainerFactory = ZmNotifBGBContainerFactory --[[ @ 0]]
	
	local Notifications = CoD.Notification.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	self:addElement( Notifications ) --[[ @ 0]]
	self.Notifications = Notifications --[[ @ 0]]
	
	local PlayerWidget = CoD.PlayerWidget_ZM.new( f1_arg0, f1_arg1, 0, 0, 53, 331, 1, 1, -145, -33 ) --[[ @ 0]]
	self:addElement( PlayerWidget ) --[[ @ 0]]
	self.PlayerWidget = PlayerWidget --[[ @ 0]]
	
	local f1_local5 = nil --[[ @ 0]]
	self.Score = LUI.UIElement.createFake() --[[ @ 0]]
	local ScorePC = nil --[[ @ 0]]
	
	ScorePC = CoD.ZMScr.new( f1_arg0, f1_arg1, 0, 0, 8, 209, 1, 1, -446, -146 ) --[[ @ 0]]
	ScorePC:mergeStateConditions( {
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return CoD.HUDUtility.IsAnyGameType( f1_arg1, "zstandard" )
			end
		},
		{
			stateName = "HudStart",
			condition = function ( menu, element, event )
				local f5_local0 = CoD.ModelUtility.IsModelValueTrue( f1_arg1, "hudItems.playerSpawned" ) --[[ @ 0]]
				if f5_local0 then
					if not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_4B8E9B69F4B87954"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_5D3ABF9A2753CE40"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_59333FC97F7870"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_669C28E2FCA82769"] ) and Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_7ADC477DDE486DD7"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_523CD9BAB9B9F4C8"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_68A5E996D4528DA2"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_47B52A87BC9AA4C7"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_29BF57CE75A8755E"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_6668F0686232679"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_33AEEAA452536E6E"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_1D298E43D0B6FEF2"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_624E603C16FCC38F"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) then
						f5_local0 = Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_BB045E46E88E762"] ) --[[ @ 0]]
					else
						f5_local0 = false --[[ @ 0]]
					end
				end
				return f5_local0
			end
		}
	} ) --[[ @ 0]]
	local f1_local7 = ScorePC --[[ @ 0]]
	local ZMScrArcade = ScorePC.subscribeToModel --[[ @ 0]]
	local AmmoPC = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	ZMScrArcade( f1_local7, AmmoPC["hudItems.playerSpawned"], function ( f6_arg0 )
		f1_arg0:updateElementState( ScorePC, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f6_arg0:get(),
			modelName = "hudItems.playerSpawned"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = ScorePC --[[ @ 0]]
	ZMScrArcade = ScorePC.subscribeToModel --[[ @ 0]]
	AmmoPC = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	ZMScrArcade( f1_local7, AmmoPC["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_4B8E9B69F4B87954"]], function ( f7_arg0 )
		f1_arg0:updateElementState( ScorePC, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f7_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_4B8E9B69F4B87954"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = ScorePC --[[ @ 0]]
	ZMScrArcade = ScorePC.subscribeToModel --[[ @ 0]]
	AmmoPC = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	ZMScrArcade( f1_local7, AmmoPC["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5D3ABF9A2753CE40"]], function ( f8_arg0 )
		f1_arg0:updateElementState( ScorePC, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f8_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5D3ABF9A2753CE40"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = ScorePC --[[ @ 0]]
	ZMScrArcade = ScorePC.subscribeToModel --[[ @ 0]]
	AmmoPC = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	ZMScrArcade( f1_local7, AmmoPC["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_59333FC97F7870"]], function ( f9_arg0 )
		f1_arg0:updateElementState( ScorePC, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f9_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_59333FC97F7870"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = ScorePC --[[ @ 0]]
	ZMScrArcade = ScorePC.subscribeToModel --[[ @ 0]]
	AmmoPC = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	ZMScrArcade( f1_local7, AmmoPC["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_669C28E2FCA82769"]], function ( f10_arg0 )
		f1_arg0:updateElementState( ScorePC, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f10_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_669C28E2FCA82769"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = ScorePC --[[ @ 0]]
	ZMScrArcade = ScorePC.subscribeToModel --[[ @ 0]]
	AmmoPC = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	ZMScrArcade( f1_local7, AmmoPC["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_7ADC477DDE486DD7"]], function ( f11_arg0 )
		f1_arg0:updateElementState( ScorePC, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f11_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_7ADC477DDE486DD7"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = ScorePC --[[ @ 0]]
	ZMScrArcade = ScorePC.subscribeToModel --[[ @ 0]]
	AmmoPC = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	ZMScrArcade( f1_local7, AmmoPC["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_523CD9BAB9B9F4C8"]], function ( f12_arg0 )
		f1_arg0:updateElementState( ScorePC, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f12_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_523CD9BAB9B9F4C8"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = ScorePC --[[ @ 0]]
	ZMScrArcade = ScorePC.subscribeToModel --[[ @ 0]]
	AmmoPC = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	ZMScrArcade( f1_local7, AmmoPC["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_68A5E996D4528DA2"]], function ( f13_arg0 )
		f1_arg0:updateElementState( ScorePC, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f13_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_68A5E996D4528DA2"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = ScorePC --[[ @ 0]]
	ZMScrArcade = ScorePC.subscribeToModel --[[ @ 0]]
	AmmoPC = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	ZMScrArcade( f1_local7, AmmoPC["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_47B52A87BC9AA4C7"]], function ( f14_arg0 )
		f1_arg0:updateElementState( ScorePC, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f14_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_47B52A87BC9AA4C7"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = ScorePC --[[ @ 0]]
	ZMScrArcade = ScorePC.subscribeToModel --[[ @ 0]]
	AmmoPC = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	ZMScrArcade( f1_local7, AmmoPC["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_29BF57CE75A8755E"]], function ( f15_arg0 )
		f1_arg0:updateElementState( ScorePC, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f15_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_29BF57CE75A8755E"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = ScorePC --[[ @ 0]]
	ZMScrArcade = ScorePC.subscribeToModel --[[ @ 0]]
	AmmoPC = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	ZMScrArcade( f1_local7, AmmoPC["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_6668F0686232679"]], function ( f16_arg0 )
		f1_arg0:updateElementState( ScorePC, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f16_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_6668F0686232679"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = ScorePC --[[ @ 0]]
	ZMScrArcade = ScorePC.subscribeToModel --[[ @ 0]]
	AmmoPC = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	ZMScrArcade( f1_local7, AmmoPC["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_33AEEAA452536E6E"]], function ( f17_arg0 )
		f1_arg0:updateElementState( ScorePC, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f17_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_33AEEAA452536E6E"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = ScorePC --[[ @ 0]]
	ZMScrArcade = ScorePC.subscribeToModel --[[ @ 0]]
	AmmoPC = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	ZMScrArcade( f1_local7, AmmoPC["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_1D298E43D0B6FEF2"]], function ( f18_arg0 )
		f1_arg0:updateElementState( ScorePC, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f18_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_1D298E43D0B6FEF2"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = ScorePC --[[ @ 0]]
	ZMScrArcade = ScorePC.subscribeToModel --[[ @ 0]]
	AmmoPC = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	ZMScrArcade( f1_local7, AmmoPC["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_624E603C16FCC38F"]], function ( f19_arg0 )
		f1_arg0:updateElementState( ScorePC, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f19_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_624E603C16FCC38F"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = ScorePC --[[ @ 0]]
	ZMScrArcade = ScorePC.subscribeToModel --[[ @ 0]]
	AmmoPC = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	ZMScrArcade( f1_local7, AmmoPC["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"]], function ( f20_arg0 )
		f1_arg0:updateElementState( ScorePC, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f20_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = ScorePC --[[ @ 0]]
	ZMScrArcade = ScorePC.subscribeToModel --[[ @ 0]]
	AmmoPC = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	ZMScrArcade( f1_local7, AmmoPC["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"]], function ( f21_arg0 )
		f1_arg0:updateElementState( ScorePC, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f21_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = ScorePC --[[ @ 0]]
	ZMScrArcade = ScorePC.subscribeToModel --[[ @ 0]]
	AmmoPC = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	ZMScrArcade( f1_local7, AmmoPC["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_BB045E46E88E762"]], function ( f22_arg0 )
		f1_arg0:updateElementState( ScorePC, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f22_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_BB045E46E88E762"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:addElement( ScorePC ) --[[ @ 0]]
	self.ScorePC = ScorePC --[[ @ 0]]
	
	ZMScrArcade = CoD.ZMScr_Arcade.new( f1_arg0, f1_arg1, 0, 0, 40, 241, 1, 1, -330, -138 ) --[[ @ 0]]
	ZMScrArcade:mergeStateConditions( {
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return not CoD.HUDUtility.IsAnyGameType( f1_arg1, "zstandard" )
			end
		},
		{
			stateName = "HudStart",
			condition = function ( menu, element, event )
				local f24_local0 = CoD.ModelUtility.IsModelValueTrue( f1_arg1, "hudItems.playerSpawned" ) --[[ @ 0]]
				if f24_local0 then
					if not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_4B8E9B69F4B87954"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_5D3ABF9A2753CE40"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_59333FC97F7870"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_669C28E2FCA82769"] ) and Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_7ADC477DDE486DD7"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_523CD9BAB9B9F4C8"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_68A5E996D4528DA2"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_47B52A87BC9AA4C7"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_29BF57CE75A8755E"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_6668F0686232679"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_33AEEAA452536E6E"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_1D298E43D0B6FEF2"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_624E603C16FCC38F"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) then
						f24_local0 = Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_BB045E46E88E762"] ) --[[ @ 0]]
					else
						f24_local0 = false --[[ @ 0]]
					end
				end
				return f24_local0
			end
		}
	} ) --[[ @ 0]]
	AmmoPC = ZMScrArcade --[[ @ 0]]
	f1_local7 = ZMScrArcade.subscribeToModel --[[ @ 0]]
	local Rounds = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local7( AmmoPC, Rounds["hudItems.playerSpawned"], function ( f25_arg0 )
		f1_arg0:updateElementState( ZMScrArcade, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f25_arg0:get(),
			modelName = "hudItems.playerSpawned"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoPC = ZMScrArcade --[[ @ 0]]
	f1_local7 = ZMScrArcade.subscribeToModel --[[ @ 0]]
	Rounds = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local7( AmmoPC, Rounds["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_4B8E9B69F4B87954"]], function ( f26_arg0 )
		f1_arg0:updateElementState( ZMScrArcade, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f26_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_4B8E9B69F4B87954"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoPC = ZMScrArcade --[[ @ 0]]
	f1_local7 = ZMScrArcade.subscribeToModel --[[ @ 0]]
	Rounds = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local7( AmmoPC, Rounds["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5D3ABF9A2753CE40"]], function ( f27_arg0 )
		f1_arg0:updateElementState( ZMScrArcade, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f27_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5D3ABF9A2753CE40"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoPC = ZMScrArcade --[[ @ 0]]
	f1_local7 = ZMScrArcade.subscribeToModel --[[ @ 0]]
	Rounds = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local7( AmmoPC, Rounds["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_59333FC97F7870"]], function ( f28_arg0 )
		f1_arg0:updateElementState( ZMScrArcade, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f28_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_59333FC97F7870"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoPC = ZMScrArcade --[[ @ 0]]
	f1_local7 = ZMScrArcade.subscribeToModel --[[ @ 0]]
	Rounds = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local7( AmmoPC, Rounds["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"]], function ( f29_arg0 )
		f1_arg0:updateElementState( ZMScrArcade, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f29_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoPC = ZMScrArcade --[[ @ 0]]
	f1_local7 = ZMScrArcade.subscribeToModel --[[ @ 0]]
	Rounds = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local7( AmmoPC, Rounds["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_669C28E2FCA82769"]], function ( f30_arg0 )
		f1_arg0:updateElementState( ZMScrArcade, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f30_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_669C28E2FCA82769"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoPC = ZMScrArcade --[[ @ 0]]
	f1_local7 = ZMScrArcade.subscribeToModel --[[ @ 0]]
	Rounds = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local7( AmmoPC, Rounds["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_7ADC477DDE486DD7"]], function ( f31_arg0 )
		f1_arg0:updateElementState( ZMScrArcade, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f31_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_7ADC477DDE486DD7"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoPC = ZMScrArcade --[[ @ 0]]
	f1_local7 = ZMScrArcade.subscribeToModel --[[ @ 0]]
	Rounds = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local7( AmmoPC, Rounds["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_523CD9BAB9B9F4C8"]], function ( f32_arg0 )
		f1_arg0:updateElementState( ZMScrArcade, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f32_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_523CD9BAB9B9F4C8"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoPC = ZMScrArcade --[[ @ 0]]
	f1_local7 = ZMScrArcade.subscribeToModel --[[ @ 0]]
	Rounds = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local7( AmmoPC, Rounds["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_68A5E996D4528DA2"]], function ( f33_arg0 )
		f1_arg0:updateElementState( ZMScrArcade, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f33_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_68A5E996D4528DA2"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoPC = ZMScrArcade --[[ @ 0]]
	f1_local7 = ZMScrArcade.subscribeToModel --[[ @ 0]]
	Rounds = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local7( AmmoPC, Rounds["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_47B52A87BC9AA4C7"]], function ( f34_arg0 )
		f1_arg0:updateElementState( ZMScrArcade, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f34_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_47B52A87BC9AA4C7"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoPC = ZMScrArcade --[[ @ 0]]
	f1_local7 = ZMScrArcade.subscribeToModel --[[ @ 0]]
	Rounds = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local7( AmmoPC, Rounds["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_29BF57CE75A8755E"]], function ( f35_arg0 )
		f1_arg0:updateElementState( ZMScrArcade, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f35_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_29BF57CE75A8755E"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoPC = ZMScrArcade --[[ @ 0]]
	f1_local7 = ZMScrArcade.subscribeToModel --[[ @ 0]]
	Rounds = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local7( AmmoPC, Rounds["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_6668F0686232679"]], function ( f36_arg0 )
		f1_arg0:updateElementState( ZMScrArcade, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f36_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_6668F0686232679"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoPC = ZMScrArcade --[[ @ 0]]
	f1_local7 = ZMScrArcade.subscribeToModel --[[ @ 0]]
	Rounds = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local7( AmmoPC, Rounds["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_33AEEAA452536E6E"]], function ( f37_arg0 )
		f1_arg0:updateElementState( ZMScrArcade, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f37_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_33AEEAA452536E6E"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoPC = ZMScrArcade --[[ @ 0]]
	f1_local7 = ZMScrArcade.subscribeToModel --[[ @ 0]]
	Rounds = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local7( AmmoPC, Rounds["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_1D298E43D0B6FEF2"]], function ( f38_arg0 )
		f1_arg0:updateElementState( ZMScrArcade, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f38_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_1D298E43D0B6FEF2"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoPC = ZMScrArcade --[[ @ 0]]
	f1_local7 = ZMScrArcade.subscribeToModel --[[ @ 0]]
	Rounds = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local7( AmmoPC, Rounds["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_624E603C16FCC38F"]], function ( f39_arg0 )
		f1_arg0:updateElementState( ZMScrArcade, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f39_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_624E603C16FCC38F"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoPC = ZMScrArcade --[[ @ 0]]
	f1_local7 = ZMScrArcade.subscribeToModel --[[ @ 0]]
	Rounds = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local7( AmmoPC, Rounds["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"]], function ( f40_arg0 )
		f1_arg0:updateElementState( ZMScrArcade, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f40_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoPC = ZMScrArcade --[[ @ 0]]
	f1_local7 = ZMScrArcade.subscribeToModel --[[ @ 0]]
	Rounds = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local7( AmmoPC, Rounds["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_BB045E46E88E762"]], function ( f41_arg0 )
		f1_arg0:updateElementState( ZMScrArcade, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f41_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_BB045E46E88E762"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ZMScrArcade:setScale( 1.15, 1.15 ) --[[ @ 0]]
	self:addElement( ZMScrArcade ) --[[ @ 0]]
	self.ZMScrArcade = ZMScrArcade --[[ @ 0]]
	
	f1_local7 = nil --[[ @ 0]]
	self.Ammo = LUI.UIElement.createFake() --[[ @ 0]]
	AmmoPC = nil --[[ @ 0]]
	
	AmmoPC = CoD.ZmAmmoContainerFactory.new( f1_arg0, f1_arg1, 1, 1, -621, -111, 1, 1, -489, -141 ) --[[ @ 0]]
	AmmoPC:setAlpha( 0.9 ) --[[ @ 0]]
	AmmoPC:setScale( 0.9, 0.9 ) --[[ @ 0]]
	self:addElement( AmmoPC ) --[[ @ 0]]
	self.AmmoPC = AmmoPC --[[ @ 0]]
	
	Rounds = CoD.ZmRndContainer.new( f1_arg0, f1_arg1, 0, 0, -51, 285, 0, 0, -36, 252 ) --[[ @ 0]]
	Rounds:mergeStateConditions( {
		{
			stateName = "TrialsShow",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		}
	} ) --[[ @ 0]]
	local ZMPerkVaporsContainer = Rounds --[[ @ 0]]
	local AmmoWidgetZMContainer = Rounds.subscribeToModel --[[ @ 0]]
	local Console = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetZMContainer( ZMPerkVaporsContainer, Console["hudItems.playerSpawned"], function ( f43_arg0 )
		f1_arg0:updateElementState( Rounds, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f43_arg0:get(),
			modelName = "hudItems.playerSpawned"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ZMPerkVaporsContainer = Rounds --[[ @ 0]]
	AmmoWidgetZMContainer = Rounds.subscribeToModel --[[ @ 0]]
	Console = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetZMContainer( ZMPerkVaporsContainer, Console["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_4B8E9B69F4B87954"]], function ( f44_arg0 )
		f1_arg0:updateElementState( Rounds, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f44_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_4B8E9B69F4B87954"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ZMPerkVaporsContainer = Rounds --[[ @ 0]]
	AmmoWidgetZMContainer = Rounds.subscribeToModel --[[ @ 0]]
	Console = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetZMContainer( ZMPerkVaporsContainer, Console["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5D3ABF9A2753CE40"]], function ( f45_arg0 )
		f1_arg0:updateElementState( Rounds, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f45_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5D3ABF9A2753CE40"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ZMPerkVaporsContainer = Rounds --[[ @ 0]]
	AmmoWidgetZMContainer = Rounds.subscribeToModel --[[ @ 0]]
	Console = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetZMContainer( ZMPerkVaporsContainer, Console["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_59333FC97F7870"]], function ( f46_arg0 )
		f1_arg0:updateElementState( Rounds, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f46_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_59333FC97F7870"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ZMPerkVaporsContainer = Rounds --[[ @ 0]]
	AmmoWidgetZMContainer = Rounds.subscribeToModel --[[ @ 0]]
	Console = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetZMContainer( ZMPerkVaporsContainer, Console["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_669C28E2FCA82769"]], function ( f47_arg0 )
		f1_arg0:updateElementState( Rounds, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f47_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_669C28E2FCA82769"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ZMPerkVaporsContainer = Rounds --[[ @ 0]]
	AmmoWidgetZMContainer = Rounds.subscribeToModel --[[ @ 0]]
	Console = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetZMContainer( ZMPerkVaporsContainer, Console["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_7ADC477DDE486DD7"]], function ( f48_arg0 )
		f1_arg0:updateElementState( Rounds, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f48_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_7ADC477DDE486DD7"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ZMPerkVaporsContainer = Rounds --[[ @ 0]]
	AmmoWidgetZMContainer = Rounds.subscribeToModel --[[ @ 0]]
	Console = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetZMContainer( ZMPerkVaporsContainer, Console["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_523CD9BAB9B9F4C8"]], function ( f49_arg0 )
		f1_arg0:updateElementState( Rounds, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f49_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_523CD9BAB9B9F4C8"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ZMPerkVaporsContainer = Rounds --[[ @ 0]]
	AmmoWidgetZMContainer = Rounds.subscribeToModel --[[ @ 0]]
	Console = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetZMContainer( ZMPerkVaporsContainer, Console["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_68A5E996D4528DA2"]], function ( f50_arg0 )
		f1_arg0:updateElementState( Rounds, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f50_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_68A5E996D4528DA2"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ZMPerkVaporsContainer = Rounds --[[ @ 0]]
	AmmoWidgetZMContainer = Rounds.subscribeToModel --[[ @ 0]]
	Console = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetZMContainer( ZMPerkVaporsContainer, Console["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_47B52A87BC9AA4C7"]], function ( f51_arg0 )
		f1_arg0:updateElementState( Rounds, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f51_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_47B52A87BC9AA4C7"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ZMPerkVaporsContainer = Rounds --[[ @ 0]]
	AmmoWidgetZMContainer = Rounds.subscribeToModel --[[ @ 0]]
	Console = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetZMContainer( ZMPerkVaporsContainer, Console["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_29BF57CE75A8755E"]], function ( f52_arg0 )
		f1_arg0:updateElementState( Rounds, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f52_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_29BF57CE75A8755E"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ZMPerkVaporsContainer = Rounds --[[ @ 0]]
	AmmoWidgetZMContainer = Rounds.subscribeToModel --[[ @ 0]]
	Console = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetZMContainer( ZMPerkVaporsContainer, Console["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_6668F0686232679"]], function ( f53_arg0 )
		f1_arg0:updateElementState( Rounds, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f53_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_6668F0686232679"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ZMPerkVaporsContainer = Rounds --[[ @ 0]]
	AmmoWidgetZMContainer = Rounds.subscribeToModel --[[ @ 0]]
	Console = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetZMContainer( ZMPerkVaporsContainer, Console["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_33AEEAA452536E6E"]], function ( f54_arg0 )
		f1_arg0:updateElementState( Rounds, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f54_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_33AEEAA452536E6E"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ZMPerkVaporsContainer = Rounds --[[ @ 0]]
	AmmoWidgetZMContainer = Rounds.subscribeToModel --[[ @ 0]]
	Console = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetZMContainer( ZMPerkVaporsContainer, Console["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_1D298E43D0B6FEF2"]], function ( f55_arg0 )
		f1_arg0:updateElementState( Rounds, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f55_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_1D298E43D0B6FEF2"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ZMPerkVaporsContainer = Rounds --[[ @ 0]]
	AmmoWidgetZMContainer = Rounds.subscribeToModel --[[ @ 0]]
	Console = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetZMContainer( ZMPerkVaporsContainer, Console["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_624E603C16FCC38F"]], function ( f56_arg0 )
		f1_arg0:updateElementState( Rounds, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f56_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_624E603C16FCC38F"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ZMPerkVaporsContainer = Rounds --[[ @ 0]]
	AmmoWidgetZMContainer = Rounds.subscribeToModel --[[ @ 0]]
	Console = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetZMContainer( ZMPerkVaporsContainer, Console["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"]], function ( f57_arg0 )
		f1_arg0:updateElementState( Rounds, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f57_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ZMPerkVaporsContainer = Rounds --[[ @ 0]]
	AmmoWidgetZMContainer = Rounds.subscribeToModel --[[ @ 0]]
	Console = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetZMContainer( ZMPerkVaporsContainer, Console["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"]], function ( f58_arg0 )
		f1_arg0:updateElementState( Rounds, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f58_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ZMPerkVaporsContainer = Rounds --[[ @ 0]]
	AmmoWidgetZMContainer = Rounds.subscribeToModel --[[ @ 0]]
	Console = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetZMContainer( ZMPerkVaporsContainer, Console["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_BB045E46E88E762"]], function ( f59_arg0 )
		f1_arg0:updateElementState( Rounds, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f59_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_BB045E46E88E762"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ZMPerkVaporsContainer = Rounds --[[ @ 0]]
	AmmoWidgetZMContainer = Rounds.subscribeToModel --[[ @ 0]]
	Console = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetZMContainer( ZMPerkVaporsContainer, Console["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"]], function ( f60_arg0 )
		f1_arg0:updateElementState( Rounds, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f60_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	Rounds:setScale( 0.8, 0.8 ) --[[ @ 0]]
	self:addElement( Rounds ) --[[ @ 0]]
	self.Rounds = Rounds --[[ @ 0]]
	
	AmmoWidgetZMContainer = CoD.AmmoWidgetZMContainer.new( f1_arg0, f1_arg1, 1, 1, -613, -16, 1, 1, -209, -23 ) --[[ @ 0]]
	self:addElement( AmmoWidgetZMContainer ) --[[ @ 0]]
	self.AmmoWidgetZMContainer = AmmoWidgetZMContainer --[[ @ 0]]
	
	ZMPerkVaporsContainer = CoD.ZMPerkVaporsContainer.new( f1_arg0, f1_arg1, 0.5, 0.5, -250, 250, 1, 1, -184, -34 ) --[[ @ 0]]
	ZMPerkVaporsContainer:setScale( 1.25, 1.25 ) --[[ @ 0]]
	self:addElement( ZMPerkVaporsContainer ) --[[ @ 0]]
	self.ZMPerkVaporsContainer = ZMPerkVaporsContainer --[[ @ 0]]
	
	Console = CoD.Console.new( f1_arg0, f1_arg1, 0, 0, 10, 1030, 1, 1, -417, -267 ) --[[ @ 0]]
	self:addElement( Console ) --[[ @ 0]]
	self.Console = Console --[[ @ 0]]
	
	local IngameChatClientContainer = nil --[[ @ 0]]
	
	IngameChatClientContainer = CoD.IngameChatClientContainer.new( f1_arg0, f1_arg1, 0, 0, 0, 540, 0.25, 0.25, -57, 233 ) --[[ @ 0]]
	self:addElement( IngameChatClientContainer ) --[[ @ 0]]
	self.IngameChatClientContainer = IngameChatClientContainer --[[ @ 0]]
	
	local RiotShieldHealth = CoD.RiotShieldHealth.new( f1_arg0, f1_arg1, 1, 1, -675, -600, 1, 1, -128, -38 ) --[[ @ 0]]
	self:addElement( RiotShieldHealth ) --[[ @ 0]]
	self.RiotShieldHealth = RiotShieldHealth --[[ @ 0]]
	
	local ZMHintTextContainer = CoD.Hud_ZM_HintText.new( f1_arg0, f1_arg1, 0.5, 0.5, -864, 864, 1, 1, -742, -703 ) --[[ @ 0]]
	ZMHintTextContainer:subscribeToGlobalModel( f1_arg1, "PerController", "ZMHintText", function ( model )
		local f61_local0 = model:get() --[[ @ 0]]
		if f61_local0 ~= nil then
			ZMHintTextContainer.ZMHintText:setText( f61_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( ZMHintTextContainer ) --[[ @ 0]]
	self.ZMHintTextContainer = ZMHintTextContainer --[[ @ 0]]
	
	local HudZMTrialsContainer = CoD.Hud_ZM_TrialsContainer.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	self:addElement( HudZMTrialsContainer ) --[[ @ 0]]
	self.HudZMTrialsContainer = HudZMTrialsContainer --[[ @ 0]]
	
	local HudZMRushContainer = CoD.Hud_ZM_RushContainer.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	self:addElement( HudZMRushContainer ) --[[ @ 0]]
	self.HudZMRushContainer = HudZMRushContainer --[[ @ 0]]
	
	local PowerUpsArea = CoD.Hud_ZM_Power_Ups_Area.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	self:addElement( PowerUpsArea ) --[[ @ 0]]
	self.PowerUpsArea = PowerUpsArea --[[ @ 0]]
	
	local GameoverScoreboard = CoD.Rush_Gameover.new( f1_arg0, f1_arg1, 0.5, 0.5, -960, 960, 0.5, 0.5, -540, 540 ) --[[ @ 0]]
	GameoverScoreboard:setScale( 1.25, 1.25 ) --[[ @ 0]]
	self:addElement( GameoverScoreboard ) --[[ @ 0]]
	self.GameoverScoreboard = GameoverScoreboard --[[ @ 0]]
	
	local ZMTutorialCertificate = CoD.ZM_Tutorial_Certificate.new( f1_arg0, f1_arg1, 0.5, 0.5, -960, 960, 0.5, 0.5, -540, 540 ) --[[ @ 0]]
	self:addElement( ZMTutorialCertificate ) --[[ @ 0]]
	self.ZMTutorialCertificate = ZMTutorialCertificate --[[ @ 0]]
	
	local VoipContainer0 = CoD.Voip_Container.new( f1_arg0, f1_arg1, 0, 0, 174, 584, 0, 0, 70, 178 ) --[[ @ 0]]
	VoipContainer0:mergeStateConditions( {
		{
			stateName = "HudStart",
			condition = function ( menu, element, event )
				local f62_local0 = CoD.ModelUtility.IsModelValueTrue( f1_arg1, "hudItems.playerSpawned" ) --[[ @ 0]]
				if f62_local0 then
					if not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_4B8E9B69F4B87954"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_5D3ABF9A2753CE40"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_59333FC97F7870"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_669C28E2FCA82769"] ) and Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_7ADC477DDE486DD7"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_523CD9BAB9B9F4C8"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_68A5E996D4528DA2"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_47B52A87BC9AA4C7"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_29BF57CE75A8755E"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_6668F0686232679"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_33AEEAA452536E6E"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_1D298E43D0B6FEF2"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_624E603C16FCC38F"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) then
						f62_local0 = Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_BB045E46E88E762"] ) --[[ @ 0]]
					else
						f62_local0 = false --[[ @ 0]]
					end
				end
				return f62_local0
			end
		},
		{
			stateName = "ShowForCodCaster",
			condition = function ( menu, element, event )
				local f63_local0 = IsCodCaster( f1_arg1 ) --[[ @ 0]]
				if f63_local0 then
					f63_local0 = IsCodCasterProfileValueEqualTo( f1_arg1, "shoutcaster_ds_voip_dock", 1 ) --[[ @ 0]]
					if f63_local0 then
						f63_local0 = not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"] ) --[[ @ 0]]
					end
				end
				return f63_local0
			end
		}
	} ) --[[ @ 0]]
	local f1_local23 = VoipContainer0 --[[ @ 0]]
	local ZMOrangeHeatPack = VoipContainer0.subscribeToModel --[[ @ 0]]
	local f1_local25 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	ZMOrangeHeatPack( f1_local23, f1_local25["hudItems.playerSpawned"], function ( f64_arg0 )
		f1_arg0:updateElementState( VoipContainer0, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f64_arg0:get(),
			modelName = "hudItems.playerSpawned"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local23 = VoipContainer0 --[[ @ 0]]
	ZMOrangeHeatPack = VoipContainer0.subscribeToModel --[[ @ 0]]
	f1_local25 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	ZMOrangeHeatPack( f1_local23, f1_local25["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_4B8E9B69F4B87954"]], function ( f65_arg0 )
		f1_arg0:updateElementState( VoipContainer0, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f65_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_4B8E9B69F4B87954"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local23 = VoipContainer0 --[[ @ 0]]
	ZMOrangeHeatPack = VoipContainer0.subscribeToModel --[[ @ 0]]
	f1_local25 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	ZMOrangeHeatPack( f1_local23, f1_local25["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5D3ABF9A2753CE40"]], function ( f66_arg0 )
		f1_arg0:updateElementState( VoipContainer0, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f66_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5D3ABF9A2753CE40"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local23 = VoipContainer0 --[[ @ 0]]
	ZMOrangeHeatPack = VoipContainer0.subscribeToModel --[[ @ 0]]
	f1_local25 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	ZMOrangeHeatPack( f1_local23, f1_local25["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_59333FC97F7870"]], function ( f67_arg0 )
		f1_arg0:updateElementState( VoipContainer0, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f67_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_59333FC97F7870"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local23 = VoipContainer0 --[[ @ 0]]
	ZMOrangeHeatPack = VoipContainer0.subscribeToModel --[[ @ 0]]
	f1_local25 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	ZMOrangeHeatPack( f1_local23, f1_local25["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_669C28E2FCA82769"]], function ( f68_arg0 )
		f1_arg0:updateElementState( VoipContainer0, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f68_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_669C28E2FCA82769"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local23 = VoipContainer0 --[[ @ 0]]
	ZMOrangeHeatPack = VoipContainer0.subscribeToModel --[[ @ 0]]
	f1_local25 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	ZMOrangeHeatPack( f1_local23, f1_local25["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_7ADC477DDE486DD7"]], function ( f69_arg0 )
		f1_arg0:updateElementState( VoipContainer0, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f69_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_7ADC477DDE486DD7"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local23 = VoipContainer0 --[[ @ 0]]
	ZMOrangeHeatPack = VoipContainer0.subscribeToModel --[[ @ 0]]
	f1_local25 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	ZMOrangeHeatPack( f1_local23, f1_local25["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_523CD9BAB9B9F4C8"]], function ( f70_arg0 )
		f1_arg0:updateElementState( VoipContainer0, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f70_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_523CD9BAB9B9F4C8"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local23 = VoipContainer0 --[[ @ 0]]
	ZMOrangeHeatPack = VoipContainer0.subscribeToModel --[[ @ 0]]
	f1_local25 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	ZMOrangeHeatPack( f1_local23, f1_local25["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_68A5E996D4528DA2"]], function ( f71_arg0 )
		f1_arg0:updateElementState( VoipContainer0, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f71_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_68A5E996D4528DA2"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local23 = VoipContainer0 --[[ @ 0]]
	ZMOrangeHeatPack = VoipContainer0.subscribeToModel --[[ @ 0]]
	f1_local25 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	ZMOrangeHeatPack( f1_local23, f1_local25["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_47B52A87BC9AA4C7"]], function ( f72_arg0 )
		f1_arg0:updateElementState( VoipContainer0, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f72_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_47B52A87BC9AA4C7"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local23 = VoipContainer0 --[[ @ 0]]
	ZMOrangeHeatPack = VoipContainer0.subscribeToModel --[[ @ 0]]
	f1_local25 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	ZMOrangeHeatPack( f1_local23, f1_local25["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_29BF57CE75A8755E"]], function ( f73_arg0 )
		f1_arg0:updateElementState( VoipContainer0, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f73_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_29BF57CE75A8755E"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local23 = VoipContainer0 --[[ @ 0]]
	ZMOrangeHeatPack = VoipContainer0.subscribeToModel --[[ @ 0]]
	f1_local25 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	ZMOrangeHeatPack( f1_local23, f1_local25["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_6668F0686232679"]], function ( f74_arg0 )
		f1_arg0:updateElementState( VoipContainer0, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f74_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_6668F0686232679"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local23 = VoipContainer0 --[[ @ 0]]
	ZMOrangeHeatPack = VoipContainer0.subscribeToModel --[[ @ 0]]
	f1_local25 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	ZMOrangeHeatPack( f1_local23, f1_local25["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_33AEEAA452536E6E"]], function ( f75_arg0 )
		f1_arg0:updateElementState( VoipContainer0, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f75_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_33AEEAA452536E6E"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local23 = VoipContainer0 --[[ @ 0]]
	ZMOrangeHeatPack = VoipContainer0.subscribeToModel --[[ @ 0]]
	f1_local25 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	ZMOrangeHeatPack( f1_local23, f1_local25["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_1D298E43D0B6FEF2"]], function ( f76_arg0 )
		f1_arg0:updateElementState( VoipContainer0, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f76_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_1D298E43D0B6FEF2"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local23 = VoipContainer0 --[[ @ 0]]
	ZMOrangeHeatPack = VoipContainer0.subscribeToModel --[[ @ 0]]
	f1_local25 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	ZMOrangeHeatPack( f1_local23, f1_local25["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_624E603C16FCC38F"]], function ( f77_arg0 )
		f1_arg0:updateElementState( VoipContainer0, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f77_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_624E603C16FCC38F"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local23 = VoipContainer0 --[[ @ 0]]
	ZMOrangeHeatPack = VoipContainer0.subscribeToModel --[[ @ 0]]
	f1_local25 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	ZMOrangeHeatPack( f1_local23, f1_local25["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"]], function ( f78_arg0 )
		f1_arg0:updateElementState( VoipContainer0, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f78_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local23 = VoipContainer0 --[[ @ 0]]
	ZMOrangeHeatPack = VoipContainer0.subscribeToModel --[[ @ 0]]
	f1_local25 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	ZMOrangeHeatPack( f1_local23, f1_local25["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"]], function ( f79_arg0 )
		f1_arg0:updateElementState( VoipContainer0, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f79_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local23 = VoipContainer0 --[[ @ 0]]
	ZMOrangeHeatPack = VoipContainer0.subscribeToModel --[[ @ 0]]
	f1_local25 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	ZMOrangeHeatPack( f1_local23, f1_local25["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_BB045E46E88E762"]], function ( f80_arg0 )
		f1_arg0:updateElementState( VoipContainer0, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f80_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_BB045E46E88E762"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local23 = VoipContainer0 --[[ @ 0]]
	ZMOrangeHeatPack = VoipContainer0.subscribeToModel --[[ @ 0]]
	f1_local25 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	ZMOrangeHeatPack( f1_local23, f1_local25["factions.isCoDCaster"], function ( f81_arg0 )
		f1_arg0:updateElementState( VoipContainer0, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f81_arg0:get(),
			modelName = "factions.isCoDCaster"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local23 = VoipContainer0 --[[ @ 0]]
	ZMOrangeHeatPack = VoipContainer0.subscribeToModel --[[ @ 0]]
	f1_local25 = DataSources.CodCaster.getModel( f1_arg1 ) --[[ @ 0]]
	ZMOrangeHeatPack( f1_local23, f1_local25.profileSettingsUpdated, function ( f82_arg0 )
		f1_arg0:updateElementState( VoipContainer0, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f82_arg0:get(),
			modelName = "profileSettingsUpdated"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:addElement( VoipContainer0 ) --[[ @ 0]]
	self.VoipContainer0 = VoipContainer0 --[[ @ 0]]
	
	ZMOrangeHeatPack = CoD.ZMOrangeHeatPack.new( f1_arg0, f1_arg1, 0, 0, 1156.5, 1231.5, 0, 0, 946, 1036 ) --[[ @ 0]]
	self:addElement( ZMOrangeHeatPack ) --[[ @ 0]]
	self.ZMOrangeHeatPack = ZMOrangeHeatPack --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Trials_HUDDeactivated",
			condition = function ( menu, element, event )
				local f83_local0 = CoD.HUDUtility.IsAnyGameType( f1_arg1, "ztrials" ) --[[ @ 0]]
				if f83_local0 then
					f83_local0 = CoD.ModelUtility.IsGlobalModelValueEqualTo( "ZMHudGlobal.trials.hudDeactivated", 1 ) --[[ @ 0]]
					if f83_local0 then
						f83_local0 = not CoD.ModelUtility.IsGlobalModelValueTrue( "ZMHudGlobal.trials.infoHidden" ) --[[ @ 0]]
					end
				end
				return f83_local0
			end
		}
	} ) --[[ @ 0]]
	f1_local25 = self --[[ @ 0]]
	f1_local23 = self.subscribeToModel --[[ @ 0]]
	local f1_local26 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local23( f1_local25, f1_local26["ZMHudGlobal.trials.hudDeactivated"], function ( f84_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f84_arg0:get(),
			modelName = "ZMHudGlobal.trials.hudDeactivated"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local25 = self --[[ @ 0]]
	f1_local23 = self.subscribeToModel --[[ @ 0]]
	f1_local26 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local23( f1_local25, f1_local26["ZMHudGlobal.trials.infoHidden"], function ( f85_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f85_arg0:get(),
			modelName = "ZMHudGlobal.trials.infoHidden"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:subscribeToGlobalModel( f1_arg1, "PerController", "scriptNotify", function ( model )
		local f86_local0 = self --[[ @ 0]]
		if CoD.ModelUtility.IsParamModelEqualToHashString( model, @"hash_3AEF0DA8363893B6" ) and not CoD.ModelUtility.IsGlobalModelValueEqualTo( "ZMHudGlobal.trials.hudDeactivated", 1 ) then
			CoD.ZombieUtility.CreateZMDoubleNotification( f1_arg0, self, f1_arg1 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	ScoreInfo.id = "ScoreInfo" --[[ @ 0]]
	PlayerWidget.id = "PlayerWidget" --[[ @ 0]]
	ZMScrArcade.id = "ZMScrArcade" --[[ @ 0]]
	AmmoWidgetZMContainer.id = "AmmoWidgetZMContainer" --[[ @ 0]]
	ZMPerkVaporsContainer.id = "ZMPerkVaporsContainer" --[[ @ 0]]
	if CoD.isPC then
		IngameChatClientContainer.id = "IngameChatClientContainer" --[[ @ 0]]
	end
	PowerUpsArea.id = "PowerUpsArea" --[[ @ 0]]
	GameoverScoreboard.id = "GameoverScoreboard" --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	f1_local23 = self --[[ @ 0]]
	if IsPC() then
		
	else
		
	end
	return self
end
 --[[ @ 0]]
CoD.Hud_ZM_Factory_SafeAreaContainer.__resetProperties = function ( f87_arg0 )
	f87_arg0.HudZMRushContainer:completeAnimation() --[[ @ 0]]
	f87_arg0.ZMHintTextContainer:completeAnimation() --[[ @ 0]]
	f87_arg0.AmmoWidgetZMContainer:completeAnimation() --[[ @ 0]]
	f87_arg0.RiotShieldHealth:completeAnimation() --[[ @ 0]]
	f87_arg0.ZMPerkVaporsContainer:completeAnimation() --[[ @ 0]]
	f87_arg0.Rounds:completeAnimation() --[[ @ 0]]
	f87_arg0.Ammo:completeAnimation() --[[ @ 0]]
	f87_arg0.ZMScrArcade:completeAnimation() --[[ @ 0]]
	f87_arg0.Score:completeAnimation() --[[ @ 0]]
	f87_arg0.PlayerWidget:completeAnimation() --[[ @ 0]]
	f87_arg0.ScoreInfo:completeAnimation() --[[ @ 0]]
	f87_arg0.PowerUpsArea:completeAnimation() --[[ @ 0]]
	f87_arg0.AmmoPC:completeAnimation() --[[ @ 0]]
	f87_arg0.ScorePC:completeAnimation() --[[ @ 0]]
	f87_arg0.Notifications:completeAnimation() --[[ @ 0]]
	f87_arg0.HudZMRushContainer:setAlpha( 1 ) --[[ @ 0]]
	f87_arg0.ZMHintTextContainer:setAlpha( 1 ) --[[ @ 0]]
	f87_arg0.AmmoWidgetZMContainer:setAlpha( 1 ) --[[ @ 0]]
	f87_arg0.RiotShieldHealth:setAlpha( 1 ) --[[ @ 0]]
	f87_arg0.ZMPerkVaporsContainer:setAlpha( 1 ) --[[ @ 0]]
	f87_arg0.Rounds:setAlpha( 1 ) --[[ @ 0]]
	f87_arg0.Ammo:setAlpha( 0.9 ) --[[ @ 0]]
	f87_arg0.ZMScrArcade:setAlpha( 1 ) --[[ @ 0]]
	f87_arg0.Score:setAlpha( 1 ) --[[ @ 0]]
	f87_arg0.PlayerWidget:setAlpha( 1 ) --[[ @ 0]]
	f87_arg0.ScoreInfo:setAlpha( 1 ) --[[ @ 0]]
	f87_arg0.PowerUpsArea:setAlpha( 1 ) --[[ @ 0]]
	f87_arg0.AmmoPC:setAlpha( 0.9 ) --[[ @ 0]]
	f87_arg0.ScorePC:setAlpha( 1 ) --[[ @ 0]]
	f87_arg0.Notifications:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.Hud_ZM_Factory_SafeAreaContainer.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f88_arg0, f88_arg1 )
			f88_arg0:__resetProperties() --[[ @ 0]]
			f88_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end,
		Trials_HUDDeactivated = function ( f89_arg0, f89_arg1 )
			f89_arg0:__resetProperties() --[[ @ 0]]
			f89_arg0:setupElementClipCounter( 10 ) --[[ @ 0]]
			local f89_local0 = function ( f90_arg0 )
				f89_arg0.ScoreInfo:beginAnimation( 3000 ) --[[ @ 0]]
				f89_arg0.ScoreInfo:setAlpha( 0 ) --[[ @ 0]]
				f89_arg0.ScoreInfo:registerEventHandler( "interrupted_keyframe", f89_arg0.clipInterrupted ) --[[ @ 0]]
				f89_arg0.ScoreInfo:registerEventHandler( "transition_complete_keyframe", f89_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f89_arg0.ScoreInfo:completeAnimation() --[[ @ 0]]
			f89_arg0.ScoreInfo:setAlpha( 1 ) --[[ @ 0]]
			f89_local0( f89_arg0.ScoreInfo ) --[[ @ 0]]
			local f89_local1 = function ( f91_arg0 )
				f89_arg0.PlayerWidget:beginAnimation( 3000 ) --[[ @ 0]]
				f89_arg0.PlayerWidget:setAlpha( 0 ) --[[ @ 0]]
				f89_arg0.PlayerWidget:registerEventHandler( "interrupted_keyframe", f89_arg0.clipInterrupted ) --[[ @ 0]]
				f89_arg0.PlayerWidget:registerEventHandler( "transition_complete_keyframe", f89_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f89_arg0.PlayerWidget:completeAnimation() --[[ @ 0]]
			f89_arg0.PlayerWidget:setAlpha( 1 ) --[[ @ 0]]
			f89_local1( f89_arg0.PlayerWidget ) --[[ @ 0]]
			local f89_local2 = function ( f92_arg0 )
				f89_arg0.Score:beginAnimation( 3000 ) --[[ @ 0]]
				f89_arg0.Score:setAlpha( 0 ) --[[ @ 0]]
				f89_arg0.Score:registerEventHandler( "interrupted_keyframe", f89_arg0.clipInterrupted ) --[[ @ 0]]
				f89_arg0.Score:registerEventHandler( "transition_complete_keyframe", f89_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f89_arg0.Score:completeAnimation() --[[ @ 0]]
			f89_arg0.Score:setAlpha( 1 ) --[[ @ 0]]
			f89_local2( f89_arg0.Score ) --[[ @ 0]]
			local f89_local3 = function ( f93_arg0 )
				f89_arg0.ZMScrArcade:beginAnimation( 3000 ) --[[ @ 0]]
				f89_arg0.ZMScrArcade:setAlpha( 0 ) --[[ @ 0]]
				f89_arg0.ZMScrArcade:registerEventHandler( "interrupted_keyframe", f89_arg0.clipInterrupted ) --[[ @ 0]]
				f89_arg0.ZMScrArcade:registerEventHandler( "transition_complete_keyframe", f89_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f89_arg0.ZMScrArcade:completeAnimation() --[[ @ 0]]
			f89_arg0.ZMScrArcade:setAlpha( 1 ) --[[ @ 0]]
			f89_local3( f89_arg0.ZMScrArcade ) --[[ @ 0]]
			local f89_local4 = function ( f94_arg0 )
				f89_arg0.Ammo:beginAnimation( 3000 ) --[[ @ 0]]
				f89_arg0.Ammo:setAlpha( 0 ) --[[ @ 0]]
				f89_arg0.Ammo:registerEventHandler( "interrupted_keyframe", f89_arg0.clipInterrupted ) --[[ @ 0]]
				f89_arg0.Ammo:registerEventHandler( "transition_complete_keyframe", f89_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f89_arg0.Ammo:completeAnimation() --[[ @ 0]]
			f89_arg0.Ammo:setAlpha( 1 ) --[[ @ 0]]
			f89_local4( f89_arg0.Ammo ) --[[ @ 0]]
			local f89_local5 = function ( f95_arg0 )
				f89_arg0.Rounds:beginAnimation( 3000 ) --[[ @ 0]]
				f89_arg0.Rounds:setAlpha( 0 ) --[[ @ 0]]
				f89_arg0.Rounds:registerEventHandler( "interrupted_keyframe", f89_arg0.clipInterrupted ) --[[ @ 0]]
				f89_arg0.Rounds:registerEventHandler( "transition_complete_keyframe", f89_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f89_arg0.Rounds:completeAnimation() --[[ @ 0]]
			f89_arg0.Rounds:setAlpha( 1 ) --[[ @ 0]]
			f89_local5( f89_arg0.Rounds ) --[[ @ 0]]
			local f89_local6 = function ( f96_arg0 )
				f89_arg0.AmmoWidgetZMContainer:beginAnimation( 3000 ) --[[ @ 0]]
				f89_arg0.AmmoWidgetZMContainer:setAlpha( 0 ) --[[ @ 0]]
				f89_arg0.AmmoWidgetZMContainer:registerEventHandler( "interrupted_keyframe", f89_arg0.clipInterrupted ) --[[ @ 0]]
				f89_arg0.AmmoWidgetZMContainer:registerEventHandler( "transition_complete_keyframe", f89_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f89_arg0.AmmoWidgetZMContainer:completeAnimation() --[[ @ 0]]
			f89_arg0.AmmoWidgetZMContainer:setAlpha( 1 ) --[[ @ 0]]
			f89_local6( f89_arg0.AmmoWidgetZMContainer ) --[[ @ 0]]
			local f89_local7 = function ( f97_arg0 )
				f89_arg0.ZMPerkVaporsContainer:beginAnimation( 3000 ) --[[ @ 0]]
				f89_arg0.ZMPerkVaporsContainer:setAlpha( 0 ) --[[ @ 0]]
				f89_arg0.ZMPerkVaporsContainer:registerEventHandler( "interrupted_keyframe", f89_arg0.clipInterrupted ) --[[ @ 0]]
				f89_arg0.ZMPerkVaporsContainer:registerEventHandler( "transition_complete_keyframe", f89_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f89_arg0.ZMPerkVaporsContainer:completeAnimation() --[[ @ 0]]
			f89_arg0.ZMPerkVaporsContainer:setAlpha( 1 ) --[[ @ 0]]
			f89_local7( f89_arg0.ZMPerkVaporsContainer ) --[[ @ 0]]
			local f89_local8 = function ( f98_arg0 )
				f89_arg0.RiotShieldHealth:beginAnimation( 3000 ) --[[ @ 0]]
				f89_arg0.RiotShieldHealth:setAlpha( 0 ) --[[ @ 0]]
				f89_arg0.RiotShieldHealth:registerEventHandler( "interrupted_keyframe", f89_arg0.clipInterrupted ) --[[ @ 0]]
				f89_arg0.RiotShieldHealth:registerEventHandler( "transition_complete_keyframe", f89_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f89_arg0.RiotShieldHealth:completeAnimation() --[[ @ 0]]
			f89_arg0.RiotShieldHealth:setAlpha( 1 ) --[[ @ 0]]
			f89_local8( f89_arg0.RiotShieldHealth ) --[[ @ 0]]
			local f89_local9 = function ( f99_arg0 )
				f89_arg0.ZMHintTextContainer:beginAnimation( 3000 ) --[[ @ 0]]
				f89_arg0.ZMHintTextContainer:setAlpha( 0 ) --[[ @ 0]]
				f89_arg0.ZMHintTextContainer:registerEventHandler( "interrupted_keyframe", f89_arg0.clipInterrupted ) --[[ @ 0]]
				f89_arg0.ZMHintTextContainer:registerEventHandler( "transition_complete_keyframe", f89_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f89_arg0.ZMHintTextContainer:completeAnimation() --[[ @ 0]]
			f89_arg0.ZMHintTextContainer:setAlpha( 1 ) --[[ @ 0]]
			f89_local9( f89_arg0.ZMHintTextContainer ) --[[ @ 0]]
			local f89_local10 = function ( f100_arg0 )
				f89_arg0.HudZMRushContainer:beginAnimation( 3000 ) --[[ @ 0]]
				f89_arg0.HudZMRushContainer:setAlpha( 0 ) --[[ @ 0]]
				f89_arg0.HudZMRushContainer:registerEventHandler( "interrupted_keyframe", f89_arg0.clipInterrupted ) --[[ @ 0]]
				f89_arg0.HudZMRushContainer:registerEventHandler( "transition_complete_keyframe", f89_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f89_arg0.HudZMRushContainer:completeAnimation() --[[ @ 0]]
			f89_arg0.HudZMRushContainer:setAlpha( 1 ) --[[ @ 0]]
			f89_local10( f89_arg0.HudZMRushContainer ) --[[ @ 0]]
			local f89_local11 = function ( f101_arg0 )
				f89_arg0.PowerUpsArea:beginAnimation( 3000 ) --[[ @ 0]]
				f89_arg0.PowerUpsArea:setAlpha( 0 ) --[[ @ 0]]
				f89_arg0.PowerUpsArea:registerEventHandler( "interrupted_keyframe", f89_arg0.clipInterrupted ) --[[ @ 0]]
				f89_arg0.PowerUpsArea:registerEventHandler( "transition_complete_keyframe", f89_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f89_arg0.PowerUpsArea:completeAnimation() --[[ @ 0]]
			f89_arg0.PowerUpsArea:setAlpha( 1 ) --[[ @ 0]]
			f89_local11( f89_arg0.PowerUpsArea ) --[[ @ 0]]
		end
	},
	Trials_HUDDeactivated = {
		DefaultClip = function ( f102_arg0, f102_arg1 )
			f102_arg0:__resetProperties() --[[ @ 0]]
			f102_arg0:setupElementClipCounter( 12 ) --[[ @ 0]]
			f102_arg0.ScoreInfo:completeAnimation() --[[ @ 0]]
			f102_arg0.ScoreInfo:setAlpha( 0 ) --[[ @ 0]]
			f102_arg0.clipFinished( f102_arg0.ScoreInfo ) --[[ @ 0]]
			f102_arg0.PlayerWidget:completeAnimation() --[[ @ 0]]
			f102_arg0.PlayerWidget:setAlpha( 0 ) --[[ @ 0]]
			f102_arg0.clipFinished( f102_arg0.PlayerWidget ) --[[ @ 0]]
			f102_arg0.Score:completeAnimation() --[[ @ 0]]
			f102_arg0.Score:setAlpha( 0 ) --[[ @ 0]]
			f102_arg0.clipFinished( f102_arg0.Score ) --[[ @ 0]]
			f102_arg0.ScorePC:completeAnimation() --[[ @ 0]]
			f102_arg0.ScorePC:setAlpha( 0 ) --[[ @ 0]]
			f102_arg0.clipFinished( f102_arg0.ScorePC ) --[[ @ 0]]
			f102_arg0.ZMScrArcade:completeAnimation() --[[ @ 0]]
			f102_arg0.ZMScrArcade:setAlpha( 0 ) --[[ @ 0]]
			f102_arg0.clipFinished( f102_arg0.ZMScrArcade ) --[[ @ 0]]
			f102_arg0.Ammo:completeAnimation() --[[ @ 0]]
			f102_arg0.Ammo:setAlpha( 0 ) --[[ @ 0]]
			f102_arg0.clipFinished( f102_arg0.Ammo ) --[[ @ 0]]
			f102_arg0.AmmoPC:completeAnimation() --[[ @ 0]]
			f102_arg0.AmmoPC:setAlpha( 0 ) --[[ @ 0]]
			f102_arg0.clipFinished( f102_arg0.AmmoPC ) --[[ @ 0]]
			f102_arg0.Rounds:completeAnimation() --[[ @ 0]]
			f102_arg0.Rounds:setAlpha( 0 ) --[[ @ 0]]
			f102_arg0.clipFinished( f102_arg0.Rounds ) --[[ @ 0]]
			f102_arg0.AmmoWidgetZMContainer:completeAnimation() --[[ @ 0]]
			f102_arg0.AmmoWidgetZMContainer:setAlpha( 0 ) --[[ @ 0]]
			f102_arg0.clipFinished( f102_arg0.AmmoWidgetZMContainer ) --[[ @ 0]]
			f102_arg0.ZMPerkVaporsContainer:completeAnimation() --[[ @ 0]]
			f102_arg0.ZMPerkVaporsContainer:setAlpha( 0 ) --[[ @ 0]]
			f102_arg0.clipFinished( f102_arg0.ZMPerkVaporsContainer ) --[[ @ 0]]
			f102_arg0.RiotShieldHealth:completeAnimation() --[[ @ 0]]
			f102_arg0.RiotShieldHealth:setAlpha( 0 ) --[[ @ 0]]
			f102_arg0.clipFinished( f102_arg0.RiotShieldHealth ) --[[ @ 0]]
			f102_arg0.ZMHintTextContainer:completeAnimation() --[[ @ 0]]
			f102_arg0.ZMHintTextContainer:setAlpha( 0 ) --[[ @ 0]]
			f102_arg0.clipFinished( f102_arg0.ZMHintTextContainer ) --[[ @ 0]]
			f102_arg0.HudZMRushContainer:completeAnimation() --[[ @ 0]]
			f102_arg0.HudZMRushContainer:setAlpha( 0 ) --[[ @ 0]]
			f102_arg0.clipFinished( f102_arg0.HudZMRushContainer ) --[[ @ 0]]
			f102_arg0.PowerUpsArea:completeAnimation() --[[ @ 0]]
			f102_arg0.PowerUpsArea:setAlpha( 0 ) --[[ @ 0]]
			f102_arg0.clipFinished( f102_arg0.PowerUpsArea ) --[[ @ 0]]
		end,
		DefaultState = function ( f103_arg0, f103_arg1 )
			f103_arg0:__resetProperties() --[[ @ 0]]
			f103_arg0:setupElementClipCounter( 11 ) --[[ @ 0]]
			local f103_local0 = function ( f104_arg0 )
				f103_arg0.ScoreInfo:beginAnimation( 1000 ) --[[ @ 0]]
				f103_arg0.ScoreInfo:setAlpha( 1 ) --[[ @ 0]]
				f103_arg0.ScoreInfo:registerEventHandler( "interrupted_keyframe", f103_arg0.clipInterrupted ) --[[ @ 0]]
				f103_arg0.ScoreInfo:registerEventHandler( "transition_complete_keyframe", f103_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f103_arg0.ScoreInfo:completeAnimation() --[[ @ 0]]
			f103_arg0.ScoreInfo:setAlpha( 0 ) --[[ @ 0]]
			f103_local0( f103_arg0.ScoreInfo ) --[[ @ 0]]
			local f103_local1 = function ( f105_arg0 )
				f103_arg0.Notifications:beginAnimation( 1000 ) --[[ @ 0]]
				f103_arg0.Notifications:setAlpha( 1 ) --[[ @ 0]]
				f103_arg0.Notifications:registerEventHandler( "interrupted_keyframe", f103_arg0.clipInterrupted ) --[[ @ 0]]
				f103_arg0.Notifications:registerEventHandler( "transition_complete_keyframe", f103_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f103_arg0.Notifications:completeAnimation() --[[ @ 0]]
			f103_arg0.Notifications:setAlpha( 0 ) --[[ @ 0]]
			f103_local1( f103_arg0.Notifications ) --[[ @ 0]]
			local f103_local2 = function ( f106_arg0 )
				f103_arg0.PlayerWidget:beginAnimation( 1000 ) --[[ @ 0]]
				f103_arg0.PlayerWidget:setAlpha( 1 ) --[[ @ 0]]
				f103_arg0.PlayerWidget:registerEventHandler( "interrupted_keyframe", f103_arg0.clipInterrupted ) --[[ @ 0]]
				f103_arg0.PlayerWidget:registerEventHandler( "transition_complete_keyframe", f103_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f103_arg0.PlayerWidget:completeAnimation() --[[ @ 0]]
			f103_arg0.PlayerWidget:setAlpha( 0 ) --[[ @ 0]]
			f103_local2( f103_arg0.PlayerWidget ) --[[ @ 0]]
			local f103_local3 = function ( f107_arg0 )
				f103_arg0.Score:beginAnimation( 1000 ) --[[ @ 0]]
				f103_arg0.Score:setAlpha( 1 ) --[[ @ 0]]
				f103_arg0.Score:registerEventHandler( "interrupted_keyframe", f103_arg0.clipInterrupted ) --[[ @ 0]]
				f103_arg0.Score:registerEventHandler( "transition_complete_keyframe", f103_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f103_arg0.Score:completeAnimation() --[[ @ 0]]
			f103_arg0.Score:setAlpha( 0 ) --[[ @ 0]]
			f103_local3( f103_arg0.Score ) --[[ @ 0]]
			local f103_local4 = function ( f108_arg0 )
				f103_arg0.ZMScrArcade:beginAnimation( 1000 ) --[[ @ 0]]
				f103_arg0.ZMScrArcade:setAlpha( 1 ) --[[ @ 0]]
				f103_arg0.ZMScrArcade:registerEventHandler( "interrupted_keyframe", f103_arg0.clipInterrupted ) --[[ @ 0]]
				f103_arg0.ZMScrArcade:registerEventHandler( "transition_complete_keyframe", f103_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f103_arg0.ZMScrArcade:completeAnimation() --[[ @ 0]]
			f103_arg0.ZMScrArcade:setAlpha( 0 ) --[[ @ 0]]
			f103_local4( f103_arg0.ZMScrArcade ) --[[ @ 0]]
			local f103_local5 = function ( f109_arg0 )
				f103_arg0.Ammo:beginAnimation( 1000 ) --[[ @ 0]]
				f103_arg0.Ammo:setAlpha( 1 ) --[[ @ 0]]
				f103_arg0.Ammo:registerEventHandler( "interrupted_keyframe", f103_arg0.clipInterrupted ) --[[ @ 0]]
				f103_arg0.Ammo:registerEventHandler( "transition_complete_keyframe", f103_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f103_arg0.Ammo:completeAnimation() --[[ @ 0]]
			f103_arg0.Ammo:setAlpha( 0 ) --[[ @ 0]]
			f103_local5( f103_arg0.Ammo ) --[[ @ 0]]
			local f103_local6 = function ( f110_arg0 )
				f103_arg0.Rounds:beginAnimation( 1000 ) --[[ @ 0]]
				f103_arg0.Rounds:setAlpha( 1 ) --[[ @ 0]]
				f103_arg0.Rounds:registerEventHandler( "interrupted_keyframe", f103_arg0.clipInterrupted ) --[[ @ 0]]
				f103_arg0.Rounds:registerEventHandler( "transition_complete_keyframe", f103_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f103_arg0.Rounds:completeAnimation() --[[ @ 0]]
			f103_arg0.Rounds:setAlpha( 0 ) --[[ @ 0]]
			f103_local6( f103_arg0.Rounds ) --[[ @ 0]]
			local f103_local7 = function ( f111_arg0 )
				f103_arg0.AmmoWidgetZMContainer:beginAnimation( 1000 ) --[[ @ 0]]
				f103_arg0.AmmoWidgetZMContainer:setAlpha( 1 ) --[[ @ 0]]
				f103_arg0.AmmoWidgetZMContainer:registerEventHandler( "interrupted_keyframe", f103_arg0.clipInterrupted ) --[[ @ 0]]
				f103_arg0.AmmoWidgetZMContainer:registerEventHandler( "transition_complete_keyframe", f103_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f103_arg0.AmmoWidgetZMContainer:completeAnimation() --[[ @ 0]]
			f103_arg0.AmmoWidgetZMContainer:setAlpha( 0 ) --[[ @ 0]]
			f103_local7( f103_arg0.AmmoWidgetZMContainer ) --[[ @ 0]]
			local f103_local8 = function ( f112_arg0 )
				f103_arg0.ZMPerkVaporsContainer:beginAnimation( 1000 ) --[[ @ 0]]
				f103_arg0.ZMPerkVaporsContainer:setAlpha( 1 ) --[[ @ 0]]
				f103_arg0.ZMPerkVaporsContainer:registerEventHandler( "interrupted_keyframe", f103_arg0.clipInterrupted ) --[[ @ 0]]
				f103_arg0.ZMPerkVaporsContainer:registerEventHandler( "transition_complete_keyframe", f103_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f103_arg0.ZMPerkVaporsContainer:completeAnimation() --[[ @ 0]]
			f103_arg0.ZMPerkVaporsContainer:setAlpha( 0 ) --[[ @ 0]]
			f103_local8( f103_arg0.ZMPerkVaporsContainer ) --[[ @ 0]]
			local f103_local9 = function ( f113_arg0 )
				f103_arg0.RiotShieldHealth:beginAnimation( 1000 ) --[[ @ 0]]
				f103_arg0.RiotShieldHealth:setAlpha( 1 ) --[[ @ 0]]
				f103_arg0.RiotShieldHealth:registerEventHandler( "interrupted_keyframe", f103_arg0.clipInterrupted ) --[[ @ 0]]
				f103_arg0.RiotShieldHealth:registerEventHandler( "transition_complete_keyframe", f103_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f103_arg0.RiotShieldHealth:completeAnimation() --[[ @ 0]]
			f103_arg0.RiotShieldHealth:setAlpha( 0 ) --[[ @ 0]]
			f103_local9( f103_arg0.RiotShieldHealth ) --[[ @ 0]]
			local f103_local10 = function ( f114_arg0 )
				f103_arg0.ZMHintTextContainer:beginAnimation( 1000 ) --[[ @ 0]]
				f103_arg0.ZMHintTextContainer:setAlpha( 1 ) --[[ @ 0]]
				f103_arg0.ZMHintTextContainer:registerEventHandler( "interrupted_keyframe", f103_arg0.clipInterrupted ) --[[ @ 0]]
				f103_arg0.ZMHintTextContainer:registerEventHandler( "transition_complete_keyframe", f103_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f103_arg0.ZMHintTextContainer:completeAnimation() --[[ @ 0]]
			f103_arg0.ZMHintTextContainer:setAlpha( 0 ) --[[ @ 0]]
			f103_local10( f103_arg0.ZMHintTextContainer ) --[[ @ 0]]
			local f103_local11 = function ( f115_arg0 )
				f103_arg0.HudZMRushContainer:beginAnimation( 1000 ) --[[ @ 0]]
				f103_arg0.HudZMRushContainer:setAlpha( 1 ) --[[ @ 0]]
				f103_arg0.HudZMRushContainer:registerEventHandler( "interrupted_keyframe", f103_arg0.clipInterrupted ) --[[ @ 0]]
				f103_arg0.HudZMRushContainer:registerEventHandler( "transition_complete_keyframe", f103_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f103_arg0.HudZMRushContainer:completeAnimation() --[[ @ 0]]
			f103_arg0.HudZMRushContainer:setAlpha( 0 ) --[[ @ 0]]
			f103_local11( f103_arg0.HudZMRushContainer ) --[[ @ 0]]
			local f103_local12 = function ( f116_arg0 )
				f103_arg0.PowerUpsArea:beginAnimation( 1000 ) --[[ @ 0]]
				f103_arg0.PowerUpsArea:setAlpha( 1 ) --[[ @ 0]]
				f103_arg0.PowerUpsArea:registerEventHandler( "interrupted_keyframe", f103_arg0.clipInterrupted ) --[[ @ 0]]
				f103_arg0.PowerUpsArea:registerEventHandler( "transition_complete_keyframe", f103_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f103_arg0.PowerUpsArea:completeAnimation() --[[ @ 0]]
			f103_arg0.PowerUpsArea:setAlpha( 0 ) --[[ @ 0]]
			f103_local12( f103_arg0.PowerUpsArea ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.Hud_ZM_Factory_SafeAreaContainer.__onClose = function ( f117_arg0 )
	f117_arg0.ScoreInfo:close() --[[ @ 0]]
	f117_arg0.ZmNotifBGBContainerFactory:close() --[[ @ 0]]
	f117_arg0.Notifications:close() --[[ @ 0]]
	f117_arg0.PlayerWidget:close() --[[ @ 0]]
	f117_arg0.Score:close() --[[ @ 0]]
	f117_arg0.ScorePC:close() --[[ @ 0]]
	f117_arg0.ZMScrArcade:close() --[[ @ 0]]
	f117_arg0.Ammo:close() --[[ @ 0]]
	f117_arg0.AmmoPC:close() --[[ @ 0]]
	f117_arg0.Rounds:close() --[[ @ 0]]
	f117_arg0.AmmoWidgetZMContainer:close() --[[ @ 0]]
	f117_arg0.ZMPerkVaporsContainer:close() --[[ @ 0]]
	f117_arg0.Console:close() --[[ @ 0]]
	f117_arg0.IngameChatClientContainer:close() --[[ @ 0]]
	f117_arg0.RiotShieldHealth:close() --[[ @ 0]]
	f117_arg0.ZMHintTextContainer:close() --[[ @ 0]]
	f117_arg0.HudZMTrialsContainer:close() --[[ @ 0]]
	f117_arg0.HudZMRushContainer:close() --[[ @ 0]]
	f117_arg0.PowerUpsArea:close() --[[ @ 0]]
	f117_arg0.GameoverScoreboard:close() --[[ @ 0]]
	f117_arg0.ZMTutorialCertificate:close() --[[ @ 0]]
	f117_arg0.VoipContainer0:close() --[[ @ 0]]
	f117_arg0.ZMOrangeHeatPack:close() --[[ @ 0]]
end
 --[[ @ 0]]
