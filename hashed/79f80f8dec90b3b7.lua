-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:50
require( "x64:71f846296f1a1b81" ) --[[ @ 0]]

CoD.PurchaseReservesItemButton = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.PurchaseReservesItemButton.__defaultWidth = 460 --[[ @ 0]]
CoD.PurchaseReservesItemButton.__defaultHeight = 60 --[[ @ 0]]
CoD.PurchaseReservesItemButton.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.PurchaseReservesItemButton ) --[[ @ 0]]
	self.id = "PurchaseReservesItemButton" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local DirectorSelectButtonMiniInternal = CoD.DirectorSelectButtonMiniInternal.new( f1_arg0, f1_arg1, 0.01, 1.01, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	DirectorSelectButtonMiniInternal:mergeStateConditions( {
		{
			stateName = "Disabled",
			condition = function ( menu, element, event )
				return not CoD.ModelUtility.IsSelfModelValueNilOrTrue( element, f1_arg1, "canPurchase" )
			end
		}
	} ) --[[ @ 0]]
	DirectorSelectButtonMiniInternal:linkToElementModel( DirectorSelectButtonMiniInternal, "canPurchase", true, function ( model )
		f1_arg0:updateElementState( DirectorSelectButtonMiniInternal, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "canPurchase"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	DirectorSelectButtonMiniInternal.LeaderActivityText:setText( "" ) --[[ @ 0]]
	DirectorSelectButtonMiniInternal.MiddleText:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	DirectorSelectButtonMiniInternal.MiddleTextFocus:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	DirectorSelectButtonMiniInternal:linkToElementModel( self, nil, false, function ( model )
		DirectorSelectButtonMiniInternal:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	DirectorSelectButtonMiniInternal:linkToElementModel( self, "displayText", true, function ( model )
		local f5_local0 = model:get() --[[ @ 0]]
		if f5_local0 ~= nil then
			DirectorSelectButtonMiniInternal.MiddleText:setText( ToUpper( f5_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	DirectorSelectButtonMiniInternal:linkToElementModel( self, "displayText", true, function ( model )
		local f6_local0 = model:get() --[[ @ 0]]
		if f6_local0 ~= nil then
			DirectorSelectButtonMiniInternal.MiddleTextFocus:setText( ToUpper( f6_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( DirectorSelectButtonMiniInternal ) --[[ @ 0]]
	self.DirectorSelectButtonMiniInternal = DirectorSelectButtonMiniInternal --[[ @ 0]]
	
	DirectorSelectButtonMiniInternal.id = "DirectorSelectButtonMiniInternal" --[[ @ 0]]
	self.__defaultFocus = DirectorSelectButtonMiniInternal --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.PurchaseReservesItemButton.__resetProperties = function ( f7_arg0 )
	f7_arg0.DirectorSelectButtonMiniInternal:completeAnimation() --[[ @ 0]]
	f7_arg0.DirectorSelectButtonMiniInternal:setAlpha( 1 ) --[[ @ 0]]
	f7_arg0.DirectorSelectButtonMiniInternal:setScale( 1, 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.PurchaseReservesItemButton.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f8_arg0, f8_arg1 )
			f8_arg0:__resetProperties() --[[ @ 0]]
			f8_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end,
		ChildFocus = function ( f9_arg0, f9_arg1 )
			f9_arg0:__resetProperties() --[[ @ 0]]
			f9_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f9_arg0.DirectorSelectButtonMiniInternal:completeAnimation() --[[ @ 0]]
			f9_arg0.DirectorSelectButtonMiniInternal:setScale( 1.04, 1.04 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.DirectorSelectButtonMiniInternal ) --[[ @ 0]]
		end,
		GainChildFocus = function ( f10_arg0, f10_arg1 )
			f10_arg0:__resetProperties() --[[ @ 0]]
			f10_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f10_local0 = function ( f11_arg0 )
				f10_arg0.DirectorSelectButtonMiniInternal:beginAnimation( 200 ) --[[ @ 0]]
				f10_arg0.DirectorSelectButtonMiniInternal:setScale( 1.04, 1.04 ) --[[ @ 0]]
				f10_arg0.DirectorSelectButtonMiniInternal:registerEventHandler( "interrupted_keyframe", f10_arg0.clipInterrupted ) --[[ @ 0]]
				f10_arg0.DirectorSelectButtonMiniInternal:registerEventHandler( "transition_complete_keyframe", f10_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f10_arg0.DirectorSelectButtonMiniInternal:completeAnimation() --[[ @ 0]]
			f10_arg0.DirectorSelectButtonMiniInternal:setScale( 1, 1 ) --[[ @ 0]]
			f10_local0( f10_arg0.DirectorSelectButtonMiniInternal ) --[[ @ 0]]
		end,
		LoseChildFocus = function ( f12_arg0, f12_arg1 )
			f12_arg0:__resetProperties() --[[ @ 0]]
			f12_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f12_local0 = function ( f13_arg0 )
				f12_arg0.DirectorSelectButtonMiniInternal:beginAnimation( 200 ) --[[ @ 0]]
				f12_arg0.DirectorSelectButtonMiniInternal:setScale( 1, 1 ) --[[ @ 0]]
				f12_arg0.DirectorSelectButtonMiniInternal:registerEventHandler( "interrupted_keyframe", f12_arg0.clipInterrupted ) --[[ @ 0]]
				f12_arg0.DirectorSelectButtonMiniInternal:registerEventHandler( "transition_complete_keyframe", f12_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f12_arg0.DirectorSelectButtonMiniInternal:completeAnimation() --[[ @ 0]]
			f12_arg0.DirectorSelectButtonMiniInternal:setScale( 1.04, 1.04 ) --[[ @ 0]]
			f12_local0( f12_arg0.DirectorSelectButtonMiniInternal ) --[[ @ 0]]
		end
	},
	Hidden = {
		DefaultClip = function ( f14_arg0, f14_arg1 )
			f14_arg0:__resetProperties() --[[ @ 0]]
			f14_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f14_arg0.DirectorSelectButtonMiniInternal:completeAnimation() --[[ @ 0]]
			f14_arg0.DirectorSelectButtonMiniInternal:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.DirectorSelectButtonMiniInternal ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.PurchaseReservesItemButton.__onClose = function ( f15_arg0 )
	f15_arg0.DirectorSelectButtonMiniInternal:close() --[[ @ 0]]
end
 --[[ @ 0]]
