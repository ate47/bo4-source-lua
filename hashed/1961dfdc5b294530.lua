-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:33
CoD.CodCasterPlayerListRowHighlight = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.CodCasterPlayerListRowHighlight.__defaultWidth = 404 --[[ @ 0]]
CoD.CodCasterPlayerListRowHighlight.__defaultHeight = 16 --[[ @ 0]]
CoD.CodCasterPlayerListRowHighlight.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.CodCasterPlayerListRowHighlight ) --[[ @ 0]]
	self.id = "CodCasterPlayerListRowHighlight" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local alliesbg = LUI.UIImage.new( 0.5, 0.5, -202, 202, 0, 0, 0, 16 ) --[[ @ 0]]
	alliesbg:setImage( RegisterImage( @"hash_BD8D43404DC456" ) ) --[[ @ 0]]
	alliesbg:subscribeToGlobalModel( f1_arg1, "Factions", "alliesFactionColor", function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			alliesbg:setRGB( f2_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( alliesbg ) --[[ @ 0]]
	self.alliesbg = alliesbg --[[ @ 0]]
	
	local axisbg = LUI.UIImage.new( 0.5, 0.5, -202, 202, 0, 0, 0, 16 ) --[[ @ 0]]
	axisbg:setImage( RegisterImage( @"hash_BD8D43404DC456" ) ) --[[ @ 0]]
	axisbg:subscribeToGlobalModel( f1_arg1, "Factions", "axisFactionColor", function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			axisbg:setRGB( f3_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( axisbg ) --[[ @ 0]]
	self.axisbg = axisbg --[[ @ 0]]
	
	local freebg = LUI.UIImage.new( 0.5, 0.5, -202, 202, 0, 0, 0, 16 ) --[[ @ 0]]
	freebg:setImage( RegisterImage( @"hash_BD8D43404DC456" ) ) --[[ @ 0]]
	self:addElement( freebg ) --[[ @ 0]]
	self.freebg = freebg --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Allies",
			condition = function ( menu, element, event )
				local f4_local0 = CoD.ModelUtility.IsSelfModelValueEqualToEnum( element, f1_arg1, "team", Enum[@"team_t"][@"hash_42A34B055ADD98AB"] ) --[[ @ 0]]
				if f4_local0 then
					f4_local0 = IsGametypeTeambased() --[[ @ 0]]
					if f4_local0 then
						f4_local0 = CoD.ModelUtility.IsSelfModelValueGreaterThan( element, f1_arg1, "health.healthValue", 0 ) --[[ @ 0]]
					end
				end
				return f4_local0
			end
		},
		{
			stateName = "Axis",
			condition = function ( menu, element, event )
				local f5_local0 = CoD.ModelUtility.IsSelfModelValueEqualToEnum( element, f1_arg1, "team", Enum[@"team_t"][@"hash_33F83D7CE4BD7B68"] ) --[[ @ 0]]
				if f5_local0 then
					f5_local0 = IsGametypeTeambased() --[[ @ 0]]
					if f5_local0 then
						f5_local0 = CoD.ModelUtility.IsSelfModelValueGreaterThan( element, f1_arg1, "health.healthValue", 0 ) --[[ @ 0]]
					end
				end
				return f5_local0
			end
		},
		{
			stateName = "Free",
			condition = function ( menu, element, event )
				return true
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "team", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "team"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:linkToElementModel( self, "health.healthValue", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "health.healthValue"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.CodCasterPlayerListRowHighlight.__resetProperties = function ( f9_arg0 )
	f9_arg0.freebg:completeAnimation() --[[ @ 0]]
	f9_arg0.axisbg:completeAnimation() --[[ @ 0]]
	f9_arg0.alliesbg:completeAnimation() --[[ @ 0]]
	f9_arg0.freebg:setRGB( 1, 1, 1 ) --[[ @ 0]]
	f9_arg0.freebg:setAlpha( 1 ) --[[ @ 0]]
	f9_arg0.axisbg:setAlpha( 1 ) --[[ @ 0]]
	f9_arg0.alliesbg:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.CodCasterPlayerListRowHighlight.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f10_arg0, f10_arg1 )
			f10_arg0:__resetProperties() --[[ @ 0]]
			f10_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	Allies = {
		DefaultClip = function ( f11_arg0, f11_arg1 )
			f11_arg0:__resetProperties() --[[ @ 0]]
			f11_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f11_arg0.axisbg:completeAnimation() --[[ @ 0]]
			f11_arg0.axisbg:setAlpha( 0 ) --[[ @ 0]]
			f11_arg0.clipFinished( f11_arg0.axisbg ) --[[ @ 0]]
			f11_arg0.freebg:completeAnimation() --[[ @ 0]]
			f11_arg0.freebg:setAlpha( 0 ) --[[ @ 0]]
			f11_arg0.clipFinished( f11_arg0.freebg ) --[[ @ 0]]
		end
	},
	Axis = {
		DefaultClip = function ( f12_arg0, f12_arg1 )
			f12_arg0:__resetProperties() --[[ @ 0]]
			f12_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f12_arg0.alliesbg:completeAnimation() --[[ @ 0]]
			f12_arg0.alliesbg:setAlpha( 0 ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.alliesbg ) --[[ @ 0]]
			f12_arg0.freebg:completeAnimation() --[[ @ 0]]
			f12_arg0.freebg:setAlpha( 0 ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.freebg ) --[[ @ 0]]
		end
	},
	Free = {
		DefaultClip = function ( f13_arg0, f13_arg1 )
			f13_arg0:__resetProperties() --[[ @ 0]]
			f13_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f13_arg0.alliesbg:completeAnimation() --[[ @ 0]]
			f13_arg0.alliesbg:setAlpha( 0 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.alliesbg ) --[[ @ 0]]
			f13_arg0.axisbg:completeAnimation() --[[ @ 0]]
			f13_arg0.axisbg:setAlpha( 0 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.axisbg ) --[[ @ 0]]
			f13_arg0.freebg:completeAnimation() --[[ @ 0]]
			f13_arg0.freebg:setRGB( 0.49, 0.49, 0.49 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.freebg ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.CodCasterPlayerListRowHighlight.__onClose = function ( f14_arg0 )
	f14_arg0.alliesbg:close() --[[ @ 0]]
	f14_arg0.axisbg:close() --[[ @ 0]]
end
 --[[ @ 0]]
