-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:33
require( "x64:28fd69737f859814" ) --[[ @ 0]]

CoD.VHUD_Gunship = InheritFrom( CoD.Menu ) --[[ @ 0]]
LUI.createMenu.VHUD_Gunship = function ( f1_arg0, f1_arg1 )
	local self = CoD.Menu.NewForUIEditor( "VHUD_Gunship", f1_arg0 ) --[[ @ 0]]
	local f1_local1 = self --[[ @ 0]]
	self:setClass( CoD.VHUD_Gunship ) --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self:setOwner( f1_arg0 ) --[[ @ 0]]
	self:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	self:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	self:playSound( "menu_open", f1_arg0 ) --[[ @ 0]]
	self.ignoreCursor = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_local1:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local vhudgunshipinternal = CoD.vhud_gunship_internal.new( f1_local1, f1_arg0, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	vhudgunshipinternal:linkToElementModel( self, nil, false, function ( model )
		vhudgunshipinternal:setModel( model, f1_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( vhudgunshipinternal ) --[[ @ 0]]
	self.vhudgunshipinternal = vhudgunshipinternal --[[ @ 0]]
	
	local f1_local3 = nil --[[ @ 0]]
	f1_local3 = LUI.UIElement.createFake() --[[ @ 0]]
	self.AspectRatioBorder = f1_local3 --[[ @ 0]]
	local f1_local4 = nil --[[ @ 0]]
	f1_local4 = LUI.UIElement.createFake() --[[ @ 0]]
	self.AspectRatioBorder2 = f1_local4 --[[ @ 0]]
	self:mergeStateConditions( {
		{
			stateName = "Splitscreen",
			condition = function ( menu, element, event )
				return IsSplitscreenAndInGame( f1_arg0 )
			end
		}
	} ) --[[ @ 0]]
	self:processEvent( {
		name = "menu_loaded",
		controller = f1_arg0
	} ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PreLoadFunc then
		PreLoadFunc( self, f1_arg0 ) --[[ @ 0]]
	end
	local f1_local5 = self --[[ @ 0]]
	f1_local5 = f1_local3 --[[ @ 0]]
	if IsSplitscreenAndInGame( f1_arg0 ) then
		ShowWidget( f1_local5 ) --[[ @ 0]]
	end
	f1_local5 = f1_local4 --[[ @ 0]]
	if IsSplitscreenAndInGame( f1_arg0 ) then
		ShowWidget( f1_local5 ) --[[ @ 0]]
	end
	return self
end
 --[[ @ 0]]
CoD.VHUD_Gunship.__resetProperties = function ( f4_arg0 )
	f4_arg0.AspectRatioBorder2:completeAnimation() --[[ @ 0]]
	f4_arg0.AspectRatioBorder:completeAnimation() --[[ @ 0]]
	f4_arg0.AspectRatioBorder2:setLeftRight( 0.46, 0.98, 910, 1010 ) --[[ @ 0]]
	f4_arg0.AspectRatioBorder:setLeftRight( 0.02, 0.54, -1010, -910 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.VHUD_Gunship.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f5_arg0, f5_arg1 )
			f5_arg0:__resetProperties() --[[ @ 0]]
			f5_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	Splitscreen = {
		DefaultClip = function ( f6_arg0, f6_arg1 )
			f6_arg0:__resetProperties() --[[ @ 0]]
			f6_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
			f6_arg0.AspectRatioBorder:completeAnimation() --[[ @ 0]]
			f6_arg0.AspectRatioBorder:setLeftRight( -0.98, -0.46, -1010, -910 ) --[[ @ 0]]
			f6_arg0.clipFinished( f6_arg0.AspectRatioBorder ) --[[ @ 0]]
			f6_arg0.AspectRatioBorder2:completeAnimation() --[[ @ 0]]
			f6_arg0.AspectRatioBorder2:setLeftRight( 1.47, 1.99, 910, 1010 ) --[[ @ 0]]
			f6_arg0.clipFinished( f6_arg0.AspectRatioBorder2 ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.VHUD_Gunship.__onClose = function ( f7_arg0 )
	f7_arg0.vhudgunshipinternal:close() --[[ @ 0]]
	f7_arg0.AspectRatioBorder:close() --[[ @ 0]]
	f7_arg0.AspectRatioBorder2:close() --[[ @ 0]]
end
 --[[ @ 0]]
