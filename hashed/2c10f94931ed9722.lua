-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:49
require( "x64:1b1264dcdcf2dd99" ) --[[ @ 0]]
require( "ui/uieditor/widgets/systemoverlays/featureoverlay_button" ) --[[ @ 0]]
require( "x64:691ee3f5c466ea3a" ) --[[ @ 0]]

CoD.systemOverlay_Prestige = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.systemOverlay_Prestige.__defaultWidth = 1920 --[[ @ 0]]
CoD.systemOverlay_Prestige.__defaultHeight = 480 --[[ @ 0]]
CoD.systemOverlay_Prestige.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	MenuHidesFreeCursor( f1_arg0, f1_arg1 ) --[[ @ 0]]
	self:setClass( CoD.systemOverlay_Prestige ) --[[ @ 0]]
	self.id = "systemOverlay_Prestige" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local MainImage = LUI.UIFixedAspectRatioImage.new( 0.5, 0.5, -884.5, -524.5, 0, 0, 55, 415 ) --[[ @ 0]]
	MainImage:setStretchedDimension( 6 ) --[[ @ 0]]
	MainImage:linkToElementModel( self, "image", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			MainImage:setImage( CoD.BaseUtility.AlreadyRegisteredIfUserData( f2_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( MainImage ) --[[ @ 0]]
	self.MainImage = MainImage --[[ @ 0]]
	
	local MainText = LUI.UIText.new( 0.5, 0.5, -919.5, -489.5, 0, 0, 422, 459 ) --[[ @ 0]]
	MainText:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	MainText:setLetterSpacing( 4 ) --[[ @ 0]]
	MainText:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	MainText:setAlignment( Enum[@"luialignment"][@"hash_E821F0ECFF8D1C7"] ) --[[ @ 0]]
	MainText:linkToElementModel( self, "prestigeItemName", true, function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			MainText:setText( LocalizeToUpperString( f3_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( MainText ) --[[ @ 0]]
	self.MainText = MainText --[[ @ 0]]
	
	local Title = LUI.UIText.new( 0.5, 0.5, -360.5, 156.5, 0, 0, 10, 55 ) --[[ @ 0]]
	Title:setRGB( ColorSet.T8__BEIGE__HEADER.r, ColorSet.T8__BEIGE__HEADER.g, ColorSet.T8__BEIGE__HEADER.b ) --[[ @ 0]]
	Title:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	Title:setLetterSpacing( 6 ) --[[ @ 0]]
	Title:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	Title:linkToElementModel( self, "title", true, function ( model )
		local f4_local0 = model:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			Title:setText( ConvertToUpperString( f4_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Title ) --[[ @ 0]]
	self.Title = Title --[[ @ 0]]
	
	local Subtitle = LUI.UIText.new( 0.5, 0.5, -358, 159, 0, 0, 55, 79 ) --[[ @ 0]]
	Subtitle:setRGB( ColorSet.T8__BEIGE__HEADER.r, ColorSet.T8__BEIGE__HEADER.g, ColorSet.T8__BEIGE__HEADER.b ) --[[ @ 0]]
	Subtitle:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	Subtitle:setLetterSpacing( 6 ) --[[ @ 0]]
	Subtitle:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	Subtitle:linkToElementModel( self, "subtitle", true, function ( model )
		local f5_local0 = model:get() --[[ @ 0]]
		if f5_local0 ~= nil then
			Subtitle:setText( ConvertToUpperString( f5_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Subtitle ) --[[ @ 0]]
	self.Subtitle = Subtitle --[[ @ 0]]
	
	local text = LUI.UIText.new( 0.5, 0.5, -358, 182, 0, 0, 86, 104 ) --[[ @ 0]]
	text:setRGB( 0.92, 0.92, 0.92 ) --[[ @ 0]]
	text:setTTF( "notosans_regular" ) --[[ @ 0]]
	text:setLetterSpacing( 1 ) --[[ @ 0]]
	text:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	text:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	text:linkToElementModel( self, "description", true, function ( model )
		local f6_local0 = model:get() --[[ @ 0]]
		if f6_local0 ~= nil then
			text:setText( f6_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( text, "setText", function ( element, controller )
		UpdateWidgetHeightToMultilineTextWithMinimum( self, element, 0, 20 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( text ) --[[ @ 0]]
	self.text = text --[[ @ 0]]
	
	local options = LUI.UIList.new( f1_arg0, f1_arg1, 4, 0, nil, true, false, false, false ) --[[ @ 0]]
	options:setLeftRight( 0.5, 0.5, -361, 18 ) --[[ @ 0]]
	options:setTopBottom( 0, 0, 278, 402 ) --[[ @ 0]]
	options:setAutoScaleContent( true ) --[[ @ 0]]
	options:setWidgetType( CoD.featureOverlay_Button ) --[[ @ 0]]
	options:setVerticalCount( 2 ) --[[ @ 0]]
	options:setSpacing( 4 ) --[[ @ 0]]
	options:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	options:linkToElementModel( self, "listDatasource", true, function ( model )
		local f8_local0 = model:get() --[[ @ 0]]
		if f8_local0 ~= nil then
			options:setDataSource( f8_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	options:linkToElementModel( options, "disabled", true, function ( model, f9_arg1 )
		CoD.Menu.UpdateButtonShownState( f9_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	options:registerEventHandler( "gain_focus", function ( element, event )
		local f10_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f10_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f10_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		return f10_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( options, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"], "ui_confirm", function ( element, menu, controller, model )
		if not IsDisabled( element, controller ) then
			ProcessListAction( self, element, controller, menu ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsDisabled( element, controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"menu/select", nil, "ui_confirm" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( options ) --[[ @ 0]]
	self.options = options --[[ @ 0]]
	
	local RewardImageCallingCard = CoD.systemOverlay_PrestigeRewards.new( f1_arg0, f1_arg1, 0.5, 0.5, 365, 882, 0, 0, 55, 359 ) --[[ @ 0]]
	self:addElement( RewardImageCallingCard ) --[[ @ 0]]
	self.RewardImageCallingCard = RewardImageCallingCard --[[ @ 0]]
	
	local WarningText = LUI.UIText.new( 0.5, 0.5, -358, 182, 0, 0, 231.5, 249.5 ) --[[ @ 0]]
	WarningText:setRGB( ColorSet.Orange.r, ColorSet.Orange.g, ColorSet.Orange.b ) --[[ @ 0]]
	WarningText:setTTF( "dinnext_regular" ) --[[ @ 0]]
	WarningText:setLetterSpacing( 1 ) --[[ @ 0]]
	WarningText:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	WarningText:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	WarningText:linkToElementModel( self, "supportText", true, function ( model )
		local f13_local0 = model:get() --[[ @ 0]]
		if f13_local0 ~= nil then
			WarningText:setText( Engine[@"hash_4F9F1239CFD921FE"]( f13_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( WarningText ) --[[ @ 0]]
	self.WarningText = WarningText --[[ @ 0]]
	
	local PermanentUnlockTokenButton = CoD.Prestige_PlayerLevelButton.new( f1_arg0, f1_arg1, 0.5, 0.5, 365, 711, 0, 0, 31.5, 88.5 ) --[[ @ 0]]
	PermanentUnlockTokenButton:mergeStateConditions( {
		{
			stateName = "UnlockTokenIndicator",
			condition = function ( menu, element, event )
				return AlwaysTrue()
			end
		}
	} ) --[[ @ 0]]
	PermanentUnlockTokenButton:setAlpha( 0 ) --[[ @ 0]]
	PermanentUnlockTokenButton.CommonButtonOutlineThin.ButtonIcon:setImage( RegisterImage( @"prestige_icon_awards" ) ) --[[ @ 0]]
	PermanentUnlockTokenButton:subscribeToGlobalModel( f1_arg1, "PerController", "permanentUnlockTokensCount", function ( model )
		local f15_local0 = model:get() --[[ @ 0]]
		if f15_local0 ~= nil then
			PermanentUnlockTokenButton.CommonButtonOutlineThin.CountText:setText( f15_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	PermanentUnlockTokenButton:subscribeToGlobalModel( f1_arg1, "PerController", "permanentUnlockTokensCount", function ( model )
		local f16_local0 = model:get() --[[ @ 0]]
		if f16_local0 ~= nil then
			PermanentUnlockTokenButton.CommonButtonOutlineThin.MainText:setText( ToUpper( GetPermanentUnlockTokenText( f1_arg1, f16_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( PermanentUnlockTokenButton ) --[[ @ 0]]
	self.PermanentUnlockTokenButton = PermanentUnlockTokenButton --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "NoRewards",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualToEnum( element, f1_arg1, "prestigeLayout", CoD.PrestigeUtility.PrestigeOverlayLayouts.NoReward )
			end
		},
		{
			stateName = "FreshStart",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualToEnum( element, f1_arg1, "prestigeLayout", CoD.PrestigeUtility.PrestigeOverlayLayouts.FreshStart )
			end
		},
		{
			stateName = "TokenUnlock",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualToEnum( element, f1_arg1, "prestigeLayout", CoD.PrestigeUtility.PrestigeOverlayLayouts.TokenUnlock )
			end
		},
		{
			stateName = "RequestProcessing",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualToEnum( element, f1_arg1, "prestigeLayout", CoD.PrestigeUtility.PrestigeOverlayLayouts.RequestProcessing )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "prestigeLayout", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "prestigeLayout"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( self, "close", function ( element )
		MenuUnhideFreeCursor( f1_arg0, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	options.id = "options" --[[ @ 0]]
	RewardImageCallingCard.id = "RewardImageCallingCard" --[[ @ 0]]
	PermanentUnlockTokenButton.id = "PermanentUnlockTokenButton" --[[ @ 0]]
	self.__defaultFocus = options --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.systemOverlay_Prestige.__resetProperties = function ( f23_arg0 )
	f23_arg0.RewardImageCallingCard:completeAnimation() --[[ @ 0]]
	f23_arg0.WarningText:completeAnimation() --[[ @ 0]]
	f23_arg0.PermanentUnlockTokenButton:completeAnimation() --[[ @ 0]]
	f23_arg0.MainText:completeAnimation() --[[ @ 0]]
	f23_arg0.text:completeAnimation() --[[ @ 0]]
	f23_arg0.Subtitle:completeAnimation() --[[ @ 0]]
	f23_arg0.Title:completeAnimation() --[[ @ 0]]
	f23_arg0.MainImage:completeAnimation() --[[ @ 0]]
	f23_arg0.RewardImageCallingCard:setAlpha( 1 ) --[[ @ 0]]
	f23_arg0.WarningText:setAlpha( 1 ) --[[ @ 0]]
	f23_arg0.PermanentUnlockTokenButton:setAlpha( 0 ) --[[ @ 0]]
	f23_arg0.MainText:setAlpha( 1 ) --[[ @ 0]]
	f23_arg0.text:setAlpha( 1 ) --[[ @ 0]]
	f23_arg0.Subtitle:setTopBottom( 0, 0, 55, 79 ) --[[ @ 0]]
	f23_arg0.Subtitle:setAlpha( 1 ) --[[ @ 0]]
	f23_arg0.Title:setTopBottom( 0, 0, 10, 55 ) --[[ @ 0]]
	f23_arg0.Title:setAlpha( 1 ) --[[ @ 0]]
	f23_arg0.MainImage:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.systemOverlay_Prestige.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f24_arg0, f24_arg1 )
			f24_arg0:__resetProperties() --[[ @ 0]]
			f24_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	NoRewards = {
		DefaultClip = function ( f25_arg0, f25_arg1 )
			f25_arg0:__resetProperties() --[[ @ 0]]
			f25_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f25_arg0.RewardImageCallingCard:completeAnimation() --[[ @ 0]]
			f25_arg0.RewardImageCallingCard:setAlpha( 0 ) --[[ @ 0]]
			f25_arg0.clipFinished( f25_arg0.RewardImageCallingCard ) --[[ @ 0]]
			f25_arg0.WarningText:completeAnimation() --[[ @ 0]]
			f25_arg0.WarningText:setAlpha( 0 ) --[[ @ 0]]
			f25_arg0.clipFinished( f25_arg0.WarningText ) --[[ @ 0]]
			f25_arg0.PermanentUnlockTokenButton:completeAnimation() --[[ @ 0]]
			f25_arg0.PermanentUnlockTokenButton:setAlpha( 0 ) --[[ @ 0]]
			f25_arg0.clipFinished( f25_arg0.PermanentUnlockTokenButton ) --[[ @ 0]]
		end
	},
	FreshStart = {
		DefaultClip = function ( f26_arg0, f26_arg1 )
			f26_arg0:__resetProperties() --[[ @ 0]]
			f26_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f26_arg0.MainText:completeAnimation() --[[ @ 0]]
			f26_arg0.MainText:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.MainText ) --[[ @ 0]]
			f26_arg0.RewardImageCallingCard:completeAnimation() --[[ @ 0]]
			f26_arg0.RewardImageCallingCard:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.RewardImageCallingCard ) --[[ @ 0]]
			f26_arg0.WarningText:completeAnimation() --[[ @ 0]]
			f26_arg0.WarningText:setAlpha( 1 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.WarningText ) --[[ @ 0]]
			f26_arg0.PermanentUnlockTokenButton:completeAnimation() --[[ @ 0]]
			f26_arg0.PermanentUnlockTokenButton:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.PermanentUnlockTokenButton ) --[[ @ 0]]
		end
	},
	TokenUnlock = {
		DefaultClip = function ( f27_arg0, f27_arg1 )
			f27_arg0:__resetProperties() --[[ @ 0]]
			f27_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f27_arg0.RewardImageCallingCard:completeAnimation() --[[ @ 0]]
			f27_arg0.RewardImageCallingCard:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.RewardImageCallingCard ) --[[ @ 0]]
			f27_arg0.WarningText:completeAnimation() --[[ @ 0]]
			f27_arg0.WarningText:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.WarningText ) --[[ @ 0]]
			f27_arg0.PermanentUnlockTokenButton:completeAnimation() --[[ @ 0]]
			f27_arg0.PermanentUnlockTokenButton:setAlpha( 1 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.PermanentUnlockTokenButton ) --[[ @ 0]]
		end
	},
	RequestProcessing = {
		DefaultClip = function ( f28_arg0, f28_arg1 )
			f28_arg0:__resetProperties() --[[ @ 0]]
			f28_arg0:setupElementClipCounter( 7 ) --[[ @ 0]]
			f28_arg0.MainImage:completeAnimation() --[[ @ 0]]
			f28_arg0.MainImage:setAlpha( 0 ) --[[ @ 0]]
			f28_arg0.clipFinished( f28_arg0.MainImage ) --[[ @ 0]]
			f28_arg0.MainText:completeAnimation() --[[ @ 0]]
			f28_arg0.MainText:setAlpha( 0 ) --[[ @ 0]]
			f28_arg0.clipFinished( f28_arg0.MainText ) --[[ @ 0]]
			f28_arg0.Title:completeAnimation() --[[ @ 0]]
			f28_arg0.Title:setTopBottom( 0, 0, 189.5, 234.5 ) --[[ @ 0]]
			f28_arg0.Title:setAlpha( 1 ) --[[ @ 0]]
			f28_arg0.clipFinished( f28_arg0.Title ) --[[ @ 0]]
			f28_arg0.Subtitle:completeAnimation() --[[ @ 0]]
			f28_arg0.Subtitle:setTopBottom( 0, 0, 234.5, 258.5 ) --[[ @ 0]]
			f28_arg0.Subtitle:setAlpha( 1 ) --[[ @ 0]]
			f28_arg0.clipFinished( f28_arg0.Subtitle ) --[[ @ 0]]
			f28_arg0.text:completeAnimation() --[[ @ 0]]
			f28_arg0.text:setAlpha( 0 ) --[[ @ 0]]
			f28_arg0.clipFinished( f28_arg0.text ) --[[ @ 0]]
			f28_arg0.RewardImageCallingCard:completeAnimation() --[[ @ 0]]
			f28_arg0.RewardImageCallingCard:setAlpha( 0 ) --[[ @ 0]]
			f28_arg0.clipFinished( f28_arg0.RewardImageCallingCard ) --[[ @ 0]]
			f28_arg0.WarningText:completeAnimation() --[[ @ 0]]
			f28_arg0.WarningText:setAlpha( 0 ) --[[ @ 0]]
			f28_arg0.clipFinished( f28_arg0.WarningText ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.systemOverlay_Prestige.__onClose = function ( f29_arg0 )
	f29_arg0.MainImage:close() --[[ @ 0]]
	f29_arg0.MainText:close() --[[ @ 0]]
	f29_arg0.Title:close() --[[ @ 0]]
	f29_arg0.Subtitle:close() --[[ @ 0]]
	f29_arg0.text:close() --[[ @ 0]]
	f29_arg0.options:close() --[[ @ 0]]
	f29_arg0.RewardImageCallingCard:close() --[[ @ 0]]
	f29_arg0.WarningText:close() --[[ @ 0]]
	f29_arg0.PermanentUnlockTokenButton:close() --[[ @ 0]]
end
 --[[ @ 0]]
