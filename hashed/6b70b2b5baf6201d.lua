-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:50
CoD.Hud_ZM_LastStand_Bleedout_Perk_Bar_Item_Perk = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.Hud_ZM_LastStand_Bleedout_Perk_Bar_Item_Perk.__defaultWidth = 64 --[[ @ 0]]
CoD.Hud_ZM_LastStand_Bleedout_Perk_Bar_Item_Perk.__defaultHeight = 64 --[[ @ 0]]
CoD.Hud_ZM_LastStand_Bleedout_Perk_Bar_Item_Perk.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.Hud_ZM_LastStand_Bleedout_Perk_Bar_Item_Perk ) --[[ @ 0]]
	self.id = "Hud_ZM_LastStand_Bleedout_Perk_Bar_Item_Perk" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local StoneTiledBacking = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	StoneTiledBacking:setRGB( 1, 0, 0 ) --[[ @ 0]]
	StoneTiledBacking:setAlpha( 0.8 ) --[[ @ 0]]
	StoneTiledBacking:setImage( RegisterImage( @"uie_ui_zm_laboratory_buttonbgtile" ) ) --[[ @ 0]]
	StoneTiledBacking:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_16CBE95C250C6D15" ) ) --[[ @ 0]]
	StoneTiledBacking:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	StoneTiledBacking:setupNineSliceShader( 196, 88 ) --[[ @ 0]]
	self:addElement( StoneTiledBacking ) --[[ @ 0]]
	self.StoneTiledBacking = StoneTiledBacking --[[ @ 0]]
	
	local SkullImage = LUI.UIImage.new( 0, 0, 7, 57, 0, 0, 7, 57 ) --[[ @ 0]]
	SkullImage:setAlpha( 0 ) --[[ @ 0]]
	SkullImage:setImage( RegisterImage( @"ui_hud_zm_deathperception" ) ) --[[ @ 0]]
	self:addElement( SkullImage ) --[[ @ 0]]
	self.SkullImage = SkullImage --[[ @ 0]]
	
	local PerkIcon = LUI.UIImage.new( 0, 0, 7, 57, 0, 0, 7, 57 ) --[[ @ 0]]
	PerkIcon:setRGB( 0.79, 0.79, 0.79 ) --[[ @ 0]]
	PerkIcon:setAlpha( 0.5 ) --[[ @ 0]]
	PerkIcon:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_saturation_normal" ) ) --[[ @ 0]]
	PerkIcon:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	PerkIcon:linkToElementModel( self, "itemIndex", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			PerkIcon:setImage( RegisterImage( GetItemImageFromIndex( Enum[@"statindexoffset"][@"hash_49AF82A21BAD026D"], f2_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( PerkIcon ) --[[ @ 0]]
	self.PerkIcon = PerkIcon --[[ @ 0]]
	
	local PerkIcon2 = LUI.UIImage.new( 0, 0, 7, 57, 0, 0, 7, 57 ) --[[ @ 0]]
	PerkIcon2:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_wipe_normal" ) ) --[[ @ 0]]
	PerkIcon2:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	PerkIcon2:setShaderVector( 2, 1, 0, 0, 0 ) --[[ @ 0]]
	PerkIcon2:setShaderVector( 3, 0, 0, 0, 0 ) --[[ @ 0]]
	PerkIcon2:setShaderVector( 4, 0, 0, 0, 0 ) --[[ @ 0]]
	PerkIcon2:linkToElementModel( self, "itemIndex", true, function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			PerkIcon2:setImage( RegisterImage( GetItemImageFromIndex( Enum[@"statindexoffset"][@"hash_49AF82A21BAD026D"], f3_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	PerkIcon2:linkToElementModel( self, "bleedoutProgress", true, function ( model )
		local f4_local0 = model:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			PerkIcon2:setShaderVector( 0, CoD.GetVectorComponentFromString( f4_local0, 1 ), CoD.GetVectorComponentFromString( f4_local0, 2 ), CoD.GetVectorComponentFromString( f4_local0, 3 ), CoD.GetVectorComponentFromString( f4_local0, 4 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( PerkIcon2 ) --[[ @ 0]]
	self.PerkIcon2 = PerkIcon2 --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Skull",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg1, "isFirst" )
			end
		},
		{
			stateName = "Empty",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualToEnumEitherValue( element, f1_arg1, "state", CoD.ZMPerkUtility.PerkVaporStates.DEFAULT, CoD.ZMPerkUtility.PerkVaporStates.HIDDEN )
			end
		},
		{
			stateName = "Perk",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueGreaterThan( element, f1_arg1, "bleedoutProgress", 0 )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "isFirst", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "isFirst"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:linkToElementModel( self, "state", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "state"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:linkToElementModel( self, "bleedoutProgress", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "bleedoutProgress"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.Hud_ZM_LastStand_Bleedout_Perk_Bar_Item_Perk.__resetProperties = function ( f11_arg0 )
	f11_arg0.PerkIcon:completeAnimation() --[[ @ 0]]
	f11_arg0.SkullImage:completeAnimation() --[[ @ 0]]
	f11_arg0.PerkIcon2:completeAnimation() --[[ @ 0]]
	f11_arg0.PerkIcon:setAlpha( 0.5 ) --[[ @ 0]]
	f11_arg0.SkullImage:setAlpha( 0 ) --[[ @ 0]]
	f11_arg0.PerkIcon2:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.Hud_ZM_LastStand_Bleedout_Perk_Bar_Item_Perk.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f12_arg0, f12_arg1 )
			f12_arg0:__resetProperties() --[[ @ 0]]
			f12_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f12_arg0.SkullImage:completeAnimation() --[[ @ 0]]
			f12_arg0.SkullImage:setAlpha( 0 ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.SkullImage ) --[[ @ 0]]
			f12_arg0.PerkIcon:completeAnimation() --[[ @ 0]]
			f12_arg0.PerkIcon:setAlpha( 0 ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.PerkIcon ) --[[ @ 0]]
		end
	},
	Skull = {
		DefaultClip = function ( f13_arg0, f13_arg1 )
			f13_arg0:__resetProperties() --[[ @ 0]]
			f13_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f13_arg0.SkullImage:completeAnimation() --[[ @ 0]]
			f13_arg0.SkullImage:setAlpha( 1 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.SkullImage ) --[[ @ 0]]
			f13_arg0.PerkIcon:completeAnimation() --[[ @ 0]]
			f13_arg0.PerkIcon:setAlpha( 0 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.PerkIcon ) --[[ @ 0]]
			f13_arg0.PerkIcon2:completeAnimation() --[[ @ 0]]
			f13_arg0.PerkIcon2:setAlpha( 0 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.PerkIcon2 ) --[[ @ 0]]
		end
	},
	Empty = {
		DefaultClip = function ( f14_arg0, f14_arg1 )
			f14_arg0:__resetProperties() --[[ @ 0]]
			f14_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f14_arg0.PerkIcon:completeAnimation() --[[ @ 0]]
			f14_arg0.PerkIcon:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.PerkIcon ) --[[ @ 0]]
			f14_arg0.PerkIcon2:completeAnimation() --[[ @ 0]]
			f14_arg0.PerkIcon2:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.PerkIcon2 ) --[[ @ 0]]
		end
	},
	Perk = {
		DefaultClip = function ( f15_arg0, f15_arg1 )
			f15_arg0:__resetProperties() --[[ @ 0]]
			f15_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f15_arg0.SkullImage:completeAnimation() --[[ @ 0]]
			f15_arg0.SkullImage:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.SkullImage ) --[[ @ 0]]
			f15_arg0.PerkIcon:completeAnimation() --[[ @ 0]]
			f15_arg0.PerkIcon:setAlpha( 1 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.PerkIcon ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.Hud_ZM_LastStand_Bleedout_Perk_Bar_Item_Perk.__onClose = function ( f16_arg0 )
	f16_arg0.PerkIcon:close() --[[ @ 0]]
	f16_arg0.PerkIcon2:close() --[[ @ 0]]
end
 --[[ @ 0]]
