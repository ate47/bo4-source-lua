-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:51
require( "ui/uieditor/widgets/craft/emblemeditor/craftlayernumber" ) --[[ @ 0]]
require( "x64:2c2f840fd2528321" ) --[[ @ 0]]
require( "x64:396b29a3176ada0f" ) --[[ @ 0]]
require( "ui/uieditor/widgets/startmenu/options/startmenuoptionsmainframe" ) --[[ @ 0]]
require( "ui/uieditor/widgets/systemoverlays/systemoverlay_layout_foregroundmultilinetext" ) --[[ @ 0]]
require( "x64:43447fe281be3ac4" ) --[[ @ 0]]

CoD.systemOverlay_SaveDecalGroupFrame = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.systemOverlay_SaveDecalGroupFrame.__defaultWidth = 1920 --[[ @ 0]]
CoD.systemOverlay_SaveDecalGroupFrame.__defaultHeight = 456 --[[ @ 0]]
CoD.systemOverlay_SaveDecalGroupFrame.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	CoD.CraftUtility.SetSlotCustomizationType( f1_arg1, Enum[@"customizationtype"][@"hash_1AB847C1A0E71617"] ) --[[ @ 0]]
	self:setClass( CoD.systemOverlay_SaveDecalGroupFrame ) --[[ @ 0]]
	self.id = "systemOverlay_SaveDecalGroupFrame" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	
	local Frame = CoD.StartMenuOptionsMainFrame.new( f1_arg0, f1_arg1, 0.5, 0.5, -723, -344, 0.5, 0.5, -214.5, 164.5 ) --[[ @ 0]]
	Frame:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	Frame:setAlpha( 0.04 ) --[[ @ 0]]
	self:addElement( Frame ) --[[ @ 0]]
	self.Frame = Frame --[[ @ 0]]
	
	local emblem = LUI.UIElement.new( 0.5, 0.5, -713.5, -353.5, 0.5, 0.5, -206, 154 ) --[[ @ 0]]
	emblem:setupEmblem( 3 ) --[[ @ 0]]
	self:addElement( emblem ) --[[ @ 0]]
	self.emblem = emblem --[[ @ 0]]
	
	local CraftLayerNumber = CoD.CraftLayerNumber.new( f1_arg0, f1_arg1, 0.5, 0.5, -713.5, -602.5, 0.5, 0.5, -206, -182 ) --[[ @ 0]]
	self:addElement( CraftLayerNumber ) --[[ @ 0]]
	self.CraftLayerNumber = CraftLayerNumber --[[ @ 0]]
	
	local SlotsUsedWidget = CoD.SlotsUsedWidget.new( f1_arg0, f1_arg1, 0.5, 0.5, 97, 627, 0.5, 0.5, 77, 170 ) --[[ @ 0]]
	SlotsUsedWidget.Title.__alertText2_String_Reference = function ()
		SlotsUsedWidget.Title:setText( LocalizeToUpperString( CoD.CraftUtility.GetSlotsUsedHeader( f1_arg1 ) ) ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	SlotsUsedWidget.Title.__alertText2_String_Reference() --[[ @ 0]]
	SlotsUsedWidget:subscribeToGlobalModel( f1_arg1, "CraftSlots", "totalSlots", function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			SlotsUsedWidget.Total:setText( f3_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	SlotsUsedWidget:subscribeToGlobalModel( f1_arg1, "CraftSlots", "usedSlots", function ( model )
		local f4_local0 = model:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			SlotsUsedWidget.Used:setText( f4_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	SlotsUsedWidget:subscribeToGlobalModel( f1_arg1, "CraftSlots", "totalSlots", function ( model )
		local f5_local0 = model:get() --[[ @ 0]]
		if f5_local0 ~= nil then
			SlotsUsedWidget.totalBar:setShaderVector( 1, SetVectorComponent( 2, 1, CoD.GetVectorComponentFromString( f5_local0, 1 ), CoD.GetVectorComponentFromString( f5_local0, 2 ), CoD.GetVectorComponentFromString( f5_local0, 3 ), CoD.GetVectorComponentFromString( f5_local0, 4 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	SlotsUsedWidget:subscribeToGlobalModel( f1_arg1, "CraftSlots", "totalSlots", function ( model )
		local f6_local0 = model:get() --[[ @ 0]]
		if f6_local0 ~= nil then
			SlotsUsedWidget.usedBar:setShaderVector( 1, SetVectorComponent( 2, 1, CoD.GetVectorComponentFromString( f6_local0, 1 ), CoD.GetVectorComponentFromString( f6_local0, 2 ), CoD.GetVectorComponentFromString( f6_local0, 3 ), CoD.GetVectorComponentFromString( f6_local0, 4 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	SlotsUsedWidget:subscribeToGlobalModel( f1_arg1, "CraftSlots", "percent", function ( model )
		local f7_local0 = model:get() --[[ @ 0]]
		if f7_local0 ~= nil then
			SlotsUsedWidget.usedBar:setShaderVector( 2, SetVectorComponent( 4, 1, SetVectorComponent( 3, 0, SetVectorComponent( 1, 0, SwapVectorComponents( 1, 2, CoD.GetVectorComponentFromString( f7_local0, 1 ), CoD.GetVectorComponentFromString( f7_local0, 2 ), CoD.GetVectorComponentFromString( f7_local0, 3 ), CoD.GetVectorComponentFromString( f7_local0, 4 ) ) ) ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( SlotsUsedWidget ) --[[ @ 0]]
	self.SlotsUsedWidget = SlotsUsedWidget --[[ @ 0]]
	
	local GroupRenameTextBox = nil --[[ @ 0]]
	
	GroupRenameTextBox = CoD.EmblemRenameTextBox.new( f1_arg0, f1_arg1, 0.5, 0.5, -324, 76, 0.5, 0.5, -30, 30 ) --[[ @ 0]]
	GroupRenameTextBox:linkToElementModel( self, "inputText", true, function ( model )
		local f8_local0 = model:get() --[[ @ 0]]
		if f8_local0 ~= nil then
			GroupRenameTextBox.RenameText:setText( CoD.BaseUtility.LocalizeIfXHash( f8_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	GroupRenameTextBox:registerEventHandler( "occlusion_change", function ( element, event )
		local f9_local0 = nil --[[ @ 0]]
		if element.OcclusionChange then
			f9_local0 = element:OcclusionChange( event ) --[[ @ 0]]
		elseif element.super.OcclusionChange then
			f9_local0 = element.super:OcclusionChange( event ) --[[ @ 0]]
		end
		if CoD.ModelUtility.IsControllerModelValueNonEmptyString( f1_arg1, "renameEmblemText" ) then
			SetControllerModelValue( f1_arg1, "renameEmblemText", "" ) --[[ @ 0]]
		end
		if not f9_local0 then
			f9_local0 = element:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f9_local0
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( GroupRenameTextBox, "childFocusLost", function ( element )
		if CoD.ModelUtility.IsControllerModelValueNonEmptyString( f1_arg1, "renameEmblemText" ) then
			SetElementState( self, element, f1_arg1, "DefaultState" ) --[[ @ 0]]
			CoD.PCUtility.EmblemEditor_RenameGroup( self, f1_arg1 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( GroupRenameTextBox ) --[[ @ 0]]
	self.GroupRenameTextBox = GroupRenameTextBox --[[ @ 0]]
	
	local optionButtons = LUI.UIList.new( f1_arg0, f1_arg1, 10, 0, nil, true, false, false, false ) --[[ @ 0]]
	optionButtons:setLeftRight( 0.5, 0.5, -324, 76 ) --[[ @ 0]]
	optionButtons:setTopBottom( 0.5, 0.5, 31.5, 91.5 ) --[[ @ 0]]
	optionButtons:setWidgetType( CoD.EmblemOptionsButton ) --[[ @ 0]]
	optionButtons:setSpacing( 10 ) --[[ @ 0]]
	optionButtons:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	optionButtons:linkToElementModel( self, "listDatasource", true, function ( model )
		local f11_local0 = model:get() --[[ @ 0]]
		if f11_local0 ~= nil then
			optionButtons:setDataSource( f11_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	optionButtons:linkToElementModel( optionButtons, "disabled", true, function ( model, f12_arg1 )
		CoD.Menu.UpdateButtonShownState( f12_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	optionButtons:registerEventHandler( "gain_focus", function ( element, event )
		local f13_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f13_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f13_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		return f13_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( optionButtons, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"], "ui_confirm", function ( element, menu, controller, model )
		if not IsDisabled( element, controller ) then
			ProcessListAction( self, element, controller, menu ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsDisabled( element, controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"menu/select", nil, "ui_confirm" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( optionButtons ) --[[ @ 0]]
	self.optionButtons = optionButtons --[[ @ 0]]
	
	local f1_local7 = nil --[[ @ 0]]
	f1_local7 = LUI.UIElement.createFake() --[[ @ 0]]
	self.renameButton = f1_local7 --[[ @ 0]]
	local f1_local8 = nil --[[ @ 0]]
	self.NameTitle = LUI.UIElement.createFake() --[[ @ 0]]
	
	local descriptionText = CoD.systemOverlay_Layout_ForegroundMultilineText.new( f1_arg0, f1_arg1, 0.5, 0.5, -324, 948, 0.5, 0.5, -177, -147 ) --[[ @ 0]]
	descriptionText:setRGB( ColorSet.T8__OFF__GRAY.r, ColorSet.T8__OFF__GRAY.g, ColorSet.T8__OFF__GRAY.b ) --[[ @ 0]]
	descriptionText:setScale( LanguageOverrideNumber( "japanese", 0.85, 1, 1 ) ) --[[ @ 0]]
	descriptionText:linkToElementModel( self, "description", true, function ( model )
		local f16_local0 = model:get() --[[ @ 0]]
		if f16_local0 ~= nil then
			descriptionText.text:setText( CoD.BaseUtility.LocalizeIfXHash( f16_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( descriptionText ) --[[ @ 0]]
	self.descriptionText = descriptionText --[[ @ 0]]
	
	local title = LUI.UIText.new( 0.5, 0.5, -324, 948, 0.5, 0.5, -221, -176 ) --[[ @ 0]]
	title:setRGB( ColorSet.T8__BEIGE__HEADER.r, ColorSet.T8__BEIGE__HEADER.g, ColorSet.T8__BEIGE__HEADER.b ) --[[ @ 0]]
	title:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	title:setLetterSpacing( 6 ) --[[ @ 0]]
	title:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	title:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	title:linkToElementModel( self, "title", true, function ( model )
		local f17_local0 = model:get() --[[ @ 0]]
		if f17_local0 ~= nil then
			title:setText( LocalizeToUpperString( CoD.BaseUtility.LocalizeIfXHash( f17_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( title ) --[[ @ 0]]
	self.title = title --[[ @ 0]]
	
	local categoryTypeImage = LUI.UIImage.new( 0.5, 0.5, -377.5, -353.5, 0.5, 0.5, -206, -182 ) --[[ @ 0]]
	categoryTypeImage:setRGB( ColorSet.T8__BEIGE__HEADER.r, ColorSet.T8__BEIGE__HEADER.g, ColorSet.T8__BEIGE__HEADER.b ) --[[ @ 0]]
	categoryTypeImage:linkToElementModel( self, "categoryType", true, function ( model )
		local f18_local0 = model:get() --[[ @ 0]]
		if f18_local0 ~= nil then
			categoryTypeImage:setImage( RegisterImage( GetCategoryIconForOverlayType( f18_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( categoryTypeImage ) --[[ @ 0]]
	self.categoryTypeImage = categoryTypeImage --[[ @ 0]]
	
	local f1_local12 = SlotsUsedWidget --[[ @ 0]]
	local f1_local13 = SlotsUsedWidget.subscribeToModel --[[ @ 0]]
	local f1_local14 = DataSources.SlotCustomization.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local13( f1_local12, f1_local14.type, SlotsUsedWidget.Title.__alertText2_String_Reference ) --[[ @ 0]]
	if CoD.isPC then
		GroupRenameTextBox.id = "GroupRenameTextBox" --[[ @ 0]]
	end
	optionButtons.id = "optionButtons" --[[ @ 0]]
	f1_local7.id = "renameButton" --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	f1_local13 = self --[[ @ 0]]
	CoD.CraftUtility.EmblemChooseIcon_UpdateLayerCount( self, self.CraftLayerNumber, f1_arg1 ) --[[ @ 0]]
	UpdateElementState( self, "CraftLayerNumber", f1_arg1 ) --[[ @ 0]]
	return self
end
 --[[ @ 0]]
CoD.systemOverlay_SaveDecalGroupFrame.__onClose = function ( f19_arg0 )
	f19_arg0.Frame:close() --[[ @ 0]]
	f19_arg0.CraftLayerNumber:close() --[[ @ 0]]
	f19_arg0.SlotsUsedWidget:close() --[[ @ 0]]
	f19_arg0.GroupRenameTextBox:close() --[[ @ 0]]
	f19_arg0.optionButtons:close() --[[ @ 0]]
	f19_arg0.renameButton:close() --[[ @ 0]]
	f19_arg0.descriptionText:close() --[[ @ 0]]
	f19_arg0.title:close() --[[ @ 0]]
	f19_arg0.categoryTypeImage:close() --[[ @ 0]]
end
 --[[ @ 0]]
