-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:51
require( "x64:38a21df2466c537b" ) --[[ @ 0]]
require( "x64:3e88c04402ee086b" ) --[[ @ 0]]

CoD.FallMeter = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.FallMeter.__defaultWidth = 32 --[[ @ 0]]
CoD.FallMeter.__defaultHeight = 500 --[[ @ 0]]
CoD.FallMeter.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.FallMeter ) --[[ @ 0]]
	self.id = "FallMeter" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local SceneBlur = LUI.UIImage.new( 0.5, 0.5, -10, 10, -0.01, 1.01, 6, -6 ) --[[ @ 0]]
	SceneBlur:setImage( RegisterImage( @"uie_ui_hud_wz_meter_backer_blur" ) ) --[[ @ 0]]
	SceneBlur:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_E2354BE557C4C7A" ) ) --[[ @ 0]]
	SceneBlur:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( SceneBlur ) --[[ @ 0]]
	self.SceneBlur = SceneBlur --[[ @ 0]]
	
	local Texture = LUI.UIImage.new( 0.5, 0.5, -10, 10, -0.01, 1.01, 6, -6 ) --[[ @ 0]]
	Texture:setImage( RegisterImage( @"uie_ui_hud_wz_meter_backer_texture" ) ) --[[ @ 0]]
	self:addElement( Texture ) --[[ @ 0]]
	self.Texture = Texture --[[ @ 0]]
	
	local GroundFill = LUI.UIImage.new( 0.5, 0.5, -10, 10, 1, 1, -500, 0 ) --[[ @ 0]]
	GroundFill:setRGB( 0.63, 0.33, 0.16 ) --[[ @ 0]]
	GroundFill:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_wipe_delta_normal" ) ) --[[ @ 0]]
	GroundFill:setShaderVector( 0, 0, 1, 0, 0 ) --[[ @ 0]]
	GroundFill:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	GroundFill:setShaderVector( 3, 0, 0, 0, 0 ) --[[ @ 0]]
	GroundFill:setShaderVector( 4, 0, 0, 0, 0 ) --[[ @ 0]]
	GroundFill.__Y_Start___Y_End = function ( f2_arg0 )
		local f2_local0 = f2_arg0:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			GroundFill:setShaderVector( 2, CoD.WZUtility.GetGroundUnderPlayerAltitudeRatio( f1_arg1, CoD.GetVectorComponentFromString( f2_local0, 1 ), CoD.GetVectorComponentFromString( f2_local0, 2 ), CoD.GetVectorComponentFromString( f2_local0, 3 ), CoD.GetVectorComponentFromString( f2_local0, 4 ) ) ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	GroundFill:subscribeToGlobalModel( f1_arg1, "HUDItems", "groundUnderPlayerAltitude", GroundFill.__Y_Start___Y_End ) --[[ @ 0]]
	GroundFill.__Y_Start___Y_End_FullPath = function ()
		local f3_local0 = DataSources.HUDItems.getModel( f1_arg1 ) --[[ @ 0]]
		f3_local0 = f3_local0.groundUnderPlayerAltitude --[[ @ 0]]
		if f3_local0 then
			GroundFill.__Y_Start___Y_End( f3_local0 ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	self:addElement( GroundFill ) --[[ @ 0]]
	self.GroundFill = GroundFill --[[ @ 0]]
	
	local ParachuteDeployLine = LUI.UIImage.new( 0, 1, 0, 0, 0, 0, -4, 4 ) --[[ @ 0]]
	ParachuteDeployLine:setRGB( 1, 0, 0 ) --[[ @ 0]]
	ParachuteDeployLine:setAlpha( 0 ) --[[ @ 0]]
	ParachuteDeployLine:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_59E7CAA1CA4B378C" ) ) --[[ @ 0]]
	ParachuteDeployLine:setShaderVector( 0, 1, 3, 0, 0 ) --[[ @ 0]]
	ParachuteDeployLine.__YOffset_Percent = function ( f4_arg0 )
		local f4_local0 = f4_arg0:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			ParachuteDeployLine:setTopPct( CoD.WZUtility.GetFreeFallAltitudeRatio( f1_arg1, f4_local0 ) ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	ParachuteDeployLine:subscribeToGlobalModel( f1_arg1, "HUDItems", "parachuteOpenAltitude", ParachuteDeployLine.__YOffset_Percent ) --[[ @ 0]]
	ParachuteDeployLine.__YOffset_Percent_FullPath = function ()
		local f5_local0 = DataSources.HUDItems.getModel( f1_arg1 ) --[[ @ 0]]
		f5_local0 = f5_local0.parachuteOpenAltitude --[[ @ 0]]
		if f5_local0 then
			ParachuteDeployLine.__YOffset_Percent( f5_local0 ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	self:addElement( ParachuteDeployLine ) --[[ @ 0]]
	self.ParachuteDeployLine = ParachuteDeployLine --[[ @ 0]]
	
	local MeterR = LUI.UIImage.new( 1, 1, -21, 5, 0.5, 0.5, -245, 245 ) --[[ @ 0]]
	MeterR:setAlpha( 0.3 ) --[[ @ 0]]
	MeterR:setImage( RegisterImage( @"uie_ui_hud_wz_fallmeter_meterverticle" ) ) --[[ @ 0]]
	MeterR:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_tile_scroll_normal" ) ) --[[ @ 0]]
	MeterR:setShaderVector( 0, 1, 1.5, 0, 0 ) --[[ @ 0]]
	MeterR:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( MeterR ) --[[ @ 0]]
	self.MeterR = MeterR --[[ @ 0]]
	
	local CornerTR = LUI.UIImage.new( 1, 1, -14, -3, 0, 0, -2.5, 8.5 ) --[[ @ 0]]
	CornerTR:setRGB( 0, 0, 0 ) --[[ @ 0]]
	CornerTR:setImage( RegisterImage( @"hash_662E760CB652A6EE" ) ) --[[ @ 0]]
	self:addElement( CornerTR ) --[[ @ 0]]
	self.CornerTR = CornerTR --[[ @ 0]]
	
	local MidR = LUI.UIImage.new( 1, 1, -14, -3, 0.5, 0.5, -240, 240 ) --[[ @ 0]]
	MidR:setRGB( 0, 0, 0 ) --[[ @ 0]]
	MidR:setImage( RegisterImage( @"hash_18215DDE7C19CAF3" ) ) --[[ @ 0]]
	self:addElement( MidR ) --[[ @ 0]]
	self.MidR = MidR --[[ @ 0]]
	
	local CornerBR = LUI.UIImage.new( 1, 1, -14, -3, 1, 1, -7.5, 3.5 ) --[[ @ 0]]
	CornerBR:setRGB( 0, 0, 0 ) --[[ @ 0]]
	CornerBR:setXRot( 180 ) --[[ @ 0]]
	CornerBR:setImage( RegisterImage( @"hash_662E760CB652A6EE" ) ) --[[ @ 0]]
	self:addElement( CornerBR ) --[[ @ 0]]
	self.CornerBR = CornerBR --[[ @ 0]]
	
	local PlayerInfo = CoD.FallMeter_PlayerInfo.new( f1_arg0, f1_arg1, 0, 0, -3, 35, 0, 0, -2, 6 ) --[[ @ 0]]
	PlayerInfo.__YOffset_Percent = function ( f6_arg0 )
		local f6_local0 = f6_arg0:get() --[[ @ 0]]
		if f6_local0 ~= nil then
			PlayerInfo:setTopPct( CoD.WZUtility.GetFreeFallAltitudeRatio( f1_arg1, f6_local0 ) ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	PlayerInfo:subscribeToGlobalModel( f1_arg1, "HUDItems", "altitude", PlayerInfo.__YOffset_Percent ) --[[ @ 0]]
	PlayerInfo.__YOffset_Percent_FullPath = function ()
		local f7_local0 = DataSources.HUDItems.getModel( f1_arg1 ) --[[ @ 0]]
		f7_local0 = f7_local0.altitude --[[ @ 0]]
		if f7_local0 then
			PlayerInfo.__YOffset_Percent( f7_local0 ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	self:addElement( PlayerInfo ) --[[ @ 0]]
	self.PlayerInfo = PlayerInfo --[[ @ 0]]
	
	local ParachuteDeployIndicator = CoD.FallMeter_ParachuteDeployIndicator.new( f1_arg0, f1_arg1, 0, 0, -3, 35, 0, 0, -4, 2 ) --[[ @ 0]]
	ParachuteDeployIndicator.__YOffset_Percent = function ( f8_arg0 )
		local f8_local0 = f8_arg0:get() --[[ @ 0]]
		if f8_local0 ~= nil then
			ParachuteDeployIndicator:setTopPct( CoD.WZUtility.GetFreeFallAltitudeRatio( f1_arg1, f8_local0 ) ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	ParachuteDeployIndicator:subscribeToGlobalModel( f1_arg1, "HUDItems", "parachuteOpenAltitude", ParachuteDeployIndicator.__YOffset_Percent ) --[[ @ 0]]
	ParachuteDeployIndicator.__YOffset_Percent_FullPath = function ()
		local f9_local0 = DataSources.HUDItems.getModel( f1_arg1 ) --[[ @ 0]]
		f9_local0 = f9_local0.parachuteOpenAltitude --[[ @ 0]]
		if f9_local0 then
			ParachuteDeployIndicator.__YOffset_Percent( f9_local0 ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	self:addElement( ParachuteDeployIndicator ) --[[ @ 0]]
	self.ParachuteDeployIndicator = ParachuteDeployIndicator --[[ @ 0]]
	
	local f1_local11 = GroundFill --[[ @ 0]]
	local f1_local12 = GroundFill.subscribeToModel --[[ @ 0]]
	local f1_local13 = DataSources.HUDItems.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local12( f1_local11, f1_local13.freeFallStartAltitude, GroundFill.__Y_Start___Y_End_FullPath ) --[[ @ 0]]
	f1_local11 = ParachuteDeployLine --[[ @ 0]]
	f1_local12 = ParachuteDeployLine.subscribeToModel --[[ @ 0]]
	f1_local13 = DataSources.HUDItems.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local12( f1_local11, f1_local13.freeFallStartAltitude, ParachuteDeployLine.__YOffset_Percent_FullPath ) --[[ @ 0]]
	f1_local11 = PlayerInfo --[[ @ 0]]
	f1_local12 = PlayerInfo.subscribeToModel --[[ @ 0]]
	f1_local13 = DataSources.HUDItems.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local12( f1_local11, f1_local13.freeFallStartAltitude, PlayerInfo.__YOffset_Percent_FullPath ) --[[ @ 0]]
	f1_local11 = ParachuteDeployIndicator --[[ @ 0]]
	f1_local12 = ParachuteDeployIndicator.subscribeToModel --[[ @ 0]]
	f1_local13 = DataSources.HUDItems.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local12( f1_local11, f1_local13.freeFallStartAltitude, ParachuteDeployIndicator.__YOffset_Percent_FullPath ) --[[ @ 0]]
	self:mergeStateConditions( {
		{
			stateName = "HiddenPreference",
			condition = function ( menu, element, event )
				return CoD.WZUtility.IsWarzoneUIHidden( f1_arg1, "wzHideAltimeterUI", "warzoneHideAltimeter" )
			end
		},
		{
			stateName = "Visible",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalDataSourceModelValueTrue( f1_arg1, "HUDItems", "insertionJumpActive" )
			end
		}
	} ) --[[ @ 0]]
	f1_local11 = self --[[ @ 0]]
	f1_local12 = self.subscribeToModel --[[ @ 0]]
	f1_local13 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local12( f1_local11, f1_local13.PlayerSettingsUpdate, function ( f12_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f12_arg0:get(),
			modelName = "PlayerSettingsUpdate"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local11 = self --[[ @ 0]]
	f1_local12 = self.subscribeToModel --[[ @ 0]]
	f1_local13 = DataSources.HUDItems.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local12( f1_local11, f1_local13.insertionJumpActive, function ( f13_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f13_arg0:get(),
			modelName = "insertionJumpActive"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.FallMeter.__resetProperties = function ( f14_arg0 )
	f14_arg0.PlayerInfo:completeAnimation() --[[ @ 0]]
	f14_arg0.GroundFill:completeAnimation() --[[ @ 0]]
	f14_arg0.ParachuteDeployIndicator:completeAnimation() --[[ @ 0]]
	f14_arg0.MeterR:completeAnimation() --[[ @ 0]]
	f14_arg0.CornerBR:completeAnimation() --[[ @ 0]]
	f14_arg0.MidR:completeAnimation() --[[ @ 0]]
	f14_arg0.CornerTR:completeAnimation() --[[ @ 0]]
	f14_arg0.SceneBlur:completeAnimation() --[[ @ 0]]
	f14_arg0.Texture:completeAnimation() --[[ @ 0]]
	f14_arg0.ParachuteDeployLine:completeAnimation() --[[ @ 0]]
	f14_arg0.PlayerInfo:setAlpha( 1 ) --[[ @ 0]]
	f14_arg0.GroundFill:setAlpha( 1 ) --[[ @ 0]]
	f14_arg0.ParachuteDeployIndicator:setAlpha( 1 ) --[[ @ 0]]
	f14_arg0.MeterR:setAlpha( 0.3 ) --[[ @ 0]]
	f14_arg0.CornerBR:setAlpha( 1 ) --[[ @ 0]]
	f14_arg0.MidR:setAlpha( 1 ) --[[ @ 0]]
	f14_arg0.CornerTR:setAlpha( 1 ) --[[ @ 0]]
	f14_arg0.SceneBlur:setAlpha( 1 ) --[[ @ 0]]
	f14_arg0.Texture:setAlpha( 1 ) --[[ @ 0]]
	f14_arg0.ParachuteDeployLine:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.FallMeter.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f15_arg0, f15_arg1 )
			f15_arg0:__resetProperties() --[[ @ 0]]
			f15_arg0:setupElementClipCounter( 10 ) --[[ @ 0]]
			f15_arg0.SceneBlur:completeAnimation() --[[ @ 0]]
			f15_arg0.SceneBlur:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.SceneBlur ) --[[ @ 0]]
			f15_arg0.Texture:completeAnimation() --[[ @ 0]]
			f15_arg0.Texture:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.Texture ) --[[ @ 0]]
			f15_arg0.GroundFill:completeAnimation() --[[ @ 0]]
			f15_arg0.GroundFill:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.GroundFill ) --[[ @ 0]]
			f15_arg0.ParachuteDeployLine:completeAnimation() --[[ @ 0]]
			f15_arg0.ParachuteDeployLine:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.ParachuteDeployLine ) --[[ @ 0]]
			f15_arg0.MeterR:completeAnimation() --[[ @ 0]]
			f15_arg0.MeterR:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.MeterR ) --[[ @ 0]]
			f15_arg0.CornerTR:completeAnimation() --[[ @ 0]]
			f15_arg0.CornerTR:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.CornerTR ) --[[ @ 0]]
			f15_arg0.MidR:completeAnimation() --[[ @ 0]]
			f15_arg0.MidR:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.MidR ) --[[ @ 0]]
			f15_arg0.CornerBR:completeAnimation() --[[ @ 0]]
			f15_arg0.CornerBR:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.CornerBR ) --[[ @ 0]]
			f15_arg0.PlayerInfo:completeAnimation() --[[ @ 0]]
			f15_arg0.PlayerInfo:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.PlayerInfo ) --[[ @ 0]]
			f15_arg0.ParachuteDeployIndicator:completeAnimation() --[[ @ 0]]
			f15_arg0.ParachuteDeployIndicator:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.ParachuteDeployIndicator ) --[[ @ 0]]
		end
	},
	HiddenPreference = {
		DefaultClip = function ( f16_arg0, f16_arg1 )
			f16_arg0:__resetProperties() --[[ @ 0]]
			f16_arg0:setupElementClipCounter( 10 ) --[[ @ 0]]
			f16_arg0.SceneBlur:completeAnimation() --[[ @ 0]]
			f16_arg0.SceneBlur:setAlpha( 0 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.SceneBlur ) --[[ @ 0]]
			f16_arg0.Texture:completeAnimation() --[[ @ 0]]
			f16_arg0.Texture:setAlpha( 0 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.Texture ) --[[ @ 0]]
			f16_arg0.GroundFill:completeAnimation() --[[ @ 0]]
			f16_arg0.GroundFill:setAlpha( 0 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.GroundFill ) --[[ @ 0]]
			f16_arg0.ParachuteDeployLine:completeAnimation() --[[ @ 0]]
			f16_arg0.ParachuteDeployLine:setAlpha( 0 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.ParachuteDeployLine ) --[[ @ 0]]
			f16_arg0.MeterR:completeAnimation() --[[ @ 0]]
			f16_arg0.MeterR:setAlpha( 0 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.MeterR ) --[[ @ 0]]
			f16_arg0.CornerTR:completeAnimation() --[[ @ 0]]
			f16_arg0.CornerTR:setAlpha( 0 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.CornerTR ) --[[ @ 0]]
			f16_arg0.MidR:completeAnimation() --[[ @ 0]]
			f16_arg0.MidR:setAlpha( 0 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.MidR ) --[[ @ 0]]
			f16_arg0.CornerBR:completeAnimation() --[[ @ 0]]
			f16_arg0.CornerBR:setAlpha( 0 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.CornerBR ) --[[ @ 0]]
			f16_arg0.PlayerInfo:completeAnimation() --[[ @ 0]]
			f16_arg0.PlayerInfo:setAlpha( 0 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.PlayerInfo ) --[[ @ 0]]
			f16_arg0.ParachuteDeployIndicator:completeAnimation() --[[ @ 0]]
			f16_arg0.ParachuteDeployIndicator:setAlpha( 0 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.ParachuteDeployIndicator ) --[[ @ 0]]
		end
	},
	Visible = {
		DefaultClip = function ( f17_arg0, f17_arg1 )
			f17_arg0:__resetProperties() --[[ @ 0]]
			f17_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.FallMeter.__onClose = function ( f18_arg0 )
	f18_arg0.GroundFill:close() --[[ @ 0]]
	f18_arg0.ParachuteDeployLine:close() --[[ @ 0]]
	f18_arg0.PlayerInfo:close() --[[ @ 0]]
	f18_arg0.ParachuteDeployIndicator:close() --[[ @ 0]]
end
 --[[ @ 0]]
