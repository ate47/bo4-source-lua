-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:33
require( "ui/uieditor/widgets/backgroundframes/genericmenuframeidentity" ) --[[ @ 0]]
require( "x64:3d017063fe3d07bc" ) --[[ @ 0]]
require( "ui/uieditor/widgets/startmenu/options/startmenuoptionsbackground" ) --[[ @ 0]]
require( "ui/uieditor/widgets/store/storespinner" ) --[[ @ 0]]

CoD.BlackMarketContracts = InheritFrom( CoD.Menu ) --[[ @ 0]]
LUI.createMenu.BlackMarketContracts = function ( f1_arg0, f1_arg1 )
	local self = CoD.Menu.NewForUIEditor( "BlackMarketContracts", f1_arg0 ) --[[ @ 0]]
	local f1_local1 = self --[[ @ 0]]
	CoD.BlackMarketUtility.SetupContractAvailabilityTimers( f1_arg0, f1_local1 ) --[[ @ 0]]
	SetControllerModelValue( f1_arg0, "Contracts.contractsAvailable", true ) --[[ @ 0]]
	self:setClass( CoD.BlackMarketContracts ) --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self:setOwner( f1_arg0 ) --[[ @ 0]]
	self:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	self:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	self:playSound( "menu_open", f1_arg0 ) --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_local1:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local StartMenuOptionsBackground = CoD.StartMenuOptionsBackground.new( f1_local1, f1_arg0, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	StartMenuOptionsBackground:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( StartMenuOptionsBackground ) --[[ @ 0]]
	self.StartMenuOptionsBackground = StartMenuOptionsBackground --[[ @ 0]]
	
	local DailyContracts = LUI.UIText.new( 0.5, 0.5, -960.5, 959.5, 0.5, 0.5, -85.5, -35.5 ) --[[ @ 0]]
	DailyContracts:setRGB( ColorSet.T8__BIEGE.r, ColorSet.T8__BIEGE.g, ColorSet.T8__BIEGE.b ) --[[ @ 0]]
	DailyContracts:setAlpha( 0 ) --[[ @ 0]]
	DailyContracts:setText( LocalizeToUpperString( @"hash_1CE4BBA3DD91278" ) ) --[[ @ 0]]
	DailyContracts:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	DailyContracts:setLetterSpacing( 2 ) --[[ @ 0]]
	DailyContracts:setAlignment( Enum[@"LUIAlignment"][@"hash_1FEEB12BCB0D7041"] ) --[[ @ 0]]
	self:addElement( DailyContracts ) --[[ @ 0]]
	self.DailyContracts = DailyContracts --[[ @ 0]]
	
	local BMContractsFrame = CoD.BM_ContractsFrame.new( f1_local1, f1_arg0, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	self:addElement( BMContractsFrame ) --[[ @ 0]]
	self.BMContractsFrame = BMContractsFrame --[[ @ 0]]
	
	local GenericMenuFrameIdentity = CoD.GenericMenuFrameIdentity.new( f1_local1, f1_arg0, 0.5, 0.5, -960, 960, 0, 1, 0, 0 ) --[[ @ 0]]
	GenericMenuFrameIdentity:subscribeToGlobalModel( f1_arg0, "LobbyRoot", "lobbyMainMode", function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			GenericMenuFrameIdentity.CommonHeader.subtitle.StageTitle:setText( Engine[@"hash_4F9F1239CFD921FE"]( CoD.BlackMarketUtility.GetContractHeaderStringFromLobbyMainMode( f1_arg0, f2_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	GenericMenuFrameIdentity:subscribeToGlobalModel( f1_arg0, "LobbyRoot", "lobbyTitle", function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			GenericMenuFrameIdentity.CommonHeader.subtitle.subtitle:setText( Engine[@"hash_4F9F1239CFD921FE"]( f3_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( GenericMenuFrameIdentity ) --[[ @ 0]]
	self.GenericMenuFrameIdentity = GenericMenuFrameIdentity --[[ @ 0]]
	
	local Spinner = CoD.StoreSpinner.new( f1_local1, f1_arg0, 0.5, 0.5, -48, 48, 0.5, 0.5, -8, 88 ) --[[ @ 0]]
	Spinner:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( Spinner ) --[[ @ 0]]
	self.Spinner = Spinner --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "ContractsUnavailable",
			condition = function ( menu, element, event )
				return not CoD.ModelUtility.IsControllerModelValueTrue( f1_arg0, "Contracts.contractsAvailable" )
			end
		}
	} ) --[[ @ 0]]
	local f1_local7 = self --[[ @ 0]]
	local f1_local8 = self.subscribeToModel --[[ @ 0]]
	local f1_local9 = Engine[@"GetModelForController"]( f1_arg0 ) --[[ @ 0]]
	f1_local8( f1_local7, f1_local9["Contracts.contractsAvailable"], function ( f5_arg0 )
		f1_local1:updateElementState( self, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f5_arg0:get(),
			modelName = "Contracts.contractsAvailable"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"], nil, function ( element, menu, controller, model )
		ForceNotifyControllerModel( controller, "Contracts.updateActiveContracts" ) --[[ @ 0]]
		GoBack( self, controller ) --[[ @ 0]]
		PlaySoundAlias( "uin_cmn_backout" ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"], @"hash_370A9FDC87CD3D48", nil, nil ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( self, "close", function ( element )
		CoD.BlackMarketUtility.ClearContractModeOverride( f1_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self.__on_menuOpened_self = function ( f9_arg0, f9_arg1, f9_arg2, f9_arg3 )
		local f9_local0 = self --[[ @ 0]]
		CoD.BlackMarketUtility.ClearCompletedActiveContracts( f9_arg1, f9_arg2 ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	f1_local1:addMenuOpenedCallback( self.__on_menuOpened_self ) --[[ @ 0]]
	self:subscribeToGlobalModel( f1_arg0, "PerController", "Contracts.contractsAvailable", function ( model )
		local f10_local0 = self --[[ @ 0]]
		if not CoD.ModelUtility.IsControllerModelValueTrue( f1_arg0, "Contracts.contractsAvailable" ) then
			CoD.BlackMarketUtility.SetupContractRetryTimer( f1_arg0, f1_local1 ) --[[ @ 0]]
		elseif CoD.ModelUtility.IsControllerModelValueTrue( f1_arg0, "Contracts.contractsAvailable" ) then
			CoD.BlackMarketUtility.ClearContractRetryTimer( f1_arg0, f1_local1 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	BMContractsFrame.id = "BMContractsFrame" --[[ @ 0]]
	GenericMenuFrameIdentity:setModel( self.buttonModel, f1_arg0 ) --[[ @ 0]]
	GenericMenuFrameIdentity.id = "GenericMenuFrameIdentity" --[[ @ 0]]
	self:processEvent( {
		name = "menu_loaded",
		controller = f1_arg0
	} ) --[[ @ 0]]
	self.__defaultFocus = BMContractsFrame --[[ @ 0]]
	if CoD.isPC and (IsKeyboard( f1_arg0 ) or self.ignoreCursor) then
		self:restoreState( f1_arg0 ) --[[ @ 0]]
	end
	self.__on_close_removeOverrides = function ()
		f1_local1:removeMenuOpenedCallback( self.__on_menuOpened_self ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.BlackMarketContracts.__resetProperties = function ( f12_arg0 )
	f12_arg0.BMContractsFrame:completeAnimation() --[[ @ 0]]
	f12_arg0.StartMenuOptionsBackground:completeAnimation() --[[ @ 0]]
	f12_arg0.DailyContracts:completeAnimation() --[[ @ 0]]
	f12_arg0.Spinner:completeAnimation() --[[ @ 0]]
	f12_arg0.BMContractsFrame:setAlpha( 1 ) --[[ @ 0]]
	f12_arg0.StartMenuOptionsBackground:setAlpha( 0 ) --[[ @ 0]]
	f12_arg0.DailyContracts:setAlpha( 0 ) --[[ @ 0]]
	f12_arg0.Spinner:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.BlackMarketContracts.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f13_arg0, f13_arg1 )
			f13_arg0:__resetProperties() --[[ @ 0]]
			f13_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	ContractsUnavailable = {
		DefaultClip = function ( f14_arg0, f14_arg1 )
			f14_arg0:__resetProperties() --[[ @ 0]]
			f14_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f14_arg0.StartMenuOptionsBackground:completeAnimation() --[[ @ 0]]
			f14_arg0.StartMenuOptionsBackground:setAlpha( 1 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.StartMenuOptionsBackground ) --[[ @ 0]]
			f14_arg0.DailyContracts:completeAnimation() --[[ @ 0]]
			f14_arg0.DailyContracts:setAlpha( 1 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.DailyContracts ) --[[ @ 0]]
			f14_arg0.BMContractsFrame:completeAnimation() --[[ @ 0]]
			f14_arg0.BMContractsFrame:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.BMContractsFrame ) --[[ @ 0]]
			f14_arg0.Spinner:completeAnimation() --[[ @ 0]]
			f14_arg0.Spinner:setAlpha( 1 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.Spinner ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.BlackMarketContracts.__onClose = function ( f15_arg0 )
	f15_arg0.__on_close_removeOverrides() --[[ @ 0]]
	f15_arg0.StartMenuOptionsBackground:close() --[[ @ 0]]
	f15_arg0.BMContractsFrame:close() --[[ @ 0]]
	f15_arg0.GenericMenuFrameIdentity:close() --[[ @ 0]]
	f15_arg0.Spinner:close() --[[ @ 0]]
end
 --[[ @ 0]]
