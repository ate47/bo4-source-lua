-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:50
require( "x64:76c0a92e345d6635" ) --[[ @ 0]]
require( "x64:493a575a7ca17e04" ) --[[ @ 0]]
require( "x64:694e166fa0d10785" ) --[[ @ 0]]
require( "x64:59f7790271138ea3" ) --[[ @ 0]]
require( "ui/uieditor/widgets/scoreboard/tabbedscoreboardrank" ) --[[ @ 0]]

CoD.OverheadName_ZM = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.OverheadName_ZM.__defaultWidth = 200 --[[ @ 0]]
CoD.OverheadName_ZM.__defaultHeight = 75 --[[ @ 0]]
CoD.OverheadName_ZM.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.OverheadName_ZM ) --[[ @ 0]]
	self.id = "OverheadName_ZM" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local PlayerNameAndClanTagBG = CoD.OverheadName_PlayerNameAndClanTag.new( f1_arg0, f1_arg1, 0, 0, 32.5, 167.5, 0, 0, 26.5, 63.5 ) --[[ @ 0]]
	PlayerNameAndClanTagBG:setRGB( 0, 0, 0 ) --[[ @ 0]]
	PlayerNameAndClanTagBG:linkToElementModel( self, nil, false, function ( model )
		PlayerNameAndClanTagBG:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( PlayerNameAndClanTagBG ) --[[ @ 0]]
	self.PlayerNameAndClanTagBG = PlayerNameAndClanTagBG --[[ @ 0]]
	
	local PlayerNameAndClanTag = CoD.OverheadName_PlayerNameAndClanTag.new( f1_arg0, f1_arg1, 0, 0, 32.5, 167.5, 0, 0, 26.5, 63.5 ) --[[ @ 0]]
	PlayerNameAndClanTag.__Color = function ( f3_arg0 )
		local f3_local0 = f3_arg0:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			PlayerNameAndClanTag:setRGB( CoD.HUDUtility.GetPlayerNameColorByClientNum( f1_arg1, f3_local0 ) ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	PlayerNameAndClanTag:linkToElementModel( self, "clientNum", true, PlayerNameAndClanTag.__Color ) --[[ @ 0]]
	PlayerNameAndClanTag.__Color_FullPath = function ()
		local f4_local0 = self:getModel() --[[ @ 0]]
		if f4_local0 then
			f4_local0 = self:getModel() --[[ @ 0]]
			f4_local0 = f4_local0.clientNum --[[ @ 0]]
		end
		if f4_local0 then
			PlayerNameAndClanTag.__Color( f4_local0 ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	PlayerNameAndClanTag:linkToElementModel( self, nil, false, function ( model )
		PlayerNameAndClanTag:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( PlayerNameAndClanTag ) --[[ @ 0]]
	self.PlayerNameAndClanTag = PlayerNameAndClanTag --[[ @ 0]]
	
	local HealthBar = CoD.HealthBar.new( f1_arg0, f1_arg1, 0, 0, 36.5, 164.5, 0, 0, 12.5, 29.5 ) --[[ @ 0]]
	HealthBar:linkToElementModel( self, "health", false, function ( model )
		HealthBar:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	HealthBar.HealthFill.__Health_Bar_Color = function ( f7_arg0 )
		local f7_local0 = f7_arg0:get() --[[ @ 0]]
		if f7_local0 ~= nil then
			HealthBar.HealthFill:setRGB( CoD.HUDUtility.GetPlayerHealthBarColorByClientNum( f1_arg1, f7_local0 ) ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	HealthBar:linkToElementModel( self, "clientNum", true, HealthBar.HealthFill.__Health_Bar_Color ) --[[ @ 0]]
	HealthBar.HealthFill.__Health_Bar_Color_FullPath = function ()
		local f8_local0 = self:getModel() --[[ @ 0]]
		if f8_local0 then
			f8_local0 = self:getModel() --[[ @ 0]]
			f8_local0 = f8_local0.clientNum --[[ @ 0]]
		end
		if f8_local0 then
			HealthBar.HealthFill.__Health_Bar_Color( f8_local0 ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	self:addElement( HealthBar ) --[[ @ 0]]
	self.HealthBar = HealthBar --[[ @ 0]]
	
	local VOIPImage = LUI.UIImage.new( 0, 0, -2.5, 32.5, 0, 0, 24.5, 59.5 ) --[[ @ 0]]
	VOIPImage:linkToElementModel( self, "clientNum", true, function ( model )
		local f9_local0 = model:get() --[[ @ 0]]
		if f9_local0 ~= nil then
			VOIPImage:setupVoipImage( f9_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( VOIPImage ) --[[ @ 0]]
	self.VOIPImage = VOIPImage --[[ @ 0]]
	
	local ArmorBar = CoD.ArmorBar.new( f1_arg0, f1_arg1, 0, 0, 36.5, 164.5, 0, 0, 9.5, 13.5 ) --[[ @ 0]]
	ArmorBar:linkToElementModel( self, nil, false, function ( model )
		ArmorBar:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( ArmorBar ) --[[ @ 0]]
	self.ArmorBar = ArmorBar --[[ @ 0]]
	
	local ArmorOverheadName = CoD.ArmorPortraitZM.new( f1_arg0, f1_arg1, 0, 0, 167.5, 197.5, 0, 0, -2.5, 27.5 ) --[[ @ 0]]
	ArmorOverheadName:linkToElementModel( self, nil, false, function ( model )
		ArmorOverheadName:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( ArmorOverheadName ) --[[ @ 0]]
	self.ArmorOverheadName = ArmorOverheadName --[[ @ 0]]
	
	local Rank = CoD.TabbedScoreboardRank.new( f1_arg0, f1_arg1, 0, 0, 5, 25, 0.5, 0.5, -30, 30 ) --[[ @ 0]]
	Rank:linkToElementModel( self, nil, false, function ( model )
		Rank:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( Rank ) --[[ @ 0]]
	self.Rank = Rank --[[ @ 0]]
	
	local f1_local8 = PlayerNameAndClanTag --[[ @ 0]]
	local f1_local9 = PlayerNameAndClanTag.subscribeToModel --[[ @ 0]]
	local f1_local10 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local9( f1_local8, f1_local10["profile.colorblindMode"], PlayerNameAndClanTag.__Color_FullPath ) --[[ @ 0]]
	PlayerNameAndClanTag:linkToElementModel( self, "team", true, PlayerNameAndClanTag.__Color_FullPath ) --[[ @ 0]]
	f1_local8 = HealthBar --[[ @ 0]]
	f1_local9 = HealthBar.subscribeToModel --[[ @ 0]]
	f1_local10 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local9( f1_local8, f1_local10["profile.colorblindMode"], HealthBar.HealthFill.__Health_Bar_Color_FullPath ) --[[ @ 0]]
	HealthBar:linkToElementModel( self, "team", true, HealthBar.HealthFill.__Health_Bar_Color_FullPath ) --[[ @ 0]]
	self:mergeStateConditions( {
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg1, "clientInvisible" )
			end
		},
		{
			stateName = "VisibleShowRank",
			condition = function ( menu, element, event )
				local f14_local0 --[[ @ 0]]
				if not CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg1, "dead" ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_is_flash_banged"] ) then
					f14_local0 = IsPublicOnlineGame() --[[ @ 0]]
				else
					f14_local0 = false --[[ @ 0]]
				end
				return f14_local0
			end
		},
		{
			stateName = "Visible",
			condition = function ( menu, element, event )
				local f15_local0 --[[ @ 0]]
				if not CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg1, "dead" ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_is_flash_banged"] ) then
					f15_local0 = not IsPublicOnlineGame() --[[ @ 0]]
				else
					f15_local0 = false --[[ @ 0]]
				end
				return f15_local0
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "clientInvisible", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "clientInvisible"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:linkToElementModel( self, "dead", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "dead"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	f1_local8 = self --[[ @ 0]]
	f1_local9 = self.subscribeToModel --[[ @ 0]]
	f1_local10 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local9( f1_local8, f1_local10["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_flash_banged"]], function ( f18_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f18_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_flash_banged"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	f1_local9 = self --[[ @ 0]]
	CoD.HUDUtility.UpdateClientHealth( self, f1_arg1 ) --[[ @ 0]]
	CoD.ZombieUtility.TrialsNoHudPostLoad( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	SetElementProperty( f1_local9, "isOverheadName", true ) --[[ @ 0]]
	return self
end
 --[[ @ 0]]
CoD.OverheadName_ZM.__resetProperties = function ( f19_arg0 )
	f19_arg0.HealthBar:completeAnimation() --[[ @ 0]]
	f19_arg0.PlayerNameAndClanTag:completeAnimation() --[[ @ 0]]
	f19_arg0.PlayerNameAndClanTagBG:completeAnimation() --[[ @ 0]]
	f19_arg0.VOIPImage:completeAnimation() --[[ @ 0]]
	f19_arg0.Rank:completeAnimation() --[[ @ 0]]
	f19_arg0.ArmorBar:completeAnimation() --[[ @ 0]]
	f19_arg0.ArmorOverheadName:completeAnimation() --[[ @ 0]]
	f19_arg0.HealthBar:setAlpha( 1 ) --[[ @ 0]]
	f19_arg0.PlayerNameAndClanTag:setAlpha( 1 ) --[[ @ 0]]
	f19_arg0.PlayerNameAndClanTagBG:setAlpha( 1 ) --[[ @ 0]]
	f19_arg0.VOIPImage:setLeftRight( 0, 0, -2.5, 32.5 ) --[[ @ 0]]
	f19_arg0.VOIPImage:setAlpha( 1 ) --[[ @ 0]]
	f19_arg0.Rank:setAlpha( 1 ) --[[ @ 0]]
	f19_arg0.ArmorBar:setAlpha( 1 ) --[[ @ 0]]
	f19_arg0.ArmorOverheadName:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.OverheadName_ZM.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f20_arg0, f20_arg1 )
			f20_arg0:__resetProperties() --[[ @ 0]]
			f20_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f20_arg0.PlayerNameAndClanTagBG:completeAnimation() --[[ @ 0]]
			f20_arg0.PlayerNameAndClanTagBG:setAlpha( 0 ) --[[ @ 0]]
			f20_arg0.clipFinished( f20_arg0.PlayerNameAndClanTagBG ) --[[ @ 0]]
			f20_arg0.PlayerNameAndClanTag:completeAnimation() --[[ @ 0]]
			f20_arg0.PlayerNameAndClanTag:setAlpha( 0 ) --[[ @ 0]]
			f20_arg0.clipFinished( f20_arg0.PlayerNameAndClanTag ) --[[ @ 0]]
			f20_arg0.HealthBar:completeAnimation() --[[ @ 0]]
			f20_arg0.HealthBar:setAlpha( 0 ) --[[ @ 0]]
			f20_arg0.clipFinished( f20_arg0.HealthBar ) --[[ @ 0]]
		end
	},
	Hidden = {
		DefaultClip = function ( f21_arg0, f21_arg1 )
			f21_arg0:__resetProperties() --[[ @ 0]]
			f21_arg0:setupElementClipCounter( 7 ) --[[ @ 0]]
			f21_arg0.PlayerNameAndClanTagBG:completeAnimation() --[[ @ 0]]
			f21_arg0.PlayerNameAndClanTagBG:setAlpha( 0 ) --[[ @ 0]]
			f21_arg0.clipFinished( f21_arg0.PlayerNameAndClanTagBG ) --[[ @ 0]]
			f21_arg0.PlayerNameAndClanTag:completeAnimation() --[[ @ 0]]
			f21_arg0.PlayerNameAndClanTag:setAlpha( 0 ) --[[ @ 0]]
			f21_arg0.clipFinished( f21_arg0.PlayerNameAndClanTag ) --[[ @ 0]]
			f21_arg0.HealthBar:completeAnimation() --[[ @ 0]]
			f21_arg0.HealthBar:setAlpha( 0 ) --[[ @ 0]]
			f21_arg0.clipFinished( f21_arg0.HealthBar ) --[[ @ 0]]
			f21_arg0.VOIPImage:completeAnimation() --[[ @ 0]]
			f21_arg0.VOIPImage:setAlpha( 0 ) --[[ @ 0]]
			f21_arg0.clipFinished( f21_arg0.VOIPImage ) --[[ @ 0]]
			f21_arg0.ArmorBar:completeAnimation() --[[ @ 0]]
			f21_arg0.ArmorBar:setAlpha( 0 ) --[[ @ 0]]
			f21_arg0.clipFinished( f21_arg0.ArmorBar ) --[[ @ 0]]
			f21_arg0.ArmorOverheadName:completeAnimation() --[[ @ 0]]
			f21_arg0.ArmorOverheadName:setAlpha( 0 ) --[[ @ 0]]
			f21_arg0.clipFinished( f21_arg0.ArmorOverheadName ) --[[ @ 0]]
			f21_arg0.Rank:completeAnimation() --[[ @ 0]]
			f21_arg0.Rank:setAlpha( 0 ) --[[ @ 0]]
			f21_arg0.clipFinished( f21_arg0.Rank ) --[[ @ 0]]
		end
	},
	VisibleShowRank = {
		DefaultClip = function ( f22_arg0, f22_arg1 )
			f22_arg0:__resetProperties() --[[ @ 0]]
			f22_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f22_arg0.PlayerNameAndClanTagBG:completeAnimation() --[[ @ 0]]
			f22_arg0.PlayerNameAndClanTagBG:setAlpha( 1 ) --[[ @ 0]]
			f22_arg0.clipFinished( f22_arg0.PlayerNameAndClanTagBG ) --[[ @ 0]]
			f22_arg0.PlayerNameAndClanTag:completeAnimation() --[[ @ 0]]
			f22_arg0.PlayerNameAndClanTag:setAlpha( 1 ) --[[ @ 0]]
			f22_arg0.clipFinished( f22_arg0.PlayerNameAndClanTag ) --[[ @ 0]]
			f22_arg0.HealthBar:completeAnimation() --[[ @ 0]]
			f22_arg0.HealthBar:setAlpha( 1 ) --[[ @ 0]]
			f22_arg0.clipFinished( f22_arg0.HealthBar ) --[[ @ 0]]
			f22_arg0.VOIPImage:completeAnimation() --[[ @ 0]]
			f22_arg0.VOIPImage:setLeftRight( 0, 0, -30, 5 ) --[[ @ 0]]
			f22_arg0.clipFinished( f22_arg0.VOIPImage ) --[[ @ 0]]
		end
	},
	Visible = {
		DefaultClip = function ( f23_arg0, f23_arg1 )
			f23_arg0:__resetProperties() --[[ @ 0]]
			f23_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f23_arg0.PlayerNameAndClanTagBG:completeAnimation() --[[ @ 0]]
			f23_arg0.PlayerNameAndClanTagBG:setAlpha( 1 ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.PlayerNameAndClanTagBG ) --[[ @ 0]]
			f23_arg0.PlayerNameAndClanTag:completeAnimation() --[[ @ 0]]
			f23_arg0.PlayerNameAndClanTag:setAlpha( 1 ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.PlayerNameAndClanTag ) --[[ @ 0]]
			f23_arg0.HealthBar:completeAnimation() --[[ @ 0]]
			f23_arg0.HealthBar:setAlpha( 1 ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.HealthBar ) --[[ @ 0]]
			f23_arg0.Rank:completeAnimation() --[[ @ 0]]
			f23_arg0.Rank:setAlpha( 0 ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.Rank ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.OverheadName_ZM.__onClose = function ( f24_arg0 )
	f24_arg0.PlayerNameAndClanTagBG:close() --[[ @ 0]]
	f24_arg0.PlayerNameAndClanTag:close() --[[ @ 0]]
	f24_arg0.HealthBar:close() --[[ @ 0]]
	f24_arg0.VOIPImage:close() --[[ @ 0]]
	f24_arg0.ArmorBar:close() --[[ @ 0]]
	f24_arg0.ArmorOverheadName:close() --[[ @ 0]]
	f24_arg0.Rank:close() --[[ @ 0]]
end
 --[[ @ 0]]
