-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:49
require( "ui/uieditor/widgets/hud/zm_ammowidgetfactory/zmammofactory" ) --[[ @ 0]]

CoD.ZmAmmoContainerFactory = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.ZmAmmoContainerFactory.__defaultWidth = 510 --[[ @ 0]]
CoD.ZmAmmoContainerFactory.__defaultHeight = 373 --[[ @ 0]]
CoD.ZmAmmoContainerFactory.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.ZmAmmoContainerFactory ) --[[ @ 0]]
	self.id = "ZmAmmoContainerFactory" --[[ @ 0]]
	self.soundSet = "HUD" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local bgbGlowOrangeOver = LUI.UIImage.new( 0.5, 0.5, 27, 466, 0.5, 0.5, -252.5, 253.5 ) --[[ @ 0]]
	bgbGlowOrangeOver:setRGB( ColorSet.GroupName.r, ColorSet.GroupName.g, ColorSet.GroupName.b ) --[[ @ 0]]
	bgbGlowOrangeOver:setAlpha( 0 ) --[[ @ 0]]
	bgbGlowOrangeOver:setZRot( 90 ) --[[ @ 0]]
	bgbGlowOrangeOver:setImage( RegisterImage( @"uie_t7_core_hud_mapwidget_panelglow" ) ) --[[ @ 0]]
	bgbGlowOrangeOver:setMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	self:addElement( bgbGlowOrangeOver ) --[[ @ 0]]
	self.bgbGlowOrangeOver = bgbGlowOrangeOver --[[ @ 0]]
	
	local ZmAmmo = CoD.ZmAmmoFactory.new( f1_arg0, f1_arg1, 0, 0, 0, 510, 0, 0, 0, 374 ) --[[ @ 0]]
	ZmAmmo:mergeStateConditions( {
		{
			stateName = "HudStartPC",
			condition = function ( menu, element, event )
				local f2_local0 = IsPC() --[[ @ 0]]
				if f2_local0 then
					f2_local0 = CoD.ModelUtility.IsModelValueTrue( f1_arg1, "hudItems.playerSpawned" ) --[[ @ 0]]
					if f2_local0 then
						if not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_demo_all_game_hud_hidden"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_demo_camera_mode_moviecam"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_emp_active"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_game_ended"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_hud_hardcore"] ) and Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_hud_visible"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_guided_missile"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_killcam"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_remote_killstreak_static"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"hash_29BF57CE75A8755E"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_vehicle"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_is_flash_banged"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_is_scoped"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_ui_active"] ) then
							f2_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_weapon_hud_visible"] ) --[[ @ 0]]
						else
							f2_local0 = false --[[ @ 0]]
						end
					end
				end
				return f2_local0
			end
		},
		{
			stateName = "HudStart",
			condition = function ( menu, element, event )
				local f3_local0 = CoD.ModelUtility.IsModelValueTrue( f1_arg1, "hudItems.playerSpawned" ) --[[ @ 0]]
				if f3_local0 then
					if not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_demo_all_game_hud_hidden"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_demo_camera_mode_moviecam"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_emp_active"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_game_ended"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_hud_hardcore"] ) and Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_hud_visible"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_guided_missile"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_killcam"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_remote_killstreak_static"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"hash_29BF57CE75A8755E"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_vehicle"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_is_flash_banged"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_is_scoped"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_ui_active"] ) then
						f3_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_weapon_hud_visible"] ) --[[ @ 0]]
					else
						f3_local0 = false --[[ @ 0]]
					end
				end
				return f3_local0
			end
		}
	} ) --[[ @ 0]]
	local bgbAbilitySwirl = ZmAmmo --[[ @ 0]]
	local CrossAbilities = ZmAmmo.subscribeToModel --[[ @ 0]]
	local f1_local5 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	CrossAbilities( bgbAbilitySwirl, f1_local5["hudItems.playerSpawned"], function ( f4_arg0 )
		f1_arg0:updateElementState( ZmAmmo, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f4_arg0:get(),
			modelName = "hudItems.playerSpawned"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	bgbAbilitySwirl = ZmAmmo --[[ @ 0]]
	CrossAbilities = ZmAmmo.subscribeToModel --[[ @ 0]]
	f1_local5 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	CrossAbilities( bgbAbilitySwirl, f1_local5["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_demo_all_game_hud_hidden"]], function ( f5_arg0 )
		f1_arg0:updateElementState( ZmAmmo, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f5_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_demo_all_game_hud_hidden"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	bgbAbilitySwirl = ZmAmmo --[[ @ 0]]
	CrossAbilities = ZmAmmo.subscribeToModel --[[ @ 0]]
	f1_local5 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	CrossAbilities( bgbAbilitySwirl, f1_local5["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_demo_camera_mode_moviecam"]], function ( f6_arg0 )
		f1_arg0:updateElementState( ZmAmmo, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f6_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_demo_camera_mode_moviecam"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	bgbAbilitySwirl = ZmAmmo --[[ @ 0]]
	CrossAbilities = ZmAmmo.subscribeToModel --[[ @ 0]]
	f1_local5 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	CrossAbilities( bgbAbilitySwirl, f1_local5["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_emp_active"]], function ( f7_arg0 )
		f1_arg0:updateElementState( ZmAmmo, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f7_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_emp_active"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	bgbAbilitySwirl = ZmAmmo --[[ @ 0]]
	CrossAbilities = ZmAmmo.subscribeToModel --[[ @ 0]]
	f1_local5 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	CrossAbilities( bgbAbilitySwirl, f1_local5["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_game_ended"]], function ( f8_arg0 )
		f1_arg0:updateElementState( ZmAmmo, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f8_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_game_ended"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	bgbAbilitySwirl = ZmAmmo --[[ @ 0]]
	CrossAbilities = ZmAmmo.subscribeToModel --[[ @ 0]]
	f1_local5 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	CrossAbilities( bgbAbilitySwirl, f1_local5["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_hud_hardcore"]], function ( f9_arg0 )
		f1_arg0:updateElementState( ZmAmmo, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f9_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_hud_hardcore"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	bgbAbilitySwirl = ZmAmmo --[[ @ 0]]
	CrossAbilities = ZmAmmo.subscribeToModel --[[ @ 0]]
	f1_local5 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	CrossAbilities( bgbAbilitySwirl, f1_local5["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_hud_visible"]], function ( f10_arg0 )
		f1_arg0:updateElementState( ZmAmmo, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f10_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_hud_visible"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	bgbAbilitySwirl = ZmAmmo --[[ @ 0]]
	CrossAbilities = ZmAmmo.subscribeToModel --[[ @ 0]]
	f1_local5 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	CrossAbilities( bgbAbilitySwirl, f1_local5["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_guided_missile"]], function ( f11_arg0 )
		f1_arg0:updateElementState( ZmAmmo, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f11_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_guided_missile"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	bgbAbilitySwirl = ZmAmmo --[[ @ 0]]
	CrossAbilities = ZmAmmo.subscribeToModel --[[ @ 0]]
	f1_local5 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	CrossAbilities( bgbAbilitySwirl, f1_local5["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_killcam"]], function ( f12_arg0 )
		f1_arg0:updateElementState( ZmAmmo, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f12_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_killcam"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	bgbAbilitySwirl = ZmAmmo --[[ @ 0]]
	CrossAbilities = ZmAmmo.subscribeToModel --[[ @ 0]]
	f1_local5 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	CrossAbilities( bgbAbilitySwirl, f1_local5["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_remote_killstreak_static"]], function ( f13_arg0 )
		f1_arg0:updateElementState( ZmAmmo, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f13_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_remote_killstreak_static"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	bgbAbilitySwirl = ZmAmmo --[[ @ 0]]
	CrossAbilities = ZmAmmo.subscribeToModel --[[ @ 0]]
	f1_local5 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	CrossAbilities( bgbAbilitySwirl, f1_local5["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"hash_29BF57CE75A8755E"]], function ( f14_arg0 )
		f1_arg0:updateElementState( ZmAmmo, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f14_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"hash_29BF57CE75A8755E"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	bgbAbilitySwirl = ZmAmmo --[[ @ 0]]
	CrossAbilities = ZmAmmo.subscribeToModel --[[ @ 0]]
	f1_local5 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	CrossAbilities( bgbAbilitySwirl, f1_local5["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_vehicle"]], function ( f15_arg0 )
		f1_arg0:updateElementState( ZmAmmo, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f15_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_vehicle"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	bgbAbilitySwirl = ZmAmmo --[[ @ 0]]
	CrossAbilities = ZmAmmo.subscribeToModel --[[ @ 0]]
	f1_local5 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	CrossAbilities( bgbAbilitySwirl, f1_local5["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_flash_banged"]], function ( f16_arg0 )
		f1_arg0:updateElementState( ZmAmmo, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f16_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_flash_banged"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	bgbAbilitySwirl = ZmAmmo --[[ @ 0]]
	CrossAbilities = ZmAmmo.subscribeToModel --[[ @ 0]]
	f1_local5 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	CrossAbilities( bgbAbilitySwirl, f1_local5["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_scoped"]], function ( f17_arg0 )
		f1_arg0:updateElementState( ZmAmmo, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f17_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_scoped"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	bgbAbilitySwirl = ZmAmmo --[[ @ 0]]
	CrossAbilities = ZmAmmo.subscribeToModel --[[ @ 0]]
	f1_local5 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	CrossAbilities( bgbAbilitySwirl, f1_local5["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_ui_active"]], function ( f18_arg0 )
		f1_arg0:updateElementState( ZmAmmo, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f18_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_ui_active"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	bgbAbilitySwirl = ZmAmmo --[[ @ 0]]
	CrossAbilities = ZmAmmo.subscribeToModel --[[ @ 0]]
	f1_local5 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	CrossAbilities( bgbAbilitySwirl, f1_local5["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_weapon_hud_visible"]], function ( f19_arg0 )
		f1_arg0:updateElementState( ZmAmmo, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f19_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_weapon_hud_visible"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:addElement( ZmAmmo ) --[[ @ 0]]
	self.ZmAmmo = ZmAmmo --[[ @ 0]]
	
	CrossAbilities = LUI.UIImage.new( 0, 0, 288, 709, 0, 0, 30, 344 ) --[[ @ 0]]
	CrossAbilities:setImage( RegisterImage( @"hash_469BEFB7E55FBA50" ) ) --[[ @ 0]]
	CrossAbilities:subscribeToGlobalModel( f1_arg1, "ZMHudGlobal", "trials.disableAbilities", function ( model )
		local f20_local0 = model:get() --[[ @ 0]]
		if f20_local0 ~= nil then
			CrossAbilities:setAlpha( f20_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( CrossAbilities ) --[[ @ 0]]
	self.CrossAbilities = CrossAbilities --[[ @ 0]]
	
	bgbAbilitySwirl = LUI.UIImage.new( 0.5, 0.5, 126.5, 365.5, 0, 0, 71, 307 ) --[[ @ 0]]
	bgbAbilitySwirl:setRGB( ColorSet.GroupName.r, ColorSet.GroupName.g, ColorSet.GroupName.b ) --[[ @ 0]]
	bgbAbilitySwirl:setAlpha( 0 ) --[[ @ 0]]
	bgbAbilitySwirl:setZRot( 330 ) --[[ @ 0]]
	bgbAbilitySwirl:setScale( 1.65, 1.65 ) --[[ @ 0]]
	bgbAbilitySwirl:setImage( RegisterImage( @"uie_t7_core_hud_ammowidget_abilityswirl" ) ) --[[ @ 0]]
	bgbAbilitySwirl:setMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	self:addElement( bgbAbilitySwirl ) --[[ @ 0]]
	self.bgbAbilitySwirl = bgbAbilitySwirl --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "ScoreboardPC",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalDataSourceModelValueTrue( f1_arg1, "ZMHudGlobal", "isScoreboardPCOpen" )
			end
		},
		{
			stateName = "hiddenTutorial",
			condition = function ( menu, element, event )
				return CoD.HUDUtility.IsAnyGameType( f1_arg1, "ztutorial" ) and CoD.ModelUtility.IsGlobalModelValueEqualTo( "hudItems.ztut.showElixirs", 0 )
			end
		},
		{
			stateName = "Invisible",
			condition = function ( menu, element, event )
				local f23_local0 = CoD.ModelUtility.IsModelValueTrue( f1_arg1, "hudItems.playerSpawned" ) --[[ @ 0]]
				if f23_local0 then
					f23_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_demo_all_game_hud_hidden"] ) --[[ @ 0]]
					if not f23_local0 then
						f23_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_demo_camera_mode_moviecam"] ) --[[ @ 0]]
						if not f23_local0 then
							f23_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_emp_active"] ) --[[ @ 0]]
							if not f23_local0 then
								f23_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_game_ended"] ) --[[ @ 0]]
								if not f23_local0 then
									f23_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_hud_hardcore"] ) --[[ @ 0]]
									if not f23_local0 then
										if Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_hud_visible"] ) then
											f23_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_guided_missile"] ) --[[ @ 0]]
											if not f23_local0 then
												f23_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_killcam"] ) --[[ @ 0]]
												if not f23_local0 then
													f23_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_remote_killstreak_static"] ) --[[ @ 0]]
													if not f23_local0 then
														f23_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"hash_29BF57CE75A8755E"] ) --[[ @ 0]]
														if not f23_local0 then
															f23_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_vehicle"] ) --[[ @ 0]]
															if not f23_local0 then
																f23_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_is_flash_banged"] ) --[[ @ 0]]
																if not f23_local0 then
																	f23_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_is_scoped"] ) --[[ @ 0]]
																	if not f23_local0 then
																		f23_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_ui_active"] ) --[[ @ 0]]
																		if not f23_local0 then
																			f23_local0 = not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_weapon_hud_visible"] ) --[[ @ 0]]
																		end
																	end
																end
															end
														end
													end
												end
											end
										else
											f23_local0 = true --[[ @ 0]]
										end
									end
								end
							end
						end
					end
				end
				return f23_local0
			end
		},
		{
			stateName = "ScoreboardKeyboardMouse",
			condition = function ( menu, element, event )
				return Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_scoreboard_open"] ) and IsMouseOrKeyboard( f1_arg1 )
			end
		},
		{
			stateName = "Scoreboard",
			condition = function ( menu, element, event )
				return Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_scoreboard_open"] )
			end
		}
	} ) --[[ @ 0]]
	local f1_local6 = self --[[ @ 0]]
	f1_local5 = self.subscribeToModel --[[ @ 0]]
	local f1_local7 = DataSources.ZMHudGlobal.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local5( f1_local6, f1_local7.isScoreboardPCOpen, function ( f26_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f26_arg0:get(),
			modelName = "isScoreboardPCOpen"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local6 = self --[[ @ 0]]
	f1_local5 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local5( f1_local6, f1_local7["hudItems.ztut.showElixirs"], function ( f27_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f27_arg0:get(),
			modelName = "hudItems.ztut.showElixirs"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local6 = self --[[ @ 0]]
	f1_local5 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local5( f1_local6, f1_local7["hudItems.playerSpawned"], function ( f28_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f28_arg0:get(),
			modelName = "hudItems.playerSpawned"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local6 = self --[[ @ 0]]
	f1_local5 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local5( f1_local6, f1_local7["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_demo_all_game_hud_hidden"]], function ( f29_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f29_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_demo_all_game_hud_hidden"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local6 = self --[[ @ 0]]
	f1_local5 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local5( f1_local6, f1_local7["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_demo_camera_mode_moviecam"]], function ( f30_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f30_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_demo_camera_mode_moviecam"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local6 = self --[[ @ 0]]
	f1_local5 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local5( f1_local6, f1_local7["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_emp_active"]], function ( f31_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f31_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_emp_active"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local6 = self --[[ @ 0]]
	f1_local5 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local5( f1_local6, f1_local7["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_game_ended"]], function ( f32_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f32_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_game_ended"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local6 = self --[[ @ 0]]
	f1_local5 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local5( f1_local6, f1_local7["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_hud_hardcore"]], function ( f33_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f33_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_hud_hardcore"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local6 = self --[[ @ 0]]
	f1_local5 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local5( f1_local6, f1_local7["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_hud_visible"]], function ( f34_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f34_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_hud_visible"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local6 = self --[[ @ 0]]
	f1_local5 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local5( f1_local6, f1_local7["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_guided_missile"]], function ( f35_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f35_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_guided_missile"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local6 = self --[[ @ 0]]
	f1_local5 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local5( f1_local6, f1_local7["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_killcam"]], function ( f36_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f36_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_killcam"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local6 = self --[[ @ 0]]
	f1_local5 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local5( f1_local6, f1_local7["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_remote_killstreak_static"]], function ( f37_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f37_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_remote_killstreak_static"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local6 = self --[[ @ 0]]
	f1_local5 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local5( f1_local6, f1_local7["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"hash_29BF57CE75A8755E"]], function ( f38_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f38_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"hash_29BF57CE75A8755E"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local6 = self --[[ @ 0]]
	f1_local5 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local5( f1_local6, f1_local7["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_vehicle"]], function ( f39_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f39_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_vehicle"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local6 = self --[[ @ 0]]
	f1_local5 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local5( f1_local6, f1_local7["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_flash_banged"]], function ( f40_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f40_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_flash_banged"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local6 = self --[[ @ 0]]
	f1_local5 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local5( f1_local6, f1_local7["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_scoped"]], function ( f41_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f41_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_scoped"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local6 = self --[[ @ 0]]
	f1_local5 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local5( f1_local6, f1_local7["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_ui_active"]], function ( f42_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f42_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_ui_active"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local6 = self --[[ @ 0]]
	f1_local5 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local5( f1_local6, f1_local7["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_weapon_hud_visible"]], function ( f43_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f43_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_weapon_hud_visible"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local6 = self --[[ @ 0]]
	f1_local5 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local5( f1_local6, f1_local7["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_scoreboard_open"]], function ( f44_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f44_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_scoreboard_open"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:appendEventHandler( "input_source_changed", function ( f45_arg0, f45_arg1 )
		f45_arg1.menu = f45_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( self, f45_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	f1_local6 = self --[[ @ 0]]
	f1_local5 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local5( f1_local6, f1_local7.LastInput, function ( f46_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f46_arg0:get(),
			modelName = "LastInput"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.ZmAmmoContainerFactory.__resetProperties = function ( f47_arg0 )
	f47_arg0.ZmAmmo:completeAnimation() --[[ @ 0]]
	f47_arg0.CrossAbilities:completeAnimation() --[[ @ 0]]
	f47_arg0.bgbAbilitySwirl:completeAnimation() --[[ @ 0]]
	f47_arg0.bgbGlowOrangeOver:completeAnimation() --[[ @ 0]]
	f47_arg0.ZmAmmo:setLeftRight( 0, 0, 0, 510 ) --[[ @ 0]]
	f47_arg0.ZmAmmo:setAlpha( 1 ) --[[ @ 0]]
	f47_arg0.CrossAbilities:setLeftRight( 0, 0, 288, 709 ) --[[ @ 0]]
	f47_arg0.bgbAbilitySwirl:setAlpha( 0 ) --[[ @ 0]]
	f47_arg0.bgbAbilitySwirl:setZRot( 330 ) --[[ @ 0]]
	f47_arg0.bgbGlowOrangeOver:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ZmAmmoContainerFactory.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f48_arg0, f48_arg1 )
			f48_arg0:__resetProperties() --[[ @ 0]]
			f48_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end,
		Invisible = function ( f49_arg0, f49_arg1 )
			f49_arg0:__resetProperties() --[[ @ 0]]
			f49_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f49_local0 = function ( f50_arg0 )
				f49_arg0.ZmAmmo:beginAnimation( 150 ) --[[ @ 0]]
				f49_arg0.ZmAmmo:setAlpha( 0 ) --[[ @ 0]]
				f49_arg0.ZmAmmo:registerEventHandler( "interrupted_keyframe", f49_arg0.clipInterrupted ) --[[ @ 0]]
				f49_arg0.ZmAmmo:registerEventHandler( "transition_complete_keyframe", f49_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f49_arg0.ZmAmmo:completeAnimation() --[[ @ 0]]
			f49_arg0.ZmAmmo:setAlpha( 1 ) --[[ @ 0]]
			f49_local0( f49_arg0.ZmAmmo ) --[[ @ 0]]
		end,
		Scoreboard = function ( f51_arg0, f51_arg1 )
			f51_arg0:__resetProperties() --[[ @ 0]]
			f51_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			local f51_local0 = function ( f52_arg0 )
				f51_arg0.ZmAmmo:beginAnimation( 150 ) --[[ @ 0]]
				f51_arg0.ZmAmmo:setLeftRight( 0, 0, -120, 390 ) --[[ @ 0]]
				f51_arg0.ZmAmmo:registerEventHandler( "interrupted_keyframe", f51_arg0.clipInterrupted ) --[[ @ 0]]
				f51_arg0.ZmAmmo:registerEventHandler( "transition_complete_keyframe", f51_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f51_arg0.ZmAmmo:completeAnimation() --[[ @ 0]]
			f51_arg0.ZmAmmo:setLeftRight( 0, 0, 0, 510 ) --[[ @ 0]]
			f51_local0( f51_arg0.ZmAmmo ) --[[ @ 0]]
			local f51_local1 = function ( f53_arg0 )
				f51_arg0.CrossAbilities:beginAnimation( 150 ) --[[ @ 0]]
				f51_arg0.CrossAbilities:setLeftRight( 0, 0, 168, 589 ) --[[ @ 0]]
				f51_arg0.CrossAbilities:registerEventHandler( "interrupted_keyframe", f51_arg0.clipInterrupted ) --[[ @ 0]]
				f51_arg0.CrossAbilities:registerEventHandler( "transition_complete_keyframe", f51_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f51_arg0.CrossAbilities:completeAnimation() --[[ @ 0]]
			f51_arg0.CrossAbilities:setLeftRight( 0, 0, 288, 709 ) --[[ @ 0]]
			f51_local1( f51_arg0.CrossAbilities ) --[[ @ 0]]
		end,
		ScoreboardPC = function ( f54_arg0, f54_arg1 )
			f54_arg0:__resetProperties() --[[ @ 0]]
			f54_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			local f54_local0 = function ( f55_arg0 )
				f54_arg0.ZmAmmo:beginAnimation( 150 ) --[[ @ 0]]
				f54_arg0.ZmAmmo:setAlpha( 0 ) --[[ @ 0]]
				f54_arg0.ZmAmmo:registerEventHandler( "interrupted_keyframe", f54_arg0.clipInterrupted ) --[[ @ 0]]
				f54_arg0.ZmAmmo:registerEventHandler( "transition_complete_keyframe", f54_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f54_arg0.ZmAmmo:completeAnimation() --[[ @ 0]]
			f54_arg0.ZmAmmo:setAlpha( 1 ) --[[ @ 0]]
			f54_local0( f54_arg0.ZmAmmo ) --[[ @ 0]]
			local f54_local1 = function ( f56_arg0 )
				f54_arg0.CrossAbilities:beginAnimation( 150 ) --[[ @ 0]]
				f54_arg0.CrossAbilities:registerEventHandler( "interrupted_keyframe", f54_arg0.clipInterrupted ) --[[ @ 0]]
				f54_arg0.CrossAbilities:registerEventHandler( "transition_complete_keyframe", f54_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f54_arg0.CrossAbilities:completeAnimation() --[[ @ 0]]
			f54_local1( f54_arg0.CrossAbilities ) --[[ @ 0]]
		end
	},
	ScoreboardPC = {
		DefaultClip = function ( f57_arg0, f57_arg1 )
			f57_arg0:__resetProperties() --[[ @ 0]]
			f57_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f57_arg0.ZmAmmo:completeAnimation() --[[ @ 0]]
			f57_arg0.ZmAmmo:setAlpha( 0 ) --[[ @ 0]]
			f57_arg0.clipFinished( f57_arg0.ZmAmmo ) --[[ @ 0]]
			f57_arg0.CrossAbilities:completeAnimation() --[[ @ 0]]
			f57_arg0.clipFinished( f57_arg0.CrossAbilities ) --[[ @ 0]]
		end,
		DefaultState = function ( f58_arg0, f58_arg1 )
			f58_arg0:__resetProperties() --[[ @ 0]]
			f58_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			local f58_local0 = function ( f59_arg0 )
				f58_arg0.ZmAmmo:beginAnimation( 150 ) --[[ @ 0]]
				f58_arg0.ZmAmmo:setAlpha( 1 ) --[[ @ 0]]
				f58_arg0.ZmAmmo:registerEventHandler( "interrupted_keyframe", f58_arg0.clipInterrupted ) --[[ @ 0]]
				f58_arg0.ZmAmmo:registerEventHandler( "transition_complete_keyframe", f58_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f58_arg0.ZmAmmo:completeAnimation() --[[ @ 0]]
			f58_arg0.ZmAmmo:setAlpha( 0 ) --[[ @ 0]]
			f58_local0( f58_arg0.ZmAmmo ) --[[ @ 0]]
			local f58_local1 = function ( f60_arg0 )
				f58_arg0.CrossAbilities:beginAnimation( 150 ) --[[ @ 0]]
				f58_arg0.CrossAbilities:registerEventHandler( "interrupted_keyframe", f58_arg0.clipInterrupted ) --[[ @ 0]]
				f58_arg0.CrossAbilities:registerEventHandler( "transition_complete_keyframe", f58_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f58_arg0.CrossAbilities:completeAnimation() --[[ @ 0]]
			f58_local1( f58_arg0.CrossAbilities ) --[[ @ 0]]
		end
	},
	hiddenTutorial = {
		DefaultClip = function ( f61_arg0, f61_arg1 )
			f61_arg0:__resetProperties() --[[ @ 0]]
			f61_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f61_arg0.ZmAmmo:completeAnimation() --[[ @ 0]]
			f61_arg0.ZmAmmo:setAlpha( 0 ) --[[ @ 0]]
			f61_arg0.clipFinished( f61_arg0.ZmAmmo ) --[[ @ 0]]
		end,
		DefaultState = function ( f62_arg0, f62_arg1 )
			f62_arg0:__resetProperties() --[[ @ 0]]
			f62_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			local f62_local0 = function ( f63_arg0 )
				local f63_local0 = function ( f64_arg0 )
					local f64_local0 = function ( f65_arg0 )
						local f65_local0 = function ( f66_arg0 )
							local f66_local0 = function ( f67_arg0 )
								local f67_local0 = function ( f68_arg0 )
									local f68_local0 = function ( f69_arg0 )
										f69_arg0:beginAnimation( 200 ) --[[ @ 0]]
										f69_arg0:setAlpha( 0 ) --[[ @ 0]]
										f69_arg0:registerEventHandler( "transition_complete_keyframe", f62_arg0.clipFinished ) --[[ @ 0]]
									end
									 --[[ @ 0]]
									f68_arg0:beginAnimation( 139 ) --[[ @ 0]]
									f68_arg0:setAlpha( 0.7 ) --[[ @ 0]]
									f68_arg0:registerEventHandler( "transition_complete_keyframe", f68_local0 ) --[[ @ 0]]
								end
								 --[[ @ 0]]
								f67_arg0:beginAnimation( 199 ) --[[ @ 0]]
								f67_arg0:setAlpha( 0 ) --[[ @ 0]]
								f67_arg0:registerEventHandler( "transition_complete_keyframe", f67_local0 ) --[[ @ 0]]
							end
							 --[[ @ 0]]
							f66_arg0:beginAnimation( 130 ) --[[ @ 0]]
							f66_arg0:setAlpha( 0.7 ) --[[ @ 0]]
							f66_arg0:registerEventHandler( "transition_complete_keyframe", f66_local0 ) --[[ @ 0]]
						end
						 --[[ @ 0]]
						f65_arg0:beginAnimation( 170 ) --[[ @ 0]]
						f65_arg0:setAlpha( 0 ) --[[ @ 0]]
						f65_arg0:registerEventHandler( "transition_complete_keyframe", f65_local0 ) --[[ @ 0]]
					end
					 --[[ @ 0]]
					f64_arg0:beginAnimation( 160 ) --[[ @ 0]]
					f64_arg0:setAlpha( 0.7 ) --[[ @ 0]]
					f64_arg0:registerEventHandler( "transition_complete_keyframe", f64_local0 ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f62_arg0.bgbGlowOrangeOver:beginAnimation( 330 ) --[[ @ 0]]
				f62_arg0.bgbGlowOrangeOver:registerEventHandler( "interrupted_keyframe", f62_arg0.clipInterrupted ) --[[ @ 0]]
				f62_arg0.bgbGlowOrangeOver:registerEventHandler( "transition_complete_keyframe", f63_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f62_arg0.bgbGlowOrangeOver:completeAnimation() --[[ @ 0]]
			f62_arg0.bgbGlowOrangeOver:setAlpha( 0 ) --[[ @ 0]]
			f62_local0( f62_arg0.bgbGlowOrangeOver ) --[[ @ 0]]
			local f62_local1 = function ( f70_arg0 )
				local f70_local0 = function ( f71_arg0 )
					local f71_local0 = function ( f72_arg0 )
						f72_arg0:beginAnimation( 340 ) --[[ @ 0]]
						f72_arg0:setAlpha( 1 ) --[[ @ 0]]
						f72_arg0:registerEventHandler( "transition_complete_keyframe", f62_arg0.clipFinished ) --[[ @ 0]]
					end
					 --[[ @ 0]]
					f71_arg0:beginAnimation( 329 ) --[[ @ 0]]
					f71_arg0:setAlpha( 0 ) --[[ @ 0]]
					f71_arg0:registerEventHandler( "transition_complete_keyframe", f71_local0 ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f70_arg0:beginAnimation( 330 ) --[[ @ 0]]
				f70_arg0:setAlpha( 1 ) --[[ @ 0]]
				f70_arg0:registerEventHandler( "transition_complete_keyframe", f70_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f62_arg0.ZmAmmo:beginAnimation( 330 ) --[[ @ 0]]
			f62_arg0.ZmAmmo:setAlpha( 0 ) --[[ @ 0]]
			f62_arg0.ZmAmmo:registerEventHandler( "interrupted_keyframe", f62_arg0.clipInterrupted ) --[[ @ 0]]
			f62_arg0.ZmAmmo:registerEventHandler( "transition_complete_keyframe", f62_local1 ) --[[ @ 0]]
			local f62_local2 = function ( f73_arg0 )
				local f73_local0 = function ( f74_arg0 )
					f74_arg0:beginAnimation( 199 ) --[[ @ 0]]
					f74_arg0:setAlpha( 0 ) --[[ @ 0]]
					f74_arg0:setZRot( 360 ) --[[ @ 0]]
					f74_arg0:registerEventHandler( "transition_complete_keyframe", f62_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f62_arg0.bgbAbilitySwirl:beginAnimation( 330 ) --[[ @ 0]]
				f62_arg0.bgbAbilitySwirl:setAlpha( 1 ) --[[ @ 0]]
				f62_arg0.bgbAbilitySwirl:setZRot( 240 ) --[[ @ 0]]
				f62_arg0.bgbAbilitySwirl:registerEventHandler( "interrupted_keyframe", f62_arg0.clipInterrupted ) --[[ @ 0]]
				f62_arg0.bgbAbilitySwirl:registerEventHandler( "transition_complete_keyframe", f73_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f62_arg0.bgbAbilitySwirl:completeAnimation() --[[ @ 0]]
			f62_arg0.bgbAbilitySwirl:setAlpha( 0 ) --[[ @ 0]]
			f62_arg0.bgbAbilitySwirl:setZRot( 0 ) --[[ @ 0]]
			f62_local2( f62_arg0.bgbAbilitySwirl ) --[[ @ 0]]
		end
	},
	Invisible = {
		DefaultClip = function ( f75_arg0, f75_arg1 )
			f75_arg0:__resetProperties() --[[ @ 0]]
			f75_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f75_arg0.ZmAmmo:completeAnimation() --[[ @ 0]]
			f75_arg0.ZmAmmo:setAlpha( 0 ) --[[ @ 0]]
			f75_arg0.clipFinished( f75_arg0.ZmAmmo ) --[[ @ 0]]
		end,
		DefaultState = function ( f76_arg0, f76_arg1 )
			f76_arg0:__resetProperties() --[[ @ 0]]
			f76_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f76_local0 = function ( f77_arg0 )
				f76_arg0.ZmAmmo:beginAnimation( 150 ) --[[ @ 0]]
				f76_arg0.ZmAmmo:setAlpha( 1 ) --[[ @ 0]]
				f76_arg0.ZmAmmo:registerEventHandler( "interrupted_keyframe", f76_arg0.clipInterrupted ) --[[ @ 0]]
				f76_arg0.ZmAmmo:registerEventHandler( "transition_complete_keyframe", f76_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f76_arg0.ZmAmmo:completeAnimation() --[[ @ 0]]
			f76_arg0.ZmAmmo:setAlpha( 0 ) --[[ @ 0]]
			f76_local0( f76_arg0.ZmAmmo ) --[[ @ 0]]
		end
	},
	ScoreboardKeyboardMouse = {
		DefaultClip = function ( f78_arg0, f78_arg1 )
			f78_arg0:__resetProperties() --[[ @ 0]]
			f78_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f78_arg0.ZmAmmo:completeAnimation() --[[ @ 0]]
			f78_arg0.ZmAmmo:setLeftRight( 0, 0, 0, 510 ) --[[ @ 0]]
			f78_arg0.clipFinished( f78_arg0.ZmAmmo ) --[[ @ 0]]
			f78_arg0.CrossAbilities:completeAnimation() --[[ @ 0]]
			f78_arg0.CrossAbilities:setLeftRight( 0, 0, 168, 589 ) --[[ @ 0]]
			f78_arg0.clipFinished( f78_arg0.CrossAbilities ) --[[ @ 0]]
		end,
		ScoreboardPC = function ( f79_arg0, f79_arg1 )
			f79_arg0:__resetProperties() --[[ @ 0]]
			f79_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			local f79_local0 = function ( f80_arg0 )
				f79_arg0.ZmAmmo:beginAnimation( 150 ) --[[ @ 0]]
				f79_arg0.ZmAmmo:setAlpha( 0 ) --[[ @ 0]]
				f79_arg0.ZmAmmo:registerEventHandler( "interrupted_keyframe", f79_arg0.clipInterrupted ) --[[ @ 0]]
				f79_arg0.ZmAmmo:registerEventHandler( "transition_complete_keyframe", f79_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f79_arg0.ZmAmmo:completeAnimation() --[[ @ 0]]
			f79_arg0.ZmAmmo:setLeftRight( 0, 0, 0, 510 ) --[[ @ 0]]
			f79_arg0.ZmAmmo:setAlpha( 1 ) --[[ @ 0]]
			f79_local0( f79_arg0.ZmAmmo ) --[[ @ 0]]
			local f79_local1 = function ( f81_arg0 )
				f79_arg0.CrossAbilities:beginAnimation( 150 ) --[[ @ 0]]
				f79_arg0.CrossAbilities:setLeftRight( 0, 0, 288, 709 ) --[[ @ 0]]
				f79_arg0.CrossAbilities:registerEventHandler( "interrupted_keyframe", f79_arg0.clipInterrupted ) --[[ @ 0]]
				f79_arg0.CrossAbilities:registerEventHandler( "transition_complete_keyframe", f79_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f79_arg0.CrossAbilities:completeAnimation() --[[ @ 0]]
			f79_arg0.CrossAbilities:setLeftRight( 0, 0, 168, 589 ) --[[ @ 0]]
			f79_local1( f79_arg0.CrossAbilities ) --[[ @ 0]]
		end
	},
	Scoreboard = {
		DefaultClip = function ( f82_arg0, f82_arg1 )
			f82_arg0:__resetProperties() --[[ @ 0]]
			f82_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f82_arg0.ZmAmmo:completeAnimation() --[[ @ 0]]
			f82_arg0.ZmAmmo:setLeftRight( 0, 0, -120, 390 ) --[[ @ 0]]
			f82_arg0.clipFinished( f82_arg0.ZmAmmo ) --[[ @ 0]]
			f82_arg0.CrossAbilities:completeAnimation() --[[ @ 0]]
			f82_arg0.CrossAbilities:setLeftRight( 0, 0, 168, 589 ) --[[ @ 0]]
			f82_arg0.clipFinished( f82_arg0.CrossAbilities ) --[[ @ 0]]
		end,
		DefaultState = function ( f83_arg0, f83_arg1 )
			f83_arg0:__resetProperties() --[[ @ 0]]
			f83_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			local f83_local0 = function ( f84_arg0 )
				f83_arg0.ZmAmmo:beginAnimation( 150 ) --[[ @ 0]]
				f83_arg0.ZmAmmo:setLeftRight( 0, 0, 0, 510 ) --[[ @ 0]]
				f83_arg0.ZmAmmo:registerEventHandler( "interrupted_keyframe", f83_arg0.clipInterrupted ) --[[ @ 0]]
				f83_arg0.ZmAmmo:registerEventHandler( "transition_complete_keyframe", f83_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f83_arg0.ZmAmmo:completeAnimation() --[[ @ 0]]
			f83_arg0.ZmAmmo:setLeftRight( 0, 0, -120, 390 ) --[[ @ 0]]
			f83_local0( f83_arg0.ZmAmmo ) --[[ @ 0]]
			local f83_local1 = function ( f85_arg0 )
				f83_arg0.CrossAbilities:beginAnimation( 150 ) --[[ @ 0]]
				f83_arg0.CrossAbilities:setLeftRight( 0, 0, 288, 709 ) --[[ @ 0]]
				f83_arg0.CrossAbilities:registerEventHandler( "interrupted_keyframe", f83_arg0.clipInterrupted ) --[[ @ 0]]
				f83_arg0.CrossAbilities:registerEventHandler( "transition_complete_keyframe", f83_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f83_arg0.CrossAbilities:completeAnimation() --[[ @ 0]]
			f83_arg0.CrossAbilities:setLeftRight( 0, 0, 168, 589 ) --[[ @ 0]]
			f83_local1( f83_arg0.CrossAbilities ) --[[ @ 0]]
		end,
		ScoreboardPC = function ( f86_arg0, f86_arg1 )
			f86_arg0:__resetProperties() --[[ @ 0]]
			f86_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			local f86_local0 = function ( f87_arg0 )
				f86_arg0.ZmAmmo:beginAnimation( 150 ) --[[ @ 0]]
				f86_arg0.ZmAmmo:setLeftRight( 0, 0, 0, 510 ) --[[ @ 0]]
				f86_arg0.ZmAmmo:setAlpha( 0 ) --[[ @ 0]]
				f86_arg0.ZmAmmo:registerEventHandler( "interrupted_keyframe", f86_arg0.clipInterrupted ) --[[ @ 0]]
				f86_arg0.ZmAmmo:registerEventHandler( "transition_complete_keyframe", f86_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f86_arg0.ZmAmmo:completeAnimation() --[[ @ 0]]
			f86_arg0.ZmAmmo:setLeftRight( 0, 0, -120, 390 ) --[[ @ 0]]
			f86_arg0.ZmAmmo:setAlpha( 1 ) --[[ @ 0]]
			f86_local0( f86_arg0.ZmAmmo ) --[[ @ 0]]
			local f86_local1 = function ( f88_arg0 )
				f86_arg0.CrossAbilities:beginAnimation( 150 ) --[[ @ 0]]
				f86_arg0.CrossAbilities:setLeftRight( 0, 0, 288, 709 ) --[[ @ 0]]
				f86_arg0.CrossAbilities:registerEventHandler( "interrupted_keyframe", f86_arg0.clipInterrupted ) --[[ @ 0]]
				f86_arg0.CrossAbilities:registerEventHandler( "transition_complete_keyframe", f86_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f86_arg0.CrossAbilities:completeAnimation() --[[ @ 0]]
			f86_arg0.CrossAbilities:setLeftRight( 0, 0, 168, 589 ) --[[ @ 0]]
			f86_local1( f86_arg0.CrossAbilities ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.ZmAmmoContainerFactory.__onClose = function ( f89_arg0 )
	f89_arg0.ZmAmmo:close() --[[ @ 0]]
	f89_arg0.CrossAbilities:close() --[[ @ 0]]
end
 --[[ @ 0]]
