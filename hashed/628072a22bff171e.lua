-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:50
require( "x64:226ed7c297df6a5" ) --[[ @ 0]]

CoD.WZObituaryAttacker = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.WZObituaryAttacker.__defaultWidth = 168 --[[ @ 0]]
CoD.WZObituaryAttacker.__defaultHeight = 26 --[[ @ 0]]
CoD.WZObituaryAttacker.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIHorizontalList.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9, 4, false ) --[[ @ 0]]
	self:setAlignment( LUI.Alignment.Left ) --[[ @ 0]]
	self:setClass( CoD.WZObituaryAttacker ) --[[ @ 0]]
	self.id = "WZObituaryAttacker" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local Icon = CoD.WZObituaryTeamIcon.new( f1_arg0, f1_arg1, 0, 0, 0, 26, 0, 0, 1, 27 ) --[[ @ 0]]
	Icon:setAlpha( 0 ) --[[ @ 0]]
	Icon.Backer.__TeamColor = function ( f2_arg0 )
		local f2_local0 = f2_arg0:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			Icon.Backer:setRGB( CoD.WZUtility.TeamPlayerColorForClientNum( f1_arg1, f2_local0 ) ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	Icon:linkToElementModel( self, "attackerClientNum", true, Icon.Backer.__TeamColor ) --[[ @ 0]]
	Icon.Backer.__TeamColor_FullPath = function ()
		local f3_local0 = self:getModel() --[[ @ 0]]
		if f3_local0 then
			f3_local0 = self:getModel() --[[ @ 0]]
			f3_local0 = f3_local0.attackerClientNum --[[ @ 0]]
		end
		if f3_local0 then
			Icon.Backer.__TeamColor( f3_local0 ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	Icon:linkToElementModel( self, "attackerClientNum", true, function ( model )
		local f4_local0 = model:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			Icon.TeamNumber:setText( CoD.WZUtility.ShownPlayerIndexForClientNum( f1_arg1, f4_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Icon ) --[[ @ 0]]
	self.Icon = Icon --[[ @ 0]]
	
	local Name = LUI.UIText.new( 0, 0, 30, 198, 0.48, 0.48, -12.5, 13.5 ) --[[ @ 0]]
	Name:setTTF( "notosans_regular" ) --[[ @ 0]]
	Name:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	Name.__Color = function ( f5_arg0 )
		local f5_local0 = f5_arg0:get() --[[ @ 0]]
		if f5_local0 ~= nil then
			Name:setRGB( ConsoleColorFromIndex( f1_arg1, f5_local0 ) ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	Name:linkToElementModel( self, "attackerColor", true, Name.__Color ) --[[ @ 0]]
	Name.__Color_FullPath = function ()
		local f6_local0 = self:getModel() --[[ @ 0]]
		if f6_local0 then
			f6_local0 = self:getModel() --[[ @ 0]]
			f6_local0 = f6_local0.attackerColor --[[ @ 0]]
		end
		if f6_local0 then
			Name.__Color( f6_local0 ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	Name:linkToElementModel( self, "attacker", true, function ( model )
		local f7_local0 = model:get() --[[ @ 0]]
		if f7_local0 ~= nil then
			Name:setText( CoD.SocialUtility.CleanGamerTag( f7_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Name ) --[[ @ 0]]
	self.Name = Name --[[ @ 0]]
	
	Icon:linkToElementModel( self, "team", true, Icon.Backer.__TeamColor_FullPath ) --[[ @ 0]]
	local f1_local3 = Icon --[[ @ 0]]
	local f1_local4 = Icon.subscribeToModel --[[ @ 0]]
	local f1_local5 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local4( f1_local3, f1_local5["profile.colorblindMode"], Icon.Backer.__TeamColor_FullPath ) --[[ @ 0]]
	f1_local3 = Name --[[ @ 0]]
	f1_local4 = Name.subscribeToModel --[[ @ 0]]
	f1_local5 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local4( f1_local3, f1_local5["profile.colorblindMode"], Name.__Color_FullPath ) --[[ @ 0]]
	self:mergeStateConditions( {
		{
			stateName = "Friendly",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueGreaterThanOrEqualTo( element, f1_arg1, "attackerClientNum", 0 )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "attackerClientNum", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "attackerClientNum"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.WZObituaryAttacker.__resetProperties = function ( f10_arg0 )
	f10_arg0.Icon:completeAnimation() --[[ @ 0]]
	f10_arg0.Icon:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.WZObituaryAttacker.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f11_arg0, f11_arg1 )
			f11_arg0:__resetProperties() --[[ @ 0]]
			f11_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	Friendly = {
		DefaultClip = function ( f12_arg0, f12_arg1 )
			f12_arg0:__resetProperties() --[[ @ 0]]
			f12_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f12_arg0.Icon:beginAnimation( 100 ) --[[ @ 0]]
			f12_arg0.Icon:setAlpha( 1 ) --[[ @ 0]]
			f12_arg0.Icon:registerEventHandler( "interrupted_keyframe", f12_arg0.clipInterrupted ) --[[ @ 0]]
			f12_arg0.Icon:registerEventHandler( "transition_complete_keyframe", f12_arg0.clipFinished ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.WZObituaryAttacker.__onClose = function ( f13_arg0 )
	f13_arg0.Icon:close() --[[ @ 0]]
	f13_arg0.Name:close() --[[ @ 0]]
end
 --[[ @ 0]]
