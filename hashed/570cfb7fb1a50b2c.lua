-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
CoD.JobFeedItemBackground = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.JobFeedItemBackground.__defaultWidth = 128 --[[ @ 0]]
CoD.JobFeedItemBackground.__defaultHeight = 128 --[[ @ 0]]
CoD.JobFeedItemBackground.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.JobFeedItemBackground ) --[[ @ 0]]
	self.id = "JobFeedItemBackground" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local Glow = LUI.UIImage.new( 0.5, 0.5, -64, 64, 0.5, 0.5, -64, 64 ) --[[ @ 0]]
	Glow:setScale( 1.2, 1.2 ) --[[ @ 0]]
	Glow:setImage( RegisterImage( @"uie_ui_hud_jobfeed_multikill_flare" ) ) --[[ @ 0]]
	Glow:setMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	self:addElement( Glow ) --[[ @ 0]]
	self.Glow = Glow --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "IsActiveMultiKill",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueTrue( self, f1_arg1, "isActiveMultiKill" )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "isActiveMultiKill", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "isActiveMultiKill"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.JobFeedItemBackground.__resetProperties = function ( f4_arg0 )
	f4_arg0.Glow:completeAnimation() --[[ @ 0]]
	f4_arg0.Glow:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.JobFeedItemBackground.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f5_arg0, f5_arg1 )
			f5_arg0:__resetProperties() --[[ @ 0]]
			f5_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f5_arg0.Glow:completeAnimation() --[[ @ 0]]
			f5_arg0.Glow:setAlpha( 0 ) --[[ @ 0]]
			f5_arg0.clipFinished( f5_arg0.Glow ) --[[ @ 0]]
		end,
		IsActiveMultiKill = function ( f6_arg0, f6_arg1 )
			f6_arg0:__resetProperties() --[[ @ 0]]
			f6_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f6_local0 = function ( f7_arg0 )
				f6_arg0.Glow:beginAnimation( 200 ) --[[ @ 0]]
				f6_arg0.Glow:setAlpha( 1 ) --[[ @ 0]]
				f6_arg0.Glow:registerEventHandler( "interrupted_keyframe", f6_arg0.clipInterrupted ) --[[ @ 0]]
				f6_arg0.Glow:registerEventHandler( "transition_complete_keyframe", f6_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f6_arg0.Glow:completeAnimation() --[[ @ 0]]
			f6_arg0.Glow:setAlpha( 0 ) --[[ @ 0]]
			f6_local0( f6_arg0.Glow ) --[[ @ 0]]
		end
	},
	IsActiveMultiKill = {
		DefaultClip = function ( f8_arg0, f8_arg1 )
			f8_arg0:__resetProperties() --[[ @ 0]]
			f8_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f8_arg0.Glow:completeAnimation() --[[ @ 0]]
			f8_arg0.Glow:setAlpha( 1 ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.Glow ) --[[ @ 0]]
		end,
		DefaultState = function ( f9_arg0, f9_arg1 )
			f9_arg0:__resetProperties() --[[ @ 0]]
			f9_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f9_local0 = function ( f10_arg0 )
				f9_arg0.Glow:beginAnimation( 200 ) --[[ @ 0]]
				f9_arg0.Glow:setAlpha( 0 ) --[[ @ 0]]
				f9_arg0.Glow:registerEventHandler( "interrupted_keyframe", f9_arg0.clipInterrupted ) --[[ @ 0]]
				f9_arg0.Glow:registerEventHandler( "transition_complete_keyframe", f9_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f9_arg0.Glow:completeAnimation() --[[ @ 0]]
			f9_arg0.Glow:setAlpha( 1 ) --[[ @ 0]]
			f9_local0( f9_arg0.Glow ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
