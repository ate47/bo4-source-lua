-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:50
require( "lua/shared/lobbydata" ) --[[ @ 0]]
require( "lua/shared/luautils" ) --[[ @ 0]]
require( "x64:d2aca1e5dd29f34" ) --[[ @ 0]]

function TestModifyFunction( f1_arg0 )
	return f1_arg0
end

function FractionToPercentageRounded( f2_arg0 )
	if f2_arg0 and f2_arg0 ~= @"hash_0" and f2_arg0 ~= "" then
		return Engine[@"hash_4F9F1239CFD921FE"]( @"mpui/percent", math.floor( f2_arg0 * 100 + 0.5 ) )
	else
		return @"hash_0"
	end
end

function NumberAsTime( f3_arg0 )
	local f3_local0 = math.floor( f3_arg0 / 60000 ) --[[ @ 0]]
	local f3_local1 = math.floor( (f3_arg0 - f3_local0 * 60000) / 1000 ) --[[ @ 0]]
	local f3_local2 = f3_arg0 % 1000 --[[ @ 0]]
	if f3_local1 < 10 then
		f3_local1 = "0" .. f3_local1 --[[ @ 0]]
	end
	if f3_local2 < 10 then
		f3_local2 = "00" .. f3_local2 --[[ @ 0]]
	elseif f3_local2 < 100 then
		f3_local2 = "0" .. f3_local2 --[[ @ 0]]
	end
	return f3_local0 .. ":" .. f3_local1 .. "." .. f3_local2
end

function MillisecondsAsMinAndSeconds( f4_arg0 )
	local f4_local0 = math.floor( f4_arg0 / 60000 ) --[[ @ 0]]
	local f4_local1 = math.floor( (f4_arg0 - f4_local0 * 60000) / 1000 ) --[[ @ 0]]
	if f4_local1 < 10 then
		f4_local1 = "0" .. f4_local1 --[[ @ 0]]
	end
	return f4_local0 .. ":" .. f4_local1
end

function MillisecondsAsSeconds( f5_arg0 )
	local f5_local0 = math.floor( (f5_arg0 - math.floor( f5_arg0 / 60000 ) * 60000) / 1000 ) --[[ @ 0]]
	if f5_local0 < 10 then
		f5_local0 = "0" .. f5_local0 --[[ @ 0]]
	end
	return f5_local0
end

function MillisecondsAsTime( f6_arg0 )
	return string.format( "%02d:%02d", math.floor( f6_arg0 / 1000 ), math.floor( f6_arg0 % 1000 / 10 ) )
end

function SecondsAsTime( f7_arg0 )
	local f7_local0 = tonumber( f7_arg0 ) --[[ @ 0]]
	local f7_local1 = math.floor( f7_local0 / 60 ) --[[ @ 0]]
	return string.format( "%d:%02d", f7_local1, f7_local0 - f7_local1 * 60 )
end

function SecondsAsTimeDashedZero( f8_arg0 )
	local f8_local0 = tonumber( f8_arg0 ) --[[ @ 0]]
	if not f8_local0 or f8_local0 <= 0 then
		return "-:--"
	else
		local f8_local1 = math.floor( f8_local0 / 60 ) --[[ @ 0]]
		return string.format( "%d:%02d", f8_local1, f8_local0 - f8_local1 * 60 )
	end
end

function SecondsAsTimePlayedString( f9_arg0 )
	if f9_arg0 and f9_arg0 ~= @"hash_0" and f9_arg0 ~= "" then
		local f9_local0 = math.floor( f9_arg0 / 86400 ) --[[ @ 0]]
		f9_arg0 = f9_arg0 - f9_local0 * 86400 --[[ @ 0]]
		local f9_local1 = math.floor( f9_arg0 / 3600 ) --[[ @ 0]]
		f9_arg0 = f9_arg0 - f9_local1 * 3600 --[[ @ 0]]
		local f9_local2 = math.floor( f9_arg0 / 60 ) --[[ @ 0]]
		return Engine[@"hash_4F9F1239CFD921FE"]( @"hash_30FEBB5BF51FE663", f9_local0, f9_local1, f9_local2, f9_arg0 - f9_local2 * 60 )
	else
		return Engine[@"hash_4F9F1239CFD921FE"]( @"hash_30FEBB5BF51FE663", 0, 0, 0, 0 )
	end
end

function UTCAsDate( f10_arg0 )
	if tonumber( f10_arg0 ) > 0 then
		return Engine[@"hash_5952C108C4897E9A"]( f10_arg0 )
	else
		return ""
	end
end

function UTCStringAsDate( f11_arg0 )
	return Engine[@"hash_672B3321101CFE15"]( f11_arg0, false, false )
end

function UTCStringAsShortDate( f12_arg0 )
	return Engine[@"hash_672B3321101CFE15"]( f12_arg0, false, true )
end

function DistanceInMetricString( f13_arg0 )
	local f13_local0 = math.floor( f13_arg0 / 1000 ) --[[ @ 0]]
	return Engine[@"hash_4F9F1239CFD921FE"]( @"hash_17453D11DFE4B5A9", f13_local0, f13_arg0 - f13_local0 * 1000 )
end

function GetRightAlignedCharacter( f14_arg0, f14_arg1, f14_arg2 )
	local f14_local0 = f14_arg2:len() - f14_arg1 - f14_arg0 --[[ @ 0]]
	if f14_local0 > 0 and f14_local0 <= f14_arg2:len() then
		return f14_arg2:sub( f14_local0, f14_local0 )
	else
		return ""
	end
end

function SetValueIfEmptyString( f15_arg0, f15_arg1 )
	if f15_arg1 == "" then
		return f15_arg0
	else
		return f15_arg1
	end
end

function SetValueIfNumberEqualTo( f16_arg0, f16_arg1, f16_arg2 )
	if f16_arg2 == f16_arg0 then
		return f16_arg1
	else
		return f16_arg2
	end
end

function ImageIsEverywhereButDurango( f17_arg0 )
	return CoD.isDurango and "$white" or f17_arg0
end

function ImageIsOnlyOnOrbis( f18_arg0 )
	if CoD.isPS4 then
		local f18_local0 = f18_arg0 --[[ @ 0]]
	end
	return f18_local0 or "$white"
end

function ImageIsOnlyOnDurangoOrPc( f19_arg0 )
	if CoD.isDurango or CoD.isPC then
		local f19_local0 = f19_arg0 --[[ @ 0]]
	end
	return f19_local0 or "$white"
end

function AppendCurrentSessionMode( f20_arg0 )
	return f20_arg0 .. "_" .. string.lower( Engine[@"getmodename"]() )
end

function AppendCurrentSessionModeOrTheater( f21_arg0 )
	if Engine[@"isdemoplaying"]() then
		return f21_arg0 .. "_theater"
	else
		return f21_arg0 .. "_" .. string.lower( Engine[@"getmodename"]() )
	end
end

function NumberAsPercentRounded( f22_arg0 )
	local f22_local0 = math.floor( f22_arg0 * 100 + 0.5 ) --[[ @ 0]]
	if f22_arg0 < 1 and f22_local0 == 100 then
		f22_local0 = 99 --[[ @ 0]]
	elseif f22_arg0 > 0 and f22_local0 == 0 then
		f22_local0 = 1 --[[ @ 0]]
	end
	return Engine[@"hash_4F9F1239CFD921FE"]( @"mpui/percent", tostring( f22_local0 ) )
end

function NumberAsPercent( f23_arg0 )
	return Engine[@"hash_4F9F1239CFD921FE"]( @"mpui/percent", tostring( f23_arg0 ) )
end

function LocalizeString( f24_arg0 )
	return Engine[@"localize"]( f24_arg0 )
end

function LocalizeHash( f25_arg0 )
	return Engine[@"hash_4F9F1239CFD921FE"]( f25_arg0 )
end

function LocalizeIntoString( f26_arg0, f26_arg1 )
	return Engine[@"hash_4F9F1239CFD921FE"]( f26_arg0, f26_arg1 )
end

function LocalizeIntoStringIfNotEmpty( f27_arg0, f27_arg1 )
	local f27_local0 --[[ @ 0]]
	if f27_arg1 == "" then
		f27_local0 = "" --[[ @ 0]]
		if not f27_local0 then
		
		else
			return f27_local0
		end
	end
	f27_local0 = Engine[@"hash_4F9F1239CFD921FE"]( f27_arg0, f27_arg1 ) --[[ @ 0]]
end

function LocalizeToUpperString( f28_arg0 )
	return Engine[@"toupper"]( Engine[@"hash_4F9F1239CFD921FE"]( f28_arg0 ) )
end

function ConvertToUpperString( f29_arg0 )
	return Engine[@"toupper"]( f29_arg0 )
end

function ToUpper( f30_arg0 )
	return Engine[@"toupper"]( f30_arg0 )
end

function AppendString( f31_arg0, f31_arg1 )
	return f31_arg1 .. f31_arg0
end

function AppendStringIfSourceNotEmpty( f32_arg0, f32_arg1 )
	if string.len( f32_arg1 ) >= 1 then
		return f32_arg1 .. f32_arg0
	else
		return ""
	end
end

function LanguageOverrideNumber( f33_arg0, f33_arg1, f33_arg2 )
	if IsCurrentLanguageTextEqualTo( f33_arg0 ) then
		local f33_local0 = f33_arg1 --[[ @ 0]]
	end
	return f33_local0 or f33_arg2
end

function LanguageOverrideNumberForScale( f34_arg0, f34_arg1, f34_arg2, f34_arg3 )
	if IsCurrentLanguageTextEqualTo( f34_arg0 ) then
		return f34_arg1, f34_arg1
	else
		return f34_arg2, f34_arg3
	end
end

function SessionModeOverrideNumber( f35_arg0, f35_arg1, f35_arg2 )
	if Engine[@"currentsessionmode"]() == f35_arg0 then
		local f35_local0 = f35_arg1 --[[ @ 0]]
	end
	return f35_local0 or f35_arg2
end

function AppendLocalizeString( f36_arg0, f36_arg1 )
	return f36_arg1 .. Engine[@"localize"]( f36_arg0 )
end

function PrependString( f37_arg0, f37_arg1 )
	return f37_arg0 .. f37_arg1
end

function PrependLocalizeString( f38_arg0, f38_arg1 )
	return Engine[@"hash_4F9F1239CFD921FE"]( f38_arg0 ) .. f38_arg1
end

function PrependToLocalizeStringIfNotEmpty( f39_arg0, f39_arg1 )
	local f39_local0 --[[ @ 0]]
	if f39_arg1 ~= "" and f39_arg1 ~= @"hash_0" then
		f39_local0 = f39_arg0 .. Engine[@"hash_4F9F1239CFD921FE"]( f39_arg1 ) --[[ @ 0]]
		if not f39_local0 then
		
		else
			return f39_local0
		end
	end
	f39_local0 = "" --[[ @ 0]]
end

function PrependLocalizedStringWithSeparator( f40_arg0, f40_arg1, f40_arg2 )
	return Engine[@"hash_4F9F1239CFD921FE"]( f40_arg0 ) .. f40_arg1 .. f40_arg2
end

function PrependLevelTypeStringWithSeparator( f41_arg0, f41_arg1 )
	local f41_local0 = @"hash_499A97D1A6F94031" --[[ @ 0]]
	if Engine[@"currentsessionmode"]() == Enum[@"emodes"][@"mode_warzone"] then
		f41_local0 = @"hash_3E15E03CF165A930" --[[ @ 0]]
	elseif LuaUtils.IsArenaMode() then
		f41_local0 = @"arena/rank" --[[ @ 0]]
	end
	return Engine[@"hash_4F9F1239CFD921FE"]( f41_local0 ) .. f41_arg0 .. f41_arg1
end

function SplitString( f42_arg0, f42_arg1 )
	return unpack( LUI.splitString( f42_arg1, f42_arg0 ) )
end

function StringAsClanTag( f43_arg0 )
	if not f43_arg0 or f43_arg0 == "" then
		return ""
	else
		return "[" .. f43_arg0 .. "]"
	end
end

function PrependClanTagToHostname( f44_arg0, f44_arg1 )
	return StringAsClanTag( Engine[@"getmodelvalue"]( Engine[@"getmodel"]( f44_arg0, "clantag" ) ) ) .. f44_arg1
end

function InlineStringAsClanTag( f45_arg0 )
	if not f45_arg0 or f45_arg0 == "" then
		return ""
	else
		return Engine[@"hash_4F9F1239CFD921FE"]( @"hash_47A487C443E58143", f45_arg0 )
	end
end

function GetFirstSignedInController( f46_arg0 )
	return Engine[@"hash_4F9F1239CFD921FE"]( @"hash_1FAACA5179AA8A57", Engine[@"getgamertagforcontroller"]( 0 ) )
end

function Negate( f47_arg0 )
	return 1 - f47_arg0
end

function Add( f48_arg0, f48_arg1 )
	return f48_arg1 + f48_arg0
end

function AddWithoutPreview( f49_arg0, f49_arg1 )
	return Add( f49_arg0, f49_arg1 )
end

function Multiple( f50_arg0, f50_arg1 )
	return f50_arg1 * f50_arg0
end

function Value1IfTrueElseValue2( f51_arg0, f51_arg1, f51_arg2 )
	if f51_arg2 then
		return f51_arg0
	else
		return f51_arg1
	end
end

function ZeroIfEqualElseArg( f52_arg0, f52_arg1, f52_arg2 )
	local f52_local0 --[[ @ 0]]
	if f52_arg2 == f52_arg0 then
		f52_local0 = 0 --[[ @ 0]]
		if not f52_local0 then
		
		else
			return f52_local0
		end
	end
	f52_local0 = f52_arg1 --[[ @ 0]]
end

function InverseZeroAndOne( f53_arg0 )
	local f53_local0 --[[ @ 0]]
	if f53_arg0 == 0 then
		f53_local0 = 1 --[[ @ 0]]
		if not f53_local0 then
		
		else
			return f53_local0
		end
	end
	f53_local0 = 0 --[[ @ 0]]
end

function StringAdd( f54_arg0, f54_arg1 )
	return tostring( (tonumber( f54_arg1 ) or 0) + f54_arg0 )
end

function StringMultiply( f55_arg0, f55_arg1 )
	return tostring( (tonumber( f55_arg1 ) or 0) * f55_arg0 )
end

function FormatNumberAsString( f56_arg0, f56_arg1 )
	return string.format( "%." .. f56_arg0 .. "f", f56_arg1 )
end

function RandomAddPercent( f57_arg0, f57_arg1 )
	return f57_arg1 + math.random() * f57_arg0 * 0.01
end

function HideIfNotEmptyString( f58_arg0 )
	if f58_arg0 ~= nil and f58_arg0 ~= "" then
		return 0
	else
		return 1
	end
end

function HideIfEmptyString( f59_arg0 )
	if f59_arg0 ~= nil and f59_arg0 ~= "" then
		return 1
	else
		return 0
	end
end

function HideIfNumEqualTo( f60_arg0, f60_arg1 )
	if f60_arg0 == f60_arg1 then
		return 0
	else
		return 1
	end
end

function ShowIfNumEqualTo( f61_arg0, f61_arg1 )
	if f61_arg0 == f61_arg1 then
		return 1
	else
		return 0
	end
end

function BlackTransparentIfNilOrEmpty( f62_arg0 )
	if f62_arg0 == nil or f62_arg0 == "" then
		return "blacktransparent"
	else
		return f62_arg0
	end
end

function ConsoleColorFromIndex( f63_arg0, f63_arg1 )
	local f63_local0 = {
		r = 1,
		g = 1,
		b = 1
	} --[[ @ 0]]
	if f63_arg1 == Enum[@"cacheduicolors"][@"cached_ui_color_enemy"] then
		f63_local0 = CoD.TeamUtility.GetColorSetEnemyOrShoutCasterColor( f63_arg0 ) --[[ @ 0]]
	elseif f63_arg1 == Enum[@"cacheduicolors"][@"cached_ui_color_friendly"] then
		f63_local0 = CoD.TeamUtility.GetColorSetFriendlyOrShoutCasterColor( f63_arg0 ) --[[ @ 0]]
	elseif f63_arg1 ~= Enum[@"cacheduicolors"][@"cached_ui_color_invalid"] then
		local f63_local1, f63_local2, f63_local3 = Engine[@"hash_1F8C039759157EA2"]( f63_arg0, f63_arg1 ) --[[ @ 0]]
		f63_local0 = {
			r = f63_local1,
			g = f63_local2,
			b = f63_local3
		} --[[ @ 0]]
	end
	return f63_local0.r, f63_local0.g, f63_local0.b
end

function RedForHighGPUTemperature( f64_arg0, f64_arg1, f64_arg2, f64_arg3, f64_arg4 )
	local f64_local0 = Engine[@"createmodel"]( Engine[@"getglobalmodel"](), "PCTelemetry.GPUTemperature" ) --[[ @ 0]]
	f64_local0 = f64_local0:get() --[[ @ 0]]
	local f64_local1 = Engine[@"createmodel"]( Engine[@"getglobalmodel"](), "PCTelemetry.showGPUTemp" ) --[[ @ 0]]
	if f64_local0 >= 85 then
		f64_local1:set( 1 ) --[[ @ 0]]
		f64_arg2 = 1 --[[ @ 0]]
		f64_arg3 = 0 --[[ @ 0]]
		f64_arg4 = 0 --[[ @ 0]]
		f64_arg0.LabelIsRed = true --[[ @ 0]]
	elseif f64_arg0.LabelIsRed then
		Engine[@"setmodelvalue"]( f64_local1, Engine[@"profileint"]( f64_arg1, @"com_show_gpu_temperature" ) or 0 ) --[[ @ 0]]
		f64_arg0.LabelIsRed = nil --[[ @ 0]]
	end
	return f64_arg2, f64_arg3, f64_arg4
end

function CodPointsColor( f65_arg0, f65_arg1, f65_arg2, f65_arg3, f65_arg4 )
	local f65_local0 = CoD.SafeGetModelValue( Engine[@"getmodelforcontroller"]( f65_arg1 ), f65_arg0 ) --[[ @ 0]]
	if f65_local0 and f65_local0 < 0 then
		return 1, 0, 0
	else
		return f65_arg2, f65_arg3, f65_arg4
	end
end

function GetColorBlindSafeColorFromBase( f66_arg0, f66_arg1, f66_arg2 )
	local f66_local0 = CoD.ColorUtility.GetColorBlindColorForPlayer( f66_arg1, f66_arg0 ) --[[ @ 0]]
	if f66_local0 then
		return CoD.ColorUtility.ExplodeColor( f66_local0 )
	else
		return 0, 0, 0
	end
end

function ColorMultiply( f67_arg0, f67_arg1, f67_arg2, f67_arg3 )
	if type( f67_arg1 ) == "string" then
		local f67_local0, f67_local1, f67_local2 = SplitString( " ", f67_arg1 ) --[[ @ 0]]
		f67_arg1 = f67_local0 / 255 --[[ @ 0]]
		f67_arg2 = f67_local1 / 255 --[[ @ 0]]
		f67_arg3 = f67_local2 / 255 --[[ @ 0]]
	end
	f67_arg0 = math.max( math.min( f67_arg0, 1 ), 0 ) --[[ @ 0]]
	return f67_arg1 * f67_arg0, f67_arg2 * f67_arg0, f67_arg3 * f67_arg0
end

function SplitRgbaStringToColor( f68_arg0 )
	local f68_local0, f68_local1, f68_local2, f68_local3 = SplitString( " ", f68_arg0 ) --[[ @ 0]]
	return f68_local0, f68_local1, f68_local2
end

function AddToVector( f69_arg0, f69_arg1, f69_arg2, f69_arg3, f69_arg4, f69_arg5, f69_arg6, f69_arg7 )
	return f69_arg4 + f69_arg0, f69_arg5 + f69_arg1, f69_arg6 + f69_arg2, f69_arg7 + f69_arg3
end

function SubtractVectorComponentFrom( f70_arg0, f70_arg1, f70_arg2, f70_arg3, f70_arg4, f70_arg5 )
	if f70_arg0 == 1 then
		f70_arg2 = f70_arg1 - f70_arg2 --[[ @ 0]]
	elseif f70_arg0 == 2 then
		f70_arg3 = f70_arg1 - f70_arg3 --[[ @ 0]]
	elseif f70_arg0 == 3 then
		f70_arg4 = f70_arg1 - f70_arg4 --[[ @ 0]]
	elseif f70_arg0 == 4 then
		f70_arg5 = f70_arg1 - f70_arg5 --[[ @ 0]]
	end
	return f70_arg2, f70_arg3, f70_arg4, f70_arg5
end

function AdjustStartEnd( f71_arg0, f71_arg1, f71_arg2, f71_arg3, f71_arg4, f71_arg5 )
	return f71_arg2 * (f71_arg1 - f71_arg0) + f71_arg0, f71_arg3, f71_arg4, f71_arg5
end

function ScaleVector( f72_arg0, f72_arg1, f72_arg2, f72_arg3, f72_arg4 )
	return f72_arg1 * f72_arg0, f72_arg2 * f72_arg0, f72_arg3 * f72_arg0, f72_arg4 * f72_arg0
end

function ScaleVectorComponents( f73_arg0, f73_arg1, f73_arg2, f73_arg3, f73_arg4, f73_arg5, f73_arg6, f73_arg7 )
	return f73_arg4 * f73_arg0, f73_arg5 * f73_arg1, f73_arg6 * f73_arg2, f73_arg7 * f73_arg3
end

function SetVectorComponent( f74_arg0, f74_arg1, f74_arg2, f74_arg3, f74_arg4, f74_arg5 )
	if f74_arg0 == 1 then
		f74_arg2 = f74_arg1 --[[ @ 0]]
	elseif f74_arg0 == 2 then
		f74_arg3 = f74_arg1 --[[ @ 0]]
	elseif f74_arg0 == 3 then
		f74_arg4 = f74_arg1 --[[ @ 0]]
	elseif f74_arg0 == 4 then
		f74_arg5 = f74_arg1 --[[ @ 0]]
	end
	return f74_arg2, f74_arg3, f74_arg4, f74_arg5
end

function CreateVectorFromNum( f75_arg0, f75_arg1, f75_arg2, f75_arg3 )
	return f75_arg0, f75_arg0, f75_arg0, f75_arg0
end

function IgnoreLastVectorComponents( f76_arg0, f76_arg1, f76_arg2, f76_arg3, f76_arg4 )
	if f76_arg0 == 0 then
		return f76_arg1, f76_arg2, f76_arg3, f76_arg4
	elseif f76_arg0 == 1 then
		return f76_arg1, f76_arg2, f76_arg3
	elseif f76_arg0 == 2 then
		return f76_arg1, f76_arg2
	elseif f76_arg0 == 3 then
		return f76_arg1
	else
		return nil
	end
end

function SwapVectorComponents( f77_arg0, f77_arg1, f77_arg2, f77_arg3, f77_arg4, f77_arg5 )
	local f77_local0 = {
		f77_arg2,
		f77_arg3,
		f77_arg4,
		f77_arg5
	} --[[ @ 0]]
	local f77_local1 = f77_local0[f77_arg0] --[[ @ 0]]
	f77_local0[f77_arg0] = f77_local0[f77_arg1] --[[ @ 0]]
	f77_local0[f77_arg1] = f77_local1 --[[ @ 0]]
	return unpack( f77_local0 )
end

function UnitsToMeters( f78_arg0 )
	if type( f78_arg0 ) ~= "number" then
		return ""
	else
		return string.format( "%.0f", f78_arg0 * 0.03 )
	end
end

function LocalizeStringWithDatasource( f79_arg0, f79_arg1, f79_arg2 )
	return Engine[@"hash_4F9F1239CFD921FE"]( f79_arg2, CoD.SafeGetModelValue( Engine[@"getmodelforcontroller"]( f79_arg1 ), f79_arg0 ) )
end

function LocalizeStringWithParameter( f80_arg0, f80_arg1 )
	return Engine[@"hash_4F9F1239CFD921FE"]( f80_arg0, f80_arg1 )
end

function LocalizeStringWithParameterAndStripBattletag( f81_arg0, f81_arg1 )
	return Engine[@"hash_4F9F1239CFD921FE"]( f81_arg0, CoD.SocialUtility.CleanGamerTag( f81_arg1 ) )
end

function NumAbs( f82_arg0 )
	return tostring( math.abs( tonumber( f82_arg0 ) ) )
end

function GetBubbleGumPackNameFromPackIndex( f83_arg0, f83_arg1 )
	return Engine[@"getbubblegumpackname"]( f83_arg0, f83_arg1 )
end

function GetClientName( f84_arg0, f84_arg1 )
	if type( f84_arg1 ) ~= "number" then
		return ""
	else
		return CoD.SocialUtility.CleanGamerTag( Engine[@"getplayernameforclientnum"]( f84_arg0, f84_arg1 ) )
	end
end

function GetClientClantag( f85_arg0, f85_arg1 )
	if type( f85_arg1 ) ~= "number" then
		return ""
	else
		return Engine[@"getclantagforclientnum"]( f85_arg0, f85_arg1 )
	end
end

function GetClientNameAndClanTag( f86_arg0, f86_arg1 )
	return GetClientClantag( f86_arg0, f86_arg1 ) .. GetClientName( f86_arg0, f86_arg1 )
end

function GetLocalClientXuid( f87_arg0, f87_arg1 )
	return Engine[@"getxuid64"]( f87_arg0 )
end

function StorageLookup( f88_arg0, f88_arg1, f88_arg2 )
	local f88_local0 = Engine[@"storagegetbuffer"]( f88_arg0, f88_arg2 ) --[[ @ 0]]
	if f88_local0 == nil then
		return 
	end
	for f88_local4 in string.gmatch( f88_arg1, "[%w_]+" ) --[[ @ 0]] do
		f88_local0 = f88_local0[f88_local4] --[[ @ 0]]
	end
	return f88_local0:get()
end

function StorageLookupTwoStatRatio( f89_arg0, f89_arg1, f89_arg2, f89_arg3 )
	return CoD.GetDisplayRatioFromTwoStats( StorageLookup( f89_arg0, f89_arg1, f89_arg3 ), StorageLookup( f89_arg0, f89_arg2, f89_arg3 ) )
end

function StorageLookupSPM( f90_arg0, f90_arg1, f90_arg2, f90_arg3 )
	return math.floor( StorageLookup( f90_arg0, f90_arg1, f90_arg3 ) / math.max( 1, StorageLookup( f90_arg0, f90_arg2, f90_arg3 ) / 60 ) + 0.5 )
end

function CombatRecordGetItemStatForItemIndex( f91_arg0, f91_arg1, f91_arg2 )
	local f91_local0 = CoD.GetCombatRecordStatForPath( CoD.GetCombatRecordStats( f91_arg0 ), "ItemStats." .. f91_arg2 .. ".stats." .. f91_arg1 ) --[[ @ 0]]
	if f91_local0 then
		return f91_local0
	else
		return ""
	end
end

function CombatRecordGetComparisonItemStatForItemIndex( f92_arg0, f92_arg1, f92_arg2 )
	local f92_local0 = nil --[[ @ 0]]
	local f92_local1 = CoD.GetCombatRecordComparisonStats( f92_arg0 ) --[[ @ 0]]
	if f92_local1 then
		f92_local0 = CoD.GetCombatRecordStatForPath( f92_local1, "ItemStats." .. f92_arg2 .. ".stats." .. f92_arg1 ) --[[ @ 0]]
	end
	if f92_local0 then
		return f92_local0
	else
		return ""
	end
end

function CombatRecordGetTwoStatRatioForItemIndex( f93_arg0, f93_arg1, f93_arg2, f93_arg3 )
	local f93_local0 = CoD.GetCombatRecordStats( f93_arg0 ) --[[ @ 0]]
	return CoD.GetDisplayRatioFromTwoStats( CoD.GetCombatRecordStatForPath( f93_local0, "ItemStats." .. f93_arg3 .. ".stats." .. f93_arg1 ), CoD.GetCombatRecordStatForPath( f93_local0, "ItemStats." .. f93_arg3 .. ".stats." .. f93_arg2 ) )
end

function CombatRecordGetComparisonTwoStatRatioForItemIndex( f94_arg0, f94_arg1, f94_arg2, f94_arg3 )
	local f94_local0, f94_local1 = nil --[[ @ 0]]
	local f94_local2 = CoD.GetCombatRecordComparisonStats( f94_arg0 ) --[[ @ 0]]
	if f94_local2 then
		f94_local0 = CoD.GetCombatRecordStatForPath( f94_local2, "ItemStats." .. f94_arg3 .. ".stats." .. f94_arg1 ) --[[ @ 0]]
		f94_local1 = CoD.GetCombatRecordStatForPath( f94_local2, "ItemStats." .. f94_arg3 .. ".stats." .. f94_arg2 ) --[[ @ 0]]
	end
	return CoD.GetDisplayRatioFromTwoStats( f94_local0, f94_local1 )
end

function CombatRecordGetItemKillsOrAssistsForItemIndex( f95_arg0, f95_arg1 )
	local f95_local0 = "kills" --[[ @ 0]]
	if Engine[@"isitempassive"]( f95_arg1, CoD.GetCombatRecordMode() ) then
		f95_local0 = "assists" --[[ @ 0]]
	end
	local f95_local1 = CoD.GetCombatRecordStatForPath( CoD.GetCombatRecordStats( f95_arg0 ), "ItemStats." .. f95_arg1 .. ".stats." .. f95_local0 ) --[[ @ 0]]
	if f95_local1 then
		return f95_local1
	else
		return ""
	end
end

function CombatRecordGetComparisonItemKillsOrAssistsForItemIndex( f96_arg0, f96_arg1 )
	local f96_local0 = "kills" --[[ @ 0]]
	if Engine[@"isitempassive"]( f96_arg1, CoD.GetCombatRecordMode() ) then
		f96_local0 = "assists" --[[ @ 0]]
	end
	local f96_local1 = nil --[[ @ 0]]
	local f96_local2 = CoD.GetCombatRecordComparisonStats( f96_arg0 ) --[[ @ 0]]
	if f96_local2 then
		f96_local1 = CoD.GetCombatRecordStatForPath( f96_local2, "ItemStats." .. f96_arg1 .. ".stats." .. f96_local0 ) --[[ @ 0]]
	end
	if f96_local1 then
		return f96_local1
	else
		return ""
	end
end

function CombatRecordGetKillsOrAssistsRatioForItemIndex( f97_arg0, f97_arg1, f97_arg2 )
	local f97_local0 = "kills" --[[ @ 0]]
	if Engine[@"isitempassive"]( f97_arg2, CoD.GetCombatRecordMode() ) then
		f97_local0 = "assists" --[[ @ 0]]
	end
	local f97_local1 = CoD.GetCombatRecordStats( f97_arg0 ) --[[ @ 0]]
	return CoD.GetDisplayRatioFromTwoStats( CoD.GetCombatRecordStatForPath( f97_local1, "ItemStats." .. f97_arg2 .. ".stats." .. f97_local0 ), CoD.GetCombatRecordStatForPath( f97_local1, "ItemStats." .. f97_arg2 .. ".stats." .. f97_arg1 ) )
end

function CombatRecordGetComparisonKillsOrAssistsRatioForItemIndex( f98_arg0, f98_arg1, f98_arg2 )
	local f98_local0 = "kills" --[[ @ 0]]
	if Engine[@"isitempassive"]( f98_arg2, CoD.GetCombatRecordMode() ) then
		f98_local0 = "assists" --[[ @ 0]]
	end
	local f98_local1, f98_local2 = nil --[[ @ 0]]
	local f98_local3 = CoD.GetCombatRecordComparisonStats( f98_arg0 ) --[[ @ 0]]
	if f98_local3 then
		f98_local1 = CoD.GetCombatRecordStatForPath( f98_local3, "ItemStats." .. f98_arg2 .. ".stats." .. f98_local0 ) --[[ @ 0]]
		f98_local2 = CoD.GetCombatRecordStatForPath( f98_local3, "ItemStats." .. f98_arg2 .. ".stats." .. f98_arg1 ) --[[ @ 0]]
	end
	return CoD.GetDisplayRatioFromTwoStats( f98_local1, f98_local2 )
end

function RankToLevelNumber( f99_arg0, f99_arg1 )
	return Engine[@"getrankdisplaylevel"]( f99_arg1, CoD.ModeStringToMode( f99_arg0 ) )
end

function LevelStringFromStorage( f100_arg0, f100_arg1, f100_arg2 )
	local f100_local0 = CoD.ModeStringToMode( f100_arg1 ) --[[ @ 0]]
	if LuaUtils.GameModeAvailable( f100_local0 ) then
		if IsGameModeParagonCapable( f100_local0 ) and CoD.PrestigeUtility.GetPrestigeCap( f100_local0 ) <= StorageLookup( f100_arg0, "playerstatslist.plevel.statvalue", f100_arg2 ) then
			return Engine[@"toupper"]( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_621235EA457AB637", Engine[@"getparagonrankdisplaylevel"]( StorageLookup( f100_arg0, "playerstatslist.paragon_rank.statvalue", f100_arg2 ), f100_local0 ) ) )
		else
			return Engine[@"toupper"]( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_621235EA457AB637", Engine[@"getrankdisplaylevel"]( StorageLookup( f100_arg0, "playerstatslist.rank.statvalue", f100_arg2 ), f100_local0 ) ) )
		end
	else
		return Engine[@"toupper"]( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_621235EA457AB637", 0 ) )
	end
end

function RankTitleFromStorage( f101_arg0, f101_arg1, f101_arg2 )
	return CoD.GetRankName( StorageLookup( f101_arg0, "playerstatslist.rank.statvalue", f101_arg2 ), StorageLookup( f101_arg0, "playerstatslist.plevel.statvalue", f101_arg2 ), CoD.ModeStringToMode( f101_arg1 ) )
end

function GetRankOrParagonIcon( f102_arg0, f102_arg1, f102_arg2, f102_arg3, f102_arg4, f102_arg5 )
	local f102_local0 = CoD.ModeStringToMode( f102_arg4 ) --[[ @ 0]]
	local f102_local1 = StorageLookup( f102_arg0, f102_arg1, f102_arg5 ) --[[ @ 0]]
	local f102_local2 = StorageLookup( f102_arg0, f102_arg2, f102_arg5 ) --[[ @ 0]]
	if IsGameModeParagonCapable( f102_local0 ) and f102_local2 == CoD.PrestigeUtility.GetPrestigeCap( f102_local0 ) then
		local f102_local3 = StorageLookup( f102_arg0, f102_arg3, f102_arg5 ) --[[ @ 0]]
		if f102_local3 ~= CoD.PrestigeUtility.INVALID_PARAGON_ICON_ID then
			return Engine[@"getparagoniconbyid"]( f102_local3, f102_local0 )
		end
	end
	return Engine[@"getrankicon"]( f102_local1, f102_local2, f102_local0 )
end

function GetRankIconLarge( f103_arg0 )
	if not f103_arg0 or f103_arg0 == "" or f103_arg0 == @"hash_0" or f103_arg0 == @"blacktransparent" or f103_arg0 == @"$blacktransparent" then
		return @"$blacktransparent"
	else
		return f103_arg0 .. "_large"
	end
end

function LocalServerStatusToString( f104_arg0 )
	if f104_arg0 == 0 then
		return @"menu/lobby"
	else
		return @"menu/in_game"
	end
end

function PresenceToModeString( f105_arg0 )
	local f105_local0 = tonumber( f105_arg0 ) --[[ @ 0]]
	if f105_local0 == Enum[@"presencetitle"][@"hash_51CF21FD793411B9"] then
		return @"menu/offline"
	elseif f105_local0 == Enum[@"presencetitle"][@"hash_7A2184EBB293AF2D"] or f105_local0 == Enum[@"presencetitle"][@"hash_6C14960E60DA36B7"] then
		return @"menu/online"
	elseif f105_local0 >= Enum[@"presencetitle"][@"hash_669F9F19327AE3B3"] and f105_local0 <= Enum[@"presencetitle"][@"hash_659DAD56E9325476"] then
		return @"menu/main_menu"
	elseif f105_local0 >= Enum[@"presencetitle"][@"hash_21DB40BC5D7A26F2"] and f105_local0 <= Enum[@"presencetitle"][@"hash_5DD9D1D4A601036C"] then
		return LuaUtils.GetDisplayNameForEMode( Enum[@"emodes"][@"mode_zombies"] )
	elseif f105_local0 >= Enum[@"presencetitle"][@"hash_41632587246C118A"] and f105_local0 <= Enum[@"presencetitle"][@"hash_30EDDB0D016B3F54"] then
		return LuaUtils.GetDisplayNameForEMode( Enum[@"emodes"][@"mode_multiplayer"] )
	elseif f105_local0 >= Enum[@"presencetitle"][@"hash_361619C03C7E6934"] and f105_local0 <= Enum[@"presencetitle"][@"hash_886E7F57ED1ED3A"] then
		return @"menu/campaign"
	elseif f105_local0 >= Enum[@"presencetitle"][@"hash_179F90DEF3681532"] and f105_local0 <= Enum[@"presencetitle"][@"hash_435923F6DC7C09AC"] then
		return LuaUtils.GetDisplayNameForEMode( Enum[@"emodes"][@"mode_warzone"] )
	elseif f105_local0 >= Enum[@"presencetitle"][@"hash_65EEADE3AFEF0F50"] and f105_local0 <= Enum[@"presencetitle"][@"hash_4AE1F1FC5A87498E"] then
		return @"hash_407D527CD96A3419"
	else
		return @"hash_2C79EA24AB1A2BA"
	end
end

function StickyPartyStatusToString( f106_arg0 )
	local f106_local0 = CoD.LobbyUtility.Presence.StickyLobbyStrings[f106_arg0] --[[ @ 0]]
	if f106_local0 ~= nil then
		return f106_local0
	else
		return @"hash_2C79EA24AB1A2BA"
	end
end

function LobbyJoinableToString( f107_arg0 )
	local f107_local0 = CoD.LobbyUtility.Presence.LobbyJoinableStrings[tonumber( f107_arg0 )] --[[ @ 0]]
	if f107_local0 ~= nil then
		return f107_local0
	else
		return @"hash_634F5097A432DED7"
	end
end

function PlatformPresenceToLocalizedString( f108_arg0 )
	local f108_local0 = f108_arg0 --[[ @ 0]]
	if f108_arg0 == "" or CoD.isDurango and (f108_arg0 == "???" or f108_arg0 == "Default Title") then
		return ""
	else
		return f108_arg0
	end
end

function SocialShowPartyHeader( f109_arg0 )
	if 0 < f109_arg0 then
		return 1
	else
		return 0
	end
end

function ShowPlatformPresence( f110_arg0 )
	local f110_local0 = tonumber( f110_arg0 ) --[[ @ 0]]
	if enumValue == 0 then
		return 1
	else
		return 0
	end
end

function LocalizeWithNatType( f111_arg0 )
	local f111_local0 = tonumber( f111_arg0 ) --[[ @ 0]]
	if f111_local0 == 1 then
		return Engine[@"hash_4F9F1239CFD921FE"]( @"hash_1BE02352B7C7ADA9", Engine[@"hash_4F9F1239CFD921FE"]( @"hash_26ED205D2902BCCD" ) )
	elseif f111_local0 == 2 then
		return Engine[@"hash_4F9F1239CFD921FE"]( @"hash_1BE02352B7C7ADA9", Engine[@"hash_4F9F1239CFD921FE"]( @"hash_6382C5E67F9468C" ) )
	elseif f111_local0 == 3 then
		return Engine[@"hash_4F9F1239CFD921FE"]( @"hash_1BE02352B7C7ADA9", Engine[@"hash_4F9F1239CFD921FE"]( @"hash_59AA44209F0D1934" ) )
	else
		return Engine[@"hash_4F9F1239CFD921FE"]( @"hash_1BE02352B7C7ADA9", Engine[@"hash_4F9F1239CFD921FE"]( @"hash_2BB00DBB82414EFB" ) )
	end
end

function PartyPrivacy( f112_arg0 )
	return LobbyData.PartyPrivacyToString( tonumber( f112_arg0 ) )
end

function DivideByScoreLimit( f113_arg0, f113_arg1, f113_arg2, f113_arg3, f113_arg4 )
	local f113_local0 = nil --[[ @ 0]]
	if Dvar[@"g_gametype"]:get() == "dom" or Dvar[@"g_gametype"]:get() == "ball" or Dvar[@"g_gametype"]:get() == "dom_dm" then
		local f113_local1 = Engine[@"getgametypesetting"]( @"roundlimit" ) or 0 --[[ @ 0]]
		local f113_local2 = Engine[@"getgametypesetting"]( @"roundscorelimit" ) or 0 --[[ @ 0]]
		if f113_local1 > 2 then
			f113_local0 = (Engine[@"getroundsplayed"]( f113_arg0 ) + 1) * f113_local2 --[[ @ 0]]
		else
			f113_local0 = f113_local1 * f113_local2 --[[ @ 0]]
		end
	else
		f113_local0 = CoD.SafeGetModelValue( Engine[@"getmodelforcontroller"]( f113_arg0 ), "gameScore.scoreLimit" ) --[[ @ 0]]
	end
	if f113_local0 then
		return f113_arg1 / f113_local0, f113_arg2 / f113_local0, f113_arg3 / f113_local0, f113_arg4 / f113_local0
	else
		return f113_arg1, f113_arg2, f113_arg3, f113_arg4
	end
end

function SessionModeToLocalizedSessionMode( f114_arg0 )
	local f114_local0 = @"menu/multiplayer" --[[ @ 0]]
	if f114_arg0 == Enum[@"emodes"][@"mode_zombies"] then
		f114_local0 = @"menu/zombies" --[[ @ 0]]
	elseif f114_arg0 == Enum[@"emodes"][@"mode_campaign"] then
		f114_local0 = @"menu/campaign" --[[ @ 0]]
	end
	return Engine[@"hash_4F9F1239CFD921FE"]( f114_local0 )
end

function SessionModeToUnlocalizedSessionModeCaps( f115_arg0 )
	local f115_local0 = @"menu/multiplayer" --[[ @ 0]]
	if f115_arg0 == Enum[@"emodes"][@"mode_zombies"] then
		f115_local0 = @"menu/zombies" --[[ @ 0]]
	elseif f115_arg0 == Enum[@"emodes"][@"mode_campaign"] then
		f115_local0 = @"menu/campaign" --[[ @ 0]]
	end
	return f115_local0
end

function MapNameToLocalizedMapName( f116_arg0 )
	return Engine[@"toupper"]( CoD.MapUtility.GetLocalizedMapValue( f116_arg0, "mapName", "" ) )
end

function MapNameToLocalizedMapDetailedName( f117_arg0, f117_arg1, f117_arg2 )
	local f117_local0 = Engine[@"toupper"]( CoD.MapUtility.GetLocalizedMapValue( f117_arg2, f117_arg1, "" ) ) --[[ @ 0]]
	if f117_local0 and f117_local0 ~= @"hash_0" then
		return CoD.StoreUtility.PrependPurchaseIconIfNeeded( f117_arg0, f117_arg2, f117_local0 )
	else
		return @"hash_0"
	end
end

function MapNameToLocalizedMapDetailedNameIfPurchasable( f118_arg0, f118_arg1, f118_arg2, f118_arg3 )
	local f118_local0 = Engine[@"toupper"]( CoD.MapUtility.GetLocalizedMapValue( f118_arg3, f118_arg2, "" ) ) --[[ @ 0]]
	if f118_local0 and f118_local0 ~= @"hash_0" then
		return f118_local0
	else
		return @"hash_0"
	end
end

function MapNameToLocalizedMapDescription( f119_arg0 )
	return CoD.MapUtility.GetLocalizedMapValue( f119_arg0, "mapDescription", "" )
end

function MapNameToLocalizedMapDetailedDescription( f120_arg0, f120_arg1 )
	local f120_local0 = CoD.MapUtility.GetLocalizedMapValue( f120_arg1, "mapDescription", "" ) --[[ @ 0]]
	if f120_local0 and f120_local0 ~= "" then
		return CoD.StoreUtility.AddUpsellToDescriptionIfNeeded( f120_arg0, f120_arg1, Engine[@"hash_4F9F1239CFD921FE"]( f120_local0 ) )
	else
		return ""
	end
end

function MapNameToMapImage( f121_arg0 )
	return CoD.BaseUtility.GetMapValue( f121_arg0, "previewImage", "$black" )
end

function MapNameToMapLoadingImage( f122_arg0, f122_arg1 )
	return CoD.BaseUtility.GetMapValue( f122_arg1, CoD.isWarzone and "$black" or "loadingImage", "$black" )
end

function GameTypeToLocalizedGameType( f123_arg0 )
	if f123_arg0 == nil or f123_arg0 == "" or f123_arg0 == @"hash_0" then
		return ""
	else
		local f123_local0 = Engine[@"getgametypeinfo"]( f123_arg0 ) --[[ @ 0]]
		if f123_local0.nameRefCaps == nil then
			return ""
		else
			return Engine[@"hash_4F9F1239CFD921FE"]( f123_local0.nameRefCaps )
		end
	end
end

function GameTypeToLocalizedGameTypeDescription( f124_arg0 )
	if f124_arg0 == nil or f124_arg0 == "" or f124_arg0 == @"hash_0" then
		return ""
	else
		local f124_local0 = Engine[@"getgametypeinfo"]( f124_arg0 ) --[[ @ 0]]
		if f124_local0.descriptionRef == nil then
			return ""
		else
			return Engine[@"hash_4F9F1239CFD921FE"]( f124_local0.descriptionRef )
		end
	end
end

function GameTypeToImage( f125_arg0 )
	if f125_arg0 == nil or f125_arg0 == "" then
		return ""
	else
		local f125_local0 = Engine[@"getgametypeinfo"]( f125_arg0 ) --[[ @ 0]]
		return f125_local0.image
	end
end

function GetGametypeImage( f126_arg0 )
	return GameTypeToImage( Engine[@"lobbygetgametype"]() )
end

function LocalizedGameType( f127_arg0 )
	local f127_local0 = Engine[@"getgametypeinfo"]( Engine[@"lobbygetgametype"]() ) --[[ @ 0]]
	return f127_local0.nameRefCaps and Engine[@"hash_4F9F1239CFD921FE"]( f127_local0.nameRefCaps ) or ""
end

function GetGameModeOnMapName( f128_arg0 )
	return CoD.BaseUtility.GetGameModeOnMapNameString( Engine[@"lobbygetgametype"](), Engine[@"lobbygetmap"]() )
end

function GetGameMode( f129_arg0 )
	local f129_local0 = Engine[@"getgametypeinfo"]( Engine[@"lobbygetgametype"]() ) --[[ @ 0]]
	local f129_local1 --[[ @ 0]]
	if f129_local0 then
		f129_local1 = Engine[@"hash_4F9F1239CFD921FE"]( f129_local0.nameRef ) --[[ @ 0]]
		if not f129_local1 then
		
		else
			return f129_local1
		end
	end
	f129_local1 = "" --[[ @ 0]]
end

function GetMapName( f130_arg0 )
	local f130_local0 = Engine[@"lobbygetmap"]() --[[ @ 0]]
	return CoD.MapUtility.GetLocalizedMapValue( f130_local0, "mapName", f130_local0 )
end

function GetHeroIndexForClientNum( f131_arg0, f131_arg1 )
	local f131_local0 = f131_arg1 --[[ @ 0]]
	if f131_local0 == -1 then
		return 0
	else
		local f131_local1 = Engine[@"getheroindexforclientnum"]( f131_arg0, f131_local0 ) --[[ @ 0]]
		if f131_local1 ~= nil then
			return f131_local1
		else
			return 0
		end
	end
end

function GetCharacterDisplayNameByIndex( f132_arg0 )
	return CoD.PlayerRoleUtility.GetCharacterDisplayNameByIndex( f132_arg0, Engine[@"currentsessionmode"]() )
end

function GetPositionDraftStatePortraitByIndex( f133_arg0, f133_arg1 )
	local f133_local0 = f133_arg1 --[[ @ 0]]
	local f133_local1 = f133_arg0 --[[ @ 0]]
	local f133_local2 = CoD.PlayerRoleUtility.GetCachedHeroInfo( Engine[@"currentsessionmode"](), f133_local0 ) --[[ @ 0]]
	local f133_local3 = nil --[[ @ 0]]
	if f133_local2 and f133_local2.positionDraftPortrait then
		f133_local3 = f133_local2.positionDraftPortrait --[[ @ 0]]
		if f133_local1 == CoD.HUDUtility.CharacterPortraitStates.CHARACTER_PORTRAIT_CRITICAL then
			f133_local3 = f133_local2.positionDraftPortraitCritical or f133_local3 --[[ @ 0]]
		elseif f133_local1 == CoD.HUDUtility.CharacterPortraitStates.CHARACTER_PORTRAIT_WOUNDED then
			f133_local3 = f133_local2.positionDraftPortraitWounded or f133_local3 --[[ @ 0]]
		elseif f133_local1 == CoD.HUDUtility.CharacterPortraitStates.CHARACTER_PORTRAIT_BUFFED then
			f133_local3 = f133_local2.positionDraftPortraitBuffed or f133_local3 --[[ @ 0]]
		elseif f133_local1 == CoD.HUDUtility.CharacterPortraitStates.CHARACTER_PORTRAIT_HEALING then
			f133_local3 = f133_local2.positionDraftPortraitHealing or f133_local3 --[[ @ 0]]
		end
	end
	return f133_local3 or "$blacktransparent"
end

function GetPositionDraftIconByIndex( f134_arg0 )
	local f134_local0 = CoD.PlayerRoleUtility.GetCachedHeroInfo( Engine[@"currentsessionmode"](), f134_arg0 ) --[[ @ 0]]
	if f134_local0 == nil or f134_local0.positionDraftIcon == nil then
		return "$blacktransparent"
	else
		return f134_local0.positionDraftIcon
	end
end

function GetStoryMomentHintForFocusedCharacter( f135_arg0, f135_arg1 )
	local f135_local0 = Engine[@"getmodelforcontroller"]( f135_arg0 ) --[[ @ 0]]
	f135_local0 = f135_local0:create( "PositionDraft.focusedCharacterIndex" ) --[[ @ 0]]
	f135_local0 = f135_local0:get() --[[ @ 0]]
	if f135_local0 == nil or f135_local0 <= 0 then
		return ""
	end
	for f135_local4, f135_local5 in ipairs( CoD.PlayerRoleUtility.GetHeroList( Engine[@"currentsessionmode"]() ) ) --[[ @ 0]] do
		if f135_local5.bodyIndex == f135_local0 then
			return Engine[@"hash_4F9F1239CFD921FE"]( @"hash_32B2F5CD924F5F0D", Engine[@"hash_4F9F1239CFD921FE"]( f135_local5.displayName ) )
		end
	end
	return ""
end

function GetPrestigeTitleForPLevelAndMode( f136_arg0, f136_arg1 )
	if f136_arg1 == CoD.PrestigeUtility.GetPrestigeCap( CoD.ModeStringToMode( f136_arg0 ) ) then
		return Engine[@"hash_4F9F1239CFD921FE"]( @"menu/prestige_master" )
	elseif f136_arg1 > 0 then
		return Engine[@"hash_4F9F1239CFD921FE"]( @"hash_4910399F02006FB7", f136_arg1 )
	else
		return ""
	end
end

function GetPrestigeTitleText( f137_arg0, f137_arg1 )
	if IsMaxPrestigeLevel( f137_arg0 ) then
		return Engine[@"hash_4F9F1239CFD921FE"]( @"hash_7754A8D073F00C06" )
	else
		local f137_local0 = CoD.PrestigeUtility.GetCurrentPLevel( f137_arg0 ) + 1 --[[ @ 0]]
		if IsAtXPCap( f137_arg0 ) and f137_local0 ~= CoD.PrestigeUtility.GetPrestigeCap( CoD.PrestigeUtility.GetPrestigeGameMode() ) then
			return Engine[@"hash_4F9F1239CFD921FE"]( @"hash_5E574BBAD7F9CEAE", f137_local0 )
		elseif f137_local0 == CoD.PrestigeUtility.GetPrestigeCap( CoD.PrestigeUtility.GetPrestigeGameMode() ) then
			return Engine[@"hash_4F9F1239CFD921FE"]( @"menu/prestige_master" )
		else
			return Engine[@"hash_4F9F1239CFD921FE"]( @"hash_4910399F02006FB7", f137_local0 )
		end
	end
end

function HideIfPrestigeMaster( f138_arg0, f138_arg1 )
	if IsMaxPrestigeLevel( f138_arg0 ) then
		return 0
	else
		return f138_arg1
	end
end

function SetToDisabledIfNotAtXPCap( f139_arg0, f139_arg1 )
	if not IsMaxPrestigeLevel( f139_arg0 ) and not IsAtXPCap( f139_arg0 ) then
		f139_arg1 = f139_arg1 .. "_disabled" --[[ @ 0]]
	end
	return f139_arg1
end

function GetPermanentUnlockTokenText( f140_arg0, f140_arg1 )
	local f140_local0 = @"hash_7F57ABF99A89DCDD" --[[ @ 0]]
	if f140_arg1 == 1 then
		f140_local0 = @"hash_42DCDC8722C33D24" --[[ @ 0]]
	end
	return Engine[@"hash_4F9F1239CFD921FE"]( f140_local0, f140_arg1 )
end

function SetToParagonColorIfPrestigeMasterByRank( f141_arg0, f141_arg1, f141_arg2, f141_arg3 )
	if IsInParagonCapableGameMode() then
		local f141_local0 = tonumber( f141_arg3 ) --[[ @ 0]]
		if f141_local0 and f141_local0 > CoD.RankUtility.GetRankCap() + 1 then
			f141_arg0 = ColorSet.ParagonRank.r * 255 --[[ @ 0]]
			f141_arg1 = ColorSet.ParagonRank.g * 255 --[[ @ 0]]
			f141_arg2 = ColorSet.ParagonRank.b * 255 --[[ @ 0]]
		end
	end
	return f141_arg0 / 255, f141_arg1 / 255, f141_arg2 / 255
end

function SetToParagonColorIfPrestigeMasterForScoreboard( f142_arg0, f142_arg1, f142_arg2, f142_arg3, f142_arg4 )
	return SetToParagonColorIfPrestigeMasterByRank( f142_arg1, f142_arg2, f142_arg3, GetScoreboardPlayerRank( f142_arg0, f142_arg4 ) )
end

function SetToParagonColorIfPrestigeMasterForLeaderboard( f143_arg0, f143_arg1, f143_arg2, f143_arg3 )
	local f143_local0 = CoD.GetCombatRecordMode() --[[ @ 0]]
	if IsGameModeParagonCapable( f143_local0 ) and f143_arg3 == CoD.PrestigeUtility.GetPrestigeCap( f143_local0 ) then
		f143_arg0 = ColorSet.ParagonRank.r * 255 --[[ @ 0]]
		f143_arg1 = ColorSet.ParagonRank.g * 255 --[[ @ 0]]
		f143_arg2 = ColorSet.ParagonRank.b * 255 --[[ @ 0]]
	end
	return f143_arg0 / 255, f143_arg1 / 255, f143_arg2 / 255
end

function SetToParagonColorIfPrestigeMasterFromStorage( f144_arg0, f144_arg1, f144_arg2, f144_arg3, f144_arg4, f144_arg5 )
	local f144_local0 = CoD.ModeStringToMode( f144_arg1 ) --[[ @ 0]]
	if IsGameModeParagonCapable( f144_local0 ) and StorageLookup( f144_arg0, "playerstatslist.plevel.statvalue", f144_arg5 ) == CoD.PrestigeUtility.GetPrestigeCap( f144_local0 ) then
		f144_arg2 = ColorSet.ParagonRank.r * 255 --[[ @ 0]]
		f144_arg3 = ColorSet.ParagonRank.g * 255 --[[ @ 0]]
		f144_arg4 = ColorSet.ParagonRank.b * 255 --[[ @ 0]]
	end
	return f144_arg2 / 255, f144_arg3 / 255, f144_arg4 / 255
end

function GetPrestigeMasterTierCountByRank( f145_arg0 )
	local f145_local0 = 0 --[[ @ 0]]
	if IsInParagonCapableGameMode() then
		local f145_local1 = tonumber( f145_arg0 ) --[[ @ 0]]
		if f145_local1 and f145_local1 > CoD.RankUtility.GetRankCap() + 1 then
			f145_local0 = math.floor( f145_local1 / 100 ) --[[ @ 0]]
		end
	end
	return f145_local0
end

function GetPrestigeMasterTierCountFromStorage( f146_arg0, f146_arg1, f146_arg2 )
	local f146_local0 = 0 --[[ @ 0]]
	local f146_local1 = CoD.ModeStringToMode( f146_arg1 ) --[[ @ 0]]
	if IsGameModeParagonCapable( f146_local1 ) and CoD.PrestigeUtility.GetCurrentPLevel( f146_arg0, f146_local1 ) == CoD.PrestigeUtility.GetPrestigeCap( f146_local1 ) then
		local f146_local2 = CoD.GetPlayerStats( f146_arg0 ) --[[ @ 0]]
		f146_local0 = math.floor( (f146_local2.PlayerStatsList.PARAGON_RANK.statValue:get() + 1) / 100 ) --[[ @ 0]]
	end
	return f146_local0
end

function FileshareGetDownloadProgress( f147_arg0 )
	if not IsInTheaterMode() then
		return ""
	end
	local f147_local0 = Engine[@"createmodel"]( Engine[@"getglobalmodel"](), "lobbyRoot.theaterDownloadPercent" ) --[[ @ 0]]
	if f147_local0 then
		local f147_local1 = Engine[@"getmodelvalue"]( f147_local0 ) --[[ @ 0]]
		if f147_local1 ~= nil then
			return Engine[@"hash_4F9F1239CFD921FE"]( @"hash_4658F66BBA1E1ADF", f147_local1 )
		end
	end
	return ""
end

function GetImageViewerParams( f148_arg0, f148_arg1 )
	return Enum[@"screenshotviewtype"][Engine[@"converttoxhash"]( f148_arg0 )], f148_arg1
end

function GetObjectiveProperty( f149_arg0, f149_arg1 )
	local f149_local0 = f149_arg1 and CoD.HUDUtility.GetCachedObjective( f149_arg1 ) --[[ @ 0]]
	local f149_local1 --[[ @ 0]]
	if f149_local0 then
		f149_local1 = f149_local0[Engine[@"converttoxhash"]( f149_arg0 )] --[[ @ 0]]
		if not f149_local1 then
		
		else
			return f149_local1
		end
	end
	f149_local1 = @"hash_0" --[[ @ 0]]
end

function GetObjectiveXHashProperty( f150_arg0, f150_arg1 )
	local f150_local0 = f150_arg1 and CoD.HUDUtility.GetCachedObjective( f150_arg1 ) --[[ @ 0]]
	local f150_local1 --[[ @ 0]]
	if f150_local0 then
		f150_local1 = f150_local0[f150_arg0] --[[ @ 0]]
		if not f150_local1 then
		
		else
			return f150_local1
		end
	end
	f150_local1 = @"hash_0" --[[ @ 0]]
end

function LocalizeWithKeyBinding( f151_arg0, f151_arg1, f151_arg2 )
	local f151_local0 = Engine[@"keybinding"]( f151_arg0, f151_arg1 ) --[[ @ 0]]
	if f151_local0 then
		return Engine[@"hash_4F9F1239CFD921FE"]( f151_arg2, f151_local0 )
	else
		return Engine[@"hash_4F9F1239CFD921FE"]( f151_arg2 )
	end
end

function GetCurrentCPObjectiveText( f152_arg0, f152_arg1 )
	local f152_local0 = DataSources.CPObjectiveUIData.getModel( f152_arg0 ) --[[ @ 0]]
	if not f152_local0 then
		return ""
	else
		local f152_local1 = f152_local0.currentZone:get() --[[ @ 0]]
		if f152_local0["zone" .. f152_local1 .. ".teamObjective"] then
			return f152_local0["zone" .. f152_local1 .. ".teamObjective"]:get()
		else
			return ""
		end
	end
end

function GetCPInstructionText( f153_arg0, f153_arg1 )
	local f153_local0 = Engine[@"getmodelforcontroller"]( f153_arg0 ) --[[ @ 0]]
	return Engine[@"getistring"]( f153_local0.hudItems.cpInstructionText:get(), "CS_LOCALIZED_STRINGS" )
end

function ZombieClientScoreboardColor( f154_arg0 )
	local f154_local0, f154_local1, f154_local2, f154_local3 = Dvar["cg_ScoresColor_Gamertag_" .. f154_arg0].get( f154_local0["cg_ScoresColor_Gamertag_" .. f154_arg0] ) --[[ @ 0]]
	return f154_local0, f154_local1, f154_local2
end

function ZombieClientScoreboardGlowColor( f155_arg0 )
	local f155_local0, f155_local1, f155_local2, f155_local3 = Dvar["cg_ScoresColor_Gamertag_" .. f155_arg0].get( f155_local0["cg_ScoresColor_Gamertag_" .. f155_arg0] ) --[[ @ 0]]
	return f155_local0 * 0.75, f155_local1 * 0.75, f155_local2 * 0.75
end

function GetEmblemIndexParams( f156_arg0, f156_arg1 )
	return f156_arg0, f156_arg1, CoD.perController[f156_arg0].selectedEmblemTabStorageType
end

function GetEmblemRenderInfo( f157_arg0, f157_arg1 )
	local f157_local0 = LUI.splitString( f157_arg1, "," ) --[[ @ 0]]
	return f157_arg0, f157_local0[1], f157_local0[2]
end

function GetDecalGroupIndexParams( f158_arg0, f158_arg1 )
	return f158_arg0, f158_arg1, CoD.CraftUtility.Groups.GetSelectedStorageFileType( f158_arg0 )
end

function GetEmblemLayerAndGroupIndex( f159_arg0, f159_arg1 )
	local f159_local0 = {} --[[ @ 0]]
	for f159_local4 in string.gmatch( f159_arg1, "%S+" ) --[[ @ 0]] do
		f159_local0[#f159_local0 + 1] = f159_local4 --[[ @ 0]]
	end
	return f159_local0[1], f159_local0[2], CoD.GetCustomization( f159_arg0, "type" )
end

function GetEmblemDecalDesc( f160_arg0 )
	local f160_local0 = Engine[@"getdecaldesc"]( f160_arg0 ) --[[ @ 0]]
	if f160_local0 ~= nil then
		return f160_local0
	else
		return @"hash_0"
	end
end

function GetPaintjobName( f161_arg0 )
	if f161_arg0 == "" then
		return Engine[@"hash_4F9F1239CFD921FE"]( @"hash_4DFFD9B8A1D5E6D4" )
	else
		return f161_arg0
	end
end

function GetPaintjobIndexParams( f162_arg0, f162_arg1 )
	return f162_arg0, f162_arg1, Enum[@"storagefiletype"][@"storage_paintjobs"]
end

function GetPaintshopExtraCamParameters( f163_arg0, f163_arg1 )
	local f163_local0 = f163_arg1 --[[ @ 0]]
	local f163_local1 = CoD.CraftUtility.Paintjobs.GetPaintjobWeaponIndex( f163_arg0, f163_local0 ) --[[ @ 0]]
	if f163_local1 == 0 then
		f163_local1 = CoD.GetCustomization( f163_arg0, "weapon_index" ) or 0 --[[ @ 0]]
	end
	local f163_local2 = Engine[@"hash_7B98952F69D937F9"]( f163_local1, Enum[@"statindexoffset"][@"hash_6569E84652131CD7"], Enum[@"emodes"][@"mode_multiplayer"] ) --[[ @ 0]]
	local f163_local3 = CoD.CraftUtility.GetLoadoutSlot( f163_arg0 ) --[[ @ 0]]
	local f163_local4 = "left" --[[ @ 0]]
	return f163_local3, f163_local2, CoD.WeaponOptionsUtility.GetWeaponOptionsString( 0, 0, 1 ), f163_local1, f163_local0, f163_arg0
end

function LocalizeLayerMOfN( f164_arg0, f164_arg1, f164_arg2 )
	return Engine[@"hash_4F9F1239CFD921FE"]( f164_arg0, f164_arg2, Engine[@"getusedlayercount"]( f164_arg1, CoD.GetCustomization( f164_arg1, "type" ), CoD.perController[f164_arg1].totalLayers ) )
end

function GunsmithAccuracyPercentage( f165_arg0 )
	return string.format( "%2.2f", f165_arg0 * 100 ) .. "%"
end

function GetLocalizedWeaponName( f166_arg0 )
	local f166_local0 = Engine[@"getitemname"]( tonumber( f166_arg0 ) ) --[[ @ 0]]
	if f166_local0 then
		return Engine[@"hash_4F9F1239CFD921FE"]( f166_local0 )
	else
		return ""
	end
end

function LocalizeWeaponNameIntoString( f167_arg0, f167_arg1, f167_arg2 )
	local f167_local0 = Engine[@"getitemname"]( tonumber( f167_arg2 ) ) --[[ @ 0]]
	if f167_local0 then
		return LocalizeIntoString( f167_arg0, Engine[@"toupper"]( Engine[@"hash_4F9F1239CFD921FE"]( f167_local0 ) ) )
	else
		return ""
	end
end

function GetItemNameFromIndex( f168_arg0, f168_arg1 )
	return GetItemNameForIndex( f168_arg1, f168_arg0 )
end

function GetItemDescFromIndex( f169_arg0, f169_arg1 )
	return GetItemDescForIndex( f169_arg1, f169_arg0 )
end

function GetItemNameFromRef( f170_arg0, f170_arg1 )
	if not f170_arg0 then
		f170_arg0 = Engine[@"currentsessionmode"]() --[[ @ 0]]
	end
	if not f170_arg1 or f170_arg1 == "" then
		return @"hash_0"
	end
	local f170_local0 = f170_arg1 --[[ @ 0]]
	if type( f170_local0 ) ~= "xhash" then
		f170_local0 = Engine[@"converttoxhash"]( f170_local0 ) --[[ @ 0]]
	end
	local f170_local1 = Engine[@"getunlockableinfobyindex"]( Engine[@"hash_68FF94BB44442412"]( f170_local0, f170_arg0 ), f170_arg0 ) --[[ @ 0]]
	return f170_local1.name
end

function GetItemImageFromIndex( f171_arg0, f171_arg1 )
	return GetItemImageForIndex( f171_arg1, f171_arg0 )
end

function GetHudImageFromItemIndex( f172_arg0 )
	return Engine[@"gethudiconforweapon"]( Engine[@"hash_7B98952F69D937F9"]( f172_arg0 ) .. "_" .. string.lower( CoD.gameMode ), Engine[@"currentsessionmode"]() ) or "blacktransparent"
end

function GetHudImageFromItemRefHash( f173_arg0, f173_arg1 )
	local f173_local0 = CoD.SafeGetModelValue( f173_arg0, "weapon" ) --[[ @ 0]]
	if f173_local0 and f173_local0 > 0 then
		return GetHudImageFromItemIndex( f173_local0 )
	else
		return Engine[@"gethudiconforweapon"]( f173_arg1, Engine[@"currentsessionmode"]() ) or "blacktransparent"
	end
end

function GetHudDisplayNameFromItemIndex( f174_arg0 )
	return Engine[@"hash_B680D2B7BFC8098"]( Engine[@"hash_7B98952F69D937F9"]( f174_arg0 ) .. "_" .. string.lower( CoD.gameMode ), Engine[@"currentsessionmode"]() ) or @"hash_2C79EA24AB1A2BA"
end

function GetItemImageByIndexAndMode( f175_arg0, f175_arg1 )
	return GetItemNameForIndex( f175_arg1, nil, CoD.ModeStringToMode( f175_arg0 ) )
end

function GetWeaponGadgetIconAvailable( f176_arg0 )
	local f176_local0 = BlackTransparentIfNilOrEmpty( Engine[@"getweapongadgeticonavailable"]( f176_arg0 ) ) --[[ @ 0]]
	if type( f176_local0 ) == "userdata" then
		return f176_local0
	else
		return RegisterImage( f176_local0 )
	end
end

function GetWeaponGadgetIconUnavailable( f177_arg0 )
	return Engine[@"getweapongadgeticonunavailable"]( f177_arg0 )
end

function GetConsumableCountFromIndex( f178_arg0, f178_arg1 )
	local f178_local0 = f178_arg0 --[[ @ 0]]
	if Engine[@"iszombiesgame"]() and not IsLobbyNetworkModeLAN() then
		local f178_local1 = Engine[@"hash_3475AAFCBC9AF822"]( f178_local0, Engine[@"converttoxhash"]( Engine[@"getitemref"]( f178_arg1 ) ) ) --[[ @ 0]]
		if not f178_local1 then
			return 0
		else
			return math.min( 999, math.max( f178_local1, 0 ) )
		end
	else
		return 0
	end
end

function GetWeaponItemImageFromIndex( f179_arg0 )
	return Engine[@"getitemimage"]( f179_arg0 )
end

function GetMaxAllocationAmount( f180_arg0, f180_arg1 )
	return CoD.CACUtility.GetMaxAllocation( f180_arg0 )
end

function ZeroIfNoSelection( f181_arg0, f181_arg1 )
	if not CoD.ModelUtility.IsModelValueTrue( f181_arg0, "CACHasSelection" ) then
		f181_arg1 = 0 --[[ @ 0]]
	end
	return f181_arg1
end

function GetWeaponAttributes( f182_arg0, f182_arg1, f182_arg2, f182_arg3, f182_arg4 )
	local f182_local0, f182_local1 = nil --[[ @ 0]]
	if f182_arg0 then
		f182_local0 = CoD.BaseUtility.GetMenuLoadoutSlot( f182_arg0 ) --[[ @ 0]]
		f182_local1 = CoD.BaseUtility.GetMenuLoadoutListItemSlot( f182_arg0 ) --[[ @ 0]]
	end
	if f182_local1 and (LUI.startswith( f182_local1, "primary.attachment" ) or LUI.startswith( f182_local1, "secondary.attachment" )) then
		local f182_local2 = f182_arg1 --[[ @ 0]]
		if f182_arg2 < f182_arg1 then
			f182_local2 = f182_arg2 --[[ @ 0]]
		end
		return f182_local2 / 100, f182_arg2, f182_arg3, f182_arg4
	else
		return f182_arg1 / 100, f182_arg2, f182_arg3, f182_arg4
	end
end

function GetWeaponAttributesForAttachment( f183_arg0, f183_arg1, f183_arg2, f183_arg3, f183_arg4 )
	local f183_local0, f183_local1 = nil --[[ @ 0]]
	if f183_arg0 then
		f183_local0 = CoD.BaseUtility.GetMenuLoadoutSlot( f183_arg0 ) --[[ @ 0]]
		f183_local1 = CoD.BaseUtility.GetMenuAttachmentFilter( f183_arg0 ) --[[ @ 0]]
	end
	if not (f183_local1 ~= nil or Engine[@"currentsessionmode"]() ~= Enum[@"emodes"][@"mode_multiplayer"] or f183_local0 ~= "primary" and f183_local0 ~= "secondary") or not (Engine[@"currentsessionmode"]() ~= Enum[@"emodes"][@"mode_zombies"] or f183_local0 ~= "zmStartWeapon" and f183_local0 ~= "armory") or IsInGame() and CoD.BountyHunterUtility.GameTypeIsBounty( nil ) then
		return 0, 0, 0, 0
	else
		return f183_arg1 / 100, f183_arg2 / 100, f183_arg3, f183_arg4
	end
end

function GetWeaponAttributeBaseValueForAttachment( f184_arg0, f184_arg1 )
	local f184_local0, f184_local1 = nil --[[ @ 0]]
	if f184_arg0 then
		f184_local0 = CoD.BaseUtility.GetMenuLoadoutSlot( f184_arg0 ) --[[ @ 0]]
		f184_local1 = CoD.BaseUtility.GetMenuAttachmentFilter( f184_arg0 ) --[[ @ 0]]
	end
	if not (f184_local1 ~= nil or Engine[@"currentsessionmode"]() ~= Enum[@"emodes"][@"mode_multiplayer"] or f184_local0 ~= "primary" and f184_local0 ~= "secondary") or Engine[@"currentsessionmode"]() == Enum[@"emodes"][@"mode_zombies"] and f184_local0 == "zmStartWeapon" then
		return ""
	else
		local f184_local2 = LUI.splitString( f184_arg1, "," ) --[[ @ 0]]
		if f184_local2[1] then
			return f184_local2[1]
		else
			return ""
		end
	end
end

function GetWeaponAttributeAddedValueForAttachment( f185_arg0, f185_arg1 )
	local f185_local0, f185_local1 = nil --[[ @ 0]]
	if f185_arg0 then
		f185_local0 = CoD.BaseUtility.GetMenuLoadoutSlot( f185_arg0 ) --[[ @ 0]]
		f185_local1 = CoD.BaseUtility.GetMenuAttachmentFilter( f185_arg0 ) --[[ @ 0]]
	end
	if not (f185_local1 ~= nil or Engine[@"currentsessionmode"]() ~= Enum[@"emodes"][@"mode_multiplayer"] or f185_local0 ~= "primary" and f185_local0 ~= "secondary") or Engine[@"currentsessionmode"]() == Enum[@"emodes"][@"mode_zombies"] and f185_local0 == "zmStartWeapon" then
		return ""
	end
	local f185_local2 = LUI.splitString( f185_arg1, "," ) --[[ @ 0]]
	if f185_local2[2] then
		if tonumber( f185_local2[2] ) > 0 then
			return "+" .. f185_local2[2]
		elseif tonumber( f185_local2[2] ) < 0 then
			return "" .. f185_local2[2]
		end
	end
	return ""
end

function GetClientGameLobbyXUIDForClientNum( f186_arg0 )
	local f186_local0 = f186_arg0 --[[ @ 0]]
	if f186_local0 == LuaDefine.INVALID_CLIENT_INDEX or LuaDefine.MAX_CLIENTS <= f186_local0 then
		return Engine[@"numbertouint64"]( LuaDefine.INVALID_XUID )
	else
		return Engine[@"getlobbyxuidforclientnum"]( Enum[@"lobbymodule"][@"lobby_module_client"], Engine[@"lobbygetcontrollinglobbysession"]( Enum[@"lobbymodule"][@"lobby_module_client"] ), f186_arg0 )
	end
end

function GetClientGameLobbyXUIDForClientNumString( f187_arg0 )
	return GetClientGameLobbyXUIDForClientNum( tonumber( f187_arg0 ) )
end

function GetScoreboardPlayerName( f188_arg0, f188_arg1 )
	if f188_arg1 and f188_arg1 ~= "" then
		return Engine[@"getgamertagforclient"]( f188_arg0, f188_arg1 ) or ""
	else
		return ""
	end
end

function GetScoreboardPlayerRank( f189_arg0, f189_arg1 )
	if f189_arg1 and f189_arg1 ~= "" then
		return Engine[@"getrankstringforclient"]( f189_arg0, f189_arg1 ) or ""
	else
		return ""
	end
end

function GetScoreboardPlayerRankIcon( f190_arg0, f190_arg1 )
	if f190_arg1 and f190_arg1 ~= "" then
		return Engine[@"getrankiconforclient"]( f190_arg0, f190_arg1 ) or "blacktransparent"
	else
		return ""
	end
end

function GetScoreboardPlayerScoreColumn( f191_arg0, f191_arg1, f191_arg2 )
	return Engine[@"getscoreboardcolumnforclient"]( f191_arg2, f191_arg1 )
end

function GetScoreboardCurrentStreak( f192_arg0, f192_arg1 )
	local f192_local0 = tonumber( f192_arg1 ) --[[ @ 0]]
	if f192_local0 == -1 then
		return ""
	else
		return f192_local0
	end
end

function GetCodcasterPlayerListKD( f193_arg0, f193_arg1 )
	local f193_local0 = f193_arg1 --[[ @ 0]]
	local f193_local1 = Engine[@"getmodelforclient"]( f193_local0 ) --[[ @ 0]]
	f193_local1 = f193_local1:create( "kills" ) --[[ @ 0]]
	local f193_local2 = Engine[@"getmodelforclient"]( f193_local0 ) --[[ @ 0]]
	f193_local2 = f193_local2:create( "deaths" ) --[[ @ 0]]
	local f193_local3 = f193_local1:get() --[[ @ 0]]
	local f193_local4 = f193_local2:get() --[[ @ 0]]
	if f193_local3 == "" and f193_local4 == "" then
		return ""
	elseif f193_local3 == "" or f193_local3 == nil then
		f193_local3 = "0" --[[ @ 0]]
	end
	if f193_local4 == "" or f193_local4 == nil then
		f193_local4 = "0" --[[ @ 0]]
	end
	return f193_local3 .. " / " .. f193_local4
end

function GetScoreboardColumnHeader( f194_arg0, f194_arg1, f194_arg2 )
	local f194_local0 = Engine[@"getscoreboardcolumnheader"]( f194_arg0, f194_arg1 ) or "" --[[ @ 0]]
	if CoD.BountyHunterUtility.GameTypeIsBounty( f194_arg0 ) and string.lower( f194_local0 ) == "objective score" then
		f194_local0 = Engine[@"hash_4F9F1239CFD921FE"]( @"hash_1F637558C9E3D6CD" ) --[[ @ 0]]
	end
	if CoD.HUDUtility.IsGameTypeEqualToString( "warzone_deposit" ) and string.lower( f194_local0 ) == "score" then
		f194_local0 = Engine[@"hash_4F9F1239CFD921FE"]( @"hash_3899455D1DF9CE06" ) --[[ @ 0]]
	end
	return f194_local0
end

function GetScoreboardPlayerPingBarImage( f195_arg0 )
	local f195_local0 = Engine[@"getpingimagecount"]() --[[ @ 0]]
	if Dvar[@"hash_7DDC61194A7E2C0C"]:get() == false then
		if Dvar[@"cg_scoresping_interval"]:get() > 1 and f195_arg0 > 0 then
			return "ping_bar_0" .. f195_arg0
		end
	elseif Dvar[@"hash_7DDC61194A7E2C0C"]:get() > 1 and f195_arg0 > 0 then
		return "ping_bar_0" .. f195_arg0
	end
	return "blacktransparent"
end

function GetScoreboardPlayerPingRange( f196_arg0 )
	local f196_local0 = Engine[@"getpingimagecount"] and Engine[@"getpingimagecount"]() or 4 --[[ @ 0]]
	local f196_local1 = Engine[@"getpingstepms"] and Engine[@"getpingstepms"]() or 100 --[[ @ 0]]
	local f196_local2 = f196_local0 + 1 - f196_arg0 --[[ @ 0]]
	if f196_local2 == f196_local0 then
		return Engine[@"hash_4F9F1239CFD921FE"]( @"menu/ping_max", f196_local1 * (f196_local2 - 1) )
	elseif f196_local2 < f196_local0 then
		return Engine[@"hash_4F9F1239CFD921FE"]( @"menu/ping_range", f196_local1 * (f196_local2 - 1), f196_local1 * f196_local2 - 1 )
	else
		return ""
	end
end

function GetScoreboardTeamBackgroundColor( f197_arg0, f197_arg1 )
	if CoD.IsShoutcaster( f197_arg0 ) and CoD.ShoutcasterProfileVarBool( f197_arg0, "shoutcaster_ds_flip_scorepanel" ) then
		if f197_arg1 == Enum[@"team_t"][@"team_allies"] then
			f197_arg1 = Enum[@"team_t"][@"team_axis"] --[[ @ 0]]
		elseif f197_arg1 == Enum[@"team_t"][@"team_axis"] then
			f197_arg1 = Enum[@"team_t"][@"team_allies"] --[[ @ 0]]
		end
	end
	return CoD.TeamUtility.GetTeamFactionColor( f197_arg1 )
end

function GetScoreboardPingBarAlpha( f198_arg0 )
	if Engine[@"isingame"]() and IsScoreboardPingAsBars() and IsLive() then
		return 1
	else
		return 0
	end
end

function GetScoreboardPingValueAlpha( f199_arg0 )
	if Engine[@"isingame"]() and not IsScoreboardPingAsBars() and IsLive() then
		return f199_arg0
	else
		return 0
	end
end

function KillCamAllowRespawnToString( f200_arg0, f200_arg1 )
	if CoD.isPC then
		if IsGamepad( f200_arg0 ) then
			local f200_local0 --[[ @ 0]]
			if f200_arg1 == 1 then
				f200_local0 = @"hash_3210A2FFB2104D9F" --[[ @ 0]]
				if not f200_local0 then
				
				else
					return f200_local0
				end
			end
			f200_local0 = @"hash_2847731E84CD3C18" --[[ @ 0]]
		else
			local f200_local0 --[[ @ 0]]
			if f200_arg1 == 1 then
				f200_local0 = @"hash_81D69DF6BE38220" --[[ @ 0]]
				if not f200_local0 then
				
				else
					return f200_local0
				end
			end
			f200_local0 = @"hash_669667599F67B3F" --[[ @ 0]]
		end
	else
		local f200_local0 --[[ @ 0]]
		if f200_arg1 == 1 then
			f200_local0 = @"hash_40874E6C47442AD9" --[[ @ 0]]
			if not f200_local0 then
			
			else
				return f200_local0
			end
		end
		f200_local0 = @"hash_234A052BB0658AF8" --[[ @ 0]]
	end
end

function TeamStringFromPlayerIndex( f201_arg0, f201_arg1 )
	local f201_local0 = f201_arg1 --[[ @ 0]]
	if f201_local0 == -1 then
		return ""
	else
		local f201_local1 = Engine[@"getteamid"]( f201_arg0, f201_local0 ) --[[ @ 0]]
		if CoD.IsShoutcaster( f201_arg0 ) and not CoDShared.IsGametypeTeamBased() and f201_local1 ~= Enum[@"team_t"][@"team_spectator"] then
			return ""
		else
			local f201_local2 = CoD.TeamUtility.GetTeamNameCaps( f201_local1 ) --[[ @ 0]]
			if CoD.IsShoutcaster( f201_arg0 ) and CoD.TeamUtility.ShouldUseCustomTeamIdentity( f201_arg0 ) then
				return f201_local2
			else
				return Engine[@"localize"]( f201_local2 )
			end
		end
	end
end

function TeamColorFromPlayerIndex( f202_arg0, f202_arg1 )
	local f202_local0 = f202_arg1 --[[ @ 0]]
	if f202_local0 == -1 then
		return CoD.TeamUtility.GetTeamFactionColor( Enum[@"team_t"][@"team_free"] )
	end
	local f202_local1 = Engine[@"getteamid"]( f202_arg0, f202_local0 ) --[[ @ 0]]
	if CoD.IsShoutcaster( f202_arg0 ) and not CoDShared.IsGametypeTeamBased() and f202_local1 ~= Enum[@"team_t"][@"team_spectator"] then
		return CoD.TeamUtility.GetTeamFactionColor( Enum[@"team_t"][@"team_free"] )
	elseif CoD.IsShoutcaster( f202_arg0 ) and CoD.ShoutcasterProfileVarBool( f202_arg0, "shoutcaster_ds_flip_scorepanel" ) then
		if f202_arg1 == Enum[@"team_t"][@"team_allies"] then
			f202_arg1 = Enum[@"team_t"][@"team_axis"] --[[ @ 0]]
		elseif f202_arg1 == Enum[@"team_t"][@"team_axis"] then
			f202_arg1 = Enum[@"team_t"][@"team_allies"] --[[ @ 0]]
		end
	end
	return CoD.TeamUtility.GetTeamFactionColor( f202_local1 )
end

function ClientGamertagColor( f203_arg0, f203_arg1 )
	local f203_local0 = f203_arg1 --[[ @ 0]]
	if f203_local0 < 0 then
		return ColorSet.White.r, ColorSet.White.g, ColorSet.White.b
	elseif Engine[@"getclientnum"]( f203_arg0 ) == f203_local0 then
		return ColorSet.Client_Self.r, ColorSet.Client_Self.g, ColorSet.Client_Self.b
	else
		local f203_local1 = CoD.LobbyUtility.GetClient( f203_local0 ) --[[ @ 0]]
		if f203_local1 ~= nil then
			if f203_local1.team == CoD.TeamUtility.GetTeamID( f203_arg0 ) then
				if f203_local1.isMember == 1 then
					return ColorSet.Client_PartyMember.r, ColorSet.Client_PartyMember.g, ColorSet.Client_PartyMember.b
				else
					return ColorSet.Client.r, ColorSet.Client.g, ColorSet.Client.b
				end
			else
				return ColorSet.Client_Enemy.r, ColorSet.Client_Enemy.g, ColorSet.Client_Enemy.b
			end
		else
			return ColorSet.White.r, ColorSet.White.g, ColorSet.White.b
		end
	end
end

function ClientBackgroundColor( f204_arg0, f204_arg1 )
	local f204_local0 = CoD.LobbyUtility.GetClient( f204_arg1 ) --[[ @ 0]]
	if f204_local0 ~= nil and f204_local0.isMember == 1 then
		return ColorSet.Client_PartyMember.r, ColorSet.Client_PartyMember.g, ColorSet.Client_PartyMember.b
	else
		return CoD.TeamUtility.GetTeamFactionColor( Enum[@"team_t"][@"team_allies"] )
	end
end

function BlackhatHackingPercentage( f205_arg0 )
	return string.format( "%d", f205_arg0 * 100 ) .. "%"
end

function BlackhatHackingPercentageShaderValue( f206_arg0, f206_arg1, f206_arg2, f206_arg3, f206_arg4 )
	return f206_arg1, 0, 0, 0
end

function GetCategoryIconForOverlayType( f207_arg0 )
	if f207_arg0 == CoD.OverlayUtility.OverlayTypes.Connection then
		return "t7_icon_connect_overlays"
	elseif f207_arg0 == CoD.OverlayUtility.OverlayTypes.Settings then
		return "t7_icon_options_overlays"
	elseif f207_arg0 == CoD.OverlayUtility.OverlayTypes.Unlock then
		return "t7_icon_unlock_overlays"
	elseif f207_arg0 == CoD.OverlayUtility.OverlayTypes.Save then
		return "t7_icon_save_overlays"
	elseif f207_arg0 == CoD.OverlayUtility.OverlayTypes.Quit then
		return "t7_icon_quit_overlays"
	elseif f207_arg0 == CoD.OverlayUtility.OverlayTypes.Alert then
		return "t7_icon_error_overlays"
	elseif f207_arg0 == CoD.OverlayUtility.OverlayTypes.Error then
		return "t7_icon_error_overlays"
	elseif f207_arg0 == CoD.OverlayUtility.OverlayTypes.CustomGames then
		return "ui_icon_customgames"
	else
		return "blacktransparent"
	end
end

function GetAARMedalName( f208_arg0 )
	return Engine[@"localize"]( Engine[@"hash_4C6F8EC444864600"]( CoD.scoreInfoTable, f208_arg0, CoD.AARUtility.medalStringCol ) )
end

function GetAARMedalDesc( f209_arg0 )
	return Engine[@"localize"]( Engine[@"hash_4C6F8EC444864600"]( CoD.scoreInfoTable, f209_arg0, CoD.AARUtility.medalStringCol ) .. "_DESC" )
end

function GetAARMedalHitCount( f210_arg0 )
	if f210_arg0 and tonumber( f210_arg0 ) > 1 then
		return "x" .. f210_arg0
	else
		return ""
	end
end

function GetAARMedalImageSmall( f211_arg0 )
	local f211_local0 = GetMedalInfo( f211_arg0 ) --[[ @ 0]]
	if f211_local0 then
		return f211_local0.iconSmall
	else
		return ""
	end
end

function GetAARMedalImageBackingSmall( f212_arg0 )
	local f212_local0 = GetMedalInfo( f212_arg0 ) --[[ @ 0]]
	if f212_local0 then
		return f212_local0.backingSmall
	else
		return ""
	end
end

function GetAARMedalImageLarge( f213_arg0 )
	local f213_local0 = GetMedalInfo( f213_arg0 ) --[[ @ 0]]
	if f213_local0 then
		return f213_local0.iconLarge
	else
		return ""
	end
end

function GetAARMedalImageBackingLarge( f214_arg0 )
	local f214_local0 = GetMedalInfo( f214_arg0 ) --[[ @ 0]]
	if f214_local0 then
		return f214_local0.backingLarge
	else
		return ""
	end
end

function DifficultyIconFromNumber( f215_arg0 )
	local f215_local0 = tonumber( f215_arg0 or -1 ) --[[ @ 0]]
	local f215_local1 = {
		"playlist_sp_recr",
		"playlist_sp_reg",
		"playlist_sp_hard",
		"playlist_sp_vet",
		"playlist_sp_real"
	} --[[ @ 0]]
	return f215_local1[tonumber( f215_arg0 ) + 1] or "blacktransparent"
end

function PrependArenaToPlaylist( f216_arg0 )
	if IsArenaMode() then
		return Engine[@"hash_4F9F1239CFD921FE"]( @"hash_44B08B09636ECD9E" ) .. " " .. Engine[@"hash_4F9F1239CFD921FE"]( f216_arg0 )
	else
		return Engine[@"hash_4F9F1239CFD921FE"]( f216_arg0 )
	end
end

function GetArenaRank( f217_arg0 )
	return CoD.ArenaRankedPlayUtility.GetDisplayRankString( f217_arg0 )
end

function GetArenaRankIconLG( f218_arg0 )
	return CoD.ArenaRankedPlayUtility.GetArenaRankIconLarge( f218_arg0 )
end

function GetCurrentMinimapImageName( f219_arg0 )
	local f219_local0, f219_local1, f219_local2 = Engine[@"hash_35EA79AB5A744D06"]() --[[ @ 0]]
	return f219_local1
end

function GetQuestItemHolderImageFromEnum( f220_arg0 )
	local f220_local0 = f220_arg0 --[[ @ 0]]
	if f220_local0 == CoD.ZombieUtility.ZOD_CRAFTABLE_RITUAL_BOXER_ENUM then
		return "uie_t7_zm_hud_score_char8"
	elseif f220_local0 == CoD.ZombieUtility.ZOD_CRAFTABLE_RITUAL_DETECTIVE_ENUM then
		return "uie_t7_zm_hud_score_char6"
	elseif f220_local0 == CoD.ZombieUtility.ZOD_CRAFTABLE_RITUAL_FEMME_ENUM then
		return "uie_t7_zm_hud_score_char5"
	elseif f220_local0 == CoD.ZombieUtility.ZOD_CRAFTABLE_RITUAL_MAGICIAN_ENUM then
		return "uie_t7_zm_hud_score_char7"
	else
		return ""
	end
end

function GetPlayerListObjective( f221_arg0, f221_arg1 )
	local f221_local0 = tonumber( f221_arg1 ) --[[ @ 0]]
	if f221_local0 >= 0 and f221_local0 < LuaDefine.MAX_CLIENTS then
		local f221_local1 = Engine[@"objectivesgetplayerusing"]( f221_arg0, f221_local0 ) --[[ @ 0]]
		if f221_local1 then
			for f221_local5, f221_local6 in pairs( f221_local1 ) --[[ @ 0]] do
				if ShouldShowObjectiveForPlayer( f221_arg0, f221_local0, f221_local6 ) then
					return f221_local6
				end
			end
		end
	end
end

function GetPlayerListObjectiveImage( f222_arg0, f222_arg1 )
	local f222_local0 = GetPlayerListObjective( f222_arg0, f222_arg1 ) --[[ @ 0]]
	if f222_local0 and f222_local0.name then
		local f222_local1 = CoD.HUDUtility.GetCachedObjective( f222_local0.name ) --[[ @ 0]]
		if f222_local1.waypoint_image_neutral then
			return f222_local1.waypoint_image_neutral
		else
			return f222_local1.waypoint_image or @"$blacktransparent"
		end
	else
		return @"$blacktransparent"
	end
end

function GetPlayerListObjectiveMinimapImage( f223_arg0, f223_arg1 )
	local f223_local0 = GetPlayerListObjective( f223_arg0, f223_arg1 ) --[[ @ 0]]
	if f223_local0 and f223_local0.name then
		local f223_local1 = CoD.HUDUtility.GetCachedObjective( f223_local0.name ) --[[ @ 0]]
		return f223_local1[@"minimapimage"] or @"$blacktransparent"
	else
		return @"$blacktransparent"
	end
end

function GetPlayerListObjectiveColor( f224_arg0, f224_arg1 )
	local f224_local0 = f224_arg1 --[[ @ 0]]
	local f224_local1 = GetPlayerListObjective( f224_arg0, f224_local0 ) --[[ @ 0]]
	if f224_local1 and f224_local1.id and ShouldShowColorForObjective( f224_arg0, f224_local0, f224_local1 ) then
		local f224_local2 = Engine[@"objectivegetteamusingcount"]( f224_arg0, f224_local1.id ) --[[ @ 0]]
		local f224_local3 = Engine[@"getobjectiveteam"]( f224_arg0, f224_local1.id ) --[[ @ 0]]
		if f224_local3 == Enum[@"team_t"][@"team_free"] or f224_local3 == Enum[@"team_t"][@"team_spectator"] or f224_local3 == Enum[@"team_t"][@"team_neutral"] or f224_local2 ~= 1 then
			return ColorSet.White.r, ColorSet.White.g, ColorSet.White.b
		else
			return CoD.TeamUtility.GetTeamFactionColor( Engine[@"getobjectiveteam"]( f224_arg0, f224_local1.id ) )
		end
	else
		return ColorSet.White.r, ColorSet.White.g, ColorSet.White.b
	end
end

function DemoGetTimeScaleString( f225_arg0 )
	return CoD.DemoUtility.GetRoundedTimeScaleString()
end

function DemoGetCurrentDollyCameraTimeScaleString( f226_arg0 )
	if not CoD.DemoUtility.GetEditingDollyCameraMarker() then
		return f226_arg0
	else
		return CoD.DemoUtility.GetRoundedTimeScaleString( f226_arg0 )
	end
end

function GetRandomStringCharacter( f227_arg0 )
	return string.char( math.random( 33, 126 ) )
end

function FormatAutoReviveCountdown( f228_arg0 )
	return Engine[@"hash_4F9F1239CFD921FE"]( @"hash_10391AB6BB6AB12D", f228_arg0 )
end

function UpdateCoDPointPurchaseDesc( f229_arg0, f229_arg1, f229_arg2, f229_arg3 )
	local f229_local0 = CoD.SafeGetModelValue( f229_arg1, "price" ) --[[ @ 0]]
	if f229_local0 then
		local f229_local1 = f229_local0 - Engine[@"hash_2F40679B550DCCA2"]( f229_arg2, CoD.Currencies.COD_POINTS ) --[[ @ 0]]
		if f229_local1 < 0 then
			f229_local1 = 0 --[[ @ 0]]
			GoBack( f229_arg0, f229_arg2 ) --[[ @ 0]]
		end
		return Engine[@"hash_4F9F1239CFD921FE"]( @"hash_20C9037730DD8568", f229_local1 )
	else
		return Engine[@"hash_4F9F1239CFD921FE"]( f229_arg3 )
	end
end

function CheckForKeyboardMouseDescriptionInList( f230_arg0, f230_arg1, f230_arg2 )
	local f230_local0 = f230_arg0:getModel() --[[ @ 0]]
	if IsMouseOrKeyboard( f230_arg1 ) and f230_local0 and f230_local0.descKBM then
		f230_arg2 = f230_local0.descKBM:get() or f230_arg2 --[[ @ 0]]
	end
	return f230_arg2
end

function SetCustomScaleDependingOnPlatform( f231_arg0, f231_arg1, f231_arg2, f231_arg3, f231_arg4 )
	if CoD.isPC then
		f231_arg3 = f231_arg1 --[[ @ 0]]
		f231_arg4 = f231_arg2 --[[ @ 0]]
	end
	return f231_arg3, f231_arg4
end

function SetStringRefPlatformDependant( f232_arg0, f232_arg1 )
	if CoD.isPC then
		f232_arg1 = f232_arg0 --[[ @ 0]]
	end
	return f232_arg1
end

function UpdateKeyShortcutsButtonPrompts( f233_arg0, f233_arg1, f233_arg2 )
	if not CoD.isPC then
		return f233_arg2
	end
	local f233_local0 = f233_arg0:getModel() --[[ @ 0]]
	local f233_local1 = Engine[@"hash_4F9F1239CFD921FE"]( @"hash_0" ) --[[ @ 0]]
	if f233_local0 and f233_local0.KeyShortcut then
		f233_local1 = Engine[@"getmodelvalue"]( f233_local0.KeyShortcut ) --[[ @ 0]]
		if f233_local1 then
			if not Engine[@"getmodel"]( Engine[@"getmodelforcontroller"]( f233_arg1 ), "KeyPressBits." .. f233_local1 ) then
				local f233_local2 = nil --[[ @ 0]]
				f233_local1, f233_local2 = Engine[@"hash_27C4C4DBF61B869E"]( f233_arg1, f233_local1, 0 ) --[[ @ 0]]
			elseif #f233_local1 > 1 then
				f233_local1 = Engine[@"hash_4F9F1239CFD921FE"]( @"key/" .. f233_local1 ) --[[ @ 0]]
			end
		end
	end
	return f233_local1
end

function AddLocalizeGameModeToString( f234_arg0 )
	local f234_local0 = Engine[@"getgametypeinfo"]( Dvar[@"g_gametype"]:get() ) --[[ @ 0]]
	return Engine[@"toupper"]( Engine[@"hash_4F9F1239CFD921FE"]( f234_arg0, f234_local0.nameRef ) )
end

function SetProgressTarget( f235_arg0 )
	return Engine[@"hash_4F9F1239CFD921FE"]( @"menu/progress_target", f235_arg0 )
end

