-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:35
require( "ui/uieditor/widgets/bumperbuttonwithkeymousetext" ) --[[ @ 0]]
require( "x64:77198f4a2c6418a6" ) --[[ @ 0]]
require( "x64:6341ce33d59fafd1" ) --[[ @ 0]]
require( "ui/uieditor/widgets/cac/specialistissueequipmentwidget" ) --[[ @ 0]]
require( "x64:37113d6053cc9f6" ) --[[ @ 0]]
require( "x64:314ab47ffb48a077" ) --[[ @ 0]]

CoD.SpecialistEquipmentTabListWidget = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.SpecialistEquipmentTabListWidget.__defaultWidth = 1920 --[[ @ 0]]
CoD.SpecialistEquipmentTabListWidget.__defaultHeight = 1080 --[[ @ 0]]
CoD.SpecialistEquipmentTabListWidget.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.SpecialistEquipmentTabListWidget ) --[[ @ 0]]
	self.id = "SpecialistEquipmentTabListWidget" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local SpecialistEquipmentName = LUI.UIText.new( 0.5, 0.5, -172, 170, 0, 0, 87.5, 105.5 ) --[[ @ 0]]
	SpecialistEquipmentName:setRGB( ColorSet.GroupName.r, ColorSet.GroupName.g, ColorSet.GroupName.b ) --[[ @ 0]]
	SpecialistEquipmentName:setZoom( 3 ) --[[ @ 0]]
	SpecialistEquipmentName:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	SpecialistEquipmentName:setLetterSpacing( 10 ) --[[ @ 0]]
	SpecialistEquipmentName:setAlignment( Enum[@"LUIAlignment"][@"hash_1FEEB12BCB0D7041"] ) --[[ @ 0]]
	SpecialistEquipmentName:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	self:addElement( SpecialistEquipmentName ) --[[ @ 0]]
	self.SpecialistEquipmentName = SpecialistEquipmentName --[[ @ 0]]
	
	local SpecialistName = LUI.UIText.new( 0.5, 0.5, -192, 190, 0, 0, 60, 86 ) --[[ @ 0]]
	SpecialistName:setRGB( 0.92, 0.92, 0.92 ) --[[ @ 0]]
	SpecialistName:setZoom( 3 ) --[[ @ 0]]
	SpecialistName:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	SpecialistName:setLetterSpacing( 10 ) --[[ @ 0]]
	SpecialistName:setAlignment( Enum[@"LUIAlignment"][@"hash_1FEEB12BCB0D7041"] ) --[[ @ 0]]
	SpecialistName:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	self:addElement( SpecialistName ) --[[ @ 0]]
	self.SpecialistName = SpecialistName --[[ @ 0]]
	
	local positions = LUI.GridLayout.new( f1_arg0, f1_arg1, false, 0, 0, -25, 0, nil, nil, false, false, false, false ) --[[ @ 0]]
	positions:setLeftRight( 0.5, 0.5, -200, 202 ) --[[ @ 0]]
	positions:setTopBottom( 0, 0, 20, 42 ) --[[ @ 0]]
	positions:setZoom( 4 ) --[[ @ 0]]
	positions:setWidgetType( CoD.DirectorFeaturedPip ) --[[ @ 0]]
	positions:setHorizontalCount( 13 ) --[[ @ 0]]
	positions:setSpacing( -25 ) --[[ @ 0]]
	positions:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	positions:setDataSource( "PositionLoadoutList" ) --[[ @ 0]]
	positions:registerEventHandler( "list_active_changed", function ( element, event )
		local f2_local0 = nil --[[ @ 0]]
		SetControllerModelValue( f1_arg1, "PositionLoadoutList.SelectedCharacterIndex", element.characterIndex ) --[[ @ 0]]
		CoD.CACUtility.UpdateEquipmentModelFromPositionList( f1_arg0, element, f1_arg1 ) --[[ @ 0]]
		return f2_local0
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( positions, "childFocusGained", function ( element )
		ForceCheckDefaultPCFocus( f1_arg0, f1_arg0, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( positions ) --[[ @ 0]]
	self.positions = positions --[[ @ 0]]
	
	local RB = CoD.BumperButtonWithKeyMouseText.new( f1_arg0, f1_arg1, 0.5, 0.5, 186, 386, 0, 0, 14, 48 ) --[[ @ 0]]
	RB:setZoom( 4 ) --[[ @ 0]]
	RB.GamepadPrompt:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_5BFED5292621DA9A" ) ) --[[ @ 0]]
	self:addElement( RB ) --[[ @ 0]]
	self.RB = RB --[[ @ 0]]
	
	local LB = CoD.BumperButtonWithKeyMouseText.new( f1_arg0, f1_arg1, 0.5, 0.5, -384, -184, 0, 0, 14, 48 ) --[[ @ 0]]
	LB:setZoom( 4 ) --[[ @ 0]]
	LB.GamepadPrompt:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_5BDCD5292604F434" ) ) --[[ @ 0]]
	LB.GamepadPrompt:setAlignment( Enum[@"LUIAlignment"][@"hash_3830CFD395E6AA0A"] ) --[[ @ 0]]
	self:addElement( LB ) --[[ @ 0]]
	self.LB = LB --[[ @ 0]]
	
	local SpecialIssueInfo = CoD.SpecialistEquipmentNameDesc.new( f1_arg0, f1_arg1, 1, 1, -559, -59, 0, 0, 371, 477 ) --[[ @ 0]]
	SpecialIssueInfo:setZoom( 85 ) --[[ @ 0]]
	self:addElement( SpecialIssueInfo ) --[[ @ 0]]
	self.SpecialIssueInfo = SpecialIssueInfo --[[ @ 0]]
	
	local SpecialistEquipmentWidget = CoD.SpecialistIssueEquipmentWidget.new( f1_arg0, f1_arg1, 0, 0, 83, 483, 0, 0, 236.5, 636.5 ) --[[ @ 0]]
	SpecialistEquipmentWidget:mergeStateConditions( {
		{
			stateName = "Visible",
			condition = function ( menu, element, event )
				return AlwaysTrue()
			end
		}
	} ) --[[ @ 0]]
	self:addElement( SpecialistEquipmentWidget ) --[[ @ 0]]
	self.SpecialistEquipmentWidget = SpecialistEquipmentWidget --[[ @ 0]]
	
	local RestrictedText = CoD.RestrictedItemWarningText.new( f1_arg0, f1_arg1, 0.5, 0.5, -247, 247, 0.5, 0.5, 41, 71 ) --[[ @ 0]]
	self:addElement( RestrictedText ) --[[ @ 0]]
	self.RestrictedText = RestrictedText --[[ @ 0]]
	
	local left = nil --[[ @ 0]]
	
	left = CoD.PC_TabsArrow.new( f1_arg0, f1_arg1, 0, 0, 708, 773, 0, 0, -3, 62 ) --[[ @ 0]]
	left:mergeStateConditions( {
		{
			stateName = "Disabled",
			condition = function ( menu, element, event )
				return IsGamepad( f1_arg1 )
			end
		}
	} ) --[[ @ 0]]
	left:appendEventHandler( "input_source_changed", function ( f6_arg0, f6_arg1 )
		f6_arg1.menu = f6_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( left, f6_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local f1_local10 = left --[[ @ 0]]
	local right = left.subscribeToModel --[[ @ 0]]
	local f1_local12 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	right( f1_local10, f1_local12.LastInput, function ( f7_arg0 )
		f1_arg0:updateElementState( left, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f7_arg0:get(),
			modelName = "LastInput"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	left:registerEventHandler( "gain_focus", function ( element, event )
		local f8_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f8_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f8_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f8_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( left, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		CoD.GridAndListUtility.DoBumperGridButton( menu, controller, true ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, "ui_confirm" ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	self:addElement( left ) --[[ @ 0]]
	self.left = left --[[ @ 0]]
	
	right = nil --[[ @ 0]]
	
	right = CoD.PC_TabsArrow.new( f1_arg0, f1_arg1, 0, 0, 1150, 1215, 0, 0, -3, 62 ) --[[ @ 0]]
	right:mergeStateConditions( {
		{
			stateName = "Disabled",
			condition = function ( menu, element, event )
				return IsGamepad( f1_arg1 )
			end
		}
	} ) --[[ @ 0]]
	right:appendEventHandler( "input_source_changed", function ( f12_arg0, f12_arg1 )
		f12_arg1.menu = f12_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( right, f12_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	f1_local12 = right --[[ @ 0]]
	f1_local10 = right.subscribeToModel --[[ @ 0]]
	local f1_local13 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local10( f1_local12, f1_local13.LastInput, function ( f13_arg0 )
		f1_arg0:updateElementState( right, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f13_arg0:get(),
			modelName = "LastInput"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	right:setZRot( 180 ) --[[ @ 0]]
	right:registerEventHandler( "gain_focus", function ( element, event )
		local f14_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f14_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f14_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f14_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( right, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		CoD.GridAndListUtility.DoBumperGridButton( menu, controller, false ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, "ui_confirm" ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	self:addElement( right ) --[[ @ 0]]
	self.right = right --[[ @ 0]]
	
	SpecialistEquipmentName:linkToElementModel( positions, "equipment.displayName", true, function ( model )
		local f17_local0 = model:get() --[[ @ 0]]
		if f17_local0 ~= nil then
			SpecialistEquipmentName:setText( LocalizeToUpperString( f17_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	SpecialistName:linkToElementModel( positions, "name", true, function ( model )
		local f18_local0 = model:get() --[[ @ 0]]
		if f18_local0 ~= nil then
			SpecialistName:setText( LocalizeToUpperString( f18_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	SpecialIssueInfo:linkToElementModel( positions, "equipment", false, function ( model )
		SpecialIssueInfo:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	RestrictedText:linkToElementModel( positions, nil, false, function ( model )
		RestrictedText:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	positions.id = "positions" --[[ @ 0]]
	if CoD.isPC then
		left.id = "left" --[[ @ 0]]
	end
	if CoD.isPC then
		right.id = "right" --[[ @ 0]]
	end
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	f1_local10 = self --[[ @ 0]]
	CoD.CACUtility.AddSpecialistEquipmentBumperNavigation( f1_arg0, positions, f1_arg1 ) --[[ @ 0]]
	DisableKeyboardNavigationByElement( self.positions ) --[[ @ 0]]
	return self
end
 --[[ @ 0]]
CoD.SpecialistEquipmentTabListWidget.__resetProperties = function ( f21_arg0 )
	f21_arg0.SpecialistEquipmentName:completeAnimation() --[[ @ 0]]
	f21_arg0.SpecialistName:completeAnimation() --[[ @ 0]]
	f21_arg0.positions:completeAnimation() --[[ @ 0]]
	f21_arg0.RB:completeAnimation() --[[ @ 0]]
	f21_arg0.LB:completeAnimation() --[[ @ 0]]
	f21_arg0.SpecialIssueInfo:completeAnimation() --[[ @ 0]]
	f21_arg0.SpecialistEquipmentWidget:completeAnimation() --[[ @ 0]]
	f21_arg0.RestrictedText:completeAnimation() --[[ @ 0]]
	f21_arg0.left:completeAnimation() --[[ @ 0]]
	f21_arg0.right:completeAnimation() --[[ @ 0]]
	f21_arg0.SpecialistEquipmentName:setAlpha( 1 ) --[[ @ 0]]
	f21_arg0.SpecialistName:setAlpha( 1 ) --[[ @ 0]]
	f21_arg0.positions:setAlpha( 1 ) --[[ @ 0]]
	f21_arg0.RB:setAlpha( 1 ) --[[ @ 0]]
	f21_arg0.LB:setAlpha( 1 ) --[[ @ 0]]
	f21_arg0.SpecialIssueInfo:setAlpha( 1 ) --[[ @ 0]]
	f21_arg0.SpecialistEquipmentWidget:setAlpha( 1 ) --[[ @ 0]]
	f21_arg0.RestrictedText:setAlpha( 1 ) --[[ @ 0]]
	f21_arg0.left:setAlpha( 1 ) --[[ @ 0]]
	f21_arg0.right:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.SpecialistEquipmentTabListWidget.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f22_arg0, f22_arg1 )
			f22_arg0:__resetProperties() --[[ @ 0]]
			f22_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	NotVisible = {
		DefaultClip = function ( f23_arg0, f23_arg1 )
			f23_arg0:__resetProperties() --[[ @ 0]]
			f23_arg0:setupElementClipCounter( 10 ) --[[ @ 0]]
			f23_arg0.SpecialistEquipmentName:completeAnimation() --[[ @ 0]]
			f23_arg0.SpecialistEquipmentName:setAlpha( 0 ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.SpecialistEquipmentName ) --[[ @ 0]]
			f23_arg0.SpecialistName:completeAnimation() --[[ @ 0]]
			f23_arg0.SpecialistName:setAlpha( 0 ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.SpecialistName ) --[[ @ 0]]
			f23_arg0.positions:completeAnimation() --[[ @ 0]]
			f23_arg0.positions:setAlpha( 0 ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.positions ) --[[ @ 0]]
			f23_arg0.RB:completeAnimation() --[[ @ 0]]
			f23_arg0.RB:setAlpha( 0 ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.RB ) --[[ @ 0]]
			f23_arg0.LB:completeAnimation() --[[ @ 0]]
			f23_arg0.LB:setAlpha( 0 ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.LB ) --[[ @ 0]]
			f23_arg0.SpecialIssueInfo:completeAnimation() --[[ @ 0]]
			f23_arg0.SpecialIssueInfo:setAlpha( 0 ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.SpecialIssueInfo ) --[[ @ 0]]
			f23_arg0.SpecialistEquipmentWidget:completeAnimation() --[[ @ 0]]
			f23_arg0.SpecialistEquipmentWidget:setAlpha( 0 ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.SpecialistEquipmentWidget ) --[[ @ 0]]
			f23_arg0.RestrictedText:completeAnimation() --[[ @ 0]]
			f23_arg0.RestrictedText:setAlpha( 0 ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.RestrictedText ) --[[ @ 0]]
			f23_arg0.left:completeAnimation() --[[ @ 0]]
			f23_arg0.left:setAlpha( 0 ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.left ) --[[ @ 0]]
			f23_arg0.right:completeAnimation() --[[ @ 0]]
			f23_arg0.right:setAlpha( 0 ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.right ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.SpecialistEquipmentTabListWidget.__onClose = function ( f24_arg0 )
	f24_arg0.SpecialistEquipmentName:close() --[[ @ 0]]
	f24_arg0.SpecialistName:close() --[[ @ 0]]
	f24_arg0.SpecialIssueInfo:close() --[[ @ 0]]
	f24_arg0.RestrictedText:close() --[[ @ 0]]
	f24_arg0.positions:close() --[[ @ 0]]
	f24_arg0.RB:close() --[[ @ 0]]
	f24_arg0.LB:close() --[[ @ 0]]
	f24_arg0.SpecialistEquipmentWidget:close() --[[ @ 0]]
	f24_arg0.left:close() --[[ @ 0]]
	f24_arg0.right:close() --[[ @ 0]]
end
 --[[ @ 0]]
