-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:50
require( "ui/uieditor/widgets/zmfrontend/armory/armory_attachmentlist" ) --[[ @ 0]]
require( "ui/uieditor/widgets/zmfrontend/armory/armory_opticslist" ) --[[ @ 0]]

CoD.Armory_AttachmentContainer = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.Armory_AttachmentContainer.__defaultWidth = 1500 --[[ @ 0]]
CoD.Armory_AttachmentContainer.__defaultHeight = 300 --[[ @ 0]]
CoD.Armory_AttachmentContainer.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIHorizontalList.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9, 40, false ) --[[ @ 0]]
	self:setAlignment( LUI.Alignment.Center ) --[[ @ 0]]
	self:setClass( CoD.Armory_AttachmentContainer ) --[[ @ 0]]
	self.id = "Armory_AttachmentContainer" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local OpticsList = CoD.Armory_OpticsList.new( f1_arg0, f1_arg1, 0, 0, 80, 580, 0, 0, 0, 300 ) --[[ @ 0]]
	OpticsList:linkToElementModel( self, nil, false, function ( model )
		OpticsList:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( OpticsList, "childFocusGained", function ( element )
		SetControllerModelValue( f1_arg1, "armoryOpticListFocus", true ) --[[ @ 0]]
		SetControllerModelValue( f1_arg1, "armoryAttachmentListFocus", false ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( OpticsList, "childFocusLost", function ( element )
		SetControllerModelValue( f1_arg1, "armoryOpticListFocus", false ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( OpticsList ) --[[ @ 0]]
	self.OpticsList = OpticsList --[[ @ 0]]
	
	local AttachmentList = CoD.Armory_AttachmentList.new( f1_arg0, f1_arg1, 0, 0, 620, 1420, 0, 0, 0, 300 ) --[[ @ 0]]
	AttachmentList:linkToElementModel( self, nil, false, function ( model )
		AttachmentList:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( AttachmentList, "childFocusGained", function ( element )
		SetControllerModelValue( f1_arg1, "armoryOpticListFocus", false ) --[[ @ 0]]
		SetControllerModelValue( f1_arg1, "armoryAttachmentListFocus", true ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( AttachmentList, "childFocusLost", function ( element )
		SetControllerModelValue( f1_arg1, "armoryAttachmentListFocus", false ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( AttachmentList ) --[[ @ 0]]
	self.AttachmentList = AttachmentList --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "NoAttachments",
			condition = function ( menu, element, event )
				return not CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg1, "showAttachmentPips" )
			end
		},
		{
			stateName = "NoOptics",
			condition = function ( menu, element, event )
				return not CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg1, "hasOpticSlot" )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "showAttachmentPips", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "showAttachmentPips"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:linkToElementModel( self, "hasOpticSlot", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "hasOpticSlot"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	OpticsList.id = "OpticsList" --[[ @ 0]]
	AttachmentList.id = "AttachmentList" --[[ @ 0]]
	self.__defaultFocus = OpticsList --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	CoD.ZMLoadoutUtility.SetModelToArmoryWeaponItemModel( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	return self
end
 --[[ @ 0]]
CoD.Armory_AttachmentContainer.__resetProperties = function ( f12_arg0 )
	f12_arg0.OpticsList:completeAnimation() --[[ @ 0]]
	f12_arg0.AttachmentList:completeAnimation() --[[ @ 0]]
	f12_arg0.OpticsList:setAlpha( 1 ) --[[ @ 0]]
	f12_arg0.AttachmentList:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.Armory_AttachmentContainer.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f13_arg0, f13_arg1 )
			f13_arg0:__resetProperties() --[[ @ 0]]
			f13_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	NoAttachments = {
		DefaultClip = function ( f14_arg0, f14_arg1 )
			f14_arg0:__resetProperties() --[[ @ 0]]
			f14_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f14_arg0.OpticsList:completeAnimation() --[[ @ 0]]
			f14_arg0.OpticsList:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.OpticsList ) --[[ @ 0]]
			f14_arg0.AttachmentList:completeAnimation() --[[ @ 0]]
			f14_arg0.AttachmentList:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.AttachmentList ) --[[ @ 0]]
		end
	},
	NoOptics = {
		DefaultClip = function ( f15_arg0, f15_arg1 )
			f15_arg0:__resetProperties() --[[ @ 0]]
			f15_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f15_arg0.OpticsList:completeAnimation() --[[ @ 0]]
			f15_arg0.OpticsList:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.OpticsList ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.Armory_AttachmentContainer.__onClose = function ( f16_arg0 )
	f16_arg0.OpticsList:close() --[[ @ 0]]
	f16_arg0.AttachmentList:close() --[[ @ 0]]
end
 --[[ @ 0]]
