-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
require( "x64:6bc6e2379d2241fb" ) --[[ @ 0]]
require( "ui/uieditor/widgets/fileshare/fullscreenpopup/fullscreenpopuptemplate" ) --[[ @ 0]]
require( "x64:7e4ab7898d6eef2c" ) --[[ @ 0]]
require( "x64:42a83f25ce6a0dd3" ) --[[ @ 0]]
require( "ui/uieditor/widgets/playercard/selfidentitybadge" ) --[[ @ 0]]
require( "ui/uieditor/widgets/startmenu/startmenu_codpoints" ) --[[ @ 0]]

CoD.PurchaseBribeStack = InheritFrom( CoD.Menu ) --[[ @ 0]]
LUI.createMenu.PurchaseBribeStack = function ( f1_arg0, f1_arg1 )
	local self = CoD.Menu.NewForUIEditor( "PurchaseBribeStack", f1_arg0 ) --[[ @ 0]]
	local f1_local1 = self --[[ @ 0]]
	CoD.BaseUtility.SetPropertiesFromUserData( self, f1_arg1._properties ) --[[ @ 0]]
	SetMenuProperty( f1_local1, "__keepPopupButtonListPC", true ) --[[ @ 0]]
	SetMenuProperty( f1_local1, "_isReservesItem", true ) --[[ @ 0]]
	SetMenuProperty( f1_local1, "name", f1_arg1._model.name:get() ) --[[ @ 0]]
	CoD.BaseUtility.SetModelFromUserData( f1_arg0, self, f1_arg1._model ) --[[ @ 0]]
	SetMenuProperty( f1_local1, "price", f1_arg1._model.price:get() ) --[[ @ 0]]
	self:setClass( CoD.PurchaseBribeStack ) --[[ @ 0]]
	self.soundSet = "FrontendMain" --[[ @ 0]]
	self:setOwner( f1_arg0 ) --[[ @ 0]]
	self:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	self:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	self:playSound( "menu_open", f1_arg0 ) --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	
	local FullscreenPopupTemplate = CoD.FullscreenPopupTemplate.new( f1_local1, f1_arg0, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	FullscreenPopupTemplate:mergeStateConditions( {
		{
			stateName = "WorkingState",
			condition = function ( menu, element, event )
				return IsElementInState( element, "WorkingState" )
			end
		},
		{
			stateName = "ErrorState",
			condition = function ( menu, element, event )
				return IsElementInState( element, "ErrorState" )
			end
		},
		{
			stateName = "CustomState",
			condition = function ( menu, element, event )
				return IsElementInState( element, "CustomState" )
			end
		},
		{
			stateName = "FinishedState",
			condition = function ( menu, element, event )
				return IsElementInState( element, "FinishedState" )
			end
		}
	} ) --[[ @ 0]]
	FullscreenPopupTemplate.ButtonList:setWidgetType( CoD.PurchaseReservesItemButton ) --[[ @ 0]]
	FullscreenPopupTemplate.ButtonList:setDataSource( "PurchaseBribeStackButtons" ) --[[ @ 0]]
	FullscreenPopupTemplate.ErrorSubtitle:setText( "" ) --[[ @ 0]]
	FullscreenPopupTemplate.WorkingTitle:setText( LocalizeToUpperString( @"hash_9D00A7D3D969F6E" ) ) --[[ @ 0]]
	FullscreenPopupTemplate.DoneTitle:setText( LocalizeToUpperString( @"hash_583048BBBD98FC6A" ) ) --[[ @ 0]]
	FullscreenPopupTemplate:linkToElementModel( self, "desc", true, function ( model )
		local f6_local0 = model:get() --[[ @ 0]]
		if f6_local0 ~= nil then
			FullscreenPopupTemplate.Subtitle:setText( Engine[@"hash_4F9F1239CFD921FE"]( CoD.BlackMarketUtility.CheckForBribePopupDescOverride( self:getModel(), f6_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( FullscreenPopupTemplate ) --[[ @ 0]]
	self.FullscreenPopupTemplate = FullscreenPopupTemplate --[[ @ 0]]
	
	local FixedAspectRatioImage = LUI.UIFixedAspectRatioImage.new( 0.5, 0.5, -960, -324, 0.5, 0.5, -214, 230 ) --[[ @ 0]]
	FixedAspectRatioImage:setStretchedDimension( 6 ) --[[ @ 0]]
	FixedAspectRatioImage:linkToElementModel( self, "popupImage", true, function ( model )
		local f7_local0 = model:get() --[[ @ 0]]
		if f7_local0 ~= nil then
			FixedAspectRatioImage:setImage( RegisterImage( f7_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( FixedAspectRatioImage ) --[[ @ 0]]
	self.FixedAspectRatioImage = FixedAspectRatioImage --[[ @ 0]]
	
	local SelfIdentityBadge = CoD.SelfIdentityBadge.new( f1_local1, f1_arg0, 0.5, 0.5, 541, 872, 0, 0, 33.5, 98.5 ) --[[ @ 0]]
	SelfIdentityBadge:setAlpha( 0 ) --[[ @ 0]]
	SelfIdentityBadge:subscribeToGlobalModel( f1_arg0, "PerController", "identityBadge", function ( model )
		SelfIdentityBadge:setModel( model, f1_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( SelfIdentityBadge ) --[[ @ 0]]
	self.SelfIdentityBadge = SelfIdentityBadge --[[ @ 0]]
	
	local Linker = LUI.UIImage.new( 0.5, 0.5, -330, -326, 0.5, 0.5, -192, 205 ) --[[ @ 0]]
	Linker:setRGB( ColorSet.T8__BEIGE__HEADER.r, ColorSet.T8__BEIGE__HEADER.g, ColorSet.T8__BEIGE__HEADER.b ) --[[ @ 0]]
	Linker:setAlpha( 0.35 ) --[[ @ 0]]
	Linker:setImage( RegisterImage( @"hash_C49B0C8991A541F" ) ) --[[ @ 0]]
	Linker:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_67C9C02F608D0A75" ) ) --[[ @ 0]]
	Linker:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	Linker:setupNineSliceShader( 4, 8 ) --[[ @ 0]]
	self:addElement( Linker ) --[[ @ 0]]
	self.Linker = Linker --[[ @ 0]]
	
	local StartMenuCODpoints = CoD.StartMenu_CODpoints.new( f1_local1, f1_arg0, 0.5, 0.5, 341, 445, 0, 0, 23.5, 103.5 ) --[[ @ 0]]
	StartMenuCODpoints:setAlpha( 0 ) --[[ @ 0]]
	StartMenuCODpoints:subscribeToGlobalModel( f1_arg0, "LootStreamProgress", "codPoints", function ( model )
		local f9_local0 = model:get() --[[ @ 0]]
		if f9_local0 ~= nil then
			StartMenuCODpoints.codpointsCount:setText( SetValueIfNumberEqualTo( -1, "-", f9_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( StartMenuCODpoints ) --[[ @ 0]]
	self.StartMenuCODpoints = StartMenuCODpoints --[[ @ 0]]
	
	local CommonIdentityWidgetStreamlinedPC = nil --[[ @ 0]]
	
	CommonIdentityWidgetStreamlinedPC = CoD.CommonIdentityWidgetStreamlined.new( f1_local1, f1_arg0, 0.5, 0.5, 426, 956, 0.5, 0.5, -282, -242 ) --[[ @ 0]]
	CommonIdentityWidgetStreamlinedPC:subscribeToGlobalModel( f1_arg0, "PerController", "identityBadge", function ( model )
		CommonIdentityWidgetStreamlinedPC:setModel( model, f1_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( CommonIdentityWidgetStreamlinedPC ) --[[ @ 0]]
	self.CommonIdentityWidgetStreamlinedPC = CommonIdentityWidgetStreamlinedPC --[[ @ 0]]
	
	local f1_local8 = nil --[[ @ 0]]
	self.CommonIdentityWidgetStreamlinedC = LUI.UIElement.createFake() --[[ @ 0]]
	
	local ItemName = LUI.UIText.new( 0.5, 0.5, -914.5, -370.5, 0.5, 0.5, 138, 178 ) --[[ @ 0]]
	ItemName:setRGB( 0.5, 0.85, 1 ) --[[ @ 0]]
	ItemName:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	ItemName:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_593F361CC41C94AF" ) ) --[[ @ 0]]
	ItemName:setShaderVector( 0, 0.8, 0, 0, 0 ) --[[ @ 0]]
	ItemName:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	ItemName:setShaderVector( 2, 0, 0.7, 1, 0.2 ) --[[ @ 0]]
	ItemName:setLetterSpacing( 6 ) --[[ @ 0]]
	ItemName:setAlignment( Enum[@"LUIAlignment"][@"hash_1FEEB12BCB0D7041"] ) --[[ @ 0]]
	ItemName:setAlignment( Enum[@"LUIAlignment"][@"hash_E821F0ECFF8D1C7"] ) --[[ @ 0]]
	ItemName:linkToElementModel( self, "name", true, function ( model )
		local f11_local0 = model:get() --[[ @ 0]]
		if f11_local0 ~= nil then
			ItemName:setText( LocalizeToUpperString( f11_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( ItemName ) --[[ @ 0]]
	self.ItemName = ItemName --[[ @ 0]]
	
	local BracketLeft = LUI.UIImage.new( 0.5, 0.5, -926, -902, 0.5, 0.5, 121, 193 ) --[[ @ 0]]
	BracketLeft:setRGB( 0.79, 0.94, 1 ) --[[ @ 0]]
	BracketLeft:setYRot( 180 ) --[[ @ 0]]
	BracketLeft:setImage( RegisterImage( @"uie_ui_menu_common_bracket01" ) ) --[[ @ 0]]
	self:addElement( BracketLeft ) --[[ @ 0]]
	self.BracketLeft = BracketLeft --[[ @ 0]]
	
	local BracketRight = LUI.UIImage.new( 0.5, 0.5, -383, -359, 0.5, 0.5, 121, 193 ) --[[ @ 0]]
	BracketRight:setRGB( 0.79, 0.94, 1 ) --[[ @ 0]]
	BracketRight:setImage( RegisterImage( @"uie_ui_menu_common_bracket01" ) ) --[[ @ 0]]
	self:addElement( BracketRight ) --[[ @ 0]]
	self.BracketRight = BracketRight --[[ @ 0]]
	
	local Price = CoD.ContractItemCostMultiCurrency.new( f1_local1, f1_arg0, 0, 0, 225.5, 410.5, 0, 0, 733, 754 ) --[[ @ 0]]
	Price:linkToElementModel( self, nil, false, function ( model )
		Price:setModel( model, f1_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( Price ) --[[ @ 0]]
	self.Price = Price --[[ @ 0]]
	
	self.FullscreenPopupTemplate:linkToElementModel( self, nil, false, function ( model )
		FullscreenPopupTemplate:setModel( model, f1_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self.FullscreenPopupTemplate:linkToElementModel( self, "name", true, function ( model )
		local f14_local0 = model:get() --[[ @ 0]]
		if f14_local0 ~= nil then
			FullscreenPopupTemplate.Title:setText( ToUpper( LocalizeIntoString( @"hash_3F3A65B13FE76C91", f14_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"], nil, function ( element, menu, controller, model )
		if not IsElementInState( self.FullscreenPopupTemplate, "WorkingState" ) and not IsElementInState( self.FullscreenPopupTemplate, "ErrorState" ) then
			CoD.BlackMarketUtility.SendItemShopViewEvent( controller, menu, "" ) --[[ @ 0]]
			GoBack( self, controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsElementInState( self.FullscreenPopupTemplate, "WorkingState" ) and not IsElementInState( self.FullscreenPopupTemplate, "ErrorState" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"], @"hash_370A9FDC87CD3D48", nil, nil ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], nil, function ( element, menu, controller, model )
		if IsElementInState( self.FullscreenPopupTemplate, "ErrorState" ) then
			CoD.BlackMarketUtility.SendItemShopViewEvent( controller, menu, "" ) --[[ @ 0]]
			GoBack( self, controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsElementInState( self.FullscreenPopupTemplate, "ErrorState" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_370A9FDC87CD3D48", nil, nil ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( self, "close", function ( element )
		ForceNotifyControllerModel( f1_arg0, "updateCrateBundleOffers" ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:linkToElementModel( self, "name", true, function ( model )
		if not CoD.ModelUtility.IsSelfModelValueEqualToPropertyValue( self, f1_arg0, "name", "name" ) then
			CoD.BlackMarketUtility.SendItemShopViewEvent( f1_arg0, f1_local1, "" ) --[[ @ 0]]
			DelayGoBack( f1_local1, f1_arg0, 50 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:linkToElementModel( self, "price", true, function ( model )
		if not CoD.ModelUtility.IsSelfModelValueEqualToPropertyValue( self, f1_arg0, "price", "price" ) then
			CoD.BlackMarketUtility.SendItemShopViewEvent( f1_arg0, f1_local1, "" ) --[[ @ 0]]
			DelayGoBack( f1_local1, f1_arg0, 50 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	FullscreenPopupTemplate.buttons:setModel( self.buttonModel, f1_arg0 ) --[[ @ 0]]
	FullscreenPopupTemplate.buttonPC:setModel( self.buttonModel, f1_arg0 ) --[[ @ 0]]
	FullscreenPopupTemplate.id = "FullscreenPopupTemplate" --[[ @ 0]]
	SelfIdentityBadge.id = "SelfIdentityBadge" --[[ @ 0]]
	self:processEvent( {
		name = "menu_loaded",
		controller = f1_arg0
	} ) --[[ @ 0]]
	self.__defaultFocus = FullscreenPopupTemplate --[[ @ 0]]
	if CoD.isPC and (IsKeyboard( f1_arg0 ) or self.ignoreCursor) then
		self:restoreState( f1_arg0 ) --[[ @ 0]]
	end
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg0 ) --[[ @ 0]]
	end
	local f1_local13 = self --[[ @ 0]]
	f1_local13 = FullscreenPopupTemplate --[[ @ 0]]
	if IsPC() and IsElementInState( self.FullscreenPopupTemplate, "ErrorState" ) then
		CoD.PCUtility.LinkPCSmallCloseButtonToInput( f1_local1, f1_arg0, f1_local13, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	elseif IsPC() then
		CoD.PCUtility.LinkPCSmallCloseButtonToInput( f1_local1, f1_arg0, f1_local13, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"] ) --[[ @ 0]]
	end
	return self
end
 --[[ @ 0]]
CoD.PurchaseBribeStack.__onClose = function ( f22_arg0 )
	f22_arg0.FullscreenPopupTemplate:close() --[[ @ 0]]
	f22_arg0.FixedAspectRatioImage:close() --[[ @ 0]]
	f22_arg0.SelfIdentityBadge:close() --[[ @ 0]]
	f22_arg0.StartMenuCODpoints:close() --[[ @ 0]]
	f22_arg0.CommonIdentityWidgetStreamlinedPC:close() --[[ @ 0]]
	f22_arg0.CommonIdentityWidgetStreamlinedC:close() --[[ @ 0]]
	f22_arg0.ItemName:close() --[[ @ 0]]
	f22_arg0.Price:close() --[[ @ 0]]
end
 --[[ @ 0]]
