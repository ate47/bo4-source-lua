-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:49
require( "x64:4f48b2a3318365e" ) --[[ @ 0]]
require( "x64:5529465f0ae09a3a" ) --[[ @ 0]]
require( "ui/uieditor/widgets/hud/core_ammowidget/ammowidgetmpcontainer" ) --[[ @ 0]]
require( "x64:5cd5cb173216cc96" ) --[[ @ 0]]
require( "x64:17046c31fdd4246" ) --[[ @ 0]]
require( "x64:6ba1becb5559b00c" ) --[[ @ 0]]
require( "x64:603d4f08148b9bb" ) --[[ @ 0]]
require( "x64:32c2bec7a9db1e9f" ) --[[ @ 0]]
require( "x64:5893d5763141ed56" ) --[[ @ 0]]
require( "ui/uieditor/widgets/hud/mp_voipwidget/voip_container" ) --[[ @ 0]]
require( "x64:699e7576eaf0080d" ) --[[ @ 0]]
require( "x64:6e6e998e69bb521f" ) --[[ @ 0]]
require( "x64:431f1efc4b4da885" ) --[[ @ 0]]
require( "x64:d667965a2409a7e" ) --[[ @ 0]]
require( "ui/uieditor/widgets/hud/scoreinfo/scoreinfocontainer" ) --[[ @ 0]]
require( "x64:206e1e74cf1a468c" ) --[[ @ 0]]
require( "x64:3a6cc1001a20fa8e" ) --[[ @ 0]]
require( "x64:4ca56f16edd19c8e" ) --[[ @ 0]]
require( "x64:7d501b8def8708f0" ) --[[ @ 0]]
require( "ui/uieditor/widgets/mphudwidgets/readyevents/readyevents" ) --[[ @ 0]]
require( "x64:6fed80f8bacb80c6" ) --[[ @ 0]]
require( "x64:3596959cf1a189d1" ) --[[ @ 0]]

CoD.Hud_MP_SafeAreaContainer = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.Hud_MP_SafeAreaContainer.__defaultWidth = 1920 --[[ @ 0]]
CoD.Hud_MP_SafeAreaContainer.__defaultHeight = 1080 --[[ @ 0]]
CoD.Hud_MP_SafeAreaContainer.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.Hud_MP_SafeAreaContainer ) --[[ @ 0]]
	self.id = "Hud_MP_SafeAreaContainer" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local ScoreInfo = CoD.ScoreInfoContainer.new( f1_arg0, f1_arg1, 0, 0, 39, 249, 0, 0, 349, 452 ) --[[ @ 0]]
	ScoreInfo:mergeStateConditions( {
		{
			stateName = "VisibleSpawnSelect",
			condition = function ( menu, element, event )
				local f2_local0 = CoD.ModelUtility.IsModelValueTrue( f1_arg1, "hudItems.playerSpawned" ) --[[ @ 0]]
				if f2_local0 then
					if not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_demo_all_game_hud_hidden"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_demo_camera_mode_moviecam"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_emp_active"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_hud_hardcore"] ) and Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_hud_visible"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_guided_missile"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_killcam"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_remote_killstreak_static"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"hash_29BF57CE75A8755E"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_vehicle"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_is_flash_banged"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_is_scoped"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_play_of_the_match"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_scoreboard_open"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_ui_active"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_game_ended"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_team_spectator"] ) and not CoD.BaseUtility.IsCurrentSessionModeEqualTo( Enum[@"emodes"][@"mode_warzone"] ) then
						f2_local0 = CoD.ModelUtility.IsModelValueEqualTo( f1_arg1, "hudItems.showSpawnSelect", 1 ) --[[ @ 0]]
						if f2_local0 then
							f2_local0 = not IsGameTypeCombatTraining() --[[ @ 0]]
						end
					else
						f2_local0 = false --[[ @ 0]]
					end
				end
				return f2_local0
			end
		},
		{
			stateName = "Visible",
			condition = function ( menu, element, event )
				local f3_local0 = CoD.ModelUtility.IsModelValueTrue( f1_arg1, "hudItems.playerSpawned" ) --[[ @ 0]]
				if f3_local0 then
					if not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_demo_all_game_hud_hidden"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_demo_camera_mode_moviecam"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_emp_active"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_hud_hardcore"] ) and Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_hud_visible"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_guided_missile"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_killcam"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_remote_killstreak_static"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"hash_29BF57CE75A8755E"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_vehicle"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_is_flash_banged"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_is_scoped"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_play_of_the_match"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_scoreboard_open"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_ui_active"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_game_ended"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_team_spectator"] ) and not CoD.BaseUtility.IsCurrentSessionModeEqualTo( Enum[@"emodes"][@"mode_warzone"] ) then
						f3_local0 = not IsGameTypeCombatTraining() --[[ @ 0]]
					else
						f3_local0 = false --[[ @ 0]]
					end
				end
				return f3_local0
			end
		}
	} ) --[[ @ 0]]
	local PlayerWidgetContainer = ScoreInfo --[[ @ 0]]
	local AmmoWidgetContainer = ScoreInfo.subscribeToModel --[[ @ 0]]
	local f1_local4 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetContainer( PlayerWidgetContainer, f1_local4["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_demo_all_game_hud_hidden"]], function ( f4_arg0 )
		f1_arg0:updateElementState( ScoreInfo, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f4_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_demo_all_game_hud_hidden"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	PlayerWidgetContainer = ScoreInfo --[[ @ 0]]
	AmmoWidgetContainer = ScoreInfo.subscribeToModel --[[ @ 0]]
	f1_local4 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetContainer( PlayerWidgetContainer, f1_local4["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_demo_camera_mode_moviecam"]], function ( f5_arg0 )
		f1_arg0:updateElementState( ScoreInfo, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f5_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_demo_camera_mode_moviecam"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	PlayerWidgetContainer = ScoreInfo --[[ @ 0]]
	AmmoWidgetContainer = ScoreInfo.subscribeToModel --[[ @ 0]]
	f1_local4 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetContainer( PlayerWidgetContainer, f1_local4["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_hud_hardcore"]], function ( f6_arg0 )
		f1_arg0:updateElementState( ScoreInfo, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f6_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_hud_hardcore"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	PlayerWidgetContainer = ScoreInfo --[[ @ 0]]
	AmmoWidgetContainer = ScoreInfo.subscribeToModel --[[ @ 0]]
	f1_local4 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetContainer( PlayerWidgetContainer, f1_local4["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_hud_visible"]], function ( f7_arg0 )
		f1_arg0:updateElementState( ScoreInfo, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f7_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_hud_visible"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	PlayerWidgetContainer = ScoreInfo --[[ @ 0]]
	AmmoWidgetContainer = ScoreInfo.subscribeToModel --[[ @ 0]]
	f1_local4 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetContainer( PlayerWidgetContainer, f1_local4["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_guided_missile"]], function ( f8_arg0 )
		f1_arg0:updateElementState( ScoreInfo, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f8_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_guided_missile"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	PlayerWidgetContainer = ScoreInfo --[[ @ 0]]
	AmmoWidgetContainer = ScoreInfo.subscribeToModel --[[ @ 0]]
	f1_local4 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetContainer( PlayerWidgetContainer, f1_local4["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_killcam"]], function ( f9_arg0 )
		f1_arg0:updateElementState( ScoreInfo, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f9_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_killcam"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	PlayerWidgetContainer = ScoreInfo --[[ @ 0]]
	AmmoWidgetContainer = ScoreInfo.subscribeToModel --[[ @ 0]]
	f1_local4 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetContainer( PlayerWidgetContainer, f1_local4["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_remote_killstreak_static"]], function ( f10_arg0 )
		f1_arg0:updateElementState( ScoreInfo, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f10_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_remote_killstreak_static"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	PlayerWidgetContainer = ScoreInfo --[[ @ 0]]
	AmmoWidgetContainer = ScoreInfo.subscribeToModel --[[ @ 0]]
	f1_local4 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetContainer( PlayerWidgetContainer, f1_local4["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"hash_29BF57CE75A8755E"]], function ( f11_arg0 )
		f1_arg0:updateElementState( ScoreInfo, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f11_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"hash_29BF57CE75A8755E"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	PlayerWidgetContainer = ScoreInfo --[[ @ 0]]
	AmmoWidgetContainer = ScoreInfo.subscribeToModel --[[ @ 0]]
	f1_local4 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetContainer( PlayerWidgetContainer, f1_local4["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_vehicle"]], function ( f12_arg0 )
		f1_arg0:updateElementState( ScoreInfo, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f12_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_vehicle"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	PlayerWidgetContainer = ScoreInfo --[[ @ 0]]
	AmmoWidgetContainer = ScoreInfo.subscribeToModel --[[ @ 0]]
	f1_local4 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetContainer( PlayerWidgetContainer, f1_local4["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_flash_banged"]], function ( f13_arg0 )
		f1_arg0:updateElementState( ScoreInfo, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f13_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_flash_banged"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	PlayerWidgetContainer = ScoreInfo --[[ @ 0]]
	AmmoWidgetContainer = ScoreInfo.subscribeToModel --[[ @ 0]]
	f1_local4 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetContainer( PlayerWidgetContainer, f1_local4["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_scoped"]], function ( f14_arg0 )
		f1_arg0:updateElementState( ScoreInfo, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f14_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_scoped"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	PlayerWidgetContainer = ScoreInfo --[[ @ 0]]
	AmmoWidgetContainer = ScoreInfo.subscribeToModel --[[ @ 0]]
	f1_local4 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetContainer( PlayerWidgetContainer, f1_local4["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_play_of_the_match"]], function ( f15_arg0 )
		f1_arg0:updateElementState( ScoreInfo, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f15_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_play_of_the_match"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	PlayerWidgetContainer = ScoreInfo --[[ @ 0]]
	AmmoWidgetContainer = ScoreInfo.subscribeToModel --[[ @ 0]]
	f1_local4 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetContainer( PlayerWidgetContainer, f1_local4["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_scoreboard_open"]], function ( f16_arg0 )
		f1_arg0:updateElementState( ScoreInfo, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f16_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_scoreboard_open"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	PlayerWidgetContainer = ScoreInfo --[[ @ 0]]
	AmmoWidgetContainer = ScoreInfo.subscribeToModel --[[ @ 0]]
	f1_local4 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetContainer( PlayerWidgetContainer, f1_local4["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_ui_active"]], function ( f17_arg0 )
		f1_arg0:updateElementState( ScoreInfo, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f17_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_ui_active"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	PlayerWidgetContainer = ScoreInfo --[[ @ 0]]
	AmmoWidgetContainer = ScoreInfo.subscribeToModel --[[ @ 0]]
	f1_local4 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetContainer( PlayerWidgetContainer, f1_local4["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_weapon_hud_visible"]], function ( f18_arg0 )
		f1_arg0:updateElementState( ScoreInfo, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f18_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_weapon_hud_visible"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	PlayerWidgetContainer = ScoreInfo --[[ @ 0]]
	AmmoWidgetContainer = ScoreInfo.subscribeToModel --[[ @ 0]]
	f1_local4 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetContainer( PlayerWidgetContainer, f1_local4["factions.isCoDCaster"], function ( f19_arg0 )
		f1_arg0:updateElementState( ScoreInfo, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f19_arg0:get(),
			modelName = "factions.isCoDCaster"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	PlayerWidgetContainer = ScoreInfo --[[ @ 0]]
	AmmoWidgetContainer = ScoreInfo.subscribeToModel --[[ @ 0]]
	f1_local4 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetContainer( PlayerWidgetContainer, f1_local4["hudItems.playerSpawned"], function ( f20_arg0 )
		f1_arg0:updateElementState( ScoreInfo, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f20_arg0:get(),
			modelName = "hudItems.playerSpawned"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	PlayerWidgetContainer = ScoreInfo --[[ @ 0]]
	AmmoWidgetContainer = ScoreInfo.subscribeToModel --[[ @ 0]]
	f1_local4 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetContainer( PlayerWidgetContainer, f1_local4["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_emp_active"]], function ( f21_arg0 )
		f1_arg0:updateElementState( ScoreInfo, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f21_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_emp_active"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	PlayerWidgetContainer = ScoreInfo --[[ @ 0]]
	AmmoWidgetContainer = ScoreInfo.subscribeToModel --[[ @ 0]]
	f1_local4 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetContainer( PlayerWidgetContainer, f1_local4["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_game_ended"]], function ( f22_arg0 )
		f1_arg0:updateElementState( ScoreInfo, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f22_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_game_ended"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	PlayerWidgetContainer = ScoreInfo --[[ @ 0]]
	AmmoWidgetContainer = ScoreInfo.subscribeToModel --[[ @ 0]]
	f1_local4 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetContainer( PlayerWidgetContainer, f1_local4["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_team_spectator"]], function ( f23_arg0 )
		f1_arg0:updateElementState( ScoreInfo, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f23_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_team_spectator"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	PlayerWidgetContainer = ScoreInfo --[[ @ 0]]
	AmmoWidgetContainer = ScoreInfo.subscribeToModel --[[ @ 0]]
	f1_local4 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetContainer( PlayerWidgetContainer, f1_local4["hudItems.showSpawnSelect"], function ( f24_arg0 )
		f1_arg0:updateElementState( ScoreInfo, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f24_arg0:get(),
			modelName = "hudItems.showSpawnSelect"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:addElement( ScoreInfo ) --[[ @ 0]]
	self.ScoreInfo = ScoreInfo --[[ @ 0]]
	
	AmmoWidgetContainer = CoD.AmmoWidgetMPContainer.new( f1_arg0, f1_arg1, 1, 1, -590, 0, 1, 1, -158.5, 27.5 ) --[[ @ 0]]
	AmmoWidgetContainer:mergeStateConditions( {
		{
			stateName = "Visible",
			condition = function ( menu, element, event )
				local f25_local0 = CoD.ModelUtility.IsModelValueTrue( f1_arg1, "hudItems.playerSpawned" ) --[[ @ 0]]
				if f25_local0 then
					if not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_demo_all_game_hud_hidden"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_demo_camera_mode_moviecam"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_emp_active"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_hud_hardcore"] ) and Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_hud_visible"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_guided_missile"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_killcam"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_remote_killstreak_static"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"hash_29BF57CE75A8755E"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_vehicle"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_is_flash_banged"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_is_scoped"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_play_of_the_match"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_scoreboard_open"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_ui_active"] ) and Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_weapon_hud_visible"] ) and not IsCodCaster( f1_arg1 ) then
						f25_local0 = not CoD.ModelUtility.IsModelValueEqualTo( f1_arg1, "hudItems.showSpawnSelect", 1 ) --[[ @ 0]]
					else
						f25_local0 = false --[[ @ 0]]
					end
				end
				return f25_local0
			end
		}
	} ) --[[ @ 0]]
	f1_local4 = AmmoWidgetContainer --[[ @ 0]]
	PlayerWidgetContainer = AmmoWidgetContainer.subscribeToModel --[[ @ 0]]
	local ContextNotificationSpecialistWeaponHintListPC = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	PlayerWidgetContainer( f1_local4, ContextNotificationSpecialistWeaponHintListPC["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_demo_all_game_hud_hidden"]], function ( f26_arg0 )
		f1_arg0:updateElementState( AmmoWidgetContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f26_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_demo_all_game_hud_hidden"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local4 = AmmoWidgetContainer --[[ @ 0]]
	PlayerWidgetContainer = AmmoWidgetContainer.subscribeToModel --[[ @ 0]]
	ContextNotificationSpecialistWeaponHintListPC = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	PlayerWidgetContainer( f1_local4, ContextNotificationSpecialistWeaponHintListPC["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_demo_camera_mode_moviecam"]], function ( f27_arg0 )
		f1_arg0:updateElementState( AmmoWidgetContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f27_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_demo_camera_mode_moviecam"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local4 = AmmoWidgetContainer --[[ @ 0]]
	PlayerWidgetContainer = AmmoWidgetContainer.subscribeToModel --[[ @ 0]]
	ContextNotificationSpecialistWeaponHintListPC = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	PlayerWidgetContainer( f1_local4, ContextNotificationSpecialistWeaponHintListPC["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_emp_active"]], function ( f28_arg0 )
		f1_arg0:updateElementState( AmmoWidgetContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f28_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_emp_active"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local4 = AmmoWidgetContainer --[[ @ 0]]
	PlayerWidgetContainer = AmmoWidgetContainer.subscribeToModel --[[ @ 0]]
	ContextNotificationSpecialistWeaponHintListPC = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	PlayerWidgetContainer( f1_local4, ContextNotificationSpecialistWeaponHintListPC["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_hud_hardcore"]], function ( f29_arg0 )
		f1_arg0:updateElementState( AmmoWidgetContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f29_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_hud_hardcore"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local4 = AmmoWidgetContainer --[[ @ 0]]
	PlayerWidgetContainer = AmmoWidgetContainer.subscribeToModel --[[ @ 0]]
	ContextNotificationSpecialistWeaponHintListPC = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	PlayerWidgetContainer( f1_local4, ContextNotificationSpecialistWeaponHintListPC["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_hud_visible"]], function ( f30_arg0 )
		f1_arg0:updateElementState( AmmoWidgetContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f30_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_hud_visible"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local4 = AmmoWidgetContainer --[[ @ 0]]
	PlayerWidgetContainer = AmmoWidgetContainer.subscribeToModel --[[ @ 0]]
	ContextNotificationSpecialistWeaponHintListPC = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	PlayerWidgetContainer( f1_local4, ContextNotificationSpecialistWeaponHintListPC["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_guided_missile"]], function ( f31_arg0 )
		f1_arg0:updateElementState( AmmoWidgetContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f31_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_guided_missile"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local4 = AmmoWidgetContainer --[[ @ 0]]
	PlayerWidgetContainer = AmmoWidgetContainer.subscribeToModel --[[ @ 0]]
	ContextNotificationSpecialistWeaponHintListPC = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	PlayerWidgetContainer( f1_local4, ContextNotificationSpecialistWeaponHintListPC["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_killcam"]], function ( f32_arg0 )
		f1_arg0:updateElementState( AmmoWidgetContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f32_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_killcam"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local4 = AmmoWidgetContainer --[[ @ 0]]
	PlayerWidgetContainer = AmmoWidgetContainer.subscribeToModel --[[ @ 0]]
	ContextNotificationSpecialistWeaponHintListPC = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	PlayerWidgetContainer( f1_local4, ContextNotificationSpecialistWeaponHintListPC["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_remote_killstreak_static"]], function ( f33_arg0 )
		f1_arg0:updateElementState( AmmoWidgetContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f33_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_remote_killstreak_static"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local4 = AmmoWidgetContainer --[[ @ 0]]
	PlayerWidgetContainer = AmmoWidgetContainer.subscribeToModel --[[ @ 0]]
	ContextNotificationSpecialistWeaponHintListPC = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	PlayerWidgetContainer( f1_local4, ContextNotificationSpecialistWeaponHintListPC["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"hash_29BF57CE75A8755E"]], function ( f34_arg0 )
		f1_arg0:updateElementState( AmmoWidgetContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f34_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"hash_29BF57CE75A8755E"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local4 = AmmoWidgetContainer --[[ @ 0]]
	PlayerWidgetContainer = AmmoWidgetContainer.subscribeToModel --[[ @ 0]]
	ContextNotificationSpecialistWeaponHintListPC = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	PlayerWidgetContainer( f1_local4, ContextNotificationSpecialistWeaponHintListPC["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_vehicle"]], function ( f35_arg0 )
		f1_arg0:updateElementState( AmmoWidgetContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f35_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_vehicle"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local4 = AmmoWidgetContainer --[[ @ 0]]
	PlayerWidgetContainer = AmmoWidgetContainer.subscribeToModel --[[ @ 0]]
	ContextNotificationSpecialistWeaponHintListPC = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	PlayerWidgetContainer( f1_local4, ContextNotificationSpecialistWeaponHintListPC["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_flash_banged"]], function ( f36_arg0 )
		f1_arg0:updateElementState( AmmoWidgetContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f36_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_flash_banged"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local4 = AmmoWidgetContainer --[[ @ 0]]
	PlayerWidgetContainer = AmmoWidgetContainer.subscribeToModel --[[ @ 0]]
	ContextNotificationSpecialistWeaponHintListPC = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	PlayerWidgetContainer( f1_local4, ContextNotificationSpecialistWeaponHintListPC["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_scoped"]], function ( f37_arg0 )
		f1_arg0:updateElementState( AmmoWidgetContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f37_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_scoped"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local4 = AmmoWidgetContainer --[[ @ 0]]
	PlayerWidgetContainer = AmmoWidgetContainer.subscribeToModel --[[ @ 0]]
	ContextNotificationSpecialistWeaponHintListPC = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	PlayerWidgetContainer( f1_local4, ContextNotificationSpecialistWeaponHintListPC["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_play_of_the_match"]], function ( f38_arg0 )
		f1_arg0:updateElementState( AmmoWidgetContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f38_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_play_of_the_match"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local4 = AmmoWidgetContainer --[[ @ 0]]
	PlayerWidgetContainer = AmmoWidgetContainer.subscribeToModel --[[ @ 0]]
	ContextNotificationSpecialistWeaponHintListPC = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	PlayerWidgetContainer( f1_local4, ContextNotificationSpecialistWeaponHintListPC["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_scoreboard_open"]], function ( f39_arg0 )
		f1_arg0:updateElementState( AmmoWidgetContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f39_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_scoreboard_open"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local4 = AmmoWidgetContainer --[[ @ 0]]
	PlayerWidgetContainer = AmmoWidgetContainer.subscribeToModel --[[ @ 0]]
	ContextNotificationSpecialistWeaponHintListPC = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	PlayerWidgetContainer( f1_local4, ContextNotificationSpecialistWeaponHintListPC["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_ui_active"]], function ( f40_arg0 )
		f1_arg0:updateElementState( AmmoWidgetContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f40_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_ui_active"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local4 = AmmoWidgetContainer --[[ @ 0]]
	PlayerWidgetContainer = AmmoWidgetContainer.subscribeToModel --[[ @ 0]]
	ContextNotificationSpecialistWeaponHintListPC = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	PlayerWidgetContainer( f1_local4, ContextNotificationSpecialistWeaponHintListPC["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_weapon_hud_visible"]], function ( f41_arg0 )
		f1_arg0:updateElementState( AmmoWidgetContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f41_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_weapon_hud_visible"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local4 = AmmoWidgetContainer --[[ @ 0]]
	PlayerWidgetContainer = AmmoWidgetContainer.subscribeToModel --[[ @ 0]]
	ContextNotificationSpecialistWeaponHintListPC = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	PlayerWidgetContainer( f1_local4, ContextNotificationSpecialistWeaponHintListPC["factions.isCoDCaster"], function ( f42_arg0 )
		f1_arg0:updateElementState( AmmoWidgetContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f42_arg0:get(),
			modelName = "factions.isCoDCaster"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local4 = AmmoWidgetContainer --[[ @ 0]]
	PlayerWidgetContainer = AmmoWidgetContainer.subscribeToModel --[[ @ 0]]
	ContextNotificationSpecialistWeaponHintListPC = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	PlayerWidgetContainer( f1_local4, ContextNotificationSpecialistWeaponHintListPC["hudItems.playerSpawned"], function ( f43_arg0 )
		f1_arg0:updateElementState( AmmoWidgetContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f43_arg0:get(),
			modelName = "hudItems.playerSpawned"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local4 = AmmoWidgetContainer --[[ @ 0]]
	PlayerWidgetContainer = AmmoWidgetContainer.subscribeToModel --[[ @ 0]]
	ContextNotificationSpecialistWeaponHintListPC = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	PlayerWidgetContainer( f1_local4, ContextNotificationSpecialistWeaponHintListPC["hudItems.showSpawnSelect"], function ( f44_arg0 )
		f1_arg0:updateElementState( AmmoWidgetContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f44_arg0:get(),
			modelName = "hudItems.showSpawnSelect"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local4 = AmmoWidgetContainer --[[ @ 0]]
	PlayerWidgetContainer = AmmoWidgetContainer.subscribeToModel --[[ @ 0]]
	ContextNotificationSpecialistWeaponHintListPC = DataSources.CodCaster.getModel( f1_arg1 ) --[[ @ 0]]
	PlayerWidgetContainer( f1_local4, ContextNotificationSpecialistWeaponHintListPC.profileSettingsUpdated, function ( f45_arg0 )
		f1_arg0:updateElementState( AmmoWidgetContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f45_arg0:get(),
			modelName = "profileSettingsUpdated"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local4 = AmmoWidgetContainer --[[ @ 0]]
	PlayerWidgetContainer = AmmoWidgetContainer.subscribeToModel --[[ @ 0]]
	ContextNotificationSpecialistWeaponHintListPC = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	PlayerWidgetContainer( f1_local4, ContextNotificationSpecialistWeaponHintListPC["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_game_ended"]], function ( f46_arg0 )
		f1_arg0:updateElementState( AmmoWidgetContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f46_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_game_ended"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local4 = AmmoWidgetContainer --[[ @ 0]]
	PlayerWidgetContainer = AmmoWidgetContainer.subscribeToModel --[[ @ 0]]
	ContextNotificationSpecialistWeaponHintListPC = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	PlayerWidgetContainer( f1_local4, ContextNotificationSpecialistWeaponHintListPC["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"hash_57EAF988DDEB83EA"]], function ( f47_arg0 )
		f1_arg0:updateElementState( AmmoWidgetContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f47_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"hash_57EAF988DDEB83EA"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:addElement( AmmoWidgetContainer ) --[[ @ 0]]
	self.AmmoWidgetContainer = AmmoWidgetContainer --[[ @ 0]]
	
	PlayerWidgetContainer = CoD.PlayerWidgetContainer.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 1, 1, -143, 43 ) --[[ @ 0]]
	PlayerWidgetContainer:mergeStateConditions( {
		{
			stateName = "VisiblePC",
			condition = function ( menu, element, event )
				local f48_local0 = CoD.ModelUtility.IsModelValueTrue( f1_arg1, "hudItems.playerSpawned" ) --[[ @ 0]]
				if f48_local0 then
					if not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_demo_all_game_hud_hidden"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_demo_camera_mode_moviecam"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_emp_active"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_hud_hardcore"] ) and Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_hud_visible"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_guided_missile"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_killcam"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_remote_killstreak_static"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"hash_29BF57CE75A8755E"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_vehicle"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_is_flash_banged"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_is_scoped"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_play_of_the_match"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_scoreboard_open"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_ui_active"] ) and not IsCodCaster( f1_arg1 ) then
						f48_local0 = IsPC() --[[ @ 0]]
						if f48_local0 then
							f48_local0 = not CoD.ModelUtility.IsModelValueEqualTo( f1_arg1, "hudItems.showSpawnSelect", 1 ) --[[ @ 0]]
						end
					else
						f48_local0 = false --[[ @ 0]]
					end
				end
				return f48_local0
			end
		},
		{
			stateName = "VisibleCenteredByAbility",
			condition = function ( menu, element, event )
				local f49_local0 = CoD.ModelUtility.IsGlobalDataSourceModelValueEqualToEnum( f1_arg1, "HUDItems", "abilityHintIndex", CoD.HUDUtility.GagdetHintIndex.GADGET_HINT_INDEX_RADIATION_FIELD ) --[[ @ 0]]
				if f49_local0 then
					f49_local0 = CoD.ModelUtility.IsModelValueTrue( f1_arg1, "hudItems.playerSpawned" ) --[[ @ 0]]
					if f49_local0 then
						if not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_demo_all_game_hud_hidden"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_demo_camera_mode_moviecam"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_emp_active"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_hud_hardcore"] ) and Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_hud_visible"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_guided_missile"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_killcam"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_remote_killstreak_static"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"hash_29BF57CE75A8755E"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_vehicle"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_is_flash_banged"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_is_scoped"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_play_of_the_match"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_scoreboard_open"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_ui_active"] ) and not IsCodCaster( f1_arg1 ) then
							f49_local0 = not CoD.ModelUtility.IsModelValueEqualTo( f1_arg1, "hudItems.showSpawnSelect", 1 ) --[[ @ 0]]
						else
							f49_local0 = false --[[ @ 0]]
						end
					end
				end
				return f49_local0
			end
		},
		{
			stateName = "Visible",
			condition = function ( menu, element, event )
				local f50_local0 = CoD.ModelUtility.IsModelValueTrue( f1_arg1, "hudItems.playerSpawned" ) --[[ @ 0]]
				if f50_local0 then
					if not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_demo_all_game_hud_hidden"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_demo_camera_mode_moviecam"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_emp_active"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_hud_hardcore"] ) and Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_hud_visible"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_guided_missile"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_killcam"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_remote_killstreak_static"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"hash_29BF57CE75A8755E"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_vehicle"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_is_flash_banged"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_is_scoped"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_play_of_the_match"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_scoreboard_open"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_ui_active"] ) and not IsCodCaster( f1_arg1 ) then
						f50_local0 = not CoD.ModelUtility.IsModelValueEqualTo( f1_arg1, "hudItems.showSpawnSelect", 1 ) --[[ @ 0]]
					else
						f50_local0 = false --[[ @ 0]]
					end
				end
				return f50_local0
			end
		}
	} ) --[[ @ 0]]
	ContextNotificationSpecialistWeaponHintListPC = PlayerWidgetContainer --[[ @ 0]]
	f1_local4 = PlayerWidgetContainer.subscribeToModel --[[ @ 0]]
	local ContextNotificationContainer = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local4( ContextNotificationSpecialistWeaponHintListPC, ContextNotificationContainer["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_demo_all_game_hud_hidden"]], function ( f51_arg0 )
		f1_arg0:updateElementState( PlayerWidgetContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f51_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_demo_all_game_hud_hidden"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ContextNotificationSpecialistWeaponHintListPC = PlayerWidgetContainer --[[ @ 0]]
	f1_local4 = PlayerWidgetContainer.subscribeToModel --[[ @ 0]]
	ContextNotificationContainer = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local4( ContextNotificationSpecialistWeaponHintListPC, ContextNotificationContainer["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_demo_camera_mode_moviecam"]], function ( f52_arg0 )
		f1_arg0:updateElementState( PlayerWidgetContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f52_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_demo_camera_mode_moviecam"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ContextNotificationSpecialistWeaponHintListPC = PlayerWidgetContainer --[[ @ 0]]
	f1_local4 = PlayerWidgetContainer.subscribeToModel --[[ @ 0]]
	ContextNotificationContainer = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local4( ContextNotificationSpecialistWeaponHintListPC, ContextNotificationContainer["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_emp_active"]], function ( f53_arg0 )
		f1_arg0:updateElementState( PlayerWidgetContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f53_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_emp_active"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ContextNotificationSpecialistWeaponHintListPC = PlayerWidgetContainer --[[ @ 0]]
	f1_local4 = PlayerWidgetContainer.subscribeToModel --[[ @ 0]]
	ContextNotificationContainer = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local4( ContextNotificationSpecialistWeaponHintListPC, ContextNotificationContainer["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_hud_hardcore"]], function ( f54_arg0 )
		f1_arg0:updateElementState( PlayerWidgetContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f54_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_hud_hardcore"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ContextNotificationSpecialistWeaponHintListPC = PlayerWidgetContainer --[[ @ 0]]
	f1_local4 = PlayerWidgetContainer.subscribeToModel --[[ @ 0]]
	ContextNotificationContainer = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local4( ContextNotificationSpecialistWeaponHintListPC, ContextNotificationContainer["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_hud_visible"]], function ( f55_arg0 )
		f1_arg0:updateElementState( PlayerWidgetContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f55_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_hud_visible"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ContextNotificationSpecialistWeaponHintListPC = PlayerWidgetContainer --[[ @ 0]]
	f1_local4 = PlayerWidgetContainer.subscribeToModel --[[ @ 0]]
	ContextNotificationContainer = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local4( ContextNotificationSpecialistWeaponHintListPC, ContextNotificationContainer["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_guided_missile"]], function ( f56_arg0 )
		f1_arg0:updateElementState( PlayerWidgetContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f56_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_guided_missile"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ContextNotificationSpecialistWeaponHintListPC = PlayerWidgetContainer --[[ @ 0]]
	f1_local4 = PlayerWidgetContainer.subscribeToModel --[[ @ 0]]
	ContextNotificationContainer = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local4( ContextNotificationSpecialistWeaponHintListPC, ContextNotificationContainer["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_killcam"]], function ( f57_arg0 )
		f1_arg0:updateElementState( PlayerWidgetContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f57_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_killcam"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ContextNotificationSpecialistWeaponHintListPC = PlayerWidgetContainer --[[ @ 0]]
	f1_local4 = PlayerWidgetContainer.subscribeToModel --[[ @ 0]]
	ContextNotificationContainer = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local4( ContextNotificationSpecialistWeaponHintListPC, ContextNotificationContainer["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_remote_killstreak_static"]], function ( f58_arg0 )
		f1_arg0:updateElementState( PlayerWidgetContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f58_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_remote_killstreak_static"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ContextNotificationSpecialistWeaponHintListPC = PlayerWidgetContainer --[[ @ 0]]
	f1_local4 = PlayerWidgetContainer.subscribeToModel --[[ @ 0]]
	ContextNotificationContainer = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local4( ContextNotificationSpecialistWeaponHintListPC, ContextNotificationContainer["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"hash_29BF57CE75A8755E"]], function ( f59_arg0 )
		f1_arg0:updateElementState( PlayerWidgetContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f59_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"hash_29BF57CE75A8755E"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ContextNotificationSpecialistWeaponHintListPC = PlayerWidgetContainer --[[ @ 0]]
	f1_local4 = PlayerWidgetContainer.subscribeToModel --[[ @ 0]]
	ContextNotificationContainer = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local4( ContextNotificationSpecialistWeaponHintListPC, ContextNotificationContainer["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_vehicle"]], function ( f60_arg0 )
		f1_arg0:updateElementState( PlayerWidgetContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f60_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_vehicle"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ContextNotificationSpecialistWeaponHintListPC = PlayerWidgetContainer --[[ @ 0]]
	f1_local4 = PlayerWidgetContainer.subscribeToModel --[[ @ 0]]
	ContextNotificationContainer = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local4( ContextNotificationSpecialistWeaponHintListPC, ContextNotificationContainer["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_flash_banged"]], function ( f61_arg0 )
		f1_arg0:updateElementState( PlayerWidgetContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f61_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_flash_banged"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ContextNotificationSpecialistWeaponHintListPC = PlayerWidgetContainer --[[ @ 0]]
	f1_local4 = PlayerWidgetContainer.subscribeToModel --[[ @ 0]]
	ContextNotificationContainer = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local4( ContextNotificationSpecialistWeaponHintListPC, ContextNotificationContainer["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_scoped"]], function ( f62_arg0 )
		f1_arg0:updateElementState( PlayerWidgetContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f62_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_scoped"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ContextNotificationSpecialistWeaponHintListPC = PlayerWidgetContainer --[[ @ 0]]
	f1_local4 = PlayerWidgetContainer.subscribeToModel --[[ @ 0]]
	ContextNotificationContainer = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local4( ContextNotificationSpecialistWeaponHintListPC, ContextNotificationContainer["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_play_of_the_match"]], function ( f63_arg0 )
		f1_arg0:updateElementState( PlayerWidgetContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f63_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_play_of_the_match"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ContextNotificationSpecialistWeaponHintListPC = PlayerWidgetContainer --[[ @ 0]]
	f1_local4 = PlayerWidgetContainer.subscribeToModel --[[ @ 0]]
	ContextNotificationContainer = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local4( ContextNotificationSpecialistWeaponHintListPC, ContextNotificationContainer["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_scoreboard_open"]], function ( f64_arg0 )
		f1_arg0:updateElementState( PlayerWidgetContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f64_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_scoreboard_open"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ContextNotificationSpecialistWeaponHintListPC = PlayerWidgetContainer --[[ @ 0]]
	f1_local4 = PlayerWidgetContainer.subscribeToModel --[[ @ 0]]
	ContextNotificationContainer = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local4( ContextNotificationSpecialistWeaponHintListPC, ContextNotificationContainer["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_ui_active"]], function ( f65_arg0 )
		f1_arg0:updateElementState( PlayerWidgetContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f65_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_ui_active"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ContextNotificationSpecialistWeaponHintListPC = PlayerWidgetContainer --[[ @ 0]]
	f1_local4 = PlayerWidgetContainer.subscribeToModel --[[ @ 0]]
	ContextNotificationContainer = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local4( ContextNotificationSpecialistWeaponHintListPC, ContextNotificationContainer["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_weapon_hud_visible"]], function ( f66_arg0 )
		f1_arg0:updateElementState( PlayerWidgetContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f66_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_weapon_hud_visible"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ContextNotificationSpecialistWeaponHintListPC = PlayerWidgetContainer --[[ @ 0]]
	f1_local4 = PlayerWidgetContainer.subscribeToModel --[[ @ 0]]
	ContextNotificationContainer = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local4( ContextNotificationSpecialistWeaponHintListPC, ContextNotificationContainer["factions.isCoDCaster"], function ( f67_arg0 )
		f1_arg0:updateElementState( PlayerWidgetContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f67_arg0:get(),
			modelName = "factions.isCoDCaster"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ContextNotificationSpecialistWeaponHintListPC = PlayerWidgetContainer --[[ @ 0]]
	f1_local4 = PlayerWidgetContainer.subscribeToModel --[[ @ 0]]
	ContextNotificationContainer = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local4( ContextNotificationSpecialistWeaponHintListPC, ContextNotificationContainer["hudItems.playerSpawned"], function ( f68_arg0 )
		f1_arg0:updateElementState( PlayerWidgetContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f68_arg0:get(),
			modelName = "hudItems.playerSpawned"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ContextNotificationSpecialistWeaponHintListPC = PlayerWidgetContainer --[[ @ 0]]
	f1_local4 = PlayerWidgetContainer.subscribeToModel --[[ @ 0]]
	ContextNotificationContainer = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local4( ContextNotificationSpecialistWeaponHintListPC, ContextNotificationContainer["hudItems.showSpawnSelect"], function ( f69_arg0 )
		f1_arg0:updateElementState( PlayerWidgetContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f69_arg0:get(),
			modelName = "hudItems.showSpawnSelect"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ContextNotificationSpecialistWeaponHintListPC = PlayerWidgetContainer --[[ @ 0]]
	f1_local4 = PlayerWidgetContainer.subscribeToModel --[[ @ 0]]
	ContextNotificationContainer = DataSources.HUDItems.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local4( ContextNotificationSpecialistWeaponHintListPC, ContextNotificationContainer.abilityHintIndex, function ( f70_arg0 )
		f1_arg0:updateElementState( PlayerWidgetContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f70_arg0:get(),
			modelName = "abilityHintIndex"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ContextNotificationSpecialistWeaponHintListPC = PlayerWidgetContainer --[[ @ 0]]
	f1_local4 = PlayerWidgetContainer.subscribeToModel --[[ @ 0]]
	ContextNotificationContainer = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local4( ContextNotificationSpecialistWeaponHintListPC, ContextNotificationContainer["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_spectating_client"]], function ( f71_arg0 )
		f1_arg0:updateElementState( PlayerWidgetContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f71_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_spectating_client"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ContextNotificationSpecialistWeaponHintListPC = PlayerWidgetContainer --[[ @ 0]]
	f1_local4 = PlayerWidgetContainer.subscribeToModel --[[ @ 0]]
	ContextNotificationContainer = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local4( ContextNotificationSpecialistWeaponHintListPC, ContextNotificationContainer["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_team_spectator"]], function ( f72_arg0 )
		f1_arg0:updateElementState( PlayerWidgetContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f72_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_team_spectator"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:addElement( PlayerWidgetContainer ) --[[ @ 0]]
	self.PlayerWidgetContainer = PlayerWidgetContainer --[[ @ 0]]
	
	f1_local4 = nil --[[ @ 0]]
	self.ContextNotificationSpecialistWeaponHintList = LUI.UIElement.createFake() --[[ @ 0]]
	ContextNotificationSpecialistWeaponHintListPC = nil --[[ @ 0]]
	
	ContextNotificationSpecialistWeaponHintListPC = CoD.ContextNotification_SpecialistWeaponHintList.new( f1_arg0, f1_arg1, 0.5, 0.5, -150, 150, 1, 1, -174, -144 ) --[[ @ 0]]
	self:addElement( ContextNotificationSpecialistWeaponHintListPC ) --[[ @ 0]]
	self.ContextNotificationSpecialistWeaponHintListPC = ContextNotificationSpecialistWeaponHintListPC --[[ @ 0]]
	
	ContextNotificationContainer = CoD.ContextNotificationContainer.new( f1_arg0, f1_arg1, 0.5, 0.5, -150, 150, 1, 1, -306, -276 ) --[[ @ 0]]
	self:addElement( ContextNotificationContainer ) --[[ @ 0]]
	self.ContextNotificationContainer = ContextNotificationContainer --[[ @ 0]]
	
	local ReadyEvents = CoD.ReadyEvents.new( f1_arg0, f1_arg1, 0.5, 0.5, -300, 300, 1, 1, -433, -253 ) --[[ @ 0]]
	ReadyEvents:subscribeToGlobalModel( f1_arg1, "PerController", "scriptNotify", function ( model )
		local f73_local0 = ReadyEvents --[[ @ 0]]
		if CoD.ModelUtility.IsParamModelEqualToHashString( model, @"killstreak_received" ) then
			AddKillstreakReceivedNotification( self, f73_local0, f1_arg1, model ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( ReadyEvents ) --[[ @ 0]]
	self.ReadyEvents = ReadyEvents --[[ @ 0]]
	
	local EMPScoreInfo = CoD.EMP_ScoreInfo.new( f1_arg0, f1_arg1, 0, 0, -10, 502, 1, 1, -110, 146 ) --[[ @ 0]]
	self:addElement( EMPScoreInfo ) --[[ @ 0]]
	self.EMPScoreInfo = EMPScoreInfo --[[ @ 0]]
	
	local EMPWeaponInfo = CoD.EMP_WeaponInfo.new( f1_arg0, f1_arg1, 1, 1, -502, 10, 1, 1, -270, -14 ) --[[ @ 0]]
	self:addElement( EMPWeaponInfo ) --[[ @ 0]]
	self.EMPWeaponInfo = EMPWeaponInfo --[[ @ 0]]
	
	local VoipContainer0 = CoD.Voip_Container.new( f1_arg0, f1_arg1, 0, 0, 314, 724, 0, 0, 22, 130 ) --[[ @ 0]]
	VoipContainer0:mergeStateConditions( {
		{
			stateName = "HudStart",
			condition = function ( menu, element, event )
				local f74_local0 = CoD.ModelUtility.IsModelValueTrue( f1_arg1, "hudItems.playerSpawned" ) --[[ @ 0]]
				if f74_local0 then
					if Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_compass_visible"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_demo_all_game_hud_hidden"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_demo_camera_mode_moviecam"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_game_ended"] ) and Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_hud_visible"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_guided_missile"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_killcam"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_remote_killstreak_static"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_is_flash_banged"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_is_scoped"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_play_of_the_match"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_scoreboard_open"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_selecting_locational_killstreak"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_ui_active"] ) then
						f74_local0 = not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_team_spectator"] ) --[[ @ 0]]
					else
						f74_local0 = false --[[ @ 0]]
					end
				end
				return f74_local0
			end
		},
		{
			stateName = "ShowForCodCaster",
			condition = function ( menu, element, event )
				local f75_local0 = IsCodCaster( f1_arg1 ) --[[ @ 0]]
				if f75_local0 then
					f75_local0 = IsCodCasterProfileValueEqualTo( f1_arg1, "shoutcaster_ds_voip_dock", 1 ) --[[ @ 0]]
					if f75_local0 then
						f75_local0 = not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_scoreboard_open"] ) --[[ @ 0]]
					end
				end
				return f75_local0
			end
		}
	} ) --[[ @ 0]]
	local WaypointCloseMessage = VoipContainer0 --[[ @ 0]]
	local MPHardcoreInventoryWidget = VoipContainer0.subscribeToModel --[[ @ 0]]
	local GameUpdateNotification = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	MPHardcoreInventoryWidget( WaypointCloseMessage, GameUpdateNotification["hudItems.playerSpawned"], function ( f76_arg0 )
		f1_arg0:updateElementState( VoipContainer0, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f76_arg0:get(),
			modelName = "hudItems.playerSpawned"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	WaypointCloseMessage = VoipContainer0 --[[ @ 0]]
	MPHardcoreInventoryWidget = VoipContainer0.subscribeToModel --[[ @ 0]]
	GameUpdateNotification = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	MPHardcoreInventoryWidget( WaypointCloseMessage, GameUpdateNotification["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_compass_visible"]], function ( f77_arg0 )
		f1_arg0:updateElementState( VoipContainer0, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f77_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_compass_visible"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	WaypointCloseMessage = VoipContainer0 --[[ @ 0]]
	MPHardcoreInventoryWidget = VoipContainer0.subscribeToModel --[[ @ 0]]
	GameUpdateNotification = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	MPHardcoreInventoryWidget( WaypointCloseMessage, GameUpdateNotification["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_demo_all_game_hud_hidden"]], function ( f78_arg0 )
		f1_arg0:updateElementState( VoipContainer0, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f78_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_demo_all_game_hud_hidden"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	WaypointCloseMessage = VoipContainer0 --[[ @ 0]]
	MPHardcoreInventoryWidget = VoipContainer0.subscribeToModel --[[ @ 0]]
	GameUpdateNotification = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	MPHardcoreInventoryWidget( WaypointCloseMessage, GameUpdateNotification["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_demo_camera_mode_moviecam"]], function ( f79_arg0 )
		f1_arg0:updateElementState( VoipContainer0, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f79_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_demo_camera_mode_moviecam"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	WaypointCloseMessage = VoipContainer0 --[[ @ 0]]
	MPHardcoreInventoryWidget = VoipContainer0.subscribeToModel --[[ @ 0]]
	GameUpdateNotification = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	MPHardcoreInventoryWidget( WaypointCloseMessage, GameUpdateNotification["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_game_ended"]], function ( f80_arg0 )
		f1_arg0:updateElementState( VoipContainer0, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f80_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_game_ended"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	WaypointCloseMessage = VoipContainer0 --[[ @ 0]]
	MPHardcoreInventoryWidget = VoipContainer0.subscribeToModel --[[ @ 0]]
	GameUpdateNotification = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	MPHardcoreInventoryWidget( WaypointCloseMessage, GameUpdateNotification["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_hud_visible"]], function ( f81_arg0 )
		f1_arg0:updateElementState( VoipContainer0, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f81_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_hud_visible"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	WaypointCloseMessage = VoipContainer0 --[[ @ 0]]
	MPHardcoreInventoryWidget = VoipContainer0.subscribeToModel --[[ @ 0]]
	GameUpdateNotification = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	MPHardcoreInventoryWidget( WaypointCloseMessage, GameUpdateNotification["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_guided_missile"]], function ( f82_arg0 )
		f1_arg0:updateElementState( VoipContainer0, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f82_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_guided_missile"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	WaypointCloseMessage = VoipContainer0 --[[ @ 0]]
	MPHardcoreInventoryWidget = VoipContainer0.subscribeToModel --[[ @ 0]]
	GameUpdateNotification = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	MPHardcoreInventoryWidget( WaypointCloseMessage, GameUpdateNotification["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_killcam"]], function ( f83_arg0 )
		f1_arg0:updateElementState( VoipContainer0, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f83_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_killcam"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	WaypointCloseMessage = VoipContainer0 --[[ @ 0]]
	MPHardcoreInventoryWidget = VoipContainer0.subscribeToModel --[[ @ 0]]
	GameUpdateNotification = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	MPHardcoreInventoryWidget( WaypointCloseMessage, GameUpdateNotification["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_remote_killstreak_static"]], function ( f84_arg0 )
		f1_arg0:updateElementState( VoipContainer0, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f84_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_remote_killstreak_static"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	WaypointCloseMessage = VoipContainer0 --[[ @ 0]]
	MPHardcoreInventoryWidget = VoipContainer0.subscribeToModel --[[ @ 0]]
	GameUpdateNotification = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	MPHardcoreInventoryWidget( WaypointCloseMessage, GameUpdateNotification["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_flash_banged"]], function ( f85_arg0 )
		f1_arg0:updateElementState( VoipContainer0, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f85_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_flash_banged"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	WaypointCloseMessage = VoipContainer0 --[[ @ 0]]
	MPHardcoreInventoryWidget = VoipContainer0.subscribeToModel --[[ @ 0]]
	GameUpdateNotification = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	MPHardcoreInventoryWidget( WaypointCloseMessage, GameUpdateNotification["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_scoped"]], function ( f86_arg0 )
		f1_arg0:updateElementState( VoipContainer0, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f86_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_scoped"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	WaypointCloseMessage = VoipContainer0 --[[ @ 0]]
	MPHardcoreInventoryWidget = VoipContainer0.subscribeToModel --[[ @ 0]]
	GameUpdateNotification = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	MPHardcoreInventoryWidget( WaypointCloseMessage, GameUpdateNotification["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_play_of_the_match"]], function ( f87_arg0 )
		f1_arg0:updateElementState( VoipContainer0, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f87_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_play_of_the_match"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	WaypointCloseMessage = VoipContainer0 --[[ @ 0]]
	MPHardcoreInventoryWidget = VoipContainer0.subscribeToModel --[[ @ 0]]
	GameUpdateNotification = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	MPHardcoreInventoryWidget( WaypointCloseMessage, GameUpdateNotification["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_scoreboard_open"]], function ( f88_arg0 )
		f1_arg0:updateElementState( VoipContainer0, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f88_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_scoreboard_open"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	WaypointCloseMessage = VoipContainer0 --[[ @ 0]]
	MPHardcoreInventoryWidget = VoipContainer0.subscribeToModel --[[ @ 0]]
	GameUpdateNotification = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	MPHardcoreInventoryWidget( WaypointCloseMessage, GameUpdateNotification["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_selecting_locational_killstreak"]], function ( f89_arg0 )
		f1_arg0:updateElementState( VoipContainer0, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f89_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_selecting_locational_killstreak"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	WaypointCloseMessage = VoipContainer0 --[[ @ 0]]
	MPHardcoreInventoryWidget = VoipContainer0.subscribeToModel --[[ @ 0]]
	GameUpdateNotification = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	MPHardcoreInventoryWidget( WaypointCloseMessage, GameUpdateNotification["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_ui_active"]], function ( f90_arg0 )
		f1_arg0:updateElementState( VoipContainer0, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f90_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_ui_active"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	WaypointCloseMessage = VoipContainer0 --[[ @ 0]]
	MPHardcoreInventoryWidget = VoipContainer0.subscribeToModel --[[ @ 0]]
	GameUpdateNotification = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	MPHardcoreInventoryWidget( WaypointCloseMessage, GameUpdateNotification["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_team_spectator"]], function ( f91_arg0 )
		f1_arg0:updateElementState( VoipContainer0, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f91_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_team_spectator"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	WaypointCloseMessage = VoipContainer0 --[[ @ 0]]
	MPHardcoreInventoryWidget = VoipContainer0.subscribeToModel --[[ @ 0]]
	GameUpdateNotification = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	MPHardcoreInventoryWidget( WaypointCloseMessage, GameUpdateNotification["factions.isCoDCaster"], function ( f92_arg0 )
		f1_arg0:updateElementState( VoipContainer0, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f92_arg0:get(),
			modelName = "factions.isCoDCaster"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	WaypointCloseMessage = VoipContainer0 --[[ @ 0]]
	MPHardcoreInventoryWidget = VoipContainer0.subscribeToModel --[[ @ 0]]
	GameUpdateNotification = DataSources.CodCaster.getModel( f1_arg1 ) --[[ @ 0]]
	MPHardcoreInventoryWidget( WaypointCloseMessage, GameUpdateNotification.profileSettingsUpdated, function ( f93_arg0 )
		f1_arg0:updateElementState( VoipContainer0, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f93_arg0:get(),
			modelName = "profileSettingsUpdated"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:addElement( VoipContainer0 ) --[[ @ 0]]
	self.VoipContainer0 = VoipContainer0 --[[ @ 0]]
	
	MPHardcoreInventoryWidget = CoD.MP_HardcoreInventoryWidget.new( f1_arg0, f1_arg1, 1, 1, -637.5, -520.5, 1, 1, -217, -77 ) --[[ @ 0]]
	self:addElement( MPHardcoreInventoryWidget ) --[[ @ 0]]
	self.MPHardcoreInventoryWidget = MPHardcoreInventoryWidget --[[ @ 0]]
	
	WaypointCloseMessage = CoD.WaypointCloseMessage.new( f1_arg0, f1_arg1, 0.5, 0.5, -192, 192, 0, 0, 267, 288 ) --[[ @ 0]]
	WaypointCloseMessage.text:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"menu/new" ) ) --[[ @ 0]]
	self:addElement( WaypointCloseMessage ) --[[ @ 0]]
	self.WaypointCloseMessage = WaypointCloseMessage --[[ @ 0]]
	
	GameUpdateNotification = CoD.GameUpdateNotification.new( f1_arg0, f1_arg1, 0.5, 0.5, -250, 250, 0, 0, 294, 342 ) --[[ @ 0]]
	GameUpdateNotification:subscribeToGlobalModel( f1_arg1, "GameUpdateNotification", nil, function ( model )
		GameUpdateNotification:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( GameUpdateNotification ) --[[ @ 0]]
	self.GameUpdateNotification = GameUpdateNotification --[[ @ 0]]
	
	local ObituaryCallout = CoD.ObituaryCallout.new( f1_arg0, f1_arg1, 0.5, 0.5, -140, 140, 1, 1, -237, -197 ) --[[ @ 0]]
	self:addElement( ObituaryCallout ) --[[ @ 0]]
	self.ObituaryCallout = ObituaryCallout --[[ @ 0]]
	
	local AmmoWidgetMPUltimate = CoD.AmmoWidgetMP_Ultimate.new( f1_arg0, f1_arg1, 0.5, 0.5, -134, 134, 1, 1, -122.5, -2.5 ) --[[ @ 0]]
	AmmoWidgetMPUltimate:mergeStateConditions( {
		{
			stateName = "Visible",
			condition = function ( menu, element, event )
				local f95_local0 = CoD.ModelUtility.IsModelValueTrue( f1_arg1, "hudItems.playerSpawned" ) --[[ @ 0]]
				if f95_local0 then
					if not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_demo_all_game_hud_hidden"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_demo_camera_mode_moviecam"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_emp_active"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_hud_hardcore"] ) and Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_hud_visible"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_guided_missile"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_killcam"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_remote_killstreak_static"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"hash_29BF57CE75A8755E"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_vehicle"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_is_flash_banged"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_is_scoped"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_play_of_the_match"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_scoreboard_open"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_ui_active"] ) and Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_weapon_hud_visible"] ) and not IsCodCaster( f1_arg1 ) and not CoD.HUDUtility.IsGameTypeEqualToString( "oic" ) then
						f95_local0 = not CoD.ModelUtility.IsModelValueEqualTo( f1_arg1, "hudItems.showSpawnSelect", 1 ) --[[ @ 0]]
					else
						f95_local0 = false --[[ @ 0]]
					end
				end
				return f95_local0
			end
		}
	} ) --[[ @ 0]]
	local DeathCamContainer = AmmoWidgetMPUltimate --[[ @ 0]]
	local ObitInfoFeedContainer = AmmoWidgetMPUltimate.subscribeToModel --[[ @ 0]]
	local ScrStkContainerWrapper = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	ObitInfoFeedContainer( DeathCamContainer, ScrStkContainerWrapper["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_demo_all_game_hud_hidden"]], function ( f96_arg0 )
		f1_arg0:updateElementState( AmmoWidgetMPUltimate, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f96_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_demo_all_game_hud_hidden"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	DeathCamContainer = AmmoWidgetMPUltimate --[[ @ 0]]
	ObitInfoFeedContainer = AmmoWidgetMPUltimate.subscribeToModel --[[ @ 0]]
	ScrStkContainerWrapper = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	ObitInfoFeedContainer( DeathCamContainer, ScrStkContainerWrapper["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_demo_camera_mode_moviecam"]], function ( f97_arg0 )
		f1_arg0:updateElementState( AmmoWidgetMPUltimate, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f97_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_demo_camera_mode_moviecam"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	DeathCamContainer = AmmoWidgetMPUltimate --[[ @ 0]]
	ObitInfoFeedContainer = AmmoWidgetMPUltimate.subscribeToModel --[[ @ 0]]
	ScrStkContainerWrapper = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	ObitInfoFeedContainer( DeathCamContainer, ScrStkContainerWrapper["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_hud_hardcore"]], function ( f98_arg0 )
		f1_arg0:updateElementState( AmmoWidgetMPUltimate, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f98_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_hud_hardcore"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	DeathCamContainer = AmmoWidgetMPUltimate --[[ @ 0]]
	ObitInfoFeedContainer = AmmoWidgetMPUltimate.subscribeToModel --[[ @ 0]]
	ScrStkContainerWrapper = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	ObitInfoFeedContainer( DeathCamContainer, ScrStkContainerWrapper["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_hud_visible"]], function ( f99_arg0 )
		f1_arg0:updateElementState( AmmoWidgetMPUltimate, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f99_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_hud_visible"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	DeathCamContainer = AmmoWidgetMPUltimate --[[ @ 0]]
	ObitInfoFeedContainer = AmmoWidgetMPUltimate.subscribeToModel --[[ @ 0]]
	ScrStkContainerWrapper = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	ObitInfoFeedContainer( DeathCamContainer, ScrStkContainerWrapper["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_guided_missile"]], function ( f100_arg0 )
		f1_arg0:updateElementState( AmmoWidgetMPUltimate, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f100_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_guided_missile"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	DeathCamContainer = AmmoWidgetMPUltimate --[[ @ 0]]
	ObitInfoFeedContainer = AmmoWidgetMPUltimate.subscribeToModel --[[ @ 0]]
	ScrStkContainerWrapper = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	ObitInfoFeedContainer( DeathCamContainer, ScrStkContainerWrapper["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_killcam"]], function ( f101_arg0 )
		f1_arg0:updateElementState( AmmoWidgetMPUltimate, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f101_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_killcam"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	DeathCamContainer = AmmoWidgetMPUltimate --[[ @ 0]]
	ObitInfoFeedContainer = AmmoWidgetMPUltimate.subscribeToModel --[[ @ 0]]
	ScrStkContainerWrapper = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	ObitInfoFeedContainer( DeathCamContainer, ScrStkContainerWrapper["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_remote_killstreak_static"]], function ( f102_arg0 )
		f1_arg0:updateElementState( AmmoWidgetMPUltimate, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f102_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_remote_killstreak_static"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	DeathCamContainer = AmmoWidgetMPUltimate --[[ @ 0]]
	ObitInfoFeedContainer = AmmoWidgetMPUltimate.subscribeToModel --[[ @ 0]]
	ScrStkContainerWrapper = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	ObitInfoFeedContainer( DeathCamContainer, ScrStkContainerWrapper["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"hash_29BF57CE75A8755E"]], function ( f103_arg0 )
		f1_arg0:updateElementState( AmmoWidgetMPUltimate, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f103_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"hash_29BF57CE75A8755E"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	DeathCamContainer = AmmoWidgetMPUltimate --[[ @ 0]]
	ObitInfoFeedContainer = AmmoWidgetMPUltimate.subscribeToModel --[[ @ 0]]
	ScrStkContainerWrapper = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	ObitInfoFeedContainer( DeathCamContainer, ScrStkContainerWrapper["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_vehicle"]], function ( f104_arg0 )
		f1_arg0:updateElementState( AmmoWidgetMPUltimate, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f104_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_vehicle"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	DeathCamContainer = AmmoWidgetMPUltimate --[[ @ 0]]
	ObitInfoFeedContainer = AmmoWidgetMPUltimate.subscribeToModel --[[ @ 0]]
	ScrStkContainerWrapper = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	ObitInfoFeedContainer( DeathCamContainer, ScrStkContainerWrapper["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_flash_banged"]], function ( f105_arg0 )
		f1_arg0:updateElementState( AmmoWidgetMPUltimate, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f105_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_flash_banged"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	DeathCamContainer = AmmoWidgetMPUltimate --[[ @ 0]]
	ObitInfoFeedContainer = AmmoWidgetMPUltimate.subscribeToModel --[[ @ 0]]
	ScrStkContainerWrapper = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	ObitInfoFeedContainer( DeathCamContainer, ScrStkContainerWrapper["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_scoped"]], function ( f106_arg0 )
		f1_arg0:updateElementState( AmmoWidgetMPUltimate, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f106_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_scoped"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	DeathCamContainer = AmmoWidgetMPUltimate --[[ @ 0]]
	ObitInfoFeedContainer = AmmoWidgetMPUltimate.subscribeToModel --[[ @ 0]]
	ScrStkContainerWrapper = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	ObitInfoFeedContainer( DeathCamContainer, ScrStkContainerWrapper["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_play_of_the_match"]], function ( f107_arg0 )
		f1_arg0:updateElementState( AmmoWidgetMPUltimate, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f107_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_play_of_the_match"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	DeathCamContainer = AmmoWidgetMPUltimate --[[ @ 0]]
	ObitInfoFeedContainer = AmmoWidgetMPUltimate.subscribeToModel --[[ @ 0]]
	ScrStkContainerWrapper = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	ObitInfoFeedContainer( DeathCamContainer, ScrStkContainerWrapper["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_scoreboard_open"]], function ( f108_arg0 )
		f1_arg0:updateElementState( AmmoWidgetMPUltimate, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f108_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_scoreboard_open"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	DeathCamContainer = AmmoWidgetMPUltimate --[[ @ 0]]
	ObitInfoFeedContainer = AmmoWidgetMPUltimate.subscribeToModel --[[ @ 0]]
	ScrStkContainerWrapper = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	ObitInfoFeedContainer( DeathCamContainer, ScrStkContainerWrapper["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_ui_active"]], function ( f109_arg0 )
		f1_arg0:updateElementState( AmmoWidgetMPUltimate, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f109_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_ui_active"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	DeathCamContainer = AmmoWidgetMPUltimate --[[ @ 0]]
	ObitInfoFeedContainer = AmmoWidgetMPUltimate.subscribeToModel --[[ @ 0]]
	ScrStkContainerWrapper = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	ObitInfoFeedContainer( DeathCamContainer, ScrStkContainerWrapper["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_weapon_hud_visible"]], function ( f110_arg0 )
		f1_arg0:updateElementState( AmmoWidgetMPUltimate, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f110_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_weapon_hud_visible"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	DeathCamContainer = AmmoWidgetMPUltimate --[[ @ 0]]
	ObitInfoFeedContainer = AmmoWidgetMPUltimate.subscribeToModel --[[ @ 0]]
	ScrStkContainerWrapper = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	ObitInfoFeedContainer( DeathCamContainer, ScrStkContainerWrapper["factions.isCoDCaster"], function ( f111_arg0 )
		f1_arg0:updateElementState( AmmoWidgetMPUltimate, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f111_arg0:get(),
			modelName = "factions.isCoDCaster"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	DeathCamContainer = AmmoWidgetMPUltimate --[[ @ 0]]
	ObitInfoFeedContainer = AmmoWidgetMPUltimate.subscribeToModel --[[ @ 0]]
	ScrStkContainerWrapper = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	ObitInfoFeedContainer( DeathCamContainer, ScrStkContainerWrapper["hudItems.playerSpawned"], function ( f112_arg0 )
		f1_arg0:updateElementState( AmmoWidgetMPUltimate, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f112_arg0:get(),
			modelName = "hudItems.playerSpawned"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	DeathCamContainer = AmmoWidgetMPUltimate --[[ @ 0]]
	ObitInfoFeedContainer = AmmoWidgetMPUltimate.subscribeToModel --[[ @ 0]]
	ScrStkContainerWrapper = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	ObitInfoFeedContainer( DeathCamContainer, ScrStkContainerWrapper["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_emp_active"]], function ( f113_arg0 )
		f1_arg0:updateElementState( AmmoWidgetMPUltimate, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f113_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_emp_active"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	DeathCamContainer = AmmoWidgetMPUltimate --[[ @ 0]]
	ObitInfoFeedContainer = AmmoWidgetMPUltimate.subscribeToModel --[[ @ 0]]
	ScrStkContainerWrapper = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	ObitInfoFeedContainer( DeathCamContainer, ScrStkContainerWrapper["hudItems.showSpawnSelect"], function ( f114_arg0 )
		f1_arg0:updateElementState( AmmoWidgetMPUltimate, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f114_arg0:get(),
			modelName = "hudItems.showSpawnSelect"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	DeathCamContainer = AmmoWidgetMPUltimate --[[ @ 0]]
	ObitInfoFeedContainer = AmmoWidgetMPUltimate.subscribeToModel --[[ @ 0]]
	ScrStkContainerWrapper = DataSources.CodCaster.getModel( f1_arg1 ) --[[ @ 0]]
	ObitInfoFeedContainer( DeathCamContainer, ScrStkContainerWrapper.profileSettingsUpdated, function ( f115_arg0 )
		f1_arg0:updateElementState( AmmoWidgetMPUltimate, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f115_arg0:get(),
			modelName = "profileSettingsUpdated"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	DeathCamContainer = AmmoWidgetMPUltimate --[[ @ 0]]
	ObitInfoFeedContainer = AmmoWidgetMPUltimate.subscribeToModel --[[ @ 0]]
	ScrStkContainerWrapper = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	ObitInfoFeedContainer( DeathCamContainer, ScrStkContainerWrapper["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_game_ended"]], function ( f116_arg0 )
		f1_arg0:updateElementState( AmmoWidgetMPUltimate, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f116_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_game_ended"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	DeathCamContainer = AmmoWidgetMPUltimate --[[ @ 0]]
	ObitInfoFeedContainer = AmmoWidgetMPUltimate.subscribeToModel --[[ @ 0]]
	ScrStkContainerWrapper = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	ObitInfoFeedContainer( DeathCamContainer, ScrStkContainerWrapper["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"hash_57EAF988DDEB83EA"]], function ( f117_arg0 )
		f1_arg0:updateElementState( AmmoWidgetMPUltimate, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f117_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"hash_57EAF988DDEB83EA"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	DeathCamContainer = AmmoWidgetMPUltimate --[[ @ 0]]
	ObitInfoFeedContainer = AmmoWidgetMPUltimate.subscribeToModel --[[ @ 0]]
	ScrStkContainerWrapper = DataSources.HUDItems.getModel( f1_arg1 ) --[[ @ 0]]
	ObitInfoFeedContainer( DeathCamContainer, ScrStkContainerWrapper.hacked, function ( f118_arg0 )
		f1_arg0:updateElementState( AmmoWidgetMPUltimate, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f118_arg0:get(),
			modelName = "hacked"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoWidgetMPUltimate:setScale( 0.85, 0.85 ) --[[ @ 0]]
	AmmoWidgetMPUltimate:subscribeToGlobalModel( f1_arg1, "PlayerAbilities", "playerGadget2", function ( model )
		AmmoWidgetMPUltimate:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( AmmoWidgetMPUltimate ) --[[ @ 0]]
	self.AmmoWidgetMPUltimate = AmmoWidgetMPUltimate --[[ @ 0]]
	
	ObitInfoFeedContainer = CoD.ObitInfoFeedContainer.new( f1_arg0, f1_arg1, 0, 0, 4, 504, 1, 1, -485.5, -125.5 ) --[[ @ 0]]
	ObitInfoFeedContainer:mergeStateConditions( {
		{
			stateName = "Visible",
			condition = function ( menu, element, event )
				local f120_local0 --[[ @ 0]]
				if not IsCodCaster( f1_arg1 ) then
					f120_local0 = not IsGameTypeCombatTraining() --[[ @ 0]]
				else
					f120_local0 = false --[[ @ 0]]
				end
				return f120_local0
			end
		}
	} ) --[[ @ 0]]
	ScrStkContainerWrapper = ObitInfoFeedContainer --[[ @ 0]]
	DeathCamContainer = ObitInfoFeedContainer.subscribeToModel --[[ @ 0]]
	local CombatTrainingGameTimer = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	DeathCamContainer( ScrStkContainerWrapper, CombatTrainingGameTimer["factions.isCoDCaster"], function ( f121_arg0 )
		f1_arg0:updateElementState( ObitInfoFeedContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f121_arg0:get(),
			modelName = "factions.isCoDCaster"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ScrStkContainerWrapper = ObitInfoFeedContainer --[[ @ 0]]
	DeathCamContainer = ObitInfoFeedContainer.subscribeToModel --[[ @ 0]]
	CombatTrainingGameTimer = DataSources.CodCaster.getModel( f1_arg1 ) --[[ @ 0]]
	DeathCamContainer( ScrStkContainerWrapper, CombatTrainingGameTimer.profileSettingsUpdated, function ( f122_arg0 )
		f1_arg0:updateElementState( ObitInfoFeedContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f122_arg0:get(),
			modelName = "profileSettingsUpdated"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ScrStkContainerWrapper = ObitInfoFeedContainer --[[ @ 0]]
	DeathCamContainer = ObitInfoFeedContainer.subscribeToModel --[[ @ 0]]
	CombatTrainingGameTimer = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	DeathCamContainer( ScrStkContainerWrapper, CombatTrainingGameTimer["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_killcam"]], function ( f123_arg0 )
		f1_arg0:updateElementState( ObitInfoFeedContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f123_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_killcam"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:addElement( ObitInfoFeedContainer ) --[[ @ 0]]
	self.ObitInfoFeedContainer = ObitInfoFeedContainer --[[ @ 0]]
	
	DeathCamContainer = CoD.DeathCamContainer.new( f1_arg0, f1_arg1, 0.5, 0.5, -300, 300, 0.85, 0.85, -154.5, 145.5 ) --[[ @ 0]]
	DeathCamContainer:mergeStateConditions( {
		{
			stateName = "Visible",
			condition = function ( menu, element, event )
				local f124_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_player_dead"] ) --[[ @ 0]]
				if f124_local0 then
					if not CoD.ModelUtility.IsModelValueGreaterThan( f1_arg1, "hudItems.hacked", 0 ) then
						f124_local0 = not CoD.SpawnSelectionUtility.IsSpawnSelectActive( f1_arg1 ) --[[ @ 0]]
					else
						f124_local0 = false --[[ @ 0]]
					end
				end
				return f124_local0
			end
		}
	} ) --[[ @ 0]]
	CombatTrainingGameTimer = DeathCamContainer --[[ @ 0]]
	ScrStkContainerWrapper = DeathCamContainer.subscribeToModel --[[ @ 0]]
	local FastLoadoutContainer = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	ScrStkContainerWrapper( CombatTrainingGameTimer, FastLoadoutContainer["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_player_dead"]], function ( f125_arg0 )
		f1_arg0:updateElementState( DeathCamContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f125_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_player_dead"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	CombatTrainingGameTimer = DeathCamContainer --[[ @ 0]]
	ScrStkContainerWrapper = DeathCamContainer.subscribeToModel --[[ @ 0]]
	FastLoadoutContainer = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	ScrStkContainerWrapper( CombatTrainingGameTimer, FastLoadoutContainer["hudItems.hacked"], function ( f126_arg0 )
		f1_arg0:updateElementState( DeathCamContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f126_arg0:get(),
			modelName = "hudItems.hacked"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	CombatTrainingGameTimer = DeathCamContainer --[[ @ 0]]
	ScrStkContainerWrapper = DeathCamContainer.subscribeToModel --[[ @ 0]]
	FastLoadoutContainer = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	ScrStkContainerWrapper( CombatTrainingGameTimer, FastLoadoutContainer["hudItems.showSpawnSelect"], function ( f127_arg0 )
		f1_arg0:updateElementState( DeathCamContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f127_arg0:get(),
			modelName = "hudItems.showSpawnSelect"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	DeathCamContainer:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( DeathCamContainer ) --[[ @ 0]]
	self.DeathCamContainer = DeathCamContainer --[[ @ 0]]
	
	ScrStkContainerWrapper = CoD.ScrStk_ContainerWrapper.new( f1_arg0, f1_arg1, 1, 1, -156, 7, 1, 1, -393, -131 ) --[[ @ 0]]
	self:addElement( ScrStkContainerWrapper ) --[[ @ 0]]
	self.ScrStkContainerWrapper = ScrStkContainerWrapper --[[ @ 0]]
	
	CombatTrainingGameTimer = CoD.CombatTrainingGameTimer.new( f1_arg0, f1_arg1, 0.5, 0.5, -100, 100, 0.5, 0.5, -495.5, -430.5 ) --[[ @ 0]]
	self:addElement( CombatTrainingGameTimer ) --[[ @ 0]]
	self.CombatTrainingGameTimer = CombatTrainingGameTimer --[[ @ 0]]
	
	FastLoadoutContainer = CoD.FastLoadoutContainer.new( f1_arg0, f1_arg1, 1, 1, -380, 0, 1, 1, -181, -81 ) --[[ @ 0]]
	self:addElement( FastLoadoutContainer ) --[[ @ 0]]
	self.FastLoadoutContainer = FastLoadoutContainer --[[ @ 0]]
	
	local CompassGroupContainer = CoD.CompassGroupMPContainerTransition.new( f1_arg0, f1_arg1, 0, 0, -31, 319, 0, 0, 1, 351 ) --[[ @ 0]]
	CompassGroupContainer:mergeStateConditions( {
		{
			stateName = "Visible",
			condition = function ( menu, element, event )
				local f128_local0 --[[ @ 0]]
				if Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_compass_visible"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_demo_all_game_hud_hidden"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_demo_camera_mode_moviecam"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_game_ended"] ) and Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_hud_visible"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_guided_missile"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_killcam"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_remote_killstreak_static"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_is_flash_banged"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_is_scoped"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_play_of_the_match"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_scoreboard_open"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_selecting_locational_killstreak"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_ui_active"] ) then
					f128_local0 = not CoD.ModelUtility.IsModelValueEqualTo( f1_arg1, "hudItems.showSpawnSelect", 1 ) --[[ @ 0]]
				else
					f128_local0 = false --[[ @ 0]]
				end
				return f128_local0
			end
		}
	} ) --[[ @ 0]]
	local IcePickHacked = CompassGroupContainer --[[ @ 0]]
	local VoipContainerNoCompass = CompassGroupContainer.subscribeToModel --[[ @ 0]]
	local SpawnBeaconDeathCam = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	VoipContainerNoCompass( IcePickHacked, SpawnBeaconDeathCam["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_demo_all_game_hud_hidden"]], function ( f129_arg0 )
		f1_arg0:updateElementState( CompassGroupContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f129_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_demo_all_game_hud_hidden"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	IcePickHacked = CompassGroupContainer --[[ @ 0]]
	VoipContainerNoCompass = CompassGroupContainer.subscribeToModel --[[ @ 0]]
	SpawnBeaconDeathCam = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	VoipContainerNoCompass( IcePickHacked, SpawnBeaconDeathCam["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_demo_camera_mode_moviecam"]], function ( f130_arg0 )
		f1_arg0:updateElementState( CompassGroupContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f130_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_demo_camera_mode_moviecam"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	IcePickHacked = CompassGroupContainer --[[ @ 0]]
	VoipContainerNoCompass = CompassGroupContainer.subscribeToModel --[[ @ 0]]
	SpawnBeaconDeathCam = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	VoipContainerNoCompass( IcePickHacked, SpawnBeaconDeathCam["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_emp_active"]], function ( f131_arg0 )
		f1_arg0:updateElementState( CompassGroupContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f131_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_emp_active"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	IcePickHacked = CompassGroupContainer --[[ @ 0]]
	VoipContainerNoCompass = CompassGroupContainer.subscribeToModel --[[ @ 0]]
	SpawnBeaconDeathCam = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	VoipContainerNoCompass( IcePickHacked, SpawnBeaconDeathCam["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_hud_hardcore"]], function ( f132_arg0 )
		f1_arg0:updateElementState( CompassGroupContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f132_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_hud_hardcore"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	IcePickHacked = CompassGroupContainer --[[ @ 0]]
	VoipContainerNoCompass = CompassGroupContainer.subscribeToModel --[[ @ 0]]
	SpawnBeaconDeathCam = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	VoipContainerNoCompass( IcePickHacked, SpawnBeaconDeathCam["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_hud_visible"]], function ( f133_arg0 )
		f1_arg0:updateElementState( CompassGroupContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f133_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_hud_visible"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	IcePickHacked = CompassGroupContainer --[[ @ 0]]
	VoipContainerNoCompass = CompassGroupContainer.subscribeToModel --[[ @ 0]]
	SpawnBeaconDeathCam = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	VoipContainerNoCompass( IcePickHacked, SpawnBeaconDeathCam["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_guided_missile"]], function ( f134_arg0 )
		f1_arg0:updateElementState( CompassGroupContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f134_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_guided_missile"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	IcePickHacked = CompassGroupContainer --[[ @ 0]]
	VoipContainerNoCompass = CompassGroupContainer.subscribeToModel --[[ @ 0]]
	SpawnBeaconDeathCam = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	VoipContainerNoCompass( IcePickHacked, SpawnBeaconDeathCam["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_killcam"]], function ( f135_arg0 )
		f1_arg0:updateElementState( CompassGroupContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f135_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_killcam"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	IcePickHacked = CompassGroupContainer --[[ @ 0]]
	VoipContainerNoCompass = CompassGroupContainer.subscribeToModel --[[ @ 0]]
	SpawnBeaconDeathCam = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	VoipContainerNoCompass( IcePickHacked, SpawnBeaconDeathCam["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_remote_killstreak_static"]], function ( f136_arg0 )
		f1_arg0:updateElementState( CompassGroupContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f136_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_remote_killstreak_static"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	IcePickHacked = CompassGroupContainer --[[ @ 0]]
	VoipContainerNoCompass = CompassGroupContainer.subscribeToModel --[[ @ 0]]
	SpawnBeaconDeathCam = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	VoipContainerNoCompass( IcePickHacked, SpawnBeaconDeathCam["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"hash_29BF57CE75A8755E"]], function ( f137_arg0 )
		f1_arg0:updateElementState( CompassGroupContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f137_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"hash_29BF57CE75A8755E"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	IcePickHacked = CompassGroupContainer --[[ @ 0]]
	VoipContainerNoCompass = CompassGroupContainer.subscribeToModel --[[ @ 0]]
	SpawnBeaconDeathCam = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	VoipContainerNoCompass( IcePickHacked, SpawnBeaconDeathCam["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_vehicle"]], function ( f138_arg0 )
		f1_arg0:updateElementState( CompassGroupContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f138_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_vehicle"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	IcePickHacked = CompassGroupContainer --[[ @ 0]]
	VoipContainerNoCompass = CompassGroupContainer.subscribeToModel --[[ @ 0]]
	SpawnBeaconDeathCam = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	VoipContainerNoCompass( IcePickHacked, SpawnBeaconDeathCam["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_flash_banged"]], function ( f139_arg0 )
		f1_arg0:updateElementState( CompassGroupContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f139_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_flash_banged"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	IcePickHacked = CompassGroupContainer --[[ @ 0]]
	VoipContainerNoCompass = CompassGroupContainer.subscribeToModel --[[ @ 0]]
	SpawnBeaconDeathCam = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	VoipContainerNoCompass( IcePickHacked, SpawnBeaconDeathCam["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_scoped"]], function ( f140_arg0 )
		f1_arg0:updateElementState( CompassGroupContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f140_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_scoped"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	IcePickHacked = CompassGroupContainer --[[ @ 0]]
	VoipContainerNoCompass = CompassGroupContainer.subscribeToModel --[[ @ 0]]
	SpawnBeaconDeathCam = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	VoipContainerNoCompass( IcePickHacked, SpawnBeaconDeathCam["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_play_of_the_match"]], function ( f141_arg0 )
		f1_arg0:updateElementState( CompassGroupContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f141_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_play_of_the_match"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	IcePickHacked = CompassGroupContainer --[[ @ 0]]
	VoipContainerNoCompass = CompassGroupContainer.subscribeToModel --[[ @ 0]]
	SpawnBeaconDeathCam = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	VoipContainerNoCompass( IcePickHacked, SpawnBeaconDeathCam["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_scoreboard_open"]], function ( f142_arg0 )
		f1_arg0:updateElementState( CompassGroupContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f142_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_scoreboard_open"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	IcePickHacked = CompassGroupContainer --[[ @ 0]]
	VoipContainerNoCompass = CompassGroupContainer.subscribeToModel --[[ @ 0]]
	SpawnBeaconDeathCam = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	VoipContainerNoCompass( IcePickHacked, SpawnBeaconDeathCam["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_ui_active"]], function ( f143_arg0 )
		f1_arg0:updateElementState( CompassGroupContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f143_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_ui_active"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	IcePickHacked = CompassGroupContainer --[[ @ 0]]
	VoipContainerNoCompass = CompassGroupContainer.subscribeToModel --[[ @ 0]]
	SpawnBeaconDeathCam = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	VoipContainerNoCompass( IcePickHacked, SpawnBeaconDeathCam["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_weapon_hud_visible"]], function ( f144_arg0 )
		f1_arg0:updateElementState( CompassGroupContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f144_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_weapon_hud_visible"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	IcePickHacked = CompassGroupContainer --[[ @ 0]]
	VoipContainerNoCompass = CompassGroupContainer.subscribeToModel --[[ @ 0]]
	SpawnBeaconDeathCam = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	VoipContainerNoCompass( IcePickHacked, SpawnBeaconDeathCam["factions.isCoDCaster"], function ( f145_arg0 )
		f1_arg0:updateElementState( CompassGroupContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f145_arg0:get(),
			modelName = "factions.isCoDCaster"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	IcePickHacked = CompassGroupContainer --[[ @ 0]]
	VoipContainerNoCompass = CompassGroupContainer.subscribeToModel --[[ @ 0]]
	SpawnBeaconDeathCam = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	VoipContainerNoCompass( IcePickHacked, SpawnBeaconDeathCam["hudItems.playerSpawned"], function ( f146_arg0 )
		f1_arg0:updateElementState( CompassGroupContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f146_arg0:get(),
			modelName = "hudItems.playerSpawned"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	IcePickHacked = CompassGroupContainer --[[ @ 0]]
	VoipContainerNoCompass = CompassGroupContainer.subscribeToModel --[[ @ 0]]
	SpawnBeaconDeathCam = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	VoipContainerNoCompass( IcePickHacked, SpawnBeaconDeathCam["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_compass_visible"]], function ( f147_arg0 )
		f1_arg0:updateElementState( CompassGroupContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f147_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_compass_visible"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	IcePickHacked = CompassGroupContainer --[[ @ 0]]
	VoipContainerNoCompass = CompassGroupContainer.subscribeToModel --[[ @ 0]]
	SpawnBeaconDeathCam = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	VoipContainerNoCompass( IcePickHacked, SpawnBeaconDeathCam["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_game_ended"]], function ( f148_arg0 )
		f1_arg0:updateElementState( CompassGroupContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f148_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_game_ended"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	IcePickHacked = CompassGroupContainer --[[ @ 0]]
	VoipContainerNoCompass = CompassGroupContainer.subscribeToModel --[[ @ 0]]
	SpawnBeaconDeathCam = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	VoipContainerNoCompass( IcePickHacked, SpawnBeaconDeathCam["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_selecting_locational_killstreak"]], function ( f149_arg0 )
		f1_arg0:updateElementState( CompassGroupContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f149_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_selecting_locational_killstreak"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	IcePickHacked = CompassGroupContainer --[[ @ 0]]
	VoipContainerNoCompass = CompassGroupContainer.subscribeToModel --[[ @ 0]]
	SpawnBeaconDeathCam = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	VoipContainerNoCompass( IcePickHacked, SpawnBeaconDeathCam["hudItems.showSpawnSelect"], function ( f150_arg0 )
		f1_arg0:updateElementState( CompassGroupContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f150_arg0:get(),
			modelName = "hudItems.showSpawnSelect"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:addElement( CompassGroupContainer ) --[[ @ 0]]
	self.CompassGroupContainer = CompassGroupContainer --[[ @ 0]]
	
	VoipContainerNoCompass = CoD.Voip_Container.new( f1_arg0, f1_arg1, 0, 0, 0, 410, 0, 0, 22, 130 ) --[[ @ 0]]
	VoipContainerNoCompass:mergeStateConditions( {
		{
			stateName = "HudStart",
			condition = function ( menu, element, event )
				local f151_local0 = CoD.ModelUtility.IsModelValueTrue( f1_arg1, "hudItems.playerSpawned" ) --[[ @ 0]]
				if f151_local0 then
					if Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_compass_visible"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_demo_all_game_hud_hidden"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_demo_camera_mode_moviecam"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_game_ended"] ) and Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_hud_visible"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_guided_missile"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_killcam"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_remote_killstreak_static"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_is_flash_banged"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_is_scoped"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_play_of_the_match"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_scoreboard_open"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_selecting_locational_killstreak"] ) then
						f151_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_ui_active"] ) --[[ @ 0]]
						if f151_local0 then
						
						else
							return f151_local0
						end
					end
					f151_local0 = not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_scoreboard_open"] ) --[[ @ 0]]
				end
				return f151_local0
			end
		},
		{
			stateName = "ShowForCodCaster",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		}
	} ) --[[ @ 0]]
	SpawnBeaconDeathCam = VoipContainerNoCompass --[[ @ 0]]
	IcePickHacked = VoipContainerNoCompass.subscribeToModel --[[ @ 0]]
	local f1_local25 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	IcePickHacked( SpawnBeaconDeathCam, f1_local25["hudItems.playerSpawned"], function ( f153_arg0 )
		f1_arg0:updateElementState( VoipContainerNoCompass, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f153_arg0:get(),
			modelName = "hudItems.playerSpawned"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	SpawnBeaconDeathCam = VoipContainerNoCompass --[[ @ 0]]
	IcePickHacked = VoipContainerNoCompass.subscribeToModel --[[ @ 0]]
	f1_local25 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	IcePickHacked( SpawnBeaconDeathCam, f1_local25["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_compass_visible"]], function ( f154_arg0 )
		f1_arg0:updateElementState( VoipContainerNoCompass, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f154_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_compass_visible"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	SpawnBeaconDeathCam = VoipContainerNoCompass --[[ @ 0]]
	IcePickHacked = VoipContainerNoCompass.subscribeToModel --[[ @ 0]]
	f1_local25 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	IcePickHacked( SpawnBeaconDeathCam, f1_local25["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_demo_all_game_hud_hidden"]], function ( f155_arg0 )
		f1_arg0:updateElementState( VoipContainerNoCompass, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f155_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_demo_all_game_hud_hidden"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	SpawnBeaconDeathCam = VoipContainerNoCompass --[[ @ 0]]
	IcePickHacked = VoipContainerNoCompass.subscribeToModel --[[ @ 0]]
	f1_local25 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	IcePickHacked( SpawnBeaconDeathCam, f1_local25["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_demo_camera_mode_moviecam"]], function ( f156_arg0 )
		f1_arg0:updateElementState( VoipContainerNoCompass, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f156_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_demo_camera_mode_moviecam"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	SpawnBeaconDeathCam = VoipContainerNoCompass --[[ @ 0]]
	IcePickHacked = VoipContainerNoCompass.subscribeToModel --[[ @ 0]]
	f1_local25 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	IcePickHacked( SpawnBeaconDeathCam, f1_local25["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_game_ended"]], function ( f157_arg0 )
		f1_arg0:updateElementState( VoipContainerNoCompass, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f157_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_game_ended"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	SpawnBeaconDeathCam = VoipContainerNoCompass --[[ @ 0]]
	IcePickHacked = VoipContainerNoCompass.subscribeToModel --[[ @ 0]]
	f1_local25 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	IcePickHacked( SpawnBeaconDeathCam, f1_local25["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_hud_visible"]], function ( f158_arg0 )
		f1_arg0:updateElementState( VoipContainerNoCompass, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f158_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_hud_visible"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	SpawnBeaconDeathCam = VoipContainerNoCompass --[[ @ 0]]
	IcePickHacked = VoipContainerNoCompass.subscribeToModel --[[ @ 0]]
	f1_local25 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	IcePickHacked( SpawnBeaconDeathCam, f1_local25["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_guided_missile"]], function ( f159_arg0 )
		f1_arg0:updateElementState( VoipContainerNoCompass, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f159_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_guided_missile"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	SpawnBeaconDeathCam = VoipContainerNoCompass --[[ @ 0]]
	IcePickHacked = VoipContainerNoCompass.subscribeToModel --[[ @ 0]]
	f1_local25 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	IcePickHacked( SpawnBeaconDeathCam, f1_local25["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_killcam"]], function ( f160_arg0 )
		f1_arg0:updateElementState( VoipContainerNoCompass, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f160_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_killcam"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	SpawnBeaconDeathCam = VoipContainerNoCompass --[[ @ 0]]
	IcePickHacked = VoipContainerNoCompass.subscribeToModel --[[ @ 0]]
	f1_local25 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	IcePickHacked( SpawnBeaconDeathCam, f1_local25["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_remote_killstreak_static"]], function ( f161_arg0 )
		f1_arg0:updateElementState( VoipContainerNoCompass, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f161_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_remote_killstreak_static"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	SpawnBeaconDeathCam = VoipContainerNoCompass --[[ @ 0]]
	IcePickHacked = VoipContainerNoCompass.subscribeToModel --[[ @ 0]]
	f1_local25 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	IcePickHacked( SpawnBeaconDeathCam, f1_local25["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_flash_banged"]], function ( f162_arg0 )
		f1_arg0:updateElementState( VoipContainerNoCompass, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f162_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_flash_banged"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	SpawnBeaconDeathCam = VoipContainerNoCompass --[[ @ 0]]
	IcePickHacked = VoipContainerNoCompass.subscribeToModel --[[ @ 0]]
	f1_local25 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	IcePickHacked( SpawnBeaconDeathCam, f1_local25["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_scoped"]], function ( f163_arg0 )
		f1_arg0:updateElementState( VoipContainerNoCompass, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f163_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_scoped"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	SpawnBeaconDeathCam = VoipContainerNoCompass --[[ @ 0]]
	IcePickHacked = VoipContainerNoCompass.subscribeToModel --[[ @ 0]]
	f1_local25 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	IcePickHacked( SpawnBeaconDeathCam, f1_local25["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_play_of_the_match"]], function ( f164_arg0 )
		f1_arg0:updateElementState( VoipContainerNoCompass, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f164_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_play_of_the_match"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	SpawnBeaconDeathCam = VoipContainerNoCompass --[[ @ 0]]
	IcePickHacked = VoipContainerNoCompass.subscribeToModel --[[ @ 0]]
	f1_local25 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	IcePickHacked( SpawnBeaconDeathCam, f1_local25["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_scoreboard_open"]], function ( f165_arg0 )
		f1_arg0:updateElementState( VoipContainerNoCompass, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f165_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_scoreboard_open"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	SpawnBeaconDeathCam = VoipContainerNoCompass --[[ @ 0]]
	IcePickHacked = VoipContainerNoCompass.subscribeToModel --[[ @ 0]]
	f1_local25 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	IcePickHacked( SpawnBeaconDeathCam, f1_local25["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_selecting_locational_killstreak"]], function ( f166_arg0 )
		f1_arg0:updateElementState( VoipContainerNoCompass, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f166_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_selecting_locational_killstreak"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	SpawnBeaconDeathCam = VoipContainerNoCompass --[[ @ 0]]
	IcePickHacked = VoipContainerNoCompass.subscribeToModel --[[ @ 0]]
	f1_local25 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	IcePickHacked( SpawnBeaconDeathCam, f1_local25["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_ui_active"]], function ( f167_arg0 )
		f1_arg0:updateElementState( VoipContainerNoCompass, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f167_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_ui_active"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:addElement( VoipContainerNoCompass ) --[[ @ 0]]
	self.VoipContainerNoCompass = VoipContainerNoCompass --[[ @ 0]]
	
	IcePickHacked = CoD.IcePickHacked.new( f1_arg0, f1_arg1, 0.5, 0.5, -160, 160, 0, 0, 737, 837 ) --[[ @ 0]]
	self:addElement( IcePickHacked ) --[[ @ 0]]
	self.IcePickHacked = IcePickHacked --[[ @ 0]]
	
	SpawnBeaconDeathCam = CoD.SpawnBeaconDeathCam.new( f1_arg0, f1_arg1, 0.5, 0.5, -90, 90, 1, 1, -262, -227 ) --[[ @ 0]]
	self:addElement( SpawnBeaconDeathCam ) --[[ @ 0]]
	self.SpawnBeaconDeathCam = SpawnBeaconDeathCam --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "HideForCodCaster",
			condition = function ( menu, element, event )
				return IsCodCaster( f1_arg1 ) and not IsCodCasterProfileValueEqualTo( f1_arg1, "shoutcaster_qs_playerhud", 1 )
			end
		},
		{
			stateName = "HideForSpawnSelect",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsModelValueEqualTo( f1_arg1, "hudItems.showSpawnSelect", 1 )
			end
		}
	} ) --[[ @ 0]]
	local f1_local26 = self --[[ @ 0]]
	f1_local25 = self.subscribeToModel --[[ @ 0]]
	local f1_local27 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local25( f1_local26, f1_local27["factions.isCoDCaster"], function ( f170_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f170_arg0:get(),
			modelName = "factions.isCoDCaster"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local26 = self --[[ @ 0]]
	f1_local25 = self.subscribeToModel --[[ @ 0]]
	f1_local27 = DataSources.CodCaster.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local25( f1_local26, f1_local27.profileSettingsUpdated, function ( f171_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f171_arg0:get(),
			modelName = "profileSettingsUpdated"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local26 = self --[[ @ 0]]
	f1_local25 = self.subscribeToModel --[[ @ 0]]
	f1_local27 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local25( f1_local26, f1_local27["hudItems.showSpawnSelect"], function ( f172_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f172_arg0:get(),
			modelName = "hudItems.showSpawnSelect"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ScoreInfo.id = "ScoreInfo" --[[ @ 0]]
	AmmoWidgetContainer.id = "AmmoWidgetContainer" --[[ @ 0]]
	ObituaryCallout.id = "ObituaryCallout" --[[ @ 0]]
	ScrStkContainerWrapper.id = "ScrStkContainerWrapper" --[[ @ 0]]
	if CoD.isPC then
		FastLoadoutContainer.id = "FastLoadoutContainer" --[[ @ 0]]
	end
	self.__defaultFocus = ScrStkContainerWrapper --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	f1_local25 = self --[[ @ 0]]
	if not IsPC() then
		CoD.HUDUtility.AddCustomGainFocusWidget( self, self.ScrStkContainerWrapper ) --[[ @ 0]]
	end
	return self
end
 --[[ @ 0]]
CoD.Hud_MP_SafeAreaContainer.__resetProperties = function ( f173_arg0 )
	f173_arg0.VoipContainer0:completeAnimation() --[[ @ 0]]
	f173_arg0.AmmoWidgetContainer:completeAnimation() --[[ @ 0]]
	f173_arg0.ScoreInfo:completeAnimation() --[[ @ 0]]
	f173_arg0.PlayerWidgetContainer:completeAnimation() --[[ @ 0]]
	f173_arg0.DeathCamContainer:completeAnimation() --[[ @ 0]]
	f173_arg0.AmmoWidgetMPUltimate:completeAnimation() --[[ @ 0]]
	f173_arg0.CompassGroupContainer:completeAnimation() --[[ @ 0]]
	f173_arg0.ObitInfoFeedContainer:completeAnimation() --[[ @ 0]]
	f173_arg0.ScrStkContainerWrapper:completeAnimation() --[[ @ 0]]
	f173_arg0.VoipContainer0:setAlpha( 1 ) --[[ @ 0]]
	f173_arg0.AmmoWidgetContainer:setAlpha( 1 ) --[[ @ 0]]
	f173_arg0.ScoreInfo:setAlpha( 1 ) --[[ @ 0]]
	f173_arg0.PlayerWidgetContainer:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	f173_arg0.PlayerWidgetContainer:setTopBottom( 1, 1, -143, 43 ) --[[ @ 0]]
	f173_arg0.PlayerWidgetContainer:setAlpha( 1 ) --[[ @ 0]]
	f173_arg0.DeathCamContainer:setLeftRight( 0.5, 0.5, -300, 300 ) --[[ @ 0]]
	f173_arg0.DeathCamContainer:setTopBottom( 0.85, 0.85, -154.5, 145.5 ) --[[ @ 0]]
	f173_arg0.AmmoWidgetMPUltimate:setAlpha( 1 ) --[[ @ 0]]
	f173_arg0.CompassGroupContainer:setAlpha( 1 ) --[[ @ 0]]
	f173_arg0.ObitInfoFeedContainer:setLeftRight( 0, 0, 4, 504 ) --[[ @ 0]]
	f173_arg0.ObitInfoFeedContainer:setTopBottom( 1, 1, -485.5, -125.5 ) --[[ @ 0]]
	f173_arg0.ScrStkContainerWrapper:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.Hud_MP_SafeAreaContainer.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f174_arg0, f174_arg1 )
			f174_arg0:__resetProperties() --[[ @ 0]]
			f174_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	HideForCodCaster = {
		DefaultClip = function ( f175_arg0, f175_arg1 )
			f175_arg0:__resetProperties() --[[ @ 0]]
			f175_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f175_arg0.ScoreInfo:completeAnimation() --[[ @ 0]]
			f175_arg0.ScoreInfo:setAlpha( 0 ) --[[ @ 0]]
			f175_arg0.clipFinished( f175_arg0.ScoreInfo ) --[[ @ 0]]
			f175_arg0.AmmoWidgetContainer:completeAnimation() --[[ @ 0]]
			f175_arg0.AmmoWidgetContainer:setAlpha( 0 ) --[[ @ 0]]
			f175_arg0.clipFinished( f175_arg0.AmmoWidgetContainer ) --[[ @ 0]]
			f175_arg0.VoipContainer0:completeAnimation() --[[ @ 0]]
			f175_arg0.VoipContainer0:setAlpha( 0 ) --[[ @ 0]]
			f175_arg0.clipFinished( f175_arg0.VoipContainer0 ) --[[ @ 0]]
		end
	},
	HideForSpawnSelect = {
		DefaultClip = function ( f176_arg0, f176_arg1 )
			f176_arg0:__resetProperties() --[[ @ 0]]
			f176_arg0:setupElementClipCounter( 9 ) --[[ @ 0]]
			f176_arg0.ScoreInfo:completeAnimation() --[[ @ 0]]
			f176_arg0.ScoreInfo:setAlpha( 0 ) --[[ @ 0]]
			f176_arg0.clipFinished( f176_arg0.ScoreInfo ) --[[ @ 0]]
			f176_arg0.AmmoWidgetContainer:completeAnimation() --[[ @ 0]]
			f176_arg0.AmmoWidgetContainer:setAlpha( 0 ) --[[ @ 0]]
			f176_arg0.clipFinished( f176_arg0.AmmoWidgetContainer ) --[[ @ 0]]
			f176_arg0.PlayerWidgetContainer:completeAnimation() --[[ @ 0]]
			f176_arg0.PlayerWidgetContainer:setLeftRight( 0, 0, 0, 597 ) --[[ @ 0]]
			f176_arg0.PlayerWidgetContainer:setTopBottom( 1, 1, -170, 16 ) --[[ @ 0]]
			f176_arg0.PlayerWidgetContainer:setAlpha( 0 ) --[[ @ 0]]
			f176_arg0.clipFinished( f176_arg0.PlayerWidgetContainer ) --[[ @ 0]]
			f176_arg0.VoipContainer0:completeAnimation() --[[ @ 0]]
			f176_arg0.VoipContainer0:setAlpha( 0 ) --[[ @ 0]]
			f176_arg0.clipFinished( f176_arg0.VoipContainer0 ) --[[ @ 0]]
			f176_arg0.AmmoWidgetMPUltimate:completeAnimation() --[[ @ 0]]
			f176_arg0.AmmoWidgetMPUltimate:setAlpha( 0 ) --[[ @ 0]]
			f176_arg0.clipFinished( f176_arg0.AmmoWidgetMPUltimate ) --[[ @ 0]]
			f176_arg0.ObitInfoFeedContainer:completeAnimation() --[[ @ 0]]
			f176_arg0.ObitInfoFeedContainer:setLeftRight( 0, 0, 76, 576 ) --[[ @ 0]]
			f176_arg0.ObitInfoFeedContainer:setTopBottom( 1, 1, -468, -218 ) --[[ @ 0]]
			f176_arg0.clipFinished( f176_arg0.ObitInfoFeedContainer ) --[[ @ 0]]
			f176_arg0.DeathCamContainer:completeAnimation() --[[ @ 0]]
			f176_arg0.DeathCamContainer:setLeftRight( 0.5, 0.5, -300, 300 ) --[[ @ 0]]
			f176_arg0.DeathCamContainer:setTopBottom( 0.85, 0.85, -153.5, 146.5 ) --[[ @ 0]]
			f176_arg0.clipFinished( f176_arg0.DeathCamContainer ) --[[ @ 0]]
			f176_arg0.ScrStkContainerWrapper:completeAnimation() --[[ @ 0]]
			f176_arg0.ScrStkContainerWrapper:setAlpha( 0 ) --[[ @ 0]]
			f176_arg0.clipFinished( f176_arg0.ScrStkContainerWrapper ) --[[ @ 0]]
			f176_arg0.CompassGroupContainer:completeAnimation() --[[ @ 0]]
			f176_arg0.CompassGroupContainer:setAlpha( 0 ) --[[ @ 0]]
			f176_arg0.clipFinished( f176_arg0.CompassGroupContainer ) --[[ @ 0]]
		end,
		DefaultState = function ( f177_arg0, f177_arg1 )
			f177_arg0:__resetProperties() --[[ @ 0]]
			f177_arg0:setupElementClipCounter( 9 ) --[[ @ 0]]
			local f177_local0 = function ( f178_arg0 )
				f177_arg0.ScoreInfo:beginAnimation( 400 ) --[[ @ 0]]
				f177_arg0.ScoreInfo:registerEventHandler( "interrupted_keyframe", f177_arg0.clipInterrupted ) --[[ @ 0]]
				f177_arg0.ScoreInfo:registerEventHandler( "transition_complete_keyframe", f177_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f177_arg0.ScoreInfo:completeAnimation() --[[ @ 0]]
			f177_arg0.ScoreInfo:setAlpha( 0 ) --[[ @ 0]]
			f177_local0( f177_arg0.ScoreInfo ) --[[ @ 0]]
			local f177_local1 = function ( f179_arg0 )
				f177_arg0.AmmoWidgetContainer:beginAnimation( 400 ) --[[ @ 0]]
				f177_arg0.AmmoWidgetContainer:registerEventHandler( "interrupted_keyframe", f177_arg0.clipInterrupted ) --[[ @ 0]]
				f177_arg0.AmmoWidgetContainer:registerEventHandler( "transition_complete_keyframe", f177_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f177_arg0.AmmoWidgetContainer:completeAnimation() --[[ @ 0]]
			f177_arg0.AmmoWidgetContainer:setAlpha( 0 ) --[[ @ 0]]
			f177_local1( f177_arg0.AmmoWidgetContainer ) --[[ @ 0]]
			local f177_local2 = function ( f180_arg0 )
				f177_arg0.PlayerWidgetContainer:beginAnimation( 400 ) --[[ @ 0]]
				f177_arg0.PlayerWidgetContainer:registerEventHandler( "interrupted_keyframe", f177_arg0.clipInterrupted ) --[[ @ 0]]
				f177_arg0.PlayerWidgetContainer:registerEventHandler( "transition_complete_keyframe", f177_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f177_arg0.PlayerWidgetContainer:completeAnimation() --[[ @ 0]]
			f177_arg0.PlayerWidgetContainer:setLeftRight( 0, 0, 0, 597 ) --[[ @ 0]]
			f177_arg0.PlayerWidgetContainer:setTopBottom( 1, 1, -170, 16 ) --[[ @ 0]]
			f177_arg0.PlayerWidgetContainer:setAlpha( 0 ) --[[ @ 0]]
			f177_local2( f177_arg0.PlayerWidgetContainer ) --[[ @ 0]]
			local f177_local3 = function ( f181_arg0 )
				f177_arg0.VoipContainer0:beginAnimation( 400 ) --[[ @ 0]]
				f177_arg0.VoipContainer0:registerEventHandler( "interrupted_keyframe", f177_arg0.clipInterrupted ) --[[ @ 0]]
				f177_arg0.VoipContainer0:registerEventHandler( "transition_complete_keyframe", f177_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f177_arg0.VoipContainer0:completeAnimation() --[[ @ 0]]
			f177_arg0.VoipContainer0:setAlpha( 0 ) --[[ @ 0]]
			f177_local3( f177_arg0.VoipContainer0 ) --[[ @ 0]]
			local f177_local4 = function ( f182_arg0 )
				f177_arg0.AmmoWidgetMPUltimate:beginAnimation( 400 ) --[[ @ 0]]
				f177_arg0.AmmoWidgetMPUltimate:registerEventHandler( "interrupted_keyframe", f177_arg0.clipInterrupted ) --[[ @ 0]]
				f177_arg0.AmmoWidgetMPUltimate:registerEventHandler( "transition_complete_keyframe", f177_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f177_arg0.AmmoWidgetMPUltimate:completeAnimation() --[[ @ 0]]
			f177_arg0.AmmoWidgetMPUltimate:setAlpha( 0 ) --[[ @ 0]]
			f177_local4( f177_arg0.AmmoWidgetMPUltimate ) --[[ @ 0]]
			local f177_local5 = function ( f183_arg0 )
				f177_arg0.ObitInfoFeedContainer:beginAnimation( 400 ) --[[ @ 0]]
				f177_arg0.ObitInfoFeedContainer:registerEventHandler( "interrupted_keyframe", f177_arg0.clipInterrupted ) --[[ @ 0]]
				f177_arg0.ObitInfoFeedContainer:registerEventHandler( "transition_complete_keyframe", f177_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f177_arg0.ObitInfoFeedContainer:completeAnimation() --[[ @ 0]]
			f177_arg0.ObitInfoFeedContainer:setLeftRight( 0, 0, 76, 576 ) --[[ @ 0]]
			f177_arg0.ObitInfoFeedContainer:setTopBottom( 1, 1, -468, -218 ) --[[ @ 0]]
			f177_local5( f177_arg0.ObitInfoFeedContainer ) --[[ @ 0]]
			local f177_local6 = function ( f184_arg0 )
				f177_arg0.DeathCamContainer:beginAnimation( 400 ) --[[ @ 0]]
				f177_arg0.DeathCamContainer:registerEventHandler( "interrupted_keyframe", f177_arg0.clipInterrupted ) --[[ @ 0]]
				f177_arg0.DeathCamContainer:registerEventHandler( "transition_complete_keyframe", f177_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f177_arg0.DeathCamContainer:completeAnimation() --[[ @ 0]]
			f177_arg0.DeathCamContainer:setLeftRight( 0.5, 0.5, -300, 300 ) --[[ @ 0]]
			f177_arg0.DeathCamContainer:setTopBottom( 0.85, 0.85, -153.5, 146.5 ) --[[ @ 0]]
			f177_local6( f177_arg0.DeathCamContainer ) --[[ @ 0]]
			local f177_local7 = function ( f185_arg0 )
				f177_arg0.ScrStkContainerWrapper:beginAnimation( 400 ) --[[ @ 0]]
				f177_arg0.ScrStkContainerWrapper:registerEventHandler( "interrupted_keyframe", f177_arg0.clipInterrupted ) --[[ @ 0]]
				f177_arg0.ScrStkContainerWrapper:registerEventHandler( "transition_complete_keyframe", f177_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f177_arg0.ScrStkContainerWrapper:completeAnimation() --[[ @ 0]]
			f177_arg0.ScrStkContainerWrapper:setAlpha( 0 ) --[[ @ 0]]
			f177_local7( f177_arg0.ScrStkContainerWrapper ) --[[ @ 0]]
			local f177_local8 = function ( f186_arg0 )
				f177_arg0.CompassGroupContainer:beginAnimation( 400 ) --[[ @ 0]]
				f177_arg0.CompassGroupContainer:registerEventHandler( "interrupted_keyframe", f177_arg0.clipInterrupted ) --[[ @ 0]]
				f177_arg0.CompassGroupContainer:registerEventHandler( "transition_complete_keyframe", f177_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f177_arg0.CompassGroupContainer:completeAnimation() --[[ @ 0]]
			f177_arg0.CompassGroupContainer:setAlpha( 0 ) --[[ @ 0]]
			f177_local8( f177_arg0.CompassGroupContainer ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.Hud_MP_SafeAreaContainer.__onClose = function ( f187_arg0 )
	f187_arg0.ScoreInfo:close() --[[ @ 0]]
	f187_arg0.AmmoWidgetContainer:close() --[[ @ 0]]
	f187_arg0.PlayerWidgetContainer:close() --[[ @ 0]]
	f187_arg0.ContextNotificationSpecialistWeaponHintList:close() --[[ @ 0]]
	f187_arg0.ContextNotificationSpecialistWeaponHintListPC:close() --[[ @ 0]]
	f187_arg0.ContextNotificationContainer:close() --[[ @ 0]]
	f187_arg0.ReadyEvents:close() --[[ @ 0]]
	f187_arg0.EMPScoreInfo:close() --[[ @ 0]]
	f187_arg0.EMPWeaponInfo:close() --[[ @ 0]]
	f187_arg0.VoipContainer0:close() --[[ @ 0]]
	f187_arg0.MPHardcoreInventoryWidget:close() --[[ @ 0]]
	f187_arg0.WaypointCloseMessage:close() --[[ @ 0]]
	f187_arg0.GameUpdateNotification:close() --[[ @ 0]]
	f187_arg0.ObituaryCallout:close() --[[ @ 0]]
	f187_arg0.AmmoWidgetMPUltimate:close() --[[ @ 0]]
	f187_arg0.ObitInfoFeedContainer:close() --[[ @ 0]]
	f187_arg0.DeathCamContainer:close() --[[ @ 0]]
	f187_arg0.ScrStkContainerWrapper:close() --[[ @ 0]]
	f187_arg0.CombatTrainingGameTimer:close() --[[ @ 0]]
	f187_arg0.FastLoadoutContainer:close() --[[ @ 0]]
	f187_arg0.CompassGroupContainer:close() --[[ @ 0]]
	f187_arg0.VoipContainerNoCompass:close() --[[ @ 0]]
	f187_arg0.IcePickHacked:close() --[[ @ 0]]
	f187_arg0.SpawnBeaconDeathCam:close() --[[ @ 0]]
end
 --[[ @ 0]]
