-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:49
require( "ui/uieditor/widgets/onoffimage" ) --[[ @ 0]]

CoD.AmmoWidget_SingleShotPip = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.AmmoWidget_SingleShotPip.__defaultWidth = 14 --[[ @ 0]]
CoD.AmmoWidget_SingleShotPip.__defaultHeight = 7 --[[ @ 0]]
CoD.AmmoWidget_SingleShotPip.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.AmmoWidget_SingleShotPip ) --[[ @ 0]]
	self.id = "AmmoWidget_SingleShotPip" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local base2 = LUI.UIImage.new( 0.2, 0.2, -2, 10, -0.3, -0.3, -3, 13 ) --[[ @ 0]]
	base2:setRGB( 0.92, 0.89, 0.72 ) --[[ @ 0]]
	base2:setZRot( 90 ) --[[ @ 0]]
	base2:setImage( RegisterImage( @"hash_7CEDA89781162E4B" ) ) --[[ @ 0]]
	self:addElement( base2 ) --[[ @ 0]]
	self.base2 = base2 --[[ @ 0]]
	
	local GlowOuter = LUI.UIImage.new( 0, 0, 1, 13, 0, 0, -5, 11 ) --[[ @ 0]]
	GlowOuter:setRGB( 0.92, 0.89, 0.72 ) --[[ @ 0]]
	GlowOuter:setAlpha( 0.35 ) --[[ @ 0]]
	GlowOuter:setZRot( 90 ) --[[ @ 0]]
	GlowOuter:setImage( RegisterImage( @"hash_5E48B57FD16FAD2D" ) ) --[[ @ 0]]
	GlowOuter:setMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	self:addElement( GlowOuter ) --[[ @ 0]]
	self.GlowOuter = GlowOuter --[[ @ 0]]
	
	local plusIcon = CoD.onOffImage.new( f1_arg0, f1_arg1, 1, 1, 0, 16, 0, 0, -5, 12 ) --[[ @ 0]]
	plusIcon:mergeStateConditions( {
		{
			stateName = "On",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg1, "hasExtra" ) and IsLastItem( self )
			end
		}
	} ) --[[ @ 0]]
	plusIcon:linkToElementModel( plusIcon, "hasExtra", true, function ( model )
		f1_arg0:updateElementState( plusIcon, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "hasExtra"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	plusIcon:setScale( 2, 2 ) --[[ @ 0]]
	plusIcon:setRFTMaterial( LUI.UIImage.GetCachedMaterial( @"uie_saturation_normal" ) ) --[[ @ 0]]
	plusIcon:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	plusIcon.image:setImage( RegisterImage( @"hash_101CCD6B7B2BDAC2" ) ) --[[ @ 0]]
	plusIcon:linkToElementModel( self, nil, false, function ( model )
		plusIcon:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( plusIcon ) --[[ @ 0]]
	self.plusIcon = plusIcon --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg1, "hidden" )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "hidden", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "hidden"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.AmmoWidget_SingleShotPip.__resetProperties = function ( f7_arg0 )
	f7_arg0.plusIcon:completeAnimation() --[[ @ 0]]
	f7_arg0.base2:completeAnimation() --[[ @ 0]]
	f7_arg0.GlowOuter:completeAnimation() --[[ @ 0]]
	f7_arg0.plusIcon:setAlpha( 1 ) --[[ @ 0]]
	f7_arg0.base2:setAlpha( 1 ) --[[ @ 0]]
	f7_arg0.GlowOuter:setAlpha( 0.35 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.AmmoWidget_SingleShotPip.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f8_arg0, f8_arg1 )
			f8_arg0:__resetProperties() --[[ @ 0]]
			f8_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	Hidden = {
		DefaultClip = function ( f9_arg0, f9_arg1 )
			f9_arg0:__resetProperties() --[[ @ 0]]
			f9_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f9_arg0.base2:completeAnimation() --[[ @ 0]]
			f9_arg0.base2:setAlpha( 0 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.base2 ) --[[ @ 0]]
			f9_arg0.GlowOuter:completeAnimation() --[[ @ 0]]
			f9_arg0.GlowOuter:setAlpha( 0 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.GlowOuter ) --[[ @ 0]]
			f9_arg0.plusIcon:completeAnimation() --[[ @ 0]]
			f9_arg0.plusIcon:setAlpha( 0 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.plusIcon ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.AmmoWidget_SingleShotPip.__onClose = function ( f10_arg0 )
	f10_arg0.plusIcon:close() --[[ @ 0]]
end
 --[[ @ 0]]
