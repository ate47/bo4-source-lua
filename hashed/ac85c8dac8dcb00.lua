-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:51
require( "x64:79fe6ac43673588" ) --[[ @ 0]]
require( "x64:1c4873e75b9cce20" ) --[[ @ 0]]
require( "x64:5959b3179a015708" ) --[[ @ 0]]
require( "ui/uieditor/widgets/craft/emblemeditor/emblemiconnew" ) --[[ @ 0]]
require( "ui/uieditor/widgets/scrollbars/verticalcounter" ) --[[ @ 0]]

CoD.DecalToolsFrame = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.DecalToolsFrame.__defaultWidth = 1820 --[[ @ 0]]
CoD.DecalToolsFrame.__defaultHeight = 965 --[[ @ 0]]
CoD.DecalToolsFrame.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.DecalToolsFrame ) --[[ @ 0]]
	self.id = "DecalToolsFrame" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	
	local TitleBG = CoD.Challenges_FrameWidget_TitleBackground.new( f1_arg0, f1_arg1, 0, 0, 1198, 1746, 0.5, 0.5, -415, 415 ) --[[ @ 0]]
	TitleBG:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( TitleBG ) --[[ @ 0]]
	self.TitleBG = TitleBG --[[ @ 0]]
	
	local ToolButtonList = LUI.UIList.new( f1_arg0, f1_arg1, 18, 0, nil, false, false, false, false ) --[[ @ 0]]
	ToolButtonList:setLeftRight( 0, 0, 66, 372 ) --[[ @ 0]]
	ToolButtonList:setTopBottom( 0, 0, 88, 880 ) --[[ @ 0]]
	ToolButtonList:setWidgetType( CoD.DecalTypeButton ) --[[ @ 0]]
	ToolButtonList:setVerticalCount( 10 ) --[[ @ 0]]
	ToolButtonList:setSpacing( 18 ) --[[ @ 0]]
	ToolButtonList:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	ToolButtonList:setDataSource( "ToolDecalButtons" ) --[[ @ 0]]
	ToolButtonList:registerEventHandler( "list_item_gain_focus", function ( element, event )
		local f2_local0 = nil --[[ @ 0]]
		if CoD.CraftUtility.EmblemChooseIcon_IsDecalTypeChanged( self, element, f1_arg1 ) then
			CoD.CraftUtility.EmblemChooseIcon_DecalTypeChanged( self, element, f1_arg1 ) --[[ @ 0]]
			UpdateElementDataSource( self, "emblemIconList" ) --[[ @ 0]]
		end
		return f2_local0
	end ) --[[ @ 0]]
	self:addElement( ToolButtonList ) --[[ @ 0]]
	self.ToolButtonList = ToolButtonList --[[ @ 0]]
	
	local emblemIconList = LUI.UIList.new( f1_arg0, f1_arg1, 18, 0, nil, true, false, false, false ) --[[ @ 0]]
	emblemIconList:setLeftRight( 0, 0, 390, 1020 ) --[[ @ 0]]
	emblemIconList:setTopBottom( 0, 0, 88, 718 ) --[[ @ 0]]
	emblemIconList:setWidgetType( CoD.EmblemIconNew ) --[[ @ 0]]
	emblemIconList:setHorizontalCount( 4 ) --[[ @ 0]]
	emblemIconList:setVerticalCount( 4 ) --[[ @ 0]]
	emblemIconList:setSpacing( 18 ) --[[ @ 0]]
	emblemIconList:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	emblemIconList:setVerticalCounter( CoD.verticalCounter ) --[[ @ 0]]
	emblemIconList:setDataSource( "EmblemIconList" ) --[[ @ 0]]
	emblemIconList:linkToElementModel( emblemIconList, "isBMClassified", true, function ( model, f3_arg1 )
		CoD.Menu.UpdateButtonShownState( f3_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	emblemIconList:appendEventHandler( "record_curr_focused_elem_id", function ( f4_arg0, f4_arg1 )
		f4_arg1.menu = f4_arg1.menu or f1_arg0 --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f4_arg0, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	emblemIconList:registerEventHandler( "list_item_gain_focus", function ( element, event )
		local f5_local0 = nil --[[ @ 0]]
		if IsElementInState( element, "New" ) then
			CoD.CraftUtility.EmblemChooseIcon_SelectionChanged( self, element, f1_arg1 ) --[[ @ 0]]
			CoD.CraftUtility.Emblems_SetIconOld( f1_arg0, element, f1_arg1 ) --[[ @ 0]]
			UpdateSelfElementState( f1_arg0, element, f1_arg1 ) --[[ @ 0]]
		else
			CoD.CraftUtility.EmblemChooseIcon_SelectionChanged( self, element, f1_arg1 ) --[[ @ 0]]
			CoD.CraftUtility.EmblemEditor_SetEditMode( f1_arg1 ) --[[ @ 0]]
		end
		return f5_local0
	end ) --[[ @ 0]]
	emblemIconList:registerEventHandler( "gain_focus", function ( element, event )
		local f6_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f6_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f6_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		return f6_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( emblemIconList, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"], nil, function ( element, menu, controller, model )
		if IsEmblemEditor( controller ) and not CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "isBMClassified" ) and CoD.BaseUtility.DoesElementOrChildHaveFocus( self, "emblemIconList" ) then
			CoD.CraftUtility.EmblemChooseIcon_SelectionAccepted( self, element, controller ) --[[ @ 0]]
			CoD.CraftUtility.EmblemEditor_SetEditMode( controller ) --[[ @ 0]]
			GoBack( self, controller ) --[[ @ 0]]
			ClearMenuSavedState( menu ) --[[ @ 0]]
			return true
		elseif IsPaintshop( controller ) and not CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "isBMClassified" ) and CoD.BaseUtility.DoesElementOrChildHaveFocus( self, "emblemIconList" ) then
			CoD.CraftUtility.EmblemChooseIcon_SelectionAccepted( self, element, controller ) --[[ @ 0]]
			CoD.CraftUtility.EmblemEditor_SetEditMode( controller ) --[[ @ 0]]
			CoD.CraftUtility.EmblemChooseIcon_RevertPreviewDecalCamera( self, element, controller ) --[[ @ 0]]
			GoBack( self, controller ) --[[ @ 0]]
			ClearMenuSavedState( menu ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsEmblemEditor( controller ) and not CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "isBMClassified" ) and CoD.BaseUtility.DoesElementOrChildHaveFocus( self, "emblemIconList" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"menu/select", nil, nil ) --[[ @ 0]]
			return true
		elseif IsPaintshop( controller ) and not CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "isBMClassified" ) and CoD.BaseUtility.DoesElementOrChildHaveFocus( self, "emblemIconList" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"menu/select", nil, nil ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( emblemIconList ) --[[ @ 0]]
	self.emblemIconList = emblemIconList --[[ @ 0]]
	
	local DecalPreview = CoD.DecalPreview.new( f1_arg0, f1_arg1, 0, 0, 1202, 1742, 0, 0, 71, 796 ) --[[ @ 0]]
	self:addElement( DecalPreview ) --[[ @ 0]]
	self.DecalPreview = DecalPreview --[[ @ 0]]
	
	DecalPreview:linkToElementModel( emblemIconList, nil, false, function ( model )
		DecalPreview:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	ToolButtonList.id = "ToolButtonList" --[[ @ 0]]
	emblemIconList.id = "emblemIconList" --[[ @ 0]]
	if CoD.isPC then
		DecalPreview.id = "DecalPreview" --[[ @ 0]]
	end
	self.__defaultFocus = ToolButtonList --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	local f1_local5 = self --[[ @ 0]]
	f1_local5 = emblemIconList --[[ @ 0]]
	if IsPC() then
		CoD.GridAndListUtility.SetVerticalScrollbar( f1_local5, "verticalScrollbar" ) --[[ @ 0]]
		CoD.GridAndListUtility.SetFocusableBackingWidgetOnPC( f1_local5 ) --[[ @ 0]]
	end
	return self
end
 --[[ @ 0]]
CoD.DecalToolsFrame.__onClose = function ( f10_arg0 )
	f10_arg0.DecalPreview:close() --[[ @ 0]]
	f10_arg0.TitleBG:close() --[[ @ 0]]
	f10_arg0.ToolButtonList:close() --[[ @ 0]]
	f10_arg0.emblemIconList:close() --[[ @ 0]]
end
 --[[ @ 0]]
