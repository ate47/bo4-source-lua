-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:50
CoD.HackingBar = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.HackingBar.__defaultWidth = 108 --[[ @ 0]]
CoD.HackingBar.__defaultHeight = 144 --[[ @ 0]]
CoD.HackingBar.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.HackingBar ) --[[ @ 0]]
	self.id = "HackingBar" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local BarScanning = LUI.UIImage.new( 0, 0, 0, 88, 0, 0, 0, 164 ) --[[ @ 0]]
	BarScanning:setZRot( 180 ) --[[ @ 0]]
	BarScanning:setImage( RegisterImage( @"uie_t7_hud_blackhat_bar_scanning" ) ) --[[ @ 0]]
	BarScanning:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_wipe" ) ) --[[ @ 0]]
	BarScanning:setShaderVector( 0, 1, 0, 0, 0 ) --[[ @ 0]]
	BarScanning:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	BarScanning:setShaderVector( 3, 0.04, 0, 0, 0 ) --[[ @ 0]]
	BarScanning:setShaderVector( 4, 0, 0, 0, 0 ) --[[ @ 0]]
	BarScanning:subscribeToGlobalModel( f1_arg1, "Blackhat", "perc", function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			BarScanning:setShaderVector( 2, BlackhatHackingPercentageShaderValue( f1_arg1, CoD.GetVectorComponentFromString( f2_local0, 1 ), CoD.GetVectorComponentFromString( f2_local0, 2 ), CoD.GetVectorComponentFromString( f2_local0, 3 ), CoD.GetVectorComponentFromString( f2_local0, 4 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( BarScanning ) --[[ @ 0]]
	self.BarScanning = BarScanning --[[ @ 0]]
	
	local BarHacking = LUI.UIImage.new( 0, 0, 0, 88, 0, 0, 0, 164 ) --[[ @ 0]]
	BarHacking:setAlpha( 0 ) --[[ @ 0]]
	BarHacking:setZRot( 180 ) --[[ @ 0]]
	BarHacking:setImage( RegisterImage( @"uie_t7_hud_blackhat_bar_hacking" ) ) --[[ @ 0]]
	BarHacking:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_wipe" ) ) --[[ @ 0]]
	BarHacking:setShaderVector( 0, 1, 0, 0, 0 ) --[[ @ 0]]
	BarHacking:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	BarHacking:setShaderVector( 3, 0.03, 0, 0, 0 ) --[[ @ 0]]
	BarHacking:setShaderVector( 4, 0, 0, 0, 0 ) --[[ @ 0]]
	BarHacking:subscribeToGlobalModel( f1_arg1, "Blackhat", "perc", function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			BarHacking:setShaderVector( 2, BlackhatHackingPercentageShaderValue( f1_arg1, CoD.GetVectorComponentFromString( f3_local0, 1 ), CoD.GetVectorComponentFromString( f3_local0, 2 ), CoD.GetVectorComponentFromString( f3_local0, 3 ), CoD.GetVectorComponentFromString( f3_local0, 4 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( BarHacking ) --[[ @ 0]]
	self.BarHacking = BarHacking --[[ @ 0]]
	
	local BarBreaching = LUI.UIImage.new( 0, 0, 0, 88, 0, 0, 0, 164 ) --[[ @ 0]]
	BarBreaching:setAlpha( 0 ) --[[ @ 0]]
	BarBreaching:setZRot( 180 ) --[[ @ 0]]
	BarBreaching:setImage( RegisterImage( @"uie_t7_hud_blackhat_bar_breaching" ) ) --[[ @ 0]]
	BarBreaching:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_wipe" ) ) --[[ @ 0]]
	BarBreaching:setShaderVector( 0, 1, 0, 0, 0 ) --[[ @ 0]]
	BarBreaching:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	BarBreaching:setShaderVector( 3, 0.03, 0, 0, 0 ) --[[ @ 0]]
	BarBreaching:setShaderVector( 4, 0, 0, 0, 0 ) --[[ @ 0]]
	BarBreaching:subscribeToGlobalModel( f1_arg1, "Blackhat", "perc", function ( model )
		local f4_local0 = model:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			BarBreaching:setShaderVector( 2, BlackhatHackingPercentageShaderValue( f1_arg1, CoD.GetVectorComponentFromString( f4_local0, 1 ), CoD.GetVectorComponentFromString( f4_local0, 2 ), CoD.GetVectorComponentFromString( f4_local0, 3 ), CoD.GetVectorComponentFromString( f4_local0, 4 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( BarBreaching ) --[[ @ 0]]
	self.BarBreaching = BarBreaching --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Hacking",
			condition = function ( menu, element, event )
				return IsBlackhatHacking( f1_arg1 )
			end
		},
		{
			stateName = "Breaching",
			condition = function ( menu, element, event )
				return IsBlackhatBreaching( f1_arg1 )
			end
		}
	} ) --[[ @ 0]]
	local f1_local4 = self --[[ @ 0]]
	local f1_local5 = self.subscribeToModel --[[ @ 0]]
	local f1_local6 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local5( f1_local4, f1_local6["hudItems.blackhat.status"], function ( f7_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f7_arg0:get(),
			modelName = "hudItems.blackhat.status"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.HackingBar.__resetProperties = function ( f8_arg0, f8_arg1 )
	f8_arg0.BarHacking:completeAnimation() --[[ @ 0]]
	f8_arg0.BarScanning:completeAnimation() --[[ @ 0]]
	f8_arg0.BarBreaching:completeAnimation() --[[ @ 0]]
	f8_arg0.BarHacking:setAlpha( 0 ) --[[ @ 0]]
	f8_arg0.BarHacking:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_wipe" ) ) --[[ @ 0]]
	f8_arg0.BarHacking:setShaderVector( 0, 1, 0, 0, 0 ) --[[ @ 0]]
	f8_arg0.BarHacking:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	f8_arg0.BarHacking:setShaderVector( 3, 0.03, 0, 0, 0 ) --[[ @ 0]]
	f8_arg0.BarHacking:setShaderVector( 4, 0, 0, 0, 0 ) --[[ @ 0]]
	f8_arg0.BarScanning:setAlpha( 1 ) --[[ @ 0]]
	f8_arg0.BarBreaching:setAlpha( 0 ) --[[ @ 0]]
	f8_arg0.BarBreaching:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_wipe" ) ) --[[ @ 0]]
	f8_arg0.BarBreaching:setShaderVector( 0, 1, 0, 0, 0 ) --[[ @ 0]]
	f8_arg0.BarBreaching:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	f8_arg0.BarBreaching:setShaderVector( 3, 0.03, 0, 0, 0 ) --[[ @ 0]]
	f8_arg0.BarBreaching:setShaderVector( 4, 0, 0, 0, 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.HackingBar.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f9_arg0, f9_arg1 )
			f9_arg0:__resetProperties( f9_arg1 ) --[[ @ 0]]
			f9_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	Hacking = {
		DefaultClip = function ( f10_arg0, f10_arg1 )
			f10_arg0:__resetProperties( f10_arg1 ) --[[ @ 0]]
			f10_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f10_arg0.BarScanning:completeAnimation() --[[ @ 0]]
			f10_arg0.BarScanning:setAlpha( 0 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.BarScanning ) --[[ @ 0]]
			f10_arg0.BarHacking:completeAnimation() --[[ @ 0]]
			f10_arg0.BarHacking:setAlpha( 1 ) --[[ @ 0]]
			f10_arg0.BarHacking:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_wipe" ) ) --[[ @ 0]]
			f10_arg0.BarHacking:setShaderVector( 0, 1, 0, 0, 0 ) --[[ @ 0]]
			f10_arg0.BarHacking:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
			f10_arg0.BarHacking:setShaderVector( 3, 0.04, 0, 0, 0 ) --[[ @ 0]]
			f10_arg0.BarHacking:setShaderVector( 4, 0, 0, 0, 0 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.BarHacking ) --[[ @ 0]]
		end
	},
	Breaching = {
		DefaultClip = function ( f11_arg0, f11_arg1 )
			f11_arg0:__resetProperties( f11_arg1 ) --[[ @ 0]]
			f11_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f11_arg0.BarScanning:completeAnimation() --[[ @ 0]]
			f11_arg0.BarScanning:setAlpha( 0 ) --[[ @ 0]]
			f11_arg0.clipFinished( f11_arg0.BarScanning ) --[[ @ 0]]
			f11_arg0.BarBreaching:completeAnimation() --[[ @ 0]]
			f11_arg0.BarBreaching:setAlpha( 1 ) --[[ @ 0]]
			f11_arg0.BarBreaching:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_wipe" ) ) --[[ @ 0]]
			f11_arg0.BarBreaching:setShaderVector( 0, 1, 0, 0, 0 ) --[[ @ 0]]
			f11_arg0.BarBreaching:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
			f11_arg0.BarBreaching:setShaderVector( 3, 0.04, 0, 0, 0 ) --[[ @ 0]]
			f11_arg0.BarBreaching:setShaderVector( 4, 0, 0, 0, 0 ) --[[ @ 0]]
			f11_arg0.clipFinished( f11_arg0.BarBreaching ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.HackingBar.__onClose = function ( f12_arg0 )
	f12_arg0.BarScanning:close() --[[ @ 0]]
	f12_arg0.BarHacking:close() --[[ @ 0]]
	f12_arg0.BarBreaching:close() --[[ @ 0]]
end
 --[[ @ 0]]
