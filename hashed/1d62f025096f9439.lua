-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:48
require( "x64:1c7393046816f760" ) --[[ @ 0]]
require( "ui/uieditor/widgets/common/commonwipemeterwithglow" ) --[[ @ 0]]
require( "x64:ebeb04182312df4" ) --[[ @ 0]]

CoD.Prestige_LevelProgressWidget = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.Prestige_LevelProgressWidget.__defaultWidth = 1108 --[[ @ 0]]
CoD.Prestige_LevelProgressWidget.__defaultHeight = 94 --[[ @ 0]]
CoD.Prestige_LevelProgressWidget.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.Prestige_LevelProgressWidget ) --[[ @ 0]]
	self.id = "Prestige_LevelProgressWidget" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local BodyBacker = LUI.UIImage.new( 0, 0, 74, 1108, 0, 0, 0, 94 ) --[[ @ 0]]
	BodyBacker:setRGB( 0.1, 0.1, 0.1 ) --[[ @ 0]]
	BodyBacker:setAlpha( 0.2 ) --[[ @ 0]]
	self:addElement( BodyBacker ) --[[ @ 0]]
	self.BodyBacker = BodyBacker --[[ @ 0]]
	
	local NoiseTiledBacking = LUI.UIImage.new( 0, 0, 74, 1108, 0, 0, 0, 94 ) --[[ @ 0]]
	NoiseTiledBacking:setAlpha( 0.5 ) --[[ @ 0]]
	NoiseTiledBacking:setImage( RegisterImage( @"uie_ui_menu_specialist_hub_repeat_bg" ) ) --[[ @ 0]]
	NoiseTiledBacking:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_16CBE95C250C6D15" ) ) --[[ @ 0]]
	NoiseTiledBacking:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	NoiseTiledBacking:setupNineSliceShader( 196, 88 ) --[[ @ 0]]
	self:addElement( NoiseTiledBacking ) --[[ @ 0]]
	self.NoiseTiledBacking = NoiseTiledBacking --[[ @ 0]]
	
	local LevelMeterBgTint = LUI.UIImage.new( 0, 0, 149, 1097, 0.5, 0.5, -0.5, 3.5 ) --[[ @ 0]]
	LevelMeterBgTint:setRGB( 0.92, 0.92, 0.92 ) --[[ @ 0]]
	LevelMeterBgTint:setAlpha( 0.05 ) --[[ @ 0]]
	self:addElement( LevelMeterBgTint ) --[[ @ 0]]
	self.LevelMeterBgTint = LevelMeterBgTint --[[ @ 0]]
	
	local LevelMeterBg = LUI.UIImage.new( 0, 0, 146, 1100, 0.5, 0.5, -10.5, 13.5 ) --[[ @ 0]]
	LevelMeterBg:setImage( RegisterImage( @"uie_ui_menu_inspection_level_meter_bg" ) ) --[[ @ 0]]
	LevelMeterBg:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_F755127C95CF5B6" ) ) --[[ @ 0]]
	LevelMeterBg:setShaderVector( 0, 2, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( LevelMeterBg ) --[[ @ 0]]
	self.LevelMeterBg = LevelMeterBg --[[ @ 0]]
	
	local RankIcon = LUI.UIImage.new( 0, 0, 0, 148, 0, 0, -29.5, 118.5 ) --[[ @ 0]]
	RankIcon:subscribeToGlobalModel( f1_arg1, "PrestigeMenuInfo", "hasPrestiged", function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			RankIcon:setImage( RegisterImage( CoD.PlayerStatsUtility.GetRankIconLarge( f1_arg0, f1_arg1, f2_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( RankIcon ) --[[ @ 0]]
	self.RankIcon = RankIcon --[[ @ 0]]
	
	local LevelMeterBar = LUI.UIImage.new( -0.65, -0.65, 869.5, 1818.5, 0.5, 0.5, -3.5, 6.5 ) --[[ @ 0]]
	LevelMeterBar:setRGB( 0.47, 0.47, 0.47 ) --[[ @ 0]]
	LevelMeterBar:setAlpha( 0 ) --[[ @ 0]]
	LevelMeterBar:setImage( RegisterImage( @"uie_ui_menu_inspection_level_meter_bar" ) ) --[[ @ 0]]
	LevelMeterBar:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_wipe_delta" ) ) --[[ @ 0]]
	LevelMeterBar:setShaderVector( 0, 0, 1, 0, 0 ) --[[ @ 0]]
	LevelMeterBar:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	LevelMeterBar:setShaderVector( 2, 0, 1, 0, 0 ) --[[ @ 0]]
	LevelMeterBar:setShaderVector( 3, 0, 0, 0, 0 ) --[[ @ 0]]
	LevelMeterBar:setShaderVector( 4, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( LevelMeterBar ) --[[ @ 0]]
	self.LevelMeterBar = LevelMeterBar --[[ @ 0]]
	
	local EarnedXP = CoD.CommonWipeMeterWithGlow.new( f1_arg0, f1_arg1, 0, 0, 148, 1097, 0.5, 0.5, -10, 14 ) --[[ @ 0]]
	EarnedXP.Meter:setRGB( 1, 0.73, 0 ) --[[ @ 0]]
	EarnedXP.Meter:setImage( RegisterImage( @"uie_ui_menu_aar_levelup_bar" ) ) --[[ @ 0]]
	EarnedXP.MeterAdd:setAlpha( 0.3 ) --[[ @ 0]]
	EarnedXP.MeterAdd:setImage( RegisterImage( @"uie_ui_menu_aar_levelup_bar" ) ) --[[ @ 0]]
	EarnedXP.MeterGlow:setRGB( 0.39, 0.18, 0 ) --[[ @ 0]]
	EarnedXP.MeterGlow:setImage( RegisterImage( @"uie_ui_menu_aar_levelup_bar_glow" ) ) --[[ @ 0]]
	EarnedXP:subscribeToGlobalModel( f1_arg1, "XPProgressionBar", "progress", function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			EarnedXP.Meter:setShaderVector( 0, CoD.GetVectorComponentFromString( f3_local0, 1 ), CoD.GetVectorComponentFromString( f3_local0, 2 ), CoD.GetVectorComponentFromString( f3_local0, 3 ), CoD.GetVectorComponentFromString( f3_local0, 4 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	EarnedXP:subscribeToGlobalModel( f1_arg1, "XPProgressionBar", "progress", function ( model )
		local f4_local0 = model:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			EarnedXP.MeterAdd:setShaderVector( 0, CoD.GetVectorComponentFromString( f4_local0, 1 ), CoD.GetVectorComponentFromString( f4_local0, 2 ), CoD.GetVectorComponentFromString( f4_local0, 3 ), CoD.GetVectorComponentFromString( f4_local0, 4 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	EarnedXP:subscribeToGlobalModel( f1_arg1, "XPProgressionBar", "progress", function ( model )
		local f5_local0 = model:get() --[[ @ 0]]
		if f5_local0 ~= nil then
			EarnedXP.MeterGlow:setShaderVector( 0, CoD.GetVectorComponentFromString( f5_local0, 1 ), CoD.GetVectorComponentFromString( f5_local0, 2 ), CoD.GetVectorComponentFromString( f5_local0, 3 ), CoD.GetVectorComponentFromString( f5_local0, 4 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( EarnedXP ) --[[ @ 0]]
	self.EarnedXP = EarnedXP --[[ @ 0]]
	
	local RankProgressBar = LUI.UIImage.new( 0, 0, 148, 1097, 0, 0, 44.5, 52.5 ) --[[ @ 0]]
	RankProgressBar:setRGB( ColorSet.Orange.r, ColorSet.Orange.g, ColorSet.Orange.b ) --[[ @ 0]]
	RankProgressBar:setAlpha( 0 ) --[[ @ 0]]
	RankProgressBar:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_wipe_normal" ) ) --[[ @ 0]]
	RankProgressBar:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	RankProgressBar:setShaderVector( 2, 1, 0, 0, 0 ) --[[ @ 0]]
	RankProgressBar:setShaderVector( 3, 0, 0, 0, 0 ) --[[ @ 0]]
	RankProgressBar:setShaderVector( 4, 0, 0, 0, 0 ) --[[ @ 0]]
	RankProgressBar:subscribeToGlobalModel( f1_arg1, "XPProgressionBar", "progress", function ( model )
		local f6_local0 = model:get() --[[ @ 0]]
		if f6_local0 ~= nil then
			RankProgressBar:setShaderVector( 0, CoD.GetVectorComponentFromString( f6_local0, 1 ), CoD.GetVectorComponentFromString( f6_local0, 2 ), CoD.GetVectorComponentFromString( f6_local0, 3 ), CoD.GetVectorComponentFromString( f6_local0, 4 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( RankProgressBar ) --[[ @ 0]]
	self.RankProgressBar = RankProgressBar --[[ @ 0]]
	
	local NextLevelText = LUI.UIText.new( 0, 0, 829, 1094, 0, 0, 65, 83 ) --[[ @ 0]]
	NextLevelText:setRGB( 0.9, 0.89, 0.78 ) --[[ @ 0]]
	NextLevelText:setAlpha( 0.3 ) --[[ @ 0]]
	NextLevelText:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	NextLevelText:setLetterSpacing( 2 ) --[[ @ 0]]
	NextLevelText:setAlignment( Enum[@"luialignment"][@"lui_alignment_right"] ) --[[ @ 0]]
	NextLevelText:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	NextLevelText:subscribeToGlobalModel( f1_arg1, "PrestigeMenuInfo", "hasPrestiged", function ( model )
		local f7_local0 = model:get() --[[ @ 0]]
		if f7_local0 ~= nil then
			NextLevelText:setText( CoD.PrestigeUtility.GetNextLevelText( f1_arg0, f1_arg1, f7_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( NextLevelText ) --[[ @ 0]]
	self.NextLevelText = NextLevelText --[[ @ 0]]
	
	local ProgressText = LUI.UIText.new( 0, 0, 152, 575, 0, 0, 65, 83 ) --[[ @ 0]]
	ProgressText:setRGB( ColorSet.PlayerYellow.r, ColorSet.PlayerYellow.g, ColorSet.PlayerYellow.b ) --[[ @ 0]]
	ProgressText:setAlpha( 0.3 ) --[[ @ 0]]
	ProgressText:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	ProgressText:setLetterSpacing( 2 ) --[[ @ 0]]
	ProgressText:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	ProgressText:subscribeToGlobalModel( f1_arg1, "PrestigeMenuInfo", "hasPrestiged", function ( model )
		local f8_local0 = model:get() --[[ @ 0]]
		if f8_local0 ~= nil then
			ProgressText:setText( CoD.PlayerStatsUtility.GetCurrentXPOverNextRankXP( f1_arg0, f8_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( ProgressText ) --[[ @ 0]]
	self.ProgressText = ProgressText --[[ @ 0]]
	
	local RankName = CoD.Prestige_LevelProgress_Rank.new( f1_arg0, f1_arg1, 0, 0, 152, 706, 0, 0, 13, 38 ) --[[ @ 0]]
	self:addElement( RankName ) --[[ @ 0]]
	self.RankName = RankName --[[ @ 0]]
	
	local CornerBottomRight = LUI.UIImage.new( 1, 1, -2, 2, 1, 1, -2, 2 ) --[[ @ 0]]
	CornerBottomRight:setAlpha( 0.2 ) --[[ @ 0]]
	CornerBottomRight:setImage( RegisterImage( @"hash_6CD2D51C614BCB51" ) ) --[[ @ 0]]
	self:addElement( CornerBottomRight ) --[[ @ 0]]
	self.CornerBottomRight = CornerBottomRight --[[ @ 0]]
	
	local CornerTopRight = LUI.UIImage.new( 1, 1, -2, 2, 0, 0, -2, 2 ) --[[ @ 0]]
	CornerTopRight:setAlpha( 0.2 ) --[[ @ 0]]
	CornerTopRight:setImage( RegisterImage( @"hash_6CD2D51C614BCB51" ) ) --[[ @ 0]]
	self:addElement( CornerTopRight ) --[[ @ 0]]
	self.CornerTopRight = CornerTopRight --[[ @ 0]]
	
	local SquareOthers = CoD.AARLevelCommonBoxes.new( f1_arg0, f1_arg1, 0, 0, 1054, 1102, 0, 0, 2.5, 15.5 ) --[[ @ 0]]
	SquareOthers:setAlpha( 0.2 ) --[[ @ 0]]
	self:addElement( SquareOthers ) --[[ @ 0]]
	self.SquareOthers = SquareOthers --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "MaxPrestige",
			condition = function ( menu, element, event )
				return IsMaxPrestigeLevel( f1_arg1 ) and CoD.PrestigeUtility.isMaxRank( menu )
			end
		}
	} ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.Prestige_LevelProgressWidget.__resetProperties = function ( f10_arg0 )
	f10_arg0.ProgressText:completeAnimation() --[[ @ 0]]
	f10_arg0.RankProgressBar:completeAnimation() --[[ @ 0]]
	f10_arg0.EarnedXP:completeAnimation() --[[ @ 0]]
	f10_arg0.ProgressText:setAlpha( 0.3 ) --[[ @ 0]]
	f10_arg0.RankProgressBar:setAlpha( 0 ) --[[ @ 0]]
	f10_arg0.EarnedXP:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.Prestige_LevelProgressWidget.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f11_arg0, f11_arg1 )
			f11_arg0:__resetProperties() --[[ @ 0]]
			f11_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	MaxPrestige = {
		DefaultClip = function ( f12_arg0, f12_arg1 )
			f12_arg0:__resetProperties() --[[ @ 0]]
			f12_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f12_arg0.EarnedXP:completeAnimation() --[[ @ 0]]
			f12_arg0.EarnedXP:setAlpha( 0 ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.EarnedXP ) --[[ @ 0]]
			f12_arg0.RankProgressBar:completeAnimation() --[[ @ 0]]
			f12_arg0.RankProgressBar:setAlpha( 0 ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.RankProgressBar ) --[[ @ 0]]
			f12_arg0.ProgressText:completeAnimation() --[[ @ 0]]
			f12_arg0.ProgressText:setAlpha( 0 ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.ProgressText ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.Prestige_LevelProgressWidget.__onClose = function ( f13_arg0 )
	f13_arg0.RankIcon:close() --[[ @ 0]]
	f13_arg0.EarnedXP:close() --[[ @ 0]]
	f13_arg0.RankProgressBar:close() --[[ @ 0]]
	f13_arg0.NextLevelText:close() --[[ @ 0]]
	f13_arg0.ProgressText:close() --[[ @ 0]]
	f13_arg0.RankName:close() --[[ @ 0]]
	f13_arg0.SquareOthers:close() --[[ @ 0]]
end
 --[[ @ 0]]
