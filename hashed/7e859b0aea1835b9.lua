-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:51
require( "ui/uieditor/widgets/hud/core_ammowidget/ammowidget_ball" ) --[[ @ 0]]
require( "x64:7e8b4c435a1e7674" ) --[[ @ 0]]
require( "x64:5b3ff9f106da5e7b" ) --[[ @ 0]]
require( "x64:718ced87ee825d0f" ) --[[ @ 0]]
require( "x64:4df55cb39b6ff10b" ) --[[ @ 0]]
require( "ui/uieditor/widgets/hud/core_ammowidget/ammowidget_sdbomb" ) --[[ @ 0]]
require( "x64:2653dea5df24d16e" ) --[[ @ 0]]

CoD.AmmoWidgetMP_HeldItem = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.AmmoWidgetMP_HeldItem.__defaultWidth = 138 --[[ @ 0]]
CoD.AmmoWidgetMP_HeldItem.__defaultHeight = 184 --[[ @ 0]]
CoD.AmmoWidgetMP_HeldItem.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.AmmoWidgetMP_HeldItem ) --[[ @ 0]]
	self.id = "AmmoWidgetMP_HeldItem" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local AmmoWidgetCPDataPackage = CoD.AmmoWidget_CPDataPackage.new( f1_arg0, f1_arg1, 0, 0, 15.5, 120.5, 0, 0, 37.5, 142.5 ) --[[ @ 0]]
	AmmoWidgetCPDataPackage:mergeStateConditions( {
		{
			stateName = "Hide",
			condition = function ( menu, element, event )
				local f2_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_demo_all_game_hud_hidden"] ) --[[ @ 0]]
				if not f2_local0 then
					f2_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_demo_camera_mode_moviecam"] ) --[[ @ 0]]
					if not f2_local0 then
						f2_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_emp_active"] ) --[[ @ 0]]
						if not f2_local0 then
							f2_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_game_ended"] ) --[[ @ 0]]
							if not f2_local0 then
								if Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_hud_visible"] ) then
									f2_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_guided_missile"] ) --[[ @ 0]]
									if not f2_local0 then
										f2_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_killcam"] ) --[[ @ 0]]
										if not f2_local0 then
											f2_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_remote_killstreak_static"] ) --[[ @ 0]]
											if not f2_local0 then
												f2_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_vehicle"] ) --[[ @ 0]]
												if not f2_local0 then
													f2_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_is_flash_banged"] ) --[[ @ 0]]
													if not f2_local0 then
														f2_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_is_scoped"] ) --[[ @ 0]]
														if not f2_local0 then
															f2_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_scoreboard_open"] ) --[[ @ 0]]
															if not f2_local0 then
																f2_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_ui_active"] ) --[[ @ 0]]
																if not f2_local0 then
																	f2_local0 = not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_weapon_hud_visible"] ) --[[ @ 0]]
																end
															end
														end
													end
												end
											end
										end
									end
								else
									f2_local0 = true --[[ @ 0]]
								end
							end
						end
					end
				end
				return f2_local0
			end
		}
	} ) --[[ @ 0]]
	local AmmoWidgetBall = AmmoWidgetCPDataPackage --[[ @ 0]]
	local AmmoWidgetSDBomb = AmmoWidgetCPDataPackage.subscribeToModel --[[ @ 0]]
	local AmmoWidgetCarryItemBattery = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetSDBomb( AmmoWidgetBall, AmmoWidgetCarryItemBattery["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_demo_all_game_hud_hidden"]], function ( f3_arg0 )
		f1_arg0:updateElementState( AmmoWidgetCPDataPackage, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f3_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_demo_all_game_hud_hidden"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoWidgetBall = AmmoWidgetCPDataPackage --[[ @ 0]]
	AmmoWidgetSDBomb = AmmoWidgetCPDataPackage.subscribeToModel --[[ @ 0]]
	AmmoWidgetCarryItemBattery = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetSDBomb( AmmoWidgetBall, AmmoWidgetCarryItemBattery["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_demo_camera_mode_moviecam"]], function ( f4_arg0 )
		f1_arg0:updateElementState( AmmoWidgetCPDataPackage, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f4_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_demo_camera_mode_moviecam"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoWidgetBall = AmmoWidgetCPDataPackage --[[ @ 0]]
	AmmoWidgetSDBomb = AmmoWidgetCPDataPackage.subscribeToModel --[[ @ 0]]
	AmmoWidgetCarryItemBattery = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetSDBomb( AmmoWidgetBall, AmmoWidgetCarryItemBattery["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_emp_active"]], function ( f5_arg0 )
		f1_arg0:updateElementState( AmmoWidgetCPDataPackage, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f5_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_emp_active"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoWidgetBall = AmmoWidgetCPDataPackage --[[ @ 0]]
	AmmoWidgetSDBomb = AmmoWidgetCPDataPackage.subscribeToModel --[[ @ 0]]
	AmmoWidgetCarryItemBattery = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetSDBomb( AmmoWidgetBall, AmmoWidgetCarryItemBattery["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_game_ended"]], function ( f6_arg0 )
		f1_arg0:updateElementState( AmmoWidgetCPDataPackage, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f6_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_game_ended"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoWidgetBall = AmmoWidgetCPDataPackage --[[ @ 0]]
	AmmoWidgetSDBomb = AmmoWidgetCPDataPackage.subscribeToModel --[[ @ 0]]
	AmmoWidgetCarryItemBattery = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetSDBomb( AmmoWidgetBall, AmmoWidgetCarryItemBattery["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_hud_visible"]], function ( f7_arg0 )
		f1_arg0:updateElementState( AmmoWidgetCPDataPackage, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f7_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_hud_visible"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoWidgetBall = AmmoWidgetCPDataPackage --[[ @ 0]]
	AmmoWidgetSDBomb = AmmoWidgetCPDataPackage.subscribeToModel --[[ @ 0]]
	AmmoWidgetCarryItemBattery = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetSDBomb( AmmoWidgetBall, AmmoWidgetCarryItemBattery["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_guided_missile"]], function ( f8_arg0 )
		f1_arg0:updateElementState( AmmoWidgetCPDataPackage, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f8_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_guided_missile"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoWidgetBall = AmmoWidgetCPDataPackage --[[ @ 0]]
	AmmoWidgetSDBomb = AmmoWidgetCPDataPackage.subscribeToModel --[[ @ 0]]
	AmmoWidgetCarryItemBattery = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetSDBomb( AmmoWidgetBall, AmmoWidgetCarryItemBattery["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_killcam"]], function ( f9_arg0 )
		f1_arg0:updateElementState( AmmoWidgetCPDataPackage, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f9_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_killcam"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoWidgetBall = AmmoWidgetCPDataPackage --[[ @ 0]]
	AmmoWidgetSDBomb = AmmoWidgetCPDataPackage.subscribeToModel --[[ @ 0]]
	AmmoWidgetCarryItemBattery = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetSDBomb( AmmoWidgetBall, AmmoWidgetCarryItemBattery["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_remote_killstreak_static"]], function ( f10_arg0 )
		f1_arg0:updateElementState( AmmoWidgetCPDataPackage, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f10_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_remote_killstreak_static"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoWidgetBall = AmmoWidgetCPDataPackage --[[ @ 0]]
	AmmoWidgetSDBomb = AmmoWidgetCPDataPackage.subscribeToModel --[[ @ 0]]
	AmmoWidgetCarryItemBattery = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetSDBomb( AmmoWidgetBall, AmmoWidgetCarryItemBattery["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_vehicle"]], function ( f11_arg0 )
		f1_arg0:updateElementState( AmmoWidgetCPDataPackage, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f11_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_vehicle"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoWidgetBall = AmmoWidgetCPDataPackage --[[ @ 0]]
	AmmoWidgetSDBomb = AmmoWidgetCPDataPackage.subscribeToModel --[[ @ 0]]
	AmmoWidgetCarryItemBattery = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetSDBomb( AmmoWidgetBall, AmmoWidgetCarryItemBattery["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_flash_banged"]], function ( f12_arg0 )
		f1_arg0:updateElementState( AmmoWidgetCPDataPackage, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f12_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_flash_banged"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoWidgetBall = AmmoWidgetCPDataPackage --[[ @ 0]]
	AmmoWidgetSDBomb = AmmoWidgetCPDataPackage.subscribeToModel --[[ @ 0]]
	AmmoWidgetCarryItemBattery = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetSDBomb( AmmoWidgetBall, AmmoWidgetCarryItemBattery["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_scoped"]], function ( f13_arg0 )
		f1_arg0:updateElementState( AmmoWidgetCPDataPackage, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f13_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_scoped"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoWidgetBall = AmmoWidgetCPDataPackage --[[ @ 0]]
	AmmoWidgetSDBomb = AmmoWidgetCPDataPackage.subscribeToModel --[[ @ 0]]
	AmmoWidgetCarryItemBattery = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetSDBomb( AmmoWidgetBall, AmmoWidgetCarryItemBattery["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_scoreboard_open"]], function ( f14_arg0 )
		f1_arg0:updateElementState( AmmoWidgetCPDataPackage, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f14_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_scoreboard_open"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoWidgetBall = AmmoWidgetCPDataPackage --[[ @ 0]]
	AmmoWidgetSDBomb = AmmoWidgetCPDataPackage.subscribeToModel --[[ @ 0]]
	AmmoWidgetCarryItemBattery = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetSDBomb( AmmoWidgetBall, AmmoWidgetCarryItemBattery["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_ui_active"]], function ( f15_arg0 )
		f1_arg0:updateElementState( AmmoWidgetCPDataPackage, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f15_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_ui_active"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoWidgetBall = AmmoWidgetCPDataPackage --[[ @ 0]]
	AmmoWidgetSDBomb = AmmoWidgetCPDataPackage.subscribeToModel --[[ @ 0]]
	AmmoWidgetCarryItemBattery = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetSDBomb( AmmoWidgetBall, AmmoWidgetCarryItemBattery["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_weapon_hud_visible"]], function ( f16_arg0 )
		f1_arg0:updateElementState( AmmoWidgetCPDataPackage, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f16_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_weapon_hud_visible"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoWidgetBall = AmmoWidgetCPDataPackage --[[ @ 0]]
	AmmoWidgetSDBomb = AmmoWidgetCPDataPackage.subscribeToModel --[[ @ 0]]
	AmmoWidgetCarryItemBattery = DataSources.CPGamePlayBundleData.getModel( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetSDBomb( AmmoWidgetBall, AmmoWidgetCarryItemBattery.briefcaseClient, function ( f17_arg0 )
		f1_arg0:updateElementState( AmmoWidgetCPDataPackage, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f17_arg0:get(),
			modelName = "briefcaseClient"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoWidgetCPDataPackage:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( AmmoWidgetCPDataPackage ) --[[ @ 0]]
	self.AmmoWidgetCPDataPackage = AmmoWidgetCPDataPackage --[[ @ 0]]
	
	AmmoWidgetSDBomb = CoD.AmmoWidget_SDBomb.new( f1_arg0, f1_arg1, 0, 0, 16.5, 121.5, 0, 0, 37.5, 142.5 ) --[[ @ 0]]
	AmmoWidgetSDBomb:mergeStateConditions( {
		{
			stateName = "Hide",
			condition = function ( menu, element, event )
				local f18_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_demo_all_game_hud_hidden"] ) --[[ @ 0]]
				if not f18_local0 then
					f18_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_demo_camera_mode_moviecam"] ) --[[ @ 0]]
					if not f18_local0 then
						f18_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_emp_active"] ) --[[ @ 0]]
						if not f18_local0 then
							f18_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_game_ended"] ) --[[ @ 0]]
							if not f18_local0 then
								if Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_hud_visible"] ) then
									f18_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_guided_missile"] ) --[[ @ 0]]
									if not f18_local0 then
										f18_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_killcam"] ) --[[ @ 0]]
										if not f18_local0 then
											f18_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_remote_killstreak_static"] ) --[[ @ 0]]
											if not f18_local0 then
												f18_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_vehicle"] ) --[[ @ 0]]
												if not f18_local0 then
													f18_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_is_flash_banged"] ) --[[ @ 0]]
													if not f18_local0 then
														f18_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_is_scoped"] ) --[[ @ 0]]
														if not f18_local0 then
															f18_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_scoreboard_open"] ) --[[ @ 0]]
															if not f18_local0 then
																f18_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_ui_active"] ) --[[ @ 0]]
																if not f18_local0 then
																	f18_local0 = not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_weapon_hud_visible"] ) --[[ @ 0]]
																end
															end
														end
													end
												end
											end
										end
									end
								else
									f18_local0 = true --[[ @ 0]]
								end
							end
						end
					end
				end
				return f18_local0
			end
		}
	} ) --[[ @ 0]]
	AmmoWidgetCarryItemBattery = AmmoWidgetSDBomb --[[ @ 0]]
	AmmoWidgetBall = AmmoWidgetSDBomb.subscribeToModel --[[ @ 0]]
	local AmmoWidgetBountyBag = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetBall( AmmoWidgetCarryItemBattery, AmmoWidgetBountyBag["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_demo_all_game_hud_hidden"]], function ( f19_arg0 )
		f1_arg0:updateElementState( AmmoWidgetSDBomb, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f19_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_demo_all_game_hud_hidden"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoWidgetCarryItemBattery = AmmoWidgetSDBomb --[[ @ 0]]
	AmmoWidgetBall = AmmoWidgetSDBomb.subscribeToModel --[[ @ 0]]
	AmmoWidgetBountyBag = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetBall( AmmoWidgetCarryItemBattery, AmmoWidgetBountyBag["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_demo_camera_mode_moviecam"]], function ( f20_arg0 )
		f1_arg0:updateElementState( AmmoWidgetSDBomb, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f20_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_demo_camera_mode_moviecam"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoWidgetCarryItemBattery = AmmoWidgetSDBomb --[[ @ 0]]
	AmmoWidgetBall = AmmoWidgetSDBomb.subscribeToModel --[[ @ 0]]
	AmmoWidgetBountyBag = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetBall( AmmoWidgetCarryItemBattery, AmmoWidgetBountyBag["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_emp_active"]], function ( f21_arg0 )
		f1_arg0:updateElementState( AmmoWidgetSDBomb, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f21_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_emp_active"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoWidgetCarryItemBattery = AmmoWidgetSDBomb --[[ @ 0]]
	AmmoWidgetBall = AmmoWidgetSDBomb.subscribeToModel --[[ @ 0]]
	AmmoWidgetBountyBag = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetBall( AmmoWidgetCarryItemBattery, AmmoWidgetBountyBag["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_game_ended"]], function ( f22_arg0 )
		f1_arg0:updateElementState( AmmoWidgetSDBomb, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f22_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_game_ended"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoWidgetCarryItemBattery = AmmoWidgetSDBomb --[[ @ 0]]
	AmmoWidgetBall = AmmoWidgetSDBomb.subscribeToModel --[[ @ 0]]
	AmmoWidgetBountyBag = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetBall( AmmoWidgetCarryItemBattery, AmmoWidgetBountyBag["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_hud_visible"]], function ( f23_arg0 )
		f1_arg0:updateElementState( AmmoWidgetSDBomb, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f23_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_hud_visible"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoWidgetCarryItemBattery = AmmoWidgetSDBomb --[[ @ 0]]
	AmmoWidgetBall = AmmoWidgetSDBomb.subscribeToModel --[[ @ 0]]
	AmmoWidgetBountyBag = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetBall( AmmoWidgetCarryItemBattery, AmmoWidgetBountyBag["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_guided_missile"]], function ( f24_arg0 )
		f1_arg0:updateElementState( AmmoWidgetSDBomb, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f24_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_guided_missile"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoWidgetCarryItemBattery = AmmoWidgetSDBomb --[[ @ 0]]
	AmmoWidgetBall = AmmoWidgetSDBomb.subscribeToModel --[[ @ 0]]
	AmmoWidgetBountyBag = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetBall( AmmoWidgetCarryItemBattery, AmmoWidgetBountyBag["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_killcam"]], function ( f25_arg0 )
		f1_arg0:updateElementState( AmmoWidgetSDBomb, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f25_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_killcam"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoWidgetCarryItemBattery = AmmoWidgetSDBomb --[[ @ 0]]
	AmmoWidgetBall = AmmoWidgetSDBomb.subscribeToModel --[[ @ 0]]
	AmmoWidgetBountyBag = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetBall( AmmoWidgetCarryItemBattery, AmmoWidgetBountyBag["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_remote_killstreak_static"]], function ( f26_arg0 )
		f1_arg0:updateElementState( AmmoWidgetSDBomb, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f26_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_remote_killstreak_static"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoWidgetCarryItemBattery = AmmoWidgetSDBomb --[[ @ 0]]
	AmmoWidgetBall = AmmoWidgetSDBomb.subscribeToModel --[[ @ 0]]
	AmmoWidgetBountyBag = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetBall( AmmoWidgetCarryItemBattery, AmmoWidgetBountyBag["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_vehicle"]], function ( f27_arg0 )
		f1_arg0:updateElementState( AmmoWidgetSDBomb, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f27_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_vehicle"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoWidgetCarryItemBattery = AmmoWidgetSDBomb --[[ @ 0]]
	AmmoWidgetBall = AmmoWidgetSDBomb.subscribeToModel --[[ @ 0]]
	AmmoWidgetBountyBag = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetBall( AmmoWidgetCarryItemBattery, AmmoWidgetBountyBag["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_flash_banged"]], function ( f28_arg0 )
		f1_arg0:updateElementState( AmmoWidgetSDBomb, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f28_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_flash_banged"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoWidgetCarryItemBattery = AmmoWidgetSDBomb --[[ @ 0]]
	AmmoWidgetBall = AmmoWidgetSDBomb.subscribeToModel --[[ @ 0]]
	AmmoWidgetBountyBag = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetBall( AmmoWidgetCarryItemBattery, AmmoWidgetBountyBag["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_scoped"]], function ( f29_arg0 )
		f1_arg0:updateElementState( AmmoWidgetSDBomb, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f29_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_scoped"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoWidgetCarryItemBattery = AmmoWidgetSDBomb --[[ @ 0]]
	AmmoWidgetBall = AmmoWidgetSDBomb.subscribeToModel --[[ @ 0]]
	AmmoWidgetBountyBag = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetBall( AmmoWidgetCarryItemBattery, AmmoWidgetBountyBag["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_scoreboard_open"]], function ( f30_arg0 )
		f1_arg0:updateElementState( AmmoWidgetSDBomb, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f30_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_scoreboard_open"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoWidgetCarryItemBattery = AmmoWidgetSDBomb --[[ @ 0]]
	AmmoWidgetBall = AmmoWidgetSDBomb.subscribeToModel --[[ @ 0]]
	AmmoWidgetBountyBag = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetBall( AmmoWidgetCarryItemBattery, AmmoWidgetBountyBag["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_ui_active"]], function ( f31_arg0 )
		f1_arg0:updateElementState( AmmoWidgetSDBomb, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f31_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_ui_active"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoWidgetCarryItemBattery = AmmoWidgetSDBomb --[[ @ 0]]
	AmmoWidgetBall = AmmoWidgetSDBomb.subscribeToModel --[[ @ 0]]
	AmmoWidgetBountyBag = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetBall( AmmoWidgetCarryItemBattery, AmmoWidgetBountyBag["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_weapon_hud_visible"]], function ( f32_arg0 )
		f1_arg0:updateElementState( AmmoWidgetSDBomb, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f32_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_weapon_hud_visible"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoWidgetCarryItemBattery = AmmoWidgetSDBomb --[[ @ 0]]
	AmmoWidgetBall = AmmoWidgetSDBomb.subscribeToModel --[[ @ 0]]
	AmmoWidgetBountyBag = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetBall( AmmoWidgetCarryItemBattery, AmmoWidgetBountyBag["hudItems.SDBombClient"], function ( f33_arg0 )
		f1_arg0:updateElementState( AmmoWidgetSDBomb, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f33_arg0:get(),
			modelName = "hudItems.SDBombClient"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoWidgetCarryItemBattery = AmmoWidgetSDBomb --[[ @ 0]]
	AmmoWidgetBall = AmmoWidgetSDBomb.subscribeToModel --[[ @ 0]]
	AmmoWidgetBountyBag = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetBall( AmmoWidgetCarryItemBattery, AmmoWidgetBountyBag["deadSpectator.playerIndex"], function ( f34_arg0 )
		f1_arg0:updateElementState( AmmoWidgetSDBomb, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f34_arg0:get(),
			modelName = "deadSpectator.playerIndex"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoWidgetCarryItemBattery = AmmoWidgetSDBomb --[[ @ 0]]
	AmmoWidgetBall = AmmoWidgetSDBomb.subscribeToModel --[[ @ 0]]
	AmmoWidgetBountyBag = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetBall( AmmoWidgetCarryItemBattery, AmmoWidgetBountyBag["Demolition.defending"], function ( f35_arg0 )
		f1_arg0:updateElementState( AmmoWidgetSDBomb, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f35_arg0:get(),
			modelName = "Demolition.defending"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoWidgetCarryItemBattery = AmmoWidgetSDBomb --[[ @ 0]]
	AmmoWidgetBall = AmmoWidgetSDBomb.subscribeToModel --[[ @ 0]]
	AmmoWidgetBountyBag = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetBall( AmmoWidgetCarryItemBattery, AmmoWidgetBountyBag["SearchAndDestroy.defending"], function ( f36_arg0 )
		f1_arg0:updateElementState( AmmoWidgetSDBomb, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f36_arg0:get(),
			modelName = "SearchAndDestroy.defending"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoWidgetCarryItemBattery = AmmoWidgetSDBomb --[[ @ 0]]
	AmmoWidgetBall = AmmoWidgetSDBomb.subscribeToModel --[[ @ 0]]
	AmmoWidgetBountyBag = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetBall( AmmoWidgetCarryItemBattery, AmmoWidgetBountyBag["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_bomb_timer_a"]], function ( f37_arg0 )
		f1_arg0:updateElementState( AmmoWidgetSDBomb, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f37_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_bomb_timer_a"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoWidgetCarryItemBattery = AmmoWidgetSDBomb --[[ @ 0]]
	AmmoWidgetBall = AmmoWidgetSDBomb.subscribeToModel --[[ @ 0]]
	AmmoWidgetBountyBag = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetBall( AmmoWidgetCarryItemBattery, AmmoWidgetBountyBag["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_bomb_timer_b"]], function ( f38_arg0 )
		f1_arg0:updateElementState( AmmoWidgetSDBomb, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f38_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_bomb_timer_b"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoWidgetCarryItemBattery = AmmoWidgetSDBomb --[[ @ 0]]
	AmmoWidgetBall = AmmoWidgetSDBomb.subscribeToModel --[[ @ 0]]
	AmmoWidgetBountyBag = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetBall( AmmoWidgetCarryItemBattery, AmmoWidgetBountyBag["factions.isCoDCaster"], function ( f39_arg0 )
		f1_arg0:updateElementState( AmmoWidgetSDBomb, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f39_arg0:get(),
			modelName = "factions.isCoDCaster"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:addElement( AmmoWidgetSDBomb ) --[[ @ 0]]
	self.AmmoWidgetSDBomb = AmmoWidgetSDBomb --[[ @ 0]]
	
	AmmoWidgetBall = CoD.AmmoWidget_Ball.new( f1_arg0, f1_arg1, 0, 0, 15.5, 120.5, 0, 0, 37.5, 142.5 ) --[[ @ 0]]
	AmmoWidgetBall:mergeStateConditions( {
		{
			stateName = "Hide",
			condition = function ( menu, element, event )
				local f40_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_demo_all_game_hud_hidden"] ) --[[ @ 0]]
				if not f40_local0 then
					f40_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_demo_camera_mode_moviecam"] ) --[[ @ 0]]
					if not f40_local0 then
						f40_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_emp_active"] ) --[[ @ 0]]
						if not f40_local0 then
							f40_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_game_ended"] ) --[[ @ 0]]
							if not f40_local0 then
								if Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_hud_visible"] ) then
									f40_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_guided_missile"] ) --[[ @ 0]]
									if not f40_local0 then
										f40_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_killcam"] ) --[[ @ 0]]
										if not f40_local0 then
											f40_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_remote_killstreak_static"] ) --[[ @ 0]]
											if not f40_local0 then
												f40_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_vehicle"] ) --[[ @ 0]]
												if not f40_local0 then
													f40_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_is_flash_banged"] ) --[[ @ 0]]
													if not f40_local0 then
														f40_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_is_scoped"] ) --[[ @ 0]]
														if not f40_local0 then
															f40_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_scoreboard_open"] ) --[[ @ 0]]
															if not f40_local0 then
																f40_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_ui_active"] ) --[[ @ 0]]
																if not f40_local0 then
																	f40_local0 = not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_weapon_hud_visible"] ) --[[ @ 0]]
																end
															end
														end
													end
												end
											end
										end
									end
								else
									f40_local0 = true --[[ @ 0]]
								end
							end
						end
					end
				end
				return f40_local0
			end
		}
	} ) --[[ @ 0]]
	AmmoWidgetBountyBag = AmmoWidgetBall --[[ @ 0]]
	AmmoWidgetCarryItemBattery = AmmoWidgetBall.subscribeToModel --[[ @ 0]]
	local AmmoWidgetctfflag = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetCarryItemBattery( AmmoWidgetBountyBag, AmmoWidgetctfflag["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_demo_all_game_hud_hidden"]], function ( f41_arg0 )
		f1_arg0:updateElementState( AmmoWidgetBall, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f41_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_demo_all_game_hud_hidden"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoWidgetBountyBag = AmmoWidgetBall --[[ @ 0]]
	AmmoWidgetCarryItemBattery = AmmoWidgetBall.subscribeToModel --[[ @ 0]]
	AmmoWidgetctfflag = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetCarryItemBattery( AmmoWidgetBountyBag, AmmoWidgetctfflag["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_demo_camera_mode_moviecam"]], function ( f42_arg0 )
		f1_arg0:updateElementState( AmmoWidgetBall, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f42_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_demo_camera_mode_moviecam"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoWidgetBountyBag = AmmoWidgetBall --[[ @ 0]]
	AmmoWidgetCarryItemBattery = AmmoWidgetBall.subscribeToModel --[[ @ 0]]
	AmmoWidgetctfflag = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetCarryItemBattery( AmmoWidgetBountyBag, AmmoWidgetctfflag["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_emp_active"]], function ( f43_arg0 )
		f1_arg0:updateElementState( AmmoWidgetBall, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f43_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_emp_active"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoWidgetBountyBag = AmmoWidgetBall --[[ @ 0]]
	AmmoWidgetCarryItemBattery = AmmoWidgetBall.subscribeToModel --[[ @ 0]]
	AmmoWidgetctfflag = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetCarryItemBattery( AmmoWidgetBountyBag, AmmoWidgetctfflag["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_game_ended"]], function ( f44_arg0 )
		f1_arg0:updateElementState( AmmoWidgetBall, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f44_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_game_ended"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoWidgetBountyBag = AmmoWidgetBall --[[ @ 0]]
	AmmoWidgetCarryItemBattery = AmmoWidgetBall.subscribeToModel --[[ @ 0]]
	AmmoWidgetctfflag = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetCarryItemBattery( AmmoWidgetBountyBag, AmmoWidgetctfflag["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_hud_visible"]], function ( f45_arg0 )
		f1_arg0:updateElementState( AmmoWidgetBall, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f45_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_hud_visible"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoWidgetBountyBag = AmmoWidgetBall --[[ @ 0]]
	AmmoWidgetCarryItemBattery = AmmoWidgetBall.subscribeToModel --[[ @ 0]]
	AmmoWidgetctfflag = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetCarryItemBattery( AmmoWidgetBountyBag, AmmoWidgetctfflag["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_guided_missile"]], function ( f46_arg0 )
		f1_arg0:updateElementState( AmmoWidgetBall, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f46_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_guided_missile"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoWidgetBountyBag = AmmoWidgetBall --[[ @ 0]]
	AmmoWidgetCarryItemBattery = AmmoWidgetBall.subscribeToModel --[[ @ 0]]
	AmmoWidgetctfflag = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetCarryItemBattery( AmmoWidgetBountyBag, AmmoWidgetctfflag["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_killcam"]], function ( f47_arg0 )
		f1_arg0:updateElementState( AmmoWidgetBall, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f47_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_killcam"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoWidgetBountyBag = AmmoWidgetBall --[[ @ 0]]
	AmmoWidgetCarryItemBattery = AmmoWidgetBall.subscribeToModel --[[ @ 0]]
	AmmoWidgetctfflag = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetCarryItemBattery( AmmoWidgetBountyBag, AmmoWidgetctfflag["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_remote_killstreak_static"]], function ( f48_arg0 )
		f1_arg0:updateElementState( AmmoWidgetBall, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f48_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_remote_killstreak_static"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoWidgetBountyBag = AmmoWidgetBall --[[ @ 0]]
	AmmoWidgetCarryItemBattery = AmmoWidgetBall.subscribeToModel --[[ @ 0]]
	AmmoWidgetctfflag = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetCarryItemBattery( AmmoWidgetBountyBag, AmmoWidgetctfflag["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_vehicle"]], function ( f49_arg0 )
		f1_arg0:updateElementState( AmmoWidgetBall, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f49_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_vehicle"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoWidgetBountyBag = AmmoWidgetBall --[[ @ 0]]
	AmmoWidgetCarryItemBattery = AmmoWidgetBall.subscribeToModel --[[ @ 0]]
	AmmoWidgetctfflag = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetCarryItemBattery( AmmoWidgetBountyBag, AmmoWidgetctfflag["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_flash_banged"]], function ( f50_arg0 )
		f1_arg0:updateElementState( AmmoWidgetBall, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f50_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_flash_banged"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoWidgetBountyBag = AmmoWidgetBall --[[ @ 0]]
	AmmoWidgetCarryItemBattery = AmmoWidgetBall.subscribeToModel --[[ @ 0]]
	AmmoWidgetctfflag = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetCarryItemBattery( AmmoWidgetBountyBag, AmmoWidgetctfflag["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_scoped"]], function ( f51_arg0 )
		f1_arg0:updateElementState( AmmoWidgetBall, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f51_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_scoped"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoWidgetBountyBag = AmmoWidgetBall --[[ @ 0]]
	AmmoWidgetCarryItemBattery = AmmoWidgetBall.subscribeToModel --[[ @ 0]]
	AmmoWidgetctfflag = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetCarryItemBattery( AmmoWidgetBountyBag, AmmoWidgetctfflag["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_scoreboard_open"]], function ( f52_arg0 )
		f1_arg0:updateElementState( AmmoWidgetBall, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f52_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_scoreboard_open"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoWidgetBountyBag = AmmoWidgetBall --[[ @ 0]]
	AmmoWidgetCarryItemBattery = AmmoWidgetBall.subscribeToModel --[[ @ 0]]
	AmmoWidgetctfflag = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetCarryItemBattery( AmmoWidgetBountyBag, AmmoWidgetctfflag["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_ui_active"]], function ( f53_arg0 )
		f1_arg0:updateElementState( AmmoWidgetBall, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f53_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_ui_active"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoWidgetBountyBag = AmmoWidgetBall --[[ @ 0]]
	AmmoWidgetCarryItemBattery = AmmoWidgetBall.subscribeToModel --[[ @ 0]]
	AmmoWidgetctfflag = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetCarryItemBattery( AmmoWidgetBountyBag, AmmoWidgetctfflag["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_weapon_hud_visible"]], function ( f54_arg0 )
		f1_arg0:updateElementState( AmmoWidgetBall, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f54_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_weapon_hud_visible"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoWidgetBountyBag = AmmoWidgetBall --[[ @ 0]]
	AmmoWidgetCarryItemBattery = AmmoWidgetBall.subscribeToModel --[[ @ 0]]
	AmmoWidgetctfflag = DataSources.CurrentWeapon.getModel( f1_arg1 ) --[[ @ 0]]
	AmmoWidgetCarryItemBattery( AmmoWidgetBountyBag, AmmoWidgetctfflag.viewmodelWeaponName, function ( f55_arg0 )
		f1_arg0:updateElementState( AmmoWidgetBall, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f55_arg0:get(),
			modelName = "viewmodelWeaponName"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoWidgetBall:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( AmmoWidgetBall ) --[[ @ 0]]
	self.AmmoWidgetBall = AmmoWidgetBall --[[ @ 0]]
	
	AmmoWidgetCarryItemBattery = CoD.AmmoWidget_CarryItem_Battery.new( f1_arg0, f1_arg1, 0, 0, 16, 121, 0, 0, 37, 142 ) --[[ @ 0]]
	AmmoWidgetCarryItemBattery:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( AmmoWidgetCarryItemBattery ) --[[ @ 0]]
	self.AmmoWidgetCarryItemBattery = AmmoWidgetCarryItemBattery --[[ @ 0]]
	
	AmmoWidgetBountyBag = CoD.AmmoWidget_BountyBag.new( f1_arg0, f1_arg1, 0, 0, 16.5, 121.5, 0, 0, 37.5, 142.5 ) --[[ @ 0]]
	self:addElement( AmmoWidgetBountyBag ) --[[ @ 0]]
	self.AmmoWidgetBountyBag = AmmoWidgetBountyBag --[[ @ 0]]
	
	AmmoWidgetctfflag = CoD.AmmoWidget_ctfflag.new( f1_arg0, f1_arg1, 0, 0, 16.5, 121.5, 0, 0, 37.5, 142.5 ) --[[ @ 0]]
	self:addElement( AmmoWidgetctfflag ) --[[ @ 0]]
	self.AmmoWidgetctfflag = AmmoWidgetctfflag --[[ @ 0]]
	
	local AmmoWidgetCleanTacos = CoD.AmmoWidget_CleanTacos.new( f1_arg0, f1_arg1, 0, 0, 17, 122, 0, 0, 37.5, 142.5 ) --[[ @ 0]]
	AmmoWidgetCleanTacos:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( AmmoWidgetCleanTacos ) --[[ @ 0]]
	self.AmmoWidgetCleanTacos = AmmoWidgetCleanTacos --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Fracture",
			condition = function ( menu, element, event )
				return CoD.HUDUtility.IsGameTypeEqualToString( "clean" )
			end
		},
		{
			stateName = "WeaponDual",
			condition = function ( menu, element, event )
				local f57_local0 = WeaponUsesAmmo( f1_arg1 ) --[[ @ 0]]
				if f57_local0 then
					f57_local0 = CoD.ModelUtility.IsGlobalDataSourceModelValueGreaterThan( f1_arg1, "CurrentWeapon", "ammoInDWClip", -1 ) --[[ @ 0]]
					if f57_local0 then
						f57_local0 = not CoD.HUDUtility.IsCurrentViewmodelWeaponGamemodeHiddenDWAmmo( f1_arg1 ) --[[ @ 0]]
					end
				end
				return f57_local0
			end
		},
		{
			stateName = "Hide",
			condition = function ( menu, element, event )
				return AlwaysTrue()
			end
		}
	} ) --[[ @ 0]]
	local f1_local8 = self --[[ @ 0]]
	local f1_local9 = self.subscribeToModel --[[ @ 0]]
	local f1_local10 = DataSources.CurrentWeapon.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local9( f1_local8, f1_local10.weapon, function ( f59_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f59_arg0:get(),
			modelName = "weapon"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local8 = self --[[ @ 0]]
	f1_local9 = self.subscribeToModel --[[ @ 0]]
	f1_local10 = DataSources.CurrentWeapon.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local9( f1_local8, f1_local10.ammoInDWClip, function ( f60_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f60_arg0:get(),
			modelName = "ammoInDWClip"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local8 = self --[[ @ 0]]
	f1_local9 = self.subscribeToModel --[[ @ 0]]
	f1_local10 = DataSources.CurrentWeapon.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local9( f1_local8, f1_local10.viewmodelWeaponName, function ( f61_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f61_arg0:get(),
			modelName = "viewmodelWeaponName"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.AmmoWidgetMP_HeldItem.__resetProperties = function ( f62_arg0 )
	f62_arg0.AmmoWidgetSDBomb:completeAnimation() --[[ @ 0]]
	f62_arg0.AmmoWidgetBountyBag:completeAnimation() --[[ @ 0]]
	f62_arg0.AmmoWidgetCleanTacos:completeAnimation() --[[ @ 0]]
	f62_arg0.AmmoWidgetBall:completeAnimation() --[[ @ 0]]
	f62_arg0.AmmoWidgetSDBomb:setLeftRight( 0, 0, 16.5, 121.5 ) --[[ @ 0]]
	f62_arg0.AmmoWidgetSDBomb:setTopBottom( 0, 0, 37.5, 142.5 ) --[[ @ 0]]
	f62_arg0.AmmoWidgetSDBomb:setAlpha( 1 ) --[[ @ 0]]
	f62_arg0.AmmoWidgetBountyBag:setAlpha( 1 ) --[[ @ 0]]
	f62_arg0.AmmoWidgetCleanTacos:setAlpha( 0 ) --[[ @ 0]]
	f62_arg0.AmmoWidgetBall:setLeftRight( 0, 0, 15.5, 120.5 ) --[[ @ 0]]
	f62_arg0.AmmoWidgetBall:setTopBottom( 0, 0, 37.5, 142.5 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.AmmoWidgetMP_HeldItem.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f63_arg0, f63_arg1 )
			f63_arg0:__resetProperties() --[[ @ 0]]
			f63_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f63_arg0.AmmoWidgetSDBomb:completeAnimation() --[[ @ 0]]
			f63_arg0.AmmoWidgetSDBomb:setAlpha( 0 ) --[[ @ 0]]
			f63_arg0.clipFinished( f63_arg0.AmmoWidgetSDBomb ) --[[ @ 0]]
		end
	},
	Fracture = {
		DefaultClip = function ( f64_arg0, f64_arg1 )
			f64_arg0:__resetProperties() --[[ @ 0]]
			f64_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f64_arg0.AmmoWidgetSDBomb:completeAnimation() --[[ @ 0]]
			f64_arg0.AmmoWidgetSDBomb:setAlpha( 0 ) --[[ @ 0]]
			f64_arg0.clipFinished( f64_arg0.AmmoWidgetSDBomb ) --[[ @ 0]]
			f64_arg0.AmmoWidgetBountyBag:completeAnimation() --[[ @ 0]]
			f64_arg0.AmmoWidgetBountyBag:setAlpha( 0 ) --[[ @ 0]]
			f64_arg0.clipFinished( f64_arg0.AmmoWidgetBountyBag ) --[[ @ 0]]
			f64_arg0.AmmoWidgetCleanTacos:completeAnimation() --[[ @ 0]]
			f64_arg0.AmmoWidgetCleanTacos:setAlpha( 1 ) --[[ @ 0]]
			f64_arg0.clipFinished( f64_arg0.AmmoWidgetCleanTacos ) --[[ @ 0]]
		end
	},
	WeaponDual = {
		DefaultClip = function ( f65_arg0, f65_arg1 )
			f65_arg0:__resetProperties() --[[ @ 0]]
			f65_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f65_arg0.AmmoWidgetSDBomb:completeAnimation() --[[ @ 0]]
			f65_arg0.AmmoWidgetSDBomb:setLeftRight( 0, 0, -106.5, -1.5 ) --[[ @ 0]]
			f65_arg0.AmmoWidgetSDBomb:setTopBottom( 0, 0, 39.5, 144.5 ) --[[ @ 0]]
			f65_arg0.clipFinished( f65_arg0.AmmoWidgetSDBomb ) --[[ @ 0]]
			f65_arg0.AmmoWidgetBall:completeAnimation() --[[ @ 0]]
			f65_arg0.AmmoWidgetBall:setLeftRight( 0, 0, -106.5, -1.5 ) --[[ @ 0]]
			f65_arg0.AmmoWidgetBall:setTopBottom( 0, 0, 39.5, 144.5 ) --[[ @ 0]]
			f65_arg0.clipFinished( f65_arg0.AmmoWidgetBall ) --[[ @ 0]]
		end
	},
	Hide = {
		DefaultClip = function ( f66_arg0, f66_arg1 )
			f66_arg0:__resetProperties() --[[ @ 0]]
			f66_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.AmmoWidgetMP_HeldItem.__onClose = function ( f67_arg0 )
	f67_arg0.AmmoWidgetCPDataPackage:close() --[[ @ 0]]
	f67_arg0.AmmoWidgetSDBomb:close() --[[ @ 0]]
	f67_arg0.AmmoWidgetBall:close() --[[ @ 0]]
	f67_arg0.AmmoWidgetCarryItemBattery:close() --[[ @ 0]]
	f67_arg0.AmmoWidgetBountyBag:close() --[[ @ 0]]
	f67_arg0.AmmoWidgetctfflag:close() --[[ @ 0]]
	f67_arg0.AmmoWidgetCleanTacos:close() --[[ @ 0]]
end
 --[[ @ 0]]
