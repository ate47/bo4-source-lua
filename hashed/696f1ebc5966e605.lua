-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:35
require( "x64:51b6cbbf928daf6d" ) --[[ @ 0]]

CoD.LaboratoryOfferNameAndDescription = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.LaboratoryOfferNameAndDescription.__defaultWidth = 480 --[[ @ 0]]
CoD.LaboratoryOfferNameAndDescription.__defaultHeight = 60 --[[ @ 0]]
CoD.LaboratoryOfferNameAndDescription.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.LaboratoryOfferNameAndDescription ) --[[ @ 0]]
	self.id = "LaboratoryOfferNameAndDescription" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	
	local BG = CoD.LaboratoryOfferNameAndDescriptionBackground.new( f1_arg0, f1_arg1, 0.01, 0.99, -26, 26, 0, 0, -16, 104 ) --[[ @ 0]]
	self:addElement( BG ) --[[ @ 0]]
	self.BG = BG --[[ @ 0]]
	
	local name = LUI.UIText.new( 0, 1, 10, -10, 0, 0, 0, 20 ) --[[ @ 0]]
	name:setRGB( 0.58, 0.85, 1 ) --[[ @ 0]]
	name:setTTF( "skorzhen" ) --[[ @ 0]]
	name:setLetterSpacing( 3 ) --[[ @ 0]]
	name:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	name:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	name:linkToElementModel( self, "labelName", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			name:setText( LocalizeToUpperString( f2_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( name ) --[[ @ 0]]
	self.name = name --[[ @ 0]]
	
	local description = LUI.UIText.new( 0, 1, 10, -10, 0, 0, 25, 41 ) --[[ @ 0]]
	description:setRGB( ColorSet.T8__OFF__GRAY.r, ColorSet.T8__OFF__GRAY.g, ColorSet.T8__OFF__GRAY.b ) --[[ @ 0]]
	description:setTTF( "dinnext_regular" ) --[[ @ 0]]
	description:setLetterSpacing( 2 ) --[[ @ 0]]
	description:setLineSpacing( 1 ) --[[ @ 0]]
	description:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	description:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	description:linkToElementModel( self, "description", true, function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			description:setText( Engine[@"hash_4F9F1239CFD921FE"]( f3_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( description ) --[[ @ 0]]
	self.description = description --[[ @ 0]]
	
	LUI.OverrideFunction_CallOriginalFirst( self, "setState", function ( element, controller, f4_arg2, f4_arg3, f4_arg4 )
		if IsSelfInState( self, "Middle" ) then
			SetElementState( self, element, controller, "Middle" ) --[[ @ 0]]
		elseif IsSelfInState( self, "Right" ) then
			SetElementState( self, element, controller, "Right" ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.LaboratoryOfferNameAndDescription.__onClose = function ( f5_arg0 )
	f5_arg0.BG:close() --[[ @ 0]]
	f5_arg0.name:close() --[[ @ 0]]
	f5_arg0.description:close() --[[ @ 0]]
end
 --[[ @ 0]]
