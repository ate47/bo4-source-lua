-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:33
require( "ui/uieditor/widgets/pc/startmenu/controlsoptions/pc_startmenu_options_controls_keyvisual" ) --[[ @ 0]]
require( "ui/uieditor/widgets/pc/startmenu/pc_highlightborder" ) --[[ @ 0]]

CoD.PC_StartMenu_Options_Controls_KeyBind = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.PC_StartMenu_Options_Controls_KeyBind.__defaultWidth = 168 --[[ @ 0]]
CoD.PC_StartMenu_Options_Controls_KeyBind.__defaultHeight = 65 --[[ @ 0]]
CoD.PC_StartMenu_Options_Controls_KeyBind.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.PC_StartMenu_Options_Controls_KeyBind ) --[[ @ 0]]
	self.id = "PC_StartMenu_Options_Controls_KeyBind" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local KeyVisual = CoD.PC_StartMenu_Options_Controls_KeyVisual.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0.5, 0.5, -18.5, 18.5 ) --[[ @ 0]]
	KeyVisual:setRGB( 0.76, 0.76, 0.76 ) --[[ @ 0]]
	self:addElement( KeyVisual ) --[[ @ 0]]
	self.KeyVisual = KeyVisual --[[ @ 0]]
	
	local PCHighlightBorder = CoD.PC_HighlightBorder.new( f1_arg0, f1_arg1, 0, 1, 0, 0, -0, 1, 0, 0 ) --[[ @ 0]]
	PCHighlightBorder:mergeStateConditions( {
		{
			stateName = "Disabled",
			condition = function ( menu, element, event )
				return IsGamepad( f1_arg1 )
			end
		}
	} ) --[[ @ 0]]
	PCHighlightBorder:appendEventHandler( "input_source_changed", function ( f3_arg0, f3_arg1 )
		f3_arg1.menu = f3_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( PCHighlightBorder, f3_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local f1_local3 = PCHighlightBorder --[[ @ 0]]
	local f1_local4 = PCHighlightBorder.subscribeToModel --[[ @ 0]]
	local f1_local5 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local4( f1_local3, f1_local5.LastInput, function ( f4_arg0 )
		f1_arg0:updateElementState( PCHighlightBorder, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f4_arg0:get(),
			modelName = "LastInput"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:addElement( PCHighlightBorder ) --[[ @ 0]]
	self.PCHighlightBorder = PCHighlightBorder --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Disabled",
			condition = function ( menu, element, event )
				return IsGamepad( f1_arg1 )
			end
		},
		{
			stateName = "Missing",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		},
		{
			stateName = "IsBinding",
			condition = function ( menu, element, event )
				return true
			end
		}
	} ) --[[ @ 0]]
	self:appendEventHandler( "input_source_changed", function ( f8_arg0, f8_arg1 )
		f8_arg1.menu = f8_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( self, f8_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	f1_local3 = self --[[ @ 0]]
	f1_local4 = self.subscribeToModel --[[ @ 0]]
	f1_local5 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local4( f1_local3, f1_local5.LastInput, function ( f9_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f9_arg0:get(),
			modelName = "LastInput"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( self, "setState", function ( element, controller, f10_arg2, f10_arg3, f10_arg4 )
		if IsElementInState( self, "Disabled" ) then
			SetElementState( self, self.PCHighlightBorder, controller, "Disabled" ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.PC_StartMenu_Options_Controls_KeyBind.__resetProperties = function ( f11_arg0 )
	f11_arg0.PCHighlightBorder:completeAnimation() --[[ @ 0]]
	f11_arg0.KeyVisual:completeAnimation() --[[ @ 0]]
	f11_arg0.PCHighlightBorder:setAlpha( 1 ) --[[ @ 0]]
	f11_arg0.KeyVisual:setRGB( 0.76, 0.76, 0.76 ) --[[ @ 0]]
	f11_arg0.KeyVisual:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.PC_StartMenu_Options_Controls_KeyBind.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f12_arg0, f12_arg1 )
			f12_arg0:__resetProperties() --[[ @ 0]]
			f12_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f12_arg0.PCHighlightBorder:completeAnimation() --[[ @ 0]]
			f12_arg0.PCHighlightBorder:playClip( "DefaultClip" ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.PCHighlightBorder ) --[[ @ 0]]
		end,
		Focus = function ( f13_arg0, f13_arg1 )
			f13_arg0:__resetProperties() --[[ @ 0]]
			f13_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f13_arg0.KeyVisual:completeAnimation() --[[ @ 0]]
			f13_arg0.KeyVisual:setRGB( 1, 1, 1 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.KeyVisual ) --[[ @ 0]]
			f13_arg0.PCHighlightBorder:completeAnimation() --[[ @ 0]]
			f13_arg0.PCHighlightBorder:playClip( "cFocus" ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.PCHighlightBorder ) --[[ @ 0]]
		end,
		GainFocus = function ( f14_arg0, f14_arg1 )
			f14_arg0:__resetProperties() --[[ @ 0]]
			f14_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			local f14_local0 = function ( f15_arg0 )
				f14_arg0.KeyVisual:beginAnimation( 150 ) --[[ @ 0]]
				f14_arg0.KeyVisual:setRGB( 1, 1, 1 ) --[[ @ 0]]
				f14_arg0.KeyVisual:registerEventHandler( "interrupted_keyframe", f14_arg0.clipInterrupted ) --[[ @ 0]]
				f14_arg0.KeyVisual:registerEventHandler( "transition_complete_keyframe", f14_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f14_arg0.KeyVisual:completeAnimation() --[[ @ 0]]
			f14_arg0.KeyVisual:setRGB( 0.76, 0.76, 0.76 ) --[[ @ 0]]
			f14_local0( f14_arg0.KeyVisual ) --[[ @ 0]]
			f14_arg0.PCHighlightBorder:completeAnimation() --[[ @ 0]]
			f14_arg0.PCHighlightBorder:playClip( "cGainFocus" ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.PCHighlightBorder ) --[[ @ 0]]
		end,
		LoseFocus = function ( f16_arg0, f16_arg1 )
			f16_arg0:__resetProperties() --[[ @ 0]]
			f16_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			local f16_local0 = function ( f17_arg0 )
				f16_arg0.KeyVisual:beginAnimation( 150 ) --[[ @ 0]]
				f16_arg0.KeyVisual:setRGB( 0.76, 0.76, 0.76 ) --[[ @ 0]]
				f16_arg0.KeyVisual:registerEventHandler( "interrupted_keyframe", f16_arg0.clipInterrupted ) --[[ @ 0]]
				f16_arg0.KeyVisual:registerEventHandler( "transition_complete_keyframe", f16_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f16_arg0.KeyVisual:completeAnimation() --[[ @ 0]]
			f16_arg0.KeyVisual:setRGB( 1, 1, 1 ) --[[ @ 0]]
			f16_local0( f16_arg0.KeyVisual ) --[[ @ 0]]
			f16_arg0.PCHighlightBorder:completeAnimation() --[[ @ 0]]
			f16_arg0.PCHighlightBorder:playClip( "cLoseFocus" ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.PCHighlightBorder ) --[[ @ 0]]
		end
	},
	Disabled = {
		DefaultClip = function ( f18_arg0, f18_arg1 )
			f18_arg0:__resetProperties() --[[ @ 0]]
			f18_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f18_arg0.KeyVisual:completeAnimation() --[[ @ 0]]
			f18_arg0.KeyVisual:setAlpha( 0.75 ) --[[ @ 0]]
			f18_arg0.clipFinished( f18_arg0.KeyVisual ) --[[ @ 0]]
			f18_arg0.PCHighlightBorder:completeAnimation() --[[ @ 0]]
			f18_arg0.PCHighlightBorder:setAlpha( 1 ) --[[ @ 0]]
			f18_arg0.clipFinished( f18_arg0.PCHighlightBorder ) --[[ @ 0]]
		end
	},
	Missing = {
		DefaultClip = function ( f19_arg0, f19_arg1 )
			f19_arg0:__resetProperties() --[[ @ 0]]
			f19_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f19_arg0.KeyVisual:completeAnimation() --[[ @ 0]]
			f19_arg0.KeyVisual:setRGB( ColorSet.T8__RED.r, ColorSet.T8__RED.g, ColorSet.T8__RED.b ) --[[ @ 0]]
			f19_arg0.clipFinished( f19_arg0.KeyVisual ) --[[ @ 0]]
		end
	},
	IsBinding = {
		DefaultClip = function ( f20_arg0, f20_arg1 )
			f20_arg0:__resetProperties() --[[ @ 0]]
			f20_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f20_local0 = function ( f21_arg0 )
				local f21_local0 = function ( f22_arg0 )
					local f22_local0 = function ( f23_arg0 )
						local f23_local0 = function ( f24_arg0 )
							f24_arg0:beginAnimation( 390 ) --[[ @ 0]]
							f24_arg0:setAlpha( 0 ) --[[ @ 0]]
							f24_arg0:registerEventHandler( "transition_complete_keyframe", f20_arg0.clipFinished ) --[[ @ 0]]
						end
						 --[[ @ 0]]
						f23_arg0:beginAnimation( 380 ) --[[ @ 0]]
						f23_arg0:setAlpha( 1 ) --[[ @ 0]]
						f23_arg0:registerEventHandler( "transition_complete_keyframe", f23_local0 ) --[[ @ 0]]
					end
					 --[[ @ 0]]
					f22_arg0:beginAnimation( 420 ) --[[ @ 0]]
					f22_arg0:setAlpha( 0 ) --[[ @ 0]]
					f22_arg0:registerEventHandler( "transition_complete_keyframe", f22_local0 ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f20_arg0.KeyVisual:beginAnimation( 310 ) --[[ @ 0]]
				f20_arg0.KeyVisual:setAlpha( 1 ) --[[ @ 0]]
				f20_arg0.KeyVisual:registerEventHandler( "interrupted_keyframe", f20_arg0.clipInterrupted ) --[[ @ 0]]
				f20_arg0.KeyVisual:registerEventHandler( "transition_complete_keyframe", f21_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f20_arg0.KeyVisual:completeAnimation() --[[ @ 0]]
			f20_arg0.KeyVisual:setAlpha( 0 ) --[[ @ 0]]
			f20_local0( f20_arg0.KeyVisual ) --[[ @ 0]]
			f20_arg0.nextClip = "DefaultClip" --[[ @ 0]]
		end,
		Focus = function ( f25_arg0, f25_arg1 )
			f25_arg0:__resetProperties() --[[ @ 0]]
			f25_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f25_local0 = function ( f26_arg0 )
				local f26_local0 = function ( f27_arg0 )
					local f27_local0 = function ( f28_arg0 )
						local f28_local0 = function ( f29_arg0 )
							f29_arg0:beginAnimation( 390 ) --[[ @ 0]]
							f29_arg0:setAlpha( 0 ) --[[ @ 0]]
							f29_arg0:registerEventHandler( "transition_complete_keyframe", f25_arg0.clipFinished ) --[[ @ 0]]
						end
						 --[[ @ 0]]
						f28_arg0:beginAnimation( 380 ) --[[ @ 0]]
						f28_arg0:setAlpha( 1 ) --[[ @ 0]]
						f28_arg0:registerEventHandler( "transition_complete_keyframe", f28_local0 ) --[[ @ 0]]
					end
					 --[[ @ 0]]
					f27_arg0:beginAnimation( 420 ) --[[ @ 0]]
					f27_arg0:setAlpha( 0 ) --[[ @ 0]]
					f27_arg0:registerEventHandler( "transition_complete_keyframe", f27_local0 ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f25_arg0.KeyVisual:beginAnimation( 310 ) --[[ @ 0]]
				f25_arg0.KeyVisual:setAlpha( 1 ) --[[ @ 0]]
				f25_arg0.KeyVisual:registerEventHandler( "interrupted_keyframe", f25_arg0.clipInterrupted ) --[[ @ 0]]
				f25_arg0.KeyVisual:registerEventHandler( "transition_complete_keyframe", f26_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f25_arg0.KeyVisual:completeAnimation() --[[ @ 0]]
			f25_arg0.KeyVisual:setAlpha( 0 ) --[[ @ 0]]
			f25_local0( f25_arg0.KeyVisual ) --[[ @ 0]]
			f25_arg0.nextClip = "Focus" --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.PC_StartMenu_Options_Controls_KeyBind.__onClose = function ( f30_arg0 )
	f30_arg0.KeyVisual:close() --[[ @ 0]]
	f30_arg0.PCHighlightBorder:close() --[[ @ 0]]
end
 --[[ @ 0]]
