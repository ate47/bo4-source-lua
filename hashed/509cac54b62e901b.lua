-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
require( "x64:c96de52191fe142" ) --[[ @ 0]]
require( "x64:3e272191e46af824" ) --[[ @ 0]]

CoD.ReservesLootCaseButton = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.ReservesLootCaseButton.__defaultWidth = 160 --[[ @ 0]]
CoD.ReservesLootCaseButton.__defaultHeight = 144 --[[ @ 0]]
CoD.ReservesLootCaseButton.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.ReservesLootCaseButton ) --[[ @ 0]]
	self.id = "ReservesLootCaseButton" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local BackingPattern = LUI.UIImage.new( 0, 0, 0, 160, 0, 0, 5, 139 ) --[[ @ 0]]
	BackingPattern:setImage( RegisterImage( @"hash_1CE66051AE2B8DC3" ) ) --[[ @ 0]]
	BackingPattern:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_1A02C44161370F6D" ) ) --[[ @ 0]]
	BackingPattern:setShaderVector( 0, 0.5, 0.5, 0, 0 ) --[[ @ 0]]
	BackingPattern:setShaderVector( 1, 1, 1, 0, 0 ) --[[ @ 0]]
	BackingPattern:setShaderVector( 2, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( BackingPattern ) --[[ @ 0]]
	self.BackingPattern = BackingPattern --[[ @ 0]]
	
	local FocusGlow = LUI.UIImage.new( 0, 1, -78, 78, 0, 1, -70, 70 ) --[[ @ 0]]
	FocusGlow:setAlpha( 0 ) --[[ @ 0]]
	FocusGlow:setImage( RegisterImage( @"uie_ui_menu_common_focus_glow_small" ) ) --[[ @ 0]]
	FocusGlow:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_6DAB59B2CAE01851" ) ) --[[ @ 0]]
	FocusGlow:setShaderVector( 0, 0, 0, 0.24, 0.24 ) --[[ @ 0]]
	FocusGlow:setShaderVector( 1, 1.2, 0, 0, 0 ) --[[ @ 0]]
	FocusGlow:setupNineSliceShader( 160, 160 ) --[[ @ 0]]
	self:addElement( FocusGlow ) --[[ @ 0]]
	self.FocusGlow = FocusGlow --[[ @ 0]]
	
	local NineSliceBMFrame = LUI.UIImage.new( 0, 1, -3, 3, 0, 1, -3, 3 ) --[[ @ 0]]
	NineSliceBMFrame:setImage( RegisterImage( @"hash_71AC151A09D526DC" ) ) --[[ @ 0]]
	NineSliceBMFrame:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_normal" ) ) --[[ @ 0]]
	NineSliceBMFrame:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	NineSliceBMFrame:setupNineSliceShader( 162, 52 ) --[[ @ 0]]
	self:addElement( NineSliceBMFrame ) --[[ @ 0]]
	self.NineSliceBMFrame = NineSliceBMFrame --[[ @ 0]]
	
	local TextBacking = LUI.UIImage.new( 0, 1, 2.5, -1.5, 0, 0, 11, 30 ) --[[ @ 0]]
	TextBacking:setRGB( 0.89, 0.87, 0.75 ) --[[ @ 0]]
	self:addElement( TextBacking ) --[[ @ 0]]
	self.TextBacking = TextBacking --[[ @ 0]]
	
	local Title = LUI.UIText.new( 0, 0, 7, 159, 0, 0, 12, 30 ) --[[ @ 0]]
	Title:setRGB( 0.11, 0.11, 0.11 ) --[[ @ 0]]
	Title:setText( LocalizeToUpperString( @"hash_1C61EEBB551BECCD" ) ) --[[ @ 0]]
	Title:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	Title:setLetterSpacing( 2 ) --[[ @ 0]]
	Title:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	Title:setAlignment( Enum[@"LUIAlignment"][@"hash_E821F0ECFF8D1C7"] ) --[[ @ 0]]
	self:addElement( Title ) --[[ @ 0]]
	self.Title = Title --[[ @ 0]]
	
	local LootCaseMeter = CoD.AARTierRewardLootCaseMeter.new( f1_arg0, f1_arg1, 0.5, 0.5, -75, 75, 0, 0, 9.5, 159.5 ) --[[ @ 0]]
	LootCaseMeter:mergeStateConditions( {
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		}
	} ) --[[ @ 0]]
	LootCaseMeter:setScale( 0.6, 0.6 ) --[[ @ 0]]
	LootCaseMeter.PreviousProgressRing:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	LootCaseMeter:subscribeToGlobalModel( f1_arg1, "LootStreamProgress", "caseProgress", function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			LootCaseMeter.CurrentProgressRing:setShaderVector( 0, CoD.GetVectorComponentFromString( f3_local0, 1 ), CoD.GetVectorComponentFromString( f3_local0, 2 ), CoD.GetVectorComponentFromString( f3_local0, 3 ), CoD.GetVectorComponentFromString( f3_local0, 4 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	LootCaseMeter:subscribeToGlobalModel( f1_arg1, "ReservesItemCounts", "lootCaseCount", function ( model )
		local f4_local0 = model:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			LootCaseMeter.CaseCount:setText( f4_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( LootCaseMeter ) --[[ @ 0]]
	self.LootCaseMeter = LootCaseMeter --[[ @ 0]]
	
	local FocusBorder = LUI.UIImage.new( 0, 1, -9, 9, 0, 1, -7, 7 ) --[[ @ 0]]
	FocusBorder:setRGB( 1, 0.75, 0.47 ) --[[ @ 0]]
	FocusBorder:setAlpha( 0 ) --[[ @ 0]]
	FocusBorder:setImage( RegisterImage( @"uie_ui_menu_store_focus_frame" ) ) --[[ @ 0]]
	FocusBorder:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_add" ) ) --[[ @ 0]]
	FocusBorder:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	FocusBorder:setupNineSliceShader( 18, 18 ) --[[ @ 0]]
	self:addElement( FocusBorder ) --[[ @ 0]]
	self.FocusBorder = FocusBorder --[[ @ 0]]
	
	local ItemHintText = CoD.CommonToolTip.new( f1_arg0, f1_arg1, 0.5, 0.5, -86, 86, 1, 1, 0, 45 ) --[[ @ 0]]
	ItemHintText:mergeStateConditions( {
		{
			stateName = "Mouse",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		},
		{
			stateName = "NoHintText",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		},
		{
			stateName = "CenterAlign",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		}
	} ) --[[ @ 0]]
	ItemHintText:setAlpha( 0 ) --[[ @ 0]]
	ItemHintText.textCenterAlign:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_4A5115BE25660ABA" ) ) --[[ @ 0]]
	self:addElement( ItemHintText ) --[[ @ 0]]
	self.ItemHintText = ItemHintText --[[ @ 0]]
	
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.ReservesLootCaseButton.__resetProperties = function ( f8_arg0 )
	f8_arg0.FocusGlow:completeAnimation() --[[ @ 0]]
	f8_arg0.FocusBorder:completeAnimation() --[[ @ 0]]
	f8_arg0.ItemHintText:completeAnimation() --[[ @ 0]]
	f8_arg0.FocusGlow:setAlpha( 0 ) --[[ @ 0]]
	f8_arg0.FocusBorder:setAlpha( 0 ) --[[ @ 0]]
	f8_arg0.ItemHintText:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ReservesLootCaseButton.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f9_arg0, f9_arg1 )
			f9_arg0:__resetProperties() --[[ @ 0]]
			f9_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end,
		Focus = function ( f10_arg0, f10_arg1 )
			f10_arg0:__resetProperties() --[[ @ 0]]
			f10_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f10_arg0.FocusGlow:completeAnimation() --[[ @ 0]]
			f10_arg0.FocusGlow:setAlpha( 1 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.FocusGlow ) --[[ @ 0]]
			f10_arg0.FocusBorder:completeAnimation() --[[ @ 0]]
			f10_arg0.FocusBorder:setAlpha( 1 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.FocusBorder ) --[[ @ 0]]
			local f10_local0 = function ( f11_arg0 )
				local f11_local0 = function ( f12_arg0 )
					f12_arg0:beginAnimation( 199 ) --[[ @ 0]]
					f12_arg0:setAlpha( 0 ) --[[ @ 0]]
					f12_arg0:registerEventHandler( "transition_complete_keyframe", f10_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f10_arg0.ItemHintText:beginAnimation( 5000 ) --[[ @ 0]]
				f10_arg0.ItemHintText:registerEventHandler( "interrupted_keyframe", f10_arg0.clipInterrupted ) --[[ @ 0]]
				f10_arg0.ItemHintText:registerEventHandler( "transition_complete_keyframe", f11_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f10_arg0.ItemHintText:completeAnimation() --[[ @ 0]]
			f10_arg0.ItemHintText:setAlpha( 1 ) --[[ @ 0]]
			f10_local0( f10_arg0.ItemHintText ) --[[ @ 0]]
		end,
		GainFocus = function ( f13_arg0, f13_arg1 )
			f13_arg0:__resetProperties() --[[ @ 0]]
			f13_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			local f13_local0 = function ( f14_arg0 )
				f13_arg0.FocusGlow:beginAnimation( 200 ) --[[ @ 0]]
				f13_arg0.FocusGlow:setAlpha( 1 ) --[[ @ 0]]
				f13_arg0.FocusGlow:registerEventHandler( "interrupted_keyframe", f13_arg0.clipInterrupted ) --[[ @ 0]]
				f13_arg0.FocusGlow:registerEventHandler( "transition_complete_keyframe", f13_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f13_arg0.FocusGlow:completeAnimation() --[[ @ 0]]
			f13_arg0.FocusGlow:setAlpha( 0 ) --[[ @ 0]]
			f13_local0( f13_arg0.FocusGlow ) --[[ @ 0]]
			local f13_local1 = function ( f15_arg0 )
				f13_arg0.FocusBorder:beginAnimation( 200 ) --[[ @ 0]]
				f13_arg0.FocusBorder:setAlpha( 1 ) --[[ @ 0]]
				f13_arg0.FocusBorder:registerEventHandler( "interrupted_keyframe", f13_arg0.clipInterrupted ) --[[ @ 0]]
				f13_arg0.FocusBorder:registerEventHandler( "transition_complete_keyframe", f13_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f13_arg0.FocusBorder:completeAnimation() --[[ @ 0]]
			f13_arg0.FocusBorder:setAlpha( 0 ) --[[ @ 0]]
			f13_local1( f13_arg0.FocusBorder ) --[[ @ 0]]
			local f13_local2 = function ( f16_arg0 )
				f13_arg0.ItemHintText:beginAnimation( 200 ) --[[ @ 0]]
				f13_arg0.ItemHintText:setAlpha( 1 ) --[[ @ 0]]
				f13_arg0.ItemHintText:registerEventHandler( "interrupted_keyframe", f13_arg0.clipInterrupted ) --[[ @ 0]]
				f13_arg0.ItemHintText:registerEventHandler( "transition_complete_keyframe", f13_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f13_arg0.ItemHintText:completeAnimation() --[[ @ 0]]
			f13_arg0.ItemHintText:setAlpha( 0 ) --[[ @ 0]]
			f13_local2( f13_arg0.ItemHintText ) --[[ @ 0]]
		end,
		LoseFocus = function ( f17_arg0, f17_arg1 )
			f17_arg0:__resetProperties() --[[ @ 0]]
			f17_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			local f17_local0 = function ( f18_arg0 )
				f17_arg0.FocusGlow:beginAnimation( 200 ) --[[ @ 0]]
				f17_arg0.FocusGlow:setAlpha( 0 ) --[[ @ 0]]
				f17_arg0.FocusGlow:registerEventHandler( "interrupted_keyframe", f17_arg0.clipInterrupted ) --[[ @ 0]]
				f17_arg0.FocusGlow:registerEventHandler( "transition_complete_keyframe", f17_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f17_arg0.FocusGlow:completeAnimation() --[[ @ 0]]
			f17_arg0.FocusGlow:setAlpha( 1 ) --[[ @ 0]]
			f17_local0( f17_arg0.FocusGlow ) --[[ @ 0]]
			local f17_local1 = function ( f19_arg0 )
				f17_arg0.FocusBorder:beginAnimation( 200 ) --[[ @ 0]]
				f17_arg0.FocusBorder:setAlpha( 0 ) --[[ @ 0]]
				f17_arg0.FocusBorder:registerEventHandler( "interrupted_keyframe", f17_arg0.clipInterrupted ) --[[ @ 0]]
				f17_arg0.FocusBorder:registerEventHandler( "transition_complete_keyframe", f17_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f17_arg0.FocusBorder:completeAnimation() --[[ @ 0]]
			f17_arg0.FocusBorder:setAlpha( 1 ) --[[ @ 0]]
			f17_local1( f17_arg0.FocusBorder ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.ReservesLootCaseButton.__onClose = function ( f20_arg0 )
	f20_arg0.LootCaseMeter:close() --[[ @ 0]]
	f20_arg0.ItemHintText:close() --[[ @ 0]]
end
 --[[ @ 0]]
