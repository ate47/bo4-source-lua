-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:48
require( "ui/uieditor/widgets/controllerdependent_textbox" ) --[[ @ 0]]
require( "x64:39d92dce1e4291ce" ) --[[ @ 0]]
require( "x64:733ec8b4b2fb3c47" ) --[[ @ 0]]
require( "x64:3b8c4e45eb2b0d7" ) --[[ @ 0]]
require( "x64:564f4965c2a27a0f" ) --[[ @ 0]]
require( "x64:2485f9df271d384" ) --[[ @ 0]]
require( "x64:2583b65a500f0240" ) --[[ @ 0]]

CoD.AmmoWidgetMP_Ultimate_Internal = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.AmmoWidgetMP_Ultimate_Internal.__defaultWidth = 268 --[[ @ 0]]
CoD.AmmoWidgetMP_Ultimate_Internal.__defaultHeight = 120 --[[ @ 0]]
CoD.AmmoWidgetMP_Ultimate_Internal.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.AmmoWidgetMP_Ultimate_Internal ) --[[ @ 0]]
	self.id = "AmmoWidgetMP_Ultimate_Internal" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local Blur = LUI.UIImage.new( 0, 0, 79.5, 183.5, 0, 0, 10.5, 120.5 ) --[[ @ 0]]
	Blur:setImage( RegisterImage( @"uie_ui_hud_core_player_widget_panel_hex" ) ) --[[ @ 0]]
	Blur:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_E2354BE557C4C7A" ) ) --[[ @ 0]]
	Blur:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( Blur ) --[[ @ 0]]
	self.Blur = Blur --[[ @ 0]]
	
	local BlurRight = LUI.UIImage.new( 0, 0, 181.5, 248.5, 0, 0, 31.5, 98.5 ) --[[ @ 0]]
	BlurRight:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_E2354BE557C4C7A" ) ) --[[ @ 0]]
	BlurRight:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( BlurRight ) --[[ @ 0]]
	self.BlurRight = BlurRight --[[ @ 0]]
	
	local BlurLeft = LUI.UIImage.new( 0, 0, 16.5, 85.5, 0, 0, 32, 96 ) --[[ @ 0]]
	BlurLeft:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_E2354BE557C4C7A" ) ) --[[ @ 0]]
	BlurLeft:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( BlurLeft ) --[[ @ 0]]
	self.BlurLeft = BlurLeft --[[ @ 0]]
	
	local PanelRight = LUI.UIImage.new( 0, 0, 180, 249, 0, 0, 33.5, 95.5 ) --[[ @ 0]]
	PanelRight:setRGB( 0.18, 0.17, 0.16 ) --[[ @ 0]]
	PanelRight:setAlpha( 0.94 ) --[[ @ 0]]
	self:addElement( PanelRight ) --[[ @ 0]]
	self.PanelRight = PanelRight --[[ @ 0]]
	
	local PanelLeft = LUI.UIImage.new( 0, 0, 17.5, 86.5, 0, 0, 33.5, 95.5 ) --[[ @ 0]]
	PanelLeft:setRGB( 0.18, 0.17, 0.16 ) --[[ @ 0]]
	PanelLeft:setAlpha( 0.94 ) --[[ @ 0]]
	self:addElement( PanelLeft ) --[[ @ 0]]
	self.PanelLeft = PanelLeft --[[ @ 0]]
	
	local Panel = LUI.UIImage.new( 0, 0, 79.5, 183.5, 0, 0, 10.5, 120.5 ) --[[ @ 0]]
	Panel:setRGB( 0.18, 0.17, 0.16 ) --[[ @ 0]]
	Panel:setAlpha( 0.94 ) --[[ @ 0]]
	Panel:setImage( RegisterImage( @"uie_ui_hud_core_player_widget_panel_hex" ) ) --[[ @ 0]]
	self:addElement( Panel ) --[[ @ 0]]
	self.Panel = Panel --[[ @ 0]]
	
	local ControllerDependentTextBox = CoD.ControllerDependent_TextBox.new( f1_arg0, f1_arg1, 0.5, 0.5, -65, 65, 0, 0, -19, 5 ) --[[ @ 0]]
	ControllerDependentTextBox:mergeStateConditions( {
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				local f2_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_killcam"] ) --[[ @ 0]]
				if not f2_local0 then
					f2_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_play_of_the_match"] ) --[[ @ 0]]
					if not f2_local0 then
						f2_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_team_spectator"] ) --[[ @ 0]]
					end
				end
				return f2_local0
			end
		},
		{
			stateName = "KeyboardAndMouse",
			condition = function ( menu, element, event )
				return IsMouseOrKeyboard( f1_arg1 ) and AlwaysFalse()
			end
		},
		{
			stateName = "KeyboardAndMouseAbility",
			condition = function ( menu, element, event )
				return IsMouseOrKeyboard( f1_arg1 ) and AlwaysFalse()
			end
		},
		{
			stateName = "KeyboardAndMouseUltimate",
			condition = function ( menu, element, event )
				return IsMouseOrKeyboard( f1_arg1 ) and AlwaysTrue()
			end
		},
		{
			stateName = "KeyboardAndMouseScoreStreak",
			condition = function ( menu, element, event )
				return IsMouseOrKeyboard( f1_arg1 ) and AlwaysFalse()
			end
		}
	} ) --[[ @ 0]]
	local Frame = ControllerDependentTextBox --[[ @ 0]]
	local TankUseString = ControllerDependentTextBox.subscribeToModel --[[ @ 0]]
	local GlowHero = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	TankUseString( Frame, GlowHero["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_killcam"]], function ( f7_arg0 )
		f1_arg0:updateElementState( ControllerDependentTextBox, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f7_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_killcam"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	Frame = ControllerDependentTextBox --[[ @ 0]]
	TankUseString = ControllerDependentTextBox.subscribeToModel --[[ @ 0]]
	GlowHero = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	TankUseString( Frame, GlowHero["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_play_of_the_match"]], function ( f8_arg0 )
		f1_arg0:updateElementState( ControllerDependentTextBox, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f8_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_play_of_the_match"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	Frame = ControllerDependentTextBox --[[ @ 0]]
	TankUseString = ControllerDependentTextBox.subscribeToModel --[[ @ 0]]
	GlowHero = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	TankUseString( Frame, GlowHero["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_team_spectator"]], function ( f9_arg0 )
		f1_arg0:updateElementState( ControllerDependentTextBox, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f9_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_team_spectator"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ControllerDependentTextBox:appendEventHandler( "input_source_changed", function ( f10_arg0, f10_arg1 )
		f10_arg1.menu = f10_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( ControllerDependentTextBox, f10_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	Frame = ControllerDependentTextBox --[[ @ 0]]
	TankUseString = ControllerDependentTextBox.subscribeToModel --[[ @ 0]]
	GlowHero = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	TankUseString( Frame, GlowHero.LastInput, function ( f11_arg0 )
		f1_arg0:updateElementState( ControllerDependentTextBox, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f11_arg0:get(),
			modelName = "LastInput"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ControllerDependentTextBox:setAlpha( 0 ) --[[ @ 0]]
	ControllerDependentTextBox:setScale( SetCustomScaleDependingOnPlatform( f1_arg1, 1, 1, 0.9, 0.9 ) ) --[[ @ 0]]
	ControllerDependentTextBox.KBMText:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_2EC61C43D90FCF56" ) ) --[[ @ 0]]
	ControllerDependentTextBox.KBMText:setLetterSpacing( 0 ) --[[ @ 0]]
	ControllerDependentTextBox.GamepadText:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_29E6A8D0F83F4FC6" ) ) --[[ @ 0]]
	ControllerDependentTextBox.GamepadText:setLetterSpacing( -0.2 ) --[[ @ 0]]
	ControllerDependentTextBox.GamepadText:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	self:addElement( ControllerDependentTextBox ) --[[ @ 0]]
	self.ControllerDependentTextBox = ControllerDependentTextBox --[[ @ 0]]
	
	TankUseString = CoD.AmmoWidget_AbilityText.new( f1_arg0, f1_arg1, 0.5, 0.5, -58, 58, 0, 0, -42.5, -17.5 ) --[[ @ 0]]
	TankUseString:mergeStateConditions( {
		{
			stateName = "TankInbound",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		},
		{
			stateName = "TankReadyForCommands",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		},
		{
			stateName = "TankEntered",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		}
	} ) --[[ @ 0]]
	GlowHero = TankUseString --[[ @ 0]]
	Frame = TankUseString.subscribeToModel --[[ @ 0]]
	local LED = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	Frame( GlowHero, LED["hudItems.smartCoverState"], function ( f15_arg0 )
		f1_arg0:updateElementState( TankUseString, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f15_arg0:get(),
			modelName = "hudItems.smartCoverState"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	GlowHero = TankUseString --[[ @ 0]]
	Frame = TankUseString.subscribeToModel --[[ @ 0]]
	LED = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	Frame( GlowHero, LED["hudItems.dogState"], function ( f16_arg0 )
		f1_arg0:updateElementState( TankUseString, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f16_arg0:get(),
			modelName = "hudItems.dogState"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	TankUseString:appendEventHandler( "input_source_changed", function ( f17_arg0, f17_arg1 )
		f17_arg1.menu = f17_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( TankUseString, f17_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	GlowHero = TankUseString --[[ @ 0]]
	Frame = TankUseString.subscribeToModel --[[ @ 0]]
	LED = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	Frame( GlowHero, LED.LastInput, function ( f18_arg0 )
		f1_arg0:updateElementState( TankUseString, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f18_arg0:get(),
			modelName = "LastInput"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:addElement( TankUseString ) --[[ @ 0]]
	self.TankUseString = TankUseString --[[ @ 0]]
	
	Frame = LUI.UIImage.new( 0, 0, 0, 268, 0, 0, -10, 140 ) --[[ @ 0]]
	Frame:setImage( RegisterImage( @"uie_ui_hud_core_frame_hero_widget" ) ) --[[ @ 0]]
	self:addElement( Frame ) --[[ @ 0]]
	self.Frame = Frame --[[ @ 0]]
	
	GlowHero = LUI.UIImage.new( 0, 0, 78.5, 188.5, 0, 0, 13, 125 ) --[[ @ 0]]
	GlowHero:setAlpha( 0 ) --[[ @ 0]]
	GlowHero:setImage( RegisterImage( @"uie_ui_hud_core_hero_widget_glow_hero" ) ) --[[ @ 0]]
	GlowHero:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_F755127C95CF5B6" ) ) --[[ @ 0]]
	GlowHero:setShaderVector( 0, 4, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( GlowHero ) --[[ @ 0]]
	self.GlowHero = GlowHero --[[ @ 0]]
	
	LED = LUI.UIImage.new( 0, 0, 79, 183, 0, 0, 11.5, 121.5 ) --[[ @ 0]]
	LED:setRGB( 0, 0, 0 ) --[[ @ 0]]
	LED:setAlpha( 0.3 ) --[[ @ 0]]
	LED:setImage( RegisterImage( @"uie_ui_hud_core_player_widget_led_hex" ) ) --[[ @ 0]]
	self:addElement( LED ) --[[ @ 0]]
	self.LED = LED --[[ @ 0]]
	
	local FullBackingDeployed = LUI.UIImage.new( 0, 0, 100, 164, 0, 0, 35, 95 ) --[[ @ 0]]
	FullBackingDeployed:setRGB( 0.79, 0.55, 0 ) --[[ @ 0]]
	FullBackingDeployed:setAlpha( 0 ) --[[ @ 0]]
	FullBackingDeployed:setZRot( 180 ) --[[ @ 0]]
	FullBackingDeployed:setScale( 1.5, 1.5 ) --[[ @ 0]]
	FullBackingDeployed:setImage( RegisterImage( @"uie_hud_common_core_ammo_panelcenter2" ) ) --[[ @ 0]]
	self:addElement( FullBackingDeployed ) --[[ @ 0]]
	self.FullBackingDeployed = FullBackingDeployed --[[ @ 0]]
	
	local AbilityPulse = CoD.AmmoWidgetMP_Ability_Flash.new( f1_arg0, f1_arg1, 0, 0, 99, 164, 0, 0, 35.5, 94.5 ) --[[ @ 0]]
	AbilityPulse:setAlpha( 0 ) --[[ @ 0]]
	AbilityPulse:setScale( 1.5, 1.5 ) --[[ @ 0]]
	AbilityPulse:setRFTMaterial( LUI.UIImage.GetCachedMaterial( @"hash_51DE43899593E67E" ) ) --[[ @ 0]]
	AbilityPulse:setShaderVector( 0, 0, 1, 0, 0 ) --[[ @ 0]]
	AbilityPulse:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	AbilityPulse:setShaderVector( 3, 0, 0, 0, 0 ) --[[ @ 0]]
	AbilityPulse:linkToElementModel( self, nil, false, function ( model )
		AbilityPulse:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	AbilityPulse:linkToElementModel( self, "powerRatio", true, function ( model )
		local f20_local0 = model:get() --[[ @ 0]]
		if f20_local0 ~= nil then
			AbilityPulse:setShaderVector( 2, SetVectorComponent( 2, 1, SubtractVectorComponentFrom( 1, 1, CoD.GetVectorComponentFromString( f20_local0, 1 ), CoD.GetVectorComponentFromString( f20_local0, 2 ), CoD.GetVectorComponentFromString( f20_local0, 3 ), CoD.GetVectorComponentFromString( f20_local0, 4 ) ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( AbilityPulse ) --[[ @ 0]]
	self.AbilityPulse = AbilityPulse --[[ @ 0]]
	
	local AmmoWidgetAbilityContainer = CoD.AmmoWidget_AbilityContainer.new( f1_arg0, f1_arg1, 0, 0, 73, 165, 0, 0, 26.5, 70.5 ) --[[ @ 0]]
	AmmoWidgetAbilityContainer:setAlpha( 0 ) --[[ @ 0]]
	AmmoWidgetAbilityContainer:setScale( 1.5, 1.5 ) --[[ @ 0]]
	self:addElement( AmmoWidgetAbilityContainer ) --[[ @ 0]]
	self.AmmoWidgetAbilityContainer = AmmoWidgetAbilityContainer --[[ @ 0]]
	
	local UltimateRadialMeterpath2 = LUI.UIImage.new( 0, 0, 80, 188, 0, 0, 11.5, 121.5 ) --[[ @ 0]]
	UltimateRadialMeterpath2:setRGB( 0.57, 0.57, 0.57 ) --[[ @ 0]]
	UltimateRadialMeterpath2:setAlpha( 0.06 ) --[[ @ 0]]
	UltimateRadialMeterpath2:setImage( RegisterImage( @"uie_ui_hud_core_hero_widget_meter_empty" ) ) --[[ @ 0]]
	UltimateRadialMeterpath2:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_F755127C95CF5B6" ) ) --[[ @ 0]]
	UltimateRadialMeterpath2:setShaderVector( 0, 6, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( UltimateRadialMeterpath2 ) --[[ @ 0]]
	self.UltimateRadialMeterpath2 = UltimateRadialMeterpath2 --[[ @ 0]]
	
	local PowerBasedImageAvailable = LUI.UIImage.new( 0, 0, 70, 196, 0, 0, -4.5, 135.5 ) --[[ @ 0]]
	PowerBasedImageAvailable:setScale( 0.94, 0.92 ) --[[ @ 0]]
	PowerBasedImageAvailable:linkToElementModel( self, "id", true, function ( model )
		local f21_local0 = model:get() --[[ @ 0]]
		if f21_local0 ~= nil then
			PowerBasedImageAvailable:setImage( GetWeaponGadgetIconAvailable( f21_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( PowerBasedImageAvailable ) --[[ @ 0]]
	self.PowerBasedImageAvailable = PowerBasedImageAvailable --[[ @ 0]]
	
	local PowerBasedImageUnavailable = LUI.UIImage.new( 0, 0, 70, 196, 0, 0, -4.5, 135.5 ) --[[ @ 0]]
	PowerBasedImageUnavailable:setRGB( 0.65, 0.65, 0.65 ) --[[ @ 0]]
	PowerBasedImageUnavailable:setAlpha( 0 ) --[[ @ 0]]
	PowerBasedImageUnavailable:setScale( 0.94, 0.92 ) --[[ @ 0]]
	PowerBasedImageUnavailable:linkToElementModel( self, "id", true, function ( model )
		local f22_local0 = model:get() --[[ @ 0]]
		if f22_local0 ~= nil then
			PowerBasedImageUnavailable:setImage( GetWeaponGadgetIconUnavailable( f22_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( PowerBasedImageUnavailable ) --[[ @ 0]]
	self.PowerBasedImageUnavailable = PowerBasedImageUnavailable --[[ @ 0]]
	
	local combatEfficiencyActive = LUI.UIImage.new( 0, 0, 48, 80, 0, 0, -16, 16 ) --[[ @ 0]]
	combatEfficiencyActive:setAlpha( 0 ) --[[ @ 0]]
	combatEfficiencyActive:setImage( RegisterImage( @"t7_hud_mp_ability_hero_combatefficiency_available" ) ) --[[ @ 0]]
	self:addElement( combatEfficiencyActive ) --[[ @ 0]]
	self.combatEfficiencyActive = combatEfficiencyActive --[[ @ 0]]
	
	local UltimateRadialMeterWipes = CoD.AmmoWidgetMP_Ultimate_Progress_Fill.new( f1_arg0, f1_arg1, 0.5, 0.5, -56, 56, 0, 0, 11, 123 ) --[[ @ 0]]
	UltimateRadialMeterWipes:linkToElementModel( self, nil, false, function ( model )
		UltimateRadialMeterWipes:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( UltimateRadialMeterWipes ) --[[ @ 0]]
	self.UltimateRadialMeterWipes = UltimateRadialMeterWipes --[[ @ 0]]
	
	local HeroAbilityHoldString = CoD.AbilityHoldToActivate.new( f1_arg0, f1_arg1, 0.5, 0.5, -100, 100, 0, 0, -52, -3 ) --[[ @ 0]]
	HeroAbilityHoldString:subscribeToGlobalModel( f1_arg1, "PlayerAbilities", "playerGadget2", function ( model )
		HeroAbilityHoldString:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( HeroAbilityHoldString ) --[[ @ 0]]
	self.HeroAbilityHoldString = HeroAbilityHoldString --[[ @ 0]]
	
	local HeroAbilityHoldStringPC = nil --[[ @ 0]]
	
	HeroAbilityHoldStringPC = CoD.AbilityHoldToActivate.new( f1_arg0, f1_arg1, 0.5, 0.5, -100, 100, 0, 0, -83.5, -34.5 ) --[[ @ 0]]
	HeroAbilityHoldStringPC:subscribeToGlobalModel( f1_arg1, "PlayerAbilities", "playerGadget2", function ( model )
		HeroAbilityHoldStringPC:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( HeroAbilityHoldStringPC ) --[[ @ 0]]
	self.HeroAbilityHoldStringPC = HeroAbilityHoldStringPC --[[ @ 0]]
	
	local GlowRing = LUI.UIImage.new( 0, 0, 71.5, 195.5, 0, 0, -4, 134 ) --[[ @ 0]]
	GlowRing:setAlpha( 0 ) --[[ @ 0]]
	GlowRing:setImage( RegisterImage( @"uie_abeq_flare_ring" ) ) --[[ @ 0]]
	GlowRing:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_31CC85D0A86303B0" ) ) --[[ @ 0]]
	GlowRing:setShaderVector( 0, 1, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( GlowRing ) --[[ @ 0]]
	self.GlowRing = GlowRing --[[ @ 0]]
	
	local FlareBack = LUI.UIImage.new( 0, 0, 32, 232, 0, 0, -10, 138 ) --[[ @ 0]]
	FlareBack:setAlpha( 0 ) --[[ @ 0]]
	FlareBack:setScale( 1, 0.8 ) --[[ @ 0]]
	FlareBack:setImage( RegisterImage( @"uie_hex_flare_back" ) ) --[[ @ 0]]
	FlareBack:setMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	self:addElement( FlareBack ) --[[ @ 0]]
	self.FlareBack = FlareBack --[[ @ 0]]
	
	local NotAvailable = CoD.AmmoWidget_HeroEmpty.new( f1_arg0, f1_arg1, 0, 0, 85.5, 185.5, 0, 0, 11, 123 ) --[[ @ 0]]
	NotAvailable:setScale( 1.2, 1.2 ) --[[ @ 0]]
	NotAvailable:linkToElementModel( self, nil, false, function ( model )
		NotAvailable:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	NotAvailable:linkToElementModel( self, "id", true, function ( model )
		local f27_local0 = model:get() --[[ @ 0]]
		if f27_local0 ~= nil then
			NotAvailable.ImgIcon:setImage( GetWeaponGadgetIconAvailable( f27_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	NotAvailable:linkToElementModel( self, "id", true, function ( model )
		local f28_local0 = model:get() --[[ @ 0]]
		if f28_local0 ~= nil then
			NotAvailable.ImgIconGrow:setImage( GetWeaponGadgetIconAvailable( f28_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( NotAvailable ) --[[ @ 0]]
	self.NotAvailable = NotAvailable --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "HideThroughParentAlpha",
			condition = function ( menu, element, event )
				return not CoD.ModelUtility.IsSelfModelValueNonEmptyString( element, f1_arg1, "id" )
			end
		},
		{
			stateName = "Restricted",
			condition = function ( menu, element, event )
				return CoD.AmmoWidgetUtility.IsAbilityRestricted( self )
			end
		},
		{
			stateName = "InUse",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualToEnum( element, f1_arg1, "state", Enum[@"weapongadgetstates"][@"player_ability_state_inuse"] )
			end
		},
		{
			stateName = "Deployed",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		},
		{
			stateName = "PowerBasedEmptyCharging_CombatEfficiency",
			condition = function ( menu, element, event )
				local f33_local0 = CoD.ModelUtility.IsSelfModelValueEqualToEnum( element, f1_arg1, "state", Enum[@"weapongadgetstates"][@"player_ability_state_charging"] ) --[[ @ 0]]
				if f33_local0 then
					f33_local0 = CoD.ModelUtility.IsSelfModelValueEqualTo( element, f1_arg1, "powerRatio", 0 ) --[[ @ 0]]
					if f33_local0 then
						f33_local0 = CoD.ModelUtility.IsGlobalDataSourceModelValueEqualTo( f1_arg1, "HUDItems", "combatEfficiencyActive", 1 ) --[[ @ 0]]
					end
				end
				return f33_local0
			end
		},
		{
			stateName = "PowerBasedEmptyCharging",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualToEnum( element, f1_arg1, "state", Enum[@"weapongadgetstates"][@"player_ability_state_charging"] ) and CoD.ModelUtility.IsSelfModelValueEqualTo( element, f1_arg1, "powerRatio", 0 )
			end
		},
		{
			stateName = "PowerBasedCharging_CombatEfficiency",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualToEnum( element, f1_arg1, "state", Enum[@"weapongadgetstates"][@"player_ability_state_charging"] ) and CoD.ModelUtility.IsGlobalDataSourceModelValueEqualTo( f1_arg1, "HUDItems", "combatEfficiencyActive", 1 )
			end
		},
		{
			stateName = "PowerBasedCharging",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualToEnum( element, f1_arg1, "state", Enum[@"weapongadgetstates"][@"player_ability_state_charging"] )
			end
		},
		{
			stateName = "PowerBased",
			condition = function ( menu, element, event )
				return not CoD.ModelUtility.IsSelfModelValueEqualToEnum( element, f1_arg1, "state", Enum[@"weapongadgetstates"][@"player_ability_state_hidden"] )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "id", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "id"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:linkToElementModel( self, "state", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "state"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:linkToElementModel( self, "powerRatio", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "powerRatio"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local f1_local25 = self --[[ @ 0]]
	local f1_local26 = self.subscribeToModel --[[ @ 0]]
	local f1_local27 = DataSources.HUDItems.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local26( f1_local25, f1_local27.combatEfficiencyActive, function ( f41_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f41_arg0:get(),
			modelName = "combatEfficiencyActive"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PreLoadFunc then
		PreLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	f1_local26 = self --[[ @ 0]]
	f1_local26 = HeroAbilityHoldString --[[ @ 0]]
	if IsPC() then
		HideWidget( self.HeroAbilityHoldString ) --[[ @ 0]]
	end
	return self
end
 --[[ @ 0]]
CoD.AmmoWidgetMP_Ultimate_Internal.__resetProperties = function ( f42_arg0 )
	f42_arg0.NotAvailable:completeAnimation() --[[ @ 0]]
	f42_arg0.AbilityPulse:completeAnimation() --[[ @ 0]]
	f42_arg0.Panel:completeAnimation() --[[ @ 0]]
	f42_arg0.ControllerDependentTextBox:completeAnimation() --[[ @ 0]]
	f42_arg0.HeroAbilityHoldStringPC:completeAnimation() --[[ @ 0]]
	f42_arg0.HeroAbilityHoldString:completeAnimation() --[[ @ 0]]
	f42_arg0.UltimateRadialMeterWipes:completeAnimation() --[[ @ 0]]
	f42_arg0.PowerBasedImageAvailable:completeAnimation() --[[ @ 0]]
	f42_arg0.UltimateRadialMeterpath2:completeAnimation() --[[ @ 0]]
	f42_arg0.LED:completeAnimation() --[[ @ 0]]
	f42_arg0.TankUseString:completeAnimation() --[[ @ 0]]
	f42_arg0.FlareBack:completeAnimation() --[[ @ 0]]
	f42_arg0.GlowRing:completeAnimation() --[[ @ 0]]
	f42_arg0.PowerBasedImageUnavailable:completeAnimation() --[[ @ 0]]
	f42_arg0.FullBackingDeployed:completeAnimation() --[[ @ 0]]
	f42_arg0.combatEfficiencyActive:completeAnimation() --[[ @ 0]]
	f42_arg0.NotAvailable:setAlpha( 1 ) --[[ @ 0]]
	f42_arg0.AbilityPulse:setRGB( 1, 1, 1 ) --[[ @ 0]]
	f42_arg0.AbilityPulse:setAlpha( 0 ) --[[ @ 0]]
	f42_arg0.AbilityPulse:setRFTMaterial( LUI.UIImage.GetCachedMaterial( @"hash_51DE43899593E67E" ) ) --[[ @ 0]]
	f42_arg0.AbilityPulse:setShaderVector( 0, 0, 1, 0, 0 ) --[[ @ 0]]
	f42_arg0.AbilityPulse:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	f42_arg0.AbilityPulse:setShaderVector( 3, 0, 0, 0, 0 ) --[[ @ 0]]
	f42_arg0.Panel:setAlpha( 0.94 ) --[[ @ 0]]
	f42_arg0.ControllerDependentTextBox:setRGB( 1, 1, 1 ) --[[ @ 0]]
	f42_arg0.ControllerDependentTextBox:setAlpha( 0 ) --[[ @ 0]]
	f42_arg0.HeroAbilityHoldStringPC:setAlpha( 1 ) --[[ @ 0]]
	f42_arg0.HeroAbilityHoldString:setTopBottom( 0, 0, -52, -3 ) --[[ @ 0]]
	f42_arg0.HeroAbilityHoldString:setAlpha( 1 ) --[[ @ 0]]
	f42_arg0.UltimateRadialMeterWipes:setAlpha( 1 ) --[[ @ 0]]
	f42_arg0.PowerBasedImageAvailable:setAlpha( 1 ) --[[ @ 0]]
	f42_arg0.UltimateRadialMeterpath2:setAlpha( 0.06 ) --[[ @ 0]]
	f42_arg0.LED:setRGB( 0, 0, 0 ) --[[ @ 0]]
	f42_arg0.LED:setAlpha( 0.3 ) --[[ @ 0]]
	f42_arg0.TankUseString:setAlpha( 1 ) --[[ @ 0]]
	f42_arg0.FlareBack:setAlpha( 0 ) --[[ @ 0]]
	f42_arg0.FlareBack:setScale( 1, 0.8 ) --[[ @ 0]]
	f42_arg0.GlowRing:setRGB( 1, 1, 1 ) --[[ @ 0]]
	f42_arg0.GlowRing:setAlpha( 0 ) --[[ @ 0]]
	f42_arg0.GlowRing:setShaderVector( 0, 1, 0, 0, 0 ) --[[ @ 0]]
	f42_arg0.PowerBasedImageUnavailable:setAlpha( 0 ) --[[ @ 0]]
	f42_arg0.PowerBasedImageUnavailable:setScale( 0.94, 0.92 ) --[[ @ 0]]
	f42_arg0.FullBackingDeployed:setAlpha( 0 ) --[[ @ 0]]
	f42_arg0.combatEfficiencyActive:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.AmmoWidgetMP_Ultimate_Internal.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f43_arg0, f43_arg1 )
			f43_arg0:__resetProperties() --[[ @ 0]]
			f43_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f43_arg0.Panel:completeAnimation() --[[ @ 0]]
			f43_arg0.Panel:setAlpha( 0.9 ) --[[ @ 0]]
			f43_arg0.clipFinished( f43_arg0.Panel ) --[[ @ 0]]
			f43_arg0.ControllerDependentTextBox:completeAnimation() --[[ @ 0]]
			f43_arg0.ControllerDependentTextBox:setRGB( 1, 1, 1 ) --[[ @ 0]]
			f43_arg0.clipFinished( f43_arg0.ControllerDependentTextBox ) --[[ @ 0]]
			f43_arg0.AbilityPulse:completeAnimation() --[[ @ 0]]
			f43_arg0.AbilityPulse:setAlpha( 0 ) --[[ @ 0]]
			f43_arg0.clipFinished( f43_arg0.AbilityPulse ) --[[ @ 0]]
			f43_arg0.NotAvailable:completeAnimation() --[[ @ 0]]
			f43_arg0.NotAvailable:setAlpha( 1 ) --[[ @ 0]]
			f43_arg0.clipFinished( f43_arg0.NotAvailable ) --[[ @ 0]]
		end
	},
	HideThroughParentAlpha = {
		DefaultClip = function ( f44_arg0, f44_arg1 )
			f44_arg0:__resetProperties() --[[ @ 0]]
			f44_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	Restricted = {
		DefaultClip = function ( f45_arg0, f45_arg1 )
			f45_arg0:__resetProperties() --[[ @ 0]]
			f45_arg0:setupElementClipCounter( 8 ) --[[ @ 0]]
			f45_arg0.TankUseString:completeAnimation() --[[ @ 0]]
			f45_arg0.TankUseString:setAlpha( 0 ) --[[ @ 0]]
			f45_arg0.clipFinished( f45_arg0.TankUseString ) --[[ @ 0]]
			f45_arg0.LED:completeAnimation() --[[ @ 0]]
			f45_arg0.LED:setAlpha( 0 ) --[[ @ 0]]
			f45_arg0.clipFinished( f45_arg0.LED ) --[[ @ 0]]
			f45_arg0.UltimateRadialMeterpath2:completeAnimation() --[[ @ 0]]
			f45_arg0.UltimateRadialMeterpath2:setAlpha( 0 ) --[[ @ 0]]
			f45_arg0.clipFinished( f45_arg0.UltimateRadialMeterpath2 ) --[[ @ 0]]
			f45_arg0.PowerBasedImageAvailable:completeAnimation() --[[ @ 0]]
			f45_arg0.PowerBasedImageAvailable:setAlpha( 0 ) --[[ @ 0]]
			f45_arg0.clipFinished( f45_arg0.PowerBasedImageAvailable ) --[[ @ 0]]
			f45_arg0.UltimateRadialMeterWipes:completeAnimation() --[[ @ 0]]
			f45_arg0.UltimateRadialMeterWipes:setAlpha( 0 ) --[[ @ 0]]
			f45_arg0.clipFinished( f45_arg0.UltimateRadialMeterWipes ) --[[ @ 0]]
			f45_arg0.HeroAbilityHoldString:completeAnimation() --[[ @ 0]]
			f45_arg0.HeroAbilityHoldString:setAlpha( 0 ) --[[ @ 0]]
			f45_arg0.clipFinished( f45_arg0.HeroAbilityHoldString ) --[[ @ 0]]
			f45_arg0.HeroAbilityHoldStringPC:completeAnimation() --[[ @ 0]]
			f45_arg0.HeroAbilityHoldStringPC:setAlpha( 0 ) --[[ @ 0]]
			f45_arg0.clipFinished( f45_arg0.HeroAbilityHoldStringPC ) --[[ @ 0]]
			f45_arg0.NotAvailable:completeAnimation() --[[ @ 0]]
			f45_arg0.NotAvailable:setAlpha( 0 ) --[[ @ 0]]
			f45_arg0.clipFinished( f45_arg0.NotAvailable ) --[[ @ 0]]
		end
	},
	InUse = {
		DefaultClip = function ( f46_arg0, f46_arg1 )
			f46_arg0:__resetProperties() --[[ @ 0]]
			f46_arg0:setupElementClipCounter( 6 ) --[[ @ 0]]
			f46_arg0.AbilityPulse:completeAnimation() --[[ @ 0]]
			f46_arg0.AbilityPulse:setAlpha( 0 ) --[[ @ 0]]
			f46_arg0.clipFinished( f46_arg0.AbilityPulse ) --[[ @ 0]]
			f46_arg0.PowerBasedImageAvailable:completeAnimation() --[[ @ 0]]
			f46_arg0.PowerBasedImageAvailable:setAlpha( 0 ) --[[ @ 0]]
			f46_arg0.clipFinished( f46_arg0.PowerBasedImageAvailable ) --[[ @ 0]]
			f46_arg0.PowerBasedImageUnavailable:completeAnimation() --[[ @ 0]]
			f46_arg0.PowerBasedImageUnavailable:setAlpha( 1 ) --[[ @ 0]]
			f46_arg0.clipFinished( f46_arg0.PowerBasedImageUnavailable ) --[[ @ 0]]
			f46_arg0.GlowRing:completeAnimation() --[[ @ 0]]
			f46_arg0.GlowRing:setRGB( 1, 0.44, 0 ) --[[ @ 0]]
			f46_arg0.GlowRing:setAlpha( 0 ) --[[ @ 0]]
			f46_arg0.clipFinished( f46_arg0.GlowRing ) --[[ @ 0]]
			f46_arg0.FlareBack:completeAnimation() --[[ @ 0]]
			f46_arg0.FlareBack:setAlpha( 0 ) --[[ @ 0]]
			f46_arg0.clipFinished( f46_arg0.FlareBack ) --[[ @ 0]]
			f46_arg0.NotAvailable:completeAnimation() --[[ @ 0]]
			f46_arg0.NotAvailable:setAlpha( 0 ) --[[ @ 0]]
			f46_arg0.clipFinished( f46_arg0.NotAvailable ) --[[ @ 0]]
		end,
		DefaultState = function ( f47_arg0, f47_arg1 )
			f47_arg0:__resetProperties() --[[ @ 0]]
			f47_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f47_arg0.AbilityPulse:completeAnimation() --[[ @ 0]]
			f47_arg0.AbilityPulse:setAlpha( 0 ) --[[ @ 0]]
			f47_arg0.clipFinished( f47_arg0.AbilityPulse ) --[[ @ 0]]
			local f47_local0 = function ( f48_arg0 )
				f47_arg0.NotAvailable:beginAnimation( 200 ) --[[ @ 0]]
				f47_arg0.NotAvailable:setAlpha( 1 ) --[[ @ 0]]
				f47_arg0.NotAvailable:registerEventHandler( "interrupted_keyframe", f47_arg0.clipInterrupted ) --[[ @ 0]]
				f47_arg0.NotAvailable:registerEventHandler( "transition_complete_keyframe", f47_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f47_arg0.NotAvailable:completeAnimation() --[[ @ 0]]
			f47_arg0.NotAvailable:setAlpha( 0 ) --[[ @ 0]]
			f47_local0( f47_arg0.NotAvailable ) --[[ @ 0]]
			f47_arg0.nextClip = "DefaultState" --[[ @ 0]]
		end
	},
	Deployed = {
		DefaultClip = function ( f49_arg0, f49_arg1 )
			f49_arg0:__resetProperties() --[[ @ 0]]
			f49_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f49_arg0.AbilityPulse:completeAnimation() --[[ @ 0]]
			f49_arg0.AbilityPulse:setAlpha( 0 ) --[[ @ 0]]
			f49_arg0.clipFinished( f49_arg0.AbilityPulse ) --[[ @ 0]]
			f49_arg0.GlowRing:completeAnimation() --[[ @ 0]]
			f49_arg0.GlowRing:setRGB( 1, 0.44, 0 ) --[[ @ 0]]
			f49_arg0.GlowRing:setAlpha( 1 ) --[[ @ 0]]
			f49_arg0.clipFinished( f49_arg0.GlowRing ) --[[ @ 0]]
			f49_arg0.NotAvailable:completeAnimation() --[[ @ 0]]
			f49_arg0.NotAvailable:setAlpha( 1 ) --[[ @ 0]]
			f49_arg0.clipFinished( f49_arg0.NotAvailable ) --[[ @ 0]]
		end,
		DefaultState = function ( f50_arg0, f50_arg1 )
			f50_arg0:__resetProperties() --[[ @ 0]]
			f50_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			local f50_local0 = function ( f51_arg0 )
				f50_arg0.AbilityPulse:beginAnimation( 200 ) --[[ @ 0]]
				f50_arg0.AbilityPulse:setAlpha( 0 ) --[[ @ 0]]
				f50_arg0.AbilityPulse:registerEventHandler( "interrupted_keyframe", f50_arg0.clipInterrupted ) --[[ @ 0]]
				f50_arg0.AbilityPulse:registerEventHandler( "transition_complete_keyframe", f50_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f50_arg0.AbilityPulse:completeAnimation() --[[ @ 0]]
			f50_arg0.AbilityPulse:setAlpha( 1 ) --[[ @ 0]]
			f50_local0( f50_arg0.AbilityPulse ) --[[ @ 0]]
			f50_arg0.NotAvailable:completeAnimation() --[[ @ 0]]
			f50_arg0.NotAvailable:setAlpha( 1 ) --[[ @ 0]]
			f50_arg0.clipFinished( f50_arg0.NotAvailable ) --[[ @ 0]]
		end
	},
	PowerBasedEmptyCharging_CombatEfficiency = {
		DefaultClip = function ( f52_arg0, f52_arg1 )
			f52_arg0:__resetProperties() --[[ @ 0]]
			f52_arg0:setupElementClipCounter( 7 ) --[[ @ 0]]
			f52_arg0.Panel:completeAnimation() --[[ @ 0]]
			f52_arg0.Panel:setAlpha( 0.7 ) --[[ @ 0]]
			f52_arg0.clipFinished( f52_arg0.Panel ) --[[ @ 0]]
			f52_arg0.FullBackingDeployed:completeAnimation() --[[ @ 0]]
			f52_arg0.FullBackingDeployed:setAlpha( 0 ) --[[ @ 0]]
			f52_arg0.clipFinished( f52_arg0.FullBackingDeployed ) --[[ @ 0]]
			f52_arg0.AbilityPulse:completeAnimation() --[[ @ 0]]
			f52_arg0.AbilityPulse:setAlpha( 0 ) --[[ @ 0]]
			f52_arg0.AbilityPulse:setRFTMaterial( LUI.UIImage.GetCachedMaterial( @"hash_51DE43899593E67E" ) ) --[[ @ 0]]
			f52_arg0.AbilityPulse:setShaderVector( 0, 0, 1, 0, 0 ) --[[ @ 0]]
			f52_arg0.AbilityPulse:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
			f52_arg0.AbilityPulse:setShaderVector( 3, 0, 0, 0, 0 ) --[[ @ 0]]
			f52_arg0.clipFinished( f52_arg0.AbilityPulse ) --[[ @ 0]]
			f52_arg0.PowerBasedImageAvailable:completeAnimation() --[[ @ 0]]
			f52_arg0.PowerBasedImageAvailable:setAlpha( 0 ) --[[ @ 0]]
			f52_arg0.clipFinished( f52_arg0.PowerBasedImageAvailable ) --[[ @ 0]]
			f52_arg0.PowerBasedImageUnavailable:completeAnimation() --[[ @ 0]]
			f52_arg0.PowerBasedImageUnavailable:setAlpha( 1 ) --[[ @ 0]]
			f52_arg0.clipFinished( f52_arg0.PowerBasedImageUnavailable ) --[[ @ 0]]
			f52_arg0.combatEfficiencyActive:completeAnimation() --[[ @ 0]]
			f52_arg0.combatEfficiencyActive:setAlpha( 1 ) --[[ @ 0]]
			f52_arg0.clipFinished( f52_arg0.combatEfficiencyActive ) --[[ @ 0]]
			f52_arg0.NotAvailable:completeAnimation() --[[ @ 0]]
			f52_arg0.NotAvailable:setAlpha( 1 ) --[[ @ 0]]
			f52_arg0.clipFinished( f52_arg0.NotAvailable ) --[[ @ 0]]
		end,
		DefaultState = function ( f53_arg0, f53_arg1 )
			f53_arg0:__resetProperties() --[[ @ 0]]
			f53_arg0:setupElementClipCounter( 5 ) --[[ @ 0]]
			local f53_local0 = function ( f54_arg0 )
				f53_arg0.FullBackingDeployed:beginAnimation( 200 ) --[[ @ 0]]
				f53_arg0.FullBackingDeployed:registerEventHandler( "interrupted_keyframe", f53_arg0.clipInterrupted ) --[[ @ 0]]
				f53_arg0.FullBackingDeployed:registerEventHandler( "transition_complete_keyframe", f53_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f53_arg0.FullBackingDeployed:completeAnimation() --[[ @ 0]]
			f53_arg0.FullBackingDeployed:setAlpha( 0 ) --[[ @ 0]]
			f53_local0( f53_arg0.FullBackingDeployed ) --[[ @ 0]]
			f53_arg0.AbilityPulse:completeAnimation() --[[ @ 0]]
			f53_arg0.AbilityPulse:setAlpha( 0 ) --[[ @ 0]]
			f53_arg0.AbilityPulse:setRFTMaterial( LUI.UIImage.GetCachedMaterial( @"hash_51DE43899593E67E" ) ) --[[ @ 0]]
			f53_arg0.AbilityPulse:setShaderVector( 0, 0, 1, 0, 0 ) --[[ @ 0]]
			f53_arg0.AbilityPulse:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
			f53_arg0.AbilityPulse:setShaderVector( 3, 0, 0, 0, 0 ) --[[ @ 0]]
			f53_arg0.clipFinished( f53_arg0.AbilityPulse ) --[[ @ 0]]
			local f53_local1 = function ( f55_arg0 )
				f53_arg0.PowerBasedImageAvailable:beginAnimation( 200 ) --[[ @ 0]]
				f53_arg0.PowerBasedImageAvailable:setAlpha( 1 ) --[[ @ 0]]
				f53_arg0.PowerBasedImageAvailable:registerEventHandler( "interrupted_keyframe", f53_arg0.clipInterrupted ) --[[ @ 0]]
				f53_arg0.PowerBasedImageAvailable:registerEventHandler( "transition_complete_keyframe", f53_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f53_arg0.PowerBasedImageAvailable:completeAnimation() --[[ @ 0]]
			f53_arg0.PowerBasedImageAvailable:setAlpha( 0 ) --[[ @ 0]]
			f53_local1( f53_arg0.PowerBasedImageAvailable ) --[[ @ 0]]
			local f53_local2 = function ( f56_arg0 )
				f53_arg0.PowerBasedImageUnavailable:beginAnimation( 200 ) --[[ @ 0]]
				f53_arg0.PowerBasedImageUnavailable:setAlpha( 0 ) --[[ @ 0]]
				f53_arg0.PowerBasedImageUnavailable:registerEventHandler( "interrupted_keyframe", f53_arg0.clipInterrupted ) --[[ @ 0]]
				f53_arg0.PowerBasedImageUnavailable:registerEventHandler( "transition_complete_keyframe", f53_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f53_arg0.PowerBasedImageUnavailable:completeAnimation() --[[ @ 0]]
			f53_arg0.PowerBasedImageUnavailable:setAlpha( 0.4 ) --[[ @ 0]]
			f53_local2( f53_arg0.PowerBasedImageUnavailable ) --[[ @ 0]]
			f53_arg0.NotAvailable:completeAnimation() --[[ @ 0]]
			f53_arg0.NotAvailable:setAlpha( 1 ) --[[ @ 0]]
			f53_arg0.clipFinished( f53_arg0.NotAvailable ) --[[ @ 0]]
		end,
		PowerBasedCharging = function ( f57_arg0, f57_arg1 )
			f57_arg0:__resetProperties() --[[ @ 0]]
			f57_arg0:setupElementClipCounter( 6 ) --[[ @ 0]]
			local f57_local0 = function ( f58_arg0 )
				f57_arg0.Panel:beginAnimation( 200 ) --[[ @ 0]]
				f57_arg0.Panel:setAlpha( 0.2 ) --[[ @ 0]]
				f57_arg0.Panel:registerEventHandler( "interrupted_keyframe", f57_arg0.clipInterrupted ) --[[ @ 0]]
				f57_arg0.Panel:registerEventHandler( "transition_complete_keyframe", f57_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f57_arg0.Panel:completeAnimation() --[[ @ 0]]
			f57_arg0.Panel:setAlpha( 0.7 ) --[[ @ 0]]
			f57_local0( f57_arg0.Panel ) --[[ @ 0]]
			f57_arg0.FullBackingDeployed:completeAnimation() --[[ @ 0]]
			f57_arg0.FullBackingDeployed:setAlpha( 0 ) --[[ @ 0]]
			f57_arg0.clipFinished( f57_arg0.FullBackingDeployed ) --[[ @ 0]]
			local f57_local1 = function ( f59_arg0 )
				f57_arg0.AbilityPulse:beginAnimation( 200 ) --[[ @ 0]]
				f57_arg0.AbilityPulse:registerEventHandler( "interrupted_keyframe", f57_arg0.clipInterrupted ) --[[ @ 0]]
				f57_arg0.AbilityPulse:registerEventHandler( "transition_complete_keyframe", f57_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f57_arg0.AbilityPulse:completeAnimation() --[[ @ 0]]
			f57_arg0.AbilityPulse:setAlpha( 0 ) --[[ @ 0]]
			f57_arg0.AbilityPulse:setRFTMaterial( LUI.UIImage.GetCachedMaterial( @"hash_51DE43899593E67E" ) ) --[[ @ 0]]
			f57_arg0.AbilityPulse:setShaderVector( 0, 0, 1, 0, 0 ) --[[ @ 0]]
			f57_arg0.AbilityPulse:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
			f57_arg0.AbilityPulse:setShaderVector( 3, 0, 0, 0, 0 ) --[[ @ 0]]
			f57_local1( f57_arg0.AbilityPulse ) --[[ @ 0]]
			f57_arg0.PowerBasedImageAvailable:completeAnimation() --[[ @ 0]]
			f57_arg0.PowerBasedImageAvailable:setAlpha( 0 ) --[[ @ 0]]
			f57_arg0.clipFinished( f57_arg0.PowerBasedImageAvailable ) --[[ @ 0]]
			local f57_local2 = function ( f60_arg0 )
				f57_arg0.PowerBasedImageUnavailable:beginAnimation( 200 ) --[[ @ 0]]
				f57_arg0.PowerBasedImageUnavailable:setAlpha( 1 ) --[[ @ 0]]
				f57_arg0.PowerBasedImageUnavailable:registerEventHandler( "interrupted_keyframe", f57_arg0.clipInterrupted ) --[[ @ 0]]
				f57_arg0.PowerBasedImageUnavailable:registerEventHandler( "transition_complete_keyframe", f57_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f57_arg0.PowerBasedImageUnavailable:completeAnimation() --[[ @ 0]]
			f57_arg0.PowerBasedImageUnavailable:setAlpha( 0.4 ) --[[ @ 0]]
			f57_local2( f57_arg0.PowerBasedImageUnavailable ) --[[ @ 0]]
			f57_arg0.NotAvailable:completeAnimation() --[[ @ 0]]
			f57_arg0.NotAvailable:setAlpha( 1 ) --[[ @ 0]]
			f57_arg0.clipFinished( f57_arg0.NotAvailable ) --[[ @ 0]]
		end
	},
	PowerBasedEmptyCharging = {
		DefaultClip = function ( f61_arg0, f61_arg1 )
			f61_arg0:__resetProperties() --[[ @ 0]]
			f61_arg0:setupElementClipCounter( 6 ) --[[ @ 0]]
			f61_arg0.Panel:completeAnimation() --[[ @ 0]]
			f61_arg0.Panel:setAlpha( 0.7 ) --[[ @ 0]]
			f61_arg0.clipFinished( f61_arg0.Panel ) --[[ @ 0]]
			f61_arg0.FullBackingDeployed:completeAnimation() --[[ @ 0]]
			f61_arg0.FullBackingDeployed:setAlpha( 0 ) --[[ @ 0]]
			f61_arg0.clipFinished( f61_arg0.FullBackingDeployed ) --[[ @ 0]]
			f61_arg0.AbilityPulse:completeAnimation() --[[ @ 0]]
			f61_arg0.AbilityPulse:setAlpha( 0 ) --[[ @ 0]]
			f61_arg0.AbilityPulse:setRFTMaterial( LUI.UIImage.GetCachedMaterial( @"hash_51DE43899593E67E" ) ) --[[ @ 0]]
			f61_arg0.AbilityPulse:setShaderVector( 0, 0, 1, 0, 0 ) --[[ @ 0]]
			f61_arg0.AbilityPulse:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
			f61_arg0.AbilityPulse:setShaderVector( 3, 0, 0, 0, 0 ) --[[ @ 0]]
			f61_arg0.clipFinished( f61_arg0.AbilityPulse ) --[[ @ 0]]
			f61_arg0.PowerBasedImageAvailable:completeAnimation() --[[ @ 0]]
			f61_arg0.PowerBasedImageAvailable:setAlpha( 0 ) --[[ @ 0]]
			f61_arg0.clipFinished( f61_arg0.PowerBasedImageAvailable ) --[[ @ 0]]
			f61_arg0.PowerBasedImageUnavailable:completeAnimation() --[[ @ 0]]
			f61_arg0.PowerBasedImageUnavailable:setAlpha( 1 ) --[[ @ 0]]
			f61_arg0.clipFinished( f61_arg0.PowerBasedImageUnavailable ) --[[ @ 0]]
			f61_arg0.NotAvailable:completeAnimation() --[[ @ 0]]
			f61_arg0.NotAvailable:setAlpha( 1 ) --[[ @ 0]]
			f61_arg0.clipFinished( f61_arg0.NotAvailable ) --[[ @ 0]]
		end,
		DefaultState = function ( f62_arg0, f62_arg1 )
			f62_arg0:__resetProperties() --[[ @ 0]]
			f62_arg0:setupElementClipCounter( 5 ) --[[ @ 0]]
			local f62_local0 = function ( f63_arg0 )
				f62_arg0.FullBackingDeployed:beginAnimation( 200 ) --[[ @ 0]]
				f62_arg0.FullBackingDeployed:registerEventHandler( "interrupted_keyframe", f62_arg0.clipInterrupted ) --[[ @ 0]]
				f62_arg0.FullBackingDeployed:registerEventHandler( "transition_complete_keyframe", f62_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f62_arg0.FullBackingDeployed:completeAnimation() --[[ @ 0]]
			f62_arg0.FullBackingDeployed:setAlpha( 0 ) --[[ @ 0]]
			f62_local0( f62_arg0.FullBackingDeployed ) --[[ @ 0]]
			f62_arg0.AbilityPulse:completeAnimation() --[[ @ 0]]
			f62_arg0.AbilityPulse:setAlpha( 0 ) --[[ @ 0]]
			f62_arg0.AbilityPulse:setRFTMaterial( LUI.UIImage.GetCachedMaterial( @"hash_51DE43899593E67E" ) ) --[[ @ 0]]
			f62_arg0.AbilityPulse:setShaderVector( 0, 0, 1, 0, 0 ) --[[ @ 0]]
			f62_arg0.AbilityPulse:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
			f62_arg0.AbilityPulse:setShaderVector( 3, 0, 0, 0, 0 ) --[[ @ 0]]
			f62_arg0.clipFinished( f62_arg0.AbilityPulse ) --[[ @ 0]]
			local f62_local1 = function ( f64_arg0 )
				f62_arg0.PowerBasedImageAvailable:beginAnimation( 200 ) --[[ @ 0]]
				f62_arg0.PowerBasedImageAvailable:setAlpha( 1 ) --[[ @ 0]]
				f62_arg0.PowerBasedImageAvailable:registerEventHandler( "interrupted_keyframe", f62_arg0.clipInterrupted ) --[[ @ 0]]
				f62_arg0.PowerBasedImageAvailable:registerEventHandler( "transition_complete_keyframe", f62_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f62_arg0.PowerBasedImageAvailable:completeAnimation() --[[ @ 0]]
			f62_arg0.PowerBasedImageAvailable:setAlpha( 0 ) --[[ @ 0]]
			f62_local1( f62_arg0.PowerBasedImageAvailable ) --[[ @ 0]]
			local f62_local2 = function ( f65_arg0 )
				f62_arg0.PowerBasedImageUnavailable:beginAnimation( 200 ) --[[ @ 0]]
				f62_arg0.PowerBasedImageUnavailable:setAlpha( 0 ) --[[ @ 0]]
				f62_arg0.PowerBasedImageUnavailable:registerEventHandler( "interrupted_keyframe", f62_arg0.clipInterrupted ) --[[ @ 0]]
				f62_arg0.PowerBasedImageUnavailable:registerEventHandler( "transition_complete_keyframe", f62_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f62_arg0.PowerBasedImageUnavailable:completeAnimation() --[[ @ 0]]
			f62_arg0.PowerBasedImageUnavailable:setAlpha( 0.4 ) --[[ @ 0]]
			f62_local2( f62_arg0.PowerBasedImageUnavailable ) --[[ @ 0]]
			f62_arg0.NotAvailable:completeAnimation() --[[ @ 0]]
			f62_arg0.NotAvailable:setAlpha( 1 ) --[[ @ 0]]
			f62_arg0.clipFinished( f62_arg0.NotAvailable ) --[[ @ 0]]
		end,
		PowerBasedCharging = function ( f66_arg0, f66_arg1 )
			f66_arg0:__resetProperties() --[[ @ 0]]
			f66_arg0:setupElementClipCounter( 6 ) --[[ @ 0]]
			local f66_local0 = function ( f67_arg0 )
				f66_arg0.Panel:beginAnimation( 200 ) --[[ @ 0]]
				f66_arg0.Panel:setAlpha( 0.2 ) --[[ @ 0]]
				f66_arg0.Panel:registerEventHandler( "interrupted_keyframe", f66_arg0.clipInterrupted ) --[[ @ 0]]
				f66_arg0.Panel:registerEventHandler( "transition_complete_keyframe", f66_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f66_arg0.Panel:completeAnimation() --[[ @ 0]]
			f66_arg0.Panel:setAlpha( 0.7 ) --[[ @ 0]]
			f66_local0( f66_arg0.Panel ) --[[ @ 0]]
			local f66_local1 = function ( f68_arg0 )
				f66_arg0.FullBackingDeployed:beginAnimation( 200 ) --[[ @ 0]]
				f66_arg0.FullBackingDeployed:setAlpha( 0 ) --[[ @ 0]]
				f66_arg0.FullBackingDeployed:registerEventHandler( "interrupted_keyframe", f66_arg0.clipInterrupted ) --[[ @ 0]]
				f66_arg0.FullBackingDeployed:registerEventHandler( "transition_complete_keyframe", f66_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f66_arg0.FullBackingDeployed:completeAnimation() --[[ @ 0]]
			f66_arg0.FullBackingDeployed:setAlpha( 1 ) --[[ @ 0]]
			f66_local1( f66_arg0.FullBackingDeployed ) --[[ @ 0]]
			local f66_local2 = function ( f69_arg0 )
				f66_arg0.AbilityPulse:beginAnimation( 200 ) --[[ @ 0]]
				f66_arg0.AbilityPulse:registerEventHandler( "interrupted_keyframe", f66_arg0.clipInterrupted ) --[[ @ 0]]
				f66_arg0.AbilityPulse:registerEventHandler( "transition_complete_keyframe", f66_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f66_arg0.AbilityPulse:completeAnimation() --[[ @ 0]]
			f66_arg0.AbilityPulse:setAlpha( 0 ) --[[ @ 0]]
			f66_arg0.AbilityPulse:setRFTMaterial( LUI.UIImage.GetCachedMaterial( @"hash_51DE43899593E67E" ) ) --[[ @ 0]]
			f66_arg0.AbilityPulse:setShaderVector( 0, 0, 1, 0, 0 ) --[[ @ 0]]
			f66_arg0.AbilityPulse:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
			f66_arg0.AbilityPulse:setShaderVector( 3, 0, 0, 0, 0 ) --[[ @ 0]]
			f66_local2( f66_arg0.AbilityPulse ) --[[ @ 0]]
			f66_arg0.PowerBasedImageAvailable:completeAnimation() --[[ @ 0]]
			f66_arg0.PowerBasedImageAvailable:setAlpha( 0 ) --[[ @ 0]]
			f66_arg0.clipFinished( f66_arg0.PowerBasedImageAvailable ) --[[ @ 0]]
			local f66_local3 = function ( f70_arg0 )
				f66_arg0.PowerBasedImageUnavailable:beginAnimation( 200 ) --[[ @ 0]]
				f66_arg0.PowerBasedImageUnavailable:setAlpha( 1 ) --[[ @ 0]]
				f66_arg0.PowerBasedImageUnavailable:registerEventHandler( "interrupted_keyframe", f66_arg0.clipInterrupted ) --[[ @ 0]]
				f66_arg0.PowerBasedImageUnavailable:registerEventHandler( "transition_complete_keyframe", f66_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f66_arg0.PowerBasedImageUnavailable:completeAnimation() --[[ @ 0]]
			f66_arg0.PowerBasedImageUnavailable:setAlpha( 0.4 ) --[[ @ 0]]
			f66_local3( f66_arg0.PowerBasedImageUnavailable ) --[[ @ 0]]
			f66_arg0.NotAvailable:completeAnimation() --[[ @ 0]]
			f66_arg0.NotAvailable:setAlpha( 1 ) --[[ @ 0]]
			f66_arg0.clipFinished( f66_arg0.NotAvailable ) --[[ @ 0]]
		end
	},
	PowerBasedCharging_CombatEfficiency = {
		DefaultClip = function ( f71_arg0, f71_arg1 )
			f71_arg0:__resetProperties() --[[ @ 0]]
			f71_arg0:setupElementClipCounter( 6 ) --[[ @ 0]]
			f71_arg0.FullBackingDeployed:completeAnimation() --[[ @ 0]]
			f71_arg0.FullBackingDeployed:setAlpha( 0 ) --[[ @ 0]]
			f71_arg0.clipFinished( f71_arg0.FullBackingDeployed ) --[[ @ 0]]
			f71_arg0.AbilityPulse:completeAnimation() --[[ @ 0]]
			f71_arg0.AbilityPulse:setAlpha( 0 ) --[[ @ 0]]
			f71_arg0.AbilityPulse:setRFTMaterial( LUI.UIImage.GetCachedMaterial( @"hash_51DE43899593E67E" ) ) --[[ @ 0]]
			f71_arg0.AbilityPulse:setShaderVector( 0, 0, 1, 0, 0 ) --[[ @ 0]]
			f71_arg0.AbilityPulse:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
			f71_arg0.AbilityPulse:setShaderVector( 3, 0, 0, 0, 0 ) --[[ @ 0]]
			f71_arg0.clipFinished( f71_arg0.AbilityPulse ) --[[ @ 0]]
			f71_arg0.PowerBasedImageAvailable:completeAnimation() --[[ @ 0]]
			f71_arg0.PowerBasedImageAvailable:setAlpha( 0 ) --[[ @ 0]]
			f71_arg0.clipFinished( f71_arg0.PowerBasedImageAvailable ) --[[ @ 0]]
			f71_arg0.PowerBasedImageUnavailable:completeAnimation() --[[ @ 0]]
			f71_arg0.PowerBasedImageUnavailable:setAlpha( 1 ) --[[ @ 0]]
			f71_arg0.clipFinished( f71_arg0.PowerBasedImageUnavailable ) --[[ @ 0]]
			f71_arg0.combatEfficiencyActive:completeAnimation() --[[ @ 0]]
			f71_arg0.combatEfficiencyActive:setAlpha( 1 ) --[[ @ 0]]
			f71_arg0.clipFinished( f71_arg0.combatEfficiencyActive ) --[[ @ 0]]
			f71_arg0.NotAvailable:completeAnimation() --[[ @ 0]]
			f71_arg0.NotAvailable:setAlpha( 1 ) --[[ @ 0]]
			f71_arg0.clipFinished( f71_arg0.NotAvailable ) --[[ @ 0]]
		end,
		DefaultState = function ( f72_arg0, f72_arg1 )
			f72_arg0:__resetProperties() --[[ @ 0]]
			f72_arg0:setupElementClipCounter( 5 ) --[[ @ 0]]
			f72_arg0.FullBackingDeployed:completeAnimation() --[[ @ 0]]
			f72_arg0.FullBackingDeployed:setAlpha( 0 ) --[[ @ 0]]
			f72_arg0.clipFinished( f72_arg0.FullBackingDeployed ) --[[ @ 0]]
			local f72_local0 = function ( f73_arg0 )
				f72_arg0.AbilityPulse:beginAnimation( 200 ) --[[ @ 0]]
				f72_arg0.AbilityPulse:setAlpha( 0 ) --[[ @ 0]]
				f72_arg0.AbilityPulse:registerEventHandler( "interrupted_keyframe", f72_arg0.clipInterrupted ) --[[ @ 0]]
				f72_arg0.AbilityPulse:registerEventHandler( "transition_complete_keyframe", f72_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f72_arg0.AbilityPulse:completeAnimation() --[[ @ 0]]
			f72_arg0.AbilityPulse:setAlpha( 1 ) --[[ @ 0]]
			f72_arg0.AbilityPulse:setRFTMaterial( LUI.UIImage.GetCachedMaterial( @"hash_51DE43899593E67E" ) ) --[[ @ 0]]
			f72_arg0.AbilityPulse:setShaderVector( 0, 0, 1, 0, 0 ) --[[ @ 0]]
			f72_arg0.AbilityPulse:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
			f72_arg0.AbilityPulse:setShaderVector( 3, 0, 0, 0, 0 ) --[[ @ 0]]
			f72_local0( f72_arg0.AbilityPulse ) --[[ @ 0]]
			local f72_local1 = function ( f74_arg0 )
				f72_arg0.PowerBasedImageAvailable:beginAnimation( 200 ) --[[ @ 0]]
				f72_arg0.PowerBasedImageAvailable:setAlpha( 1 ) --[[ @ 0]]
				f72_arg0.PowerBasedImageAvailable:registerEventHandler( "interrupted_keyframe", f72_arg0.clipInterrupted ) --[[ @ 0]]
				f72_arg0.PowerBasedImageAvailable:registerEventHandler( "transition_complete_keyframe", f72_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f72_arg0.PowerBasedImageAvailable:completeAnimation() --[[ @ 0]]
			f72_arg0.PowerBasedImageAvailable:setAlpha( 0 ) --[[ @ 0]]
			f72_local1( f72_arg0.PowerBasedImageAvailable ) --[[ @ 0]]
			local f72_local2 = function ( f75_arg0 )
				f72_arg0.PowerBasedImageUnavailable:beginAnimation( 200 ) --[[ @ 0]]
				f72_arg0.PowerBasedImageUnavailable:setAlpha( 0 ) --[[ @ 0]]
				f72_arg0.PowerBasedImageUnavailable:registerEventHandler( "interrupted_keyframe", f72_arg0.clipInterrupted ) --[[ @ 0]]
				f72_arg0.PowerBasedImageUnavailable:registerEventHandler( "transition_complete_keyframe", f72_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f72_arg0.PowerBasedImageUnavailable:completeAnimation() --[[ @ 0]]
			f72_arg0.PowerBasedImageUnavailable:setAlpha( 1 ) --[[ @ 0]]
			f72_local2( f72_arg0.PowerBasedImageUnavailable ) --[[ @ 0]]
			f72_arg0.NotAvailable:completeAnimation() --[[ @ 0]]
			f72_arg0.NotAvailable:setAlpha( 1 ) --[[ @ 0]]
			f72_arg0.clipFinished( f72_arg0.NotAvailable ) --[[ @ 0]]
		end
	},
	PowerBasedCharging = {
		DefaultClip = function ( f76_arg0, f76_arg1 )
			f76_arg0:__resetProperties() --[[ @ 0]]
			f76_arg0:setupElementClipCounter( 7 ) --[[ @ 0]]
			f76_arg0.ControllerDependentTextBox:completeAnimation() --[[ @ 0]]
			f76_arg0.ControllerDependentTextBox:setAlpha( 0 ) --[[ @ 0]]
			f76_arg0.clipFinished( f76_arg0.ControllerDependentTextBox ) --[[ @ 0]]
			f76_arg0.FullBackingDeployed:completeAnimation() --[[ @ 0]]
			f76_arg0.FullBackingDeployed:setAlpha( 0 ) --[[ @ 0]]
			f76_arg0.clipFinished( f76_arg0.FullBackingDeployed ) --[[ @ 0]]
			f76_arg0.AbilityPulse:completeAnimation() --[[ @ 0]]
			f76_arg0.AbilityPulse:setAlpha( 0 ) --[[ @ 0]]
			f76_arg0.AbilityPulse:setRFTMaterial( LUI.UIImage.GetCachedMaterial( @"hash_51DE43899593E67E" ) ) --[[ @ 0]]
			f76_arg0.AbilityPulse:setShaderVector( 0, 0, 1, 0, 0 ) --[[ @ 0]]
			f76_arg0.AbilityPulse:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
			f76_arg0.AbilityPulse:setShaderVector( 3, 0, 0, 0, 0 ) --[[ @ 0]]
			f76_arg0.clipFinished( f76_arg0.AbilityPulse ) --[[ @ 0]]
			f76_arg0.PowerBasedImageAvailable:completeAnimation() --[[ @ 0]]
			f76_arg0.PowerBasedImageAvailable:setAlpha( 0 ) --[[ @ 0]]
			f76_arg0.clipFinished( f76_arg0.PowerBasedImageAvailable ) --[[ @ 0]]
			f76_arg0.PowerBasedImageUnavailable:completeAnimation() --[[ @ 0]]
			f76_arg0.PowerBasedImageUnavailable:setAlpha( 0.4 ) --[[ @ 0]]
			f76_arg0.clipFinished( f76_arg0.PowerBasedImageUnavailable ) --[[ @ 0]]
			f76_arg0.HeroAbilityHoldString:completeAnimation() --[[ @ 0]]
			f76_arg0.HeroAbilityHoldString:setTopBottom( 0, 0, -52, -3 ) --[[ @ 0]]
			f76_arg0.clipFinished( f76_arg0.HeroAbilityHoldString ) --[[ @ 0]]
			f76_arg0.NotAvailable:completeAnimation() --[[ @ 0]]
			f76_arg0.NotAvailable:setAlpha( 1 ) --[[ @ 0]]
			f76_arg0.clipFinished( f76_arg0.NotAvailable ) --[[ @ 0]]
		end,
		DefaultState = function ( f77_arg0, f77_arg1 )
			f77_arg0:__resetProperties() --[[ @ 0]]
			f77_arg0:setupElementClipCounter( 5 ) --[[ @ 0]]
			f77_arg0.FullBackingDeployed:completeAnimation() --[[ @ 0]]
			f77_arg0.FullBackingDeployed:setAlpha( 0 ) --[[ @ 0]]
			f77_arg0.clipFinished( f77_arg0.FullBackingDeployed ) --[[ @ 0]]
			local f77_local0 = function ( f78_arg0 )
				f77_arg0.AbilityPulse:beginAnimation( 200 ) --[[ @ 0]]
				f77_arg0.AbilityPulse:setAlpha( 0 ) --[[ @ 0]]
				f77_arg0.AbilityPulse:registerEventHandler( "interrupted_keyframe", f77_arg0.clipInterrupted ) --[[ @ 0]]
				f77_arg0.AbilityPulse:registerEventHandler( "transition_complete_keyframe", f77_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f77_arg0.AbilityPulse:completeAnimation() --[[ @ 0]]
			f77_arg0.AbilityPulse:setAlpha( 1 ) --[[ @ 0]]
			f77_arg0.AbilityPulse:setRFTMaterial( LUI.UIImage.GetCachedMaterial( @"hash_51DE43899593E67E" ) ) --[[ @ 0]]
			f77_arg0.AbilityPulse:setShaderVector( 0, 0, 1, 0, 0 ) --[[ @ 0]]
			f77_arg0.AbilityPulse:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
			f77_arg0.AbilityPulse:setShaderVector( 3, 0, 0, 0, 0 ) --[[ @ 0]]
			f77_local0( f77_arg0.AbilityPulse ) --[[ @ 0]]
			local f77_local1 = function ( f79_arg0 )
				f77_arg0.PowerBasedImageAvailable:beginAnimation( 200 ) --[[ @ 0]]
				f77_arg0.PowerBasedImageAvailable:setAlpha( 1 ) --[[ @ 0]]
				f77_arg0.PowerBasedImageAvailable:registerEventHandler( "interrupted_keyframe", f77_arg0.clipInterrupted ) --[[ @ 0]]
				f77_arg0.PowerBasedImageAvailable:registerEventHandler( "transition_complete_keyframe", f77_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f77_arg0.PowerBasedImageAvailable:completeAnimation() --[[ @ 0]]
			f77_arg0.PowerBasedImageAvailable:setAlpha( 0 ) --[[ @ 0]]
			f77_local1( f77_arg0.PowerBasedImageAvailable ) --[[ @ 0]]
			local f77_local2 = function ( f80_arg0 )
				f77_arg0.PowerBasedImageUnavailable:beginAnimation( 200 ) --[[ @ 0]]
				f77_arg0.PowerBasedImageUnavailable:setAlpha( 0 ) --[[ @ 0]]
				f77_arg0.PowerBasedImageUnavailable:registerEventHandler( "interrupted_keyframe", f77_arg0.clipInterrupted ) --[[ @ 0]]
				f77_arg0.PowerBasedImageUnavailable:registerEventHandler( "transition_complete_keyframe", f77_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f77_arg0.PowerBasedImageUnavailable:completeAnimation() --[[ @ 0]]
			f77_arg0.PowerBasedImageUnavailable:setAlpha( 1 ) --[[ @ 0]]
			f77_local2( f77_arg0.PowerBasedImageUnavailable ) --[[ @ 0]]
			f77_arg0.NotAvailable:completeAnimation() --[[ @ 0]]
			f77_arg0.NotAvailable:setAlpha( 1 ) --[[ @ 0]]
			f77_arg0.clipFinished( f77_arg0.NotAvailable ) --[[ @ 0]]
		end
	},
	PowerBased = {
		DefaultClip = function ( f81_arg0, f81_arg1 )
			f81_arg0:__resetProperties() --[[ @ 0]]
			f81_arg0:setupElementClipCounter( 8 ) --[[ @ 0]]
			f81_arg0.ControllerDependentTextBox:completeAnimation() --[[ @ 0]]
			f81_arg0.ControllerDependentTextBox:setAlpha( 1 ) --[[ @ 0]]
			f81_arg0.clipFinished( f81_arg0.ControllerDependentTextBox ) --[[ @ 0]]
			f81_arg0.LED:completeAnimation() --[[ @ 0]]
			f81_arg0.LED:setRGB( 0, 0, 0 ) --[[ @ 0]]
			f81_arg0.LED:setAlpha( 0.3 ) --[[ @ 0]]
			f81_arg0.clipFinished( f81_arg0.LED ) --[[ @ 0]]
			f81_arg0.AbilityPulse:completeAnimation() --[[ @ 0]]
			f81_arg0.AbilityPulse:setRGB( 1, 1, 1 ) --[[ @ 0]]
			f81_arg0.AbilityPulse:setAlpha( 0 ) --[[ @ 0]]
			f81_arg0.AbilityPulse:setRFTMaterial( LUI.UIImage.GetCachedMaterial( @"hash_51DE43899593E67E" ) ) --[[ @ 0]]
			f81_arg0.AbilityPulse:setShaderVector( 0, 0, 1, 0, 0 ) --[[ @ 0]]
			f81_arg0.AbilityPulse:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
			f81_arg0.AbilityPulse:setShaderVector( 3, 0, 0, 0, 0 ) --[[ @ 0]]
			f81_arg0.clipFinished( f81_arg0.AbilityPulse ) --[[ @ 0]]
			f81_arg0.PowerBasedImageAvailable:completeAnimation() --[[ @ 0]]
			f81_arg0.PowerBasedImageAvailable:setAlpha( 1 ) --[[ @ 0]]
			f81_arg0.clipFinished( f81_arg0.PowerBasedImageAvailable ) --[[ @ 0]]
			f81_arg0.PowerBasedImageUnavailable:completeAnimation() --[[ @ 0]]
			f81_arg0.PowerBasedImageUnavailable:setAlpha( 0 ) --[[ @ 0]]
			f81_arg0.clipFinished( f81_arg0.PowerBasedImageUnavailable ) --[[ @ 0]]
			f81_arg0.GlowRing:completeAnimation() --[[ @ 0]]
			f81_arg0.GlowRing:setRGB( 1, 0.44, 0 ) --[[ @ 0]]
			f81_arg0.GlowRing:setAlpha( 1 ) --[[ @ 0]]
			f81_arg0.GlowRing:setShaderVector( 0, 2, 0, 0, 0 ) --[[ @ 0]]
			f81_arg0.clipFinished( f81_arg0.GlowRing ) --[[ @ 0]]
			local f81_local0 = function ( f82_arg0 )
				local f82_local0 = function ( f83_arg0 )
					f83_arg0:beginAnimation( 1000 ) --[[ @ 0]]
					f83_arg0:setAlpha( 0.1 ) --[[ @ 0]]
					f83_arg0:registerEventHandler( "transition_complete_keyframe", f81_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f81_arg0.FlareBack:beginAnimation( 1000, Enum[@"luitween"][@"luitween_ease_out"] ) --[[ @ 0]]
				f81_arg0.FlareBack:setAlpha( 0.2 ) --[[ @ 0]]
				f81_arg0.FlareBack:registerEventHandler( "interrupted_keyframe", f81_arg0.clipInterrupted ) --[[ @ 0]]
				f81_arg0.FlareBack:registerEventHandler( "transition_complete_keyframe", f82_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f81_arg0.FlareBack:completeAnimation() --[[ @ 0]]
			f81_arg0.FlareBack:setAlpha( 0.1 ) --[[ @ 0]]
			f81_arg0.FlareBack:setScale( 1, 1 ) --[[ @ 0]]
			f81_local0( f81_arg0.FlareBack ) --[[ @ 0]]
			local f81_local1 = function ( f84_arg0 )
				f81_arg0.NotAvailable:beginAnimation( 50 ) --[[ @ 0]]
				f81_arg0.NotAvailable:setAlpha( 1 ) --[[ @ 0]]
				f81_arg0.NotAvailable:registerEventHandler( "interrupted_keyframe", f81_arg0.clipInterrupted ) --[[ @ 0]]
				f81_arg0.NotAvailable:registerEventHandler( "transition_complete_keyframe", f81_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f81_arg0.NotAvailable:completeAnimation() --[[ @ 0]]
			f81_arg0.NotAvailable:setAlpha( 0 ) --[[ @ 0]]
			f81_local1( f81_arg0.NotAvailable ) --[[ @ 0]]
			f81_arg0.nextClip = "DefaultClip" --[[ @ 0]]
		end,
		DefaultState = function ( f85_arg0, f85_arg1 )
			f85_arg0:__resetProperties() --[[ @ 0]]
			f85_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f85_arg0.AbilityPulse:completeAnimation() --[[ @ 0]]
			f85_arg0.AbilityPulse:setAlpha( 0 ) --[[ @ 0]]
			f85_arg0.AbilityPulse:setRFTMaterial( LUI.UIImage.GetCachedMaterial( @"hash_51DE43899593E67E" ) ) --[[ @ 0]]
			f85_arg0.AbilityPulse:setShaderVector( 0, 0, 1, 0, 0 ) --[[ @ 0]]
			f85_arg0.AbilityPulse:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
			f85_arg0.AbilityPulse:setShaderVector( 3, 0, 0, 0, 0 ) --[[ @ 0]]
			f85_arg0.clipFinished( f85_arg0.AbilityPulse ) --[[ @ 0]]
			f85_arg0.PowerBasedImageUnavailable:completeAnimation() --[[ @ 0]]
			f85_arg0.PowerBasedImageUnavailable:setAlpha( 0 ) --[[ @ 0]]
			f85_arg0.clipFinished( f85_arg0.PowerBasedImageUnavailable ) --[[ @ 0]]
			f85_arg0.FlareBack:completeAnimation() --[[ @ 0]]
			f85_arg0.FlareBack:setAlpha( 0 ) --[[ @ 0]]
			f85_arg0.clipFinished( f85_arg0.FlareBack ) --[[ @ 0]]
			f85_arg0.NotAvailable:completeAnimation() --[[ @ 0]]
			f85_arg0.NotAvailable:setAlpha( 0 ) --[[ @ 0]]
			f85_arg0.clipFinished( f85_arg0.NotAvailable ) --[[ @ 0]]
			f85_arg0.nextClip = "DefaultState" --[[ @ 0]]
		end,
		InUse = function ( f86_arg0, f86_arg1 )
			f86_arg0:__resetProperties() --[[ @ 0]]
			f86_arg0:setupElementClipCounter( 8 ) --[[ @ 0]]
			local f86_local0 = function ( f87_arg0 )
				f86_arg0.ControllerDependentTextBox:beginAnimation( 100 ) --[[ @ 0]]
				f86_arg0.ControllerDependentTextBox:setAlpha( 0 ) --[[ @ 0]]
				f86_arg0.ControllerDependentTextBox:registerEventHandler( "interrupted_keyframe", f86_arg0.clipInterrupted ) --[[ @ 0]]
				f86_arg0.ControllerDependentTextBox:registerEventHandler( "transition_complete_keyframe", f86_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f86_arg0.ControllerDependentTextBox:completeAnimation() --[[ @ 0]]
			f86_arg0.ControllerDependentTextBox:setAlpha( 1 ) --[[ @ 0]]
			f86_local0( f86_arg0.ControllerDependentTextBox ) --[[ @ 0]]
			f86_arg0.LED:completeAnimation() --[[ @ 0]]
			f86_arg0.LED:setRGB( 0, 0, 0 ) --[[ @ 0]]
			f86_arg0.LED:setAlpha( 0.3 ) --[[ @ 0]]
			f86_arg0.clipFinished( f86_arg0.LED ) --[[ @ 0]]
			local f86_local1 = function ( f88_arg0 )
				f86_arg0.AbilityPulse:beginAnimation( 100 ) --[[ @ 0]]
				f86_arg0.AbilityPulse:registerEventHandler( "interrupted_keyframe", f86_arg0.clipInterrupted ) --[[ @ 0]]
				f86_arg0.AbilityPulse:registerEventHandler( "transition_complete_keyframe", f86_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f86_arg0.AbilityPulse:completeAnimation() --[[ @ 0]]
			f86_arg0.AbilityPulse:setRGB( 1, 1, 1 ) --[[ @ 0]]
			f86_arg0.AbilityPulse:setAlpha( 0 ) --[[ @ 0]]
			f86_arg0.AbilityPulse:setRFTMaterial( LUI.UIImage.GetCachedMaterial( @"hash_51DE43899593E67E" ) ) --[[ @ 0]]
			f86_arg0.AbilityPulse:setShaderVector( 0, 0, 1, 0, 0 ) --[[ @ 0]]
			f86_arg0.AbilityPulse:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
			f86_arg0.AbilityPulse:setShaderVector( 3, 0, 0, 0, 0 ) --[[ @ 0]]
			f86_local1( f86_arg0.AbilityPulse ) --[[ @ 0]]
			local f86_local2 = function ( f89_arg0 )
				f86_arg0.PowerBasedImageAvailable:beginAnimation( 100 ) --[[ @ 0]]
				f86_arg0.PowerBasedImageAvailable:setAlpha( 0 ) --[[ @ 0]]
				f86_arg0.PowerBasedImageAvailable:registerEventHandler( "interrupted_keyframe", f86_arg0.clipInterrupted ) --[[ @ 0]]
				f86_arg0.PowerBasedImageAvailable:registerEventHandler( "transition_complete_keyframe", f86_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f86_arg0.PowerBasedImageAvailable:completeAnimation() --[[ @ 0]]
			f86_arg0.PowerBasedImageAvailable:setAlpha( 1 ) --[[ @ 0]]
			f86_local2( f86_arg0.PowerBasedImageAvailable ) --[[ @ 0]]
			local f86_local3 = function ( f90_arg0 )
				local f90_local0 = function ( f91_arg0 )
					local f91_local0 = function ( f92_arg0 )
						local f92_local0 = function ( f93_arg0 )
							f93_arg0:beginAnimation( 59, Enum[@"luitween"][@"luitween_ease_out"] ) --[[ @ 0]]
							f93_arg0:setScale( 0.94, 0.92 ) --[[ @ 0]]
							f93_arg0:registerEventHandler( "transition_complete_keyframe", f86_arg0.clipFinished ) --[[ @ 0]]
						end
						 --[[ @ 0]]
						f92_arg0:beginAnimation( 20, Enum[@"luitween"][@"luitween_ease_out"] ) --[[ @ 0]]
						f92_arg0:setAlpha( 1 ) --[[ @ 0]]
						f92_arg0:setScale( 0.83, 0.83 ) --[[ @ 0]]
						f92_arg0:registerEventHandler( "transition_complete_keyframe", f92_local0 ) --[[ @ 0]]
					end
					 --[[ @ 0]]
					f91_arg0:beginAnimation( 49 ) --[[ @ 0]]
					f91_arg0:setAlpha( 0.9 ) --[[ @ 0]]
					f91_arg0:setScale( 0.8, 0.8 ) --[[ @ 0]]
					f91_arg0:registerEventHandler( "transition_complete_keyframe", f91_local0 ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f86_arg0.PowerBasedImageUnavailable:beginAnimation( 30 ) --[[ @ 0]]
				f86_arg0.PowerBasedImageUnavailable:setAlpha( 0.3 ) --[[ @ 0]]
				f86_arg0.PowerBasedImageUnavailable:registerEventHandler( "interrupted_keyframe", f86_arg0.clipInterrupted ) --[[ @ 0]]
				f86_arg0.PowerBasedImageUnavailable:registerEventHandler( "transition_complete_keyframe", f90_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f86_arg0.PowerBasedImageUnavailable:completeAnimation() --[[ @ 0]]
			f86_arg0.PowerBasedImageUnavailable:setAlpha( 0 ) --[[ @ 0]]
			f86_arg0.PowerBasedImageUnavailable:setScale( 0.94, 0.92 ) --[[ @ 0]]
			f86_local3( f86_arg0.PowerBasedImageUnavailable ) --[[ @ 0]]
			local f86_local4 = function ( f94_arg0 )
				f86_arg0.GlowRing:beginAnimation( 100 ) --[[ @ 0]]
				f86_arg0.GlowRing:setAlpha( 0 ) --[[ @ 0]]
				f86_arg0.GlowRing:setShaderVector( 0, 1, 0, 0, 0 ) --[[ @ 0]]
				f86_arg0.GlowRing:registerEventHandler( "interrupted_keyframe", f86_arg0.clipInterrupted ) --[[ @ 0]]
				f86_arg0.GlowRing:registerEventHandler( "transition_complete_keyframe", f86_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f86_arg0.GlowRing:completeAnimation() --[[ @ 0]]
			f86_arg0.GlowRing:setRGB( 1, 0.44, 0 ) --[[ @ 0]]
			f86_arg0.GlowRing:setAlpha( 1 ) --[[ @ 0]]
			f86_arg0.GlowRing:setShaderVector( 0, 2, 0, 0, 0 ) --[[ @ 0]]
			f86_local4( f86_arg0.GlowRing ) --[[ @ 0]]
			local f86_local5 = function ( f95_arg0 )
				f86_arg0.FlareBack:beginAnimation( 100 ) --[[ @ 0]]
				f86_arg0.FlareBack:setAlpha( 0 ) --[[ @ 0]]
				f86_arg0.FlareBack:setScale( 1, 0.8 ) --[[ @ 0]]
				f86_arg0.FlareBack:registerEventHandler( "interrupted_keyframe", f86_arg0.clipInterrupted ) --[[ @ 0]]
				f86_arg0.FlareBack:registerEventHandler( "transition_complete_keyframe", f86_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f86_arg0.FlareBack:completeAnimation() --[[ @ 0]]
			f86_arg0.FlareBack:setAlpha( 0.1 ) --[[ @ 0]]
			f86_arg0.FlareBack:setScale( 1, 1 ) --[[ @ 0]]
			f86_local5( f86_arg0.FlareBack ) --[[ @ 0]]
			f86_arg0.NotAvailable:completeAnimation() --[[ @ 0]]
			f86_arg0.NotAvailable:setAlpha( 0 ) --[[ @ 0]]
			f86_arg0.clipFinished( f86_arg0.NotAvailable ) --[[ @ 0]]
			f86_arg0.nextClip = "InUse" --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.AmmoWidgetMP_Ultimate_Internal.__onClose = function ( f96_arg0 )
	f96_arg0.ControllerDependentTextBox:close() --[[ @ 0]]
	f96_arg0.TankUseString:close() --[[ @ 0]]
	f96_arg0.AbilityPulse:close() --[[ @ 0]]
	f96_arg0.AmmoWidgetAbilityContainer:close() --[[ @ 0]]
	f96_arg0.PowerBasedImageAvailable:close() --[[ @ 0]]
	f96_arg0.PowerBasedImageUnavailable:close() --[[ @ 0]]
	f96_arg0.UltimateRadialMeterWipes:close() --[[ @ 0]]
	f96_arg0.HeroAbilityHoldString:close() --[[ @ 0]]
	f96_arg0.HeroAbilityHoldStringPC:close() --[[ @ 0]]
	f96_arg0.NotAvailable:close() --[[ @ 0]]
end
 --[[ @ 0]]
