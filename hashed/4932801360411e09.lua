-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:49
require( "ui/uieditor/widgets/pc_notif" ) --[[ @ 0]]

CoD.PC_Notif_Container = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.PC_Notif_Container.__defaultWidth = 450 --[[ @ 0]]
CoD.PC_Notif_Container.__defaultHeight = 100 --[[ @ 0]]
CoD.PC_Notif_Container.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	CoD.PCUtility.StartAddingSticky( f1_arg0, self ) --[[ @ 0]]
	CoD.PCNotificationsUtility.PreSetupNotificationWidget( self, f1_arg0, f1_arg1 ) --[[ @ 0]]
	self:setUseCylinderMapping( false ) --[[ @ 0]]
	self:setClass( CoD.PC_Notif_Container ) --[[ @ 0]]
	self.id = "PC_Notif_Container" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	local PCNotif = nil --[[ @ 0]]
	
	PCNotif = CoD.PC_Notif.new( f1_arg0, f1_arg1, 0.5, 0.5, -225, 225, 0, 0, 0, 100 ) --[[ @ 0]]
	self:addElement( PCNotif ) --[[ @ 0]]
	self.PCNotif = PCNotif --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Invisible",
			condition = function ( menu, element, event )
				return not CoD.PCNotificationsUtility.IsNotificationWidgetVisible( f1_arg1 )
			end
		}
	} ) --[[ @ 0]]
	local f1_local2 = self --[[ @ 0]]
	local f1_local3 = self.subscribeToModel --[[ @ 0]]
	local f1_local4 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local3( f1_local2, f1_local4["PC.CurrentNotification.visibility"], function ( f3_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f3_arg0:get(),
			modelName = "PC.CurrentNotification.visibility"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( self, "setState", function ( element, controller, f4_arg2, f4_arg3, f4_arg4 )
		if IsSelfInState( self, "Invisible" ) and IsElementPropertyValue( self, "__wasOpen", true ) then
			PlayClip( self, "Out", controller ) --[[ @ 0]]
			SetElementProperty( self, "__wasOpen", false ) --[[ @ 0]]
			SetLoseFocusToSelf( self, controller ) --[[ @ 0]]
		elseif IsInDefaultState( element ) then
			PlayClip( self, "In", controller ) --[[ @ 0]]
			SetElementProperty( self, "__wasOpen", true ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	if CoD.isPC then
		PCNotif.id = "PCNotif" --[[ @ 0]]
	end
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	f1_local3 = self --[[ @ 0]]
	CoD.PCNotificationsUtility.PrepareNotificationContainer( self, f1_arg1, f1_arg0, self.PCNotif ) --[[ @ 0]]
	DisableKeyboardNavigationByElement( self ) --[[ @ 0]]
	CoD.PCUtility.StopAddingSticky( f1_arg0 ) --[[ @ 0]]
	return self
end
 --[[ @ 0]]
CoD.PC_Notif_Container.__resetProperties = function ( f5_arg0 )
	f5_arg0.PCNotif:completeAnimation() --[[ @ 0]]
	f5_arg0.PCNotif:setLeftRight( 0.5, 0.5, -225, 225 ) --[[ @ 0]]
	f5_arg0.PCNotif:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.PC_Notif_Container.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f6_arg0, f6_arg1 )
			f6_arg0:__resetProperties() --[[ @ 0]]
			f6_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f6_arg0.PCNotif:completeAnimation() --[[ @ 0]]
			f6_arg0.PCNotif:setAlpha( 1 ) --[[ @ 0]]
			f6_arg0.clipFinished( f6_arg0.PCNotif ) --[[ @ 0]]
		end,
		In = function ( f7_arg0, f7_arg1 )
			f7_arg0:__resetProperties() --[[ @ 0]]
			f7_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f7_local0 = function ( f8_arg0 )
				f7_arg0.PCNotif:beginAnimation( 250, Enum[@"luitween"][@"luitween_ease_both"] ) --[[ @ 0]]
				f7_arg0.PCNotif:setLeftRight( 0.5, 0.5, -225, 225 ) --[[ @ 0]]
				f7_arg0.PCNotif:setAlpha( 1 ) --[[ @ 0]]
				f7_arg0.PCNotif:registerEventHandler( "interrupted_keyframe", f7_arg0.clipInterrupted ) --[[ @ 0]]
				f7_arg0.PCNotif:registerEventHandler( "transition_complete_keyframe", f7_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f7_arg0.PCNotif:completeAnimation() --[[ @ 0]]
			f7_arg0.PCNotif:setLeftRight( 0.5, 0.5, -175, 275 ) --[[ @ 0]]
			f7_arg0.PCNotif:setAlpha( 0 ) --[[ @ 0]]
			f7_local0( f7_arg0.PCNotif ) --[[ @ 0]]
		end
	},
	Invisible = {
		DefaultClip = function ( f9_arg0, f9_arg1 )
			f9_arg0:__resetProperties() --[[ @ 0]]
			f9_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f9_arg0.PCNotif:completeAnimation() --[[ @ 0]]
			f9_arg0.PCNotif:setAlpha( 0 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.PCNotif ) --[[ @ 0]]
		end,
		Out = function ( f10_arg0, f10_arg1 )
			f10_arg0:__resetProperties() --[[ @ 0]]
			f10_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f10_local0 = function ( f11_arg0 )
				f10_arg0.PCNotif:beginAnimation( 250, Enum[@"luitween"][@"luitween_ease_both"] ) --[[ @ 0]]
				f10_arg0.PCNotif:setLeftRight( 0.5, 0.5, -205, 245 ) --[[ @ 0]]
				f10_arg0.PCNotif:setAlpha( 0 ) --[[ @ 0]]
				f10_arg0.PCNotif:registerEventHandler( "interrupted_keyframe", f10_arg0.clipInterrupted ) --[[ @ 0]]
				f10_arg0.PCNotif:registerEventHandler( "transition_complete_keyframe", f10_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f10_arg0.PCNotif:completeAnimation() --[[ @ 0]]
			f10_arg0.PCNotif:setLeftRight( 0.5, 0.5, -225, 225 ) --[[ @ 0]]
			f10_arg0.PCNotif:setAlpha( 1 ) --[[ @ 0]]
			f10_local0( f10_arg0.PCNotif ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.PC_Notif_Container.__onClose = function ( f12_arg0 )
	f12_arg0.PCNotif:close() --[[ @ 0]]
end
 --[[ @ 0]]
