-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:50
require( "x64:51e10bd8956012bd" ) --[[ @ 0]]
require( "x64:4f13c3cfcae3a2d7" ) --[[ @ 0]]
require( "ui/uieditor/widgets/startmenu/options/startmenuoptionsbackground" ) --[[ @ 0]]

CoD.MPSpecialistHUBTags = InheritFrom( CoD.Menu ) --[[ @ 0]]
LUI.createMenu.MPSpecialistHUBTags = function ( f1_arg0, f1_arg1 )
	local self = CoD.Menu.NewForUIEditor( "MPSpecialistHUBTags", f1_arg0 ) --[[ @ 0]]
	local f1_local1 = self --[[ @ 0]]
	SendClientScriptMenuChangeNotify( f1_arg0, f1_local1, true ) --[[ @ 0]]
	CoD.BaseUtility.SetModelFromUserData( f1_arg0, f1_local1, f1_arg1.model ) --[[ @ 0]]
	CoD.BaseUtility.SetPropertiesFromUserData( self, f1_arg1.properties ) --[[ @ 0]]
	CoD.BaseUtility.InitControllerModel( f1_arg0, "MPSpecialistHUBBindWheel.NoBackground", false ) --[[ @ 0]]
	self:setClass( CoD.MPSpecialistHUBTags ) --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self:setOwner( f1_arg0 ) --[[ @ 0]]
	self:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	self:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	self:playSound( "menu_open", f1_arg0 ) --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_local1:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local Background = CoD.StartMenuOptionsBackground.new( f1_local1, f1_arg0, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	self:addElement( Background ) --[[ @ 0]]
	self.Background = Background --[[ @ 0]]
	
	local BlackBacking = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	BlackBacking:setRGB( 0, 0, 0 ) --[[ @ 0]]
	BlackBacking:setAlpha( 0.2 ) --[[ @ 0]]
	self:addElement( BlackBacking ) --[[ @ 0]]
	self.BlackBacking = BlackBacking --[[ @ 0]]
	
	local TiledPlusGrid = LUI.UIImage.new( 0.5, 0.5, -1095, 960, 0, 0, 0, 1080 ) --[[ @ 0]]
	TiledPlusGrid:setAlpha( 0.05 ) --[[ @ 0]]
	TiledPlusGrid:setImage( RegisterImage( @"uie_ui_hud_vehicle_hellstorm_repeat_plusgrid" ) ) --[[ @ 0]]
	TiledPlusGrid:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_67C9C02F608D0A75" ) ) --[[ @ 0]]
	TiledPlusGrid:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	TiledPlusGrid:setupNineSliceShader( 220, 220 ) --[[ @ 0]]
	self:addElement( TiledPlusGrid ) --[[ @ 0]]
	self.TiledPlusGrid = TiledPlusGrid --[[ @ 0]]
	
	local Frame = LUI.UIFrame.new( f1_local1, f1_arg0, 0, 0, false ) --[[ @ 0]]
	Frame:setLeftRight( 0.5, 0.5, -960, 960 ) --[[ @ 0]]
	Frame:setTopBottom( 0.5, 0.5, -540, 540 ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( Frame, "changeFrameWidget", function ( element, controller, f2_arg2 )
		UpdateAllMenuButtonPrompts( f1_local1, f1_arg0 ) --[[ @ 0]]
		UpdateSelfState( self, f1_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( Frame ) --[[ @ 0]]
	self.Frame = Frame --[[ @ 0]]
	
	local MPSpecialistHUBTagsSafeAreaContainer = CoD.MPSpecialistHUBTags_SafeAreaContainer.new( f1_local1, f1_arg0, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	MPSpecialistHUBTagsSafeAreaContainer.CommonHeader.subtitle.StageTitle:setText( LocalizeToUpperString( @"hash_246EFDF3FB2763B5" ) ) --[[ @ 0]]
	MPSpecialistHUBTagsSafeAreaContainer:subscribeToGlobalModel( f1_arg0, "LobbyRoot", "lobbyTitle", function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			MPSpecialistHUBTagsSafeAreaContainer.CommonHeader.subtitle.subtitle:setText( Engine[@"hash_4F9F1239CFD921FE"]( f3_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	MPSpecialistHUBTagsSafeAreaContainer:registerEventHandler( "menu_loaded", function ( element, event )
		local f4_local0 = nil --[[ @ 0]]
		if element.menuLoaded then
			f4_local0 = element:menuLoaded( event ) --[[ @ 0]]
		elseif element.super.menuLoaded then
			f4_local0 = element.super:menuLoaded( event ) --[[ @ 0]]
		end
		if not IsPC() then
			SizeToSafeArea( element, f1_arg0 ) --[[ @ 0]]
		end
		if not f4_local0 then
			f4_local0 = element:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f4_local0
	end ) --[[ @ 0]]
	self:addElement( MPSpecialistHUBTagsSafeAreaContainer ) --[[ @ 0]]
	self.MPSpecialistHUBTagsSafeAreaContainer = MPSpecialistHUBTagsSafeAreaContainer --[[ @ 0]]
	
	Frame:linkToElementModel( MPSpecialistHUBTagsSafeAreaContainer.CommonTabBarLeftAlign.Tabs.grid, "tabWidget", true, function ( model )
		local f5_local0 = model:get() --[[ @ 0]]
		if f5_local0 ~= nil then
			Frame:changeFrameWidget( f5_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:mergeStateConditions( {
		{
			stateName = "NoBackground",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsControllerModelValueTrue( f1_arg0, "MPSpecialistHUBBindWheel.NoBackground" )
			end
		}
	} ) --[[ @ 0]]
	local f1_local7 = self --[[ @ 0]]
	local f1_local8 = self.subscribeToModel --[[ @ 0]]
	local f1_local9 = Engine[@"getmodelforcontroller"]( f1_arg0 ) --[[ @ 0]]
	f1_local8( f1_local7, f1_local9["MPSpecialistHUBBindWheel.NoBackground"], function ( f7_arg0 )
		f1_local1:updateElementState( self, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f7_arg0:get(),
			modelName = "MPSpecialistHUBBindWheel.NoBackground"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"luibutton"][@"lui_key_xbb_pscircle"], nil, function ( element, menu, controller, model )
		GoBack( self, controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xbb_pscircle"], @"menu/back", nil, nil ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"luibutton"][@"lui_key_xbx_pssquare"], nil, function ( element, menu, controller, model )
		CoD.BaseUtility.UINoAction() --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xbx_pssquare"], @"hash_0", nil, nil ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( self, "close", function ( element )
		SendClientScriptMenuChangeNotify( f1_arg0, f1_local1, false ) --[[ @ 0]]
		ClearMenuSavedState( f1_local1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self.__on_menuOpened_self = function ( f13_arg0, f13_arg1, f13_arg2, f13_arg3 )
		local f13_local0 = self --[[ @ 0]]
		MenuUnhideFreeCursor( f13_arg2, f13_arg1 ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	f1_local1:addMenuOpenedCallback( self.__on_menuOpened_self ) --[[ @ 0]]
	Frame.id = "Frame" --[[ @ 0]]
	MPSpecialistHUBTagsSafeAreaContainer.id = "MPSpecialistHUBTagsSafeAreaContainer" --[[ @ 0]]
	self:processEvent( {
		name = "menu_loaded",
		controller = f1_arg0
	} ) --[[ @ 0]]
	self.__defaultFocus = Frame --[[ @ 0]]
	if CoD.isPC and (IsKeyboard( f1_arg0 ) or self.ignoreCursor) then
		self:restoreState( f1_arg0 ) --[[ @ 0]]
	end
	self.__on_close_removeOverrides = function ()
		f1_local1:removeMenuOpenedCallback( self.__on_menuOpened_self ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.MPSpecialistHUBTags.__resetProperties = function ( f15_arg0 )
	f15_arg0.Background:completeAnimation() --[[ @ 0]]
	f15_arg0.TiledPlusGrid:completeAnimation() --[[ @ 0]]
	f15_arg0.BlackBacking:completeAnimation() --[[ @ 0]]
	f15_arg0.Background:setAlpha( 1 ) --[[ @ 0]]
	f15_arg0.TiledPlusGrid:setAlpha( 0.05 ) --[[ @ 0]]
	f15_arg0.BlackBacking:setAlpha( 0.2 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.MPSpecialistHUBTags.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f16_arg0, f16_arg1 )
			f16_arg0:__resetProperties() --[[ @ 0]]
			f16_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	NoBackground = {
		DefaultClip = function ( f17_arg0, f17_arg1 )
			f17_arg0:__resetProperties() --[[ @ 0]]
			f17_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f17_arg0.Background:completeAnimation() --[[ @ 0]]
			f17_arg0.Background:setAlpha( 0 ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.Background ) --[[ @ 0]]
			f17_arg0.BlackBacking:completeAnimation() --[[ @ 0]]
			f17_arg0.BlackBacking:setAlpha( 0 ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.BlackBacking ) --[[ @ 0]]
			f17_arg0.TiledPlusGrid:completeAnimation() --[[ @ 0]]
			f17_arg0.TiledPlusGrid:setAlpha( 0 ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.TiledPlusGrid ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.MPSpecialistHUBTags.__onClose = function ( f18_arg0 )
	f18_arg0.__on_close_removeOverrides() --[[ @ 0]]
	f18_arg0.Frame:close() --[[ @ 0]]
	f18_arg0.Background:close() --[[ @ 0]]
	f18_arg0.MPSpecialistHUBTagsSafeAreaContainer:close() --[[ @ 0]]
end
 --[[ @ 0]]
