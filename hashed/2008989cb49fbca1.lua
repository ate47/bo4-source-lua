-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:48
require( "ui/uieditor/widgets/lobby/common/fe_focusbarcontainer" ) --[[ @ 0]]
require( "ui/uieditor/widgets/startmenu/startmenu_frame_nobg" ) --[[ @ 0]]

CoD.StartMenu_Options_CheckBoxOption = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.StartMenu_Options_CheckBoxOption.__defaultWidth = 750 --[[ @ 0]]
CoD.StartMenu_Options_CheckBoxOption.__defaultHeight = 51 --[[ @ 0]]
CoD.StartMenu_Options_CheckBoxOption.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.StartMenu_Options_CheckBoxOption ) --[[ @ 0]]
	self.id = "StartMenu_Options_CheckBoxOption" --[[ @ 0]]
	self.soundSet = "ChooseDecal" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local fullBacking = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	fullBacking:setRGB( 0.1, 0.1, 0.1 ) --[[ @ 0]]
	fullBacking:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( fullBacking ) --[[ @ 0]]
	self.fullBacking = fullBacking --[[ @ 0]]
	
	local fullBorder = CoD.StartMenu_frame_noBG.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	fullBorder:setRGB( 0.87, 0.37, 0 ) --[[ @ 0]]
	fullBorder:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( fullBorder ) --[[ @ 0]]
	self.fullBorder = fullBorder --[[ @ 0]]
	
	local checkboxBacking = CoD.StartMenu_frame_noBG.new( f1_arg0, f1_arg1, 0, 1, -13, -665, 0, 1, -20, 20 ) --[[ @ 0]]
	checkboxBacking:setScale( 0.3, 0.3 ) --[[ @ 0]]
	self:addElement( checkboxBacking ) --[[ @ 0]]
	self.checkboxBacking = checkboxBacking --[[ @ 0]]
	
	local CheckboxBkg = LUI.UIImage.new( 0, 0, 22, 50, 0, 0, 13, 39 ) --[[ @ 0]]
	CheckboxBkg:setAlpha( 0 ) --[[ @ 0]]
	CheckboxBkg:setImage( RegisterImage( @"uie_t7_menu_cacselection_checkbox_empty" ) ) --[[ @ 0]]
	self:addElement( CheckboxBkg ) --[[ @ 0]]
	self.CheckboxBkg = CheckboxBkg --[[ @ 0]]
	
	local checkboxCheck = LUI.UIImage.new( 0, 0, 22, 50, 0, 0, 13, 39 ) --[[ @ 0]]
	checkboxCheck:setImage( RegisterImage( @"uie_t7_menu_cacselection_checkbox" ) ) --[[ @ 0]]
	self:addElement( checkboxCheck ) --[[ @ 0]]
	self.checkboxCheck = checkboxCheck --[[ @ 0]]
	
	local labelText = LUI.UIText.new( 0, 0, 70, 750, 0, 0, 7, 45 ) --[[ @ 0]]
	labelText:setTTF( "default" ) --[[ @ 0]]
	labelText:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	labelText:linkToElementModel( self, "label", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			labelText:setText( Engine[@"hash_4F9F1239CFD921FE"]( f2_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( labelText ) --[[ @ 0]]
	self.labelText = labelText --[[ @ 0]]
	
	local StartMenuframenoBG00 = CoD.StartMenu_frame_noBG.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	self:addElement( StartMenuframenoBG00 ) --[[ @ 0]]
	self.StartMenuframenoBG00 = StartMenuframenoBG00 --[[ @ 0]]
	
	local FocusBarT = CoD.FE_FocusBarContainer.new( f1_arg0, f1_arg1, 0, 1, 4, 0, 0, 0, 0, 6 ) --[[ @ 0]]
	FocusBarT:setAlpha( 0 ) --[[ @ 0]]
	FocusBarT:setZoom( 1 ) --[[ @ 0]]
	self:addElement( FocusBarT ) --[[ @ 0]]
	self.FocusBarT = FocusBarT --[[ @ 0]]
	
	local FocusBarB = CoD.FE_FocusBarContainer.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 1, 1, -8, 0 ) --[[ @ 0]]
	FocusBarB:setAlpha( 0 ) --[[ @ 0]]
	FocusBarB:setZoom( 1 ) --[[ @ 0]]
	self:addElement( FocusBarB ) --[[ @ 0]]
	self.FocusBarB = FocusBarB --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Checked",
			condition = function ( menu, element, event )
				return CheckBoxOptionChecked( element, event )
			end
		},
		{
			stateName = "Disabled",
			condition = function ( menu, element, event )
				return IsDisabled( element, f1_arg1 )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "disabled", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "disabled"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.StartMenu_Options_CheckBoxOption.__resetProperties = function ( f6_arg0 )
	f6_arg0.checkboxBacking:completeAnimation() --[[ @ 0]]
	f6_arg0.checkboxCheck:completeAnimation() --[[ @ 0]]
	f6_arg0.CheckboxBkg:completeAnimation() --[[ @ 0]]
	f6_arg0.FocusBarB:completeAnimation() --[[ @ 0]]
	f6_arg0.fullBorder:completeAnimation() --[[ @ 0]]
	f6_arg0.FocusBarT:completeAnimation() --[[ @ 0]]
	f6_arg0.labelText:completeAnimation() --[[ @ 0]]
	f6_arg0.checkboxBacking:setRGB( 1, 1, 1 ) --[[ @ 0]]
	f6_arg0.checkboxCheck:setRGB( 1, 1, 1 ) --[[ @ 0]]
	f6_arg0.checkboxCheck:setAlpha( 1 ) --[[ @ 0]]
	f6_arg0.CheckboxBkg:setRGB( 1, 1, 1 ) --[[ @ 0]]
	f6_arg0.CheckboxBkg:setAlpha( 0 ) --[[ @ 0]]
	f6_arg0.FocusBarB:setAlpha( 0 ) --[[ @ 0]]
	f6_arg0.fullBorder:setAlpha( 0 ) --[[ @ 0]]
	f6_arg0.FocusBarT:setLeftRight( 0, 1, 4, 0 ) --[[ @ 0]]
	f6_arg0.FocusBarT:setTopBottom( 0, 0, 0, 6 ) --[[ @ 0]]
	f6_arg0.FocusBarT:setAlpha( 0 ) --[[ @ 0]]
	f6_arg0.labelText:setRGB( 1, 1, 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.StartMenu_Options_CheckBoxOption.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f7_arg0, f7_arg1 )
			f7_arg0:__resetProperties() --[[ @ 0]]
			f7_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f7_arg0.checkboxBacking:completeAnimation() --[[ @ 0]]
			f7_arg0.checkboxBacking:setRGB( 0.78, 0.78, 0.78 ) --[[ @ 0]]
			f7_arg0.clipFinished( f7_arg0.checkboxBacking ) --[[ @ 0]]
			f7_arg0.CheckboxBkg:completeAnimation() --[[ @ 0]]
			f7_arg0.CheckboxBkg:setAlpha( 1 ) --[[ @ 0]]
			f7_arg0.clipFinished( f7_arg0.CheckboxBkg ) --[[ @ 0]]
			f7_arg0.checkboxCheck:completeAnimation() --[[ @ 0]]
			f7_arg0.checkboxCheck:setRGB( 1, 0.45, 0 ) --[[ @ 0]]
			f7_arg0.checkboxCheck:setAlpha( 0 ) --[[ @ 0]]
			f7_arg0.clipFinished( f7_arg0.checkboxCheck ) --[[ @ 0]]
			f7_arg0.FocusBarB:beginAnimation( 40 ) --[[ @ 0]]
			f7_arg0.FocusBarB:setAlpha( 0 ) --[[ @ 0]]
			f7_arg0.FocusBarB:registerEventHandler( "interrupted_keyframe", f7_arg0.clipInterrupted ) --[[ @ 0]]
			f7_arg0.FocusBarB:registerEventHandler( "transition_complete_keyframe", f7_arg0.clipFinished ) --[[ @ 0]]
		end,
		Focus = function ( f8_arg0, f8_arg1 )
			f8_arg0:__resetProperties() --[[ @ 0]]
			f8_arg0:setupElementClipCounter( 6 ) --[[ @ 0]]
			f8_arg0.fullBorder:completeAnimation() --[[ @ 0]]
			f8_arg0.fullBorder:setAlpha( 1 ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.fullBorder ) --[[ @ 0]]
			f8_arg0.checkboxBacking:completeAnimation() --[[ @ 0]]
			f8_arg0.checkboxBacking:setRGB( 0.87, 0.37, 0 ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.checkboxBacking ) --[[ @ 0]]
			f8_arg0.CheckboxBkg:completeAnimation() --[[ @ 0]]
			f8_arg0.CheckboxBkg:setRGB( 1, 0.41, 0 ) --[[ @ 0]]
			f8_arg0.CheckboxBkg:setAlpha( 1 ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.CheckboxBkg ) --[[ @ 0]]
			f8_arg0.checkboxCheck:completeAnimation() --[[ @ 0]]
			f8_arg0.checkboxCheck:setAlpha( 0 ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.checkboxCheck ) --[[ @ 0]]
			f8_arg0.FocusBarT:completeAnimation() --[[ @ 0]]
			f8_arg0.FocusBarT:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
			f8_arg0.FocusBarT:setTopBottom( 0, 0, 0, 6 ) --[[ @ 0]]
			f8_arg0.FocusBarT:setAlpha( 1 ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.FocusBarT ) --[[ @ 0]]
			f8_arg0.FocusBarB:completeAnimation() --[[ @ 0]]
			f8_arg0.FocusBarB:setAlpha( 1 ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.FocusBarB ) --[[ @ 0]]
		end
	},
	Checked = {
		DefaultClip = function ( f9_arg0, f9_arg1 )
			f9_arg0:__resetProperties() --[[ @ 0]]
			f9_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f9_arg0.checkboxBacking:completeAnimation() --[[ @ 0]]
			f9_arg0.checkboxBacking:setRGB( 0.78, 0.78, 0.78 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.checkboxBacking ) --[[ @ 0]]
			f9_arg0.CheckboxBkg:completeAnimation() --[[ @ 0]]
			f9_arg0.CheckboxBkg:setAlpha( 0.5 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.CheckboxBkg ) --[[ @ 0]]
			local f9_local0 = function ( f10_arg0 )
				f9_arg0.checkboxCheck:beginAnimation( 40 ) --[[ @ 0]]
				f9_arg0.checkboxCheck:registerEventHandler( "interrupted_keyframe", f9_arg0.clipInterrupted ) --[[ @ 0]]
				f9_arg0.checkboxCheck:registerEventHandler( "transition_complete_keyframe", f9_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f9_arg0.checkboxCheck:completeAnimation() --[[ @ 0]]
			f9_arg0.checkboxCheck:setRGB( 1, 1, 1 ) --[[ @ 0]]
			f9_arg0.checkboxCheck:setAlpha( 1 ) --[[ @ 0]]
			f9_local0( f9_arg0.checkboxCheck ) --[[ @ 0]]
		end,
		Focus = function ( f11_arg0, f11_arg1 )
			f11_arg0:__resetProperties() --[[ @ 0]]
			f11_arg0:setupElementClipCounter( 5 ) --[[ @ 0]]
			f11_arg0.fullBorder:completeAnimation() --[[ @ 0]]
			f11_arg0.fullBorder:setAlpha( 1 ) --[[ @ 0]]
			f11_arg0.clipFinished( f11_arg0.fullBorder ) --[[ @ 0]]
			f11_arg0.checkboxBacking:completeAnimation() --[[ @ 0]]
			f11_arg0.checkboxBacking:setRGB( 0.87, 0.37, 0 ) --[[ @ 0]]
			f11_arg0.clipFinished( f11_arg0.checkboxBacking ) --[[ @ 0]]
			local f11_local0 = function ( f12_arg0 )
				f11_arg0.checkboxCheck:beginAnimation( 40 ) --[[ @ 0]]
				f11_arg0.checkboxCheck:setRGB( 0.98, 0.44, 0.04 ) --[[ @ 0]]
				f11_arg0.checkboxCheck:registerEventHandler( "interrupted_keyframe", f11_arg0.clipInterrupted ) --[[ @ 0]]
				f11_arg0.checkboxCheck:registerEventHandler( "transition_complete_keyframe", f11_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f11_arg0.checkboxCheck:completeAnimation() --[[ @ 0]]
			f11_arg0.checkboxCheck:setRGB( 0.87, 0.37, 0 ) --[[ @ 0]]
			f11_local0( f11_arg0.checkboxCheck ) --[[ @ 0]]
			local f11_local1 = function ( f13_arg0 )
				f11_arg0.FocusBarT:beginAnimation( 40 ) --[[ @ 0]]
				f11_arg0.FocusBarT:registerEventHandler( "interrupted_keyframe", f11_arg0.clipInterrupted ) --[[ @ 0]]
				f11_arg0.FocusBarT:registerEventHandler( "transition_complete_keyframe", f11_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f11_arg0.FocusBarT:completeAnimation() --[[ @ 0]]
			f11_arg0.FocusBarT:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
			f11_arg0.FocusBarT:setTopBottom( 0, 0, 0, 6 ) --[[ @ 0]]
			f11_arg0.FocusBarT:setAlpha( 1 ) --[[ @ 0]]
			f11_local1( f11_arg0.FocusBarT ) --[[ @ 0]]
			f11_arg0.FocusBarB:beginAnimation( 40 ) --[[ @ 0]]
			f11_arg0.FocusBarB:setAlpha( 1 ) --[[ @ 0]]
			f11_arg0.FocusBarB:registerEventHandler( "interrupted_keyframe", f11_arg0.clipInterrupted ) --[[ @ 0]]
			f11_arg0.FocusBarB:registerEventHandler( "transition_complete_keyframe", f11_arg0.clipFinished ) --[[ @ 0]]
		end
	},
	Disabled = {
		DefaultClip = function ( f14_arg0, f14_arg1 )
			f14_arg0:__resetProperties() --[[ @ 0]]
			f14_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f14_arg0.checkboxBacking:completeAnimation() --[[ @ 0]]
			f14_arg0.checkboxBacking:setRGB( 0.2, 0.2, 0.2 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.checkboxBacking ) --[[ @ 0]]
			f14_arg0.CheckboxBkg:completeAnimation() --[[ @ 0]]
			f14_arg0.CheckboxBkg:setRGB( 0.2, 0.2, 0.2 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.CheckboxBkg ) --[[ @ 0]]
			f14_arg0.checkboxCheck:completeAnimation() --[[ @ 0]]
			f14_arg0.checkboxCheck:setRGB( 0.2, 0.2, 0.2 ) --[[ @ 0]]
			f14_arg0.checkboxCheck:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.checkboxCheck ) --[[ @ 0]]
			f14_arg0.labelText:completeAnimation() --[[ @ 0]]
			f14_arg0.labelText:setRGB( 0.2, 0.2, 0.2 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.labelText ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.StartMenu_Options_CheckBoxOption.__onClose = function ( f15_arg0 )
	f15_arg0.fullBorder:close() --[[ @ 0]]
	f15_arg0.checkboxBacking:close() --[[ @ 0]]
	f15_arg0.labelText:close() --[[ @ 0]]
	f15_arg0.StartMenuframenoBG00:close() --[[ @ 0]]
	f15_arg0.FocusBarT:close() --[[ @ 0]]
	f15_arg0.FocusBarB:close() --[[ @ 0]]
end
 --[[ @ 0]]
