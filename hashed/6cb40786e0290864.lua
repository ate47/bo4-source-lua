-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:35
CoD.SpectreRisingIndicator = InheritFrom( CoD.Menu ) --[[ @ 0]]
LUI.createMenu.SpectreRisingIndicator = function ( f1_arg0, f1_arg1 )
	local self = CoD.Menu.NewForUIEditor( "SpectreRisingIndicator", f1_arg0 ) --[[ @ 0]]
	local f1_local1 = self --[[ @ 0]]
	self:setClass( CoD.SpectreRisingIndicator ) --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self:setOwner( f1_arg0 ) --[[ @ 0]]
	self:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	self:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	self:playSound( "menu_open", f1_arg0 ) --[[ @ 0]]
	self.ignoreCursor = true --[[ @ 0]]
	f1_local1:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local BountyIndicator = LUI.UIImage.new( 0.5, 0.5, -30, 30, 0.5, 0.5, -30, 30 ) --[[ @ 0]]
	BountyIndicator:setImage( RegisterImage( @"uie_ui_hud_wz_hud_bounty" ) ) --[[ @ 0]]
	self:addElement( BountyIndicator ) --[[ @ 0]]
	self.BountyIndicator = BountyIndicator --[[ @ 0]]
	
	local pointer = LUI.UIImage.new( 0.5, 0.5, -37.5, 37.5, 0.5, 0.5, -1, 74 ) --[[ @ 0]]
	pointer:setImage( RegisterImage( @"uie_ui_hud_wz_hud_bounty_pointer" ) ) --[[ @ 0]]
	self:addElement( pointer ) --[[ @ 0]]
	self.pointer = pointer --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "VisibleBounty",
			condition = function ( menu, element, event )
				local f2_local0 = CoD.ModelUtility.IsModelValueEqualTo( f1_arg0, "hudItems.isSpectre", 1 ) --[[ @ 0]]
				if f2_local0 then
					if not CoD.ModelUtility.IsSelfModelValueEqualToClientModelValue( f1_arg0, element, "clientnum", "clientNum" ) then
						f2_local0 = CoD.ModelUtility.IsSelfModelPathValueEqualTo( element, f1_arg0, "isAlive", 1 ) --[[ @ 0]]
					else
						f2_local0 = false --[[ @ 0]]
					end
				end
				return f2_local0
			end
		}
	} ) --[[ @ 0]]
	local f1_local4 = self --[[ @ 0]]
	local f1_local5 = self.subscribeToModel --[[ @ 0]]
	local f1_local6 = Engine[@"GetModelForController"]( f1_arg0 ) --[[ @ 0]]
	f1_local5( f1_local4, f1_local6["hudItems.isSpectre"], function ( f3_arg0 )
		f1_local1:updateElementState( self, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f3_arg0:get(),
			modelName = "hudItems.isSpectre"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:linkToElementModel( self, "clientnum", true, function ( model )
		f1_local1:updateElementState( self, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = model:get(),
			modelName = "clientnum"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	f1_local4 = self --[[ @ 0]]
	f1_local5 = self.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"hash_E4D2F32833CFA6C"]( Engine[@"GetClientNum"]( f1_arg0 ) ) --[[ @ 0]]
	f1_local5( f1_local4, f1_local6.clientNum, function ( f5_arg0 )
		f1_local1:updateElementState( self, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f5_arg0:get(),
			modelName = "clientNum"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:linkToElementModel( self, "isAlive", true, function ( model )
		f1_local1:updateElementState( self, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = model:get(),
			modelName = "isAlive"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:processEvent( {
		name = "menu_loaded",
		controller = f1_arg0
	} ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg0 ) --[[ @ 0]]
	end
	
	f1_local5 = self --[[ @ 0]]
	CoD.HUDUtility.LinkSetupEntityContainerToModel( self, "clientnum", false, true, 0, 0, 40 ) --[[ @ 0]]
	SetProperty( self, "_priority", -1 ) --[[ @ 0]]
	return self
end
 --[[ @ 0]]
CoD.SpectreRisingIndicator.__resetProperties = function ( f7_arg0 )
	f7_arg0.BountyIndicator:completeAnimation() --[[ @ 0]]
	f7_arg0.pointer:completeAnimation() --[[ @ 0]]
	f7_arg0.BountyIndicator:setAlpha( 1 ) --[[ @ 0]]
	f7_arg0.pointer:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.SpectreRisingIndicator.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f8_arg0, f8_arg1 )
			f8_arg0:__resetProperties() --[[ @ 0]]
			f8_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f8_arg0.BountyIndicator:completeAnimation() --[[ @ 0]]
			f8_arg0.BountyIndicator:setAlpha( 0 ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.BountyIndicator ) --[[ @ 0]]
			f8_arg0.pointer:completeAnimation() --[[ @ 0]]
			f8_arg0.pointer:setAlpha( 0 ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.pointer ) --[[ @ 0]]
		end
	},
	VisibleBounty = {
		DefaultClip = function ( f9_arg0, f9_arg1 )
			f9_arg0:__resetProperties() --[[ @ 0]]
			f9_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.SpectreRisingIndicator.__onClose = function ( f10_arg0 )
	
end
 --[[ @ 0]]
