-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:33
require( "x64:38c2d6f8294f7ce" ) --[[ @ 0]]
require( "x64:4e7f6b39a66d621f" ) --[[ @ 0]]
require( "x64:29292b5bf13a9e5e" ) --[[ @ 0]]
require( "x64:27f155449efe7c6a" ) --[[ @ 0]]
require( "x64:76cc0e30194887fc" ) --[[ @ 0]]
require( "x64:70fc306767dffb0c" ) --[[ @ 0]]

CoD.ArenaGauntletTierProgress = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.ArenaGauntletTierProgress.__defaultWidth = 150 --[[ @ 0]]
CoD.ArenaGauntletTierProgress.__defaultHeight = 300 --[[ @ 0]]
CoD.ArenaGauntletTierProgress.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.ArenaGauntletTierProgress ) --[[ @ 0]]
	self.id = "ArenaGauntletTierProgress" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local ArenaGauntletTierProgressInactive = CoD.ArenaGauntletTierProgressInactive.new( f1_arg0, f1_arg1, 0.5, 0.5, -75, 75, 0, 0, 0, 200 ) --[[ @ 0]]
	ArenaGauntletTierProgressInactive:linkToElementModel( self, "currentTierWinRequirement", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			ArenaGauntletTierProgressInactive.WinTargetCount:setText( f2_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( ArenaGauntletTierProgressInactive ) --[[ @ 0]]
	self.ArenaGauntletTierProgressInactive = ArenaGauntletTierProgressInactive --[[ @ 0]]
	
	local ArenaGauntletTierProgressBacking = CoD.ArenaGauntletTierProgressBacking.new( f1_arg0, f1_arg1, 0.5, 0.5, -75, 75, 0, 0, 0, 200 ) --[[ @ 0]]
	self:addElement( ArenaGauntletTierProgressBacking ) --[[ @ 0]]
	self.ArenaGauntletTierProgressBacking = ArenaGauntletTierProgressBacking --[[ @ 0]]
	
	local ArenaGauntletWinCounter = CoD.ArenaGauntletWinCounter.new( f1_arg0, f1_arg1, 0.5, 0.5, -40, 40, 0, 0, 43, 143 ) --[[ @ 0]]
	ArenaGauntletWinCounter:linkToElementModel( self, "wins", true, function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			ArenaGauntletWinCounter.WinCount:setText( f3_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( ArenaGauntletWinCounter ) --[[ @ 0]]
	self.ArenaGauntletWinCounter = ArenaGauntletWinCounter --[[ @ 0]]
	
	local ArenaGauntletProgressBar = CoD.ArenaGauntletProgressBar.new( f1_arg0, f1_arg1, 0.5, 0.5, -58, -48, 0, 0, 41, 191 ) --[[ @ 0]]
	ArenaGauntletProgressBar:linkToElementModel( self, "currentTierWinRequirement", true, function ( model )
		local f4_local0 = model:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			ArenaGauntletProgressBar.ProgressBacking:setShaderVector( 1, SetVectorComponent( 1, 1, SwapVectorComponents( 1, 2, CoD.GetVectorComponentFromString( f4_local0, 1 ), CoD.GetVectorComponentFromString( f4_local0, 2 ), CoD.GetVectorComponentFromString( f4_local0, 3 ), CoD.GetVectorComponentFromString( f4_local0, 4 ) ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	ArenaGauntletProgressBar:linkToElementModel( self, "currentTierWinRequirement", true, function ( model )
		local f5_local0 = model:get() --[[ @ 0]]
		if f5_local0 ~= nil then
			ArenaGauntletProgressBar.ProgressFill:setShaderVector( 1, SetVectorComponent( 1, 1, SwapVectorComponents( 1, 2, CoD.GetVectorComponentFromString( f5_local0, 1 ), CoD.GetVectorComponentFromString( f5_local0, 2 ), CoD.GetVectorComponentFromString( f5_local0, 3 ), CoD.GetVectorComponentFromString( f5_local0, 4 ) ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	ArenaGauntletProgressBar.ProgressFill.__ProgressFill_Wipe_X_Start_X_End_Y_Start_Y_End = function ( f6_arg0 )
		local f6_local0 = f6_arg0:get() --[[ @ 0]]
		if f6_local0 ~= nil then
			ArenaGauntletProgressBar.ProgressFill:setShaderVector( 2, CoD.ArenaLeaguePlayUtility.GetArenaGauntletWinFillShaderVector( f1_arg1, CoD.GetVectorComponentFromString( f6_local0, 1 ), CoD.GetVectorComponentFromString( f6_local0, 2 ), CoD.GetVectorComponentFromString( f6_local0, 3 ), CoD.GetVectorComponentFromString( f6_local0, 4 ) ) ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	ArenaGauntletProgressBar:linkToElementModel( self, "wins", true, ArenaGauntletProgressBar.ProgressFill.__ProgressFill_Wipe_X_Start_X_End_Y_Start_Y_End ) --[[ @ 0]]
	ArenaGauntletProgressBar.ProgressFill.__ProgressFill_Wipe_X_Start_X_End_Y_Start_Y_End_FullPath = function ()
		local f7_local0 = self:getModel() --[[ @ 0]]
		if f7_local0 then
			f7_local0 = self:getModel() --[[ @ 0]]
			f7_local0 = f7_local0.wins --[[ @ 0]]
		end
		if f7_local0 then
			ArenaGauntletProgressBar.ProgressFill.__ProgressFill_Wipe_X_Start_X_End_Y_Start_Y_End( f7_local0 ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	ArenaGauntletProgressBar:linkToElementModel( self, "currentTierWinRequirement", true, function ( model )
		local f8_local0 = model:get() --[[ @ 0]]
		if f8_local0 ~= nil then
			ArenaGauntletProgressBar.Count:setText( f8_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( ArenaGauntletProgressBar ) --[[ @ 0]]
	self.ArenaGauntletProgressBar = ArenaGauntletProgressBar --[[ @ 0]]
	
	local ArenaGauntletLossTracker = CoD.ArenaGauntletLossTracker.new( f1_arg0, f1_arg1, 0.5, 0.5, -75, 75, 0, 0, 204.5, 284.5 ) --[[ @ 0]]
	ArenaGauntletLossTracker:linkToElementModel( self, "lossesListDataSource", true, function ( model )
		local f9_local0 = model:get() --[[ @ 0]]
		if f9_local0 ~= nil then
			ArenaGauntletLossTracker.LossesList:setDataSource( f9_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( ArenaGauntletLossTracker ) --[[ @ 0]]
	self.ArenaGauntletLossTracker = ArenaGauntletLossTracker --[[ @ 0]]
	
	local ArenaSlottedRuby = CoD.ArenaSlottedRuby.new( f1_arg0, f1_arg1, 0, 0, 55, 95, 0, 0, 6, 46 ) --[[ @ 0]]
	ArenaSlottedRuby:mergeStateConditions( {
		{
			stateName = "Filled",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg1, "rubyActive" )
			end
		},
		{
			stateName = "Empty",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		}
	} ) --[[ @ 0]]
	ArenaSlottedRuby:linkToElementModel( ArenaSlottedRuby, "rubyActive", true, function ( model )
		f1_arg0:updateElementState( ArenaSlottedRuby, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "rubyActive"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	ArenaSlottedRuby:linkToElementModel( self, nil, false, function ( model )
		ArenaSlottedRuby:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( ArenaSlottedRuby ) --[[ @ 0]]
	self.ArenaSlottedRuby = ArenaSlottedRuby --[[ @ 0]]
	
	local TierTitle = LUI.UIText.new( 0.5, 0.5, -100, 100, 0, 0, -12, 12 ) --[[ @ 0]]
	TierTitle:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	TierTitle:setAlignment( Enum[@"LUIAlignment"][@"hash_1FEEB12BCB0D7041"] ) --[[ @ 0]]
	TierTitle:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	TierTitle:linkToElementModel( self, "title", true, function ( model )
		local f14_local0 = model:get() --[[ @ 0]]
		if f14_local0 ~= nil then
			TierTitle:setText( LocalizeToUpperString( f14_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( TierTitle ) --[[ @ 0]]
	self.TierTitle = TierTitle --[[ @ 0]]
	
	local f1_local8 = ArenaGauntletProgressBar --[[ @ 0]]
	local f1_local9 = ArenaGauntletProgressBar.subscribeToModel --[[ @ 0]]
	local f1_local10 = DataSources.ArenaGauntlet.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local9( f1_local8, f1_local10.wins, ArenaGauntletProgressBar.ProgressFill.__ProgressFill_Wipe_X_Start_X_End_Y_Start_Y_End_FullPath ) --[[ @ 0]]
	f1_local8 = ArenaGauntletProgressBar --[[ @ 0]]
	f1_local9 = ArenaGauntletProgressBar.subscribeToModel --[[ @ 0]]
	f1_local10 = DataSources.ArenaGauntlet.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local9( f1_local8, f1_local10.currentTierWinRequirement, ArenaGauntletProgressBar.ProgressFill.__ProgressFill_Wipe_X_Start_X_End_Y_Start_Y_End_FullPath ) --[[ @ 0]]
	ArenaGauntletLossTracker.id = "ArenaGauntletLossTracker" --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.ArenaGauntletTierProgress.__resetProperties = function ( f15_arg0 )
	f15_arg0.ArenaGauntletLossTracker:completeAnimation() --[[ @ 0]]
	f15_arg0.ArenaGauntletProgressBar:completeAnimation() --[[ @ 0]]
	f15_arg0.ArenaGauntletWinCounter:completeAnimation() --[[ @ 0]]
	f15_arg0.ArenaGauntletTierProgressBacking:completeAnimation() --[[ @ 0]]
	f15_arg0.ArenaGauntletTierProgressInactive:completeAnimation() --[[ @ 0]]
	f15_arg0.ArenaSlottedRuby:completeAnimation() --[[ @ 0]]
	f15_arg0.TierTitle:completeAnimation() --[[ @ 0]]
	f15_arg0.ArenaGauntletLossTracker:setAlpha( 1 ) --[[ @ 0]]
	f15_arg0.ArenaGauntletProgressBar:setAlpha( 1 ) --[[ @ 0]]
	f15_arg0.ArenaGauntletWinCounter:setAlpha( 1 ) --[[ @ 0]]
	f15_arg0.ArenaGauntletTierProgressBacking:setAlpha( 1 ) --[[ @ 0]]
	f15_arg0.ArenaGauntletTierProgressInactive:setAlpha( 1 ) --[[ @ 0]]
	f15_arg0.ArenaSlottedRuby:setAlpha( 1 ) --[[ @ 0]]
	f15_arg0.TierTitle:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ArenaGauntletTierProgress.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f16_arg0, f16_arg1 )
			f16_arg0:__resetProperties() --[[ @ 0]]
			f16_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	Hidden = {
		DefaultClip = function ( f17_arg0, f17_arg1 )
			f17_arg0:__resetProperties() --[[ @ 0]]
			f17_arg0:setupElementClipCounter( 7 ) --[[ @ 0]]
			f17_arg0.ArenaGauntletTierProgressInactive:completeAnimation() --[[ @ 0]]
			f17_arg0.ArenaGauntletTierProgressInactive:setAlpha( 0 ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.ArenaGauntletTierProgressInactive ) --[[ @ 0]]
			f17_arg0.ArenaGauntletTierProgressBacking:completeAnimation() --[[ @ 0]]
			f17_arg0.ArenaGauntletTierProgressBacking:setAlpha( 0 ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.ArenaGauntletTierProgressBacking ) --[[ @ 0]]
			f17_arg0.ArenaGauntletWinCounter:completeAnimation() --[[ @ 0]]
			f17_arg0.ArenaGauntletWinCounter:setAlpha( 0 ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.ArenaGauntletWinCounter ) --[[ @ 0]]
			f17_arg0.ArenaGauntletProgressBar:completeAnimation() --[[ @ 0]]
			f17_arg0.ArenaGauntletProgressBar:setAlpha( 0 ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.ArenaGauntletProgressBar ) --[[ @ 0]]
			f17_arg0.ArenaGauntletLossTracker:completeAnimation() --[[ @ 0]]
			f17_arg0.ArenaGauntletLossTracker:setAlpha( 0 ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.ArenaGauntletLossTracker ) --[[ @ 0]]
			f17_arg0.ArenaSlottedRuby:completeAnimation() --[[ @ 0]]
			f17_arg0.ArenaSlottedRuby:setAlpha( 0 ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.ArenaSlottedRuby ) --[[ @ 0]]
			f17_arg0.TierTitle:completeAnimation() --[[ @ 0]]
			f17_arg0.TierTitle:setAlpha( 0 ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.TierTitle ) --[[ @ 0]]
		end
	},
	Inactive = {
		DefaultClip = function ( f18_arg0, f18_arg1 )
			f18_arg0:__resetProperties() --[[ @ 0]]
			f18_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f18_arg0.ArenaGauntletTierProgressBacking:completeAnimation() --[[ @ 0]]
			f18_arg0.ArenaGauntletTierProgressBacking:setAlpha( 0 ) --[[ @ 0]]
			f18_arg0.clipFinished( f18_arg0.ArenaGauntletTierProgressBacking ) --[[ @ 0]]
			f18_arg0.ArenaGauntletWinCounter:completeAnimation() --[[ @ 0]]
			f18_arg0.ArenaGauntletWinCounter:setAlpha( 0 ) --[[ @ 0]]
			f18_arg0.clipFinished( f18_arg0.ArenaGauntletWinCounter ) --[[ @ 0]]
			f18_arg0.ArenaGauntletProgressBar:completeAnimation() --[[ @ 0]]
			f18_arg0.ArenaGauntletProgressBar:setAlpha( 0 ) --[[ @ 0]]
			f18_arg0.clipFinished( f18_arg0.ArenaGauntletProgressBar ) --[[ @ 0]]
			f18_arg0.ArenaGauntletLossTracker:completeAnimation() --[[ @ 0]]
			f18_arg0.ArenaGauntletLossTracker:setAlpha( 0 ) --[[ @ 0]]
			f18_arg0.clipFinished( f18_arg0.ArenaGauntletLossTracker ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.ArenaGauntletTierProgress.__onClose = function ( f19_arg0 )
	f19_arg0.ArenaGauntletTierProgressInactive:close() --[[ @ 0]]
	f19_arg0.ArenaGauntletTierProgressBacking:close() --[[ @ 0]]
	f19_arg0.ArenaGauntletWinCounter:close() --[[ @ 0]]
	f19_arg0.ArenaGauntletProgressBar:close() --[[ @ 0]]
	f19_arg0.ArenaGauntletLossTracker:close() --[[ @ 0]]
	f19_arg0.ArenaSlottedRuby:close() --[[ @ 0]]
	f19_arg0.TierTitle:close() --[[ @ 0]]
end
 --[[ @ 0]]
