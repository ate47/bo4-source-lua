-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:33
CoD.RiotShieldHealth = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.RiotShieldHealth.__defaultWidth = 75 --[[ @ 0]]
CoD.RiotShieldHealth.__defaultHeight = 90 --[[ @ 0]]
CoD.RiotShieldHealth.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	CoD.BaseUtility.InitControllerModelIfNotSet( f1_arg1, "ZMInventoryPersonal.shield_health", 0 ) --[[ @ 0]]
	self:setClass( CoD.RiotShieldHealth ) --[[ @ 0]]
	self.id = "RiotShieldHealth" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local bgbGlowOrangeOver = LUI.UIImage.new( 0.5, 0.5, -120, 122, 0.5, 0.5, -197, 164 ) --[[ @ 0]]
	bgbGlowOrangeOver:setRGB( ColorSet.GroupName.r, ColorSet.GroupName.g, ColorSet.GroupName.b ) --[[ @ 0]]
	bgbGlowOrangeOver:setAlpha( 0 ) --[[ @ 0]]
	bgbGlowOrangeOver:setZRot( 90 ) --[[ @ 0]]
	bgbGlowOrangeOver:setImage( RegisterImage( @"uie_t7_core_hud_mapwidget_panelglow" ) ) --[[ @ 0]]
	bgbGlowOrangeOver:setMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	self:addElement( bgbGlowOrangeOver ) --[[ @ 0]]
	self.bgbGlowOrangeOver = bgbGlowOrangeOver --[[ @ 0]]
	
	local TutorialHighlight = LUI.UIImage.new( 0, 0, -25, 100, 0, 0, -22, 112 ) --[[ @ 0]]
	TutorialHighlight:setRGB( 0.87, 0.07, 0.78 ) --[[ @ 0]]
	TutorialHighlight:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( TutorialHighlight ) --[[ @ 0]]
	self.TutorialHighlight = TutorialHighlight --[[ @ 0]]
	
	local ShieldIcon = LUI.UIImage.new( 0, 0, -13.5, 88.5, 0, 0, -12, 90 ) --[[ @ 0]]
	ShieldIcon:setImage( RegisterImage( CoD.ZombieUtility.GetShieldIconForCurrentMap( @"ui_icon_weapons_zm_riot_shield_health" ) ) ) --[[ @ 0]]
	self:addElement( ShieldIcon ) --[[ @ 0]]
	self.ShieldIcon = ShieldIcon --[[ @ 0]]
	
	local bgbAbilitySwirl = LUI.UIImage.new( 0.5, 0.5, -60.5, 60.5, 0, 0, -14.5, 104.5 ) --[[ @ 0]]
	bgbAbilitySwirl:setRGB( ColorSet.GroupName.r, ColorSet.GroupName.g, ColorSet.GroupName.b ) --[[ @ 0]]
	bgbAbilitySwirl:setAlpha( 0 ) --[[ @ 0]]
	bgbAbilitySwirl:setZRot( 330 ) --[[ @ 0]]
	bgbAbilitySwirl:setScale( 1.65, 1.65 ) --[[ @ 0]]
	bgbAbilitySwirl:setImage( RegisterImage( @"uie_t7_core_hud_ammowidget_abilityswirl" ) ) --[[ @ 0]]
	bgbAbilitySwirl:setMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	self:addElement( bgbAbilitySwirl ) --[[ @ 0]]
	self.bgbAbilitySwirl = bgbAbilitySwirl --[[ @ 0]]
	
	local MeterBG = LUI.UIImage.new( 0.5, 0.5, -50, 50, 0, 0, 69, 93 ) --[[ @ 0]]
	MeterBG:setImage( RegisterImage( @"uie_zm_hud_riotshield_meterbg" ) ) --[[ @ 0]]
	self:addElement( MeterBG ) --[[ @ 0]]
	self.MeterBG = MeterBG --[[ @ 0]]
	
	local HealthBar = LUI.UIImage.new( 0.5, 0.5, -50, 50, 0, 0, 69, 93 ) --[[ @ 0]]
	HealthBar:setRGB( 0.92, 0.92, 0.17 ) --[[ @ 0]]
	HealthBar:setImage( RegisterImage( @"uie_zm_hud_riotshield_meterfg" ) ) --[[ @ 0]]
	HealthBar:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_wipe_normal" ) ) --[[ @ 0]]
	HealthBar:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	HealthBar:setShaderVector( 2, 1, 0, 0, 0 ) --[[ @ 0]]
	HealthBar:setShaderVector( 3, 0, 0, 0, 0 ) --[[ @ 0]]
	HealthBar:setShaderVector( 4, 0, 0, 0, 0 ) --[[ @ 0]]
	HealthBar:subscribeToGlobalModel( f1_arg1, "ZMInventoryPersonal", "shield_health", function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			HealthBar:setShaderVector( 0, CoD.GetVectorComponentFromString( f2_local0, 1 ), CoD.GetVectorComponentFromString( f2_local0, 2 ), CoD.GetVectorComponentFromString( f2_local0, 3 ), CoD.GetVectorComponentFromString( f2_local0, 4 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( HealthBar ) --[[ @ 0]]
	self.HealthBar = HealthBar --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "HiddenTutorial",
			condition = function ( menu, element, event )
				return CoD.HUDUtility.IsAnyGameType( f1_arg1, "ztutorial" ) and CoD.ModelUtility.IsGlobalModelValueEqualTo( "hudItems.ztut.showShield", 0 )
			end
		},
		{
			stateName = "Visible",
			condition = function ( menu, element, event )
				local f4_local0 = CoD.ModelUtility.IsModelValueGreaterThan( f1_arg1, "ZMInventoryPersonal.shield_health", 0 ) --[[ @ 0]]
				if f4_local0 then
					if not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_4B8E9B69F4B87954"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_5D3ABF9A2753CE40"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_59333FC97F7870"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_669C28E2FCA82769"] ) and Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_7ADC477DDE486DD7"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_523CD9BAB9B9F4C8"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_68A5E996D4528DA2"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_47B52A87BC9AA4C7"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_29BF57CE75A8755E"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_6668F0686232679"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_33AEEAA452536E6E"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_1D298E43D0B6FEF2"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_624E603C16FCC38F"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) and Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_BB045E46E88E762"] ) then
						f4_local0 = not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"] ) --[[ @ 0]]
					else
						f4_local0 = false --[[ @ 0]]
					end
				end
				return f4_local0
			end
		},
		{
			stateName = "Visible2",
			condition = function ( menu, element, event )
				local f5_local0 = CoD.ModelUtility.IsModelValueGreaterThan( f1_arg1, "ZMInventoryPersonal.shield_health", 0 ) --[[ @ 0]]
				if f5_local0 then
					f5_local0 = CoD.HUDUtility.IsAnyGameType( f1_arg1, "zstandard" ) --[[ @ 0]]
					if f5_local0 then
						if not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_4B8E9B69F4B87954"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_5D3ABF9A2753CE40"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_59333FC97F7870"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_669C28E2FCA82769"] ) and Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_7ADC477DDE486DD7"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_523CD9BAB9B9F4C8"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_68A5E996D4528DA2"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_47B52A87BC9AA4C7"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_29BF57CE75A8755E"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_6668F0686232679"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_33AEEAA452536E6E"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_1D298E43D0B6FEF2"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_624E603C16FCC38F"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) then
							f5_local0 = Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_BB045E46E88E762"] ) --[[ @ 0]]
						else
							f5_local0 = false --[[ @ 0]]
						end
					end
				end
				return f5_local0
			end
		}
	} ) --[[ @ 0]]
	local f1_local7 = self --[[ @ 0]]
	local f1_local8 = self.subscribeToModel --[[ @ 0]]
	local f1_local9 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local8( f1_local7, f1_local9["hudItems.ztut.showShield"], function ( f6_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f6_arg0:get(),
			modelName = "hudItems.ztut.showShield"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = self --[[ @ 0]]
	f1_local8 = self.subscribeToModel --[[ @ 0]]
	f1_local9 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local8( f1_local7, f1_local9["ZMInventoryPersonal.shield_health"], function ( f7_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f7_arg0:get(),
			modelName = "ZMInventoryPersonal.shield_health"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = self --[[ @ 0]]
	f1_local8 = self.subscribeToModel --[[ @ 0]]
	f1_local9 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local8( f1_local7, f1_local9["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_4B8E9B69F4B87954"]], function ( f8_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f8_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_4B8E9B69F4B87954"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = self --[[ @ 0]]
	f1_local8 = self.subscribeToModel --[[ @ 0]]
	f1_local9 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local8( f1_local7, f1_local9["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5D3ABF9A2753CE40"]], function ( f9_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f9_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5D3ABF9A2753CE40"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = self --[[ @ 0]]
	f1_local8 = self.subscribeToModel --[[ @ 0]]
	f1_local9 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local8( f1_local7, f1_local9["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_59333FC97F7870"]], function ( f10_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f10_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_59333FC97F7870"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = self --[[ @ 0]]
	f1_local8 = self.subscribeToModel --[[ @ 0]]
	f1_local9 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local8( f1_local7, f1_local9["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_669C28E2FCA82769"]], function ( f11_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f11_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_669C28E2FCA82769"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = self --[[ @ 0]]
	f1_local8 = self.subscribeToModel --[[ @ 0]]
	f1_local9 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local8( f1_local7, f1_local9["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_7ADC477DDE486DD7"]], function ( f12_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f12_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_7ADC477DDE486DD7"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = self --[[ @ 0]]
	f1_local8 = self.subscribeToModel --[[ @ 0]]
	f1_local9 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local8( f1_local7, f1_local9["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_523CD9BAB9B9F4C8"]], function ( f13_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f13_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_523CD9BAB9B9F4C8"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = self --[[ @ 0]]
	f1_local8 = self.subscribeToModel --[[ @ 0]]
	f1_local9 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local8( f1_local7, f1_local9["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_68A5E996D4528DA2"]], function ( f14_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f14_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_68A5E996D4528DA2"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = self --[[ @ 0]]
	f1_local8 = self.subscribeToModel --[[ @ 0]]
	f1_local9 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local8( f1_local7, f1_local9["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_47B52A87BC9AA4C7"]], function ( f15_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f15_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_47B52A87BC9AA4C7"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = self --[[ @ 0]]
	f1_local8 = self.subscribeToModel --[[ @ 0]]
	f1_local9 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local8( f1_local7, f1_local9["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_29BF57CE75A8755E"]], function ( f16_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f16_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_29BF57CE75A8755E"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = self --[[ @ 0]]
	f1_local8 = self.subscribeToModel --[[ @ 0]]
	f1_local9 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local8( f1_local7, f1_local9["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_6668F0686232679"]], function ( f17_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f17_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_6668F0686232679"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = self --[[ @ 0]]
	f1_local8 = self.subscribeToModel --[[ @ 0]]
	f1_local9 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local8( f1_local7, f1_local9["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_33AEEAA452536E6E"]], function ( f18_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f18_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_33AEEAA452536E6E"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = self --[[ @ 0]]
	f1_local8 = self.subscribeToModel --[[ @ 0]]
	f1_local9 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local8( f1_local7, f1_local9["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_1D298E43D0B6FEF2"]], function ( f19_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f19_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_1D298E43D0B6FEF2"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = self --[[ @ 0]]
	f1_local8 = self.subscribeToModel --[[ @ 0]]
	f1_local9 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local8( f1_local7, f1_local9["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_624E603C16FCC38F"]], function ( f20_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f20_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_624E603C16FCC38F"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = self --[[ @ 0]]
	f1_local8 = self.subscribeToModel --[[ @ 0]]
	f1_local9 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local8( f1_local7, f1_local9["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"]], function ( f21_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f21_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = self --[[ @ 0]]
	f1_local8 = self.subscribeToModel --[[ @ 0]]
	f1_local9 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local8( f1_local7, f1_local9["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"]], function ( f22_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f22_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = self --[[ @ 0]]
	f1_local8 = self.subscribeToModel --[[ @ 0]]
	f1_local9 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local8( f1_local7, f1_local9["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_BB045E46E88E762"]], function ( f23_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f23_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_BB045E46E88E762"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = self --[[ @ 0]]
	f1_local8 = self.subscribeToModel --[[ @ 0]]
	f1_local9 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local8( f1_local7, f1_local9["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"]], function ( f24_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f24_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.RiotShieldHealth.__resetProperties = function ( f25_arg0 )
	f25_arg0.ShieldIcon:completeAnimation() --[[ @ 0]]
	f25_arg0.HealthBar:completeAnimation() --[[ @ 0]]
	f25_arg0.MeterBG:completeAnimation() --[[ @ 0]]
	f25_arg0.bgbAbilitySwirl:completeAnimation() --[[ @ 0]]
	f25_arg0.bgbGlowOrangeOver:completeAnimation() --[[ @ 0]]
	f25_arg0.ShieldIcon:setAlpha( 1 ) --[[ @ 0]]
	f25_arg0.HealthBar:setAlpha( 1 ) --[[ @ 0]]
	f25_arg0.MeterBG:setAlpha( 1 ) --[[ @ 0]]
	f25_arg0.bgbAbilitySwirl:setTopBottom( 0, 0, -14.5, 104.5 ) --[[ @ 0]]
	f25_arg0.bgbAbilitySwirl:setAlpha( 0 ) --[[ @ 0]]
	f25_arg0.bgbAbilitySwirl:setZRot( 330 ) --[[ @ 0]]
	f25_arg0.bgbGlowOrangeOver:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.RiotShieldHealth.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f26_arg0, f26_arg1 )
			f26_arg0:__resetProperties() --[[ @ 0]]
			f26_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f26_arg0.ShieldIcon:completeAnimation() --[[ @ 0]]
			f26_arg0.ShieldIcon:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.ShieldIcon ) --[[ @ 0]]
			f26_arg0.MeterBG:completeAnimation() --[[ @ 0]]
			f26_arg0.MeterBG:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.MeterBG ) --[[ @ 0]]
			f26_arg0.HealthBar:completeAnimation() --[[ @ 0]]
			f26_arg0.HealthBar:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.HealthBar ) --[[ @ 0]]
		end
	},
	HiddenTutorial = {
		DefaultClip = function ( f27_arg0, f27_arg1 )
			f27_arg0:__resetProperties() --[[ @ 0]]
			f27_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f27_arg0.ShieldIcon:completeAnimation() --[[ @ 0]]
			f27_arg0.ShieldIcon:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.ShieldIcon ) --[[ @ 0]]
			f27_arg0.MeterBG:completeAnimation() --[[ @ 0]]
			f27_arg0.MeterBG:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.MeterBG ) --[[ @ 0]]
			f27_arg0.HealthBar:completeAnimation() --[[ @ 0]]
			f27_arg0.HealthBar:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.HealthBar ) --[[ @ 0]]
		end,
		Visible = function ( f28_arg0, f28_arg1 )
			f28_arg0:__resetProperties() --[[ @ 0]]
			f28_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			local f28_local0 = function ( f29_arg0 )
				local f29_local0 = function ( f30_arg0 )
					local f30_local0 = function ( f31_arg0 )
						local f31_local0 = function ( f32_arg0 )
							local f32_local0 = function ( f33_arg0 )
								local f33_local0 = function ( f34_arg0 )
									local f34_local0 = function ( f35_arg0 )
										f35_arg0:beginAnimation( 250 ) --[[ @ 0]]
										f35_arg0:setAlpha( 0 ) --[[ @ 0]]
										f35_arg0:registerEventHandler( "transition_complete_keyframe", f28_arg0.clipFinished ) --[[ @ 0]]
									end
									 --[[ @ 0]]
									f34_arg0:beginAnimation( 150 ) --[[ @ 0]]
									f34_arg0:setAlpha( 0.7 ) --[[ @ 0]]
									f34_arg0:registerEventHandler( "transition_complete_keyframe", f34_local0 ) --[[ @ 0]]
								end
								 --[[ @ 0]]
								f33_arg0:beginAnimation( 139 ) --[[ @ 0]]
								f33_arg0:setAlpha( 0 ) --[[ @ 0]]
								f33_arg0:registerEventHandler( "transition_complete_keyframe", f33_local0 ) --[[ @ 0]]
							end
							 --[[ @ 0]]
							f32_arg0:beginAnimation( 130 ) --[[ @ 0]]
							f32_arg0:setAlpha( 0.7 ) --[[ @ 0]]
							f32_arg0:registerEventHandler( "transition_complete_keyframe", f32_local0 ) --[[ @ 0]]
						end
						 --[[ @ 0]]
						f31_arg0:beginAnimation( 130 ) --[[ @ 0]]
						f31_arg0:setAlpha( 0 ) --[[ @ 0]]
						f31_arg0:registerEventHandler( "transition_complete_keyframe", f31_local0 ) --[[ @ 0]]
					end
					 --[[ @ 0]]
					f30_arg0:beginAnimation( 199 ) --[[ @ 0]]
					f30_arg0:setAlpha( 0.7 ) --[[ @ 0]]
					f30_arg0:registerEventHandler( "transition_complete_keyframe", f30_local0 ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f28_arg0.bgbGlowOrangeOver:beginAnimation( 330 ) --[[ @ 0]]
				f28_arg0.bgbGlowOrangeOver:registerEventHandler( "interrupted_keyframe", f28_arg0.clipInterrupted ) --[[ @ 0]]
				f28_arg0.bgbGlowOrangeOver:registerEventHandler( "transition_complete_keyframe", f29_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f28_arg0.bgbGlowOrangeOver:completeAnimation() --[[ @ 0]]
			f28_arg0.bgbGlowOrangeOver:setAlpha( 0 ) --[[ @ 0]]
			f28_local0( f28_arg0.bgbGlowOrangeOver ) --[[ @ 0]]
			local f28_local1 = function ( f36_arg0 )
				local f36_local0 = function ( f37_arg0 )
					local f37_local0 = function ( f38_arg0 )
						f38_arg0:beginAnimation( 340 ) --[[ @ 0]]
						f38_arg0:setAlpha( 1 ) --[[ @ 0]]
						f38_arg0:registerEventHandler( "transition_complete_keyframe", f28_arg0.clipFinished ) --[[ @ 0]]
					end
					 --[[ @ 0]]
					f37_arg0:beginAnimation( 329 ) --[[ @ 0]]
					f37_arg0:setAlpha( 0 ) --[[ @ 0]]
					f37_arg0:registerEventHandler( "transition_complete_keyframe", f37_local0 ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f36_arg0:beginAnimation( 330 ) --[[ @ 0]]
				f36_arg0:setAlpha( 1 ) --[[ @ 0]]
				f36_arg0:registerEventHandler( "transition_complete_keyframe", f36_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f28_arg0.ShieldIcon:beginAnimation( 330 ) --[[ @ 0]]
			f28_arg0.ShieldIcon:setAlpha( 0 ) --[[ @ 0]]
			f28_arg0.ShieldIcon:registerEventHandler( "interrupted_keyframe", f28_arg0.clipInterrupted ) --[[ @ 0]]
			f28_arg0.ShieldIcon:registerEventHandler( "transition_complete_keyframe", f28_local1 ) --[[ @ 0]]
			local f28_local2 = function ( f39_arg0 )
				local f39_local0 = function ( f40_arg0 )
					f40_arg0:beginAnimation( 199 ) --[[ @ 0]]
					f40_arg0:setAlpha( 0 ) --[[ @ 0]]
					f40_arg0:setZRot( 360 ) --[[ @ 0]]
					f40_arg0:registerEventHandler( "transition_complete_keyframe", f28_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f28_arg0.bgbAbilitySwirl:beginAnimation( 330 ) --[[ @ 0]]
				f28_arg0.bgbAbilitySwirl:setAlpha( 1 ) --[[ @ 0]]
				f28_arg0.bgbAbilitySwirl:setZRot( 240 ) --[[ @ 0]]
				f28_arg0.bgbAbilitySwirl:registerEventHandler( "interrupted_keyframe", f28_arg0.clipInterrupted ) --[[ @ 0]]
				f28_arg0.bgbAbilitySwirl:registerEventHandler( "transition_complete_keyframe", f39_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f28_arg0.bgbAbilitySwirl:completeAnimation() --[[ @ 0]]
			f28_arg0.bgbAbilitySwirl:setTopBottom( 0, 0, -14.5, 104.5 ) --[[ @ 0]]
			f28_arg0.bgbAbilitySwirl:setAlpha( 0 ) --[[ @ 0]]
			f28_arg0.bgbAbilitySwirl:setZRot( 0 ) --[[ @ 0]]
			f28_local2( f28_arg0.bgbAbilitySwirl ) --[[ @ 0]]
			local f28_local3 = function ( f41_arg0 )
				local f41_local0 = function ( f42_arg0 )
					local f42_local0 = function ( f43_arg0 )
						f43_arg0:beginAnimation( 340 ) --[[ @ 0]]
						f43_arg0:setAlpha( 1 ) --[[ @ 0]]
						f43_arg0:registerEventHandler( "transition_complete_keyframe", f28_arg0.clipFinished ) --[[ @ 0]]
					end
					 --[[ @ 0]]
					f42_arg0:beginAnimation( 329 ) --[[ @ 0]]
					f42_arg0:setAlpha( 0 ) --[[ @ 0]]
					f42_arg0:registerEventHandler( "transition_complete_keyframe", f42_local0 ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f41_arg0:beginAnimation( 330 ) --[[ @ 0]]
				f41_arg0:setAlpha( 1 ) --[[ @ 0]]
				f41_arg0:registerEventHandler( "transition_complete_keyframe", f41_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f28_arg0.HealthBar:beginAnimation( 330 ) --[[ @ 0]]
			f28_arg0.HealthBar:setAlpha( 0 ) --[[ @ 0]]
			f28_arg0.HealthBar:registerEventHandler( "interrupted_keyframe", f28_arg0.clipInterrupted ) --[[ @ 0]]
			f28_arg0.HealthBar:registerEventHandler( "transition_complete_keyframe", f28_local3 ) --[[ @ 0]]
		end
	},
	Visible = {
		DefaultClip = function ( f44_arg0, f44_arg1 )
			f44_arg0:__resetProperties() --[[ @ 0]]
			f44_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	Visible2 = {
		DefaultClip = function ( f45_arg0, f45_arg1 )
			f45_arg0:__resetProperties() --[[ @ 0]]
			f45_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.RiotShieldHealth.__onClose = function ( f46_arg0 )
	f46_arg0.HealthBar:close() --[[ @ 0]]
end
 --[[ @ 0]]
