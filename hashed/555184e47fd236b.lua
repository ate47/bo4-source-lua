-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
CoD.CodCasterPortraitPlayerListEntryEquipment = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.CodCasterPortraitPlayerListEntryEquipment.__defaultWidth = 26 --[[ @ 0]]
CoD.CodCasterPortraitPlayerListEntryEquipment.__defaultHeight = 26 --[[ @ 0]]
CoD.CodCasterPortraitPlayerListEntryEquipment.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.CodCasterPortraitPlayerListEntryEquipment ) --[[ @ 0]]
	self.id = "CodCasterPortraitPlayerListEntryEquipment" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local equipmentInactive = LUI.UIImage.new( 0, 0, 0, 26, 0, 0, 0, 26 ) --[[ @ 0]]
	equipmentInactive:setAlpha( 0.4 ) --[[ @ 0]]
	equipmentInactive:setImage( RegisterImage( @"hash_4A06A85AEEF6215F" ) ) --[[ @ 0]]
	self:addElement( equipmentInactive ) --[[ @ 0]]
	self.equipmentInactive = equipmentInactive --[[ @ 0]]
	
	local EquipmentActive = LUI.UIImage.new( 0, 0, 0, 26, 0, 0, 0, 26 ) --[[ @ 0]]
	EquipmentActive:setAlpha( 0 ) --[[ @ 0]]
	EquipmentActive:setImage( RegisterImage( @"hash_5D4CD91D5CB3A9BC" ) ) --[[ @ 0]]
	self:addElement( EquipmentActive ) --[[ @ 0]]
	self.EquipmentActive = EquipmentActive --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "PlayerDead",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualTo( element, f1_arg1, "health.healthValue", 0 )
			end
		},
		{
			stateName = "Ready",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg1, "equipmentReady" )
			end
		},
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return CoD.CodCasterUtility.IsCodCasterWithProfileValueEqualTo( f1_arg1, "shoutcaster_ds_show_equipment", 0 )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "health.healthValue", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "health.healthValue"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:linkToElementModel( self, "equipmentReady", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "equipmentReady"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local f1_local3 = self --[[ @ 0]]
	local f1_local4 = self.subscribeToModel --[[ @ 0]]
	local f1_local5 = DataSources.CodCaster.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local4( f1_local3, f1_local5.profileSettingsUpdated, function ( f7_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f7_arg0:get(),
			modelName = "profileSettingsUpdated"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.CodCasterPortraitPlayerListEntryEquipment.__resetProperties = function ( f8_arg0 )
	f8_arg0.equipmentInactive:completeAnimation() --[[ @ 0]]
	f8_arg0.EquipmentActive:completeAnimation() --[[ @ 0]]
	f8_arg0.equipmentInactive:setAlpha( 0.4 ) --[[ @ 0]]
	f8_arg0.EquipmentActive:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.CodCasterPortraitPlayerListEntryEquipment.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f9_arg0, f9_arg1 )
			f9_arg0:__resetProperties() --[[ @ 0]]
			f9_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	PlayerDead = {
		DefaultClip = function ( f10_arg0, f10_arg1 )
			f10_arg0:__resetProperties() --[[ @ 0]]
			f10_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f10_arg0.equipmentInactive:completeAnimation() --[[ @ 0]]
			f10_arg0.equipmentInactive:setAlpha( 0.02 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.equipmentInactive ) --[[ @ 0]]
		end
	},
	Ready = {
		DefaultClip = function ( f11_arg0, f11_arg1 )
			f11_arg0:__resetProperties() --[[ @ 0]]
			f11_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f11_arg0.equipmentInactive:completeAnimation() --[[ @ 0]]
			f11_arg0.equipmentInactive:setAlpha( 0 ) --[[ @ 0]]
			f11_arg0.clipFinished( f11_arg0.equipmentInactive ) --[[ @ 0]]
			f11_arg0.EquipmentActive:completeAnimation() --[[ @ 0]]
			f11_arg0.EquipmentActive:setAlpha( 1 ) --[[ @ 0]]
			f11_arg0.clipFinished( f11_arg0.EquipmentActive ) --[[ @ 0]]
		end
	},
	Hidden = {
		DefaultClip = function ( f12_arg0, f12_arg1 )
			f12_arg0:__resetProperties() --[[ @ 0]]
			f12_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f12_arg0.equipmentInactive:completeAnimation() --[[ @ 0]]
			f12_arg0.equipmentInactive:setAlpha( 0 ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.equipmentInactive ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
