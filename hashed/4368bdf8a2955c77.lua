-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
require( "x64:4f7139f69731b8c1" ) --[[ @ 0]]
require( "x64:2f765dee1e5ccee0" ) --[[ @ 0]]
require( "x64:56abd6dcfe95863d" ) --[[ @ 0]]
require( "x64:be52530c0ca57a1" ) --[[ @ 0]]
require( "x64:162f021f9ada720d" ) --[[ @ 0]]
require( "x64:71f846296f1a1b81" ) --[[ @ 0]]
require( "x64:5772a6846d311d82" ) --[[ @ 0]]

CoD.ItemDetailsSunsetPurchaseContainer = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.ItemDetailsSunsetPurchaseContainer.__defaultWidth = 454 --[[ @ 0]]
CoD.ItemDetailsSunsetPurchaseContainer.__defaultHeight = 91 --[[ @ 0]]
CoD.ItemDetailsSunsetPurchaseContainer.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.ItemDetailsSunsetPurchaseContainer ) --[[ @ 0]]
	self.id = "ItemDetailsSunsetPurchaseContainer" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local PriceText = LUI.UIText.new( 0, 0, 7.5, 207.5, 0, 0, 63, 91 ) --[[ @ 0]]
	PriceText:setRGB( ColorSet.CodPointsNumber.r, ColorSet.CodPointsNumber.g, ColorSet.CodPointsNumber.b ) --[[ @ 0]]
	PriceText:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	PriceText:setLetterSpacing( 2 ) --[[ @ 0]]
	PriceText:setAlignment( Enum[@"LUIAlignment"][@"hash_1FEEB12BCB0D7041"] ) --[[ @ 0]]
	PriceText:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	PriceText:linkToElementModel( self, "price", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			PriceText:setText( LocalizeIntoString( @"hash_56A3CC7BE3008989", f2_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( PriceText ) --[[ @ 0]]
	self.PriceText = PriceText --[[ @ 0]]
	
	local CasePriceText = CoD.ItemDetailsCasePrice.new( f1_arg0, f1_arg1, 0, 0, 246, 446, 0, 0, 63, 91 ) --[[ @ 0]]
	CasePriceText:linkToElementModel( self, nil, false, function ( model )
		CasePriceText:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( CasePriceText ) --[[ @ 0]]
	self.CasePriceText = CasePriceText --[[ @ 0]]
	
	local ItemShopButtonCP = CoD.DirectorSelectButtonMiniInternal.new( f1_arg0, f1_arg1, 0, 0, 0, 215, 0, 0, 0, 52 ) --[[ @ 0]]
	ItemShopButtonCP:mergeStateConditions( {
		{
			stateName = "TrialLocked",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		},
		{
			stateName = "ArenaSuspended",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		},
		{
			stateName = "Locked",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		},
		{
			stateName = "Disabled",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		}
	} ) --[[ @ 0]]
	ItemShopButtonCP.MiddleText:setText( LocalizeToUpperString( @"hash_685952ACC6D0C1B0" ) ) --[[ @ 0]]
	ItemShopButtonCP.MiddleTextFocus:setText( LocalizeToUpperString( @"hash_685952ACC6D0C1B0" ) ) --[[ @ 0]]
	local f1_local4 = ItemShopButtonCP --[[ @ 0]]
	local ItemShopButtonCases = ItemShopButtonCP.subscribeToModel --[[ @ 0]]
	local f1_local6 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	ItemShopButtonCases( f1_local4, f1_local6["LootStreamProgress.codPoints"], function ( f8_arg0, f8_arg1 )
		CoD.Menu.UpdateButtonShownState( f8_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ItemShopButtonCP:registerEventHandler( "gain_focus", function ( element, event )
		local f9_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f9_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f9_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.BlackMarketUtility.ChangeSupplyChainCameraBySelection( f1_arg0, f1_arg1, f1_arg0 ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f9_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( ItemShopButtonCP, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], nil, function ( element, menu, controller, model )
		if MenuPropertyIsTrue( menu, "isSunsetPurchaseContractScreen" ) and CanPurchaseItem( controller, self ) then
			OpenPopup( self, "PurchaseContractConfirmationSunset", controller, {
				_model = self:getModel()
			} ) --[[ @ 0]]
			PlaySoundAlias( "uin_press_generic" ) --[[ @ 0]]
			CoD.PlayerRoleUtility.StopGesturePreview( menu, controller ) --[[ @ 0]]
			return true
		elseif CanPurchaseItem( controller, self ) then
			OpenPopup( self, "ItemShopConfirmation", controller, {
				_model = self:getModel()
			} ) --[[ @ 0]]
			PlaySoundAlias( "uin_press_generic" ) --[[ @ 0]]
			CoD.PlayerRoleUtility.StopGesturePreview( menu, controller ) --[[ @ 0]]
			return true
		else
			OpenPopup( self, "PurchaseCodPoints", controller, menu:getModel() ) --[[ @ 0]]
			CoD.PlayerRoleUtility.StopGesturePreview( menu, controller ) --[[ @ 0]]
			return true
		end
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, nil ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	self:addElement( ItemShopButtonCP ) --[[ @ 0]]
	self.ItemShopButtonCP = ItemShopButtonCP --[[ @ 0]]
	
	ItemShopButtonCases = CoD.DirectorSelectButtonMiniInternal.new( f1_arg0, f1_arg1, 0, 0, 238.5, 453.5, 0, 0, 0, 52 ) --[[ @ 0]]
	ItemShopButtonCases:mergeStateConditions( {
		{
			stateName = "TrialLocked",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		},
		{
			stateName = "ArenaSuspended",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		},
		{
			stateName = "Locked",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		},
		{
			stateName = "Disabled",
			condition = function ( menu, element, event )
				return not CoD.BlackMarketUtility.CanExchangeLootCases( f1_arg1, self )
			end
		}
	} ) --[[ @ 0]]
	f1_local6 = ItemShopButtonCases --[[ @ 0]]
	f1_local4 = ItemShopButtonCases.subscribeToModel --[[ @ 0]]
	local f1_local7 = DataSources.ReservesItemCounts.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local4( f1_local6, f1_local7.lootCaseCount, function ( f16_arg0 )
		f1_arg0:updateElementState( ItemShopButtonCases, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f16_arg0:get(),
			modelName = "lootCaseCount"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ItemShopButtonCases:linkToElementModel( ItemShopButtonCases, "casePrice", true, function ( model )
		f1_arg0:updateElementState( ItemShopButtonCases, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "casePrice"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	ItemShopButtonCases.MiddleText:setText( LocalizeToUpperString( @"hash_7C2737E72EC4A26" ) ) --[[ @ 0]]
	ItemShopButtonCases.MiddleTextFocus:setText( LocalizeToUpperString( @"hash_7C2737E72EC4A26" ) ) --[[ @ 0]]
	f1_local6 = ItemShopButtonCases --[[ @ 0]]
	f1_local4 = ItemShopButtonCases.subscribeToModel --[[ @ 0]]
	f1_local7 = DataSources.ReservesItemCounts.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local4( f1_local6, f1_local7.lootCaseCount, function ( f18_arg0, f18_arg1 )
		CoD.Menu.UpdateButtonShownState( f18_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ItemShopButtonCases:linkToElementModel( ItemShopButtonCases, "casePrice", true, function ( model, f19_arg1 )
		CoD.Menu.UpdateButtonShownState( f19_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	ItemShopButtonCases:registerEventHandler( "gain_focus", function ( element, event )
		local f20_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f20_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f20_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.BlackMarketUtility.ChangeSupplyChainCameraBySelection( f1_arg0, f1_arg1, f1_arg0 ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f20_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( ItemShopButtonCases, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], nil, function ( element, menu, controller, model )
		if MenuPropertyIsTrue( menu, "isSunsetPurchaseContractScreen" ) and CoD.BlackMarketUtility.CanExchangeLootCases( controller, self ) then
			OpenPopup( self, "CaseExchangeContractConfirmation", controller, {
				_model = self:getModel()
			} ) --[[ @ 0]]
			PlaySoundAlias( "uin_press_generic" ) --[[ @ 0]]
			CoD.PlayerRoleUtility.StopGesturePreview( menu, controller ) --[[ @ 0]]
			return true
		elseif CoD.BlackMarketUtility.CanExchangeLootCases( controller, self ) then
			OpenPopup( self, "ItemShopCaseExchangeConfirmation", controller, {
				_model = self:getModel()
			} ) --[[ @ 0]]
			PlaySoundAlias( "uin_press_generic" ) --[[ @ 0]]
			CoD.PlayerRoleUtility.StopGesturePreview( menu, controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if MenuPropertyIsTrue( menu, "isSunsetPurchaseContractScreen" ) and CoD.BlackMarketUtility.CanExchangeLootCases( controller, self ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, nil ) --[[ @ 0]]
			return true
		elseif CoD.BlackMarketUtility.CanExchangeLootCases( controller, self ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, nil ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( ItemShopButtonCases ) --[[ @ 0]]
	self.ItemShopButtonCases = ItemShopButtonCases --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "CPOnly",
			condition = function ( menu, element, event )
				return not CoD.ModelUtility.IsSelfModelValueGreaterThan( element, f1_arg1, "casePrice", 0 )
			end
		},
		{
			stateName = "CaseOnly",
			condition = function ( menu, element, event )
				return not CoD.ModelUtility.IsSelfModelValueGreaterThan( element, f1_arg1, "price", 0 )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "casePrice", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "casePrice"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:linkToElementModel( self, "price", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "price"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	ItemShopButtonCP.id = "ItemShopButtonCP" --[[ @ 0]]
	ItemShopButtonCases.id = "ItemShopButtonCases" --[[ @ 0]]
	self.__defaultFocus = ItemShopButtonCP --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.ItemDetailsSunsetPurchaseContainer.__resetProperties = function ( f27_arg0 )
	f27_arg0.ItemShopButtonCases:completeAnimation() --[[ @ 0]]
	f27_arg0.ItemShopButtonCP:completeAnimation() --[[ @ 0]]
	f27_arg0.PriceText:completeAnimation() --[[ @ 0]]
	f27_arg0.CasePriceText:completeAnimation() --[[ @ 0]]
	f27_arg0.ItemShopButtonCases:setLeftRight( 0, 0, 238.5, 453.5 ) --[[ @ 0]]
	f27_arg0.ItemShopButtonCases:setAlpha( 1 ) --[[ @ 0]]
	f27_arg0.ItemShopButtonCP:setLeftRight( 0, 0, 0, 215 ) --[[ @ 0]]
	f27_arg0.ItemShopButtonCP:setAlpha( 1 ) --[[ @ 0]]
	f27_arg0.PriceText:setLeftRight( 0, 0, 7.5, 207.5 ) --[[ @ 0]]
	f27_arg0.PriceText:setAlpha( 1 ) --[[ @ 0]]
	f27_arg0.CasePriceText:setLeftRight( 0, 0, 246, 446 ) --[[ @ 0]]
	f27_arg0.CasePriceText:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ItemDetailsSunsetPurchaseContainer.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f28_arg0, f28_arg1 )
			f28_arg0:__resetProperties() --[[ @ 0]]
			f28_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	CPOnly = {
		DefaultClip = function ( f29_arg0, f29_arg1 )
			f29_arg0:__resetProperties() --[[ @ 0]]
			f29_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f29_arg0.PriceText:completeAnimation() --[[ @ 0]]
			f29_arg0.PriceText:setLeftRight( 0, 0, 0, 454 ) --[[ @ 0]]
			f29_arg0.clipFinished( f29_arg0.PriceText ) --[[ @ 0]]
			f29_arg0.CasePriceText:completeAnimation() --[[ @ 0]]
			f29_arg0.CasePriceText:setAlpha( 0 ) --[[ @ 0]]
			f29_arg0.clipFinished( f29_arg0.CasePriceText ) --[[ @ 0]]
			f29_arg0.ItemShopButtonCP:completeAnimation() --[[ @ 0]]
			f29_arg0.ItemShopButtonCP:setLeftRight( 0, 0, 0, 454 ) --[[ @ 0]]
			f29_arg0.clipFinished( f29_arg0.ItemShopButtonCP ) --[[ @ 0]]
			f29_arg0.ItemShopButtonCases:completeAnimation() --[[ @ 0]]
			f29_arg0.ItemShopButtonCases:setAlpha( 0 ) --[[ @ 0]]
			f29_arg0.clipFinished( f29_arg0.ItemShopButtonCases ) --[[ @ 0]]
		end
	},
	CaseOnly = {
		DefaultClip = function ( f30_arg0, f30_arg1 )
			f30_arg0:__resetProperties() --[[ @ 0]]
			f30_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f30_arg0.PriceText:completeAnimation() --[[ @ 0]]
			f30_arg0.PriceText:setAlpha( 0 ) --[[ @ 0]]
			f30_arg0.clipFinished( f30_arg0.PriceText ) --[[ @ 0]]
			f30_arg0.CasePriceText:completeAnimation() --[[ @ 0]]
			f30_arg0.CasePriceText:setLeftRight( 0, 0, 0, 454 ) --[[ @ 0]]
			f30_arg0.clipFinished( f30_arg0.CasePriceText ) --[[ @ 0]]
			f30_arg0.ItemShopButtonCP:completeAnimation() --[[ @ 0]]
			f30_arg0.ItemShopButtonCP:setAlpha( 0 ) --[[ @ 0]]
			f30_arg0.clipFinished( f30_arg0.ItemShopButtonCP ) --[[ @ 0]]
			f30_arg0.ItemShopButtonCases:completeAnimation() --[[ @ 0]]
			f30_arg0.ItemShopButtonCases:setLeftRight( 0, 0, 0, 454 ) --[[ @ 0]]
			f30_arg0.clipFinished( f30_arg0.ItemShopButtonCases ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.ItemDetailsSunsetPurchaseContainer.__onClose = function ( f31_arg0 )
	f31_arg0.PriceText:close() --[[ @ 0]]
	f31_arg0.CasePriceText:close() --[[ @ 0]]
	f31_arg0.ItemShopButtonCP:close() --[[ @ 0]]
	f31_arg0.ItemShopButtonCases:close() --[[ @ 0]]
end
 --[[ @ 0]]
