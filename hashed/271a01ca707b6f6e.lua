-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:33
require( "x64:651cb89ab7a8399b" ) --[[ @ 0]]
require( "x64:51cd7f68136f9cc0" ) --[[ @ 0]]

CoD.LaboratoryElixirLabel = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.LaboratoryElixirLabel.__defaultWidth = 325 --[[ @ 0]]
CoD.LaboratoryElixirLabel.__defaultHeight = 90 --[[ @ 0]]
CoD.LaboratoryElixirLabel.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.LaboratoryElixirLabel ) --[[ @ 0]]
	self.id = "LaboratoryElixirLabel" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local SceneBlur = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	SceneBlur:setRGB( 0, 0, 0 ) --[[ @ 0]]
	SceneBlur:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_E2354BE557C4C7A" ) ) --[[ @ 0]]
	SceneBlur:setShaderVector( 0, 0, 0.4, 0, 0 ) --[[ @ 0]]
	self:addElement( SceneBlur ) --[[ @ 0]]
	self.SceneBlur = SceneBlur --[[ @ 0]]
	
	local rarity = CoD.LaboratoryElixirRarityLabel.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 0, 0, 30 ) --[[ @ 0]]
	rarity:linkToElementModel( self, nil, false, function ( model )
		rarity:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( rarity ) --[[ @ 0]]
	self.rarity = rarity --[[ @ 0]]
	
	local name = LUI.UIText.new( 0, 0, 1.5, 323.5, 0, 0, 52, 70 ) --[[ @ 0]]
	name:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	name:setTTF( "dinnext_regular" ) --[[ @ 0]]
	name:setLetterSpacing( 1 ) --[[ @ 0]]
	name:setAlignment( Enum[@"LUIAlignment"][@"hash_1FEEB12BCB0D7041"] ) --[[ @ 0]]
	name:setAlignment( Enum[@"LUIAlignment"][@"hash_6ED4298C93DC5ED"] ) --[[ @ 0]]
	name:linkToElementModel( self, "id", true, function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			name:setText( Engine[@"hash_4F9F1239CFD921FE"]( GetItemNameFromRef( Enum[@"eModes"][@"hash_73723205FAE52C4A"], f3_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( name ) --[[ @ 0]]
	self.name = name --[[ @ 0]]
	
	local quantity = LUI.UIText.new( 0, 0, 1.5, 323.5, 0, 0, 62, 89 ) --[[ @ 0]]
	quantity:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	quantity:setAlpha( 0 ) --[[ @ 0]]
	quantity:setTTF( "dinnext_regular" ) --[[ @ 0]]
	quantity:setLetterSpacing( 1 ) --[[ @ 0]]
	quantity:setAlignment( Enum[@"LUIAlignment"][@"hash_1FEEB12BCB0D7041"] ) --[[ @ 0]]
	quantity:setAlignment( Enum[@"LUIAlignment"][@"hash_6ED4298C93DC5ED"] ) --[[ @ 0]]
	quantity:linkToElementModel( self, "quantity", true, function ( model )
		local f4_local0 = model:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			quantity:setText( LocalizeIntoStringIfNotEmpty( @"hash_79DB9C526E6370AB", f4_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( quantity ) --[[ @ 0]]
	self.quantity = quantity --[[ @ 0]]
	
	local Divider = CoD.zm_LaboratoryDescriptionDividerSecondary.new( f1_arg0, f1_arg1, 0.5, 0.5, -162, 162, 0.5, 0.5, -30, 2 ) --[[ @ 0]]
	Divider.R:setScale( 0.6, 0.6 ) --[[ @ 0]]
	Divider.L:setScale( 0.6, 0.6 ) --[[ @ 0]]
	self:addElement( Divider ) --[[ @ 0]]
	self.Divider = Divider --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "VisibleQuantity",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualTo( element, f1_arg1, "visible", 1 ) and CoD.ModelUtility.IsSelfModelValueGreaterThan( element, f1_arg1, "quantity", 1 )
			end
		},
		{
			stateName = "Visible",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualTo( element, f1_arg1, "visible", 1 )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "visible", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "visible"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:linkToElementModel( self, "quantity", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "quantity"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.LaboratoryElixirLabel.__resetProperties = function ( f9_arg0 )
	f9_arg0.name:completeAnimation() --[[ @ 0]]
	f9_arg0.rarity:completeAnimation() --[[ @ 0]]
	f9_arg0.SceneBlur:completeAnimation() --[[ @ 0]]
	f9_arg0.Divider:completeAnimation() --[[ @ 0]]
	f9_arg0.quantity:completeAnimation() --[[ @ 0]]
	f9_arg0.name:setTopBottom( 0, 0, 52, 70 ) --[[ @ 0]]
	f9_arg0.name:setAlpha( 1 ) --[[ @ 0]]
	f9_arg0.rarity:setAlpha( 1 ) --[[ @ 0]]
	f9_arg0.SceneBlur:setAlpha( 1 ) --[[ @ 0]]
	f9_arg0.Divider:setAlpha( 1 ) --[[ @ 0]]
	f9_arg0.quantity:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.LaboratoryElixirLabel.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f10_arg0, f10_arg1 )
			f10_arg0:__resetProperties() --[[ @ 0]]
			f10_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f10_arg0.SceneBlur:completeAnimation() --[[ @ 0]]
			f10_arg0.SceneBlur:setAlpha( 0 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.SceneBlur ) --[[ @ 0]]
			f10_arg0.rarity:completeAnimation() --[[ @ 0]]
			f10_arg0.rarity:setAlpha( 0 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.rarity ) --[[ @ 0]]
			f10_arg0.name:completeAnimation() --[[ @ 0]]
			f10_arg0.name:setAlpha( 0 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.name ) --[[ @ 0]]
			f10_arg0.Divider:completeAnimation() --[[ @ 0]]
			f10_arg0.Divider:setAlpha( 0 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.Divider ) --[[ @ 0]]
		end,
		Visible = function ( f11_arg0, f11_arg1 )
			f11_arg0:__resetProperties() --[[ @ 0]]
			f11_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			local f11_local0 = function ( f12_arg0 )
				f11_arg0.SceneBlur:beginAnimation( 250 ) --[[ @ 0]]
				f11_arg0.SceneBlur:setAlpha( 1 ) --[[ @ 0]]
				f11_arg0.SceneBlur:registerEventHandler( "interrupted_keyframe", f11_arg0.clipInterrupted ) --[[ @ 0]]
				f11_arg0.SceneBlur:registerEventHandler( "transition_complete_keyframe", f11_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f11_arg0.SceneBlur:completeAnimation() --[[ @ 0]]
			f11_arg0.SceneBlur:setAlpha( 0 ) --[[ @ 0]]
			f11_local0( f11_arg0.SceneBlur ) --[[ @ 0]]
			local f11_local1 = function ( f13_arg0 )
				f11_arg0.rarity:beginAnimation( 250 ) --[[ @ 0]]
				f11_arg0.rarity:setAlpha( 1 ) --[[ @ 0]]
				f11_arg0.rarity:registerEventHandler( "interrupted_keyframe", f11_arg0.clipInterrupted ) --[[ @ 0]]
				f11_arg0.rarity:registerEventHandler( "transition_complete_keyframe", f11_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f11_arg0.rarity:completeAnimation() --[[ @ 0]]
			f11_arg0.rarity:setAlpha( 0 ) --[[ @ 0]]
			f11_local1( f11_arg0.rarity ) --[[ @ 0]]
			local f11_local2 = function ( f14_arg0 )
				f11_arg0.name:beginAnimation( 250 ) --[[ @ 0]]
				f11_arg0.name:setAlpha( 1 ) --[[ @ 0]]
				f11_arg0.name:registerEventHandler( "interrupted_keyframe", f11_arg0.clipInterrupted ) --[[ @ 0]]
				f11_arg0.name:registerEventHandler( "transition_complete_keyframe", f11_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f11_arg0.name:completeAnimation() --[[ @ 0]]
			f11_arg0.name:setAlpha( 0 ) --[[ @ 0]]
			f11_local2( f11_arg0.name ) --[[ @ 0]]
		end
	},
	VisibleQuantity = {
		DefaultClip = function ( f15_arg0, f15_arg1 )
			f15_arg0:__resetProperties() --[[ @ 0]]
			f15_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f15_arg0.SceneBlur:completeAnimation() --[[ @ 0]]
			f15_arg0.SceneBlur:setAlpha( 1 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.SceneBlur ) --[[ @ 0]]
			f15_arg0.rarity:completeAnimation() --[[ @ 0]]
			f15_arg0.rarity:setAlpha( 1 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.rarity ) --[[ @ 0]]
			f15_arg0.name:completeAnimation() --[[ @ 0]]
			f15_arg0.name:setTopBottom( 0, 0, 42, 60 ) --[[ @ 0]]
			f15_arg0.name:setAlpha( 1 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.name ) --[[ @ 0]]
			f15_arg0.quantity:completeAnimation() --[[ @ 0]]
			f15_arg0.quantity:setAlpha( 1 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.quantity ) --[[ @ 0]]
		end,
		DefaultState = function ( f16_arg0, f16_arg1 )
			f16_arg0:__resetProperties() --[[ @ 0]]
			f16_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			local f16_local0 = function ( f17_arg0 )
				f16_arg0.SceneBlur:beginAnimation( 250 ) --[[ @ 0]]
				f16_arg0.SceneBlur:setAlpha( 0 ) --[[ @ 0]]
				f16_arg0.SceneBlur:registerEventHandler( "interrupted_keyframe", f16_arg0.clipInterrupted ) --[[ @ 0]]
				f16_arg0.SceneBlur:registerEventHandler( "transition_complete_keyframe", f16_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f16_arg0.SceneBlur:completeAnimation() --[[ @ 0]]
			f16_arg0.SceneBlur:setAlpha( 1 ) --[[ @ 0]]
			f16_local0( f16_arg0.SceneBlur ) --[[ @ 0]]
			local f16_local1 = function ( f18_arg0 )
				f16_arg0.rarity:beginAnimation( 250 ) --[[ @ 0]]
				f16_arg0.rarity:setAlpha( 0 ) --[[ @ 0]]
				f16_arg0.rarity:registerEventHandler( "interrupted_keyframe", f16_arg0.clipInterrupted ) --[[ @ 0]]
				f16_arg0.rarity:registerEventHandler( "transition_complete_keyframe", f16_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f16_arg0.rarity:completeAnimation() --[[ @ 0]]
			f16_arg0.rarity:setAlpha( 1 ) --[[ @ 0]]
			f16_local1( f16_arg0.rarity ) --[[ @ 0]]
			local f16_local2 = function ( f19_arg0 )
				f16_arg0.name:beginAnimation( 250 ) --[[ @ 0]]
				f16_arg0.name:setAlpha( 0 ) --[[ @ 0]]
				f16_arg0.name:registerEventHandler( "interrupted_keyframe", f16_arg0.clipInterrupted ) --[[ @ 0]]
				f16_arg0.name:registerEventHandler( "transition_complete_keyframe", f16_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f16_arg0.name:completeAnimation() --[[ @ 0]]
			f16_arg0.name:setTopBottom( 0, 0, 42, 60 ) --[[ @ 0]]
			f16_arg0.name:setAlpha( 1 ) --[[ @ 0]]
			f16_local2( f16_arg0.name ) --[[ @ 0]]
			local f16_local3 = function ( f20_arg0 )
				f16_arg0.quantity:beginAnimation( 250 ) --[[ @ 0]]
				f16_arg0.quantity:setAlpha( 0 ) --[[ @ 0]]
				f16_arg0.quantity:registerEventHandler( "interrupted_keyframe", f16_arg0.clipInterrupted ) --[[ @ 0]]
				f16_arg0.quantity:registerEventHandler( "transition_complete_keyframe", f16_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f16_arg0.quantity:completeAnimation() --[[ @ 0]]
			f16_arg0.quantity:setAlpha( 1 ) --[[ @ 0]]
			f16_local3( f16_arg0.quantity ) --[[ @ 0]]
		end
	},
	Visible = {
		DefaultClip = function ( f21_arg0, f21_arg1 )
			f21_arg0:__resetProperties() --[[ @ 0]]
			f21_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f21_arg0.SceneBlur:completeAnimation() --[[ @ 0]]
			f21_arg0.SceneBlur:setAlpha( 1 ) --[[ @ 0]]
			f21_arg0.clipFinished( f21_arg0.SceneBlur ) --[[ @ 0]]
			f21_arg0.rarity:completeAnimation() --[[ @ 0]]
			f21_arg0.rarity:setAlpha( 1 ) --[[ @ 0]]
			f21_arg0.clipFinished( f21_arg0.rarity ) --[[ @ 0]]
			f21_arg0.name:completeAnimation() --[[ @ 0]]
			f21_arg0.name:setAlpha( 1 ) --[[ @ 0]]
			f21_arg0.clipFinished( f21_arg0.name ) --[[ @ 0]]
		end,
		DefaultState = function ( f22_arg0, f22_arg1 )
			f22_arg0:__resetProperties() --[[ @ 0]]
			f22_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			local f22_local0 = function ( f23_arg0 )
				f22_arg0.SceneBlur:beginAnimation( 250 ) --[[ @ 0]]
				f22_arg0.SceneBlur:setAlpha( 0 ) --[[ @ 0]]
				f22_arg0.SceneBlur:registerEventHandler( "interrupted_keyframe", f22_arg0.clipInterrupted ) --[[ @ 0]]
				f22_arg0.SceneBlur:registerEventHandler( "transition_complete_keyframe", f22_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f22_arg0.SceneBlur:completeAnimation() --[[ @ 0]]
			f22_arg0.SceneBlur:setAlpha( 1 ) --[[ @ 0]]
			f22_local0( f22_arg0.SceneBlur ) --[[ @ 0]]
			local f22_local1 = function ( f24_arg0 )
				f22_arg0.rarity:beginAnimation( 250 ) --[[ @ 0]]
				f22_arg0.rarity:setAlpha( 0 ) --[[ @ 0]]
				f22_arg0.rarity:registerEventHandler( "interrupted_keyframe", f22_arg0.clipInterrupted ) --[[ @ 0]]
				f22_arg0.rarity:registerEventHandler( "transition_complete_keyframe", f22_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f22_arg0.rarity:completeAnimation() --[[ @ 0]]
			f22_arg0.rarity:setAlpha( 1 ) --[[ @ 0]]
			f22_local1( f22_arg0.rarity ) --[[ @ 0]]
			local f22_local2 = function ( f25_arg0 )
				f22_arg0.name:beginAnimation( 250 ) --[[ @ 0]]
				f22_arg0.name:setAlpha( 0 ) --[[ @ 0]]
				f22_arg0.name:registerEventHandler( "interrupted_keyframe", f22_arg0.clipInterrupted ) --[[ @ 0]]
				f22_arg0.name:registerEventHandler( "transition_complete_keyframe", f22_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f22_arg0.name:completeAnimation() --[[ @ 0]]
			f22_arg0.name:setAlpha( 1 ) --[[ @ 0]]
			f22_local2( f22_arg0.name ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.LaboratoryElixirLabel.__onClose = function ( f26_arg0 )
	f26_arg0.rarity:close() --[[ @ 0]]
	f26_arg0.name:close() --[[ @ 0]]
	f26_arg0.quantity:close() --[[ @ 0]]
	f26_arg0.Divider:close() --[[ @ 0]]
end
 --[[ @ 0]]
