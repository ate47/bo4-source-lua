-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:50
require( "x64:5f3b71d7ea8417f2" ) --[[ @ 0]]
require( "x64:a2d871ecfc40de" ) --[[ @ 0]]

CoD.DirectorCharacterDynamic = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.DirectorCharacterDynamic.__defaultWidth = 240 --[[ @ 0]]
CoD.DirectorCharacterDynamic.__defaultHeight = 44 --[[ @ 0]]
CoD.DirectorCharacterDynamic.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.DirectorCharacterDynamic ) --[[ @ 0]]
	self.id = "DirectorCharacterDynamic" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local ClientClanGamertag = CoD.DirectorLobbyClientGamertag.new( f1_arg0, f1_arg1, 0.5, 0.5, -148, 148, 0, 0, 4.5, 37.5 ) --[[ @ 0]]
	ClientClanGamertag:linkToElementModel( self, "info", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			ClientClanGamertag:setModel( f2_local0, f1_arg1 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( ClientClanGamertag ) --[[ @ 0]]
	self.ClientClanGamertag = ClientClanGamertag --[[ @ 0]]
	
	local DirectorStickyPartyStatus = CoD.DirectorStickyPartyStatus.new( f1_arg0, f1_arg1, 0, 0, 20, 220, 0, 0, -30, -6 ) --[[ @ 0]]
	DirectorStickyPartyStatus.TextBox.__stickyPartyStatus = function ( f3_arg0 )
		local f3_local0 = f3_arg0:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			DirectorStickyPartyStatus.TextBox:setText( Engine[@"hash_4F9F1239CFD921FE"]( StickyPartyStatusToString( f3_local0 ) ) ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	DirectorStickyPartyStatus:linkToElementModel( self, "info", true, function ( model, f4_arg1 )
		if f4_arg1["__DirectorStickyPartyStatus.TextBox.__stickyPartyStatus_info->whereAmI"] then
			f4_arg1:removeSubscription( f4_arg1["__DirectorStickyPartyStatus.TextBox.__stickyPartyStatus_info->whereAmI"] ) --[[ @ 0]]
			f4_arg1["__DirectorStickyPartyStatus.TextBox.__stickyPartyStatus_info->whereAmI"] = nil --[[ @ 0]]
		end
		if model then
			local f4_local0 = model:get() --[[ @ 0]]
			local f4_local1 = model:get() --[[ @ 0]]
			model = f4_local0 and f4_local1.whereAmI --[[ @ 0]]
		end
		if model then
			f4_arg1["__DirectorStickyPartyStatus.TextBox.__stickyPartyStatus_info->whereAmI"] = f4_arg1:subscribeToModel( model, DirectorStickyPartyStatus.TextBox.__stickyPartyStatus ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( DirectorStickyPartyStatus ) --[[ @ 0]]
	self.DirectorStickyPartyStatus = DirectorStickyPartyStatus --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Visible3DModelWZ",
			condition = function ( menu, element, event )
				local f5_local0 = CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg1, "visible" ) --[[ @ 0]]
				if f5_local0 then
					f5_local0 = IsWarzone() --[[ @ 0]]
					if f5_local0 then
						f5_local0 = not CoD.LobbyUtility.AllMembersInFrontend() --[[ @ 0]]
					end
				end
				return f5_local0
			end
		},
		{
			stateName = "Visible3DModel",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg1, "visible" ) and not IsZombies()
			end
		},
		{
			stateName = "VisibleAddPrompt",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg1, "available" )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "visible", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "visible"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local f1_local3 = self --[[ @ 0]]
	local f1_local4 = self.subscribeToModel --[[ @ 0]]
	local f1_local5 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local4( f1_local3, f1_local5["lobbyRoot.lobbyNav"], function ( f9_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f9_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local3 = self --[[ @ 0]]
	f1_local4 = self.subscribeToModel --[[ @ 0]]
	f1_local5 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local4( f1_local3, f1_local5["lobbyRoot.privateClient.update"], function ( f10_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f10_arg0:get(),
			modelName = "lobbyRoot.privateClient.update"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:linkToElementModel( self, "available", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "available"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.DirectorCharacterDynamic.__resetProperties = function ( f12_arg0 )
	f12_arg0.ClientClanGamertag:completeAnimation() --[[ @ 0]]
	f12_arg0.DirectorStickyPartyStatus:completeAnimation() --[[ @ 0]]
	f12_arg0.ClientClanGamertag:setAlpha( 1 ) --[[ @ 0]]
	f12_arg0.DirectorStickyPartyStatus:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorCharacterDynamic.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f13_arg0, f13_arg1 )
			f13_arg0:__resetProperties() --[[ @ 0]]
			f13_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f13_arg0.ClientClanGamertag:completeAnimation() --[[ @ 0]]
			f13_arg0.ClientClanGamertag:setAlpha( 0 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.ClientClanGamertag ) --[[ @ 0]]
			f13_arg0.DirectorStickyPartyStatus:completeAnimation() --[[ @ 0]]
			f13_arg0.DirectorStickyPartyStatus:setAlpha( 0 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.DirectorStickyPartyStatus ) --[[ @ 0]]
		end
	},
	Visible3DModelWZ = {
		DefaultClip = function ( f14_arg0, f14_arg1 )
			f14_arg0:__resetProperties() --[[ @ 0]]
			f14_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	Visible3DModel = {
		DefaultClip = function ( f15_arg0, f15_arg1 )
			f15_arg0:__resetProperties() --[[ @ 0]]
			f15_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f15_arg0.DirectorStickyPartyStatus:completeAnimation() --[[ @ 0]]
			f15_arg0.DirectorStickyPartyStatus:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.DirectorStickyPartyStatus ) --[[ @ 0]]
		end
	},
	VisibleAddPrompt = {
		DefaultClip = function ( f16_arg0, f16_arg1 )
			f16_arg0:__resetProperties() --[[ @ 0]]
			f16_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f16_arg0.ClientClanGamertag:completeAnimation() --[[ @ 0]]
			f16_arg0.ClientClanGamertag:setAlpha( 0 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.ClientClanGamertag ) --[[ @ 0]]
			f16_arg0.DirectorStickyPartyStatus:completeAnimation() --[[ @ 0]]
			f16_arg0.DirectorStickyPartyStatus:setAlpha( 0 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.DirectorStickyPartyStatus ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.DirectorCharacterDynamic.__onClose = function ( f17_arg0 )
	f17_arg0.ClientClanGamertag:close() --[[ @ 0]]
	f17_arg0.DirectorStickyPartyStatus:close() --[[ @ 0]]
end
 --[[ @ 0]]
