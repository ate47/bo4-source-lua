-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:35
require( "x64:348be5c6feaceeb4" ) --[[ @ 0]]
require( "x64:20f93e6387e9d051" ) --[[ @ 0]]
require( "ui/uieditor/widgets/startmenu/startmenu_connectionmetercontainer" ) --[[ @ 0]]
require( "x64:57ed8dcc82e16905" ) --[[ @ 0]]

CoD.StartMenu_Options_Frame_Network = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.StartMenu_Options_Frame_Network.__defaultWidth = 1920 --[[ @ 0]]
CoD.StartMenu_Options_Frame_Network.__defaultHeight = 890 --[[ @ 0]]
CoD.StartMenu_Options_Frame_Network.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.StartMenu_Options_Frame_Network ) --[[ @ 0]]
	self.id = "StartMenu_Options_Frame_Network" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local OptionInfo = CoD.StartMenu_Options_SettingInfo.new( f1_arg0, f1_arg1, 0, 0, 912, 1812, 0, 0, 40, 144 ) --[[ @ 0]]
	self:addElement( OptionInfo ) --[[ @ 0]]
	self.OptionInfo = OptionInfo --[[ @ 0]]
	
	local OptionGroups = LUI.UIList.new( f1_arg0, f1_arg1, 10, 0, nil, false, false, false, false ) --[[ @ 0]]
	OptionGroups:setLeftRight( 0, 0, 100, 800 ) --[[ @ 0]]
	OptionGroups:setTopBottom( 0, 0, 0, 998 ) --[[ @ 0]]
	OptionGroups:setWidgetType( CoD.StartMenu_Options_SettingSlider_Wrapper ) --[[ @ 0]]
	OptionGroups:setVerticalCount( 18 ) --[[ @ 0]]
	OptionGroups:setSpacing( 10 ) --[[ @ 0]]
	OptionGroups:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	OptionGroups:setDataSource( "PlayerSettingsNetworkList" ) --[[ @ 0]]
	OptionGroups:registerEventHandler( "list_item_gain_focus", function ( element, event )
		local f2_local0 = nil --[[ @ 0]]
		if IsElementPropertyValue( element, "showOverviewPanel", true ) then
			SetState( self, "NetworkOverview", f1_arg1 ) --[[ @ 0]]
		else
			SetState( self, "DefaultState", f1_arg1 ) --[[ @ 0]]
		end
		return f2_local0
	end ) --[[ @ 0]]
	OptionGroups:registerEventHandler( "gain_focus", function ( element, event )
		local f3_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f3_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f3_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"] ) --[[ @ 0]]
		return f3_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( OptionGroups, f1_arg1, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"], nil, function ( element, menu, controller, model )
		if HasListAction( element, controller ) and IsElementPropertyValue( element, "isHidden", true ) then
			ProcessListAction( self, element, controller, menu ) --[[ @ 0]]
			UpdateButtonPromptState( menu, element, controller, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"] ) --[[ @ 0]]
			return true
		elseif HasListAction( element, controller ) then
			ProcessListAction( self, element, controller, menu ) --[[ @ 0]]
			UpdateButtonPromptState( menu, element, controller, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"] ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if HasListAction( element, controller ) and IsElementPropertyValue( element, "isHidden", true ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"], @"hash_63F20759C07A14C2", nil, nil ) --[[ @ 0]]
			return true
		elseif HasListAction( element, controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"], @"hash_67A4FDABE47B6C3F", nil, nil ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( OptionGroups ) --[[ @ 0]]
	self.OptionGroups = OptionGroups --[[ @ 0]]
	
	local NetworkOverviewPanel = CoD.StartMenu_Options_Network_OverviewPanel.new( f1_arg0, f1_arg1, 0, 0, 912, 1792, 0, 0, 40, 815 ) --[[ @ 0]]
	self:addElement( NetworkOverviewPanel ) --[[ @ 0]]
	self.NetworkOverviewPanel = NetworkOverviewPanel --[[ @ 0]]
	
	local StartMenuConnectionMeterContainer = CoD.StartMenu_ConnectionMeterContainer.new( f1_arg0, f1_arg1, 0, 0, 100, 1050, 0, 0, 626, 796 ) --[[ @ 0]]
	self:addElement( StartMenuConnectionMeterContainer ) --[[ @ 0]]
	self.StartMenuConnectionMeterContainer = StartMenuConnectionMeterContainer --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "NetworkOverview",
			condition = function ( menu, element, event )
				return IsSelfInState( self, "NetworkOverview" )
			end
		}
	} ) --[[ @ 0]]
	OptionGroups.id = "OptionGroups" --[[ @ 0]]
	NetworkOverviewPanel.id = "NetworkOverviewPanel" --[[ @ 0]]
	self.__defaultFocus = OptionGroups --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.StartMenu_Options_Frame_Network.__resetProperties = function ( f7_arg0 )
	f7_arg0.NetworkOverviewPanel:completeAnimation() --[[ @ 0]]
	f7_arg0.OptionInfo:completeAnimation() --[[ @ 0]]
	f7_arg0.NetworkOverviewPanel:setAlpha( 1 ) --[[ @ 0]]
	f7_arg0.OptionInfo:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.StartMenu_Options_Frame_Network.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f8_arg0, f8_arg1 )
			f8_arg0:__resetProperties() --[[ @ 0]]
			f8_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f8_arg0.NetworkOverviewPanel:completeAnimation() --[[ @ 0]]
			f8_arg0.NetworkOverviewPanel:setAlpha( 0 ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.NetworkOverviewPanel ) --[[ @ 0]]
		end
	},
	NetworkOverview = {
		DefaultClip = function ( f9_arg0, f9_arg1 )
			f9_arg0:__resetProperties() --[[ @ 0]]
			f9_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f9_arg0.OptionInfo:completeAnimation() --[[ @ 0]]
			f9_arg0.OptionInfo:setAlpha( 0 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.OptionInfo ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.StartMenu_Options_Frame_Network.__onClose = function ( f10_arg0 )
	f10_arg0.OptionInfo:close() --[[ @ 0]]
	f10_arg0.OptionGroups:close() --[[ @ 0]]
	f10_arg0.NetworkOverviewPanel:close() --[[ @ 0]]
	f10_arg0.StartMenuConnectionMeterContainer:close() --[[ @ 0]]
end
 --[[ @ 0]]
