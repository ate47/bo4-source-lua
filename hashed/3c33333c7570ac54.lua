-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:33
CoD.UnlockBonusAndXPIcon = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.UnlockBonusAndXPIcon.__defaultWidth = 223 --[[ @ 0]]
CoD.UnlockBonusAndXPIcon.__defaultHeight = 21 --[[ @ 0]]
CoD.UnlockBonusAndXPIcon.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.UnlockBonusAndXPIcon ) --[[ @ 0]]
	self.id = "UnlockBonusAndXPIcon" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local UnlockBonus = LUI.UIText.new( 0, 0, 23, 223, 0, 0, 0, 21 ) --[[ @ 0]]
	UnlockBonus:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	UnlockBonus:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	UnlockBonus:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	UnlockBonus:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	UnlockBonus:linkToElementModel( self, "unlockReward", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			UnlockBonus:setText( f2_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( UnlockBonus ) --[[ @ 0]]
	self.UnlockBonus = UnlockBonus --[[ @ 0]]
	
	local XPIcon = LUI.UIImage.new( 0, 0, 0, 20, 0, 0, 0, 20 ) --[[ @ 0]]
	XPIcon:setImage( RegisterImage( @"t7_hud_mp_notifications_xp_alt" ) ) --[[ @ 0]]
	self:addElement( XPIcon ) --[[ @ 0]]
	self.XPIcon = XPIcon --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				local f3_local0 --[[ @ 0]]
				if not CoD.ModelUtility.IsSelfModelValueEqualToEnum( element, f1_arg1, "unlockSessionMode", Enum[@"eModes"][@"hash_383EBA96F36BC4E5"] ) then
					f3_local0 = not CoD.ModelUtility.IsSelfModelValueEqualToEnum( element, f1_arg1, "unlockSessionMode", Enum[@"eModes"][@"hash_73723205FAE52C4A"] ) --[[ @ 0]]
				else
					f3_local0 = false --[[ @ 0]]
				end
				return f3_local0
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "unlockSessionMode", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "unlockSessionMode"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.UnlockBonusAndXPIcon.__resetProperties = function ( f5_arg0 )
	f5_arg0.XPIcon:completeAnimation() --[[ @ 0]]
	f5_arg0.UnlockBonus:completeAnimation() --[[ @ 0]]
	f5_arg0.XPIcon:setAlpha( 1 ) --[[ @ 0]]
	f5_arg0.UnlockBonus:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.UnlockBonusAndXPIcon.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f6_arg0, f6_arg1 )
			f6_arg0:__resetProperties() --[[ @ 0]]
			f6_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	Hidden = {
		DefaultClip = function ( f7_arg0, f7_arg1 )
			f7_arg0:__resetProperties() --[[ @ 0]]
			f7_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f7_arg0.UnlockBonus:completeAnimation() --[[ @ 0]]
			f7_arg0.UnlockBonus:setAlpha( 0 ) --[[ @ 0]]
			f7_arg0.clipFinished( f7_arg0.UnlockBonus ) --[[ @ 0]]
			f7_arg0.XPIcon:completeAnimation() --[[ @ 0]]
			f7_arg0.XPIcon:setAlpha( 0 ) --[[ @ 0]]
			f7_arg0.clipFinished( f7_arg0.XPIcon ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.UnlockBonusAndXPIcon.__onClose = function ( f8_arg0 )
	f8_arg0.UnlockBonus:close() --[[ @ 0]]
end
 --[[ @ 0]]
