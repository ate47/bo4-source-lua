-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:33
CoD.Timer = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.Timer.__defaultWidth = 178 --[[ @ 0]]
CoD.Timer.__defaultHeight = 73 --[[ @ 0]]
CoD.Timer.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.Timer ) --[[ @ 0]]
	self.id = "Timer" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local timerbgshadow = LUI.UIImage.new( 0.5, 0.5, -186, 192, 0.5, 0.5, -148, 140 ) --[[ @ 0]]
	timerbgshadow:setRGB( 0, 0, 0 ) --[[ @ 0]]
	timerbgshadow:setAlpha( 0.8 ) --[[ @ 0]]
	timerbgshadow:setImage( RegisterImage( @"uie_t7_hud_rocketlauncher_timer" ) ) --[[ @ 0]]
	self:addElement( timerbgshadow ) --[[ @ 0]]
	self.timerbgshadow = timerbgshadow --[[ @ 0]]
	
	local timerbg = LUI.UIImage.new( 0.5, 0.5, -186, 192, 0.5, 0.5, -148, 140 ) --[[ @ 0]]
	timerbg:setImage( RegisterImage( @"uie_t7_hud_rocketlauncher_timer" ) ) --[[ @ 0]]
	self:addElement( timerbg ) --[[ @ 0]]
	self.timerbg = timerbg --[[ @ 0]]
	
	local TimerShadow = LUI.UIText.new( 0.5, 0.5, -78, 72, 0.5, 0.5, -30, 30 ) --[[ @ 0]]
	TimerShadow:setRGB( 0, 0, 0 ) --[[ @ 0]]
	TimerShadow:setAlpha( 0.8 ) --[[ @ 0]]
	TimerShadow:setTTF( "default" ) --[[ @ 0]]
	TimerShadow:setLetterSpacing( 1 ) --[[ @ 0]]
	TimerShadow:setAlignment( Enum[@"LUIAlignment"][@"hash_1FEEB12BCB0D7041"] ) --[[ @ 0]]
	TimerShadow:subscribeToGlobalModel( f1_arg1, "CurrentWeapon", "lockedOnEnemyTimeRemaining", function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			TimerShadow:setText( NumberAsTime( f2_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( TimerShadow ) --[[ @ 0]]
	self.TimerShadow = TimerShadow --[[ @ 0]]
	
	local Timer = LUI.UIText.new( 0.5, 0.5, -78, 72, 0.5, 0.5, -30, 30 ) --[[ @ 0]]
	Timer:setTTF( "default" ) --[[ @ 0]]
	Timer:setLetterSpacing( 1 ) --[[ @ 0]]
	Timer:setAlignment( Enum[@"LUIAlignment"][@"hash_1FEEB12BCB0D7041"] ) --[[ @ 0]]
	Timer:subscribeToGlobalModel( f1_arg1, "CurrentWeapon", "lockedOnEnemyTimeRemaining", function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			Timer:setText( NumberAsTime( f3_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Timer ) --[[ @ 0]]
	self.Timer = Timer --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Targetting",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalDataSourceModelValueEnumBitSet( f1_arg1, "CurrentWeapon", "lockedOnEnemy", Enum[@"RocketLauncherTargetStatesFlags"][@"hash_1FFFAB60076992A1"] ) and CoD.ModelUtility.IsGlobalDataSourceModelValueGreaterThan( f1_arg1, "CurrentWeapon", "lockedOnEnemyTimeRemaining", 0 )
			end
		}
	} ) --[[ @ 0]]
	local f1_local5 = self --[[ @ 0]]
	local f1_local6 = self.subscribeToModel --[[ @ 0]]
	local f1_local7 = DataSources.CurrentWeapon.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local6( f1_local5, f1_local7.lockedOnEnemy, function ( f5_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f5_arg0:get(),
			modelName = "lockedOnEnemy"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local5 = self --[[ @ 0]]
	f1_local6 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = DataSources.CurrentWeapon.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local6( f1_local5, f1_local7.lockedOnEnemyTimeRemaining, function ( f6_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f6_arg0:get(),
			modelName = "lockedOnEnemyTimeRemaining"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.Timer.__resetProperties = function ( f7_arg0 )
	f7_arg0.Timer:completeAnimation() --[[ @ 0]]
	f7_arg0.TimerShadow:completeAnimation() --[[ @ 0]]
	f7_arg0.timerbgshadow:completeAnimation() --[[ @ 0]]
	f7_arg0.timerbg:completeAnimation() --[[ @ 0]]
	f7_arg0.Timer:setAlpha( 1 ) --[[ @ 0]]
	f7_arg0.TimerShadow:setAlpha( 0.8 ) --[[ @ 0]]
	f7_arg0.timerbgshadow:setAlpha( 0.8 ) --[[ @ 0]]
	f7_arg0.timerbg:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.Timer.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f8_arg0, f8_arg1 )
			f8_arg0:__resetProperties() --[[ @ 0]]
			f8_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f8_arg0.timerbgshadow:completeAnimation() --[[ @ 0]]
			f8_arg0.timerbgshadow:setAlpha( 0 ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.timerbgshadow ) --[[ @ 0]]
			f8_arg0.timerbg:completeAnimation() --[[ @ 0]]
			f8_arg0.timerbg:setAlpha( 0 ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.timerbg ) --[[ @ 0]]
			f8_arg0.TimerShadow:completeAnimation() --[[ @ 0]]
			f8_arg0.TimerShadow:setAlpha( 0 ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.TimerShadow ) --[[ @ 0]]
			f8_arg0.Timer:completeAnimation() --[[ @ 0]]
			f8_arg0.Timer:setAlpha( 0 ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.Timer ) --[[ @ 0]]
		end
	},
	Targetting = {
		DefaultClip = function ( f9_arg0, f9_arg1 )
			f9_arg0:__resetProperties() --[[ @ 0]]
			f9_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.Timer.__onClose = function ( f10_arg0 )
	f10_arg0.TimerShadow:close() --[[ @ 0]]
	f10_arg0.Timer:close() --[[ @ 0]]
end
 --[[ @ 0]]
