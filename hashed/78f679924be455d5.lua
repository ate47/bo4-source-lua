-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:50
require( "x64:542d705a8804a00b" ) --[[ @ 0]]
require( "x64:3fd740505876fd7b" ) --[[ @ 0]]

CoD.ReserveTall = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.ReserveTall.__defaultWidth = 236 --[[ @ 0]]
CoD.ReserveTall.__defaultHeight = 506 --[[ @ 0]]
CoD.ReserveTall.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.ReserveTall ) --[[ @ 0]]
	self.id = "ReserveTall" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local ContractRarityHeaderBackground = LUI.UIImage.new( 0, 0, 0, 236, 0, 0, 0, 506 ) --[[ @ 0]]
	ContractRarityHeaderBackground:setAlpha( 0.7 ) --[[ @ 0]]
	ContractRarityHeaderBackground:linkToElementModel( self, "rarity", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			ContractRarityHeaderBackground:setRGB( CoD.BlackMarketUtility.LootRarityToColorDark( f2_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( ContractRarityHeaderBackground ) --[[ @ 0]]
	self.ContractRarityHeaderBackground = ContractRarityHeaderBackground --[[ @ 0]]
	
	local ContractRarityHeaderBackground2 = LUI.UIImage.new( 0, 0, 0, 236, 0, 0, 293, 319 ) --[[ @ 0]]
	ContractRarityHeaderBackground2:linkToElementModel( self, "rarity", true, function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			ContractRarityHeaderBackground2:setRGB( CoD.BlackMarketUtility.LootRarityToColor( f3_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( ContractRarityHeaderBackground2 ) --[[ @ 0]]
	self.ContractRarityHeaderBackground2 = ContractRarityHeaderBackground2 --[[ @ 0]]
	
	local HeaderBGDarken = LUI.UIImage.new( 0, 1, 0, 0, 0, 0, 0, 21 ) --[[ @ 0]]
	HeaderBGDarken:setRGB( 0, 0, 0 ) --[[ @ 0]]
	HeaderBGDarken:setAlpha( 0.3 ) --[[ @ 0]]
	self:addElement( HeaderBGDarken ) --[[ @ 0]]
	self.HeaderBGDarken = HeaderBGDarken --[[ @ 0]]
	
	local Category = LUI.UIText.new( 0, 0, 0, 236, 0, 0, 2, 20 ) --[[ @ 0]]
	Category:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	Category:setLetterSpacing( 2 ) --[[ @ 0]]
	Category:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	Category:setAlignment( Enum[@"luialignment"][@"hash_E821F0ECFF8D1C7"] ) --[[ @ 0]]
	Category:linkToElementModel( self, "rarity", true, function ( model )
		local f4_local0 = model:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			Category:setRGB( CoD.BlackMarketUtility.LootRarityToColorBright( f4_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	Category:linkToElementModel( self, "category", true, function ( model )
		local f5_local0 = model:get() --[[ @ 0]]
		if f5_local0 ~= nil then
			Category:setText( LocalizeToUpperString( f5_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Category ) --[[ @ 0]]
	self.Category = Category --[[ @ 0]]
	
	local UltraCategoryHeader = CoD.ItemHistoryReservesHeader.new( f1_arg0, f1_arg1, 0, 0, 0, 236, 0, 0, 0, 21 ) --[[ @ 0]]
	UltraCategoryHeader:mergeStateConditions( {
		{
			stateName = "Visible",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualTo( element, f1_arg1, "rarity", 4 ) and not CoD.BaseUtility.IsCurrentLanguageAsian()
			end
		},
		{
			stateName = "VisibleAsianLang",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualTo( element, f1_arg1, "rarity", 4 )
			end
		}
	} ) --[[ @ 0]]
	UltraCategoryHeader:linkToElementModel( UltraCategoryHeader, "rarity", true, function ( model )
		f1_arg0:updateElementState( UltraCategoryHeader, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "rarity"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	UltraCategoryHeader:linkToElementModel( self, nil, false, function ( model )
		UltraCategoryHeader:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( UltraCategoryHeader ) --[[ @ 0]]
	self.UltraCategoryHeader = UltraCategoryHeader --[[ @ 0]]
	
	local Rarity = LUI.UIText.new( 0, 0, 7, 230, 0, 0, 298, 315 ) --[[ @ 0]]
	Rarity:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	Rarity:setLetterSpacing( 2 ) --[[ @ 0]]
	Rarity:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	Rarity:setAlignment( Enum[@"luialignment"][@"hash_E821F0ECFF8D1C7"] ) --[[ @ 0]]
	Rarity:linkToElementModel( self, "rarity", true, function ( model )
		local f10_local0 = model:get() --[[ @ 0]]
		if f10_local0 ~= nil then
			Rarity:setRGB( CoD.BlackMarketUtility.LootRarityToColorBright( f10_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	Rarity:linkToElementModel( self, "rarity", true, function ( model )
		local f11_local0 = model:get() --[[ @ 0]]
		if f11_local0 ~= nil then
			Rarity:setText( LocalizeToUpperString( CoD.BlackMarketUtility.LootRarityToString( f11_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Rarity ) --[[ @ 0]]
	self.Rarity = Rarity --[[ @ 0]]
	
	local Name = LUI.UIText.new( 0, 0, 7, 230, 0, 0, 325, 349 ) --[[ @ 0]]
	Name:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	Name:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	Name:setLetterSpacing( 2 ) --[[ @ 0]]
	Name:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	Name:setAlignment( Enum[@"luialignment"][@"hash_E821F0ECFF8D1C7"] ) --[[ @ 0]]
	Name:linkToElementModel( self, "name", true, function ( model )
		local f12_local0 = model:get() --[[ @ 0]]
		if f12_local0 ~= nil then
			Name:setText( Engine[@"hash_4F9F1239CFD921FE"]( f12_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Name ) --[[ @ 0]]
	self.Name = Name --[[ @ 0]]
	
	local Desc = LUI.UIText.new( 0, 0, 7, 230, 0, 0, 352, 369 ) --[[ @ 0]]
	Desc:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	Desc:setTTF( "dinnext_regular" ) --[[ @ 0]]
	Desc:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	Desc:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	Desc:linkToElementModel( self, "desc", true, function ( model )
		local f13_local0 = model:get() --[[ @ 0]]
		if f13_local0 ~= nil then
			Desc:setText( f13_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Desc ) --[[ @ 0]]
	self.Desc = Desc --[[ @ 0]]
	
	local mainExtraText = LUI.UIText.new( 0, 0, 7, 230, 0, 0, 467, 483 ) --[[ @ 0]]
	mainExtraText:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	mainExtraText:setTTF( "dinnext_regular" ) --[[ @ 0]]
	mainExtraText:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	mainExtraText:linkToElementModel( self, "mainExtraText", true, function ( model )
		local f14_local0 = model:get() --[[ @ 0]]
		if f14_local0 ~= nil then
			mainExtraText:setText( f14_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( mainExtraText ) --[[ @ 0]]
	self.mainExtraText = mainExtraText --[[ @ 0]]
	
	local subExtraText = LUI.UIText.new( 0, 0, 7, 230, 0, 0, 488, 504 ) --[[ @ 0]]
	subExtraText:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	subExtraText:setTTF( "dinnext_regular" ) --[[ @ 0]]
	subExtraText:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	subExtraText:linkToElementModel( self, "subExtraText", true, function ( model )
		local f15_local0 = model:get() --[[ @ 0]]
		if f15_local0 ~= nil then
			subExtraText:setText( Engine[@"hash_4F9F1239CFD921FE"]( f15_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( subExtraText ) --[[ @ 0]]
	self.subExtraText = subExtraText --[[ @ 0]]
	
	local FeaturedImage = CoD.ReservesContentImage.new( f1_arg0, f1_arg1, 0, 0, -28, 264, 0, 0, -32, 319 ) --[[ @ 0]]
	FeaturedImage:setScale( 0.7, 0.7 ) --[[ @ 0]]
	FeaturedImage:linkToElementModel( self, nil, false, function ( model )
		FeaturedImage:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( FeaturedImage ) --[[ @ 0]]
	self.FeaturedImage = FeaturedImage --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "AsianLang",
			condition = function ( menu, element, event )
				local f17_local0 = CoD.ModelUtility.IsSelfModelValueEqualToEnum( element, f1_arg1, "lootType", LuaEnum.LOOT_TYPE.CONTRABAND ) --[[ @ 0]]
				if f17_local0 then
					f17_local0 = CoD.BaseUtility.IsCurrentLanguageAsian() --[[ @ 0]]
					if f17_local0 then
						f17_local0 = not CoD.BlackMarketUtility.ShowShopReserveItem( f1_arg1, element ) --[[ @ 0]]
					end
				end
				return f17_local0
			end
		},
		{
			stateName = "Visible",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualToEnum( element, f1_arg1, "lootType", LuaEnum.LOOT_TYPE.CONTRABAND ) and not CoD.BlackMarketUtility.ShowShopReserveItem( f1_arg1, element )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "lootType", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "lootType"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.ReserveTall.__resetProperties = function ( f20_arg0 )
	f20_arg0.UltraCategoryHeader:completeAnimation() --[[ @ 0]]
	f20_arg0.Category:completeAnimation() --[[ @ 0]]
	f20_arg0.HeaderBGDarken:completeAnimation() --[[ @ 0]]
	f20_arg0.ContractRarityHeaderBackground2:completeAnimation() --[[ @ 0]]
	f20_arg0.ContractRarityHeaderBackground:completeAnimation() --[[ @ 0]]
	f20_arg0.Rarity:completeAnimation() --[[ @ 0]]
	f20_arg0.Name:completeAnimation() --[[ @ 0]]
	f20_arg0.Desc:completeAnimation() --[[ @ 0]]
	f20_arg0.mainExtraText:completeAnimation() --[[ @ 0]]
	f20_arg0.subExtraText:completeAnimation() --[[ @ 0]]
	f20_arg0.FeaturedImage:completeAnimation() --[[ @ 0]]
	f20_arg0.UltraCategoryHeader:setAlpha( 1 ) --[[ @ 0]]
	f20_arg0.Category:setTopBottom( 0, 0, 2, 20 ) --[[ @ 0]]
	f20_arg0.Category:setAlpha( 1 ) --[[ @ 0]]
	f20_arg0.HeaderBGDarken:setAlpha( 0.3 ) --[[ @ 0]]
	f20_arg0.ContractRarityHeaderBackground2:setAlpha( 1 ) --[[ @ 0]]
	f20_arg0.ContractRarityHeaderBackground:setAlpha( 0.7 ) --[[ @ 0]]
	f20_arg0.Rarity:setTopBottom( 0, 0, 298, 315 ) --[[ @ 0]]
	f20_arg0.Rarity:setAlpha( 1 ) --[[ @ 0]]
	f20_arg0.Name:setTopBottom( 0, 0, 325, 349 ) --[[ @ 0]]
	f20_arg0.Name:setAlpha( 1 ) --[[ @ 0]]
	f20_arg0.Desc:setTopBottom( 0, 0, 352, 369 ) --[[ @ 0]]
	f20_arg0.Desc:setAlpha( 1 ) --[[ @ 0]]
	f20_arg0.mainExtraText:setTopBottom( 0, 0, 467, 483 ) --[[ @ 0]]
	f20_arg0.mainExtraText:setAlpha( 1 ) --[[ @ 0]]
	f20_arg0.subExtraText:setTopBottom( 0, 0, 488, 504 ) --[[ @ 0]]
	f20_arg0.subExtraText:setAlpha( 1 ) --[[ @ 0]]
	f20_arg0.FeaturedImage:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ReserveTall.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f21_arg0, f21_arg1 )
			f21_arg0:__resetProperties() --[[ @ 0]]
			f21_arg0:setupElementClipCounter( 11 ) --[[ @ 0]]
			f21_arg0.ContractRarityHeaderBackground:completeAnimation() --[[ @ 0]]
			f21_arg0.ContractRarityHeaderBackground:setAlpha( 0 ) --[[ @ 0]]
			f21_arg0.clipFinished( f21_arg0.ContractRarityHeaderBackground ) --[[ @ 0]]
			f21_arg0.ContractRarityHeaderBackground2:completeAnimation() --[[ @ 0]]
			f21_arg0.ContractRarityHeaderBackground2:setAlpha( 0 ) --[[ @ 0]]
			f21_arg0.clipFinished( f21_arg0.ContractRarityHeaderBackground2 ) --[[ @ 0]]
			f21_arg0.HeaderBGDarken:completeAnimation() --[[ @ 0]]
			f21_arg0.HeaderBGDarken:setAlpha( 0 ) --[[ @ 0]]
			f21_arg0.clipFinished( f21_arg0.HeaderBGDarken ) --[[ @ 0]]
			f21_arg0.Category:completeAnimation() --[[ @ 0]]
			f21_arg0.Category:setAlpha( 0 ) --[[ @ 0]]
			f21_arg0.clipFinished( f21_arg0.Category ) --[[ @ 0]]
			f21_arg0.UltraCategoryHeader:completeAnimation() --[[ @ 0]]
			f21_arg0.UltraCategoryHeader:setAlpha( 0 ) --[[ @ 0]]
			f21_arg0.clipFinished( f21_arg0.UltraCategoryHeader ) --[[ @ 0]]
			f21_arg0.Rarity:completeAnimation() --[[ @ 0]]
			f21_arg0.Rarity:setAlpha( 0 ) --[[ @ 0]]
			f21_arg0.clipFinished( f21_arg0.Rarity ) --[[ @ 0]]
			f21_arg0.Name:completeAnimation() --[[ @ 0]]
			f21_arg0.Name:setAlpha( 0 ) --[[ @ 0]]
			f21_arg0.clipFinished( f21_arg0.Name ) --[[ @ 0]]
			f21_arg0.Desc:completeAnimation() --[[ @ 0]]
			f21_arg0.Desc:setAlpha( 0 ) --[[ @ 0]]
			f21_arg0.clipFinished( f21_arg0.Desc ) --[[ @ 0]]
			f21_arg0.mainExtraText:completeAnimation() --[[ @ 0]]
			f21_arg0.mainExtraText:setAlpha( 0 ) --[[ @ 0]]
			f21_arg0.clipFinished( f21_arg0.mainExtraText ) --[[ @ 0]]
			f21_arg0.subExtraText:completeAnimation() --[[ @ 0]]
			f21_arg0.subExtraText:setAlpha( 0 ) --[[ @ 0]]
			f21_arg0.clipFinished( f21_arg0.subExtraText ) --[[ @ 0]]
			f21_arg0.FeaturedImage:completeAnimation() --[[ @ 0]]
			f21_arg0.FeaturedImage:setAlpha( 0 ) --[[ @ 0]]
			f21_arg0.clipFinished( f21_arg0.FeaturedImage ) --[[ @ 0]]
		end
	},
	AsianLang = {
		DefaultClip = function ( f22_arg0, f22_arg1 )
			f22_arg0:__resetProperties() --[[ @ 0]]
			f22_arg0:setupElementClipCounter( 6 ) --[[ @ 0]]
			f22_arg0.Category:completeAnimation() --[[ @ 0]]
			f22_arg0.Category:setTopBottom( 0, 0, 6, 20 ) --[[ @ 0]]
			f22_arg0.clipFinished( f22_arg0.Category ) --[[ @ 0]]
			f22_arg0.Rarity:completeAnimation() --[[ @ 0]]
			f22_arg0.Rarity:setTopBottom( 0, 0, 302, 316 ) --[[ @ 0]]
			f22_arg0.clipFinished( f22_arg0.Rarity ) --[[ @ 0]]
			f22_arg0.Name:completeAnimation() --[[ @ 0]]
			f22_arg0.Name:setTopBottom( 0, 0, 326, 346 ) --[[ @ 0]]
			f22_arg0.clipFinished( f22_arg0.Name ) --[[ @ 0]]
			f22_arg0.Desc:completeAnimation() --[[ @ 0]]
			f22_arg0.Desc:setTopBottom( 0, 0, 355, 369 ) --[[ @ 0]]
			f22_arg0.clipFinished( f22_arg0.Desc ) --[[ @ 0]]
			f22_arg0.mainExtraText:completeAnimation() --[[ @ 0]]
			f22_arg0.mainExtraText:setTopBottom( 0, 0, 467, 481 ) --[[ @ 0]]
			f22_arg0.clipFinished( f22_arg0.mainExtraText ) --[[ @ 0]]
			f22_arg0.subExtraText:completeAnimation() --[[ @ 0]]
			f22_arg0.subExtraText:setTopBottom( 0, 0, 487, 501 ) --[[ @ 0]]
			f22_arg0.clipFinished( f22_arg0.subExtraText ) --[[ @ 0]]
		end
	},
	Visible = {
		DefaultClip = function ( f23_arg0, f23_arg1 )
			f23_arg0:__resetProperties() --[[ @ 0]]
			f23_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.ReserveTall.__onClose = function ( f24_arg0 )
	f24_arg0.ContractRarityHeaderBackground:close() --[[ @ 0]]
	f24_arg0.ContractRarityHeaderBackground2:close() --[[ @ 0]]
	f24_arg0.Category:close() --[[ @ 0]]
	f24_arg0.UltraCategoryHeader:close() --[[ @ 0]]
	f24_arg0.Rarity:close() --[[ @ 0]]
	f24_arg0.Name:close() --[[ @ 0]]
	f24_arg0.Desc:close() --[[ @ 0]]
	f24_arg0.mainExtraText:close() --[[ @ 0]]
	f24_arg0.subExtraText:close() --[[ @ 0]]
	f24_arg0.FeaturedImage:close() --[[ @ 0]]
end
 --[[ @ 0]]
