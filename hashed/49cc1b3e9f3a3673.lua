-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
require( "x64:3f26a29f79cd73a1" ) --[[ @ 0]]
require( "x64:1c19e7fbf81b62c9" ) --[[ @ 0]]

CoD.CodCasterObjectiveStatusLifeCount = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.CodCasterObjectiveStatusLifeCount.__defaultWidth = 520 --[[ @ 0]]
CoD.CodCasterObjectiveStatusLifeCount.__defaultHeight = 32 --[[ @ 0]]
CoD.CodCasterObjectiveStatusLifeCount.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.CodCasterObjectiveStatusLifeCount ) --[[ @ 0]]
	self.id = "CodCasterObjectiveStatusLifeCount" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local Blur = LUI.UIImage.new( 0.5, 0.5, -205, 205, 0.5, 0.5, -13.5, 11.5 ) --[[ @ 0]]
	Blur:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_E2354BE557C4C7A" ) ) --[[ @ 0]]
	Blur:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( Blur ) --[[ @ 0]]
	self.Blur = Blur --[[ @ 0]]
	
	local TeamLeft = LUI.UIImage.new( 0, 0, 49, 206, 0.5, 0.5, -14, 11 ) --[[ @ 0]]
	TeamLeft:setAlpha( 0.5 ) --[[ @ 0]]
	TeamLeft:subscribeToGlobalModel( f1_arg1, "Factions", "alliesFactionColor", function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			TeamLeft:setRGB( f2_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( TeamLeft ) --[[ @ 0]]
	self.TeamLeft = TeamLeft --[[ @ 0]]
	
	local DarkBackingLeft = LUI.UIImage.new( 0.5, 0.5, -205, -54, 0.5, 0.5, -14, 11 ) --[[ @ 0]]
	DarkBackingLeft:setRGB( 0, 0, 0 ) --[[ @ 0]]
	DarkBackingLeft:setAlpha( 0.9 ) --[[ @ 0]]
	self:addElement( DarkBackingLeft ) --[[ @ 0]]
	self.DarkBackingLeft = DarkBackingLeft --[[ @ 0]]
	
	local TeamRight = LUI.UIImage.new( 0, 0, 315, 472, 0.5, 0.5, -14, 11 ) --[[ @ 0]]
	TeamRight:setAlpha( 0.5 ) --[[ @ 0]]
	TeamRight:subscribeToGlobalModel( f1_arg1, "FactionsGlobal", "axisFactionColor", function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			TeamRight:setRGB( f3_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( TeamRight ) --[[ @ 0]]
	self.TeamRight = TeamRight --[[ @ 0]]
	
	local DarkBackingRight = LUI.UIImage.new( 0.5, 0.5, 55, 212, 0.5, 0.5, -14, 11 ) --[[ @ 0]]
	DarkBackingRight:setRGB( 0, 0, 0 ) --[[ @ 0]]
	DarkBackingRight:setAlpha( 0.9 ) --[[ @ 0]]
	self:addElement( DarkBackingRight ) --[[ @ 0]]
	self.DarkBackingRight = DarkBackingRight --[[ @ 0]]
	
	local objectiveStatusBackground = LUI.UIImage.new( 0.5, 0.5, -260, 260, 0.5, 0.5, -16, 16 ) --[[ @ 0]]
	objectiveStatusBackground:setImage( RegisterImage( @"uie_ui_codcaster_scoreboard_livebg" ) ) --[[ @ 0]]
	self:addElement( objectiveStatusBackground ) --[[ @ 0]]
	self.objectiveStatusBackground = objectiveStatusBackground --[[ @ 0]]
	
	local RoundCount = LUI.UIText.new( 0.5, 0.5, -49, 51, 0.08, 0.08, 1, 19 ) --[[ @ 0]]
	RoundCount:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_44583E7C93D5801E" ) ) --[[ @ 0]]
	RoundCount:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	RoundCount:setAlignment( Enum[@"LUIAlignment"][@"hash_1FEEB12BCB0D7041"] ) --[[ @ 0]]
	RoundCount:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	self:addElement( RoundCount ) --[[ @ 0]]
	self.RoundCount = RoundCount --[[ @ 0]]
	
	local CodCasterObjectiveStatusLifeTeam1 = CoD.CodCasterObjectiveStatusLifeTeam.new( f1_arg0, f1_arg1, 0.39, 0.39, -412, 0, 0.4, 0.4, -10, 10 ) --[[ @ 0]]
	CodCasterObjectiveStatusLifeTeam1.LifeList:setYRot( 180 ) --[[ @ 0]]
	CodCasterObjectiveStatusLifeTeam1:subscribeToGlobalModel( f1_arg1, "PlayerTeamLastLivesData", nil, function ( model )
		CodCasterObjectiveStatusLifeTeam1:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	CodCasterObjectiveStatusLifeTeam1.teamLivesCount.teamLivesCount.__teamLivesCount_teamLivesCount_String_Reference = function ( f5_arg0 )
		local f5_local0 = f5_arg0:get() --[[ @ 0]]
		if f5_local0 ~= nil then
			CodCasterObjectiveStatusLifeTeam1.teamLivesCount.teamLivesCount:setText( CoD.HUDUtility.AddTeamSize( f1_arg1, 0, f5_local0 ) ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	CodCasterObjectiveStatusLifeTeam1:subscribeToGlobalModel( f1_arg1, "TeamLivesData", "playerTeamLives", CodCasterObjectiveStatusLifeTeam1.teamLivesCount.teamLivesCount.__teamLivesCount_teamLivesCount_String_Reference ) --[[ @ 0]]
	CodCasterObjectiveStatusLifeTeam1.teamLivesCount.teamLivesCount.__teamLivesCount_teamLivesCount_String_Reference_FullPath = function ()
		local f6_local0 = DataSources.TeamLivesData.getModel( f1_arg1 ) --[[ @ 0]]
		f6_local0 = f6_local0.playerTeamLives --[[ @ 0]]
		if f6_local0 then
			CodCasterObjectiveStatusLifeTeam1.teamLivesCount.teamLivesCount.__teamLivesCount_teamLivesCount_String_Reference( f6_local0 ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	CodCasterObjectiveStatusLifeTeam1:subscribeToGlobalModel( f1_arg1, "PlayerTeamLastLivesData", nil, function ( model )
		CodCasterObjectiveStatusLifeTeam1.LifeList:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( CodCasterObjectiveStatusLifeTeam1 ) --[[ @ 0]]
	self.CodCasterObjectiveStatusLifeTeam1 = CodCasterObjectiveStatusLifeTeam1 --[[ @ 0]]
	
	local CodCasterObjectiveStatusLifeTeam2 = CoD.CodCasterObjectiveStatusLifeTeam2.new( f1_arg0, f1_arg1, 0.61, 0.61, -268, 144, 0.4, 0.4, -10, 10 ) --[[ @ 0]]
	CodCasterObjectiveStatusLifeTeam2:subscribeToGlobalModel( f1_arg1, "EnemyTeamLastLivesData", nil, function ( model )
		CodCasterObjectiveStatusLifeTeam2:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	CodCasterObjectiveStatusLifeTeam2.teamLivesCount.teamLivesCount.__teamLivesCount_teamLivesCount_String_Reference = function ( f9_arg0 )
		local f9_local0 = f9_arg0:get() --[[ @ 0]]
		if f9_local0 ~= nil then
			CodCasterObjectiveStatusLifeTeam2.teamLivesCount.teamLivesCount:setText( CoD.HUDUtility.AddTeamSize( f1_arg1, 1, f9_local0 ) ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	CodCasterObjectiveStatusLifeTeam2:subscribeToGlobalModel( f1_arg1, "TeamLivesData", "enemyTeamLives", CodCasterObjectiveStatusLifeTeam2.teamLivesCount.teamLivesCount.__teamLivesCount_teamLivesCount_String_Reference ) --[[ @ 0]]
	CodCasterObjectiveStatusLifeTeam2.teamLivesCount.teamLivesCount.__teamLivesCount_teamLivesCount_String_Reference_FullPath = function ()
		local f10_local0 = DataSources.TeamLivesData.getModel( f1_arg1 ) --[[ @ 0]]
		f10_local0 = f10_local0.enemyTeamLives --[[ @ 0]]
		if f10_local0 then
			CodCasterObjectiveStatusLifeTeam2.teamLivesCount.teamLivesCount.__teamLivesCount_teamLivesCount_String_Reference( f10_local0 ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	CodCasterObjectiveStatusLifeTeam2:subscribeToGlobalModel( f1_arg1, "EnemyTeamLastLivesData", nil, function ( model )
		CodCasterObjectiveStatusLifeTeam2.LifeList:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( CodCasterObjectiveStatusLifeTeam2 ) --[[ @ 0]]
	self.CodCasterObjectiveStatusLifeTeam2 = CodCasterObjectiveStatusLifeTeam2 --[[ @ 0]]
	
	local f1_local10 = CodCasterObjectiveStatusLifeTeam1 --[[ @ 0]]
	local f1_local11 = CodCasterObjectiveStatusLifeTeam1.subscribeToModel --[[ @ 0]]
	local f1_local12 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local11( f1_local10, f1_local12["PlayerTeamLastLivesData.teamSize"], CodCasterObjectiveStatusLifeTeam1.teamLivesCount.teamLivesCount.__teamLivesCount_teamLivesCount_String_Reference_FullPath ) --[[ @ 0]]
	f1_local10 = CodCasterObjectiveStatusLifeTeam1 --[[ @ 0]]
	f1_local11 = CodCasterObjectiveStatusLifeTeam1.subscribeToModel --[[ @ 0]]
	f1_local12 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local11( f1_local10, f1_local12["EnemyTeamLastLivesData.teamSize"], CodCasterObjectiveStatusLifeTeam1.teamLivesCount.teamLivesCount.__teamLivesCount_teamLivesCount_String_Reference_FullPath ) --[[ @ 0]]
	f1_local10 = CodCasterObjectiveStatusLifeTeam2 --[[ @ 0]]
	f1_local11 = CodCasterObjectiveStatusLifeTeam2.subscribeToModel --[[ @ 0]]
	f1_local12 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local11( f1_local10, f1_local12["PlayerTeamLastLivesData.teamSize"], CodCasterObjectiveStatusLifeTeam2.teamLivesCount.teamLivesCount.__teamLivesCount_teamLivesCount_String_Reference_FullPath ) --[[ @ 0]]
	f1_local10 = CodCasterObjectiveStatusLifeTeam2 --[[ @ 0]]
	f1_local11 = CodCasterObjectiveStatusLifeTeam2.subscribeToModel --[[ @ 0]]
	f1_local12 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local11( f1_local10, f1_local12["EnemyTeamLastLivesData.teamSize"], CodCasterObjectiveStatusLifeTeam2.teamLivesCount.teamLivesCount.__teamLivesCount_teamLivesCount_String_Reference_FullPath ) --[[ @ 0]]
	self:mergeStateConditions( {
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				local f12_local0 --[[ @ 0]]
				if not CoD.HUDUtility.ShouldShowTeamLives( f1_arg1 ) then
					f12_local0 = not CoD.HUDUtility.IsGameTypeEqualToString( "ctf" ) --[[ @ 0]]
				else
					f12_local0 = false --[[ @ 0]]
				end
				return f12_local0
			end
		},
		{
			stateName = "RoundOnly",
			condition = function ( menu, element, event )
				return CoD.HUDUtility.IsGameTypeEqualToString( "ctf" )
			end
		}
	} ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.CodCasterObjectiveStatusLifeCount.__resetProperties = function ( f14_arg0 )
	f14_arg0.RoundCount:completeAnimation() --[[ @ 0]]
	f14_arg0.objectiveStatusBackground:completeAnimation() --[[ @ 0]]
	f14_arg0.CodCasterObjectiveStatusLifeTeam1:completeAnimation() --[[ @ 0]]
	f14_arg0.CodCasterObjectiveStatusLifeTeam2:completeAnimation() --[[ @ 0]]
	f14_arg0.Blur:completeAnimation() --[[ @ 0]]
	f14_arg0.TeamRight:completeAnimation() --[[ @ 0]]
	f14_arg0.TeamLeft:completeAnimation() --[[ @ 0]]
	f14_arg0.DarkBackingLeft:completeAnimation() --[[ @ 0]]
	f14_arg0.DarkBackingRight:completeAnimation() --[[ @ 0]]
	f14_arg0.RoundCount:setAlpha( 1 ) --[[ @ 0]]
	f14_arg0.objectiveStatusBackground:setAlpha( 1 ) --[[ @ 0]]
	f14_arg0.CodCasterObjectiveStatusLifeTeam1:setAlpha( 1 ) --[[ @ 0]]
	f14_arg0.CodCasterObjectiveStatusLifeTeam2:setAlpha( 1 ) --[[ @ 0]]
	f14_arg0.Blur:setAlpha( 1 ) --[[ @ 0]]
	f14_arg0.TeamRight:setAlpha( 0.5 ) --[[ @ 0]]
	f14_arg0.TeamLeft:setAlpha( 0.5 ) --[[ @ 0]]
	f14_arg0.DarkBackingLeft:setAlpha( 0.9 ) --[[ @ 0]]
	f14_arg0.DarkBackingRight:setAlpha( 0.9 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.CodCasterObjectiveStatusLifeCount.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f15_arg0, f15_arg1 )
			f15_arg0:__resetProperties() --[[ @ 0]]
			f15_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	Hidden = {
		DefaultClip = function ( f16_arg0, f16_arg1 )
			f16_arg0:__resetProperties() --[[ @ 0]]
			f16_arg0:setupElementClipCounter( 9 ) --[[ @ 0]]
			f16_arg0.Blur:completeAnimation() --[[ @ 0]]
			f16_arg0.Blur:setAlpha( 0 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.Blur ) --[[ @ 0]]
			f16_arg0.TeamLeft:completeAnimation() --[[ @ 0]]
			f16_arg0.TeamLeft:setAlpha( 0 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.TeamLeft ) --[[ @ 0]]
			f16_arg0.DarkBackingLeft:completeAnimation() --[[ @ 0]]
			f16_arg0.DarkBackingLeft:setAlpha( 0 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.DarkBackingLeft ) --[[ @ 0]]
			f16_arg0.TeamRight:completeAnimation() --[[ @ 0]]
			f16_arg0.TeamRight:setAlpha( 0 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.TeamRight ) --[[ @ 0]]
			f16_arg0.DarkBackingRight:completeAnimation() --[[ @ 0]]
			f16_arg0.DarkBackingRight:setAlpha( 0 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.DarkBackingRight ) --[[ @ 0]]
			f16_arg0.objectiveStatusBackground:completeAnimation() --[[ @ 0]]
			f16_arg0.objectiveStatusBackground:setAlpha( 0 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.objectiveStatusBackground ) --[[ @ 0]]
			f16_arg0.RoundCount:completeAnimation() --[[ @ 0]]
			f16_arg0.RoundCount:setAlpha( 0 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.RoundCount ) --[[ @ 0]]
			f16_arg0.CodCasterObjectiveStatusLifeTeam1:completeAnimation() --[[ @ 0]]
			f16_arg0.CodCasterObjectiveStatusLifeTeam1:setAlpha( 0 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.CodCasterObjectiveStatusLifeTeam1 ) --[[ @ 0]]
			f16_arg0.CodCasterObjectiveStatusLifeTeam2:completeAnimation() --[[ @ 0]]
			f16_arg0.CodCasterObjectiveStatusLifeTeam2:setAlpha( 0 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.CodCasterObjectiveStatusLifeTeam2 ) --[[ @ 0]]
		end
	},
	RoundOnly = {
		DefaultClip = function ( f17_arg0, f17_arg1 )
			f17_arg0:__resetProperties() --[[ @ 0]]
			f17_arg0:setupElementClipCounter( 6 ) --[[ @ 0]]
			f17_arg0.TeamLeft:completeAnimation() --[[ @ 0]]
			f17_arg0.TeamLeft:setAlpha( 0.5 ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.TeamLeft ) --[[ @ 0]]
			f17_arg0.DarkBackingLeft:completeAnimation() --[[ @ 0]]
			f17_arg0.DarkBackingLeft:setAlpha( 0.5 ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.DarkBackingLeft ) --[[ @ 0]]
			f17_arg0.TeamRight:completeAnimation() --[[ @ 0]]
			f17_arg0.TeamRight:setAlpha( 0.5 ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.TeamRight ) --[[ @ 0]]
			f17_arg0.DarkBackingRight:completeAnimation() --[[ @ 0]]
			f17_arg0.DarkBackingRight:setAlpha( 0.5 ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.DarkBackingRight ) --[[ @ 0]]
			f17_arg0.CodCasterObjectiveStatusLifeTeam1:completeAnimation() --[[ @ 0]]
			f17_arg0.CodCasterObjectiveStatusLifeTeam1:setAlpha( 0 ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.CodCasterObjectiveStatusLifeTeam1 ) --[[ @ 0]]
			f17_arg0.CodCasterObjectiveStatusLifeTeam2:completeAnimation() --[[ @ 0]]
			f17_arg0.CodCasterObjectiveStatusLifeTeam2:setAlpha( 0 ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.CodCasterObjectiveStatusLifeTeam2 ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.CodCasterObjectiveStatusLifeCount.__onClose = function ( f18_arg0 )
	f18_arg0.TeamLeft:close() --[[ @ 0]]
	f18_arg0.TeamRight:close() --[[ @ 0]]
	f18_arg0.CodCasterObjectiveStatusLifeTeam1:close() --[[ @ 0]]
	f18_arg0.CodCasterObjectiveStatusLifeTeam2:close() --[[ @ 0]]
end
 --[[ @ 0]]
