-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:50
CoD.ZMLoadoutPreviewClassPipPC = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.ZMLoadoutPreviewClassPipPC.__defaultWidth = 32 --[[ @ 0]]
CoD.ZMLoadoutPreviewClassPipPC.__defaultHeight = 15 --[[ @ 0]]
CoD.ZMLoadoutPreviewClassPipPC.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.ZMLoadoutPreviewClassPipPC ) --[[ @ 0]]
	self.id = "ZMLoadoutPreviewClassPipPC" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local BG = LUI.UIImage.new( 0.08, 0.93, 0, 0, 0.08, 0.93, 0, 0 ) --[[ @ 0]]
	BG:setRGB( 0.22, 0.22, 0.22 ) --[[ @ 0]]
	self:addElement( BG ) --[[ @ 0]]
	self.BG = BG --[[ @ 0]]
	
	local TiledBacking = LUI.UIImage.new( 0.5, 0.5, -13, 13, 0.5, 0.5, -6, 6 ) --[[ @ 0]]
	TiledBacking:setAlpha( 0.75 ) --[[ @ 0]]
	TiledBacking:setImage( RegisterImage( @"uie_ui_menu_specialist_hub_repeat_bg" ) ) --[[ @ 0]]
	TiledBacking:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_16CBE95C250C6D15" ) ) --[[ @ 0]]
	TiledBacking:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	TiledBacking:setupNineSliceShader( 28, 12 ) --[[ @ 0]]
	self:addElement( TiledBacking ) --[[ @ 0]]
	self.TiledBacking = TiledBacking --[[ @ 0]]
	
	local Border = LUI.UIImage.new( 0.08, 0.93, 0, 0, 0.08, 0.93, 0, 0 ) --[[ @ 0]]
	Border:setRGB( 0.33, 0.33, 0.33 ) --[[ @ 0]]
	Border:setImage( RegisterImage( @"uie_highlight_border_line" ) ) --[[ @ 0]]
	Border:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_normal" ) ) --[[ @ 0]]
	Border:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	Border:setupNineSliceShader( 7, 7 ) --[[ @ 0]]
	self:addElement( Border ) --[[ @ 0]]
	self.Border = Border --[[ @ 0]]
	
	local Pip = LUI.UIImage.new( 0.08, 0.93, 0, 0, 0.08, 0.93, 0, 0 ) --[[ @ 0]]
	Pip:setAlpha( 0 ) --[[ @ 0]]
	Pip:setMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	self:addElement( Pip ) --[[ @ 0]]
	self.Pip = Pip --[[ @ 0]]
	
	local Glow = LUI.UIImage.new( -0.15, 1.15, 0, 0, -0.21, 1.21, 0, 0 ) --[[ @ 0]]
	Glow:setAlpha( 0 ) --[[ @ 0]]
	Glow:setImage( RegisterImage( @"uie_ui_hud_core_no_ammo_glow" ) ) --[[ @ 0]]
	Glow:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_wipe_delta" ) ) --[[ @ 0]]
	Glow:setShaderVector( 0, 0.05, 0.95, 0, 0 ) --[[ @ 0]]
	Glow:setShaderVector( 1, 0.2, 0.2, 0, 0 ) --[[ @ 0]]
	Glow:setShaderVector( 2, 0, 1, 0, 0 ) --[[ @ 0]]
	Glow:setShaderVector( 3, 0, 0, 0, 0 ) --[[ @ 0]]
	Glow:setShaderVector( 4, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( Glow ) --[[ @ 0]]
	self.Glow = Glow --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Chosen",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsControllerModelValueEqualToSelfModelValue( self, f1_arg1, "selectedCustomClass", "classNum" )
			end
		},
		{
			stateName = "Gamepad",
			condition = function ( menu, element, event )
				return IsGamepad( f1_arg1 )
			end
		}
	} ) --[[ @ 0]]
	local f1_local6 = self --[[ @ 0]]
	local f1_local7 = self.subscribeToModel --[[ @ 0]]
	local f1_local8 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local7( f1_local6, f1_local8.selectedCustomClass, function ( f4_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f4_arg0:get(),
			modelName = "selectedCustomClass"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:linkToElementModel( self, "classNum", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "classNum"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:appendEventHandler( "input_source_changed", function ( f6_arg0, f6_arg1 )
		f6_arg1.menu = f6_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( self, f6_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	f1_local6 = self --[[ @ 0]]
	f1_local7 = self.subscribeToModel --[[ @ 0]]
	f1_local8 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local7( f1_local6, f1_local8.LastInput, function ( f7_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f7_arg0:get(),
			modelName = "LastInput"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local6 = self --[[ @ 0]]
	f1_local7 = self.subscribeToModel --[[ @ 0]]
	f1_local8 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local7( f1_local6, f1_local8.selectedCustomClass, function ( f8_arg0, f8_arg1 )
		CoD.Menu.UpdateButtonShownState( f8_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_none"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:linkToElementModel( self, "classNum", true, function ( model, f9_arg1 )
		CoD.Menu.UpdateButtonShownState( f9_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_none"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( self, f1_arg1, Enum[@"luibutton"][@"lui_key_none"], "MOUSE1", function ( element, menu, controller, model )
		if not CoD.ZMLoadoutUtility.ShouldHideLoadoutPreviewSelectButton( menu, element, controller, "selectedCustomClass", "classNum" ) then
			CoD.ZMLoadoutUtility.SetEquippedBubbleGumPackToSelectedClass( element, controller, menu ) --[[ @ 0]]
			CoD.CACUtility.SelectCustomClass( controller, element ) --[[ @ 0]]
			CoD.BaseUtility.SetControllerModelToSelfModelValue( controller, self, "selectedCustomClass", "classNum" ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not CoD.ZMLoadoutUtility.ShouldHideLoadoutPreviewSelectButton( menu, element, controller, "selectedCustomClass", "classNum" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_none"], @"hash_0", nil, "MOUSE1" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	f1_local7 = self --[[ @ 0]]
	CoD.ZMLoadoutUtility.SetupPreviewPCPip( self, f1_arg1 ) --[[ @ 0]]
	return self
end
 --[[ @ 0]]
CoD.ZMLoadoutPreviewClassPipPC.__resetProperties = function ( f12_arg0 )
	f12_arg0.Pip:completeAnimation() --[[ @ 0]]
	f12_arg0.Glow:completeAnimation() --[[ @ 0]]
	f12_arg0.Pip:setRGB( 1, 1, 1 ) --[[ @ 0]]
	f12_arg0.Pip:setAlpha( 0 ) --[[ @ 0]]
	f12_arg0.Glow:setRGB( 1, 1, 1 ) --[[ @ 0]]
	f12_arg0.Glow:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ZMLoadoutPreviewClassPipPC.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f13_arg0, f13_arg1 )
			f13_arg0:__resetProperties() --[[ @ 0]]
			f13_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end,
		Active = function ( f14_arg0, f14_arg1 )
			f14_arg0:__resetProperties() --[[ @ 0]]
			f14_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			local f14_local0 = function ( f15_arg0 )
				f14_arg0.Pip:beginAnimation( 140 ) --[[ @ 0]]
				f14_arg0.Pip:setRGB( ColorSet.T8__BIEGE.r, ColorSet.T8__BIEGE.g, ColorSet.T8__BIEGE.b ) --[[ @ 0]]
				f14_arg0.Pip:setAlpha( 0.35 ) --[[ @ 0]]
				f14_arg0.Pip:registerEventHandler( "interrupted_keyframe", f14_arg0.clipInterrupted ) --[[ @ 0]]
				f14_arg0.Pip:registerEventHandler( "transition_complete_keyframe", f14_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f14_arg0.Pip:completeAnimation() --[[ @ 0]]
			f14_arg0.Pip:setRGB( 1, 1, 1 ) --[[ @ 0]]
			f14_arg0.Pip:setAlpha( 0.1 ) --[[ @ 0]]
			f14_local0( f14_arg0.Pip ) --[[ @ 0]]
			local f14_local1 = function ( f16_arg0 )
				f14_arg0.Glow:beginAnimation( 140 ) --[[ @ 0]]
				f14_arg0.Glow:setAlpha( 0.5 ) --[[ @ 0]]
				f14_arg0.Glow:registerEventHandler( "interrupted_keyframe", f14_arg0.clipInterrupted ) --[[ @ 0]]
				f14_arg0.Glow:registerEventHandler( "transition_complete_keyframe", f14_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f14_arg0.Glow:completeAnimation() --[[ @ 0]]
			f14_arg0.Glow:setRGB( ColorSet.T8__BEIGE__HEADER.r, ColorSet.T8__BEIGE__HEADER.g, ColorSet.T8__BEIGE__HEADER.b ) --[[ @ 0]]
			f14_arg0.Glow:setAlpha( 0 ) --[[ @ 0]]
			f14_local1( f14_arg0.Glow ) --[[ @ 0]]
		end,
		Focus = function ( f17_arg0, f17_arg1 )
			f17_arg0:__resetProperties() --[[ @ 0]]
			f17_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			local f17_local0 = function ( f18_arg0 )
				f17_arg0.Pip:beginAnimation( 140 ) --[[ @ 0]]
				f17_arg0.Pip:setRGB( ColorSet.T8__BIEGE.r, ColorSet.T8__BIEGE.g, ColorSet.T8__BIEGE.b ) --[[ @ 0]]
				f17_arg0.Pip:setAlpha( 0.5 ) --[[ @ 0]]
				f17_arg0.Pip:registerEventHandler( "interrupted_keyframe", f17_arg0.clipInterrupted ) --[[ @ 0]]
				f17_arg0.Pip:registerEventHandler( "transition_complete_keyframe", f17_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f17_arg0.Pip:completeAnimation() --[[ @ 0]]
			f17_arg0.Pip:setRGB( 1, 1, 1 ) --[[ @ 0]]
			f17_arg0.Pip:setAlpha( 0.1 ) --[[ @ 0]]
			f17_local0( f17_arg0.Pip ) --[[ @ 0]]
			local f17_local1 = function ( f19_arg0 )
				f17_arg0.Glow:beginAnimation( 140 ) --[[ @ 0]]
				f17_arg0.Glow:setRGB( ColorSet.T8__BEIGE__HEADER.r, ColorSet.T8__BEIGE__HEADER.g, ColorSet.T8__BEIGE__HEADER.b ) --[[ @ 0]]
				f17_arg0.Glow:setAlpha( 0.5 ) --[[ @ 0]]
				f17_arg0.Glow:registerEventHandler( "interrupted_keyframe", f17_arg0.clipInterrupted ) --[[ @ 0]]
				f17_arg0.Glow:registerEventHandler( "transition_complete_keyframe", f17_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f17_arg0.Glow:completeAnimation() --[[ @ 0]]
			f17_arg0.Glow:setRGB( 0.77, 0.28, 0.27 ) --[[ @ 0]]
			f17_arg0.Glow:setAlpha( 0 ) --[[ @ 0]]
			f17_local1( f17_arg0.Glow ) --[[ @ 0]]
		end
	},
	Chosen = {
		DefaultClip = function ( f20_arg0, f20_arg1 )
			f20_arg0:__resetProperties() --[[ @ 0]]
			f20_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f20_arg0.Pip:completeAnimation() --[[ @ 0]]
			f20_arg0.Pip:setRGB( 1, 0, 0 ) --[[ @ 0]]
			f20_arg0.Pip:setAlpha( 0.75 ) --[[ @ 0]]
			f20_arg0.clipFinished( f20_arg0.Pip ) --[[ @ 0]]
			f20_arg0.Glow:completeAnimation() --[[ @ 0]]
			f20_arg0.Glow:setRGB( 1, 0, 0 ) --[[ @ 0]]
			f20_arg0.Glow:setAlpha( 0.7 ) --[[ @ 0]]
			f20_arg0.clipFinished( f20_arg0.Glow ) --[[ @ 0]]
		end,
		Active = function ( f21_arg0, f21_arg1 )
			f21_arg0:__resetProperties() --[[ @ 0]]
			f21_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f21_arg0.Pip:completeAnimation() --[[ @ 0]]
			f21_arg0.Pip:setRGB( 1, 0, 0 ) --[[ @ 0]]
			f21_arg0.Pip:setAlpha( 1 ) --[[ @ 0]]
			f21_arg0.clipFinished( f21_arg0.Pip ) --[[ @ 0]]
			f21_arg0.Glow:completeAnimation() --[[ @ 0]]
			f21_arg0.Glow:setRGB( 1, 0, 0 ) --[[ @ 0]]
			f21_arg0.Glow:setAlpha( 0.9 ) --[[ @ 0]]
			f21_arg0.clipFinished( f21_arg0.Glow ) --[[ @ 0]]
		end
	},
	Gamepad = {
		DefaultClip = function ( f22_arg0, f22_arg1 )
			f22_arg0:__resetProperties() --[[ @ 0]]
			f22_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end,
		Active = function ( f23_arg0, f23_arg1 )
			f23_arg0:__resetProperties() --[[ @ 0]]
			f23_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			local f23_local0 = function ( f24_arg0 )
				f23_arg0.Pip:beginAnimation( 140 ) --[[ @ 0]]
				f23_arg0.Pip:setRGB( ColorSet.T8__BIEGE.r, ColorSet.T8__BIEGE.g, ColorSet.T8__BIEGE.b ) --[[ @ 0]]
				f23_arg0.Pip:setAlpha( 1 ) --[[ @ 0]]
				f23_arg0.Pip:registerEventHandler( "interrupted_keyframe", f23_arg0.clipInterrupted ) --[[ @ 0]]
				f23_arg0.Pip:registerEventHandler( "transition_complete_keyframe", f23_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f23_arg0.Pip:completeAnimation() --[[ @ 0]]
			f23_arg0.Pip:setRGB( 1, 1, 1 ) --[[ @ 0]]
			f23_arg0.Pip:setAlpha( 0.1 ) --[[ @ 0]]
			f23_local0( f23_arg0.Pip ) --[[ @ 0]]
			local f23_local1 = function ( f25_arg0 )
				f23_arg0.Glow:beginAnimation( 140 ) --[[ @ 0]]
				f23_arg0.Glow:setAlpha( 0.5 ) --[[ @ 0]]
				f23_arg0.Glow:registerEventHandler( "interrupted_keyframe", f23_arg0.clipInterrupted ) --[[ @ 0]]
				f23_arg0.Glow:registerEventHandler( "transition_complete_keyframe", f23_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f23_arg0.Glow:completeAnimation() --[[ @ 0]]
			f23_arg0.Glow:setRGB( ColorSet.T8__BEIGE__HEADER.r, ColorSet.T8__BEIGE__HEADER.g, ColorSet.T8__BEIGE__HEADER.b ) --[[ @ 0]]
			f23_arg0.Glow:setAlpha( 0 ) --[[ @ 0]]
			f23_local1( f23_arg0.Glow ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
