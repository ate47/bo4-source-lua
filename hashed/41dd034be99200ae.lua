-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
require( "ui/uieditor/widgets/emptyfocusable" ) --[[ @ 0]]
require( "x64:32b3a36f75bb6e0e" ) --[[ @ 0]]
require( "ui/uieditor/widgets/startmenu/options/startmenuoptionsmainframe" ) --[[ @ 0]]
require( "ui/uieditor/widgets/startmenu/startmenu_frame_nobg" ) --[[ @ 0]]

CoD.StartMenu_Options_NumOption = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.StartMenu_Options_NumOption.__defaultWidth = 750 --[[ @ 0]]
CoD.StartMenu_Options_NumOption.__defaultHeight = 60 --[[ @ 0]]
CoD.StartMenu_Options_NumOption.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.StartMenu_Options_NumOption ) --[[ @ 0]]
	self.id = "StartMenu_Options_NumOption" --[[ @ 0]]
	self.soundSet = "ChooseDecal" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local emptyFocusable = CoD.emptyFocusable.new( f1_arg0, f1_arg1, 0, 0, 0, 750, 0, 0, 0, 60 ) --[[ @ 0]]
	self:addElement( emptyFocusable ) --[[ @ 0]]
	self.emptyFocusable = emptyFocusable --[[ @ 0]]
	
	local Backing = LUI.UIImage.new( 0, 0, 0, 628, 0, 1, 0, 0 ) --[[ @ 0]]
	Backing:setRGB( 0.13, 0.12, 0.12 ) --[[ @ 0]]
	Backing:setAlpha( 0.5 ) --[[ @ 0]]
	self:addElement( Backing ) --[[ @ 0]]
	self.Backing = Backing --[[ @ 0]]
	
	local Frame = CoD.StartMenuOptionsMainFrame.new( f1_arg0, f1_arg1, 0, 0, 0, 628, 0, 1, 0, 0 ) --[[ @ 0]]
	Frame:setRGB( 0.78, 0.74, 0.67 ) --[[ @ 0]]
	Frame:setAlpha( 0.04 ) --[[ @ 0]]
	self:addElement( Frame ) --[[ @ 0]]
	self.Frame = Frame --[[ @ 0]]
	
	local ActionText = LUI.UIText.new( 0, 0, 12, 352, 0.5, 0.5, -10.5, 10.5 ) --[[ @ 0]]
	ActionText:setRGB( 0.78, 0.74, 0.67 ) --[[ @ 0]]
	ActionText:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	ActionText:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	ActionText:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	ActionText:linkToElementModel( self, "displayText", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			ActionText:setText( Engine[@"hash_4F9F1239CFD921FE"]( f2_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( ActionText ) --[[ @ 0]]
	self.ActionText = ActionText --[[ @ 0]]
	
	local StartMenuframenoBG00 = CoD.StartMenu_frame_noBG.new( f1_arg0, f1_arg1, 0, 1, 0, 0, -0.06, 0.94, 0, 0 ) --[[ @ 0]]
	self:addElement( StartMenuframenoBG00 ) --[[ @ 0]]
	self.StartMenuframenoBG00 = StartMenuframenoBG00 --[[ @ 0]]
	
	local leftArrow = CoD.StartMenu_Options_SettingSliderArrow.new( f1_arg0, f1_arg1, 0, 0, 629, 689, 0, 0, 0, 60 ) --[[ @ 0]]
	leftArrow:setZRot( -90 ) --[[ @ 0]]
	leftArrow:registerEventHandler( "gain_focus", function ( element, event )
		local f3_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f3_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f3_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f3_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( leftArrow, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "MOUSE1", function ( element, menu, controller, model )
		SendButtonPressToMenuEx( menu, controller, Enum[@"LUIButton"][@"hash_1057783F8DA4AAEF"] ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_0", nil, "MOUSE1" ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	self:addElement( leftArrow ) --[[ @ 0]]
	self.leftArrow = leftArrow --[[ @ 0]]
	
	local rightArrow = CoD.StartMenu_Options_SettingSliderArrow.new( f1_arg0, f1_arg1, 0, 0, 690, 750, 0, 0, 0, 60 ) --[[ @ 0]]
	rightArrow:setZRot( 90 ) --[[ @ 0]]
	rightArrow:registerEventHandler( "gain_focus", function ( element, event )
		local f6_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f6_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f6_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f6_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( rightArrow, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "MOUSE1", function ( element, menu, controller, model )
		SendButtonPressToMenuEx( menu, controller, Enum[@"LUIButton"][@"hash_4571F08AD84807E0"] ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_0", nil, "MOUSE1" ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	self:addElement( rightArrow ) --[[ @ 0]]
	self.rightArrow = rightArrow --[[ @ 0]]
	
	local currentText = LUI.UIText.new( 0, 0, 370, 625, 0, 0, 19.5, 40.5 ) --[[ @ 0]]
	currentText:setRGB( 0.78, 0.74, 0.67 ) --[[ @ 0]]
	currentText:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	currentText:setAlignment( Enum[@"LUIAlignment"][@"hash_1FEEB12BCB0D7041"] ) --[[ @ 0]]
	currentText:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	currentText:linkToElementModel( self, "currentNum", true, function ( model )
		local f9_local0 = model:get() --[[ @ 0]]
		if f9_local0 ~= nil then
			currentText:setText( f9_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( currentText ) --[[ @ 0]]
	self.currentText = currentText --[[ @ 0]]
	
	emptyFocusable.id = "emptyFocusable" --[[ @ 0]]
	leftArrow.id = "leftArrow" --[[ @ 0]]
	rightArrow.id = "rightArrow" --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	local f1_local9 = self --[[ @ 0]]
	f1_local9 = emptyFocusable --[[ @ 0]]
	CoD.CoDAccountUtility.CodAccountAddRightStickSingleItemControl( f1_arg0, self, f1_arg1 ) --[[ @ 0]]
	return self
end
 --[[ @ 0]]
CoD.StartMenu_Options_NumOption.__resetProperties = function ( f10_arg0 )
	f10_arg0.Backing:completeAnimation() --[[ @ 0]]
	f10_arg0.Frame:completeAnimation() --[[ @ 0]]
	f10_arg0.Backing:setRGB( 0.13, 0.12, 0.12 ) --[[ @ 0]]
	f10_arg0.Backing:setAlpha( 0.5 ) --[[ @ 0]]
	f10_arg0.Frame:setAlpha( 0.04 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.StartMenu_Options_NumOption.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f11_arg0, f11_arg1 )
			f11_arg0:__resetProperties() --[[ @ 0]]
			f11_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end,
		ChildFocus = function ( f12_arg0, f12_arg1 )
			f12_arg0:__resetProperties() --[[ @ 0]]
			f12_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f12_arg0.Backing:completeAnimation() --[[ @ 0]]
			f12_arg0.Backing:setRGB( 0.78, 0.74, 0.67 ) --[[ @ 0]]
			f12_arg0.Backing:setAlpha( 0.2 ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.Backing ) --[[ @ 0]]
			f12_arg0.Frame:completeAnimation() --[[ @ 0]]
			f12_arg0.Frame:setAlpha( 0.6 ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.Frame ) --[[ @ 0]]
		end,
		GainChildFocus = function ( f13_arg0, f13_arg1 )
			f13_arg0:__resetProperties() --[[ @ 0]]
			f13_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			local f13_local0 = function ( f14_arg0 )
				f13_arg0.Backing:beginAnimation( 200 ) --[[ @ 0]]
				f13_arg0.Backing:setRGB( 0.78, 0.74, 0.67 ) --[[ @ 0]]
				f13_arg0.Backing:setAlpha( 0.2 ) --[[ @ 0]]
				f13_arg0.Backing:registerEventHandler( "interrupted_keyframe", f13_arg0.clipInterrupted ) --[[ @ 0]]
				f13_arg0.Backing:registerEventHandler( "transition_complete_keyframe", f13_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f13_arg0.Backing:completeAnimation() --[[ @ 0]]
			f13_arg0.Backing:setRGB( 0.13, 0.12, 0.12 ) --[[ @ 0]]
			f13_arg0.Backing:setAlpha( 0.5 ) --[[ @ 0]]
			f13_local0( f13_arg0.Backing ) --[[ @ 0]]
			local f13_local1 = function ( f15_arg0 )
				f13_arg0.Frame:beginAnimation( 200 ) --[[ @ 0]]
				f13_arg0.Frame:setAlpha( 0.6 ) --[[ @ 0]]
				f13_arg0.Frame:registerEventHandler( "interrupted_keyframe", f13_arg0.clipInterrupted ) --[[ @ 0]]
				f13_arg0.Frame:registerEventHandler( "transition_complete_keyframe", f13_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f13_arg0.Frame:completeAnimation() --[[ @ 0]]
			f13_arg0.Frame:setAlpha( 0.04 ) --[[ @ 0]]
			f13_local1( f13_arg0.Frame ) --[[ @ 0]]
		end,
		LoseChildFocus = function ( f16_arg0, f16_arg1 )
			f16_arg0:__resetProperties() --[[ @ 0]]
			f16_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			local f16_local0 = function ( f17_arg0 )
				f16_arg0.Backing:beginAnimation( 200 ) --[[ @ 0]]
				f16_arg0.Backing:setRGB( 0.13, 0.12, 0.12 ) --[[ @ 0]]
				f16_arg0.Backing:setAlpha( 0.5 ) --[[ @ 0]]
				f16_arg0.Backing:registerEventHandler( "interrupted_keyframe", f16_arg0.clipInterrupted ) --[[ @ 0]]
				f16_arg0.Backing:registerEventHandler( "transition_complete_keyframe", f16_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f16_arg0.Backing:completeAnimation() --[[ @ 0]]
			f16_arg0.Backing:setRGB( 0.78, 0.74, 0.67 ) --[[ @ 0]]
			f16_arg0.Backing:setAlpha( 0.2 ) --[[ @ 0]]
			f16_local0( f16_arg0.Backing ) --[[ @ 0]]
			local f16_local1 = function ( f18_arg0 )
				f16_arg0.Frame:beginAnimation( 200 ) --[[ @ 0]]
				f16_arg0.Frame:setAlpha( 0.04 ) --[[ @ 0]]
				f16_arg0.Frame:registerEventHandler( "interrupted_keyframe", f16_arg0.clipInterrupted ) --[[ @ 0]]
				f16_arg0.Frame:registerEventHandler( "transition_complete_keyframe", f16_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f16_arg0.Frame:completeAnimation() --[[ @ 0]]
			f16_arg0.Frame:setAlpha( 0.6 ) --[[ @ 0]]
			f16_local1( f16_arg0.Frame ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.StartMenu_Options_NumOption.__onClose = function ( f19_arg0 )
	f19_arg0.emptyFocusable:close() --[[ @ 0]]
	f19_arg0.Frame:close() --[[ @ 0]]
	f19_arg0.ActionText:close() --[[ @ 0]]
	f19_arg0.StartMenuframenoBG00:close() --[[ @ 0]]
	f19_arg0.leftArrow:close() --[[ @ 0]]
	f19_arg0.rightArrow:close() --[[ @ 0]]
	f19_arg0.currentText:close() --[[ @ 0]]
end
 --[[ @ 0]]
