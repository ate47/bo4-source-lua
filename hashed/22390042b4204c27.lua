-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:33
require( "ui/uieditor/widgets/backgroundframes/genericmenuframeidentity" ) --[[ @ 0]]
require( "x64:e7061dfbce6aa90" ) --[[ @ 0]]
require( "ui/uieditor/widgets/startmenu/options/startmenuoptionsbackground" ) --[[ @ 0]]

CoD.Theater_SelectFilm = InheritFrom( CoD.Menu ) --[[ @ 0]]
LUI.createMenu.Theater_SelectFilm = function ( f1_arg0, f1_arg1 )
	local self = CoD.Menu.NewForUIEditor( "Theater_SelectFilm", f1_arg0 ) --[[ @ 0]]
	local f1_local1 = self --[[ @ 0]]
	self:setClass( CoD.Theater_SelectFilm ) --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self:setOwner( f1_arg0 ) --[[ @ 0]]
	self:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	self:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	self:playSound( "menu_open", f1_arg0 ) --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	
	local BGBlur = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	BGBlur:setRGB( 0.08, 0.08, 0.08 ) --[[ @ 0]]
	BGBlur:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_E2354BE557C4C7A" ) ) --[[ @ 0]]
	BGBlur:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( BGBlur ) --[[ @ 0]]
	self.BGBlur = BGBlur --[[ @ 0]]
	
	local BGBlack = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	BGBlack:setAlpha( 0.9 ) --[[ @ 0]]
	BGBlack:setImage( RegisterImage( @"uie_fe_cp_background" ) ) --[[ @ 0]]
	self:addElement( BGBlack ) --[[ @ 0]]
	self.BGBlack = BGBlack --[[ @ 0]]
	
	local Background = CoD.StartMenuOptionsBackground.new( f1_local1, f1_arg0, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	Background:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( Background ) --[[ @ 0]]
	self.Background = Background --[[ @ 0]]
	
	local BlackBacking = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	BlackBacking:setRGB( 0, 0, 0 ) --[[ @ 0]]
	BlackBacking:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( BlackBacking ) --[[ @ 0]]
	self.BlackBacking = BlackBacking --[[ @ 0]]
	
	local DirectorTheaterSelectFile = CoD.DirectorTheaterSelectFile.new( f1_local1, f1_arg0, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	DirectorTheaterSelectFile.TabBacking.TabBackingBlur:setAlpha( 0 ) --[[ @ 0]]
	DirectorTheaterSelectFile:registerEventHandler( "menu_loaded", function ( element, event )
		local f2_local0 = nil --[[ @ 0]]
		if element.menuLoaded then
			f2_local0 = element:menuLoaded( event ) --[[ @ 0]]
		elseif element.super.menuLoaded then
			f2_local0 = element.super:menuLoaded( event ) --[[ @ 0]]
		end
		if not IsPC() then
			SizeToSafeArea( element, f1_arg0 ) --[[ @ 0]]
		end
		if not f2_local0 then
			f2_local0 = element:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f2_local0
	end ) --[[ @ 0]]
	self:addElement( DirectorTheaterSelectFile ) --[[ @ 0]]
	self.DirectorTheaterSelectFile = DirectorTheaterSelectFile --[[ @ 0]]
	
	local GenericMenuFrameIdentity = CoD.GenericMenuFrameIdentity.new( f1_local1, f1_arg0, 0.5, 0.5, -960, 960, 0, 1, 0, 0 ) --[[ @ 0]]
	GenericMenuFrameIdentity.CommonHeader.subtitle.StageTitle:setText( LocalizeToUpperString( @"hash_360E17AB37AB4874" ) ) --[[ @ 0]]
	GenericMenuFrameIdentity:subscribeToGlobalModel( f1_arg0, "LobbyRoot", "lobbyTitle", function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			GenericMenuFrameIdentity.CommonHeader.subtitle.subtitle:setText( Engine[@"hash_4F9F1239CFD921FE"]( f3_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( GenericMenuFrameIdentity ) --[[ @ 0]]
	self.GenericMenuFrameIdentity = GenericMenuFrameIdentity --[[ @ 0]]
	
	self:registerEventHandler( "menu_loaded", function ( self, event )
		local f4_local0 = nil --[[ @ 0]]
		if self.menuLoaded then
			f4_local0 = self:menuLoaded( event ) --[[ @ 0]]
		elseif self.super.menuLoaded then
			f4_local0 = self.super:menuLoaded( event ) --[[ @ 0]]
		end
		ShowHeaderIconOnly( f1_local1 ) --[[ @ 0]]
		if not f4_local0 then
			f4_local0 = self:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f4_local0
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"], nil, function ( element, menu, controller, model )
		CoD.FileshareUtility.ClearCurrentFilter() --[[ @ 0]]
		CoD.FileshareUtility.SetupFileshareForTheater( controller ) --[[ @ 0]]
		GoBack( self, controller ) --[[ @ 0]]
		ClearMenuSavedState( menu ) --[[ @ 0]]
		ResetThumbnailViewer( controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"], @"hash_370A9FDC87CD3D48", nil, nil ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	DirectorTheaterSelectFile.id = "DirectorTheaterSelectFile" --[[ @ 0]]
	GenericMenuFrameIdentity:setModel( self.buttonModel, f1_arg0 ) --[[ @ 0]]
	GenericMenuFrameIdentity.id = "GenericMenuFrameIdentity" --[[ @ 0]]
	self:processEvent( {
		name = "menu_loaded",
		controller = f1_arg0
	} ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.Theater_SelectFilm.__onClose = function ( f7_arg0 )
	f7_arg0.Background:close() --[[ @ 0]]
	f7_arg0.DirectorTheaterSelectFile:close() --[[ @ 0]]
	f7_arg0.GenericMenuFrameIdentity:close() --[[ @ 0]]
end
 --[[ @ 0]]
