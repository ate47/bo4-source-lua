-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
require( "x64:7b8f158fc5a82d1b" ) --[[ @ 0]]
require( "x64:66cebf5e7d0d5c7d" ) --[[ @ 0]]
require( "x64:1b7436bffe7fccf1" ) --[[ @ 0]]

CoD.LoadoutClassItemContainer = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.LoadoutClassItemContainer.__defaultWidth = 346 --[[ @ 0]]
CoD.LoadoutClassItemContainer.__defaultHeight = 204 --[[ @ 0]]
CoD.LoadoutClassItemContainer.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.LoadoutClassItemContainer ) --[[ @ 0]]
	self.id = "LoadoutClassItemContainer" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local WeaponVariantTriggers = CoD.WeaponVariantTriggers.new( f1_arg0, f1_arg1, 0.5, 0.5, -173.5, 172.5, 0, 0, 170, 204 ) --[[ @ 0]]
	WeaponVariantTriggers:setAlpha( 0 ) --[[ @ 0]]
	WeaponVariantTriggers:linkToElementModel( self, nil, false, function ( model )
		WeaponVariantTriggers:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( WeaponVariantTriggers, "childFocusGained", function ( element )
		if IsPC() then
			SetProperty( self, "__hasFocusOnVariantWidget", true ) --[[ @ 0]]
			UpdateAllMenuButtonPrompts( f1_arg0, f1_arg1 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( WeaponVariantTriggers ) --[[ @ 0]]
	self.WeaponVariantTriggers = WeaponVariantTriggers --[[ @ 0]]
	
	local LoadoutClassItemContainerInternal = CoD.LoadoutClassItemContainerInternal.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 1, 0, -34 ) --[[ @ 0]]
	LoadoutClassItemContainerInternal:linkToElementModel( self, nil, false, function ( model )
		LoadoutClassItemContainerInternal:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LoadoutClassItemContainerInternal:appendEventHandler( "input_source_changed", function ( f5_arg0, f5_arg1 )
		f5_arg1.menu = f5_arg1.menu or f1_arg0 --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f5_arg0, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_16CE8023188D673F"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local f1_local3 = LoadoutClassItemContainerInternal --[[ @ 0]]
	local VariantList = LoadoutClassItemContainerInternal.subscribeToModel --[[ @ 0]]
	local f1_local5 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	VariantList( f1_local3, f1_local5.LastInput, function ( f6_arg0, f6_arg1 )
		CoD.Menu.UpdateButtonShownState( f6_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_16CE8023188D673F"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	LoadoutClassItemContainerInternal:registerEventHandler( "gain_focus", function ( element, event )
		local f7_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f7_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f7_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		if IsPC() then
			SetProperty( self, "__hasFocusOnVariantWidget", false ) --[[ @ 0]]
			UpdateAllMenuButtonPrompts( f1_arg0, f1_arg1 ) --[[ @ 0]]
		else
			CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_16CE8023188D673F"] ) --[[ @ 0]]
		end
		return f7_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( LoadoutClassItemContainerInternal, f1_arg1, Enum[@"LUIButton"][@"hash_16CE8023188D673F"], "ui_copylayer", function ( element, menu, controller, model )
		if IsMouseOrKeyboard( controller ) and IsInDefaultState( self ) then
			CoD.GridAndListUtility.NavigateGridItem( self.VariantList, controller, true ) --[[ @ 0]]
			CoD.CACUtility.SetSignatureWeaponFromCAC( self.VariantList, controller, menu ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsMouseOrKeyboard( controller ) and IsInDefaultState( self ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_16CE8023188D673F"], @"hash_353D10BEF28D6E73", Enum[@"hash_3BEBDBAEEB3ECCCA"][@"hash_4B6372335C630AD3"], "ui_copylayer" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( LoadoutClassItemContainerInternal ) --[[ @ 0]]
	self.LoadoutClassItemContainerInternal = LoadoutClassItemContainerInternal --[[ @ 0]]
	
	VariantList = LUI.GridLayout.new( f1_arg0, f1_arg1, false, 0, 0, 2, 0, nil, nil, true, false, false, false ) --[[ @ 0]]
	VariantList:setLeftRight( 0, 0, 4, 182 ) --[[ @ 0]]
	VariantList:setTopBottom( 0, 0, -25, -9 ) --[[ @ 0]]
	VariantList:setAlpha( 0 ) --[[ @ 0]]
	VariantList:setWidgetType( CoD.WeaponVariantPip ) --[[ @ 0]]
	VariantList:setHorizontalCount( 10 ) --[[ @ 0]]
	VariantList:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	VariantList:linkToElementModel( self, "variantList", true, function ( model )
		local f10_local0 = model:get() --[[ @ 0]]
		if f10_local0 ~= nil then
			VariantList:setDataSource( f10_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( VariantList ) --[[ @ 0]]
	self.VariantList = VariantList --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "NoVariants",
			condition = function ( menu, element, event )
				return not CoD.GridAndListUtility.ListElementHasAtLeastNumElements( self.VariantList, 2 )
			end
		}
	} ) --[[ @ 0]]
	self:appendEventHandler( "grid_updated", function ( f12_arg0, f12_arg1 )
		f12_arg1.menu = f12_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( self, f12_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( self, f1_arg1, Enum[@"LUIButton"][@"hash_3D2F467A6C6DA1AC"], "MWHEELUP", function ( element, menu, controller, model )
		if not IsRepeatButtonPress( model ) then
			CoD.GridAndListUtility.NavigateGridItem( self.VariantList, controller, false ) --[[ @ 0]]
			CoD.CACUtility.SetSignatureWeaponFromCAC( self.VariantList, controller, menu ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsRepeatButtonPress( nil ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3D2F467A6C6DA1AC"], @"hash_0", nil, "MWHEELUP" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( self, f1_arg1, Enum[@"LUIButton"][@"hash_3820DDD869ABBFAA"], "MWHEELDOWN", function ( element, menu, controller, model )
		if not IsRepeatButtonPress( model ) then
			CoD.GridAndListUtility.NavigateGridItem( self.VariantList, controller, true ) --[[ @ 0]]
			CoD.CACUtility.SetSignatureWeaponFromCAC( self.VariantList, controller, menu ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsRepeatButtonPress( nil ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3820DDD869ABBFAA"], @"hash_0", nil, "MWHEELDOWN" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	WeaponVariantTriggers.id = "WeaponVariantTriggers" --[[ @ 0]]
	LoadoutClassItemContainerInternal.id = "LoadoutClassItemContainerInternal" --[[ @ 0]]
	VariantList.id = "VariantList" --[[ @ 0]]
	self.__defaultFocus = LoadoutClassItemContainerInternal --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PreLoadFunc then
		PreLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	f1_local3 = self --[[ @ 0]]
	f1_local3 = VariantList --[[ @ 0]]
	if IsPC() then
		SetElementProperty( f1_local3, "__loopOnSameRow", true ) --[[ @ 0]]
	end
	return self
end
 --[[ @ 0]]
CoD.LoadoutClassItemContainer.__resetProperties = function ( f17_arg0 )
	f17_arg0.WeaponVariantTriggers:completeAnimation() --[[ @ 0]]
	f17_arg0.WeaponVariantTriggers:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.LoadoutClassItemContainer.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f18_arg0, f18_arg1 )
			f18_arg0:__resetProperties() --[[ @ 0]]
			f18_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end,
		ChildFocus = function ( f19_arg0, f19_arg1 )
			f19_arg0:__resetProperties() --[[ @ 0]]
			f19_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f19_arg0.WeaponVariantTriggers:completeAnimation() --[[ @ 0]]
			f19_arg0.WeaponVariantTriggers:setAlpha( 1 ) --[[ @ 0]]
			f19_arg0.clipFinished( f19_arg0.WeaponVariantTriggers ) --[[ @ 0]]
		end,
		GainChildFocus = function ( f20_arg0, f20_arg1 )
			f20_arg0:__resetProperties() --[[ @ 0]]
			f20_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f20_local0 = function ( f21_arg0 )
				f20_arg0.WeaponVariantTriggers:beginAnimation( 200 ) --[[ @ 0]]
				f20_arg0.WeaponVariantTriggers:setAlpha( 1 ) --[[ @ 0]]
				f20_arg0.WeaponVariantTriggers:registerEventHandler( "interrupted_keyframe", f20_arg0.clipInterrupted ) --[[ @ 0]]
				f20_arg0.WeaponVariantTriggers:registerEventHandler( "transition_complete_keyframe", f20_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f20_arg0.WeaponVariantTriggers:completeAnimation() --[[ @ 0]]
			f20_arg0.WeaponVariantTriggers:setAlpha( 0 ) --[[ @ 0]]
			f20_local0( f20_arg0.WeaponVariantTriggers ) --[[ @ 0]]
		end,
		LoseChildFocus = function ( f22_arg0, f22_arg1 )
			f22_arg0:__resetProperties() --[[ @ 0]]
			f22_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f22_local0 = function ( f23_arg0 )
				f22_arg0.WeaponVariantTriggers:beginAnimation( 200 ) --[[ @ 0]]
				f22_arg0.WeaponVariantTriggers:setAlpha( 0 ) --[[ @ 0]]
				f22_arg0.WeaponVariantTriggers:registerEventHandler( "interrupted_keyframe", f22_arg0.clipInterrupted ) --[[ @ 0]]
				f22_arg0.WeaponVariantTriggers:registerEventHandler( "transition_complete_keyframe", f22_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f22_arg0.WeaponVariantTriggers:completeAnimation() --[[ @ 0]]
			f22_arg0.WeaponVariantTriggers:setAlpha( 1 ) --[[ @ 0]]
			f22_local0( f22_arg0.WeaponVariantTriggers ) --[[ @ 0]]
		end
	},
	NoVariants = {
		DefaultClip = function ( f24_arg0, f24_arg1 )
			f24_arg0:__resetProperties() --[[ @ 0]]
			f24_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.LoadoutClassItemContainer.__onClose = function ( f25_arg0 )
	f25_arg0.WeaponVariantTriggers:close() --[[ @ 0]]
	f25_arg0.LoadoutClassItemContainerInternal:close() --[[ @ 0]]
	f25_arg0.VariantList:close() --[[ @ 0]]
end
 --[[ @ 0]]
