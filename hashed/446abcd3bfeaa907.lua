-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
require( "x64:c6a9eefbd64c968" ) --[[ @ 0]]
require( "x64:2dd5ebc3a8811f73" ) --[[ @ 0]]
require( "x64:67c6bc93c499ae6e" ) --[[ @ 0]]

CoD.ZMInvObjectiveProgress = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.ZMInvObjectiveProgress.__defaultWidth = 384 --[[ @ 0]]
CoD.ZMInvObjectiveProgress.__defaultHeight = 489 --[[ @ 0]]
CoD.ZMInvObjectiveProgress.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.ZMInvObjectiveProgress ) --[[ @ 0]]
	self.id = "ZMInvObjectiveProgress" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local BG = LUI.UIImage.new( 0.5, 0.5, -192, 192, 1, 1, -384, 0 ) --[[ @ 0]]
	BG:linkToElementModel( self, "background", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			BG:setImage( RegisterImage( f2_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( BG ) --[[ @ 0]]
	self.BG = BG --[[ @ 0]]
	
	local SentinelStages = LUI.UIImage.new( 0.5, 0.5, -192, 192, 1, 1, -384, 0 ) --[[ @ 0]]
	SentinelStages:linkToElementModel( self, "Eye.stage", true, function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			SentinelStages:setImage( RegisterImage( CoD.ZMInventoryUtility.StageToFullSentinelImage( f3_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( SentinelStages ) --[[ @ 0]]
	self.SentinelStages = SentinelStages --[[ @ 0]]
	
	local TextBacking = LUI.UIImage.new( 0.5, 0.5, -192, 192, 0, 0, 3, 137 ) --[[ @ 0]]
	TextBacking:setAlpha( 0.9 ) --[[ @ 0]]
	TextBacking:setImage( RegisterImage( @"uie_zm_hud_inventory_objectivesmoke" ) ) --[[ @ 0]]
	TextBacking:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_31CC85D0A86303B0" ) ) --[[ @ 0]]
	TextBacking:setShaderVector( 0, 1, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( TextBacking ) --[[ @ 0]]
	self.TextBacking = TextBacking --[[ @ 0]]
	
	local ObjectiveProgRing = CoD.ZMInvObjectiveProgressRingContainer.new( f1_arg0, f1_arg1, 0.5, 0.5, -192, 192, 1, 1, -384, 0 ) --[[ @ 0]]
	ObjectiveProgRing:linkToElementModel( self, nil, false, function ( model )
		ObjectiveProgRing:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( ObjectiveProgRing ) --[[ @ 0]]
	self.ObjectiveProgRing = ObjectiveProgRing --[[ @ 0]]
	
	local Description = LUI.UIText.new( 0.5, 0.5, -185, 185, 0, 0, 55, 76 ) --[[ @ 0]]
	Description:setRGB( 0, 0.75, 1 ) --[[ @ 0]]
	Description:setTTF( "skorzhen" ) --[[ @ 0]]
	Description:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_90D57B1E92D39D7" ) ) --[[ @ 0]]
	Description:setShaderVector( 0, 0.7, 0, 0, 0 ) --[[ @ 0]]
	Description:setShaderVector( 1, 1, 0, 0, 0 ) --[[ @ 0]]
	Description:setShaderVector( 2, 0.05, 0, 0.2, 1 ) --[[ @ 0]]
	Description:setLetterSpacing( 1 ) --[[ @ 0]]
	Description:setAlignment( Enum[@"LUIAlignment"][@"hash_1FEEB12BCB0D7041"] ) --[[ @ 0]]
	Description:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	Description:linkToElementModel( self, "description", true, function ( model )
		local f5_local0 = model:get() --[[ @ 0]]
		if f5_local0 ~= nil then
			Description:setText( Engine[@"hash_4F9F1239CFD921FE"]( f5_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Description ) --[[ @ 0]]
	self.Description = Description --[[ @ 0]]
	
	local SentinelArtifact = CoD.ZMInvSentinelArtifact.new( f1_arg0, f1_arg1, 0.5, 0.5, -64, 64, 1, 1, -256, -128 ) --[[ @ 0]]
	SentinelArtifact:linkToElementModel( self, nil, false, function ( model )
		SentinelArtifact:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( SentinelArtifact ) --[[ @ 0]]
	self.SentinelArtifact = SentinelArtifact --[[ @ 0]]
	
	local ZMInvSentinelArtifactLarge = CoD.ZMInvSentinelArtifactLarge.new( f1_arg0, f1_arg1, 0, 0, 0, 384, 0, 0, 105, 489 ) --[[ @ 0]]
	ZMInvSentinelArtifactLarge:linkToElementModel( self, nil, false, function ( model )
		ZMInvSentinelArtifactLarge:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( ZMInvSentinelArtifactLarge ) --[[ @ 0]]
	self.ZMInvSentinelArtifactLarge = ZMInvSentinelArtifactLarge --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Vanish",
			condition = function ( menu, element, event )
				return CoD.HUDUtility.IsAnyGameType( f1_arg1, "ztutorial", "zstandard" )
			end
		},
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return not CoD.ZombieUtility.IsEasterEggsAllowed( f1_arg1 )
			end
		},
		{
			stateName = "NoDescription",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueTrue( self, f1_arg1, "isObjProgressNonLinear" )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "isObjProgressNonLinear", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "isObjProgressNonLinear"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:linkToElementModel( self, "Ring.stage", true, function ( model )
		local f12_local0 = self --[[ @ 0]]
		CoD.ZMInventoryUtility.HandleObjectiveProgressStageChange( self, model, self.ObjectiveProgRing, self.SentinelArtifact ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	local f1_local8 = self --[[ @ 0]]
	CoD.ZMInventoryUtility.SetupObjectiveProgressModels( self, f1_arg1 ) --[[ @ 0]]
	return self
end
 --[[ @ 0]]
CoD.ZMInvObjectiveProgress.__resetProperties = function ( f13_arg0 )
	f13_arg0.BG:completeAnimation() --[[ @ 0]]
	f13_arg0.SentinelArtifact:completeAnimation() --[[ @ 0]]
	f13_arg0.Description:completeAnimation() --[[ @ 0]]
	f13_arg0.TextBacking:completeAnimation() --[[ @ 0]]
	f13_arg0.SentinelStages:completeAnimation() --[[ @ 0]]
	f13_arg0.ObjectiveProgRing:completeAnimation() --[[ @ 0]]
	f13_arg0.ZMInvSentinelArtifactLarge:completeAnimation() --[[ @ 0]]
	f13_arg0.BG:setAlpha( 1 ) --[[ @ 0]]
	f13_arg0.SentinelArtifact:setAlpha( 1 ) --[[ @ 0]]
	f13_arg0.Description:setAlpha( 1 ) --[[ @ 0]]
	f13_arg0.TextBacking:setAlpha( 0.9 ) --[[ @ 0]]
	f13_arg0.SentinelStages:setAlpha( 1 ) --[[ @ 0]]
	f13_arg0.ObjectiveProgRing:setAlpha( 1 ) --[[ @ 0]]
	f13_arg0.ZMInvSentinelArtifactLarge:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ZMInvObjectiveProgress.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f14_arg0, f14_arg1 )
			f14_arg0:__resetProperties() --[[ @ 0]]
			f14_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	Vanish = {
		DefaultClip = function ( f15_arg0, f15_arg1 )
			f15_arg0:__resetProperties() --[[ @ 0]]
			f15_arg0:setupElementClipCounter( 7 ) --[[ @ 0]]
			f15_arg0.BG:completeAnimation() --[[ @ 0]]
			f15_arg0.BG:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.BG ) --[[ @ 0]]
			f15_arg0.SentinelStages:completeAnimation() --[[ @ 0]]
			f15_arg0.SentinelStages:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.SentinelStages ) --[[ @ 0]]
			f15_arg0.TextBacking:completeAnimation() --[[ @ 0]]
			f15_arg0.TextBacking:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.TextBacking ) --[[ @ 0]]
			f15_arg0.ObjectiveProgRing:completeAnimation() --[[ @ 0]]
			f15_arg0.ObjectiveProgRing:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.ObjectiveProgRing ) --[[ @ 0]]
			f15_arg0.Description:completeAnimation() --[[ @ 0]]
			f15_arg0.Description:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.Description ) --[[ @ 0]]
			f15_arg0.SentinelArtifact:completeAnimation() --[[ @ 0]]
			f15_arg0.SentinelArtifact:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.SentinelArtifact ) --[[ @ 0]]
			f15_arg0.ZMInvSentinelArtifactLarge:completeAnimation() --[[ @ 0]]
			f15_arg0.ZMInvSentinelArtifactLarge:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.ZMInvSentinelArtifactLarge ) --[[ @ 0]]
		end
	},
	Hidden = {
		DefaultClip = function ( f16_arg0, f16_arg1 )
			f16_arg0:__resetProperties() --[[ @ 0]]
			f16_arg0:setupElementClipCounter( 6 ) --[[ @ 0]]
			f16_arg0.BG:completeAnimation() --[[ @ 0]]
			f16_arg0.BG:setAlpha( 0 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.BG ) --[[ @ 0]]
			f16_arg0.SentinelStages:completeAnimation() --[[ @ 0]]
			f16_arg0.SentinelStages:setAlpha( 0 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.SentinelStages ) --[[ @ 0]]
			f16_arg0.TextBacking:completeAnimation() --[[ @ 0]]
			f16_arg0.TextBacking:setAlpha( 0 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.TextBacking ) --[[ @ 0]]
			f16_arg0.ObjectiveProgRing:completeAnimation() --[[ @ 0]]
			f16_arg0.ObjectiveProgRing:setAlpha( 0 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.ObjectiveProgRing ) --[[ @ 0]]
			f16_arg0.Description:completeAnimation() --[[ @ 0]]
			f16_arg0.Description:setAlpha( 0 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.Description ) --[[ @ 0]]
			f16_arg0.SentinelArtifact:completeAnimation() --[[ @ 0]]
			f16_arg0.SentinelArtifact:setAlpha( 0 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.SentinelArtifact ) --[[ @ 0]]
		end
	},
	NoDescription = {
		DefaultClip = function ( f17_arg0, f17_arg1 )
			f17_arg0:__resetProperties() --[[ @ 0]]
			f17_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f17_arg0.TextBacking:completeAnimation() --[[ @ 0]]
			f17_arg0.TextBacking:setAlpha( 0 ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.TextBacking ) --[[ @ 0]]
			f17_arg0.Description:completeAnimation() --[[ @ 0]]
			f17_arg0.Description:setAlpha( 0 ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.Description ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.ZMInvObjectiveProgress.__onClose = function ( f18_arg0 )
	f18_arg0.BG:close() --[[ @ 0]]
	f18_arg0.SentinelStages:close() --[[ @ 0]]
	f18_arg0.ObjectiveProgRing:close() --[[ @ 0]]
	f18_arg0.Description:close() --[[ @ 0]]
	f18_arg0.SentinelArtifact:close() --[[ @ 0]]
	f18_arg0.ZMInvSentinelArtifactLarge:close() --[[ @ 0]]
end
 --[[ @ 0]]
