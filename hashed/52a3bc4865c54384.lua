-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
require( "x64:25587cd3245f1dc1" ) --[[ @ 0]]
require( "x64:4b236d88d3647924" ) --[[ @ 0]]
require( "x64:6def6a654efe7944" ) --[[ @ 0]]
require( "x64:1b3cf3c514fa720" ) --[[ @ 0]]
require( "x64:2d4e0d48242633e2" ) --[[ @ 0]]
require( "x64:296b6f6ba428edcc" ) --[[ @ 0]]
require( "ui/uieditor/widgets/common/commonheader" ) --[[ @ 0]]
require( "x64:26385641db19d152" ) --[[ @ 0]]
require( "x64:6131b51676141877" ) --[[ @ 0]]
require( "x64:6260c7a8e3737127" ) --[[ @ 0]]
require( "ui/uieditor/widgets/director/directorpregamebuttonoption" ) --[[ @ 0]]
require( "x64:1ea788cab9c8c2f2" ) --[[ @ 0]]
require( "ui/uieditor/widgets/emptyfocusable" ) --[[ @ 0]]

CoD.directorArenaPregame = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.directorArenaPregame.__defaultWidth = 1920 --[[ @ 0]]
CoD.directorArenaPregame.__defaultHeight = 1080 --[[ @ 0]]
CoD.directorArenaPregame.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	CoD.DirectorUtility.InitPublicLobbyModels( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	CoD.PlayerRoleUtility.UpdatePositionDraftModels( f1_arg1 ) --[[ @ 0]]
	CoD.DirectorUtility.InitQuickPlayModel( f1_arg1 ) --[[ @ 0]]
	DataSourceHelperGetModel( f1_arg1, "Arena" ) --[[ @ 0]]
	self:setClass( CoD.directorArenaPregame ) --[[ @ 0]]
	self.id = "directorArenaPregame" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local Header = CoD.DirectorScreenHeader.new( f1_arg0, f1_arg1, 0.5, 0.5, -870, -227, 0, 0, 301, 401 ) --[[ @ 0]]
	Header:setAlpha( 0 ) --[[ @ 0]]
	Header:setZoom( 75 ) --[[ @ 0]]
	Header.Header:setText( LocalizeToUpperString( @"hash_156CB4013028D74E" ) ) --[[ @ 0]]
	self:addElement( Header ) --[[ @ 0]]
	self.Header = Header --[[ @ 0]]
	
	local pckeyboardNavigationRedirector2 = nil --[[ @ 0]]
	
	pckeyboardNavigationRedirector2 = CoD.emptyFocusable.new( f1_arg0, f1_arg1, 0.5, 0.8, 384, 384, 0.27, 0.32, 0, 0 ) --[[ @ 0]]
	self:addElement( pckeyboardNavigationRedirector2 ) --[[ @ 0]]
	self.pckeyboardNavigationRedirector2 = pckeyboardNavigationRedirector2 --[[ @ 0]]
	
	local pckeyboardNavigationRedirector = nil --[[ @ 0]]
	
	pckeyboardNavigationRedirector = CoD.emptyFocusable.new( f1_arg0, f1_arg1, 0.5, 0.8, 384, 384, 0.77, 0.82, 0, 0 ) --[[ @ 0]]
	self:addElement( pckeyboardNavigationRedirector ) --[[ @ 0]]
	self.pckeyboardNavigationRedirector = pckeyboardNavigationRedirector --[[ @ 0]]
	
	local FindMatchButton = CoD.DirectorPreGameButtonOption.new( f1_arg0, f1_arg1, 0.5, 0.5, 514, 896, 1, 1, -178, -108 ) --[[ @ 0]]
	FindMatchButton:mergeStateConditions( {
		{
			stateName = "ArenaSuspended",
			condition = function ( menu, element, event )
				return CoD.ArenaLeaguePlayUtility.LeaverLockoutActive()
			end
		},
		{
			stateName = "Unselectable",
			condition = function ( menu, element, event )
				return not IsPartyLeader( f1_arg1 )
			end
		},
		{
			stateName = "Visible",
			condition = function ( menu, element, event )
				return IsPartyLeader( f1_arg1 )
			end
		}
	} ) --[[ @ 0]]
	local CompetitiveOverviewRankBanner = FindMatchButton --[[ @ 0]]
	local DirectorLobbyPoseMembers = FindMatchButton.subscribeToModel --[[ @ 0]]
	local LeagueEventEndDelayMessageTitle = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	DirectorLobbyPoseMembers( CompetitiveOverviewRankBanner, LeagueEventEndDelayMessageTitle["Arena.lockoutTimeRemaining"], function ( f5_arg0 )
		f1_arg0:updateElementState( FindMatchButton, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f5_arg0:get(),
			modelName = "Arena.lockoutTimeRemaining"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	CompetitiveOverviewRankBanner = FindMatchButton --[[ @ 0]]
	DirectorLobbyPoseMembers = FindMatchButton.subscribeToModel --[[ @ 0]]
	LeagueEventEndDelayMessageTitle = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	DirectorLobbyPoseMembers( CompetitiveOverviewRankBanner, LeagueEventEndDelayMessageTitle["lobbyRoot.lobbyNav"], function ( f6_arg0 )
		f1_arg0:updateElementState( FindMatchButton, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f6_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	CompetitiveOverviewRankBanner = FindMatchButton --[[ @ 0]]
	DirectorLobbyPoseMembers = FindMatchButton.subscribeToModel --[[ @ 0]]
	LeagueEventEndDelayMessageTitle = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	DirectorLobbyPoseMembers( CompetitiveOverviewRankBanner, LeagueEventEndDelayMessageTitle["lobbyRoot.privateClient.isHost"], function ( f7_arg0 )
		f1_arg0:updateElementState( FindMatchButton, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f7_arg0:get(),
			modelName = "lobbyRoot.privateClient.isHost"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	CompetitiveOverviewRankBanner = FindMatchButton --[[ @ 0]]
	DirectorLobbyPoseMembers = FindMatchButton.subscribeToModel --[[ @ 0]]
	LeagueEventEndDelayMessageTitle = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	DirectorLobbyPoseMembers( CompetitiveOverviewRankBanner, LeagueEventEndDelayMessageTitle["lobbyRoot.gameClient.isHost"], function ( f8_arg0 )
		f1_arg0:updateElementState( FindMatchButton, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f8_arg0:get(),
			modelName = "lobbyRoot.gameClient.isHost"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	FindMatchButton:appendEventHandler( "on_session_start", function ( f9_arg0, f9_arg1 )
		f9_arg1.menu = f9_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( FindMatchButton, f9_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	FindMatchButton:appendEventHandler( "on_session_end", function ( f10_arg0, f10_arg1 )
		f10_arg1.menu = f10_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( FindMatchButton, f10_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	CompetitiveOverviewRankBanner = FindMatchButton --[[ @ 0]]
	DirectorLobbyPoseMembers = FindMatchButton.subscribeToModel --[[ @ 0]]
	LeagueEventEndDelayMessageTitle = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	DirectorLobbyPoseMembers( CompetitiveOverviewRankBanner, LeagueEventEndDelayMessageTitle["lobbyRoot.gameClient.update"], function ( f11_arg0 )
		f1_arg0:updateElementState( FindMatchButton, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f11_arg0:get(),
			modelName = "lobbyRoot.gameClient.update"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	CompetitiveOverviewRankBanner = FindMatchButton --[[ @ 0]]
	DirectorLobbyPoseMembers = FindMatchButton.subscribeToModel --[[ @ 0]]
	LeagueEventEndDelayMessageTitle = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	DirectorLobbyPoseMembers( CompetitiveOverviewRankBanner, LeagueEventEndDelayMessageTitle["lobbyRoot.privateClient.update"], function ( f12_arg0 )
		f1_arg0:updateElementState( FindMatchButton, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f12_arg0:get(),
			modelName = "lobbyRoot.privateClient.update"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	CompetitiveOverviewRankBanner = FindMatchButton --[[ @ 0]]
	DirectorLobbyPoseMembers = FindMatchButton.subscribeToModel --[[ @ 0]]
	LeagueEventEndDelayMessageTitle = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	DirectorLobbyPoseMembers( CompetitiveOverviewRankBanner, LeagueEventEndDelayMessageTitle.offlineScreenState, function ( f13_arg0 )
		f1_arg0:updateElementState( FindMatchButton, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f13_arg0:get(),
			modelName = "offlineScreenState"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	FindMatchButton.DirectorSelectButtonMiniInternal.MiddleText:setText( LocalizeToUpperString( @"hash_7A14B986BB3C650A" ) ) --[[ @ 0]]
	FindMatchButton.DirectorSelectButtonMiniInternal.MiddleTextFocus:setText( LocalizeToUpperString( @"hash_7A14B986BB3C650A" ) ) --[[ @ 0]]
	CompetitiveOverviewRankBanner = FindMatchButton --[[ @ 0]]
	DirectorLobbyPoseMembers = FindMatchButton.subscribeToModel --[[ @ 0]]
	LeagueEventEndDelayMessageTitle = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	DirectorLobbyPoseMembers( CompetitiveOverviewRankBanner, LeagueEventEndDelayMessageTitle["lobbyRoot.lobbyNav"], function ( f14_arg0, f14_arg1 )
		CoD.Menu.UpdateButtonShownState( f14_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	CompetitiveOverviewRankBanner = FindMatchButton --[[ @ 0]]
	DirectorLobbyPoseMembers = FindMatchButton.subscribeToModel --[[ @ 0]]
	LeagueEventEndDelayMessageTitle = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	DirectorLobbyPoseMembers( CompetitiveOverviewRankBanner, LeagueEventEndDelayMessageTitle["lobbyRoot.privateClient.isHost"], function ( f15_arg0, f15_arg1 )
		CoD.Menu.UpdateButtonShownState( f15_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	CompetitiveOverviewRankBanner = FindMatchButton --[[ @ 0]]
	DirectorLobbyPoseMembers = FindMatchButton.subscribeToModel --[[ @ 0]]
	LeagueEventEndDelayMessageTitle = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	DirectorLobbyPoseMembers( CompetitiveOverviewRankBanner, LeagueEventEndDelayMessageTitle["lobbyRoot.gameClient.isHost"], function ( f16_arg0, f16_arg1 )
		CoD.Menu.UpdateButtonShownState( f16_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	CompetitiveOverviewRankBanner = FindMatchButton --[[ @ 0]]
	DirectorLobbyPoseMembers = FindMatchButton.subscribeToModel --[[ @ 0]]
	LeagueEventEndDelayMessageTitle = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	DirectorLobbyPoseMembers( CompetitiveOverviewRankBanner, LeagueEventEndDelayMessageTitle["lobbyRoot.playlistId"], function ( f17_arg0, f17_arg1 )
		CoD.Menu.UpdateButtonShownState( f17_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	CompetitiveOverviewRankBanner = FindMatchButton --[[ @ 0]]
	DirectorLobbyPoseMembers = FindMatchButton.subscribeToModel --[[ @ 0]]
	LeagueEventEndDelayMessageTitle = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	DirectorLobbyPoseMembers( CompetitiveOverviewRankBanner, LeagueEventEndDelayMessageTitle["lobbyRoot.lobbyList.playerCount"], function ( f18_arg0, f18_arg1 )
		CoD.Menu.UpdateButtonShownState( f18_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	FindMatchButton:registerEventHandler( "gain_focus", function ( element, event )
		local f19_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f19_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f19_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f19_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( FindMatchButton, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		if IsPartyLeader( controller ) and not CoD.ArenaLeaguePlayUtility.ForceCheckLeaverLockoutActive() and not CoD.DirectorUtility.IsNumClientsExceeded( controller ) then
			CoD.DirectorUtility.NavigateToArenaMatchmakingLobby( self, menu, controller, element ) --[[ @ 0]]
			PlaySoundAlias( "uin_press_generic" ) --[[ @ 0]]
			return true
		elseif IsPartyLeader( controller ) and CoD.DirectorUtility.IsNumClientsExceeded( controller ) then
			PlaySoundAlias( "uin_toggle_generic" ) --[[ @ 0]]
			CoD.DirectorUtility.OpenTooManyClientsPopup( self, controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsPartyLeader( controller ) and not CoD.ArenaLeaguePlayUtility.ForceCheckLeaverLockoutActive() and not CoD.DirectorUtility.IsNumClientsExceeded( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, "ui_confirm" ) --[[ @ 0]]
			return true
		elseif IsPartyLeader( controller ) and CoD.DirectorUtility.IsNumClientsExceeded( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, "ui_confirm" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( FindMatchButton ) --[[ @ 0]]
	self.FindMatchButton = FindMatchButton --[[ @ 0]]
	
	DirectorLobbyPoseMembers = CoD.DirectorLobbyPoseMembers.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	self:addElement( DirectorLobbyPoseMembers ) --[[ @ 0]]
	self.DirectorLobbyPoseMembers = DirectorLobbyPoseMembers --[[ @ 0]]
	
	CompetitiveOverviewRankBanner = CoD.CompetitiveOverviewRankBanner.new( f1_arg0, f1_arg1, 0.5, 0.5, -881, -681, 0, 0, -111.5, 388.5 ) --[[ @ 0]]
	CompetitiveOverviewRankBanner:mergeStateConditions( {
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return not CoD.ArenaUtility.IsArenaLeaguePlay( true )
			end
		},
		{
			stateName = "HiddenCopy",
			condition = function ( menu, element, event )
				local f23_local0 --[[ @ 0]]
				if not CoD.ArenaUtility.IsArenaLeaguePlay( false ) then
					f23_local0 = not CoD.ArenaLeaguePlayUtility.HasPoints( self, f1_arg1 ) --[[ @ 0]]
				else
					f23_local0 = false --[[ @ 0]]
				end
				return f23_local0
			end
		},
		{
			stateName = "Lobby",
			condition = function ( menu, element, event )
				return AlwaysTrue()
			end
		}
	} ) --[[ @ 0]]
	local CustomGamesButton = CompetitiveOverviewRankBanner --[[ @ 0]]
	LeagueEventEndDelayMessageTitle = CompetitiveOverviewRankBanner.subscribeToModel --[[ @ 0]]
	local CommonHeader = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	LeagueEventEndDelayMessageTitle( CustomGamesButton, CommonHeader["lobbyRoot.lobbyNav"], function ( f25_arg0 )
		f1_arg0:updateElementState( CompetitiveOverviewRankBanner, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f25_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	CompetitiveOverviewRankBanner:subscribeToGlobalModel( f1_arg1, "LobbyRoot", "lobbyNav", function ( model )
		UpdateSelfElementState( f1_arg0, CompetitiveOverviewRankBanner, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( CompetitiveOverviewRankBanner ) --[[ @ 0]]
	self.CompetitiveOverviewRankBanner = CompetitiveOverviewRankBanner --[[ @ 0]]
	
	LeagueEventEndDelayMessageTitle = CoD.LeaguePlayEventEndDelayLobbyMessage.new( f1_arg0, f1_arg1, 0.5, 0.5, -691, -179, 0, 0, 55.5, 205.5 ) --[[ @ 0]]
	self:addElement( LeagueEventEndDelayMessageTitle ) --[[ @ 0]]
	self.LeagueEventEndDelayMessageTitle = LeagueEventEndDelayMessageTitle --[[ @ 0]]
	
	CustomGamesButton = CoD.DirectorPreGameButtonOption.new( f1_arg0, f1_arg1, 0.5, 0.5, 514, 896, 1, 1, -522, -476 ) --[[ @ 0]]
	CustomGamesButton:mergeStateConditions( {
		{
			stateName = "Visible",
			condition = function ( menu, element, event )
				local f27_local0 = IsLobbyHostOfCurrentMenu() --[[ @ 0]]
				if f27_local0 then
					f27_local0 = IsArenaMode() --[[ @ 0]]
					if f27_local0 then
						f27_local0 = CoD.DirectorUtility.ShowDirectorArena( f1_arg1 ) --[[ @ 0]]
					end
				end
				return f27_local0
			end
		}
	} ) --[[ @ 0]]
	CustomGamesButton:appendEventHandler( "on_session_start", function ( f28_arg0, f28_arg1 )
		f28_arg1.menu = f28_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( CustomGamesButton, f28_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	CustomGamesButton:appendEventHandler( "on_session_end", function ( f29_arg0, f29_arg1 )
		f29_arg1.menu = f29_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( CustomGamesButton, f29_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local DirectorLeaderActivitySelect = CustomGamesButton --[[ @ 0]]
	CommonHeader = CustomGamesButton.subscribeToModel --[[ @ 0]]
	local ArenaEventButtons = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	CommonHeader( DirectorLeaderActivitySelect, ArenaEventButtons["lobbyRoot.lobbyNav"], function ( f30_arg0 )
		f1_arg0:updateElementState( CustomGamesButton, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f30_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	DirectorLeaderActivitySelect = CustomGamesButton --[[ @ 0]]
	CommonHeader = CustomGamesButton.subscribeToModel --[[ @ 0]]
	ArenaEventButtons = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	CommonHeader( DirectorLeaderActivitySelect, ArenaEventButtons["lobbyRoot.gameClient.update"], function ( f31_arg0 )
		f1_arg0:updateElementState( CustomGamesButton, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f31_arg0:get(),
			modelName = "lobbyRoot.gameClient.update"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	DirectorLeaderActivitySelect = CustomGamesButton --[[ @ 0]]
	CommonHeader = CustomGamesButton.subscribeToModel --[[ @ 0]]
	ArenaEventButtons = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	CommonHeader( DirectorLeaderActivitySelect, ArenaEventButtons["lobbyRoot.privateClient.update"], function ( f32_arg0 )
		f1_arg0:updateElementState( CustomGamesButton, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f32_arg0:get(),
			modelName = "lobbyRoot.privateClient.update"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	DirectorLeaderActivitySelect = CustomGamesButton --[[ @ 0]]
	CommonHeader = CustomGamesButton.subscribeToModel --[[ @ 0]]
	ArenaEventButtons = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	CommonHeader( DirectorLeaderActivitySelect, ArenaEventButtons.offlineScreenState, function ( f33_arg0 )
		f1_arg0:updateElementState( CustomGamesButton, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f33_arg0:get(),
			modelName = "offlineScreenState"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	CustomGamesButton.DirectorSelectButtonMiniInternal.MiddleText.__MiddleText_StringReference = function ()
		CustomGamesButton.DirectorSelectButtonMiniInternal.MiddleText:setText( LocalizeToUpperString( CoD.DirectorUtility.GetCustomGamesName( @"hash_685D9C7D7DDC8EE0" ) ) ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	CustomGamesButton.DirectorSelectButtonMiniInternal.MiddleText.__MiddleText_StringReference() --[[ @ 0]]
	CustomGamesButton.DirectorSelectButtonMiniInternal.MiddleText:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	CustomGamesButton.DirectorSelectButtonMiniInternal.MiddleTextFocus.__MiddleTextFocus_String = function ()
		CustomGamesButton.DirectorSelectButtonMiniInternal.MiddleTextFocus:setText( LocalizeToUpperString( CoD.DirectorUtility.GetCustomGamesName( @"hash_685D9C7D7DDC8EE0" ) ) ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	CustomGamesButton.DirectorSelectButtonMiniInternal.MiddleTextFocus.__MiddleTextFocus_String() --[[ @ 0]]
	CustomGamesButton.DirectorSelectButtonMiniInternal.MiddleTextFocus:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	CustomGamesButton:registerEventHandler( "gain_focus", function ( element, event )
		local f36_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f36_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f36_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f36_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( CustomGamesButton, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		if IsPC() then
			PlaySoundAlias( "uin_press_generic" ) --[[ @ 0]]
			OpenCustomGamesLobby( menu, controller ) --[[ @ 0]]
			return true
		else
			PlaySoundAlias( "uin_press_generic" ) --[[ @ 0]]
			OpenSystemOverlay( self, menu, controller, "CustomGamesNotification" ) --[[ @ 0]]
			SetLoseFocusToSelf( self, controller ) --[[ @ 0]]
			return true
		end
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, "ui_confirm" ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	self:addElement( CustomGamesButton ) --[[ @ 0]]
	self.CustomGamesButton = CustomGamesButton --[[ @ 0]]
	
	CommonHeader = CoD.CommonHeader.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 0, 0, 67 ) --[[ @ 0]]
	CommonHeader.subtitle.subtitle:setAlpha( 0 ) --[[ @ 0]]
	CommonHeader.subtitle.subtitle:setText( "" ) --[[ @ 0]]
	CommonHeader:subscribeToGlobalModel( f1_arg1, "Arena", "arenaTitle", function ( model )
		local f39_local0 = model:get() --[[ @ 0]]
		if f39_local0 ~= nil then
			CommonHeader.subtitle.StageTitle:setText( LocalizeToUpperString( f39_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( CommonHeader ) --[[ @ 0]]
	self.CommonHeader = CommonHeader --[[ @ 0]]
	
	DirectorLeaderActivitySelect = CoD.DirectorLeaderActivitySelect.new( f1_arg0, f1_arg1, 0.5, 0.5, 625, 930, 0, 0, 8, 57 ) --[[ @ 0]]
	DirectorLeaderActivitySelect:mergeStateConditions( {
		{
			stateName = "Invisible",
			condition = function ( menu, element, event )
				return IsLobbyHostOfCurrentMenu()
			end
		}
	} ) --[[ @ 0]]
	DirectorLeaderActivitySelect:appendEventHandler( "on_session_start", function ( f41_arg0, f41_arg1 )
		f41_arg1.menu = f41_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( DirectorLeaderActivitySelect, f41_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	DirectorLeaderActivitySelect:appendEventHandler( "on_session_end", function ( f42_arg0, f42_arg1 )
		f42_arg1.menu = f42_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( DirectorLeaderActivitySelect, f42_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local ArenaEventProgressButton = DirectorLeaderActivitySelect --[[ @ 0]]
	ArenaEventButtons = DirectorLeaderActivitySelect.subscribeToModel --[[ @ 0]]
	local ArenaTeamDisplay = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	ArenaEventButtons( ArenaEventProgressButton, ArenaTeamDisplay["lobbyRoot.lobbyNav"], function ( f43_arg0 )
		f1_arg0:updateElementState( DirectorLeaderActivitySelect, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f43_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ArenaEventProgressButton = DirectorLeaderActivitySelect --[[ @ 0]]
	ArenaEventButtons = DirectorLeaderActivitySelect.subscribeToModel --[[ @ 0]]
	ArenaTeamDisplay = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	ArenaEventButtons( ArenaEventProgressButton, ArenaTeamDisplay["lobbyRoot.gameClient.update"], function ( f44_arg0 )
		f1_arg0:updateElementState( DirectorLeaderActivitySelect, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f44_arg0:get(),
			modelName = "lobbyRoot.gameClient.update"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ArenaEventProgressButton = DirectorLeaderActivitySelect --[[ @ 0]]
	ArenaEventButtons = DirectorLeaderActivitySelect.subscribeToModel --[[ @ 0]]
	ArenaTeamDisplay = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	ArenaEventButtons( ArenaEventProgressButton, ArenaTeamDisplay["lobbyRoot.privateClient.update"], function ( f45_arg0 )
		f1_arg0:updateElementState( DirectorLeaderActivitySelect, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f45_arg0:get(),
			modelName = "lobbyRoot.privateClient.update"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	DirectorLeaderActivitySelect:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( DirectorLeaderActivitySelect ) --[[ @ 0]]
	self.DirectorLeaderActivitySelect = DirectorLeaderActivitySelect --[[ @ 0]]
	
	ArenaEventButtons = CoD.ArenaEventButtons.new( f1_arg0, f1_arg1, 0.5, 0.5, 250, 450, 1, 1, -178, -108 ) --[[ @ 0]]
	ArenaEventButtons:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( ArenaEventButtons ) --[[ @ 0]]
	self.ArenaEventButtons = ArenaEventButtons --[[ @ 0]]
	
	ArenaEventProgressButton = CoD.ArenaEventProgressButton.new( f1_arg0, f1_arg1, 0.5, 0.5, 514, 896, 1, 1, -279, -209 ) --[[ @ 0]]
	self:addElement( ArenaEventProgressButton ) --[[ @ 0]]
	self.ArenaEventProgressButton = ArenaEventProgressButton --[[ @ 0]]
	
	ArenaTeamDisplay = CoD.ArenaTeamDisplay.new( f1_arg0, f1_arg1, 0, 0, 1170, 1420, 0, 0, 218.5, 518.5 ) --[[ @ 0]]
	self:addElement( ArenaTeamDisplay ) --[[ @ 0]]
	self.ArenaTeamDisplay = ArenaTeamDisplay --[[ @ 0]]
	
	local ArenaDailyBonus = CoD.ArenaDailyBonus.new( f1_arg0, f1_arg1, 0.5, 0.5, 250, 450, 1, 1, -258, -188 ) --[[ @ 0]]
	ArenaDailyBonus:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( ArenaDailyBonus ) --[[ @ 0]]
	self.ArenaDailyBonus = ArenaDailyBonus --[[ @ 0]]
	
	local ArenaMapAndGameType = CoD.ArenaMapAndGameType.new( f1_arg0, f1_arg1, 0.5, 0.5, 514, 896, 1, 1, -443, -293 ) --[[ @ 0]]
	self:addElement( ArenaMapAndGameType ) --[[ @ 0]]
	self.ArenaMapAndGameType = ArenaMapAndGameType --[[ @ 0]]
	
	local f1_local16 = CustomGamesButton --[[ @ 0]]
	local f1_local17 = CustomGamesButton.subscribeToModel --[[ @ 0]]
	local f1_local18 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local17( f1_local16, f1_local18["lobbyRoot.lobbyNav"], CustomGamesButton.DirectorSelectButtonMiniInternal.MiddleText.__MiddleText_StringReference ) --[[ @ 0]]
	f1_local16 = CustomGamesButton --[[ @ 0]]
	f1_local17 = CustomGamesButton.subscribeToModel --[[ @ 0]]
	f1_local18 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local17( f1_local16, f1_local18["lobbyRoot.lobbyNav"], CustomGamesButton.DirectorSelectButtonMiniInternal.MiddleTextFocus.__MiddleTextFocus_String ) --[[ @ 0]]
	self:mergeStateConditions( {
		{
			stateName = "IsPC",
			condition = function ( menu, element, event )
				return IsPC()
			end
		}
	} ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( self, "setState", function ( element, controller, f47_arg2, f47_arg3, f47_arg4 )
		ForceCheckDefaultPCFocus( element, f1_arg0, controller ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:subscribeToGlobalModel( f1_arg1, "LobbyRoot", "gameClientDataUpdate", function ( model )
		local f48_local0 = self --[[ @ 0]]
		if CoD.DirectorUtility.ShowDirectorArena( f1_arg1 ) then
			CoD.PlayerRoleUtility.UpdatePositionDraftModels( f1_arg1 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:subscribeToGlobalModel( f1_arg1, "CharacterSelection", "clientUpdated", function ( model )
		local f49_local0 = self --[[ @ 0]]
		if CoD.DirectorUtility.ShowDirectorArena( f1_arg1 ) then
			CoD.PlayerRoleUtility.UpdatePositionDraftModels( f1_arg1 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:subscribeToGlobalModel( f1_arg1, "LobbyRoot", "lobbyNav", function ( model )
		local f50_local0 = self --[[ @ 0]]
		if IsLobbyHost() and CoD.DirectorUtility.IsLobbyMenu( f1_arg1, LuaEnum.UI.DIRECTOR_ONLINE_MP_ARENA_PREGAME ) then
			CoD.PlayerRoleUtility.UpdatePositionDraftModels( f1_arg1 ) --[[ @ 0]]
			UpdateElementState( self, "ArenaTeamDisplay", f1_arg1 ) --[[ @ 0]]
			CoD.BaseUtility.SetDefaultFocusToElement( self, self.FindMatchButton ) --[[ @ 0]]
		elseif not IsLobbyHost() and CoD.DirectorUtility.ShowDirectorArena( f1_arg1 ) then
			CoD.PlayerRoleUtility.UpdatePositionDraftModels( f1_arg1 ) --[[ @ 0]]
			UpdateElementState( self, "ArenaTeamDisplay", f1_arg1 ) --[[ @ 0]]
			CoD.BaseUtility.SetDefaultFocusToElement( self, self.HomeOrPlayList ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:subscribeToGlobalModel( f1_arg1, "GlobalModel", "LobbyRoot.gameClient.isHost", function ( model )
		local f51_local0 = self --[[ @ 0]]
		UpdateElementState( self, "FindMatchButton", f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:subscribeToGlobalModel( f1_arg1, "GlobalModel", "LobbyRoot.privateClient.isHost", function ( model )
		local f52_local0 = self --[[ @ 0]]
		UpdateElementState( self, "FindMatchButton", f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:subscribeToGlobalModel( f1_arg1, "GlobalModel", "Arena.triggerEndOfEvent", function ( model )
		local f53_local0 = self --[[ @ 0]]
		if CoD.ModelUtility.IsGlobalDataSourceModelValueTrue( f1_arg1, "Arena", "triggerEndOfEvent" ) and CoD.DirectorUtility.IsLobbyMenu( f1_arg1, LuaEnum.UI.DIRECTOR_ONLINE_MP_ARENA_PREGAME ) then
			OpenSystemOverlay( self, f1_arg0, f1_arg1, "ArenaEventDone", nil ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:subscribeToGlobalModel( f1_arg1, "GlobalModel", "Arena.arenaLeaguePlayShowEndRankUp", function ( model )
		local f54_local0 = self --[[ @ 0]]
		if CoD.ModelUtility.IsGlobalDataSourceModelValueTrue( f1_arg1, "Arena", "arenaLeaguePlayShowEndRankUp" ) and not CoD.ModelUtility.IsGlobalDataSourceModelValueTrue( f1_arg1, "Arena", "triggerEndOfEvent" ) and CoD.DirectorUtility.IsLobbyMenu( f1_arg1, LuaEnum.UI.DIRECTOR_ONLINE_MP_ARENA_PREGAME ) then
			CoD.ArenaLeaguePlayUtility.OpenLeaguePlayEndRankUp( self, f1_arg1 ) --[[ @ 0]]
			SetGlobalModelValueFalse( "Arena.arenaLeaguePlayShowDelayedResultsPopup" ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:subscribeToGlobalModel( f1_arg1, "GlobalModel", "Arena.arenaLeaguePlayShowDelayedResultsPopup", function ( model )
		local f55_local0 = self --[[ @ 0]]
		if CoD.ModelUtility.IsGlobalDataSourceModelValueTrue( f1_arg1, "Arena", "arenaLeaguePlayShowDelayedResultsPopup" ) and not CoD.ModelUtility.IsGlobalDataSourceModelValueTrue( f1_arg1, "Arena", "arenaLeaguePlayShowEndRankUp" ) and not CoD.ModelUtility.IsGlobalDataSourceModelValueTrue( f1_arg1, "Arena", "triggerEndOfEvent" ) and CoD.DirectorUtility.IsLobbyMenu( f1_arg1, LuaEnum.UI.DIRECTOR_ONLINE_MP_ARENA_PREGAME ) then
			OpenSystemOverlay( self, f1_arg0, f1_arg1, "Arena_EventEndResultsDelay", nil ) --[[ @ 0]]
			SetGlobalModelValueFalse( "Arena.arenaLeaguePlayShowDelayedResultsPopup" ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	if CoD.isPC then
		pckeyboardNavigationRedirector2.id = "pckeyboardNavigationRedirector2" --[[ @ 0]]
	end
	if CoD.isPC then
		pckeyboardNavigationRedirector.id = "pckeyboardNavigationRedirector" --[[ @ 0]]
	end
	FindMatchButton.id = "FindMatchButton" --[[ @ 0]]
	CustomGamesButton.id = "CustomGamesButton" --[[ @ 0]]
	ArenaEventButtons.id = "ArenaEventButtons" --[[ @ 0]]
	ArenaEventProgressButton.id = "ArenaEventProgressButton" --[[ @ 0]]
	ArenaMapAndGameType.id = "ArenaMapAndGameType" --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	f1_local17 = self --[[ @ 0]]
	CoD.ArenaUtility.PostLoad( f1_arg1, self ) --[[ @ 0]]
	f1_local17 = pckeyboardNavigationRedirector2 --[[ @ 0]]
	if IsPC() then
		CoD.PCUtility.SetAsRedirectItem( f1_local17 ) --[[ @ 0]]
		CoD.BaseUtility.SetCustomNavDirection( CoD.BaseUtility.NavigationDirection.down, f1_local17, self.Loadouts ) --[[ @ 0]]
	end
	f1_local17 = pckeyboardNavigationRedirector --[[ @ 0]]
	if IsPC() then
		CoD.PCUtility.SetAsRedirectItem( f1_local17 ) --[[ @ 0]]
		CoD.BaseUtility.SetCustomNavDirection( CoD.BaseUtility.NavigationDirection.up, f1_local17, self.Loadouts ) --[[ @ 0]]
	end
	return self
end
 --[[ @ 0]]
CoD.directorArenaPregame.__onClose = function ( f56_arg0 )
	f56_arg0.Header:close() --[[ @ 0]]
	f56_arg0.pckeyboardNavigationRedirector2:close() --[[ @ 0]]
	f56_arg0.pckeyboardNavigationRedirector:close() --[[ @ 0]]
	f56_arg0.FindMatchButton:close() --[[ @ 0]]
	f56_arg0.DirectorLobbyPoseMembers:close() --[[ @ 0]]
	f56_arg0.CompetitiveOverviewRankBanner:close() --[[ @ 0]]
	f56_arg0.LeagueEventEndDelayMessageTitle:close() --[[ @ 0]]
	f56_arg0.CustomGamesButton:close() --[[ @ 0]]
	f56_arg0.CommonHeader:close() --[[ @ 0]]
	f56_arg0.DirectorLeaderActivitySelect:close() --[[ @ 0]]
	f56_arg0.ArenaEventButtons:close() --[[ @ 0]]
	f56_arg0.ArenaEventProgressButton:close() --[[ @ 0]]
	f56_arg0.ArenaTeamDisplay:close() --[[ @ 0]]
	f56_arg0.ArenaDailyBonus:close() --[[ @ 0]]
	f56_arg0.ArenaMapAndGameType:close() --[[ @ 0]]
end
 --[[ @ 0]]
