-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
require( "ui/uieditor/widgets/common/commonwipemeterwithglow" ) --[[ @ 0]]

CoD.WZAAR_MeritProgressBar = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.WZAAR_MeritProgressBar.__defaultWidth = 368 --[[ @ 0]]
CoD.WZAAR_MeritProgressBar.__defaultHeight = 20 --[[ @ 0]]
CoD.WZAAR_MeritProgressBar.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.WZAAR_MeritProgressBar ) --[[ @ 0]]
	self.id = "WZAAR_MeritProgressBar" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local LevelMeterBg = LUI.UIImage.new( 0, 1, 0, 0, 0.5, 1.7, 3, -27 ) --[[ @ 0]]
	LevelMeterBg:setRGB( 0, 0, 0 ) --[[ @ 0]]
	self:addElement( LevelMeterBg ) --[[ @ 0]]
	self.LevelMeterBg = LevelMeterBg --[[ @ 0]]
	
	local FrontendFrame02 = LUI.UIImage.new( 0, 1, -1, 1, 0, 1, 6, -6 ) --[[ @ 0]]
	FrontendFrame02:setImage( RegisterImage( @"uie_ui_menu_store_common_frame" ) ) --[[ @ 0]]
	FrontendFrame02:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_add" ) ) --[[ @ 0]]
	FrontendFrame02:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	FrontendFrame02:setupNineSliceShader( 12, 12 ) --[[ @ 0]]
	self:addElement( FrontendFrame02 ) --[[ @ 0]]
	self.FrontendFrame02 = FrontendFrame02 --[[ @ 0]]
	
	local FrontendFrameSelected = LUI.UIImage.new( 0, 1, -1, 1, 0, 1, 5, -5 ) --[[ @ 0]]
	FrontendFrameSelected:setAlpha( 0.3 ) --[[ @ 0]]
	FrontendFrameSelected:setImage( RegisterImage( @"uie_ui_menu_store_focus_frame" ) ) --[[ @ 0]]
	FrontendFrameSelected:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_add" ) ) --[[ @ 0]]
	FrontendFrameSelected:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	FrontendFrameSelected:setupNineSliceShader( 4, 4 ) --[[ @ 0]]
	self:addElement( FrontendFrameSelected ) --[[ @ 0]]
	self.FrontendFrameSelected = FrontendFrameSelected --[[ @ 0]]
	
	local EarnedXP = CoD.CommonWipeMeterWithGlow.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0.5, 1.7, -12, -12 ) --[[ @ 0]]
	EarnedXP:setRFTMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	EarnedXP.Meter:setRGB( 1, 0.63, 0 ) --[[ @ 0]]
	EarnedXP.Meter:setImage( RegisterImage( @"uie_ui_menu_aar_levelup_bar" ) ) --[[ @ 0]]
	EarnedXP.Meter:setShaderVector( 0, 0.75, 0, 0, 0 ) --[[ @ 0]]
	EarnedXP.MeterAdd:setRGB( 0.79, 0.1, 0.1 ) --[[ @ 0]]
	EarnedXP.MeterAdd:setAlpha( 0 ) --[[ @ 0]]
	EarnedXP.MeterAdd:setImage( RegisterImage( @"uie_ui_menu_aar_levelup_bar" ) ) --[[ @ 0]]
	EarnedXP.MeterAdd:setShaderVector( 0, 0.75, 0, 0, 0 ) --[[ @ 0]]
	EarnedXP.MeterGlow:setRGB( 1, 0.63, 0 ) --[[ @ 0]]
	EarnedXP.MeterGlow:setImage( RegisterImage( @"uie_ui_menu_aar_levelup_bar_glow" ) ) --[[ @ 0]]
	EarnedXP.MeterGlow:setShaderVector( 0, 0.75, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( EarnedXP ) --[[ @ 0]]
	self.EarnedXP = EarnedXP --[[ @ 0]]
	
	local PreviousXP = CoD.CommonWipeMeterWithGlow.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0.6, 1.6, -8, -16 ) --[[ @ 0]]
	PreviousXP.Meter:setRGB( 1, 0, 0 ) --[[ @ 0]]
	PreviousXP.Meter:setImage( RegisterImage( @"uie_ui_menu_aar_levelup_bar_wz_aar" ) ) --[[ @ 0]]
	PreviousXP.MeterAdd:setAlpha( 0 ) --[[ @ 0]]
	PreviousXP.MeterAdd:setImage( RegisterImage( @"uie_ui_menu_aar_levelup_bar_wz_aar" ) ) --[[ @ 0]]
	PreviousXP.MeterGlow:setRGB( ColorSet.Orange.r, ColorSet.Orange.g, ColorSet.Orange.b ) --[[ @ 0]]
	PreviousXP.MeterGlow:setAlpha( 0.5 ) --[[ @ 0]]
	PreviousXP.MeterGlow:setImage( RegisterImage( @"uie_ui_menu_aar_levelup_bar_wz_aar" ) ) --[[ @ 0]]
	PreviousXP:linkToElementModel( self, "previousXpProgress", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			PreviousXP.Meter:setShaderVector( 0, CoD.GetVectorComponentFromString( f2_local0, 1 ), CoD.GetVectorComponentFromString( f2_local0, 2 ), CoD.GetVectorComponentFromString( f2_local0, 3 ), CoD.GetVectorComponentFromString( f2_local0, 4 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	PreviousXP:linkToElementModel( self, "previousXpProgress", true, function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			PreviousXP.MeterAdd:setShaderVector( 0, CoD.GetVectorComponentFromString( f3_local0, 1 ), CoD.GetVectorComponentFromString( f3_local0, 2 ), CoD.GetVectorComponentFromString( f3_local0, 3 ), CoD.GetVectorComponentFromString( f3_local0, 4 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	PreviousXP:linkToElementModel( self, "previousXpProgress", true, function ( model )
		local f4_local0 = model:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			PreviousXP.MeterGlow:setShaderVector( 0, CoD.GetVectorComponentFromString( f4_local0, 1 ), CoD.GetVectorComponentFromString( f4_local0, 2 ), CoD.GetVectorComponentFromString( f4_local0, 3 ), CoD.GetVectorComponentFromString( f4_local0, 4 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( PreviousXP ) --[[ @ 0]]
	self.PreviousXP = PreviousXP --[[ @ 0]]
	
	local BGDotPatternLarge = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 6, -6 ) --[[ @ 0]]
	BGDotPatternLarge:setRGB( 1, 0.73, 0 ) --[[ @ 0]]
	BGDotPatternLarge:setAlpha( 0.2 ) --[[ @ 0]]
	BGDotPatternLarge:setImage( RegisterImage( @"hash_7FC21A8215EA012B" ) ) --[[ @ 0]]
	BGDotPatternLarge:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_67C9C02F608D0A75" ) ) --[[ @ 0]]
	BGDotPatternLarge:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	BGDotPatternLarge:setupNineSliceShader( 4, 4 ) --[[ @ 0]]
	self:addElement( BGDotPatternLarge ) --[[ @ 0]]
	self.BGDotPatternLarge = BGDotPatternLarge --[[ @ 0]]
	
	self:subscribeToGlobalModel( f1_arg1, "PerController", "hudItems.warzone.aarVisible", function ( model )
		local f5_local0 = self --[[ @ 0]]
		if CoD.ModelUtility.IsControllerModelValueTrue( f1_arg1, "hudItems.warzone.aarVisible" ) then
			CoD.WZUtility.WZAARDelayThenAnimateProgress( self, f1_arg1, self.EarnedXP, 500 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.WZAAR_MeritProgressBar.__resetProperties = function ( f6_arg0 )
	f6_arg0.LevelMeterBg:completeAnimation() --[[ @ 0]]
	f6_arg0.LevelMeterBg:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.WZAAR_MeritProgressBar.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f7_arg0, f7_arg1 )
			f7_arg0:__resetProperties() --[[ @ 0]]
			f7_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	Hidden = {
		DefaultClip = function ( f8_arg0, f8_arg1 )
			f8_arg0:__resetProperties() --[[ @ 0]]
			f8_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f8_arg0.LevelMeterBg:completeAnimation() --[[ @ 0]]
			f8_arg0.LevelMeterBg:setAlpha( 0 ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.LevelMeterBg ) --[[ @ 0]]
		end
	},
	MaxRank = {
		DefaultClip = function ( f9_arg0, f9_arg1 )
			f9_arg0:__resetProperties() --[[ @ 0]]
			f9_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.WZAAR_MeritProgressBar.__onClose = function ( f10_arg0 )
	f10_arg0.EarnedXP:close() --[[ @ 0]]
	f10_arg0.PreviousXP:close() --[[ @ 0]]
end
 --[[ @ 0]]
