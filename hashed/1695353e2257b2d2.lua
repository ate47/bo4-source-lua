-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:48
require( "x64:abd9d2111472f07" ) --[[ @ 0]]
require( "x64:2439f1611752f8e0" ) --[[ @ 0]]

local f0_local0 = function ( f1_arg0, f1_arg1 )
	local f1_local0 = @"mp/unknown" --[[ @ 0]]
	if IsDemoClipPreviewRunning() then
		f1_local0 = @"hash_21BF53D95E5AC2B5" --[[ @ 0]]
	elseif IsDemoCreatingHighlightReel() then
		f1_local0 = @"hash_3AAD9F5A753F0418" --[[ @ 0]]
	elseif IsDemoContextPlaybackMode() then
		f1_local0 = @"hash_7C985CBA47878B1C" --[[ @ 0]]
	elseif IsDemoContextBasicMode() then
		f1_local0 = @"hash_42466B35790D15BF" --[[ @ 0]]
	elseif IsDemoContextDirectorMode() then
		f1_local0 = @"hash_FC244F0B9CC213B" --[[ @ 0]]
	elseif IsDemoContextObjectLinkMode() then
		f1_local0 = @"hash_72961AAF61FB5B21" --[[ @ 0]]
	elseif IsDemoContextLighterMode() then
		f1_local0 = @"hash_7EBDDCC281D5C214" --[[ @ 0]]
	elseif IsDemoContextHighlightReelMode() then
		f1_local0 = @"hash_5E4E395171E8600C" --[[ @ 0]]
	end
	f1_arg0.ModeName:setText( Engine[@"hash_4F9F1239CFD921FE"]( f1_local0 ) ) --[[ @ 0]]
end
 --[[ @ 0]]
local f0_local1 = function ( f2_arg0, f2_arg1, f2_arg2 )
	f2_arg0.ModeName:subscribeToGlobalModel( f2_arg1, "Demo", "contextMode", function ( model )
		f0_local0( f2_arg0, f2_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	f2_arg0.ModeName:subscribeToGlobalModel( f2_arg1, "Demo", "clipState", function ( model )
		f0_local0( f2_arg0, f2_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	f2_arg0.ModeName:subscribeToGlobalModel( f2_arg1, "Demo", "isCreatingHighlightReel", function ( model )
		f0_local0( f2_arg0, f2_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DemoContextPanel = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.DemoContextPanel.__defaultWidth = 300 --[[ @ 0]]
CoD.DemoContextPanel.__defaultHeight = 60 --[[ @ 0]]
CoD.DemoContextPanel.new = function ( f6_arg0, f6_arg1, f6_arg2, f6_arg3, f6_arg4, f6_arg5, f6_arg6, f6_arg7, f6_arg8, f6_arg9 )
	local self = LUI.UIElement.new( f6_arg2, f6_arg3, f6_arg4, f6_arg5, f6_arg6, f6_arg7, f6_arg8, f6_arg9 ) --[[ @ 0]]
	self:setClass( CoD.DemoContextPanel ) --[[ @ 0]]
	self.id = "DemoContextPanel" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.onlyChildrenFocusable = CoD.isPC --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f6_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local BGBlur = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	BGBlur:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_381EEB1F96D4BE0A" ) ) --[[ @ 0]]
	BGBlur:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( BGBlur ) --[[ @ 0]]
	self.BGBlur = BGBlur --[[ @ 0]]
	
	local BGTintButton = LUI.UIImage.new( 0, 1, 0, 0, 1, 1, -30, 0 ) --[[ @ 0]]
	BGTintButton:setRGB( 0, 0, 0 ) --[[ @ 0]]
	BGTintButton:setAlpha( 0.6 ) --[[ @ 0]]
	BGTintButton:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_381EEB1F96D4BE0A" ) ) --[[ @ 0]]
	BGTintButton:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( BGTintButton ) --[[ @ 0]]
	self.BGTintButton = BGTintButton --[[ @ 0]]
	
	local BGTintFull = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	BGTintFull:setRGB( 0, 0, 0 ) --[[ @ 0]]
	BGTintFull:setAlpha( 0.6 ) --[[ @ 0]]
	BGTintFull:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_F755127C95CF5B6" ) ) --[[ @ 0]]
	BGTintFull:setShaderVector( 0, 1.5, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( BGTintFull ) --[[ @ 0]]
	self.BGTintFull = BGTintFull --[[ @ 0]]
	
	local PixelGridTiledBacking = LUI.UIImage.new( 0.5, 0.5, -150, 150, 1, 1, -30, 0 ) --[[ @ 0]]
	PixelGridTiledBacking:setAlpha( 0.1 ) --[[ @ 0]]
	PixelGridTiledBacking:setImage( RegisterImage( @"uie_ui_hud_notifications_pixelpattern" ) ) --[[ @ 0]]
	PixelGridTiledBacking:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_67C9C02F608D0A75" ) ) --[[ @ 0]]
	PixelGridTiledBacking:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	PixelGridTiledBacking:setupNineSliceShader( 128, 128 ) --[[ @ 0]]
	self:addElement( PixelGridTiledBacking ) --[[ @ 0]]
	self.PixelGridTiledBacking = PixelGridTiledBacking --[[ @ 0]]
	
	local DemoControlsSpectatingBar = CoD.DemoControlsSpectatingBar.new( f6_arg0, f6_arg1, 0.5, 0.5, -145, 145, 1, 1, -30, 0 ) --[[ @ 0]]
	self:addElement( DemoControlsSpectatingBar ) --[[ @ 0]]
	self.DemoControlsSpectatingBar = DemoControlsSpectatingBar --[[ @ 0]]
	
	local ModeName = LUI.UIText.new( 0.5, 0.5, -145, 145, 0, 0, 5, 25 ) --[[ @ 0]]
	ModeName:setRGB( ColorSet.Orange.r, ColorSet.Orange.g, ColorSet.Orange.b ) --[[ @ 0]]
	ModeName:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_42466B35790D15BF" ) ) --[[ @ 0]]
	ModeName:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	ModeName:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_2AE166D9BA8C6907" ) ) --[[ @ 0]]
	ModeName:setShaderVector( 0, 0.02, 0, 0, 0 ) --[[ @ 0]]
	ModeName:setShaderVector( 1, 0.03, 0, 0, 0 ) --[[ @ 0]]
	ModeName:setShaderVector( 2, 1, 0, 0, 0 ) --[[ @ 0]]
	ModeName:setLetterSpacing( 1 ) --[[ @ 0]]
	ModeName:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	ModeName:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	self:addElement( ModeName ) --[[ @ 0]]
	self.ModeName = ModeName --[[ @ 0]]
	
	local ButtonPrompt = CoD.DemoButtonPrompt.new( f6_arg0, f6_arg1, 0.5, 0.5, -115.5, 115.5, 0, 0, -34, -4 ) --[[ @ 0]]
	ButtonPrompt:setScale( 0.8, 0.8 ) --[[ @ 0]]
	ButtonPrompt.label:setText( LocalizeString( @"hash_111CF7B88D647093" ) ) --[[ @ 0]]
	ButtonPrompt:subscribeToGlobalModel( f6_arg1, "Controller", "secondary_button_image", function ( model )
		local f7_local0 = model:get() --[[ @ 0]]
		if f7_local0 ~= nil then
			ButtonPrompt.buttonPromptImage:setImage( RegisterImage( f7_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	ButtonPrompt:linkToElementModel( self, "Label", true, function ( model )
		local f8_local0 = model:get() --[[ @ 0]]
		if f8_local0 ~= nil then
			ButtonPrompt.KBMlabel:setText( LocalizeToUpperString( f8_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	ButtonPrompt:registerEventHandler( "menu_loaded", function ( element, event )
		local f9_local0 = nil --[[ @ 0]]
		if element.menuLoaded then
			f9_local0 = element:menuLoaded( event ) --[[ @ 0]]
		elseif element.super.menuLoaded then
			f9_local0 = element.super:menuLoaded( event ) --[[ @ 0]]
		end
		if IsMouseOrKeyboard( f6_arg1 ) then
			HideWidget( element ) --[[ @ 0]]
		end
		if not f9_local0 then
			f9_local0 = element:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f9_local0
	end ) --[[ @ 0]]
	self:addElement( ButtonPrompt ) --[[ @ 0]]
	self.ButtonPrompt = ButtonPrompt --[[ @ 0]]
	
	local FrontendFrame = LUI.UIImage.new( 0, 1, -1, 1, 0, 1, -1, 1 ) --[[ @ 0]]
	FrontendFrame:setAlpha( 0.2 ) --[[ @ 0]]
	FrontendFrame:setImage( RegisterImage( @"uie_ui_menu_store_common_frame" ) ) --[[ @ 0]]
	FrontendFrame:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_add" ) ) --[[ @ 0]]
	FrontendFrame:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	FrontendFrame:setupNineSliceShader( 12, 12 ) --[[ @ 0]]
	self:addElement( FrontendFrame ) --[[ @ 0]]
	self.FrontendFrame = FrontendFrame --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "ClipPreview",
			condition = function ( menu, element, event )
				return IsDemoClipPreviewRunning()
			end
		},
		{
			stateName = "CreatingHighlightReel",
			condition = function ( menu, element, event )
				return IsDemoCreatingHighlightReel()
			end
		},
		{
			stateName = "ShowChangeModeButtonPrompt",
			condition = function ( menu, element, event )
				local f12_local0 --[[ @ 0]]
				if not IsEditingDollyCameraMarker( f6_arg1 ) and not IsEditingLightmanMarker( f6_arg1 ) then
					f12_local0 = not IsMouseOrKeyboard( f6_arg1 ) --[[ @ 0]]
				else
					f12_local0 = false --[[ @ 0]]
				end
				return f12_local0
			end
		}
	} ) --[[ @ 0]]
	local f6_local9 = self --[[ @ 0]]
	local f6_local10 = self.subscribeToModel --[[ @ 0]]
	local f6_local11 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f6_local10( f6_local9, f6_local11["demo.clipState"], function ( f13_arg0 )
		f6_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f6_arg0,
			controller = f6_arg1,
			modelValue = f13_arg0:get(),
			modelName = "demo.clipState"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f6_local9 = self --[[ @ 0]]
	f6_local10 = self.subscribeToModel --[[ @ 0]]
	f6_local11 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f6_local10( f6_local9, f6_local11["demo.isCreatingHighlightReel"], function ( f14_arg0 )
		f6_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f6_arg0,
			controller = f6_arg1,
			modelValue = f14_arg0:get(),
			modelName = "demo.isCreatingHighlightReel"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f6_local9 = self --[[ @ 0]]
	f6_local10 = self.subscribeToModel --[[ @ 0]]
	f6_local11 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f6_local10( f6_local9, f6_local11["demo.highlightedDollyCamMarker"], function ( f15_arg0 )
		f6_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f6_arg0,
			controller = f6_arg1,
			modelValue = f15_arg0:get(),
			modelName = "demo.highlightedDollyCamMarker"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f6_local9 = self --[[ @ 0]]
	f6_local10 = self.subscribeToModel --[[ @ 0]]
	f6_local11 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f6_local10( f6_local9, f6_local11["demo.editingDollyCameraMarker"], function ( f16_arg0 )
		f6_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f6_arg0,
			controller = f6_arg1,
			modelValue = f16_arg0:get(),
			modelName = "demo.editingDollyCameraMarker"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f6_local9 = self --[[ @ 0]]
	f6_local10 = self.subscribeToModel --[[ @ 0]]
	f6_local11 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f6_local10( f6_local9, f6_local11["demo.highlightedLightmanMarker"], function ( f17_arg0 )
		f6_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f6_arg0,
			controller = f6_arg1,
			modelValue = f17_arg0:get(),
			modelName = "demo.highlightedLightmanMarker"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f6_local9 = self --[[ @ 0]]
	f6_local10 = self.subscribeToModel --[[ @ 0]]
	f6_local11 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f6_local10( f6_local9, f6_local11["demo.editingLightmanMarker"], function ( f18_arg0 )
		f6_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f6_arg0,
			controller = f6_arg1,
			modelValue = f18_arg0:get(),
			modelName = "demo.editingLightmanMarker"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:appendEventHandler( "input_source_changed", function ( f19_arg0, f19_arg1 )
		f19_arg1.menu = f19_arg1.menu or f6_arg0 --[[ @ 0]]
		f6_arg0:updateElementState( self, f19_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	f6_local9 = self --[[ @ 0]]
	f6_local10 = self.subscribeToModel --[[ @ 0]]
	f6_local11 = Engine[@"getmodelforcontroller"]( f6_arg1 ) --[[ @ 0]]
	f6_local10( f6_local9, f6_local11.LastInput, function ( f20_arg0 )
		f6_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f6_arg0,
			controller = f6_arg1,
			modelValue = f20_arg0:get(),
			modelName = "LastInput"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	if CoD.isPC then
		DemoControlsSpectatingBar.id = "DemoControlsSpectatingBar" --[[ @ 0]]
	end
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if f0_local1 then
		f0_local1( self, f6_arg1, f6_arg0 ) --[[ @ 0]]
	end
	f6_local10 = self --[[ @ 0]]
	if IsPC() then
		CoD.HUDUtility.SetUseCylinderMapping( f6_local10, false ) --[[ @ 0]]
	end
	return self
end
 --[[ @ 0]]
CoD.DemoContextPanel.__resetProperties = function ( f21_arg0 )
	f21_arg0.ButtonPrompt:completeAnimation() --[[ @ 0]]
	f21_arg0.ModeName:completeAnimation() --[[ @ 0]]
	f21_arg0.DemoControlsSpectatingBar:completeAnimation() --[[ @ 0]]
	f21_arg0.ButtonPrompt:setLeftRight( 0.5, 0.5, -115.5, 115.5 ) --[[ @ 0]]
	f21_arg0.ButtonPrompt:setTopBottom( 0, 0, -34, -4 ) --[[ @ 0]]
	f21_arg0.ButtonPrompt:setAlpha( 1 ) --[[ @ 0]]
	f21_arg0.ButtonPrompt.label:setText( LocalizeString( @"hash_111CF7B88D647093" ) ) --[[ @ 0]]
	f21_arg0.ModeName:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_42466B35790D15BF" ) ) --[[ @ 0]]
	f21_arg0.DemoControlsSpectatingBar:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DemoContextPanel.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f22_arg0, f22_arg1 )
			f22_arg0:__resetProperties() --[[ @ 0]]
			f22_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f22_arg0.ButtonPrompt:completeAnimation() --[[ @ 0]]
			f22_arg0.ButtonPrompt.label:completeAnimation() --[[ @ 0]]
			f22_arg0.ButtonPrompt:setLeftRight( 0, 0, 94.5, 325.5 ) --[[ @ 0]]
			f22_arg0.ButtonPrompt:setTopBottom( 0, 0, -34, -4 ) --[[ @ 0]]
			f22_arg0.ButtonPrompt:setAlpha( 0 ) --[[ @ 0]]
			f22_arg0.ButtonPrompt.label:setText( LocalizeString( @"hash_111CF7B88D647093" ) ) --[[ @ 0]]
			f22_arg0.clipFinished( f22_arg0.ButtonPrompt ) --[[ @ 0]]
		end
	},
	ClipPreview = {
		DefaultClip = function ( f23_arg0, f23_arg1 )
			f23_arg0:__resetProperties() --[[ @ 0]]
			f23_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f23_arg0.DemoControlsSpectatingBar:completeAnimation() --[[ @ 0]]
			f23_arg0.DemoControlsSpectatingBar:setAlpha( 0 ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.DemoControlsSpectatingBar ) --[[ @ 0]]
			f23_arg0.ModeName:completeAnimation() --[[ @ 0]]
			f23_arg0.ModeName:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_21BF53D95E5AC2B5" ) ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.ModeName ) --[[ @ 0]]
			f23_arg0.ButtonPrompt:completeAnimation() --[[ @ 0]]
			f23_arg0.ButtonPrompt.label:completeAnimation() --[[ @ 0]]
			f23_arg0.ButtonPrompt:setLeftRight( 0.5, 0.5, -115.5, 115.5 ) --[[ @ 0]]
			f23_arg0.ButtonPrompt:setTopBottom( 0, 0, 51, 81 ) --[[ @ 0]]
			f23_arg0.ButtonPrompt:setAlpha( 1 ) --[[ @ 0]]
			f23_arg0.ButtonPrompt.label:setText( LocalizeString( @"menu/cancel" ) ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.ButtonPrompt ) --[[ @ 0]]
		end
	},
	CreatingHighlightReel = {
		DefaultClip = function ( f24_arg0, f24_arg1 )
			f24_arg0:__resetProperties() --[[ @ 0]]
			f24_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f24_arg0.DemoControlsSpectatingBar:completeAnimation() --[[ @ 0]]
			f24_arg0.DemoControlsSpectatingBar:setAlpha( 0 ) --[[ @ 0]]
			f24_arg0.clipFinished( f24_arg0.DemoControlsSpectatingBar ) --[[ @ 0]]
			f24_arg0.ModeName:completeAnimation() --[[ @ 0]]
			f24_arg0.ModeName:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_3AAD9F5A753F0418" ) ) --[[ @ 0]]
			f24_arg0.clipFinished( f24_arg0.ModeName ) --[[ @ 0]]
			f24_arg0.ButtonPrompt:completeAnimation() --[[ @ 0]]
			f24_arg0.ButtonPrompt:setLeftRight( 0.5, 0.5, -115.5, 115.5 ) --[[ @ 0]]
			f24_arg0.ButtonPrompt:setTopBottom( 0, 0, 51, 81 ) --[[ @ 0]]
			f24_arg0.ButtonPrompt:setAlpha( 1 ) --[[ @ 0]]
			f24_arg0.clipFinished( f24_arg0.ButtonPrompt ) --[[ @ 0]]
		end
	},
	ShowChangeModeButtonPrompt = {
		DefaultClip = function ( f25_arg0, f25_arg1 )
			f25_arg0:__resetProperties() --[[ @ 0]]
			f25_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f25_arg0.ButtonPrompt:completeAnimation() --[[ @ 0]]
			f25_arg0.ButtonPrompt.label:completeAnimation() --[[ @ 0]]
			f25_arg0.ButtonPrompt:setAlpha( 1 ) --[[ @ 0]]
			f25_arg0.ButtonPrompt.label:setText( LocalizeString( @"hash_111CF7B88D647093" ) ) --[[ @ 0]]
			f25_arg0.clipFinished( f25_arg0.ButtonPrompt ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.DemoContextPanel.__onClose = function ( f26_arg0 )
	f26_arg0.DemoControlsSpectatingBar:close() --[[ @ 0]]
	f26_arg0.ButtonPrompt:close() --[[ @ 0]]
end
 --[[ @ 0]]
