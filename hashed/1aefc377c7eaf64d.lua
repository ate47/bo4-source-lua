-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:33
require( "x64:2c2f840fd2528321" ) --[[ @ 0]]
require( "x64:396b29a3176ada0f" ) --[[ @ 0]]
require( "ui/uieditor/widgets/startmenu/options/startmenuoptionsmainframe" ) --[[ @ 0]]
require( "ui/uieditor/widgets/systemoverlays/systemoverlay_layout_foregroundmultilinetext" ) --[[ @ 0]]
require( "x64:3bc7ea4f891a4cca" ) --[[ @ 0]]
require( "x64:43447fe281be3ac4" ) --[[ @ 0]]

CoD.systemOverlay_SaveEmblemFrame = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.systemOverlay_SaveEmblemFrame.__defaultWidth = 1920 --[[ @ 0]]
CoD.systemOverlay_SaveEmblemFrame.__defaultHeight = 456 --[[ @ 0]]
CoD.systemOverlay_SaveEmblemFrame.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	CoD.CraftUtility.SetSlotCustomizationType( f1_arg1, Enum[@"CustomizationType"][@"hash_5979B4C08E9D67B2"] ) --[[ @ 0]]
	self:setClass( CoD.systemOverlay_SaveEmblemFrame ) --[[ @ 0]]
	self.id = "systemOverlay_SaveEmblemFrame" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local Frame = CoD.StartMenuOptionsMainFrame.new( f1_arg0, f1_arg1, 0.5, 0.5, -722.5, -343.5, 0.5, 0.5, -214.5, 164.5 ) --[[ @ 0]]
	Frame:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	Frame:setAlpha( 0.04 ) --[[ @ 0]]
	self:addElement( Frame ) --[[ @ 0]]
	self.Frame = Frame --[[ @ 0]]
	
	local emblem = LUI.UIElement.new( 0.5, 0.5, -713, -353, 0, 0, 22, 382 ) --[[ @ 0]]
	emblem:setupEmblem( 2 ) --[[ @ 0]]
	self:addElement( emblem ) --[[ @ 0]]
	self.emblem = emblem --[[ @ 0]]
	
	local OptionList = LUI.UIList.new( f1_arg0, f1_arg1, 10, 0, nil, false, false, false, false ) --[[ @ 0]]
	OptionList:setLeftRight( 0.5, 0.5, -324, 76 ) --[[ @ 0]]
	OptionList:setTopBottom( 1, 1, -265, -65 ) --[[ @ 0]]
	OptionList:setWidgetType( CoD.EmblemOptionsButton ) --[[ @ 0]]
	OptionList:setVerticalCount( 3 ) --[[ @ 0]]
	OptionList:setSpacing( 10 ) --[[ @ 0]]
	OptionList:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	OptionList:linkToElementModel( self, "listDatasource", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			OptionList:setDataSource( f2_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	OptionList:linkToElementModel( OptionList, "disabled", true, function ( model, f3_arg1 )
		CoD.Menu.UpdateButtonShownState( f3_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	OptionList:registerEventHandler( "ui_keyboard_input", function ( element, event )
		local f4_local0 = nil --[[ @ 0]]
		CoD.CraftUtility.EmblemEditor_HandleKeyboardComplete( self, element, f1_arg1, event ) --[[ @ 0]]
		if not f4_local0 then
			f4_local0 = element:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f4_local0
	end ) --[[ @ 0]]
	OptionList:registerEventHandler( "gain_focus", function ( element, event )
		local f5_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f5_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f5_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f5_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( OptionList, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		if not IsDisabled( element, controller ) then
			ProcessListAction( self, element, controller, menu ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsDisabled( element, controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, "ui_confirm" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( OptionList ) --[[ @ 0]]
	self.OptionList = OptionList --[[ @ 0]]
	
	local CraftAuthorInfo = nil --[[ @ 0]]
	
	CraftAuthorInfo = CoD.CraftAuthorInfo.new( f1_arg0, f1_arg1, 0.5, 0.5, 97, 447, 0, 0, 122, 222 ) --[[ @ 0]]
	CraftAuthorInfo:mergeStateConditions( {
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return CoD.CraftUtility.Emblems_NewEmblem( f1_arg1 )
			end
		}
	} ) --[[ @ 0]]
	CraftAuthorInfo:subscribeToGlobalModel( f1_arg1, "EmblemEditing", "createTime", function ( model )
		local f9_local0 = model:get() --[[ @ 0]]
		if f9_local0 ~= nil then
			CraftAuthorInfo.TimestampText:setText( f9_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	CraftAuthorInfo:subscribeToGlobalModel( f1_arg1, "EmblemEditing", "xuid", function ( model )
		local f10_local0 = model:get() --[[ @ 0]]
		if f10_local0 ~= nil then
			CraftAuthorInfo.AuthorGamertag:setupPlayerGamertag( f10_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	CraftAuthorInfo:subscribeToGlobalModel( f1_arg1, "EmblemEditing", "emblemTextEntry", function ( model )
		local f11_local0 = model:get() --[[ @ 0]]
		if f11_local0 ~= nil then
			CraftAuthorInfo.EmblemName:setText( f11_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( CraftAuthorInfo ) --[[ @ 0]]
	self.CraftAuthorInfo = CraftAuthorInfo --[[ @ 0]]
	
	local EmblemRenameTextBox = nil --[[ @ 0]]
	
	EmblemRenameTextBox = CoD.EmblemRenameTextBox.new( f1_arg0, f1_arg1, 0.5, 0.5, -324, 76, 0, 0, 123, 183 ) --[[ @ 0]]
	EmblemRenameTextBox:linkToElementModel( self, "inputText", true, function ( model )
		local f12_local0 = model:get() --[[ @ 0]]
		if f12_local0 ~= nil then
			EmblemRenameTextBox.RenameText:setText( CoD.BaseUtility.LocalizeIfXHash( f12_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( EmblemRenameTextBox, "childFocusLost", function ( element )
		if CoD.ModelUtility.IsControllerModelValueNonEmptyString( f1_arg1, "renameEmblemText" ) then
			SetElementState( self, element, f1_arg1, "DefaultState" ) --[[ @ 0]]
			CoD.PCUtility.EmblemEditor_RenameEmblem( self, f1_arg1 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( EmblemRenameTextBox ) --[[ @ 0]]
	self.EmblemRenameTextBox = EmblemRenameTextBox --[[ @ 0]]
	
	local f1_local6 = nil --[[ @ 0]]
	f1_local6 = LUI.UIElement.createFake() --[[ @ 0]]
	self.EmblemOptionsButton2 = f1_local6 --[[ @ 0]]
	local f1_local7 = nil --[[ @ 0]]
	self.EmblemNameTitle = LUI.UIElement.createFake() --[[ @ 0]]
	
	local text = CoD.systemOverlay_Layout_ForegroundMultilineText.new( f1_arg0, f1_arg1, 0.5, 0.5, -324, 948, 0, 0, 51, 81 ) --[[ @ 0]]
	text:setRGB( ColorSet.T8__OFF__GRAY.r, ColorSet.T8__OFF__GRAY.g, ColorSet.T8__OFF__GRAY.b ) --[[ @ 0]]
	text:setScale( LanguageOverrideNumber( "japanese", 0.85, 1, 1 ) ) --[[ @ 0]]
	text:linkToElementModel( self, "description", true, function ( model )
		local f14_local0 = model:get() --[[ @ 0]]
		if f14_local0 ~= nil then
			text.text:setText( CoD.BaseUtility.LocalizeIfXHash( f14_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( text ) --[[ @ 0]]
	self.text = text --[[ @ 0]]
	
	local title = LUI.UIText.new( 0.5, 0.5, -324, 948, 0, 0, 7, 52 ) --[[ @ 0]]
	title:setRGB( ColorSet.T8__BEIGE__HEADER.r, ColorSet.T8__BEIGE__HEADER.g, ColorSet.T8__BEIGE__HEADER.b ) --[[ @ 0]]
	title:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	title:setLetterSpacing( 6 ) --[[ @ 0]]
	title:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	title:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	title:linkToElementModel( self, "title", true, function ( model )
		local f15_local0 = model:get() --[[ @ 0]]
		if f15_local0 ~= nil then
			title:setText( LocalizeToUpperString( CoD.BaseUtility.LocalizeIfXHash( f15_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( title ) --[[ @ 0]]
	self.title = title --[[ @ 0]]
	
	local categoryTypeImage = LUI.UIImage.new( 0.5, 0.5, -377.5, -353.5, 0, 0, 22, 46 ) --[[ @ 0]]
	categoryTypeImage:setRGB( ColorSet.T8__BEIGE__HEADER.r, ColorSet.T8__BEIGE__HEADER.g, ColorSet.T8__BEIGE__HEADER.b ) --[[ @ 0]]
	categoryTypeImage:linkToElementModel( self, "categoryType", true, function ( model )
		local f16_local0 = model:get() --[[ @ 0]]
		if f16_local0 ~= nil then
			categoryTypeImage:setImage( RegisterImage( GetCategoryIconForOverlayType( f16_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( categoryTypeImage ) --[[ @ 0]]
	self.categoryTypeImage = categoryTypeImage --[[ @ 0]]
	
	local SlotsUsedWidget = CoD.SlotsUsedWidget.new( f1_arg0, f1_arg1, 0.5, 0.5, 97, 627, 0, 0, 304, 398 ) --[[ @ 0]]
	SlotsUsedWidget.Title.__alertText2_String_Reference = function ()
		SlotsUsedWidget.Title:setText( LocalizeToUpperString( CoD.CraftUtility.GetSlotsUsedHeader( f1_arg1 ) ) ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	SlotsUsedWidget.Title.__alertText2_String_Reference() --[[ @ 0]]
	SlotsUsedWidget:subscribeToGlobalModel( f1_arg1, "CraftSlots", "totalSlots", function ( model )
		local f18_local0 = model:get() --[[ @ 0]]
		if f18_local0 ~= nil then
			SlotsUsedWidget.Total:setText( f18_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	SlotsUsedWidget:subscribeToGlobalModel( f1_arg1, "CraftSlots", "usedSlots", function ( model )
		local f19_local0 = model:get() --[[ @ 0]]
		if f19_local0 ~= nil then
			SlotsUsedWidget.Used:setText( f19_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	SlotsUsedWidget:subscribeToGlobalModel( f1_arg1, "CraftSlots", "totalSlots", function ( model )
		local f20_local0 = model:get() --[[ @ 0]]
		if f20_local0 ~= nil then
			SlotsUsedWidget.totalBar:setShaderVector( 1, SetVectorComponent( 2, 1, CoD.GetVectorComponentFromString( f20_local0, 1 ), CoD.GetVectorComponentFromString( f20_local0, 2 ), CoD.GetVectorComponentFromString( f20_local0, 3 ), CoD.GetVectorComponentFromString( f20_local0, 4 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	SlotsUsedWidget:subscribeToGlobalModel( f1_arg1, "CraftSlots", "totalSlots", function ( model )
		local f21_local0 = model:get() --[[ @ 0]]
		if f21_local0 ~= nil then
			SlotsUsedWidget.usedBar:setShaderVector( 1, SetVectorComponent( 2, 1, CoD.GetVectorComponentFromString( f21_local0, 1 ), CoD.GetVectorComponentFromString( f21_local0, 2 ), CoD.GetVectorComponentFromString( f21_local0, 3 ), CoD.GetVectorComponentFromString( f21_local0, 4 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	SlotsUsedWidget:subscribeToGlobalModel( f1_arg1, "CraftSlots", "percent", function ( model )
		local f22_local0 = model:get() --[[ @ 0]]
		if f22_local0 ~= nil then
			SlotsUsedWidget.usedBar:setShaderVector( 2, SetVectorComponent( 4, 1, SetVectorComponent( 3, 0, SetVectorComponent( 1, 0, SwapVectorComponents( 1, 2, CoD.GetVectorComponentFromString( f22_local0, 1 ), CoD.GetVectorComponentFromString( f22_local0, 2 ), CoD.GetVectorComponentFromString( f22_local0, 3 ), CoD.GetVectorComponentFromString( f22_local0, 4 ) ) ) ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( SlotsUsedWidget ) --[[ @ 0]]
	self.SlotsUsedWidget = SlotsUsedWidget --[[ @ 0]]
	
	local f1_local12 = SlotsUsedWidget --[[ @ 0]]
	local f1_local13 = SlotsUsedWidget.subscribeToModel --[[ @ 0]]
	local f1_local14 = DataSources.SlotCustomization.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local13( f1_local12, f1_local14.type, SlotsUsedWidget.Title.__alertText2_String_Reference ) --[[ @ 0]]
	OptionList.id = "OptionList" --[[ @ 0]]
	if CoD.isPC then
		EmblemRenameTextBox.id = "EmblemRenameTextBox" --[[ @ 0]]
	end
	f1_local6.id = "EmblemOptionsButton2" --[[ @ 0]]
	self.__defaultFocus = f1_local6 --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.systemOverlay_SaveEmblemFrame.__onClose = function ( f23_arg0 )
	f23_arg0.Frame:close() --[[ @ 0]]
	f23_arg0.OptionList:close() --[[ @ 0]]
	f23_arg0.CraftAuthorInfo:close() --[[ @ 0]]
	f23_arg0.EmblemRenameTextBox:close() --[[ @ 0]]
	f23_arg0.EmblemOptionsButton2:close() --[[ @ 0]]
	f23_arg0.text:close() --[[ @ 0]]
	f23_arg0.title:close() --[[ @ 0]]
	f23_arg0.categoryTypeImage:close() --[[ @ 0]]
	f23_arg0.SlotsUsedWidget:close() --[[ @ 0]]
end
 --[[ @ 0]]
