-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
require( "ui/uieditor/widgets/lobby/common/layoutelements/commonbglayoutelement02" ) --[[ @ 0]]
require( "x64:274864184d366296" ) --[[ @ 0]]
require( "x64:4e62f9ce75b5e6b9" ) --[[ @ 0]]
require( "x64:147c0adba754f8d0" ) --[[ @ 0]]
require( "x64:71bf0f5b435e0a27" ) --[[ @ 0]]
require( "x64:3f027dcc6409e42c" ) --[[ @ 0]]

CoD.MOTD = InheritFrom( CoD.Menu ) --[[ @ 0]]
LUI.createMenu.MOTD = function ( f1_arg0, f1_arg1 )
	local self = CoD.Menu.NewForUIEditor( "MOTD", f1_arg0 ) --[[ @ 0]]
	local f1_local1 = self --[[ @ 0]]
	CoD.BaseUtility.SetPropertiesFromUserData( self, f1_arg1 ) --[[ @ 0]]
	self:setClass( CoD.MOTD ) --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self:setOwner( f1_arg0 ) --[[ @ 0]]
	self:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	self:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	self:playSound( "menu_open", f1_arg0 ) --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_local1:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local BlurBG = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	BlurBG:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_E2354BE557C4C7A" ) ) --[[ @ 0]]
	BlurBG:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( BlurBG ) --[[ @ 0]]
	self.BlurBG = BlurBG --[[ @ 0]]
	
	local MotdBG = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	MotdBG:setRGB( 0, 0, 0 ) --[[ @ 0]]
	MotdBG:setAlpha( 0.8 ) --[[ @ 0]]
	self:addElement( MotdBG ) --[[ @ 0]]
	self.MotdBG = MotdBG --[[ @ 0]]
	
	local TiledBacking = LUI.UIImage.new( 0.5, 0.5, -960, 960, 0.5, 0.5, -440, 440 ) --[[ @ 0]]
	TiledBacking:setAlpha( 0.5 ) --[[ @ 0]]
	TiledBacking:setImage( RegisterImage( @"uie_ui_menu_specialist_hub_repeat_bg" ) ) --[[ @ 0]]
	TiledBacking:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_16CBE95C250C6D15" ) ) --[[ @ 0]]
	TiledBacking:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	TiledBacking:setupNineSliceShader( 196, 88 ) --[[ @ 0]]
	self:addElement( TiledBacking ) --[[ @ 0]]
	self.TiledBacking = TiledBacking --[[ @ 0]]
	
	local GridBG = CoD.MOTD_BannerImage_Grid.new( f1_local1, f1_arg0, 0.5, 0.5, -960, 960, 0.5, 0.5, -540, 540 ) --[[ @ 0]]
	GridBG:setAlpha( 0.5 ) --[[ @ 0]]
	self:addElement( GridBG ) --[[ @ 0]]
	self.GridBG = GridBG --[[ @ 0]]
	
	local TiledBacking2 = LUI.UIImage.new( 0.5, 0.5, -960, -516, 0.5, 0.5, -440, 440 ) --[[ @ 0]]
	TiledBacking2:setAlpha( 0.2 ) --[[ @ 0]]
	TiledBacking2:setImage( RegisterImage( @"uie_ui_menu_specialist_hub_repeat_bg" ) ) --[[ @ 0]]
	TiledBacking2:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_67C9C02F608D0A75" ) ) --[[ @ 0]]
	TiledBacking2:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	TiledBacking2:setupNineSliceShader( 196, 88 ) --[[ @ 0]]
	self:addElement( TiledBacking2 ) --[[ @ 0]]
	self.TiledBacking2 = TiledBacking2 --[[ @ 0]]
	
	local Buttons = CoD.MOTD_ButtonContainer.new( f1_local1, f1_arg0, 0.5, 0.5, 650, 902, 0.5, 0.5, 381, 429 ) --[[ @ 0]]
	Buttons:subscribeToGlobalModel( f1_arg0, "PerController", "LastInput", function ( model )
		local f2_local0 = Buttons --[[ @ 0]]
		if IsGamepad( f1_arg0 ) then
			ShowWidget( f2_local0 ) --[[ @ 0]]
		elseif not IsGamepad( f1_arg0 ) then
			HideWidget( f2_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Buttons ) --[[ @ 0]]
	self.Buttons = Buttons --[[ @ 0]]
	
	local BoxHighlighted = CoD.CommonBgLayoutElement03.new( f1_local1, f1_arg0, 0.5, 0.5, -622, -546, 0.5, 0.5, 164.5, 544.5 ) --[[ @ 0]]
	BoxHighlighted:setAlpha( 0.5 ) --[[ @ 0]]
	BoxHighlighted:setScale( 0.4, 0.4 ) --[[ @ 0]]
	self:addElement( BoxHighlighted ) --[[ @ 0]]
	self.BoxHighlighted = BoxHighlighted --[[ @ 0]]
	
	local LayoutElement02 = CoD.CommonBgLayoutElement02.new( f1_local1, f1_arg0, 0.5, 0.5, 679.5, 983.5, 0.5, 0.5, -404.5, -328.5 ) --[[ @ 0]]
	LayoutElement02:setZoom( 100 ) --[[ @ 0]]
	LayoutElement02:setScale( 0.5, 0.5 ) --[[ @ 0]]
	self:addElement( LayoutElement02 ) --[[ @ 0]]
	self.LayoutElement02 = LayoutElement02 --[[ @ 0]]
	
	local LayoutFrame = LUI.UIFrame.new( f1_local1, f1_arg0, 0, 0, false ) --[[ @ 0]]
	LayoutFrame:setLeftRight( 0.5, 0.5, -485, 907 ) --[[ @ 0]]
	LayoutFrame:setTopBottom( 0.5, 0.5, -338, 342 ) --[[ @ 0]]
	self:addElement( LayoutFrame ) --[[ @ 0]]
	self.LayoutFrame = LayoutFrame --[[ @ 0]]
	
	local BoundaryBot = LUI.UIImage.new( 0.5, 0.5, -962, 962, 0.5, 0.5, 426, 442 ) --[[ @ 0]]
	BoundaryBot:setAlpha( 0.15 ) --[[ @ 0]]
	BoundaryBot:setImage( RegisterImage( @"uie_ui_hud_tak5_player_layout_bracket" ) ) --[[ @ 0]]
	BoundaryBot:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_add" ) ) --[[ @ 0]]
	BoundaryBot:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	BoundaryBot:setupNineSliceShader( 66, 8 ) --[[ @ 0]]
	self:addElement( BoundaryBot ) --[[ @ 0]]
	self.BoundaryBot = BoundaryBot --[[ @ 0]]
	
	local f1_local12 = nil --[[ @ 0]]
	
	local ButtonsList = LUI.UIList.new( f1_local1, f1_arg0, 18, 0, nil, false, false, false, false ) --[[ @ 0]]
	ButtonsList:setLeftRight( 0.5, 0.5, -425, 847 ) --[[ @ 0]]
	ButtonsList:setTopBottom( 0.5, 0.5, 349, 429 ) --[[ @ 0]]
	ButtonsList:setWidgetType( CoD.PC_MOTD_Buttons ) --[[ @ 0]]
	ButtonsList:setHorizontalCount( 5 ) --[[ @ 0]]
	ButtonsList:setSpacing( 18 ) --[[ @ 0]]
	ButtonsList:setAlignment( Enum[@"LUIAlignment"][@"hash_3830CFD395E6AA0A"] ) --[[ @ 0]]
	ButtonsList:setDataSource( "PCMOTDOptions" ) --[[ @ 0]]
	ButtonsList:subscribeToGlobalModel( f1_arg0, "PerController", "LastInput", function ( model )
		local f3_local0 = ButtonsList --[[ @ 0]]
		if IsMouseOrKeyboard( f1_arg0 ) then
			ShowWidget( f3_local0 ) --[[ @ 0]]
		elseif not IsMouseOrKeyboard( f1_arg0 ) then
			HideWidget( f3_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( ButtonsList ) --[[ @ 0]]
	self.ButtonsList = ButtonsList --[[ @ 0]]
	
	local DividerSolidBot = LUI.UIImage.new( 0.5, 0.5, -960, 960, 0.5, 0.5, 441, 445 ) --[[ @ 0]]
	DividerSolidBot:setAlpha( 0.5 ) --[[ @ 0]]
	DividerSolidBot:setImage( RegisterImage( @"hash_484B43D5B04D263A" ) ) --[[ @ 0]]
	DividerSolidBot:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_16CBE95C250C6D15" ) ) --[[ @ 0]]
	DividerSolidBot:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	DividerSolidBot:setupNineSliceShader( 8, 4 ) --[[ @ 0]]
	self:addElement( DividerSolidBot ) --[[ @ 0]]
	self.DividerSolidBot = DividerSolidBot --[[ @ 0]]
	
	local DividerSolidTop = LUI.UIImage.new( 0.5, 0.5, -960, 960, 0.5, 0.5, -444, -440 ) --[[ @ 0]]
	DividerSolidTop:setAlpha( 0.5 ) --[[ @ 0]]
	DividerSolidTop:setImage( RegisterImage( @"hash_484B43D5B04D263A" ) ) --[[ @ 0]]
	DividerSolidTop:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_16CBE95C250C6D15" ) ) --[[ @ 0]]
	DividerSolidTop:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	DividerSolidTop:setupNineSliceShader( 8, 4 ) --[[ @ 0]]
	self:addElement( DividerSolidTop ) --[[ @ 0]]
	self.DividerSolidTop = DividerSolidTop --[[ @ 0]]
	
	local BoundaryTop = LUI.UIImage.new( 0.5, 0.5, -962, 962, 0.5, 0.5, -442, -426 ) --[[ @ 0]]
	BoundaryTop:setAlpha( 0.15 ) --[[ @ 0]]
	BoundaryTop:setZRot( 180 ) --[[ @ 0]]
	BoundaryTop:setImage( RegisterImage( @"uie_ui_hud_tak5_player_layout_bracket" ) ) --[[ @ 0]]
	BoundaryTop:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_add" ) ) --[[ @ 0]]
	BoundaryTop:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	BoundaryTop:setupNineSliceShader( 66, 8 ) --[[ @ 0]]
	self:addElement( BoundaryTop ) --[[ @ 0]]
	self.BoundaryTop = BoundaryTop --[[ @ 0]]
	
	local DividerSolid = LUI.UIImage.new( 0.5, 0.5, -956, -78, 0.5, 0.5, -2, 2 ) --[[ @ 0]]
	DividerSolid:setAlpha( 0.02 ) --[[ @ 0]]
	DividerSolid:setZRot( 90 ) --[[ @ 0]]
	DividerSolid:setImage( RegisterImage( @"hash_484B43D5B04D263A" ) ) --[[ @ 0]]
	DividerSolid:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_16CBE95C250C6D15" ) ) --[[ @ 0]]
	DividerSolid:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	DividerSolid:setupNineSliceShader( 8, 4 ) --[[ @ 0]]
	self:addElement( DividerSolid ) --[[ @ 0]]
	self.DividerSolid = DividerSolid --[[ @ 0]]
	
	local MOTDBanners = CoD.MOTD_BannerContainer.new( f1_local1, f1_arg0, 0.5, 0.5, -874, -546, 0.5, 0.5, -338.5, 340.5 ) --[[ @ 0]]
	self:addElement( MOTDBanners ) --[[ @ 0]]
	self.MOTDBanners = MOTDBanners --[[ @ 0]]
	
	LayoutFrame:linkToElementModel( MOTDBanners.MOTDBanners, nil, false, function ( model )
		LayoutFrame:setModel( model, f1_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LayoutFrame:linkToElementModel( MOTDBanners.MOTDBanners, "frameLayout", true, function ( model )
		local f5_local0 = model:get() --[[ @ 0]]
		if f5_local0 ~= nil then
			LayoutFrame:changeFrameWidget( f5_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:mergeStateConditions( {
		{
			stateName = "KBMouse",
			condition = function ( menu, element, event )
				local f6_local0 --[[ @ 0]]
				if not IsGamepad( f1_arg0 ) then
					f6_local0 = IsPC() --[[ @ 0]]
				else
					f6_local0 = false --[[ @ 0]]
				end
				return f6_local0
			end
		}
	} ) --[[ @ 0]]
	self:appendEventHandler( "input_source_changed", function ( f7_arg0, f7_arg1 )
		f7_arg1.menu = f7_arg1.menu or f1_local1 --[[ @ 0]]
		f1_local1:updateElementState( self, f7_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local f1_local19 = self --[[ @ 0]]
	local f1_local20 = self.subscribeToModel --[[ @ 0]]
	local f1_local21 = Engine[@"GetModelForController"]( f1_arg0 ) --[[ @ 0]]
	f1_local20( f1_local19, f1_local21.LastInput, function ( f8_arg0 )
		f1_local1:updateElementState( self, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f8_arg0:get(),
			modelName = "LastInput"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"], nil, function ( element, menu, controller, model )
		CoD.MOTDUtility.MOTD_Close( self, controller, menu, self.MOTDBanners ) --[[ @ 0]]
		ResetThumbnailViewer( controller ) --[[ @ 0]]
		ClearMenuSavedState( menu ) --[[ @ 0]]
		CoD.VideoStreamingUtility.CancelDownloadUrlGroup() --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"], @"hash_66C253CF816B40B5", nil, nil ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	self.__on_menuOpened_self = function ( f11_arg0, f11_arg1, f11_arg2, f11_arg3 )
		if IsElementReceivingMenuOpenEventForTheFirstTime( self ) and IsPC() then
			CoD.PCUtility.LockUIShortcutInput( f11_arg2, f11_arg1 ) --[[ @ 0]]
			UpdateElementDataSource( self, "ButtonsList" ) --[[ @ 0]]
			CoD.VideoStreamingUtility.CancelDownloadUrlGroup() --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	f1_local1:addMenuOpenedCallback( self.__on_menuOpened_self ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( self, "close", function ( element )
		if IsPC() then
			CoD.PCUtility.UnlockUIShortcutInput( f1_local1, f1_arg0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	Buttons:setModel( self.buttonModel, f1_arg0 ) --[[ @ 0]]
	if CoD.isPC then
		Buttons.id = "Buttons" --[[ @ 0]]
	end
	LayoutFrame.id = "LayoutFrame" --[[ @ 0]]
	ButtonsList.id = "ButtonsList" --[[ @ 0]]
	MOTDBanners.id = "MOTDBanners" --[[ @ 0]]
	self:processEvent( {
		name = "menu_loaded",
		controller = f1_arg0
	} ) --[[ @ 0]]
	self.__defaultFocus = MOTDBanners --[[ @ 0]]
	if CoD.isPC and (IsKeyboard( f1_arg0 ) or self.ignoreCursor) then
		self:restoreState( f1_arg0 ) --[[ @ 0]]
	end
	self.__on_close_removeOverrides = function ()
		f1_local1:removeMenuOpenedCallback( self.__on_menuOpened_self ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg0 ) --[[ @ 0]]
	end
	
	f1_local20 = self --[[ @ 0]]
	CoD.WZUtility.PlayWZTrialVideo( f1_local1, f1_arg0 ) --[[ @ 0]]
	return self
end
 --[[ @ 0]]
CoD.MOTD.__onClose = function ( f14_arg0 )
	f14_arg0.__on_close_removeOverrides() --[[ @ 0]]
	f14_arg0.LayoutFrame:close() --[[ @ 0]]
	f14_arg0.GridBG:close() --[[ @ 0]]
	f14_arg0.Buttons:close() --[[ @ 0]]
	f14_arg0.BoxHighlighted:close() --[[ @ 0]]
	f14_arg0.LayoutElement02:close() --[[ @ 0]]
	f14_arg0.ButtonsList:close() --[[ @ 0]]
	f14_arg0.MOTDBanners:close() --[[ @ 0]]
end
 --[[ @ 0]]
