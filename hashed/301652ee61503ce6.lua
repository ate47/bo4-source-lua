-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:33
require( "ui/uieditor/widgets/hud/corner9slice" ) --[[ @ 0]]
require( "x64:1497823eefd2b04b" ) --[[ @ 0]]

CoD.WZHorizontalCompass = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.WZHorizontalCompass.__defaultWidth = 788 --[[ @ 0]]
CoD.WZHorizontalCompass.__defaultHeight = 80 --[[ @ 0]]
CoD.WZHorizontalCompass.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setUseCylinderMapping( true ) --[[ @ 0]]
	self:setClass( CoD.WZHorizontalCompass ) --[[ @ 0]]
	self.id = "WZHorizontalCompass" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local Backer = LUI.UIImage.new( 0, 0, -76, 864, 0, 0, 27, 79 ) --[[ @ 0]]
	Backer:setImage( RegisterImage( @"uie_ui_hud_wz_hud_core_compass_backer" ) ) --[[ @ 0]]
	Backer:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_feather_edges" ) ) --[[ @ 0]]
	Backer:setShaderVector( 0, 0.45, 0.01, 0.45, 0.01 ) --[[ @ 0]]
	self:addElement( Backer ) --[[ @ 0]]
	self.Backer = Backer --[[ @ 0]]
	
	local HorizontalCompassDirections = LUI.GridLayout.new( f1_arg0, f1_arg1, false, 0, 0, 0, 0, nil, nil, false, false, false, false ) --[[ @ 0]]
	HorizontalCompassDirections:setLeftRight( 0.5, 0.5, -1550, 1550 ) --[[ @ 0]]
	HorizontalCompassDirections:setTopBottom( 0, 0, 47, 84 ) --[[ @ 0]]
	HorizontalCompassDirections:setWidgetType( CoD.WZCompassMinor ) --[[ @ 0]]
	HorizontalCompassDirections:setHorizontalCount( 50 ) --[[ @ 0]]
	HorizontalCompassDirections:setSpacing( 0 ) --[[ @ 0]]
	HorizontalCompassDirections:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	HorizontalCompassDirections:setDataSource( "HorizontalCompassPips" ) --[[ @ 0]]
	self:addElement( HorizontalCompassDirections ) --[[ @ 0]]
	self.HorizontalCompassDirections = HorizontalCompassDirections --[[ @ 0]]
	
	local Corner9Slice = CoD.Corner9Slice.new( f1_arg0, f1_arg1, 0, 0, 359, 429, 0, 0, -2, 32 ) --[[ @ 0]]
	Corner9Slice:setAlpha( 0.75 ) --[[ @ 0]]
	self:addElement( Corner9Slice ) --[[ @ 0]]
	self.Corner9Slice = Corner9Slice --[[ @ 0]]
	
	local Text = LUI.UIText.new( 0, 0, 254, 534, 0, 0, 1, 31 ) --[[ @ 0]]
	Text:setTTF( "0arame_mono_stencil" ) --[[ @ 0]]
	Text:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_90D57B1E92D39D7" ) ) --[[ @ 0]]
	Text:setShaderVector( 0, 0.8, 0, 0, 0 ) --[[ @ 0]]
	Text:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	Text:setShaderVector( 2, 1, 1, 1, 0.35 ) --[[ @ 0]]
	Text:setAlignment( Enum[@"LUIAlignment"][@"hash_1FEEB12BCB0D7041"] ) --[[ @ 0]]
	Text:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	Text:subscribeToGlobalModel( f1_arg1, "HUDItems", "yaw", function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			Text:setText( CoD.BaseUtility.StringModulo( 360, StringAdd( 360, StringMultiply( -1, CoD.BaseUtility.RoundFraction( 0, f2_local0 ) ) ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Text ) --[[ @ 0]]
	self.Text = Text --[[ @ 0]]
	
	local HorizontalCompassItems = LUI.UIImage.new( 0, 1, 22, -22, 0, 0, 62, 108 ) --[[ @ 0]]
	HorizontalCompassItems:setRGB( 0, 0, 0 ) --[[ @ 0]]
	HorizontalCompassItems:setAlpha( 0.5 ) --[[ @ 0]]
	HorizontalCompassItems:setupHorizontalCompassItems( 180 ) --[[ @ 0]]
	self:addElement( HorizontalCompassItems ) --[[ @ 0]]
	self.HorizontalCompassItems = HorizontalCompassItems --[[ @ 0]]
	
	local HorizontalCompassItemsAdd = LUI.UIImage.new( 0, 1, 22, -22, 0, 0, 62, 108 ) --[[ @ 0]]
	HorizontalCompassItemsAdd:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_F755127C95CF5B6" ) ) --[[ @ 0]]
	HorizontalCompassItemsAdd:setShaderVector( 0, 1, 0, 0, 0 ) --[[ @ 0]]
	HorizontalCompassItemsAdd:setupHorizontalCompassItems( 180 ) --[[ @ 0]]
	self:addElement( HorizontalCompassItemsAdd ) --[[ @ 0]]
	self.HorizontalCompassItemsAdd = HorizontalCompassItemsAdd --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				local f3_local0 --[[ @ 0]]
				if not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_4B8E9B69F4B87954"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_5D3ABF9A2753CE40"] ) and Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_7ADC477DDE486DD7"] ) then
					f3_local0 = Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"] ) --[[ @ 0]]
					if f3_local0 then
					
					else
						return f3_local0
					end
				end
				f3_local0 = not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_68A5E996D4528DA2"] ) --[[ @ 0]]
			end
		},
		{
			stateName = "HiddenPC",
			condition = function ( menu, element, event )
				return CoD.WZUtility.IsPcInventoryOpen( f1_arg1 )
			end
		},
		{
			stateName = "HiddenPreference",
			condition = function ( menu, element, event )
				return CoD.WZUtility.IsWarzoneUIHidden( f1_arg1, "wzHideCompassUI", "warzoneHideCompass" )
			end
		}
	} ) --[[ @ 0]]
	local f1_local7 = self --[[ @ 0]]
	local f1_local8 = self.subscribeToModel --[[ @ 0]]
	local f1_local9 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local8( f1_local7, f1_local9["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_4B8E9B69F4B87954"]], function ( f6_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f6_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_4B8E9B69F4B87954"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = self --[[ @ 0]]
	f1_local8 = self.subscribeToModel --[[ @ 0]]
	f1_local9 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local8( f1_local7, f1_local9["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5D3ABF9A2753CE40"]], function ( f7_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f7_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5D3ABF9A2753CE40"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = self --[[ @ 0]]
	f1_local8 = self.subscribeToModel --[[ @ 0]]
	f1_local9 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local8( f1_local7, f1_local9["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_7ADC477DDE486DD7"]], function ( f8_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f8_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_7ADC477DDE486DD7"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = self --[[ @ 0]]
	f1_local8 = self.subscribeToModel --[[ @ 0]]
	f1_local9 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local8( f1_local7, f1_local9["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"]], function ( f9_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f9_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = self --[[ @ 0]]
	f1_local8 = self.subscribeToModel --[[ @ 0]]
	f1_local9 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local8( f1_local7, f1_local9["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_68A5E996D4528DA2"]], function ( f10_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f10_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_68A5E996D4528DA2"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:appendEventHandler( "input_source_changed", function ( f11_arg0, f11_arg1 )
		f11_arg1.menu = f11_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( self, f11_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	f1_local7 = self --[[ @ 0]]
	f1_local8 = self.subscribeToModel --[[ @ 0]]
	f1_local9 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local8( f1_local7, f1_local9.LastInput, function ( f12_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f12_arg0:get(),
			modelName = "LastInput"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = self --[[ @ 0]]
	f1_local8 = self.subscribeToModel --[[ @ 0]]
	f1_local9 = DataSources.WarzoneInventory.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local8( f1_local7, f1_local9.isOpen, function ( f13_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f13_arg0:get(),
			modelName = "isOpen"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = self --[[ @ 0]]
	f1_local8 = self.subscribeToModel --[[ @ 0]]
	f1_local9 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local8( f1_local7, f1_local9.PlayerSettingsUpdate, function ( f14_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f14_arg0:get(),
			modelName = "PlayerSettingsUpdate"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	HorizontalCompassDirections.id = "HorizontalCompassDirections" --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.WZHorizontalCompass.__resetProperties = function ( f15_arg0 )
	f15_arg0.HorizontalCompassItemsAdd:completeAnimation() --[[ @ 0]]
	f15_arg0.HorizontalCompassItems:completeAnimation() --[[ @ 0]]
	f15_arg0.Text:completeAnimation() --[[ @ 0]]
	f15_arg0.Corner9Slice:completeAnimation() --[[ @ 0]]
	f15_arg0.HorizontalCompassDirections:completeAnimation() --[[ @ 0]]
	f15_arg0.Backer:completeAnimation() --[[ @ 0]]
	f15_arg0.HorizontalCompassItemsAdd:setAlpha( 1 ) --[[ @ 0]]
	f15_arg0.HorizontalCompassItems:setAlpha( 0.5 ) --[[ @ 0]]
	f15_arg0.Text:setAlpha( 1 ) --[[ @ 0]]
	f15_arg0.Corner9Slice:setAlpha( 0.75 ) --[[ @ 0]]
	f15_arg0.HorizontalCompassDirections:setAlpha( 1 ) --[[ @ 0]]
	f15_arg0.Backer:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.WZHorizontalCompass.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f16_arg0, f16_arg1 )
			f16_arg0:__resetProperties() --[[ @ 0]]
			f16_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	Hidden = {
		DefaultClip = function ( f17_arg0, f17_arg1 )
			f17_arg0:__resetProperties() --[[ @ 0]]
			f17_arg0:setupElementClipCounter( 6 ) --[[ @ 0]]
			f17_arg0.Backer:completeAnimation() --[[ @ 0]]
			f17_arg0.Backer:setAlpha( 0 ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.Backer ) --[[ @ 0]]
			f17_arg0.HorizontalCompassDirections:completeAnimation() --[[ @ 0]]
			f17_arg0.HorizontalCompassDirections:setAlpha( 0 ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.HorizontalCompassDirections ) --[[ @ 0]]
			f17_arg0.Corner9Slice:completeAnimation() --[[ @ 0]]
			f17_arg0.Corner9Slice:setAlpha( 0 ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.Corner9Slice ) --[[ @ 0]]
			f17_arg0.Text:completeAnimation() --[[ @ 0]]
			f17_arg0.Text:setAlpha( 0 ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.Text ) --[[ @ 0]]
			f17_arg0.HorizontalCompassItems:completeAnimation() --[[ @ 0]]
			f17_arg0.HorizontalCompassItems:setAlpha( 0 ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.HorizontalCompassItems ) --[[ @ 0]]
			f17_arg0.HorizontalCompassItemsAdd:completeAnimation() --[[ @ 0]]
			f17_arg0.HorizontalCompassItemsAdd:setAlpha( 0 ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.HorizontalCompassItemsAdd ) --[[ @ 0]]
		end
	},
	HiddenPC = {
		DefaultClip = function ( f18_arg0, f18_arg1 )
			f18_arg0:__resetProperties() --[[ @ 0]]
			f18_arg0:setupElementClipCounter( 6 ) --[[ @ 0]]
			f18_arg0.Backer:completeAnimation() --[[ @ 0]]
			f18_arg0.Backer:setAlpha( 0 ) --[[ @ 0]]
			f18_arg0.clipFinished( f18_arg0.Backer ) --[[ @ 0]]
			f18_arg0.HorizontalCompassDirections:completeAnimation() --[[ @ 0]]
			f18_arg0.HorizontalCompassDirections:setAlpha( 0 ) --[[ @ 0]]
			f18_arg0.clipFinished( f18_arg0.HorizontalCompassDirections ) --[[ @ 0]]
			f18_arg0.Corner9Slice:completeAnimation() --[[ @ 0]]
			f18_arg0.Corner9Slice:setAlpha( 0 ) --[[ @ 0]]
			f18_arg0.clipFinished( f18_arg0.Corner9Slice ) --[[ @ 0]]
			f18_arg0.Text:completeAnimation() --[[ @ 0]]
			f18_arg0.Text:setAlpha( 0 ) --[[ @ 0]]
			f18_arg0.clipFinished( f18_arg0.Text ) --[[ @ 0]]
			f18_arg0.HorizontalCompassItems:completeAnimation() --[[ @ 0]]
			f18_arg0.HorizontalCompassItems:setAlpha( 0 ) --[[ @ 0]]
			f18_arg0.clipFinished( f18_arg0.HorizontalCompassItems ) --[[ @ 0]]
			f18_arg0.HorizontalCompassItemsAdd:completeAnimation() --[[ @ 0]]
			f18_arg0.HorizontalCompassItemsAdd:setAlpha( 0 ) --[[ @ 0]]
			f18_arg0.clipFinished( f18_arg0.HorizontalCompassItemsAdd ) --[[ @ 0]]
		end
	},
	HiddenPreference = {
		DefaultClip = function ( f19_arg0, f19_arg1 )
			f19_arg0:__resetProperties() --[[ @ 0]]
			f19_arg0:setupElementClipCounter( 6 ) --[[ @ 0]]
			f19_arg0.Backer:completeAnimation() --[[ @ 0]]
			f19_arg0.Backer:setAlpha( 0 ) --[[ @ 0]]
			f19_arg0.clipFinished( f19_arg0.Backer ) --[[ @ 0]]
			f19_arg0.HorizontalCompassDirections:completeAnimation() --[[ @ 0]]
			f19_arg0.HorizontalCompassDirections:setAlpha( 0 ) --[[ @ 0]]
			f19_arg0.clipFinished( f19_arg0.HorizontalCompassDirections ) --[[ @ 0]]
			f19_arg0.Corner9Slice:completeAnimation() --[[ @ 0]]
			f19_arg0.Corner9Slice:setAlpha( 0 ) --[[ @ 0]]
			f19_arg0.clipFinished( f19_arg0.Corner9Slice ) --[[ @ 0]]
			f19_arg0.Text:completeAnimation() --[[ @ 0]]
			f19_arg0.Text:setAlpha( 0 ) --[[ @ 0]]
			f19_arg0.clipFinished( f19_arg0.Text ) --[[ @ 0]]
			f19_arg0.HorizontalCompassItems:completeAnimation() --[[ @ 0]]
			f19_arg0.HorizontalCompassItems:setAlpha( 0 ) --[[ @ 0]]
			f19_arg0.clipFinished( f19_arg0.HorizontalCompassItems ) --[[ @ 0]]
			f19_arg0.HorizontalCompassItemsAdd:completeAnimation() --[[ @ 0]]
			f19_arg0.HorizontalCompassItemsAdd:setAlpha( 0 ) --[[ @ 0]]
			f19_arg0.clipFinished( f19_arg0.HorizontalCompassItemsAdd ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.WZHorizontalCompass.__onClose = function ( f20_arg0 )
	f20_arg0.HorizontalCompassDirections:close() --[[ @ 0]]
	f20_arg0.Corner9Slice:close() --[[ @ 0]]
	f20_arg0.Text:close() --[[ @ 0]]
end
 --[[ @ 0]]
