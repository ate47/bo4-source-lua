-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:33
require( "x64:66fdeb9eb1239c18" ) --[[ @ 0]]
require( "x64:58d2cf73e51e9eb2" ) --[[ @ 0]]
require( "x64:3445c36edf7e511d" ) --[[ @ 0]]
require( "x64:220629a2e70ddf60" ) --[[ @ 0]]

CoD.ButtonFrame_MeritRecord = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.ButtonFrame_MeritRecord.__defaultWidth = 647 --[[ @ 0]]
CoD.ButtonFrame_MeritRecord.__defaultHeight = 381 --[[ @ 0]]
CoD.ButtonFrame_MeritRecord.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	CoD.PrestigeUtility.ClearHasPrestigedStatus( self, f1_arg1 ) --[[ @ 0]]
	self:setClass( CoD.ButtonFrame_MeritRecord ) --[[ @ 0]]
	self.id = "ButtonFrame_MeritRecord" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local RankInfo = CoD.ButtonFrame_RankInfo.new( f1_arg0, f1_arg1, 0.5, 0.5, -200, 200, 0.5, 0.5, -177, 23 ) --[[ @ 0]]
	RankInfo:mergeStateConditions( {
		{
			stateName = "Warzone",
			condition = function ( menu, element, event )
				return not IsAtXPCap( f1_arg1 )
			end
		},
		{
			stateName = "WarzoneMaxRank",
			condition = function ( menu, element, event )
				return IsAtXPCap( f1_arg1 )
			end
		}
	} ) --[[ @ 0]]
	RankInfo.LevelText:setText( LocalizeToUpperString( @"hash_53547050A22D0BD0" ) ) --[[ @ 0]]
	RankInfo:subscribeToGlobalModel( f1_arg1, "PrestigeMenuInfo", "hasPrestiged", function ( model )
		local f4_local0 = model:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			RankInfo.RankText:setRGB( CoD.PlayerStatsUtility.GetRankColor( f1_arg0, f4_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	RankInfo:subscribeToGlobalModel( f1_arg1, "PrestigeMenuInfo", "hasPrestiged", function ( model )
		local f5_local0 = model:get() --[[ @ 0]]
		if f5_local0 ~= nil then
			RankInfo.RankText:setText( CoD.PlayerStatsUtility.GetRank( f1_arg0, f5_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	RankInfo:subscribeToGlobalModel( f1_arg1, "PrestigeMenuInfo", "hasPrestiged", function ( model )
		local f6_local0 = model:get() --[[ @ 0]]
		if f6_local0 ~= nil then
			RankInfo.RankIconLarge:setImage( RegisterImage( CoD.PlayerStatsUtility.GetRankIconLarge( f1_arg0, f1_arg1, f6_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	RankInfo:subscribeToGlobalModel( f1_arg1, "PrestigeMenuInfo", "hasPrestiged", function ( model )
		local f7_local0 = model:get() --[[ @ 0]]
		if f7_local0 ~= nil then
			RankInfo.RankTitle:setText( LocalizeToUpperString( CoD.PrestigeUtility.GetPrestigeMenuRankTitle( f1_arg0, f7_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( RankInfo ) --[[ @ 0]]
	self.RankInfo = RankInfo --[[ @ 0]]
	
	local Scorebacking = LUI.UIImage.new( 0.5, 0.5, -313, 313, 0, 0, 211, 371 ) --[[ @ 0]]
	Scorebacking:setRGB( ColorSet.T8__OFF__GRAY.r, ColorSet.T8__OFF__GRAY.g, ColorSet.T8__OFF__GRAY.b ) --[[ @ 0]]
	Scorebacking:setAlpha( 0.04 ) --[[ @ 0]]
	self:addElement( Scorebacking ) --[[ @ 0]]
	self.Scorebacking = Scorebacking --[[ @ 0]]
	
	local MeritsText = LUI.UIText.new( 0, 0, 256, 373, 0, 0, 189.5, 207.5 ) --[[ @ 0]]
	MeritsText:setRGB( ColorSet.T8__OFF__GRAY.r, ColorSet.T8__OFF__GRAY.g, ColorSet.T8__OFF__GRAY.b ) --[[ @ 0]]
	MeritsText:setText( LocalizeToUpperString( @"hash_41A6986D07D40B76" ) ) --[[ @ 0]]
	MeritsText:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	MeritsText:setLetterSpacing( 1 ) --[[ @ 0]]
	MeritsText:setAlignment( Enum[@"LUIAlignment"][@"hash_1FEEB12BCB0D7041"] ) --[[ @ 0]]
	self:addElement( MeritsText ) --[[ @ 0]]
	self.MeritsText = MeritsText --[[ @ 0]]
	
	local TotalMeritsText = LUI.UIText.new( 0, 0, 496, 635, 0, 0, 189.5, 207.5 ) --[[ @ 0]]
	TotalMeritsText:setRGB( ColorSet.T8__OFF__GRAY.r, ColorSet.T8__OFF__GRAY.g, ColorSet.T8__OFF__GRAY.b ) --[[ @ 0]]
	TotalMeritsText:setText( LocalizeToUpperString( @"hash_32FD7986ED047F25" ) ) --[[ @ 0]]
	TotalMeritsText:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	TotalMeritsText:setLetterSpacing( 1 ) --[[ @ 0]]
	TotalMeritsText:setAlignment( Enum[@"LUIAlignment"][@"hash_1FEEB12BCB0D7041"] ) --[[ @ 0]]
	TotalMeritsText:setAlignment( Enum[@"LUIAlignment"][@"hash_670510683C22104B"] ) --[[ @ 0]]
	self:addElement( TotalMeritsText ) --[[ @ 0]]
	self.TotalMeritsText = TotalMeritsText --[[ @ 0]]
	
	local KillMerits = CoD.PlayerStatsMerits.new( f1_arg0, f1_arg1, 0, 0, 23, 523, 0, 0, 218.5, 237.5 ) --[[ @ 0]]
	KillMerits.TypeText:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_16B234CB46B5ACD4" ) ) --[[ @ 0]]
	KillMerits:subscribeToGlobalModel( f1_arg1, "PlayerBarracksMerits", "kills", function ( model )
		KillMerits:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( KillMerits ) --[[ @ 0]]
	self.KillMerits = KillMerits --[[ @ 0]]
	
	local PlacementMerits = CoD.PlayerStatsMerits.new( f1_arg0, f1_arg1, 0, 0, 23, 523, 0, 0, 247, 265 ) --[[ @ 0]]
	PlacementMerits.TypeText:setText( LocalizeToUpperString( @"hash_6971770DEFE5452D" ) ) --[[ @ 0]]
	PlacementMerits:subscribeToGlobalModel( f1_arg1, "PlayerBarracksMerits", "top5", function ( model )
		PlacementMerits:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( PlacementMerits ) --[[ @ 0]]
	self.PlacementMerits = PlacementMerits --[[ @ 0]]
	
	local WinMerits = CoD.PlayerStatsMerits.new( f1_arg0, f1_arg1, 0, 0, 23, 523, 0, 0, 276, 294 ) --[[ @ 0]]
	WinMerits.TypeText:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_4585891326C1258C" ) ) --[[ @ 0]]
	WinMerits:subscribeToGlobalModel( f1_arg1, "PlayerBarracksMerits", "wins", function ( model )
		WinMerits:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( WinMerits ) --[[ @ 0]]
	self.WinMerits = WinMerits --[[ @ 0]]
	
	local ChallengeMerits = CoD.PlayerStatsMerits.new( f1_arg0, f1_arg1, 0, 0, 23, 523, 0, 0, 305, 323 ) --[[ @ 0]]
	ChallengeMerits.TypeText:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_99CD580A52B2E53" ) ) --[[ @ 0]]
	ChallengeMerits:subscribeToGlobalModel( f1_arg1, "PlayerBarracksMerits", "challenges", function ( model )
		ChallengeMerits:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( ChallengeMerits ) --[[ @ 0]]
	self.ChallengeMerits = ChallengeMerits --[[ @ 0]]
	
	local TotalMeritsValue = LUI.UIText.new( 0, 0, 463.5, 663.5, 0, 0, 259.5, 293.5 ) --[[ @ 0]]
	TotalMeritsValue:setRGB( 0.69, 0.56, 0.04 ) --[[ @ 0]]
	TotalMeritsValue.__String_Reference = function ()
		TotalMeritsValue:setText( CoD.PlayerStatsUtility.GetPlayerStorageStat( f1_arg0, @"rankxp", "" ) ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	TotalMeritsValue.__String_Reference() --[[ @ 0]]
	TotalMeritsValue:setTTF( "default" ) --[[ @ 0]]
	TotalMeritsValue:setLetterSpacing( 2 ) --[[ @ 0]]
	TotalMeritsValue:setAlignment( Enum[@"LUIAlignment"][@"hash_1FEEB12BCB0D7041"] ) --[[ @ 0]]
	self:addElement( TotalMeritsValue ) --[[ @ 0]]
	self.TotalMeritsValue = TotalMeritsValue --[[ @ 0]]
	
	local RankProgress = CoD.ButtonFrame_XPMeterInfo.new( f1_arg0, f1_arg1, 0.5, 0.5, -300, 302, 0.5, 0.5, 129.5, 180.5 ) --[[ @ 0]]
	RankProgress.CurrentXPText:setText( "" ) --[[ @ 0]]
	RankProgress:subscribeToGlobalModel( f1_arg1, "PrestigeMenuInfo", "hasPrestiged", function ( model )
		local f13_local0 = model:get() --[[ @ 0]]
		if f13_local0 ~= nil then
			RankProgress.CurrentXPMeter.Meter:setShaderVector( 0, CoD.PlayerStatsUtility.GetCurrentRankProgress( f1_arg0, CoD.GetVectorComponentFromString( f13_local0, 1 ), CoD.GetVectorComponentFromString( f13_local0, 2 ), CoD.GetVectorComponentFromString( f13_local0, 3 ), CoD.GetVectorComponentFromString( f13_local0, 4 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	RankProgress:subscribeToGlobalModel( f1_arg1, "PrestigeMenuInfo", "hasPrestiged", function ( model )
		local f14_local0 = model:get() --[[ @ 0]]
		if f14_local0 ~= nil then
			RankProgress.CurrentXPMeter.MeterGlow:setShaderVector( 0, CoD.PlayerStatsUtility.GetCurrentRankProgress( f1_arg0, CoD.GetVectorComponentFromString( f14_local0, 1 ), CoD.GetVectorComponentFromString( f14_local0, 2 ), CoD.GetVectorComponentFromString( f14_local0, 3 ), CoD.GetVectorComponentFromString( f14_local0, 4 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	RankProgress:subscribeToGlobalModel( f1_arg1, "PrestigeMenuInfo", "hasPrestiged", function ( model )
		local f15_local0 = model:get() --[[ @ 0]]
		if f15_local0 ~= nil then
			RankProgress.NeededXPText:setText( Engine[@"hash_4F9F1239CFD921FE"]( CoD.PrestigeUtility.GetNextLevelXPText( f1_arg0, f1_arg1, CoD.PlayerStatsUtility.GetXPToNextRank( f1_arg0, f15_local0 ) ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	RankProgress:subscribeToGlobalModel( f1_arg1, "PrestigeMenuInfo", "hasPrestiged", function ( model )
		local f16_local0 = model:get() --[[ @ 0]]
		if f16_local0 ~= nil then
			RankProgress.RankIcon:setImage( RegisterImage( CoD.PlayerStatsUtility.GetNextRankIcon( f1_arg0, f16_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( RankProgress ) --[[ @ 0]]
	self.RankProgress = RankProgress --[[ @ 0]]
	
	local Divider = LUI.UIImage.new( 0, 0, 23.5, 483.5, 0, 0, 241, 242 ) --[[ @ 0]]
	Divider:setRGB( ColorSet.T8__OFF__GRAY.r, ColorSet.T8__OFF__GRAY.g, ColorSet.T8__OFF__GRAY.b ) --[[ @ 0]]
	Divider:setAlpha( 0.08 ) --[[ @ 0]]
	self:addElement( Divider ) --[[ @ 0]]
	self.Divider = Divider --[[ @ 0]]
	
	local Divider2 = LUI.UIImage.new( 0, 0, 23.5, 483.5, 0, 0, 270, 271 ) --[[ @ 0]]
	Divider2:setRGB( ColorSet.T8__OFF__GRAY.r, ColorSet.T8__OFF__GRAY.g, ColorSet.T8__OFF__GRAY.b ) --[[ @ 0]]
	Divider2:setAlpha( 0.08 ) --[[ @ 0]]
	self:addElement( Divider2 ) --[[ @ 0]]
	self.Divider2 = Divider2 --[[ @ 0]]
	
	local Divider3 = LUI.UIImage.new( 0, 0, 23.5, 483.5, 0, 0, 299, 300 ) --[[ @ 0]]
	Divider3:setRGB( ColorSet.T8__OFF__GRAY.r, ColorSet.T8__OFF__GRAY.g, ColorSet.T8__OFF__GRAY.b ) --[[ @ 0]]
	Divider3:setAlpha( 0.08 ) --[[ @ 0]]
	self:addElement( Divider3 ) --[[ @ 0]]
	self.Divider3 = Divider3 --[[ @ 0]]
	
	local Divider4 = LUI.UIImage.new( 0, 0, 23.5, 483.5, 0, 0, 327, 328 ) --[[ @ 0]]
	Divider4:setRGB( ColorSet.T8__OFF__GRAY.r, ColorSet.T8__OFF__GRAY.g, ColorSet.T8__OFF__GRAY.b ) --[[ @ 0]]
	Divider4:setAlpha( 0.08 ) --[[ @ 0]]
	self:addElement( Divider4 ) --[[ @ 0]]
	self.Divider4 = Divider4 --[[ @ 0]]
	
	local BracketTop = LUI.UIImage.new( 0.5, 0.5, -316, 316, 0, 0, 207.5, 215.5 ) --[[ @ 0]]
	BracketTop:setRGB( ColorSet.T8__OFF__GRAY.r, ColorSet.T8__OFF__GRAY.g, ColorSet.T8__OFF__GRAY.b ) --[[ @ 0]]
	BracketTop:setZRot( 180 ) --[[ @ 0]]
	BracketTop:setImage( RegisterImage( @"hash_4C325BED3F226657" ) ) --[[ @ 0]]
	BracketTop:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_add" ) ) --[[ @ 0]]
	BracketTop:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	BracketTop:setupNineSliceShader( 16, 4 ) --[[ @ 0]]
	self:addElement( BracketTop ) --[[ @ 0]]
	self.BracketTop = BracketTop --[[ @ 0]]
	
	local MaxLevelNotify = CoD.ButtonFrame_MaxLevelNotify.new( f1_arg0, f1_arg1, 0, 0, 23.5, 623.5, 0, 0, 247, 347 ) --[[ @ 0]]
	MaxLevelNotify:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( MaxLevelNotify ) --[[ @ 0]]
	self.MaxLevelNotify = MaxLevelNotify --[[ @ 0]]
	
	local f1_local17 = TotalMeritsValue --[[ @ 0]]
	local f1_local18 = TotalMeritsValue.subscribeToModel --[[ @ 0]]
	local f1_local19 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local18( f1_local17, f1_local19["PrestigeMenuInfo.hasPrestiged"], TotalMeritsValue.__String_Reference ) --[[ @ 0]]
	self:mergeStateConditions( {
		{
			stateName = "PrestigeReady",
			condition = function ( menu, element, event )
				local f17_local0 = IsAtXPCap( f1_arg1 ) --[[ @ 0]]
				if f17_local0 then
					if not IsMaxPrestigeLevel( f1_arg1 ) then
						f17_local0 = not CoD.PrestigeUtility.ShouldHidePrestigeButton( f1_arg1 ) --[[ @ 0]]
					else
						f17_local0 = false --[[ @ 0]]
					end
				end
				return f17_local0
			end
		}
	} ) --[[ @ 0]]
	self:subscribeToGlobalModel( f1_arg1, "PrestigeMenuInfo", "hasPrestiged", function ( model )
		local f18_local0 = self --[[ @ 0]]
		UpdateSelfState( self, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.ButtonFrame_MeritRecord.__resetProperties = function ( f19_arg0 )
	f19_arg0.MaxLevelNotify:completeAnimation() --[[ @ 0]]
	f19_arg0.BracketTop:completeAnimation() --[[ @ 0]]
	f19_arg0.Divider4:completeAnimation() --[[ @ 0]]
	f19_arg0.Divider3:completeAnimation() --[[ @ 0]]
	f19_arg0.Divider2:completeAnimation() --[[ @ 0]]
	f19_arg0.Divider:completeAnimation() --[[ @ 0]]
	f19_arg0.RankProgress:completeAnimation() --[[ @ 0]]
	f19_arg0.TotalMeritsValue:completeAnimation() --[[ @ 0]]
	f19_arg0.ChallengeMerits:completeAnimation() --[[ @ 0]]
	f19_arg0.WinMerits:completeAnimation() --[[ @ 0]]
	f19_arg0.PlacementMerits:completeAnimation() --[[ @ 0]]
	f19_arg0.KillMerits:completeAnimation() --[[ @ 0]]
	f19_arg0.TotalMeritsText:completeAnimation() --[[ @ 0]]
	f19_arg0.MeritsText:completeAnimation() --[[ @ 0]]
	f19_arg0.Scorebacking:completeAnimation() --[[ @ 0]]
	f19_arg0.MaxLevelNotify:setAlpha( 0 ) --[[ @ 0]]
	f19_arg0.BracketTop:setAlpha( 1 ) --[[ @ 0]]
	f19_arg0.Divider4:setAlpha( 0.08 ) --[[ @ 0]]
	f19_arg0.Divider3:setAlpha( 0.08 ) --[[ @ 0]]
	f19_arg0.Divider2:setAlpha( 0.08 ) --[[ @ 0]]
	f19_arg0.Divider:setAlpha( 0.08 ) --[[ @ 0]]
	f19_arg0.RankProgress:setAlpha( 1 ) --[[ @ 0]]
	f19_arg0.TotalMeritsValue:setAlpha( 1 ) --[[ @ 0]]
	f19_arg0.ChallengeMerits:setAlpha( 1 ) --[[ @ 0]]
	f19_arg0.WinMerits:setAlpha( 1 ) --[[ @ 0]]
	f19_arg0.PlacementMerits:setAlpha( 1 ) --[[ @ 0]]
	f19_arg0.KillMerits:setAlpha( 1 ) --[[ @ 0]]
	f19_arg0.TotalMeritsText:setAlpha( 1 ) --[[ @ 0]]
	f19_arg0.MeritsText:setAlpha( 1 ) --[[ @ 0]]
	f19_arg0.Scorebacking:setAlpha( 0.04 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ButtonFrame_MeritRecord.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f20_arg0, f20_arg1 )
			f20_arg0:__resetProperties() --[[ @ 0]]
			f20_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	PrestigeReady = {
		DefaultClip = function ( f21_arg0, f21_arg1 )
			f21_arg0:__resetProperties() --[[ @ 0]]
			f21_arg0:setupElementClipCounter( 15 ) --[[ @ 0]]
			f21_arg0.Scorebacking:completeAnimation() --[[ @ 0]]
			f21_arg0.Scorebacking:setAlpha( 0 ) --[[ @ 0]]
			f21_arg0.clipFinished( f21_arg0.Scorebacking ) --[[ @ 0]]
			f21_arg0.MeritsText:completeAnimation() --[[ @ 0]]
			f21_arg0.MeritsText:setAlpha( 0 ) --[[ @ 0]]
			f21_arg0.clipFinished( f21_arg0.MeritsText ) --[[ @ 0]]
			f21_arg0.TotalMeritsText:completeAnimation() --[[ @ 0]]
			f21_arg0.TotalMeritsText:setAlpha( 0 ) --[[ @ 0]]
			f21_arg0.clipFinished( f21_arg0.TotalMeritsText ) --[[ @ 0]]
			f21_arg0.KillMerits:completeAnimation() --[[ @ 0]]
			f21_arg0.KillMerits:setAlpha( 0 ) --[[ @ 0]]
			f21_arg0.clipFinished( f21_arg0.KillMerits ) --[[ @ 0]]
			f21_arg0.PlacementMerits:completeAnimation() --[[ @ 0]]
			f21_arg0.PlacementMerits:setAlpha( 0 ) --[[ @ 0]]
			f21_arg0.clipFinished( f21_arg0.PlacementMerits ) --[[ @ 0]]
			f21_arg0.WinMerits:completeAnimation() --[[ @ 0]]
			f21_arg0.WinMerits:setAlpha( 0 ) --[[ @ 0]]
			f21_arg0.clipFinished( f21_arg0.WinMerits ) --[[ @ 0]]
			f21_arg0.ChallengeMerits:completeAnimation() --[[ @ 0]]
			f21_arg0.ChallengeMerits:setAlpha( 0 ) --[[ @ 0]]
			f21_arg0.clipFinished( f21_arg0.ChallengeMerits ) --[[ @ 0]]
			f21_arg0.TotalMeritsValue:completeAnimation() --[[ @ 0]]
			f21_arg0.TotalMeritsValue:setAlpha( 0 ) --[[ @ 0]]
			f21_arg0.clipFinished( f21_arg0.TotalMeritsValue ) --[[ @ 0]]
			f21_arg0.RankProgress:completeAnimation() --[[ @ 0]]
			f21_arg0.RankProgress:setAlpha( 0 ) --[[ @ 0]]
			f21_arg0.clipFinished( f21_arg0.RankProgress ) --[[ @ 0]]
			f21_arg0.Divider:completeAnimation() --[[ @ 0]]
			f21_arg0.Divider:setAlpha( 0 ) --[[ @ 0]]
			f21_arg0.clipFinished( f21_arg0.Divider ) --[[ @ 0]]
			f21_arg0.Divider2:completeAnimation() --[[ @ 0]]
			f21_arg0.Divider2:setAlpha( 0 ) --[[ @ 0]]
			f21_arg0.clipFinished( f21_arg0.Divider2 ) --[[ @ 0]]
			f21_arg0.Divider3:completeAnimation() --[[ @ 0]]
			f21_arg0.Divider3:setAlpha( 0 ) --[[ @ 0]]
			f21_arg0.clipFinished( f21_arg0.Divider3 ) --[[ @ 0]]
			f21_arg0.Divider4:completeAnimation() --[[ @ 0]]
			f21_arg0.Divider4:setAlpha( 0 ) --[[ @ 0]]
			f21_arg0.clipFinished( f21_arg0.Divider4 ) --[[ @ 0]]
			f21_arg0.BracketTop:completeAnimation() --[[ @ 0]]
			f21_arg0.BracketTop:setAlpha( 0 ) --[[ @ 0]]
			f21_arg0.clipFinished( f21_arg0.BracketTop ) --[[ @ 0]]
			f21_arg0.MaxLevelNotify:completeAnimation() --[[ @ 0]]
			f21_arg0.MaxLevelNotify:setAlpha( 1 ) --[[ @ 0]]
			f21_arg0.clipFinished( f21_arg0.MaxLevelNotify ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.ButtonFrame_MeritRecord.__onClose = function ( f22_arg0 )
	f22_arg0.RankInfo:close() --[[ @ 0]]
	f22_arg0.KillMerits:close() --[[ @ 0]]
	f22_arg0.PlacementMerits:close() --[[ @ 0]]
	f22_arg0.WinMerits:close() --[[ @ 0]]
	f22_arg0.ChallengeMerits:close() --[[ @ 0]]
	f22_arg0.TotalMeritsValue:close() --[[ @ 0]]
	f22_arg0.RankProgress:close() --[[ @ 0]]
	f22_arg0.MaxLevelNotify:close() --[[ @ 0]]
end
 --[[ @ 0]]
