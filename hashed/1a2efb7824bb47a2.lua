-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:48
require( "x64:6d988b567be037bc" ) --[[ @ 0]]
require( "x64:7ff46188cc1c3579" ) --[[ @ 0]]
require( "x64:5c0e24f3dd0285d0" ) --[[ @ 0]]
require( "x64:368036bda8abbe94" ) --[[ @ 0]]
require( "x64:c01e8478a7d92cd" ) --[[ @ 0]]
require( "x64:26735e84e8dd1117" ) --[[ @ 0]]
require( "x64:7767ebae822b5b13" ) --[[ @ 0]]
require( "x64:15d80cb371475b19" ) --[[ @ 0]]
require( "ui/uieditor/widgets/scoreboard/tabbedscoreboardfuibox" ) --[[ @ 0]]

CoD.ContractDetailsPanelSunset = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.ContractDetailsPanelSunset.__defaultWidth = 776 --[[ @ 0]]
CoD.ContractDetailsPanelSunset.__defaultHeight = 727 --[[ @ 0]]
CoD.ContractDetailsPanelSunset.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.ContractDetailsPanelSunset ) --[[ @ 0]]
	self.id = "ContractDetailsPanelSunset" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local Backer = CoD.ContractDetailsPanelBacker.new( f1_arg0, f1_arg1, 0.5, 0.5, -388, 388, 0.5, 0.5, -363.5, 363.5 ) --[[ @ 0]]
	self:addElement( Backer ) --[[ @ 0]]
	self.Backer = Backer --[[ @ 0]]
	
	local f1_local2 = nil --[[ @ 0]]
	self.RewardCount = LUI.UIElement.createFake() --[[ @ 0]]
	local RewardCountPC = nil --[[ @ 0]]
	
	RewardCountPC = LUI.UIText.new( 0.5, 0.5, -365.5, 364.5, 1, 1, -42, -18 ) --[[ @ 0]]
	RewardCountPC:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	RewardCountPC:setText( "" ) --[[ @ 0]]
	RewardCountPC:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	RewardCountPC:setLetterSpacing( 2 ) --[[ @ 0]]
	RewardCountPC:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	self:addElement( RewardCountPC ) --[[ @ 0]]
	self.RewardCountPC = RewardCountPC --[[ @ 0]]
	
	local Info = CoD.ContractDetailsPanelInfo.new( f1_arg0, f1_arg1, 0, 0, 0, 804, 0, 0, 54.5, 463.5 ) --[[ @ 0]]
	Info:linkToElementModel( self, nil, false, function ( model )
		Info:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( Info ) --[[ @ 0]]
	self.Info = Info --[[ @ 0]]
	
	local Header = CoD.ContractDetailsPanelHeader.new( f1_arg0, f1_arg1, 0, 0, -4, 764, 0, 0, 29, 65 ) --[[ @ 0]]
	Header:linkToElementModel( self, nil, false, function ( model )
		Header:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( Header ) --[[ @ 0]]
	self.Header = Header --[[ @ 0]]
	
	local ContractProgressBar = CoD.ContractProgressBar.new( f1_arg0, f1_arg1, 0.5, 0.5, -172, 172, 0, 0, 421, 439 ) --[[ @ 0]]
	ContractProgressBar:mergeStateConditions( {
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueTrue( self, f1_arg1, "complete" )
			end
		}
	} ) --[[ @ 0]]
	ContractProgressBar:linkToElementModel( ContractProgressBar, "complete", true, function ( model )
		f1_arg0:updateElementState( ContractProgressBar, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "complete"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	ContractProgressBar:setScale( 1.5, 1.5 ) --[[ @ 0]]
	ContractProgressBar:linkToElementModel( self, nil, false, function ( model )
		ContractProgressBar:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( ContractProgressBar ) --[[ @ 0]]
	self.ContractProgressBar = ContractProgressBar --[[ @ 0]]
	
	local ActivateContractButton = CoD.ItemShopButton.new( f1_arg0, f1_arg1, 0.5, 0.5, -109.5, 348.5, 1, 1, -384, -332 ) --[[ @ 0]]
	ActivateContractButton:mergeStateConditions( {
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueTrue( self, f1_arg1, "complete" )
			end
		}
	} ) --[[ @ 0]]
	ActivateContractButton:linkToElementModel( ActivateContractButton, "complete", true, function ( model )
		f1_arg0:updateElementState( ActivateContractButton, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "complete"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	ActivateContractButton:setAlpha( 0 ) --[[ @ 0]]
	ActivateContractButton.DirectorSelectButtonMiniInternal.MiddleText:setText( LocalizeToUpperString( @"menu/contract_activate" ) ) --[[ @ 0]]
	ActivateContractButton.DirectorSelectButtonMiniInternal.MiddleTextFocus:setText( LocalizeToUpperString( @"menu/contract_activate" ) ) --[[ @ 0]]
	ActivateContractButton:registerEventHandler( "gain_focus", function ( element, event )
		local f9_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f9_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f9_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		return f9_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( ActivateContractButton, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"], nil, function ( element, menu, controller, model )
		CoD.ContractUtility.SelectActiveContractAction( self, controller ) --[[ @ 0]]
		PlaySoundAlias( "uin_toggle_generic" ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"menu/select", nil, nil ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	self:addElement( ActivateContractButton ) --[[ @ 0]]
	self.ActivateContractButton = ActivateContractButton --[[ @ 0]]
	
	local PurchaseContainer = CoD.ItemDetailsSunsetPurchaseContainer.new( f1_arg0, f1_arg1, 0, 0, 283, 737, 0, 0, 344, 435 ) --[[ @ 0]]
	PurchaseContainer:linkToElementModel( self, nil, false, function ( model )
		PurchaseContainer:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( PurchaseContainer ) --[[ @ 0]]
	self.PurchaseContainer = PurchaseContainer --[[ @ 0]]
	
	local TabbedScoreboardFuiBox = CoD.TabbedScoreboardFuiBox.new( f1_arg0, f1_arg1, 0, 0, 624.5, 736.5, 0, 0, 413, 429 ) --[[ @ 0]]
	TabbedScoreboardFuiBox:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( TabbedScoreboardFuiBox ) --[[ @ 0]]
	self.TabbedScoreboardFuiBox = TabbedScoreboardFuiBox --[[ @ 0]]
	
	local TabbedScoreboardFuiBox2 = CoD.TabbedScoreboardFuiBox.new( f1_arg0, f1_arg1, 0, 0, 278.5, 390.5, 0, 0, 413, 429 ) --[[ @ 0]]
	TabbedScoreboardFuiBox2:setAlpha( 0 ) --[[ @ 0]]
	TabbedScoreboardFuiBox2:setZRot( 180 ) --[[ @ 0]]
	self:addElement( TabbedScoreboardFuiBox2 ) --[[ @ 0]]
	self.TabbedScoreboardFuiBox2 = TabbedScoreboardFuiBox2 --[[ @ 0]]
	
	local Seasonal = CoD.ContractSeasonalOverlay_InfoPanel.new( f1_arg0, f1_arg1, 0, 0, 0.5, 759.5, 0, 0, 32, 57 ) --[[ @ 0]]
	Seasonal:mergeStateConditions( {
		{
			stateName = "Show",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg1, "seasonal" )
			end
		}
	} ) --[[ @ 0]]
	Seasonal:linkToElementModel( Seasonal, "seasonal", true, function ( model )
		f1_arg0:updateElementState( Seasonal, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "seasonal"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	Seasonal:linkToElementModel( self, nil, false, function ( model )
		Seasonal:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( Seasonal ) --[[ @ 0]]
	self.Seasonal = Seasonal --[[ @ 0]]
	
	local TierBoostDisclaimer = LUI.UIText.new( 0, 0, 304.5, 714.5, 0, 0, 310, 324 ) --[[ @ 0]]
	TierBoostDisclaimer:setAlpha( 0 ) --[[ @ 0]]
	TierBoostDisclaimer:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_692255DD4A01A50B" ) ) --[[ @ 0]]
	TierBoostDisclaimer:setTTF( "default" ) --[[ @ 0]]
	TierBoostDisclaimer:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	self:addElement( TierBoostDisclaimer ) --[[ @ 0]]
	self.TierBoostDisclaimer = TierBoostDisclaimer --[[ @ 0]]
	
	local TierBoost = LUI.UIText.new( 0, 0, 407.5, 607.5, 0, 0, 285, 304 ) --[[ @ 0]]
	TierBoost:setRGB( 0, 0, 0 ) --[[ @ 0]]
	TierBoost:setAlpha( 0 ) --[[ @ 0]]
	TierBoost:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	TierBoost:setLetterSpacing( 2 ) --[[ @ 0]]
	TierBoost:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	TierBoost:setBackingType( 1 ) --[[ @ 0]]
	TierBoost:setBackingWidget( CoD.ContractSeasonalPromoBacker, f1_arg0, f1_arg1 ) --[[ @ 0]]
	TierBoost:setBackingXPadding( 7 ) --[[ @ 0]]
	TierBoost:setBackingYPadding( 1 ) --[[ @ 0]]
	TierBoost:subscribeToGlobalModel( f1_arg1, "TierBoostPercent", "specialorder_boost_amount", function ( model )
		local f16_local0 = model:get() --[[ @ 0]]
		if f16_local0 ~= nil then
			TierBoost:setText( ToUpper( CoD.BlackMarketUtility.GetTierBoostPercentString( f1_arg1, f16_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( TierBoost ) --[[ @ 0]]
	self.TierBoost = TierBoost --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Active",
			condition = function ( menu, element, event )
				return CoD.ContractUtility.IsElementContractActive( element, f1_arg1 )
			end
		},
		{
			stateName = "Purchased",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg1, "purchased" )
			end
		},
		{
			stateName = "UnpurchasedWithTierBoost",
			condition = function ( menu, element, event )
				return CoD.BlackMarketUtility.ShowSpecialOrderBoostPercent( f1_arg1, menu ) and not CoD.BaseUtility.IsCurrentLanguageAsian()
			end
		},
		{
			stateName = "UnpurchasedTierBoostAsianLang",
			condition = function ( menu, element, event )
				return CoD.BlackMarketUtility.ShowSpecialOrderBoostPercent( f1_arg1, menu ) and CoD.BaseUtility.IsCurrentLanguageAsian()
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "contractId", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "contractId"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local f1_local14 = self --[[ @ 0]]
	local f1_local15 = self.subscribeToModel --[[ @ 0]]
	local f1_local16 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local15( f1_local14, f1_local16.ContractsForceUpdate, function ( f22_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f22_arg0:get(),
			modelName = "ContractsForceUpdate"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:linkToElementModel( self, "purchased", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "purchased"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	f1_local14 = self --[[ @ 0]]
	f1_local15 = self.subscribeToModel --[[ @ 0]]
	f1_local16 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local15( f1_local14, f1_local16["LootStreamProgress.personalTierBoost"], function ( f24_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f24_arg0:get(),
			modelName = "LootStreamProgress.personalTierBoost"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( self, "setState", function ( element, controller, f25_arg2, f25_arg3, f25_arg4 )
		if IsSelfInState( self, "Purchased" ) and CoD.ModelUtility.IsSelfModelValueTrue( self, controller, "complete" ) then
			CoD.BaseUtility.SetDefaultFocusToElement( self, self.Info ) --[[ @ 0]]
		elseif IsSelfInState( self, "Purchased" ) then
			CoD.BaseUtility.SetDefaultFocusToElement( self, self.ActivateContractButton ) --[[ @ 0]]
		elseif IsSelfInState( self, "Active" ) then
			CoD.BaseUtility.SetDefaultFocusToElement( self, self.Info ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	Info.id = "Info" --[[ @ 0]]
	ActivateContractButton.id = "ActivateContractButton" --[[ @ 0]]
	PurchaseContainer.id = "PurchaseContainer" --[[ @ 0]]
	self.__defaultFocus = PurchaseContainer --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PreLoadFunc then
		PreLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	f1_local15 = self --[[ @ 0]]
	f1_local15 = Backer --[[ @ 0]]
	if not CoD.BlackMarketUtility.ShowSpecialOrderBoostPercent( f1_arg1, f1_arg0 ) then
		SetAlpha( self.TierBoostDisclaimer, 0 ) --[[ @ 0]]
	end
	return self
end
 --[[ @ 0]]
CoD.ContractDetailsPanelSunset.__resetProperties = function ( f26_arg0 )
	f26_arg0.ContractProgressBar:completeAnimation() --[[ @ 0]]
	f26_arg0.TierBoost:completeAnimation() --[[ @ 0]]
	f26_arg0.TierBoostDisclaimer:completeAnimation() --[[ @ 0]]
	f26_arg0.TabbedScoreboardFuiBox2:completeAnimation() --[[ @ 0]]
	f26_arg0.TabbedScoreboardFuiBox:completeAnimation() --[[ @ 0]]
	f26_arg0.Header:completeAnimation() --[[ @ 0]]
	f26_arg0.Info:completeAnimation() --[[ @ 0]]
	f26_arg0.RewardCountPC:completeAnimation() --[[ @ 0]]
	f26_arg0.RewardCount:completeAnimation() --[[ @ 0]]
	f26_arg0.Backer:completeAnimation() --[[ @ 0]]
	f26_arg0.PurchaseContainer:completeAnimation() --[[ @ 0]]
	f26_arg0.ActivateContractButton:completeAnimation() --[[ @ 0]]
	f26_arg0.ContractProgressBar:setAlpha( 1 ) --[[ @ 0]]
	f26_arg0.TierBoost:setLeftRight( 0, 0, 407.5, 607.5 ) --[[ @ 0]]
	f26_arg0.TierBoost:setTopBottom( 0, 0, 285, 304 ) --[[ @ 0]]
	f26_arg0.TierBoost:setAlpha( 0 ) --[[ @ 0]]
	f26_arg0.TierBoostDisclaimer:setAlpha( 0 ) --[[ @ 0]]
	f26_arg0.TabbedScoreboardFuiBox2:setAlpha( 0 ) --[[ @ 0]]
	f26_arg0.TabbedScoreboardFuiBox:setAlpha( 0 ) --[[ @ 0]]
	f26_arg0.Header:setAlpha( 1 ) --[[ @ 0]]
	f26_arg0.Info:setAlpha( 1 ) --[[ @ 0]]
	f26_arg0.RewardCountPC:setAlpha( 1 ) --[[ @ 0]]
	f26_arg0.RewardCount:setAlpha( 1 ) --[[ @ 0]]
	f26_arg0.Backer:setAlpha( 1 ) --[[ @ 0]]
	f26_arg0.PurchaseContainer:setAlpha( 1 ) --[[ @ 0]]
	f26_arg0.ActivateContractButton:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ContractDetailsPanelSunset.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f27_arg0, f27_arg1 )
			f27_arg0:__resetProperties() --[[ @ 0]]
			f27_arg0:setupElementClipCounter( 9 ) --[[ @ 0]]
			f27_arg0.Backer:completeAnimation() --[[ @ 0]]
			f27_arg0.Backer:setAlpha( 1 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.Backer ) --[[ @ 0]]
			f27_arg0.RewardCount:completeAnimation() --[[ @ 0]]
			f27_arg0.RewardCount:setAlpha( 1 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.RewardCount ) --[[ @ 0]]
			f27_arg0.RewardCountPC:completeAnimation() --[[ @ 0]]
			f27_arg0.RewardCountPC:setAlpha( 1 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.RewardCountPC ) --[[ @ 0]]
			f27_arg0.Info:completeAnimation() --[[ @ 0]]
			f27_arg0.Info:setAlpha( 1 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.Info ) --[[ @ 0]]
			f27_arg0.Header:completeAnimation() --[[ @ 0]]
			f27_arg0.Header:setAlpha( 1 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.Header ) --[[ @ 0]]
			f27_arg0.ContractProgressBar:completeAnimation() --[[ @ 0]]
			f27_arg0.ContractProgressBar:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.ContractProgressBar ) --[[ @ 0]]
			f27_arg0.TabbedScoreboardFuiBox:completeAnimation() --[[ @ 0]]
			f27_arg0.TabbedScoreboardFuiBox:setAlpha( 1 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.TabbedScoreboardFuiBox ) --[[ @ 0]]
			f27_arg0.TabbedScoreboardFuiBox2:completeAnimation() --[[ @ 0]]
			f27_arg0.TabbedScoreboardFuiBox2:setAlpha( 1 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.TabbedScoreboardFuiBox2 ) --[[ @ 0]]
			f27_arg0.TierBoostDisclaimer:completeAnimation() --[[ @ 0]]
			f27_arg0.TierBoostDisclaimer:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.TierBoostDisclaimer ) --[[ @ 0]]
			f27_arg0.TierBoost:completeAnimation() --[[ @ 0]]
			f27_arg0.TierBoost:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.TierBoost ) --[[ @ 0]]
		end
	},
	Active = {
		DefaultClip = function ( f28_arg0, f28_arg1 )
			f28_arg0:__resetProperties() --[[ @ 0]]
			f28_arg0:setupElementClipCounter( 8 ) --[[ @ 0]]
			f28_arg0.Backer:completeAnimation() --[[ @ 0]]
			f28_arg0.Backer:setAlpha( 1 ) --[[ @ 0]]
			f28_arg0.clipFinished( f28_arg0.Backer ) --[[ @ 0]]
			f28_arg0.RewardCount:completeAnimation() --[[ @ 0]]
			f28_arg0.RewardCount:setAlpha( 1 ) --[[ @ 0]]
			f28_arg0.clipFinished( f28_arg0.RewardCount ) --[[ @ 0]]
			f28_arg0.RewardCountPC:completeAnimation() --[[ @ 0]]
			f28_arg0.RewardCountPC:setAlpha( 1 ) --[[ @ 0]]
			f28_arg0.clipFinished( f28_arg0.RewardCountPC ) --[[ @ 0]]
			f28_arg0.Info:completeAnimation() --[[ @ 0]]
			f28_arg0.Info:setAlpha( 1 ) --[[ @ 0]]
			f28_arg0.clipFinished( f28_arg0.Info ) --[[ @ 0]]
			f28_arg0.Header:completeAnimation() --[[ @ 0]]
			f28_arg0.Header:setAlpha( 1 ) --[[ @ 0]]
			f28_arg0.clipFinished( f28_arg0.Header ) --[[ @ 0]]
			f28_arg0.ContractProgressBar:completeAnimation() --[[ @ 0]]
			f28_arg0.ContractProgressBar:setAlpha( 1 ) --[[ @ 0]]
			f28_arg0.clipFinished( f28_arg0.ContractProgressBar ) --[[ @ 0]]
			f28_arg0.PurchaseContainer:completeAnimation() --[[ @ 0]]
			f28_arg0.PurchaseContainer:setAlpha( 0 ) --[[ @ 0]]
			f28_arg0.clipFinished( f28_arg0.PurchaseContainer ) --[[ @ 0]]
			f28_arg0.TierBoostDisclaimer:completeAnimation() --[[ @ 0]]
			f28_arg0.TierBoostDisclaimer:setAlpha( 0 ) --[[ @ 0]]
			f28_arg0.clipFinished( f28_arg0.TierBoostDisclaimer ) --[[ @ 0]]
			f28_arg0.TierBoost:completeAnimation() --[[ @ 0]]
			f28_arg0.TierBoost:setAlpha( 0 ) --[[ @ 0]]
			f28_arg0.clipFinished( f28_arg0.TierBoost ) --[[ @ 0]]
		end
	},
	Purchased = {
		DefaultClip = function ( f29_arg0, f29_arg1 )
			f29_arg0:__resetProperties() --[[ @ 0]]
			f29_arg0:setupElementClipCounter( 9 ) --[[ @ 0]]
			f29_arg0.Backer:completeAnimation() --[[ @ 0]]
			f29_arg0.Backer:setAlpha( 1 ) --[[ @ 0]]
			f29_arg0.clipFinished( f29_arg0.Backer ) --[[ @ 0]]
			f29_arg0.RewardCount:completeAnimation() --[[ @ 0]]
			f29_arg0.RewardCount:setAlpha( 1 ) --[[ @ 0]]
			f29_arg0.clipFinished( f29_arg0.RewardCount ) --[[ @ 0]]
			f29_arg0.RewardCountPC:completeAnimation() --[[ @ 0]]
			f29_arg0.RewardCountPC:setAlpha( 1 ) --[[ @ 0]]
			f29_arg0.clipFinished( f29_arg0.RewardCountPC ) --[[ @ 0]]
			f29_arg0.Info:completeAnimation() --[[ @ 0]]
			f29_arg0.Info:setAlpha( 1 ) --[[ @ 0]]
			f29_arg0.clipFinished( f29_arg0.Info ) --[[ @ 0]]
			f29_arg0.Header:completeAnimation() --[[ @ 0]]
			f29_arg0.Header:setAlpha( 1 ) --[[ @ 0]]
			f29_arg0.clipFinished( f29_arg0.Header ) --[[ @ 0]]
			f29_arg0.ContractProgressBar:completeAnimation() --[[ @ 0]]
			f29_arg0.ContractProgressBar:setAlpha( 1 ) --[[ @ 0]]
			f29_arg0.clipFinished( f29_arg0.ContractProgressBar ) --[[ @ 0]]
			f29_arg0.ActivateContractButton:completeAnimation() --[[ @ 0]]
			f29_arg0.ActivateContractButton:setAlpha( 1 ) --[[ @ 0]]
			f29_arg0.clipFinished( f29_arg0.ActivateContractButton ) --[[ @ 0]]
			f29_arg0.PurchaseContainer:completeAnimation() --[[ @ 0]]
			f29_arg0.PurchaseContainer:setAlpha( 0 ) --[[ @ 0]]
			f29_arg0.clipFinished( f29_arg0.PurchaseContainer ) --[[ @ 0]]
			f29_arg0.TierBoostDisclaimer:completeAnimation() --[[ @ 0]]
			f29_arg0.TierBoostDisclaimer:setAlpha( 0 ) --[[ @ 0]]
			f29_arg0.clipFinished( f29_arg0.TierBoostDisclaimer ) --[[ @ 0]]
			f29_arg0.TierBoost:completeAnimation() --[[ @ 0]]
			f29_arg0.TierBoost:setAlpha( 0 ) --[[ @ 0]]
			f29_arg0.clipFinished( f29_arg0.TierBoost ) --[[ @ 0]]
		end
	},
	UnpurchasedWithTierBoost = {
		DefaultClip = function ( f30_arg0, f30_arg1 )
			f30_arg0:__resetProperties() --[[ @ 0]]
			f30_arg0:setupElementClipCounter( 9 ) --[[ @ 0]]
			f30_arg0.Backer:completeAnimation() --[[ @ 0]]
			f30_arg0.Backer:setAlpha( 1 ) --[[ @ 0]]
			f30_arg0.clipFinished( f30_arg0.Backer ) --[[ @ 0]]
			f30_arg0.RewardCount:completeAnimation() --[[ @ 0]]
			f30_arg0.RewardCount:setAlpha( 1 ) --[[ @ 0]]
			f30_arg0.clipFinished( f30_arg0.RewardCount ) --[[ @ 0]]
			f30_arg0.RewardCountPC:completeAnimation() --[[ @ 0]]
			f30_arg0.RewardCountPC:setAlpha( 1 ) --[[ @ 0]]
			f30_arg0.clipFinished( f30_arg0.RewardCountPC ) --[[ @ 0]]
			f30_arg0.Info:completeAnimation() --[[ @ 0]]
			f30_arg0.Info:setAlpha( 1 ) --[[ @ 0]]
			f30_arg0.clipFinished( f30_arg0.Info ) --[[ @ 0]]
			f30_arg0.Header:completeAnimation() --[[ @ 0]]
			f30_arg0.Header:setAlpha( 1 ) --[[ @ 0]]
			f30_arg0.clipFinished( f30_arg0.Header ) --[[ @ 0]]
			f30_arg0.ContractProgressBar:completeAnimation() --[[ @ 0]]
			f30_arg0.ContractProgressBar:setAlpha( 0 ) --[[ @ 0]]
			f30_arg0.clipFinished( f30_arg0.ContractProgressBar ) --[[ @ 0]]
			f30_arg0.TabbedScoreboardFuiBox:completeAnimation() --[[ @ 0]]
			f30_arg0.TabbedScoreboardFuiBox:setAlpha( 1 ) --[[ @ 0]]
			f30_arg0.clipFinished( f30_arg0.TabbedScoreboardFuiBox ) --[[ @ 0]]
			f30_arg0.TabbedScoreboardFuiBox2:completeAnimation() --[[ @ 0]]
			f30_arg0.TabbedScoreboardFuiBox2:setAlpha( 1 ) --[[ @ 0]]
			f30_arg0.clipFinished( f30_arg0.TabbedScoreboardFuiBox2 ) --[[ @ 0]]
			f30_arg0.TierBoostDisclaimer:completeAnimation() --[[ @ 0]]
			f30_arg0.TierBoostDisclaimer:setAlpha( 1 ) --[[ @ 0]]
			f30_arg0.clipFinished( f30_arg0.TierBoostDisclaimer ) --[[ @ 0]]
			f30_arg0.TierBoost:completeAnimation() --[[ @ 0]]
			f30_arg0.TierBoost:setAlpha( 1 ) --[[ @ 0]]
			f30_arg0.clipFinished( f30_arg0.TierBoost ) --[[ @ 0]]
		end
	},
	UnpurchasedTierBoostAsianLang = {
		DefaultClip = function ( f31_arg0, f31_arg1 )
			f31_arg0:__resetProperties() --[[ @ 0]]
			f31_arg0:setupElementClipCounter( 9 ) --[[ @ 0]]
			f31_arg0.Backer:completeAnimation() --[[ @ 0]]
			f31_arg0.Backer:setAlpha( 1 ) --[[ @ 0]]
			f31_arg0.clipFinished( f31_arg0.Backer ) --[[ @ 0]]
			f31_arg0.RewardCount:completeAnimation() --[[ @ 0]]
			f31_arg0.RewardCount:setAlpha( 1 ) --[[ @ 0]]
			f31_arg0.clipFinished( f31_arg0.RewardCount ) --[[ @ 0]]
			f31_arg0.RewardCountPC:completeAnimation() --[[ @ 0]]
			f31_arg0.RewardCountPC:setAlpha( 1 ) --[[ @ 0]]
			f31_arg0.clipFinished( f31_arg0.RewardCountPC ) --[[ @ 0]]
			f31_arg0.Info:completeAnimation() --[[ @ 0]]
			f31_arg0.Info:setAlpha( 1 ) --[[ @ 0]]
			f31_arg0.clipFinished( f31_arg0.Info ) --[[ @ 0]]
			f31_arg0.Header:completeAnimation() --[[ @ 0]]
			f31_arg0.Header:setAlpha( 1 ) --[[ @ 0]]
			f31_arg0.clipFinished( f31_arg0.Header ) --[[ @ 0]]
			f31_arg0.ContractProgressBar:completeAnimation() --[[ @ 0]]
			f31_arg0.ContractProgressBar:setAlpha( 0 ) --[[ @ 0]]
			f31_arg0.clipFinished( f31_arg0.ContractProgressBar ) --[[ @ 0]]
			f31_arg0.TabbedScoreboardFuiBox:completeAnimation() --[[ @ 0]]
			f31_arg0.TabbedScoreboardFuiBox:setAlpha( 1 ) --[[ @ 0]]
			f31_arg0.clipFinished( f31_arg0.TabbedScoreboardFuiBox ) --[[ @ 0]]
			f31_arg0.TabbedScoreboardFuiBox2:completeAnimation() --[[ @ 0]]
			f31_arg0.TabbedScoreboardFuiBox2:setAlpha( 1 ) --[[ @ 0]]
			f31_arg0.clipFinished( f31_arg0.TabbedScoreboardFuiBox2 ) --[[ @ 0]]
			f31_arg0.TierBoostDisclaimer:completeAnimation() --[[ @ 0]]
			f31_arg0.TierBoostDisclaimer:setAlpha( 1 ) --[[ @ 0]]
			f31_arg0.clipFinished( f31_arg0.TierBoostDisclaimer ) --[[ @ 0]]
			f31_arg0.TierBoost:completeAnimation() --[[ @ 0]]
			f31_arg0.TierBoost:setLeftRight( 0, 0, 36.5, 236.5 ) --[[ @ 0]]
			f31_arg0.TierBoost:setTopBottom( 0, 0, 410, 429 ) --[[ @ 0]]
			f31_arg0.TierBoost:setAlpha( 1 ) --[[ @ 0]]
			f31_arg0.clipFinished( f31_arg0.TierBoost ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.ContractDetailsPanelSunset.__onClose = function ( f32_arg0 )
	f32_arg0.Backer:close() --[[ @ 0]]
	f32_arg0.Info:close() --[[ @ 0]]
	f32_arg0.Header:close() --[[ @ 0]]
	f32_arg0.ContractProgressBar:close() --[[ @ 0]]
	f32_arg0.ActivateContractButton:close() --[[ @ 0]]
	f32_arg0.PurchaseContainer:close() --[[ @ 0]]
	f32_arg0.TabbedScoreboardFuiBox:close() --[[ @ 0]]
	f32_arg0.TabbedScoreboardFuiBox2:close() --[[ @ 0]]
	f32_arg0.Seasonal:close() --[[ @ 0]]
	f32_arg0.TierBoost:close() --[[ @ 0]]
end
 --[[ @ 0]]
