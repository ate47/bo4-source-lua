-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:49
require( "x64:3e272191e46af824" ) --[[ @ 0]]
require( "x64:2266118fa96f77c8" ) --[[ @ 0]]
require( "x64:73c21aa1a96202c9" ) --[[ @ 0]]
require( "x64:795553e1dbf377f6" ) --[[ @ 0]]
require( "x64:48c811a1d34161cf" ) --[[ @ 0]]

CoD.ReservesSpecialContractInternal = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.ReservesSpecialContractInternal.__defaultWidth = 684 --[[ @ 0]]
CoD.ReservesSpecialContractInternal.__defaultHeight = 132 --[[ @ 0]]
CoD.ReservesSpecialContractInternal.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.ReservesSpecialContractInternal ) --[[ @ 0]]
	self.id = "ReservesSpecialContractInternal" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local FocusGlow = LUI.UIImage.new( 0, 1, -69, 69, 0, 1, -51, 51 ) --[[ @ 0]]
	FocusGlow:setAlpha( 0 ) --[[ @ 0]]
	FocusGlow:setScale( 1.01, 1 ) --[[ @ 0]]
	FocusGlow:setImage( RegisterImage( @"uie_ui_menu_common_focus_glow_small" ) ) --[[ @ 0]]
	FocusGlow:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_6DAB59B2CAE01851" ) ) --[[ @ 0]]
	FocusGlow:setShaderVector( 0, 0, 0, 0.24, 0.24 ) --[[ @ 0]]
	FocusGlow:setShaderVector( 1, 1.2, 0, 0, 0 ) --[[ @ 0]]
	FocusGlow:setupNineSliceShader( 160, 160 ) --[[ @ 0]]
	self:addElement( FocusGlow ) --[[ @ 0]]
	self.FocusGlow = FocusGlow --[[ @ 0]]
	
	local PreviewScene = LUI.UIImage.new( 0, 0, 0, 684, 0, 0, 0, 132 ) --[[ @ 0]]
	PreviewScene:linkToElementModel( self, "bundleReservesImage", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			PreviewScene:setImage( RegisterImage( f2_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( PreviewScene ) --[[ @ 0]]
	self.PreviewScene = PreviewScene --[[ @ 0]]
	
	local gradient = LUI.UIImage.new( 0, 0, 5.5, 525.5, 0, 0, 5, 127 ) --[[ @ 0]]
	gradient:setAlpha( 0.9 ) --[[ @ 0]]
	gradient:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_gradient_normal" ) ) --[[ @ 0]]
	gradient:setShaderVector( 0, 0, 0, 0, 1 ) --[[ @ 0]]
	gradient:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	gradient:setShaderVector( 2, 0.67, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( gradient ) --[[ @ 0]]
	self.gradient = gradient --[[ @ 0]]
	
	local PreviewButton = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 1, 1 ) --[[ @ 0]]
	PreviewButton:setAlpha( 0 ) --[[ @ 0]]
	PreviewButton:setImage( RegisterImage( @"hash_9B5AB12D437292D" ) ) --[[ @ 0]]
	self:addElement( PreviewButton ) --[[ @ 0]]
	self.PreviewButton = PreviewButton --[[ @ 0]]
	
	local Title = LUI.UIText.new( 0, 0, 17, 452, 0, 0, 10.5, 34.5 ) --[[ @ 0]]
	Title:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	Title:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	Title:setLetterSpacing( 2 ) --[[ @ 0]]
	Title:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	Title:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	Title:linkToElementModel( self, "categoryString", true, function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			Title:setText( LocalizeToUpperString( f3_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Title ) --[[ @ 0]]
	self.Title = Title --[[ @ 0]]
	
	local Description = LUI.UIText.new( 0, 0, 19, 491, 0, 0, 37.5, 52.5 ) --[[ @ 0]]
	Description:setRGB( ColorSet.T8__OFF__GRAY.r, ColorSet.T8__OFF__GRAY.g, ColorSet.T8__OFF__GRAY.b ) --[[ @ 0]]
	Description:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	Description:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	Description:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	Description:linkToElementModel( self, "description", true, function ( model )
		local f4_local0 = model:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			Description:setText( f4_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Description ) --[[ @ 0]]
	self.Description = Description --[[ @ 0]]
	
	local RewardName = LUI.UIText.new( 0, 0, 433.5, 678.5, 0, 0, 86.5, 104.5 ) --[[ @ 0]]
	RewardName:setRGB( ColorSet.T8__BIEGE.r, ColorSet.T8__BIEGE.g, ColorSet.T8__BIEGE.b ) --[[ @ 0]]
	RewardName:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	RewardName:setLetterSpacing( 4 ) --[[ @ 0]]
	RewardName:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	RewardName:setAlignment( Enum[@"luialignment"][@"hash_E821F0ECFF8D1C7"] ) --[[ @ 0]]
	RewardName:linkToElementModel( self, "rewardName", true, function ( model )
		local f5_local0 = model:get() --[[ @ 0]]
		if f5_local0 ~= nil then
			RewardName:setText( LocalizeToUpperString( f5_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( RewardName ) --[[ @ 0]]
	self.RewardName = RewardName --[[ @ 0]]
	
	local Timer = CoD.TimerRight.new( f1_arg0, f1_arg1, 1, 1, -436, -400, 1, 1, -43, -28 ) --[[ @ 0]]
	Timer.TextBox2:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	Timer:subscribeToGlobalModel( f1_arg1, "AutoEvents", "autoevent_special_contract_timer", function ( model )
		local f6_local0 = model:get() --[[ @ 0]]
		if f6_local0 ~= nil then
			Timer.TextBox2:setText( f6_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Timer ) --[[ @ 0]]
	self.Timer = Timer --[[ @ 0]]
	
	local ActiveBanner = CoD.ContractActiveBanner.new( f1_arg0, f1_arg1, 0, 0, 25, 175, 1, 1, -48.5, -23.5 ) --[[ @ 0]]
	ActiveBanner:mergeStateConditions( {
		{
			stateName = "Visible",
			condition = function ( menu, element, event )
				return AlwaysTrue()
			end
		}
	} ) --[[ @ 0]]
	self:addElement( ActiveBanner ) --[[ @ 0]]
	self.ActiveBanner = ActiveBanner --[[ @ 0]]
	
	local ProgressBar = CoD.ReservesSpecialContractProgressBar.new( f1_arg0, f1_arg1, 0, 0, 8, 656, 0, 0, 108.5, 126.5 ) --[[ @ 0]]
	ProgressBar:mergeStateConditions( {
		{
			stateName = "Complete",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		},
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		}
	} ) --[[ @ 0]]
	ProgressBar.Progress:setImage( RegisterImage( @"uie_ui_menu_aar_levelup_bar" ) ) --[[ @ 0]]
	ProgressBar.ProgressGlow:setImage( RegisterImage( @"uie_ui_menu_aar_levelup_bar_glow" ) ) --[[ @ 0]]
	ProgressBar:linkToElementModel( self, "progress", true, function ( model )
		local f10_local0 = model:get() --[[ @ 0]]
		if f10_local0 ~= nil then
			ProgressBar.Progress:setShaderVector( 0, CoD.GetVectorComponentFromString( f10_local0, 1 ), CoD.GetVectorComponentFromString( f10_local0, 2 ), CoD.GetVectorComponentFromString( f10_local0, 3 ), CoD.GetVectorComponentFromString( f10_local0, 4 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	ProgressBar:linkToElementModel( self, "progress", true, function ( model )
		local f11_local0 = model:get() --[[ @ 0]]
		if f11_local0 ~= nil then
			ProgressBar.ProgressGlow:setShaderVector( 0, CoD.GetVectorComponentFromString( f11_local0, 1 ), CoD.GetVectorComponentFromString( f11_local0, 2 ), CoD.GetVectorComponentFromString( f11_local0, 3 ), CoD.GetVectorComponentFromString( f11_local0, 4 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	ProgressBar:linkToElementModel( self, "progress", true, function ( model )
		local f12_local0 = model:get() --[[ @ 0]]
		if f12_local0 ~= nil then
			ProgressBar.ProgressFraction:setText( NumberAsPercent( CoD.BaseUtility.FloorFraction( 2, StringMultiply( 100, f12_local0 ) ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( ProgressBar ) --[[ @ 0]]
	self.ProgressBar = ProgressBar --[[ @ 0]]
	
	local Darken = LUI.UIImage.new( 0, 1, 6, -6, 0, 1, 6, -6 ) --[[ @ 0]]
	Darken:setRGB( 0.09, 0.09, 0.09 ) --[[ @ 0]]
	Darken:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( Darken ) --[[ @ 0]]
	self.Darken = Darken --[[ @ 0]]
	
	local NineSliceBMFrame = LUI.UIImage.new( 0, 1, -2, 2, 0, 1, -2, 2 ) --[[ @ 0]]
	NineSliceBMFrame:setImage( RegisterImage( @"hash_71AC151A09D526DC" ) ) --[[ @ 0]]
	NineSliceBMFrame:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_normal" ) ) --[[ @ 0]]
	NineSliceBMFrame:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	NineSliceBMFrame:setupNineSliceShader( 162, 52 ) --[[ @ 0]]
	self:addElement( NineSliceBMFrame ) --[[ @ 0]]
	self.NineSliceBMFrame = NineSliceBMFrame --[[ @ 0]]
	
	local FocusBorder = LUI.UIImage.new( 0, 1, -5, 5, 0, 1, -5, 5 ) --[[ @ 0]]
	FocusBorder:setRGB( 1, 0.75, 0.47 ) --[[ @ 0]]
	FocusBorder:setAlpha( 0 ) --[[ @ 0]]
	FocusBorder:setImage( RegisterImage( @"uie_ui_menu_store_focus_frame" ) ) --[[ @ 0]]
	FocusBorder:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_add" ) ) --[[ @ 0]]
	FocusBorder:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	FocusBorder:setupNineSliceShader( 18, 18 ) --[[ @ 0]]
	self:addElement( FocusBorder ) --[[ @ 0]]
	self.FocusBorder = FocusBorder --[[ @ 0]]
	
	local CompleteBanner = CoD.ContractCompleteBanner.new( f1_arg0, f1_arg1, 0, 0, 31, 181, 1, 1, -51.5, -26.5 ) --[[ @ 0]]
	CompleteBanner:mergeStateConditions( {
		{
			stateName = "Visible",
			condition = function ( menu, element, event )
				return AlwaysTrue()
			end
		}
	} ) --[[ @ 0]]
	CompleteBanner:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( CompleteBanner ) --[[ @ 0]]
	self.CompleteBanner = CompleteBanner --[[ @ 0]]
	
	local ItemHintText = CoD.CommonToolTip.new( f1_arg0, f1_arg1, 0.5, 0.5, -342, 342, 1, 1, 0, 45 ) --[[ @ 0]]
	ItemHintText:mergeStateConditions( {
		{
			stateName = "Mouse",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		},
		{
			stateName = "NoHintText",
			condition = function ( menu, element, event )
				return not CoD.ModelUtility.IsSelfModelValueNonEmptyString( self, f1_arg1, "toolTip" )
			end
		},
		{
			stateName = "CenterAlign",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		}
	} ) --[[ @ 0]]
	ItemHintText:linkToElementModel( ItemHintText, "toolTip", true, function ( model )
		f1_arg0:updateElementState( ItemHintText, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "toolTip"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	ItemHintText:setAlpha( 0 ) --[[ @ 0]]
	ItemHintText:linkToElementModel( self, "toolTip", true, function ( model )
		local f18_local0 = model:get() --[[ @ 0]]
		if f18_local0 ~= nil then
			ItemHintText.textCenterAlign:setText( Engine[@"hash_4F9F1239CFD921FE"]( f18_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( ItemHintText ) --[[ @ 0]]
	self.ItemHintText = ItemHintText --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Complete",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg1, "complete" )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "complete", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "complete"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.ReservesSpecialContractInternal.__resetProperties = function ( f21_arg0 )
	f21_arg0.FocusGlow:completeAnimation() --[[ @ 0]]
	f21_arg0.ItemHintText:completeAnimation() --[[ @ 0]]
	f21_arg0.FocusBorder:completeAnimation() --[[ @ 0]]
	f21_arg0.CompleteBanner:completeAnimation() --[[ @ 0]]
	f21_arg0.Darken:completeAnimation() --[[ @ 0]]
	f21_arg0.ActiveBanner:completeAnimation() --[[ @ 0]]
	f21_arg0.Timer:completeAnimation() --[[ @ 0]]
	f21_arg0.ProgressBar:completeAnimation() --[[ @ 0]]
	f21_arg0.gradient:completeAnimation() --[[ @ 0]]
	f21_arg0.FocusGlow:setAlpha( 0 ) --[[ @ 0]]
	f21_arg0.ItemHintText:setAlpha( 0 ) --[[ @ 0]]
	f21_arg0.FocusBorder:setAlpha( 0 ) --[[ @ 0]]
	f21_arg0.CompleteBanner:setAlpha( 0 ) --[[ @ 0]]
	f21_arg0.Darken:setAlpha( 0 ) --[[ @ 0]]
	f21_arg0.ActiveBanner:setAlpha( 1 ) --[[ @ 0]]
	f21_arg0.Timer:setAlpha( 1 ) --[[ @ 0]]
	f21_arg0.ProgressBar:setAlpha( 1 ) --[[ @ 0]]
	f21_arg0.gradient:setAlpha( 0.9 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ReservesSpecialContractInternal.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f22_arg0, f22_arg1 )
			f22_arg0:__resetProperties() --[[ @ 0]]
			f22_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end,
		Focus = function ( f23_arg0, f23_arg1 )
			f23_arg0:__resetProperties() --[[ @ 0]]
			f23_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f23_arg0.FocusGlow:completeAnimation() --[[ @ 0]]
			f23_arg0.FocusGlow:setAlpha( 1 ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.FocusGlow ) --[[ @ 0]]
			f23_arg0.FocusBorder:completeAnimation() --[[ @ 0]]
			f23_arg0.FocusBorder:setAlpha( 1 ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.FocusBorder ) --[[ @ 0]]
			local f23_local0 = function ( f24_arg0 )
				local f24_local0 = function ( f25_arg0 )
					f25_arg0:beginAnimation( 199 ) --[[ @ 0]]
					f25_arg0:setAlpha( 0 ) --[[ @ 0]]
					f25_arg0:registerEventHandler( "transition_complete_keyframe", f23_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f23_arg0.ItemHintText:beginAnimation( 5000 ) --[[ @ 0]]
				f23_arg0.ItemHintText:registerEventHandler( "interrupted_keyframe", f23_arg0.clipInterrupted ) --[[ @ 0]]
				f23_arg0.ItemHintText:registerEventHandler( "transition_complete_keyframe", f24_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f23_arg0.ItemHintText:completeAnimation() --[[ @ 0]]
			f23_arg0.ItemHintText:setAlpha( 1 ) --[[ @ 0]]
			f23_local0( f23_arg0.ItemHintText ) --[[ @ 0]]
		end,
		GainFocus = function ( f26_arg0, f26_arg1 )
			f26_arg0:__resetProperties() --[[ @ 0]]
			f26_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			local f26_local0 = function ( f27_arg0 )
				f26_arg0.FocusGlow:beginAnimation( 200 ) --[[ @ 0]]
				f26_arg0.FocusGlow:setAlpha( 1 ) --[[ @ 0]]
				f26_arg0.FocusGlow:registerEventHandler( "interrupted_keyframe", f26_arg0.clipInterrupted ) --[[ @ 0]]
				f26_arg0.FocusGlow:registerEventHandler( "transition_complete_keyframe", f26_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f26_arg0.FocusGlow:completeAnimation() --[[ @ 0]]
			f26_arg0.FocusGlow:setAlpha( 0 ) --[[ @ 0]]
			f26_local0( f26_arg0.FocusGlow ) --[[ @ 0]]
			local f26_local1 = function ( f28_arg0 )
				f26_arg0.FocusBorder:beginAnimation( 200, Enum[@"luitween"][@"luitween_ease_in"] ) --[[ @ 0]]
				f26_arg0.FocusBorder:setAlpha( 1 ) --[[ @ 0]]
				f26_arg0.FocusBorder:registerEventHandler( "interrupted_keyframe", f26_arg0.clipInterrupted ) --[[ @ 0]]
				f26_arg0.FocusBorder:registerEventHandler( "transition_complete_keyframe", f26_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f26_arg0.FocusBorder:completeAnimation() --[[ @ 0]]
			f26_arg0.FocusBorder:setAlpha( 0 ) --[[ @ 0]]
			f26_local1( f26_arg0.FocusBorder ) --[[ @ 0]]
			local f26_local2 = function ( f29_arg0 )
				f26_arg0.ItemHintText:beginAnimation( 200 ) --[[ @ 0]]
				f26_arg0.ItemHintText:setAlpha( 1 ) --[[ @ 0]]
				f26_arg0.ItemHintText:registerEventHandler( "interrupted_keyframe", f26_arg0.clipInterrupted ) --[[ @ 0]]
				f26_arg0.ItemHintText:registerEventHandler( "transition_complete_keyframe", f26_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f26_arg0.ItemHintText:completeAnimation() --[[ @ 0]]
			f26_arg0.ItemHintText:setAlpha( 0 ) --[[ @ 0]]
			f26_local2( f26_arg0.ItemHintText ) --[[ @ 0]]
		end,
		LoseFocus = function ( f30_arg0, f30_arg1 )
			f30_arg0:__resetProperties() --[[ @ 0]]
			f30_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			local f30_local0 = function ( f31_arg0 )
				f30_arg0.FocusGlow:beginAnimation( 100 ) --[[ @ 0]]
				f30_arg0.FocusGlow:setAlpha( 0 ) --[[ @ 0]]
				f30_arg0.FocusGlow:registerEventHandler( "interrupted_keyframe", f30_arg0.clipInterrupted ) --[[ @ 0]]
				f30_arg0.FocusGlow:registerEventHandler( "transition_complete_keyframe", f30_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f30_arg0.FocusGlow:completeAnimation() --[[ @ 0]]
			f30_arg0.FocusGlow:setAlpha( 1 ) --[[ @ 0]]
			f30_local0( f30_arg0.FocusGlow ) --[[ @ 0]]
			local f30_local1 = function ( f32_arg0 )
				f30_arg0.FocusBorder:beginAnimation( 100 ) --[[ @ 0]]
				f30_arg0.FocusBorder:setAlpha( 0 ) --[[ @ 0]]
				f30_arg0.FocusBorder:registerEventHandler( "interrupted_keyframe", f30_arg0.clipInterrupted ) --[[ @ 0]]
				f30_arg0.FocusBorder:registerEventHandler( "transition_complete_keyframe", f30_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f30_arg0.FocusBorder:completeAnimation() --[[ @ 0]]
			f30_arg0.FocusBorder:setAlpha( 1 ) --[[ @ 0]]
			f30_local1( f30_arg0.FocusBorder ) --[[ @ 0]]
		end
	},
	Complete = {
		DefaultClip = function ( f33_arg0, f33_arg1 )
			f33_arg0:__resetProperties() --[[ @ 0]]
			f33_arg0:setupElementClipCounter( 6 ) --[[ @ 0]]
			f33_arg0.gradient:completeAnimation() --[[ @ 0]]
			f33_arg0.gradient:setAlpha( 0 ) --[[ @ 0]]
			f33_arg0.clipFinished( f33_arg0.gradient ) --[[ @ 0]]
			f33_arg0.Timer:completeAnimation() --[[ @ 0]]
			f33_arg0.Timer:setAlpha( 0 ) --[[ @ 0]]
			f33_arg0.clipFinished( f33_arg0.Timer ) --[[ @ 0]]
			f33_arg0.ActiveBanner:completeAnimation() --[[ @ 0]]
			f33_arg0.ActiveBanner:setAlpha( 0 ) --[[ @ 0]]
			f33_arg0.clipFinished( f33_arg0.ActiveBanner ) --[[ @ 0]]
			f33_arg0.ProgressBar:completeAnimation() --[[ @ 0]]
			f33_arg0.ProgressBar:setAlpha( 0 ) --[[ @ 0]]
			f33_arg0.clipFinished( f33_arg0.ProgressBar ) --[[ @ 0]]
			f33_arg0.Darken:completeAnimation() --[[ @ 0]]
			f33_arg0.Darken:setAlpha( 0.8 ) --[[ @ 0]]
			f33_arg0.clipFinished( f33_arg0.Darken ) --[[ @ 0]]
			f33_arg0.CompleteBanner:completeAnimation() --[[ @ 0]]
			f33_arg0.CompleteBanner:setAlpha( 1 ) --[[ @ 0]]
			f33_arg0.clipFinished( f33_arg0.CompleteBanner ) --[[ @ 0]]
		end,
		Focus = function ( f34_arg0, f34_arg1 )
			f34_arg0:__resetProperties() --[[ @ 0]]
			f34_arg0:setupElementClipCounter( 8 ) --[[ @ 0]]
			f34_arg0.FocusGlow:completeAnimation() --[[ @ 0]]
			f34_arg0.FocusGlow:setAlpha( 1 ) --[[ @ 0]]
			f34_arg0.clipFinished( f34_arg0.FocusGlow ) --[[ @ 0]]
			f34_arg0.gradient:completeAnimation() --[[ @ 0]]
			f34_arg0.gradient:setAlpha( 0 ) --[[ @ 0]]
			f34_arg0.clipFinished( f34_arg0.gradient ) --[[ @ 0]]
			f34_arg0.Timer:completeAnimation() --[[ @ 0]]
			f34_arg0.Timer:setAlpha( 0 ) --[[ @ 0]]
			f34_arg0.clipFinished( f34_arg0.Timer ) --[[ @ 0]]
			f34_arg0.ActiveBanner:completeAnimation() --[[ @ 0]]
			f34_arg0.ActiveBanner:setAlpha( 0 ) --[[ @ 0]]
			f34_arg0.clipFinished( f34_arg0.ActiveBanner ) --[[ @ 0]]
			f34_arg0.ProgressBar:completeAnimation() --[[ @ 0]]
			f34_arg0.ProgressBar:setAlpha( 0 ) --[[ @ 0]]
			f34_arg0.clipFinished( f34_arg0.ProgressBar ) --[[ @ 0]]
			f34_arg0.Darken:completeAnimation() --[[ @ 0]]
			f34_arg0.Darken:setAlpha( 0.8 ) --[[ @ 0]]
			f34_arg0.clipFinished( f34_arg0.Darken ) --[[ @ 0]]
			f34_arg0.FocusBorder:completeAnimation() --[[ @ 0]]
			f34_arg0.FocusBorder:setAlpha( 1 ) --[[ @ 0]]
			f34_arg0.clipFinished( f34_arg0.FocusBorder ) --[[ @ 0]]
			f34_arg0.CompleteBanner:completeAnimation() --[[ @ 0]]
			f34_arg0.CompleteBanner:setAlpha( 1 ) --[[ @ 0]]
			f34_arg0.clipFinished( f34_arg0.CompleteBanner ) --[[ @ 0]]
		end,
		GainFocus = function ( f35_arg0, f35_arg1 )
			f35_arg0:__resetProperties() --[[ @ 0]]
			f35_arg0:setupElementClipCounter( 8 ) --[[ @ 0]]
			local f35_local0 = function ( f36_arg0 )
				f35_arg0.FocusGlow:beginAnimation( 200 ) --[[ @ 0]]
				f35_arg0.FocusGlow:setAlpha( 1 ) --[[ @ 0]]
				f35_arg0.FocusGlow:registerEventHandler( "interrupted_keyframe", f35_arg0.clipInterrupted ) --[[ @ 0]]
				f35_arg0.FocusGlow:registerEventHandler( "transition_complete_keyframe", f35_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f35_arg0.FocusGlow:completeAnimation() --[[ @ 0]]
			f35_arg0.FocusGlow:setAlpha( 0 ) --[[ @ 0]]
			f35_local0( f35_arg0.FocusGlow ) --[[ @ 0]]
			f35_arg0.gradient:completeAnimation() --[[ @ 0]]
			f35_arg0.gradient:setAlpha( 0 ) --[[ @ 0]]
			f35_arg0.clipFinished( f35_arg0.gradient ) --[[ @ 0]]
			f35_arg0.Timer:completeAnimation() --[[ @ 0]]
			f35_arg0.Timer:setAlpha( 0 ) --[[ @ 0]]
			f35_arg0.clipFinished( f35_arg0.Timer ) --[[ @ 0]]
			f35_arg0.ActiveBanner:completeAnimation() --[[ @ 0]]
			f35_arg0.ActiveBanner:setAlpha( 0 ) --[[ @ 0]]
			f35_arg0.clipFinished( f35_arg0.ActiveBanner ) --[[ @ 0]]
			f35_arg0.ProgressBar:completeAnimation() --[[ @ 0]]
			f35_arg0.ProgressBar:setAlpha( 0 ) --[[ @ 0]]
			f35_arg0.clipFinished( f35_arg0.ProgressBar ) --[[ @ 0]]
			f35_arg0.Darken:completeAnimation() --[[ @ 0]]
			f35_arg0.Darken:setAlpha( 0.8 ) --[[ @ 0]]
			f35_arg0.clipFinished( f35_arg0.Darken ) --[[ @ 0]]
			local f35_local1 = function ( f37_arg0 )
				f35_arg0.FocusBorder:beginAnimation( 200, Enum[@"luitween"][@"luitween_ease_in"] ) --[[ @ 0]]
				f35_arg0.FocusBorder:setAlpha( 1 ) --[[ @ 0]]
				f35_arg0.FocusBorder:registerEventHandler( "interrupted_keyframe", f35_arg0.clipInterrupted ) --[[ @ 0]]
				f35_arg0.FocusBorder:registerEventHandler( "transition_complete_keyframe", f35_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f35_arg0.FocusBorder:completeAnimation() --[[ @ 0]]
			f35_arg0.FocusBorder:setAlpha( 0 ) --[[ @ 0]]
			f35_local1( f35_arg0.FocusBorder ) --[[ @ 0]]
			f35_arg0.CompleteBanner:completeAnimation() --[[ @ 0]]
			f35_arg0.CompleteBanner:setAlpha( 1 ) --[[ @ 0]]
			f35_arg0.clipFinished( f35_arg0.CompleteBanner ) --[[ @ 0]]
		end,
		LoseFocus = function ( f38_arg0, f38_arg1 )
			f38_arg0:__resetProperties() --[[ @ 0]]
			f38_arg0:setupElementClipCounter( 8 ) --[[ @ 0]]
			local f38_local0 = function ( f39_arg0 )
				f38_arg0.FocusGlow:beginAnimation( 100 ) --[[ @ 0]]
				f38_arg0.FocusGlow:setAlpha( 0 ) --[[ @ 0]]
				f38_arg0.FocusGlow:registerEventHandler( "interrupted_keyframe", f38_arg0.clipInterrupted ) --[[ @ 0]]
				f38_arg0.FocusGlow:registerEventHandler( "transition_complete_keyframe", f38_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f38_arg0.FocusGlow:completeAnimation() --[[ @ 0]]
			f38_arg0.FocusGlow:setAlpha( 1 ) --[[ @ 0]]
			f38_local0( f38_arg0.FocusGlow ) --[[ @ 0]]
			f38_arg0.gradient:completeAnimation() --[[ @ 0]]
			f38_arg0.gradient:setAlpha( 0 ) --[[ @ 0]]
			f38_arg0.clipFinished( f38_arg0.gradient ) --[[ @ 0]]
			f38_arg0.Timer:completeAnimation() --[[ @ 0]]
			f38_arg0.Timer:setAlpha( 0 ) --[[ @ 0]]
			f38_arg0.clipFinished( f38_arg0.Timer ) --[[ @ 0]]
			f38_arg0.ActiveBanner:completeAnimation() --[[ @ 0]]
			f38_arg0.ActiveBanner:setAlpha( 0 ) --[[ @ 0]]
			f38_arg0.clipFinished( f38_arg0.ActiveBanner ) --[[ @ 0]]
			f38_arg0.ProgressBar:completeAnimation() --[[ @ 0]]
			f38_arg0.ProgressBar:setAlpha( 0 ) --[[ @ 0]]
			f38_arg0.clipFinished( f38_arg0.ProgressBar ) --[[ @ 0]]
			f38_arg0.Darken:completeAnimation() --[[ @ 0]]
			f38_arg0.Darken:setAlpha( 0.8 ) --[[ @ 0]]
			f38_arg0.clipFinished( f38_arg0.Darken ) --[[ @ 0]]
			local f38_local1 = function ( f40_arg0 )
				f38_arg0.FocusBorder:beginAnimation( 100 ) --[[ @ 0]]
				f38_arg0.FocusBorder:setAlpha( 0 ) --[[ @ 0]]
				f38_arg0.FocusBorder:registerEventHandler( "interrupted_keyframe", f38_arg0.clipInterrupted ) --[[ @ 0]]
				f38_arg0.FocusBorder:registerEventHandler( "transition_complete_keyframe", f38_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f38_arg0.FocusBorder:completeAnimation() --[[ @ 0]]
			f38_arg0.FocusBorder:setAlpha( 1 ) --[[ @ 0]]
			f38_local1( f38_arg0.FocusBorder ) --[[ @ 0]]
			f38_arg0.CompleteBanner:completeAnimation() --[[ @ 0]]
			f38_arg0.CompleteBanner:setAlpha( 1 ) --[[ @ 0]]
			f38_arg0.clipFinished( f38_arg0.CompleteBanner ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.ReservesSpecialContractInternal.__onClose = function ( f41_arg0 )
	f41_arg0.PreviewScene:close() --[[ @ 0]]
	f41_arg0.Title:close() --[[ @ 0]]
	f41_arg0.Description:close() --[[ @ 0]]
	f41_arg0.RewardName:close() --[[ @ 0]]
	f41_arg0.Timer:close() --[[ @ 0]]
	f41_arg0.ActiveBanner:close() --[[ @ 0]]
	f41_arg0.ProgressBar:close() --[[ @ 0]]
	f41_arg0.CompleteBanner:close() --[[ @ 0]]
	f41_arg0.ItemHintText:close() --[[ @ 0]]
end
 --[[ @ 0]]
