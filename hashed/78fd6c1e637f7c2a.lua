-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:35
require( "ui/uieditor/widgets/footer/footercontainer_frontend_right" ) --[[ @ 0]]
require( "x64:3bfd45228502765f" ) --[[ @ 0]]
require( "ui/uieditor/widgets/pc/pc_eula_pages" ) --[[ @ 0]]
require( "x64:32b3a36f75bb6e0e" ) --[[ @ 0]]

CoD.LegalTextViewerMenu = InheritFrom( CoD.Menu ) --[[ @ 0]]
LUI.createMenu.LegalTextViewerMenu = function ( f1_arg0, f1_arg1 )
	local self = CoD.Menu.NewForUIEditor( "LegalTextViewerMenu", f1_arg0 ) --[[ @ 0]]
	local f1_local1 = self --[[ @ 0]]
	MenuHidesFreeCursor( f1_local1, f1_arg0 ) --[[ @ 0]]
	self:setClass( CoD.LegalTextViewerMenu ) --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self:setOwner( f1_arg0 ) --[[ @ 0]]
	self:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	self:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	self:playSound( "menu_open", f1_arg0 ) --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	
	local BlackBG = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	BlackBG:setRGB( 0, 0, 0 ) --[[ @ 0]]
	BlackBG:setMaterial( LUI.UIImage.GetCachedMaterial( @"ui_multiply" ) ) --[[ @ 0]]
	self:addElement( BlackBG ) --[[ @ 0]]
	self.BlackBG = BlackBG --[[ @ 0]]
	
	local FooterContainerFrontendRight = CoD.FooterContainer_Frontend_Right.new( f1_local1, f1_arg0, 0.5, 0.5, -960, 960, 1, 1, -51, -3 ) --[[ @ 0]]
	FooterContainerFrontendRight:registerEventHandler( "menu_loaded", function ( element, event )
		local f2_local0 = nil --[[ @ 0]]
		if element.menuLoaded then
			f2_local0 = element:menuLoaded( event ) --[[ @ 0]]
		elseif element.super.menuLoaded then
			f2_local0 = element.super:menuLoaded( event ) --[[ @ 0]]
		end
		SizeToSafeArea( element, f1_arg0 ) --[[ @ 0]]
		if not f2_local0 then
			f2_local0 = element:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f2_local0
	end ) --[[ @ 0]]
	self:addElement( FooterContainerFrontendRight ) --[[ @ 0]]
	self.FooterContainerFrontendRight = FooterContainerFrontendRight --[[ @ 0]]
	
	local Border = CoD.LegalTextViewerBody.new( f1_local1, f1_arg0, 0.5, 0.5, -864, 864, 0.5, 0.5, -450, 450 ) --[[ @ 0]]
	self:addElement( Border ) --[[ @ 0]]
	self.Border = Border --[[ @ 0]]
	
	local Header = LUI.UIText.new( 0.5, 0.5, -864, 864, 0.5, 0.5, -507, -462 ) --[[ @ 0]]
	Header:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	Header:setAlignment( Enum[@"LUIAlignment"][@"hash_1FEEB12BCB0D7041"] ) --[[ @ 0]]
	Header:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	Header:subscribeToGlobalModel( f1_arg0, "CODAccountLegalInfo", "currentLegalTitle", function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			Header:setText( Engine[@"hash_4F9F1239CFD921FE"]( f3_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Header ) --[[ @ 0]]
	self.Header = Header --[[ @ 0]]
	
	local SliderArrowLeft = nil --[[ @ 0]]
	
	SliderArrowLeft = CoD.StartMenu_Options_SettingSliderArrow.new( f1_local1, f1_arg0, 0.5, 0.5, 570.5, 630.5, 0.5, 0.5, -522, -462 ) --[[ @ 0]]
	SliderArrowLeft:mergeStateConditions( {
		{
			stateName = "Unavailable",
			condition = function ( menu, element, event )
				return CoD.CoDAccountUtility.IsFirstLegalInfoEntry( f1_arg0 )
			end
		}
	} ) --[[ @ 0]]
	local LegalTextViewerPages = SliderArrowLeft --[[ @ 0]]
	local SliderArrowRight = SliderArrowLeft.subscribeToModel --[[ @ 0]]
	local f1_local9 = DataSources.CODAccountLegalInfo.getModel( f1_arg0 ) --[[ @ 0]]
	SliderArrowRight( LegalTextViewerPages, f1_local9.currentLegalInfoIndex, function ( f5_arg0 )
		f1_local1:updateElementState( SliderArrowLeft, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f5_arg0:get(),
			modelName = "currentLegalInfoIndex"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	SliderArrowLeft:setZRot( 270 ) --[[ @ 0]]
	SliderArrowLeft:registerEventHandler( "gain_focus", function ( element, event )
		local f6_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f6_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f6_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f6_local0
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( SliderArrowLeft, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		CoD.CoDAccountUtility.PreviousCurrentLegalInfoEntry( menu, self.LegalTextViewerPages, controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_0", nil, "ui_confirm" ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	self:addElement( SliderArrowLeft ) --[[ @ 0]]
	self.SliderArrowLeft = SliderArrowLeft --[[ @ 0]]
	
	SliderArrowRight = nil --[[ @ 0]]
	
	SliderArrowRight = CoD.StartMenu_Options_SettingSliderArrow.new( f1_local1, f1_arg0, 0.5, 0.5, 810, 864, 0.5, 0.5, -522, -462 ) --[[ @ 0]]
	SliderArrowRight:mergeStateConditions( {
		{
			stateName = "Unavailable",
			condition = function ( menu, element, event )
				return CoD.CoDAccountUtility.IsLastLegalInfoEntry( f1_arg0 )
			end
		}
	} ) --[[ @ 0]]
	f1_local9 = SliderArrowRight --[[ @ 0]]
	LegalTextViewerPages = SliderArrowRight.subscribeToModel --[[ @ 0]]
	local f1_local10 = DataSources.CODAccountLegalInfo.getModel( f1_arg0 ) --[[ @ 0]]
	LegalTextViewerPages( f1_local9, f1_local10.currentLegalInfoIndex, function ( f10_arg0 )
		f1_local1:updateElementState( SliderArrowRight, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f10_arg0:get(),
			modelName = "currentLegalInfoIndex"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	SliderArrowRight:setZRot( 90 ) --[[ @ 0]]
	SliderArrowRight:registerEventHandler( "gain_focus", function ( element, event )
		local f11_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f11_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f11_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f11_local0
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( SliderArrowRight, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		CoD.CoDAccountUtility.NextCurrentLegalInfoEntry( menu, self.LegalTextViewerPages, controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_0", nil, "ui_confirm" ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	self:addElement( SliderArrowRight ) --[[ @ 0]]
	self.SliderArrowRight = SliderArrowRight --[[ @ 0]]
	
	LegalTextViewerPages = nil --[[ @ 0]]
	
	LegalTextViewerPages = CoD.PC_EULA_Pages.new( f1_local1, f1_arg0, 0.5, 0.5, 649.5, 809.5, 0.5, 0.5, -507.5, -477.5 ) --[[ @ 0]]
	self:addElement( LegalTextViewerPages ) --[[ @ 0]]
	self.LegalTextViewerPages = LegalTextViewerPages --[[ @ 0]]
	
	f1_local10 = self --[[ @ 0]]
	f1_local9 = self.subscribeToModel --[[ @ 0]]
	local f1_local11 = DataSources.CODAccountLegalInfo.getModel( f1_arg0 ) --[[ @ 0]]
	f1_local9( f1_local10, f1_local11.currentLegalInfoIndex, function ( f14_arg0, f14_arg1 )
		CoD.Menu.UpdateButtonShownState( f14_arg1, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_2493152B20AE4F58"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f14_arg1, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_249A252B20B48936"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"], nil, function ( element, menu, controller, model )
		GoBack( self, controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"], @"hash_370A9FDC87CD3D48", nil, nil ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"LUIButton"][@"hash_2493152B20AE4F58"], nil, function ( element, menu, controller, model )
		if not CoD.CoDAccountUtility.IsFirstLegalInfoEntry( controller ) then
			CoD.CoDAccountUtility.PreviousCurrentLegalInfoEntry( menu, self.LegalTextViewerPages, controller ) --[[ @ 0]]
			UpdateAllMenuButtonPrompts( menu, controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not CoD.CoDAccountUtility.IsFirstLegalInfoEntry( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_2493152B20AE4F58"], @"hash_6272B11A2E0CC67C", nil, nil ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"LUIButton"][@"hash_249A252B20B48936"], nil, function ( element, menu, controller, model )
		if not CoD.CoDAccountUtility.IsLastLegalInfoEntry( controller ) then
			CoD.CoDAccountUtility.NextCurrentLegalInfoEntry( menu, self.LegalTextViewerPages, controller ) --[[ @ 0]]
			UpdateAllMenuButtonPrompts( menu, controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not CoD.CoDAccountUtility.IsLastLegalInfoEntry( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_249A252B20B48936"], @"hash_192878DD19A9AAD8", nil, nil ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( self, "close", function ( element )
		MenuUnhideFreeCursor( f1_local1, f1_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	FooterContainerFrontendRight:setModel( self.buttonModel, f1_arg0 ) --[[ @ 0]]
	if CoD.isPC then
		FooterContainerFrontendRight.id = "FooterContainerFrontendRight" --[[ @ 0]]
	end
	if CoD.isPC then
		SliderArrowLeft.id = "SliderArrowLeft" --[[ @ 0]]
	end
	if CoD.isPC then
		SliderArrowRight.id = "SliderArrowRight" --[[ @ 0]]
	end
	self:processEvent( {
		name = "menu_loaded",
		controller = f1_arg0
	} ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg0 ) --[[ @ 0]]
	end
	f1_local9 = self --[[ @ 0]]
	if IsPC() then
		CoD.CoDAccountUtility.SetupTextViewerPages( self.LegalTextViewerPages, f1_arg0 ) --[[ @ 0]]
	end
	return self
end
 --[[ @ 0]]
CoD.LegalTextViewerMenu.__onClose = function ( f22_arg0 )
	f22_arg0.FooterContainerFrontendRight:close() --[[ @ 0]]
	f22_arg0.Border:close() --[[ @ 0]]
	f22_arg0.Header:close() --[[ @ 0]]
	f22_arg0.SliderArrowLeft:close() --[[ @ 0]]
	f22_arg0.SliderArrowRight:close() --[[ @ 0]]
	f22_arg0.LegalTextViewerPages:close() --[[ @ 0]]
end
 --[[ @ 0]]
