-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:49
require( "x64:3792ba00b5100c37" ) --[[ @ 0]]
require( "ui/uieditor/widgets/aar_t8/rewards/aarrewardbacker" ) --[[ @ 0]]
require( "ui/uieditor/widgets/aar_t8/rewards/aarrewardheader" ) --[[ @ 0]]
require( "ui/uieditor/widgets/aar_t8/rewards/aarrewardsxp" ) --[[ @ 0]]
require( "x64:4fbc37d5639d4910" ) --[[ @ 0]]
require( "ui/uieditor/widgets/pc/utility/verticallistspacer" ) --[[ @ 0]]

CoD.AARChallengeReward = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.AARChallengeReward.__defaultWidth = 412 --[[ @ 0]]
CoD.AARChallengeReward.__defaultHeight = 772 --[[ @ 0]]
CoD.AARChallengeReward.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIVerticalList.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9, 0, true ) --[[ @ 0]]
	self:setAlignment( LUI.Alignment.Top ) --[[ @ 0]]
	self:setClass( CoD.AARChallengeReward ) --[[ @ 0]]
	self.id = "AARChallengeReward" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local Backer = CoD.AARRewardBacker.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	self:addElement( Backer ) --[[ @ 0]]
	self.Backer = Backer --[[ @ 0]]
	
	local VerticalListSpacer2 = CoD.VerticalListSpacer.new( f1_arg0, f1_arg1, 0, 0, 0, 412, 0, 0, 0, 19 ) --[[ @ 0]]
	self:addElement( VerticalListSpacer2 ) --[[ @ 0]]
	self.VerticalListSpacer2 = VerticalListSpacer2 --[[ @ 0]]
	
	local AARRewardHeader = CoD.AARRewardHeader.new( f1_arg0, f1_arg1, 0.5, 0.5, -206, 206, 0, 0, 19, 229 ) --[[ @ 0]]
	AARRewardHeader.Pointer:setRGB( 1, 0.82, 0.25 ) --[[ @ 0]]
	AARRewardHeader.Pointer:setAlpha( 0.5 ) --[[ @ 0]]
	AARRewardHeader.headerBacking:setRGB( 0.47, 0.39, 0.18 ) --[[ @ 0]]
	AARRewardHeader.headerBacking:setAlpha( 0.25 ) --[[ @ 0]]
	AARRewardHeader.TopStripBase:setRGB( 0.86, 0.73, 0.14 ) --[[ @ 0]]
	AARRewardHeader.mainTitle:setRGB( 0.89, 0.78, 0.25 ) --[[ @ 0]]
	AARRewardHeader:linkToElementModel( self, "levelText", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			AARRewardHeader.levelText:setText( f2_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	AARRewardHeader:linkToElementModel( self, "mainTitle", true, function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			AARRewardHeader.mainTitle:setText( LocalizeToUpperString( f3_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	AARRewardHeader:linkToElementModel( self, "mainIcon", true, function ( model )
		local f4_local0 = model:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			AARRewardHeader.mainIcon:setImage( RegisterImage( f4_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( AARRewardHeader ) --[[ @ 0]]
	self.AARRewardHeader = AARRewardHeader --[[ @ 0]]
	
	local VerticalListSpacer = CoD.VerticalListSpacer.new( f1_arg0, f1_arg1, 0, 0, 0.5, 412.5, 0, 0, 229, 245 ) --[[ @ 0]]
	self:addElement( VerticalListSpacer ) --[[ @ 0]]
	self.VerticalListSpacer = VerticalListSpacer --[[ @ 0]]
	
	local ChallengeItem = CoD.AARChallengeItem.new( f1_arg0, f1_arg1, 0, 0, 16.5, 396.5, 0, 0, 245, 475 ) --[[ @ 0]]
	ChallengeItem:mergeStateConditions( {
		{
			stateName = "RotatedLocked",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueTrue( self, f1_arg1, "challengeRewardLocked" ) and CoD.ModelUtility.IsSelfModelValueTrue( self, f1_arg1, "rotateChallengeRewardIcon" )
			end
		},
		{
			stateName = "Locked",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueTrue( self, f1_arg1, "challengeRewardLocked" )
			end
		},
		{
			stateName = "Rotated",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueTrue( self, f1_arg1, "rotateChallengeRewardIcon" )
			end
		}
	} ) --[[ @ 0]]
	ChallengeItem:linkToElementModel( ChallengeItem, "challengeRewardLocked", true, function ( model )
		f1_arg0:updateElementState( ChallengeItem, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "challengeRewardLocked"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	ChallengeItem:linkToElementModel( ChallengeItem, "rotateChallengeRewardIcon", true, function ( model )
		f1_arg0:updateElementState( ChallengeItem, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "rotateChallengeRewardIcon"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	ChallengeItem.Corner:setRGB( 1, 0.82, 0.25 ) --[[ @ 0]]
	ChallengeItem:linkToElementModel( self, "challengeImage", true, function ( model )
		local f10_local0 = model:get() --[[ @ 0]]
		if f10_local0 ~= nil then
			ChallengeItem.Image:setImage( RegisterImage( f10_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	ChallengeItem:linkToElementModel( self, "challengeImage", true, function ( model )
		local f11_local0 = model:get() --[[ @ 0]]
		if f11_local0 ~= nil then
			ChallengeItem.rotatedImage:setImage( RegisterImage( f11_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	ChallengeItem:linkToElementModel( self, "challengeDesc", true, function ( model )
		local f12_local0 = model:get() --[[ @ 0]]
		if f12_local0 ~= nil then
			ChallengeItem.Description:setText( f12_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	ChallengeItem:linkToElementModel( self, "challengeName", true, function ( model )
		local f13_local0 = model:get() --[[ @ 0]]
		if f13_local0 ~= nil then
			ChallengeItem.Title:setText( Engine[@"hash_4F9F1239CFD921FE"]( f13_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( ChallengeItem ) --[[ @ 0]]
	self.ChallengeItem = ChallengeItem --[[ @ 0]]
	
	local VerticalListSpacer3 = CoD.VerticalListSpacer.new( f1_arg0, f1_arg1, 0, 0, 0.5, 412.5, 0, 0, 475, 491 ) --[[ @ 0]]
	self:addElement( VerticalListSpacer3 ) --[[ @ 0]]
	self.VerticalListSpacer3 = VerticalListSpacer3 --[[ @ 0]]
	
	local InfoDotline2 = LUI.UIImage.new( 0.5, 0.5, -196, 184, 0, 0, 491, 495 ) --[[ @ 0]]
	InfoDotline2:setImage( RegisterImage( @"uie_ui_menu_specialist_hub_info_dotline" ) ) --[[ @ 0]]
	self:addElement( InfoDotline2 ) --[[ @ 0]]
	self.InfoDotline2 = InfoDotline2 --[[ @ 0]]
	
	local XPReward = CoD.AARRewardsXP.new( f1_arg0, f1_arg1, 0, 0, 16.5, 396.5, 0, 0, 495, 589 ) --[[ @ 0]]
	XPReward:mergeStateConditions( {
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return not CoD.ModelUtility.IsSelfModelValueNonEmptyString( self, f1_arg1, "totalXP" )
			end
		},
		{
			stateName = "DoubleXP",
			condition = function ( menu, element, event )
				return IsDoubleXP( f1_arg1 )
			end
		},
		{
			stateName = "Merit",
			condition = function ( menu, element, event )
				return IsWarzone()
			end
		}
	} ) --[[ @ 0]]
	XPReward:linkToElementModel( XPReward, "totalXP", true, function ( model )
		f1_arg0:updateElementState( XPReward, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "totalXP"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local VerticalListSpacer5 = XPReward --[[ @ 0]]
	local VerticalListSpacer4 = XPReward.subscribeToModel --[[ @ 0]]
	local AARTierItem = Engine[@"getglobalmodel"]() --[[ @ 0]]
	VerticalListSpacer4( VerticalListSpacer5, AARTierItem["lobbyRoot.lobbyNav"], function ( f18_arg0 )
		f1_arg0:updateElementState( XPReward, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f18_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	XPReward:linkToElementModel( self, "totalXP", true, function ( model )
		local f19_local0 = model:get() --[[ @ 0]]
		if f19_local0 ~= nil then
			XPReward.XP:setText( f19_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( XPReward ) --[[ @ 0]]
	self.XPReward = XPReward --[[ @ 0]]
	
	VerticalListSpacer4 = CoD.VerticalListSpacer.new( f1_arg0, f1_arg1, 0, 0, 0.5, 412.5, 0, 0, 589, 605 ) --[[ @ 0]]
	self:addElement( VerticalListSpacer4 ) --[[ @ 0]]
	self.VerticalListSpacer4 = VerticalListSpacer4 --[[ @ 0]]
	
	VerticalListSpacer5 = CoD.VerticalListSpacer.new( f1_arg0, f1_arg1, 0, 0, 10, 422, 0, 0, 605, 621 ) --[[ @ 0]]
	self:addElement( VerticalListSpacer5 ) --[[ @ 0]]
	self.VerticalListSpacer5 = VerticalListSpacer5 --[[ @ 0]]
	
	AARTierItem = CoD.AARTierItem.new( f1_arg0, f1_arg1, 0, 0, 16.5, 396.5, 0, 0, 621, 721 ) --[[ @ 0]]
	AARTierItem:linkToElementModel( self, nil, false, function ( model )
		AARTierItem:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( AARTierItem ) --[[ @ 0]]
	self.AARTierItem = AARTierItem --[[ @ 0]]
	
	local VerticalListSpacer6 = CoD.VerticalListSpacer.new( f1_arg0, f1_arg1, 0, 0, 0.5, 412.5, 0, 0, 721, 737 ) --[[ @ 0]]
	self:addElement( VerticalListSpacer6 ) --[[ @ 0]]
	self.VerticalListSpacer6 = VerticalListSpacer6 --[[ @ 0]]
	
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.AARChallengeReward.__resetProperties = function ( f21_arg0 )
	f21_arg0.VerticalListSpacer4:completeAnimation() --[[ @ 0]]
	f21_arg0.VerticalListSpacer5:completeAnimation() --[[ @ 0]]
	f21_arg0.InfoDotline2:completeAnimation() --[[ @ 0]]
	f21_arg0.VerticalListSpacer3:completeAnimation() --[[ @ 0]]
	f21_arg0.VerticalListSpacer:completeAnimation() --[[ @ 0]]
	f21_arg0.VerticalListSpacer4:setTopBottom( 0, 0, 589, 605 ) --[[ @ 0]]
	f21_arg0.VerticalListSpacer4:setAlpha( 1 ) --[[ @ 0]]
	f21_arg0.VerticalListSpacer5:setTopBottom( 0, 0, 605, 621 ) --[[ @ 0]]
	f21_arg0.VerticalListSpacer5:setAlpha( 1 ) --[[ @ 0]]
	f21_arg0.InfoDotline2:setAlpha( 1 ) --[[ @ 0]]
	f21_arg0.VerticalListSpacer3:setLeftRight( 0, 0, 0.5, 412.5 ) --[[ @ 0]]
	f21_arg0.VerticalListSpacer3:setTopBottom( 0, 0, 475, 491 ) --[[ @ 0]]
	f21_arg0.VerticalListSpacer:setTopBottom( 0, 0, 229, 245 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.AARChallengeReward.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f22_arg0, f22_arg1 )
			f22_arg0:__resetProperties() --[[ @ 0]]
			f22_arg0:setupElementClipCounter( 5 ) --[[ @ 0]]
			f22_arg0.VerticalListSpacer:completeAnimation() --[[ @ 0]]
			f22_arg0.VerticalListSpacer:setTopBottom( 0, 0, 221, 237 ) --[[ @ 0]]
			f22_arg0.clipFinished( f22_arg0.VerticalListSpacer ) --[[ @ 0]]
			f22_arg0.VerticalListSpacer3:completeAnimation() --[[ @ 0]]
			f22_arg0.VerticalListSpacer3:setLeftRight( 0, 0, 0, 412 ) --[[ @ 0]]
			f22_arg0.VerticalListSpacer3:setTopBottom( 0, 0, 221, 237 ) --[[ @ 0]]
			f22_arg0.clipFinished( f22_arg0.VerticalListSpacer3 ) --[[ @ 0]]
			f22_arg0.InfoDotline2:completeAnimation() --[[ @ 0]]
			f22_arg0.InfoDotline2:setAlpha( 0 ) --[[ @ 0]]
			f22_arg0.clipFinished( f22_arg0.InfoDotline2 ) --[[ @ 0]]
			f22_arg0.VerticalListSpacer4:completeAnimation() --[[ @ 0]]
			f22_arg0.VerticalListSpacer4:setTopBottom( 0, 0, 565, 581 ) --[[ @ 0]]
			f22_arg0.VerticalListSpacer4:setAlpha( 0 ) --[[ @ 0]]
			f22_arg0.clipFinished( f22_arg0.VerticalListSpacer4 ) --[[ @ 0]]
			f22_arg0.VerticalListSpacer5:completeAnimation() --[[ @ 0]]
			f22_arg0.VerticalListSpacer5:setTopBottom( 0, 0, 581, 597 ) --[[ @ 0]]
			f22_arg0.VerticalListSpacer5:setAlpha( 0 ) --[[ @ 0]]
			f22_arg0.clipFinished( f22_arg0.VerticalListSpacer5 ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.AARChallengeReward.__onClose = function ( f23_arg0 )
	f23_arg0.Backer:close() --[[ @ 0]]
	f23_arg0.VerticalListSpacer2:close() --[[ @ 0]]
	f23_arg0.AARRewardHeader:close() --[[ @ 0]]
	f23_arg0.VerticalListSpacer:close() --[[ @ 0]]
	f23_arg0.ChallengeItem:close() --[[ @ 0]]
	f23_arg0.VerticalListSpacer3:close() --[[ @ 0]]
	f23_arg0.XPReward:close() --[[ @ 0]]
	f23_arg0.VerticalListSpacer4:close() --[[ @ 0]]
	f23_arg0.VerticalListSpacer5:close() --[[ @ 0]]
	f23_arg0.AARTierItem:close() --[[ @ 0]]
	f23_arg0.VerticalListSpacer6:close() --[[ @ 0]]
end
 --[[ @ 0]]
