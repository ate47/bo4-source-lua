-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:50
require( "ui/uieditor/widgets/backgroundframes/genericmenuframeidentity" ) --[[ @ 0]]
require( "x64:12d64ca9d3c705ce" ) --[[ @ 0]]
require( "x64:2de4c66b722f8d67" ) --[[ @ 0]]
require( "x64:e46165d5c607ec3" ) --[[ @ 0]]
require( "x64:428b39fa069d1324" ) --[[ @ 0]]
require( "x64:443a18b0c952dcc0" ) --[[ @ 0]]

CoD.BlackjackReserveReveal = InheritFrom( CoD.Menu ) --[[ @ 0]]
LUI.createMenu.BlackjackReserveReveal = function ( f1_arg0, f1_arg1 )
	local self = CoD.Menu.NewForUIEditor( "BlackjackReserveReveal", f1_arg0 ) --[[ @ 0]]
	local f1_local1 = self --[[ @ 0]]
	MenuHidesFreeCursor( f1_local1, f1_arg0 ) --[[ @ 0]]
	CoD.BaseUtility.SetModelFromUserData( f1_arg0, self, f1_arg1._model ) --[[ @ 0]]
	CoD.BaseUtility.InitControllerModel( f1_arg0, "reservesRevealComplete", false ) --[[ @ 0]]
	CoD.BaseUtility.InitControllerModel( f1_arg0, "reservesRevealSkipAvailable", false ) --[[ @ 0]]
	self:setClass( CoD.BlackjackReserveReveal ) --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self:setOwner( f1_arg0 ) --[[ @ 0]]
	self:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	self:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	self:playSound( "menu_open", f1_arg0 ) --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_local1:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local backing = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	backing:setRGB( 0, 0, 0 ) --[[ @ 0]]
	backing:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_E2354BE557C4C7A" ) ) --[[ @ 0]]
	backing:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( backing ) --[[ @ 0]]
	self.backing = backing --[[ @ 0]]
	
	local BackgroundImage = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	BackgroundImage:setAlpha( 0.85 ) --[[ @ 0]]
	BackgroundImage:setImage( RegisterImage( @"uie_fe_cp_background" ) ) --[[ @ 0]]
	self:addElement( BackgroundImage ) --[[ @ 0]]
	self.BackgroundImage = BackgroundImage --[[ @ 0]]
	
	local FramingCornerBrackets = CoD.CommonCornerBrackets01.new( f1_local1, f1_arg0, 0.5, 0.5, -598.5, 598.5, 0.5, 0.5, -374, 374 ) --[[ @ 0]]
	FramingCornerBrackets:setAlpha( 0.1 ) --[[ @ 0]]
	self:addElement( FramingCornerBrackets ) --[[ @ 0]]
	self.FramingCornerBrackets = FramingCornerBrackets --[[ @ 0]]
	
	local NoiseTiledBackingRight = LUI.UIImage.new( 0.5, 0.5, -565.5, 565.5, 0.5, 0.5, -342, 342 ) --[[ @ 0]]
	NoiseTiledBackingRight:setAlpha( 0.4 ) --[[ @ 0]]
	NoiseTiledBackingRight:setImage( RegisterImage( @"uie_ui_menu_specialist_hub_repeat_bg" ) ) --[[ @ 0]]
	NoiseTiledBackingRight:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_16CBE95C250C6D15" ) ) --[[ @ 0]]
	NoiseTiledBackingRight:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	NoiseTiledBackingRight:setupNineSliceShader( 196, 88 ) --[[ @ 0]]
	self:addElement( NoiseTiledBackingRight ) --[[ @ 0]]
	self.NoiseTiledBackingRight = NoiseTiledBackingRight --[[ @ 0]]
	
	local DottedLineBtm = LUI.UIImage.new( 0.5, 0.5, -566, 566, 0.5, 0.5, 354, 358 ) --[[ @ 0]]
	DottedLineBtm:setAlpha( 0.35 ) --[[ @ 0]]
	DottedLineBtm:setImage( RegisterImage( @"uie_ui_menu_social_emblem_dotline_tiled" ) ) --[[ @ 0]]
	DottedLineBtm:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_67C9C02F608D0A75" ) ) --[[ @ 0]]
	DottedLineBtm:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	DottedLineBtm:setupNineSliceShader( 16, 4 ) --[[ @ 0]]
	self:addElement( DottedLineBtm ) --[[ @ 0]]
	self.DottedLineBtm = DottedLineBtm --[[ @ 0]]
	
	local DottedLineTop = LUI.UIImage.new( 0.5, 0.5, -566, 566, 0.5, 0.5, -359, -355 ) --[[ @ 0]]
	DottedLineTop:setAlpha( 0.35 ) --[[ @ 0]]
	DottedLineTop:setImage( RegisterImage( @"uie_ui_menu_social_emblem_dotline_tiled" ) ) --[[ @ 0]]
	DottedLineTop:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_67C9C02F608D0A75" ) ) --[[ @ 0]]
	DottedLineTop:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	DottedLineTop:setupNineSliceShader( 16, 4 ) --[[ @ 0]]
	self:addElement( DottedLineTop ) --[[ @ 0]]
	self.DottedLineTop = DottedLineTop --[[ @ 0]]
	
	local GenericMenuFrameIdentity = CoD.GenericMenuFrameIdentity.new( f1_local1, f1_arg0, 0.5, 0.5, -960, 960, 0, 1, 0, 0 ) --[[ @ 0]]
	GenericMenuFrameIdentity.CommonHeader.subtitle.StageTitle:setText( LocalizeToUpperString( @"hash_5B59099CB3805DEB" ) ) --[[ @ 0]]
	GenericMenuFrameIdentity:subscribeToGlobalModel( f1_arg0, "LobbyRoot", "lobbyTitle", function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			GenericMenuFrameIdentity.CommonHeader.subtitle.subtitle:setText( Engine[@"hash_4F9F1239CFD921FE"]( f2_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( GenericMenuFrameIdentity ) --[[ @ 0]]
	self.GenericMenuFrameIdentity = GenericMenuFrameIdentity --[[ @ 0]]
	
	local ReservesReroll = CoD.ReservesReroll.new( f1_local1, f1_arg0, 0.5, 0.5, -866.5, -616.5, 0.5, 0.5, -135.5, 135.5 ) --[[ @ 0]]
	ReservesReroll:linkToElementModel( self, nil, false, function ( model )
		ReservesReroll:setModel( model, f1_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( ReservesReroll ) --[[ @ 0]]
	self.ReservesReroll = ReservesReroll --[[ @ 0]]
	
	local DupeMeter = CoD.DupeMeter.new( f1_local1, f1_arg0, 0.5, 0.5, -174.5, 174.5, 0.5, 0.5, 361, 395 ) --[[ @ 0]]
	DupeMeter:mergeStateConditions( {
		{
			stateName = "AllRngUnlocked",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualToHashString( f1_arg0, element, "name", @"hash_1717FF140F30014C" ) and AlwaysFalse()
			end
		}
	} ) --[[ @ 0]]
	DupeMeter:linkToElementModel( DupeMeter, "name", true, function ( model )
		f1_local1:updateElementState( DupeMeter, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = model:get(),
			modelName = "name"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	DupeMeter.Backer.Blur:setAlpha( 0 ) --[[ @ 0]]
	DupeMeter:linkToElementModel( self, nil, false, function ( model )
		DupeMeter:setModel( model, f1_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( DupeMeter ) --[[ @ 0]]
	self.DupeMeter = DupeMeter --[[ @ 0]]
	
	local SkipRevealPrompt = CoD.ReservesSkipRevealPromptContainer.new( f1_local1, f1_arg0, 0.5, 0.5, 539, 852, 0.5, 0.5, 378, 404 ) --[[ @ 0]]
	self:addElement( SkipRevealPrompt ) --[[ @ 0]]
	self.SkipRevealPrompt = SkipRevealPrompt --[[ @ 0]]
	
	local RevealList = LUI.UIList.new( f1_local1, f1_arg0, 80, 0, nil, false, false, false, false ) --[[ @ 0]]
	RevealList:setLeftRight( 0.5, 0.5, -545, 545 ) --[[ @ 0]]
	RevealList:setTopBottom( 0.5, 0.5, -316, 316 ) --[[ @ 0]]
	RevealList:setWidgetType( CoD.ReservesRevealItem ) --[[ @ 0]]
	RevealList:setHorizontalCount( 3 ) --[[ @ 0]]
	RevealList:setSpacing( 80 ) --[[ @ 0]]
	RevealList:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	RevealList:setDataSource( "BlackjackReserveRevealList" ) --[[ @ 0]]
	self:addElement( RevealList ) --[[ @ 0]]
	self.RevealList = RevealList --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return not MenuPropertyIsTrue( menu, "_reservesRevealIntroComplete" )
			end
		},
		{
			stateName = "Rolling",
			condition = function ( menu, element, event )
				return not CoD.ModelUtility.IsModelValueTrue( f1_arg0, "LootRNGResult.ready" )
			end
		},
		{
			stateName = "Results",
			condition = function ( menu, element, event )
				return not CoD.ModelUtility.IsModelValueTrue( f1_arg0, "reservesRevealComplete" )
			end
		},
		{
			stateName = "Reroll",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsModelValueTrue( f1_arg0, "reservesRevealComplete" )
			end
		}
	} ) --[[ @ 0]]
	local f1_local13 = self --[[ @ 0]]
	local f1_local14 = self.subscribeToModel --[[ @ 0]]
	local f1_local15 = Engine[@"getmodelforcontroller"]( f1_arg0 ) --[[ @ 0]]
	f1_local14( f1_local13, f1_local15["LootRNGResult.ready"], function ( f11_arg0 )
		f1_local1:updateElementState( self, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f11_arg0:get(),
			modelName = "LootRNGResult.ready"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local13 = self --[[ @ 0]]
	f1_local14 = self.subscribeToModel --[[ @ 0]]
	f1_local15 = Engine[@"getmodelforcontroller"]( f1_arg0 ) --[[ @ 0]]
	f1_local14( f1_local13, f1_local15.reservesRevealComplete, function ( f12_arg0 )
		f1_local1:updateElementState( self, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f12_arg0:get(),
			modelName = "reservesRevealComplete"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local13 = self --[[ @ 0]]
	f1_local14 = self.subscribeToModel --[[ @ 0]]
	f1_local15 = Engine[@"getmodelforcontroller"]( f1_arg0 ) --[[ @ 0]]
	f1_local14( f1_local13, f1_local15.reservesRevealComplete, function ( f13_arg0, f13_arg1 )
		CoD.Menu.UpdateButtonShownState( f13_arg1, f1_local1, f1_arg0, Enum[@"luibutton"][@"lui_key_xbb_pscircle"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f13_arg1, f1_local1, f1_arg0, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local13 = self --[[ @ 0]]
	f1_local14 = self.subscribeToModel --[[ @ 0]]
	f1_local15 = Engine[@"getmodelforcontroller"]( f1_arg0 ) --[[ @ 0]]
	f1_local14( f1_local13, f1_local15["LootRNGResult.ready"], function ( f14_arg0, f14_arg1 )
		CoD.Menu.UpdateButtonShownState( f14_arg1, f1_local1, f1_arg0, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local13 = self --[[ @ 0]]
	f1_local14 = self.subscribeToModel --[[ @ 0]]
	f1_local15 = Engine[@"getmodelforcontroller"]( f1_arg0 ) --[[ @ 0]]
	f1_local14( f1_local13, f1_local15["LootRNGResult.allBribeItemsOwned"], function ( f15_arg0, f15_arg1 )
		CoD.Menu.UpdateButtonShownState( f15_arg1, f1_local1, f1_arg0, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local13 = self --[[ @ 0]]
	f1_local14 = self.subscribeToModel --[[ @ 0]]
	f1_local15 = Engine[@"getmodelforcontroller"]( f1_arg0 ) --[[ @ 0]]
	f1_local14( f1_local13, f1_local15.reservesRevealSkipAvailable, function ( f16_arg0, f16_arg1 )
		CoD.Menu.UpdateButtonShownState( f16_arg1, f1_local1, f1_arg0, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"luibutton"][@"lui_key_xbb_pscircle"], "ESCAPE", function ( element, menu, controller, model )
		if CoD.ModelUtility.IsModelValueTrue( controller, "reservesRevealComplete" ) then
			GoBack( self, controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if CoD.ModelUtility.IsModelValueTrue( controller, "reservesRevealComplete" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xbb_pscircle"], @"menu/back", nil, "ESCAPE" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"luibutton"][@"lui_key_xba_pscross"], nil, function ( element, menu, controller, model )
		if CoD.BlackMarketUtility.CanSkipReservesRevealAnimation( controller ) then
			CoD.BlackMarketUtility.SkipReservesRevealAnimation( controller, menu, self.RevealList ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if CoD.BlackMarketUtility.CanSkipReservesRevealAnimation( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"hash_0", nil, nil ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( self, "setState", function ( element, controller, f21_arg2, f21_arg3, f21_arg4 )
		if IsMenuInState( f1_local1, "Reroll" ) then
			SetMenuProperty( f1_local1, "m_disableNavigation", nil ) --[[ @ 0]]
		elseif MenuPropertyIsTrue( f1_local1, "_reservesRevealIntroComplete" ) and CoD.ModelUtility.IsModelValueTrue( controller, "LootRNGResult.ready" ) and CoD.ModelUtility.IsModelValueTrue( controller, "LootRNGResult.allBribeItemsOwned" ) then
			GoBack( self, controller ) --[[ @ 0]]
			CoD.BlackMarketUtility.ShowBribeNotSpentNotification( controller ) --[[ @ 0]]
		else
			SetMenuProperty( f1_local1, "m_disableNavigation", true ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( self, "close", function ( element )
		CoD.BlackMarketUtility.ClearRNGModels( f1_arg0 ) --[[ @ 0]]
		CoD.BlackMarketUtility.ClearDupeMeterPulseModels( f1_arg0 ) --[[ @ 0]]
		CoD.BlackMarketUtility.SendClientScriptBlackjackReserveNotify( f1_arg0, true ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:subscribeToGlobalModel( f1_arg0, "PerController", "LootRNGResult.ready", function ( model )
		local f23_local0 = self --[[ @ 0]]
		if not CoD.ModelUtility.IsModelValueTrue( f1_arg0, "LootRNGResult.ready" ) then
			CoD.BlackMarketUtility.SetupReservesRevealFailsafe( f1_arg0, f1_local1, 30 ) --[[ @ 0]]
			CoD.BlackMarketUtility.SetupReservesRevealSkipDelay( f1_arg0, f1_local1, 1000, 1500 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	GenericMenuFrameIdentity:setModel( self.buttonModel, f1_arg0 ) --[[ @ 0]]
	GenericMenuFrameIdentity.id = "GenericMenuFrameIdentity" --[[ @ 0]]
	ReservesReroll.id = "ReservesReroll" --[[ @ 0]]
	RevealList.id = "RevealList" --[[ @ 0]]
	self:processEvent( {
		name = "menu_loaded",
		controller = f1_arg0
	} ) --[[ @ 0]]
	self.__defaultFocus = ReservesReroll --[[ @ 0]]
	if CoD.isPC and (IsKeyboard( f1_arg0 ) or self.ignoreCursor) then
		self:restoreState( f1_arg0 ) --[[ @ 0]]
	end
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg0 ) --[[ @ 0]]
	end
	
	f1_local14 = self --[[ @ 0]]
	CoD.BlackMarketUtility.ReservesRevealIntroDelay( f1_arg0, f1_local1, 3500 ) --[[ @ 0]]
	return self
end
 --[[ @ 0]]
CoD.BlackjackReserveReveal.__resetProperties = function ( f24_arg0 )
	f24_arg0.ReservesReroll:completeAnimation() --[[ @ 0]]
	f24_arg0.GenericMenuFrameIdentity:completeAnimation() --[[ @ 0]]
	f24_arg0.DupeMeter:completeAnimation() --[[ @ 0]]
	f24_arg0.RevealList:completeAnimation() --[[ @ 0]]
	f24_arg0.NoiseTiledBackingRight:completeAnimation() --[[ @ 0]]
	f24_arg0.FramingCornerBrackets:completeAnimation() --[[ @ 0]]
	f24_arg0.BackgroundImage:completeAnimation() --[[ @ 0]]
	f24_arg0.backing:completeAnimation() --[[ @ 0]]
	f24_arg0.DottedLineTop:completeAnimation() --[[ @ 0]]
	f24_arg0.DottedLineBtm:completeAnimation() --[[ @ 0]]
	f24_arg0.ReservesReroll:setAlpha( 1 ) --[[ @ 0]]
	f24_arg0.GenericMenuFrameIdentity:setAlpha( 1 ) --[[ @ 0]]
	f24_arg0.DupeMeter:setAlpha( 1 ) --[[ @ 0]]
	f24_arg0.RevealList:setAlpha( 1 ) --[[ @ 0]]
	f24_arg0.NoiseTiledBackingRight:setAlpha( 0.4 ) --[[ @ 0]]
	f24_arg0.FramingCornerBrackets:setAlpha( 0.1 ) --[[ @ 0]]
	f24_arg0.BackgroundImage:setAlpha( 0.85 ) --[[ @ 0]]
	f24_arg0.backing:setAlpha( 1 ) --[[ @ 0]]
	f24_arg0.DottedLineTop:setAlpha( 0.35 ) --[[ @ 0]]
	f24_arg0.DottedLineBtm:setAlpha( 0.35 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.BlackjackReserveReveal.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f25_arg0, f25_arg1 )
			f25_arg0:__resetProperties() --[[ @ 0]]
			f25_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f25_arg0.GenericMenuFrameIdentity:completeAnimation() --[[ @ 0]]
			f25_arg0.GenericMenuFrameIdentity:setAlpha( 0 ) --[[ @ 0]]
			f25_arg0.clipFinished( f25_arg0.GenericMenuFrameIdentity ) --[[ @ 0]]
			f25_arg0.ReservesReroll:completeAnimation() --[[ @ 0]]
			f25_arg0.ReservesReroll:setAlpha( 0 ) --[[ @ 0]]
			f25_arg0.clipFinished( f25_arg0.ReservesReroll ) --[[ @ 0]]
			f25_arg0.DupeMeter:completeAnimation() --[[ @ 0]]
			f25_arg0.DupeMeter:setAlpha( 0 ) --[[ @ 0]]
			f25_arg0.clipFinished( f25_arg0.DupeMeter ) --[[ @ 0]]
			f25_arg0.RevealList:completeAnimation() --[[ @ 0]]
			f25_arg0.RevealList:setAlpha( 0 ) --[[ @ 0]]
			f25_arg0.clipFinished( f25_arg0.RevealList ) --[[ @ 0]]
		end
	},
	Hidden = {
		DefaultClip = function ( f26_arg0, f26_arg1 )
			f26_arg0:__resetProperties() --[[ @ 0]]
			f26_arg0:setupElementClipCounter( 10 ) --[[ @ 0]]
			f26_arg0.backing:completeAnimation() --[[ @ 0]]
			f26_arg0.backing:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.backing ) --[[ @ 0]]
			f26_arg0.BackgroundImage:completeAnimation() --[[ @ 0]]
			f26_arg0.BackgroundImage:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.BackgroundImage ) --[[ @ 0]]
			f26_arg0.FramingCornerBrackets:completeAnimation() --[[ @ 0]]
			f26_arg0.FramingCornerBrackets:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.FramingCornerBrackets ) --[[ @ 0]]
			f26_arg0.NoiseTiledBackingRight:completeAnimation() --[[ @ 0]]
			f26_arg0.NoiseTiledBackingRight:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.NoiseTiledBackingRight ) --[[ @ 0]]
			f26_arg0.DottedLineBtm:completeAnimation() --[[ @ 0]]
			f26_arg0.DottedLineBtm:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.DottedLineBtm ) --[[ @ 0]]
			f26_arg0.DottedLineTop:completeAnimation() --[[ @ 0]]
			f26_arg0.DottedLineTop:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.DottedLineTop ) --[[ @ 0]]
			f26_arg0.GenericMenuFrameIdentity:completeAnimation() --[[ @ 0]]
			f26_arg0.GenericMenuFrameIdentity:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.GenericMenuFrameIdentity ) --[[ @ 0]]
			f26_arg0.ReservesReroll:completeAnimation() --[[ @ 0]]
			f26_arg0.ReservesReroll:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.ReservesReroll ) --[[ @ 0]]
			f26_arg0.DupeMeter:completeAnimation() --[[ @ 0]]
			f26_arg0.DupeMeter:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.DupeMeter ) --[[ @ 0]]
			f26_arg0.RevealList:completeAnimation() --[[ @ 0]]
			f26_arg0.RevealList:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.RevealList ) --[[ @ 0]]
		end,
		Rolling = function ( f27_arg0, f27_arg1 )
			f27_arg0:__resetProperties() --[[ @ 0]]
			f27_arg0:setupElementClipCounter( 9 ) --[[ @ 0]]
			local f27_local0 = function ( f28_arg0 )
				f27_arg0.backing:beginAnimation( 1000 ) --[[ @ 0]]
				f27_arg0.backing:setAlpha( 1 ) --[[ @ 0]]
				f27_arg0.backing:registerEventHandler( "interrupted_keyframe", f27_arg0.clipInterrupted ) --[[ @ 0]]
				f27_arg0.backing:registerEventHandler( "transition_complete_keyframe", f27_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f27_arg0.backing:completeAnimation() --[[ @ 0]]
			f27_arg0.backing:setAlpha( 0 ) --[[ @ 0]]
			f27_local0( f27_arg0.backing ) --[[ @ 0]]
			local f27_local1 = function ( f29_arg0 )
				f27_arg0.BackgroundImage:beginAnimation( 1000 ) --[[ @ 0]]
				f27_arg0.BackgroundImage:setAlpha( 0.85 ) --[[ @ 0]]
				f27_arg0.BackgroundImage:registerEventHandler( "interrupted_keyframe", f27_arg0.clipInterrupted ) --[[ @ 0]]
				f27_arg0.BackgroundImage:registerEventHandler( "transition_complete_keyframe", f27_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f27_arg0.BackgroundImage:completeAnimation() --[[ @ 0]]
			f27_arg0.BackgroundImage:setAlpha( 0 ) --[[ @ 0]]
			f27_local1( f27_arg0.BackgroundImage ) --[[ @ 0]]
			local f27_local2 = function ( f30_arg0 )
				f27_arg0.FramingCornerBrackets:beginAnimation( 1000 ) --[[ @ 0]]
				f27_arg0.FramingCornerBrackets:setAlpha( 0.1 ) --[[ @ 0]]
				f27_arg0.FramingCornerBrackets:registerEventHandler( "interrupted_keyframe", f27_arg0.clipInterrupted ) --[[ @ 0]]
				f27_arg0.FramingCornerBrackets:registerEventHandler( "transition_complete_keyframe", f27_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f27_arg0.FramingCornerBrackets:completeAnimation() --[[ @ 0]]
			f27_arg0.FramingCornerBrackets:setAlpha( 0 ) --[[ @ 0]]
			f27_local2( f27_arg0.FramingCornerBrackets ) --[[ @ 0]]
			local f27_local3 = function ( f31_arg0 )
				f27_arg0.NoiseTiledBackingRight:beginAnimation( 1000 ) --[[ @ 0]]
				f27_arg0.NoiseTiledBackingRight:setAlpha( 0.4 ) --[[ @ 0]]
				f27_arg0.NoiseTiledBackingRight:registerEventHandler( "interrupted_keyframe", f27_arg0.clipInterrupted ) --[[ @ 0]]
				f27_arg0.NoiseTiledBackingRight:registerEventHandler( "transition_complete_keyframe", f27_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f27_arg0.NoiseTiledBackingRight:completeAnimation() --[[ @ 0]]
			f27_arg0.NoiseTiledBackingRight:setAlpha( 0 ) --[[ @ 0]]
			f27_local3( f27_arg0.NoiseTiledBackingRight ) --[[ @ 0]]
			local f27_local4 = function ( f32_arg0 )
				f27_arg0.DottedLineBtm:beginAnimation( 1000 ) --[[ @ 0]]
				f27_arg0.DottedLineBtm:setAlpha( 0.35 ) --[[ @ 0]]
				f27_arg0.DottedLineBtm:registerEventHandler( "interrupted_keyframe", f27_arg0.clipInterrupted ) --[[ @ 0]]
				f27_arg0.DottedLineBtm:registerEventHandler( "transition_complete_keyframe", f27_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f27_arg0.DottedLineBtm:completeAnimation() --[[ @ 0]]
			f27_arg0.DottedLineBtm:setAlpha( 0 ) --[[ @ 0]]
			f27_local4( f27_arg0.DottedLineBtm ) --[[ @ 0]]
			local f27_local5 = function ( f33_arg0 )
				f27_arg0.DottedLineTop:beginAnimation( 1000 ) --[[ @ 0]]
				f27_arg0.DottedLineTop:setAlpha( 0.35 ) --[[ @ 0]]
				f27_arg0.DottedLineTop:registerEventHandler( "interrupted_keyframe", f27_arg0.clipInterrupted ) --[[ @ 0]]
				f27_arg0.DottedLineTop:registerEventHandler( "transition_complete_keyframe", f27_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f27_arg0.DottedLineTop:completeAnimation() --[[ @ 0]]
			f27_arg0.DottedLineTop:setAlpha( 0 ) --[[ @ 0]]
			f27_local5( f27_arg0.DottedLineTop ) --[[ @ 0]]
			local f27_local6 = function ( f34_arg0 )
				f27_arg0.GenericMenuFrameIdentity:beginAnimation( 1000 ) --[[ @ 0]]
				f27_arg0.GenericMenuFrameIdentity:setAlpha( 1 ) --[[ @ 0]]
				f27_arg0.GenericMenuFrameIdentity:registerEventHandler( "interrupted_keyframe", f27_arg0.clipInterrupted ) --[[ @ 0]]
				f27_arg0.GenericMenuFrameIdentity:registerEventHandler( "transition_complete_keyframe", f27_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f27_arg0.GenericMenuFrameIdentity:completeAnimation() --[[ @ 0]]
			f27_arg0.GenericMenuFrameIdentity:setAlpha( 0 ) --[[ @ 0]]
			f27_local6( f27_arg0.GenericMenuFrameIdentity ) --[[ @ 0]]
			f27_arg0.ReservesReroll:completeAnimation() --[[ @ 0]]
			f27_arg0.ReservesReroll:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.ReservesReroll ) --[[ @ 0]]
			f27_arg0.DupeMeter:completeAnimation() --[[ @ 0]]
			f27_arg0.DupeMeter:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.DupeMeter ) --[[ @ 0]]
		end,
		Results = function ( f35_arg0, f35_arg1 )
			f35_arg0:__resetProperties() --[[ @ 0]]
			f35_arg0:setupElementClipCounter( 9 ) --[[ @ 0]]
			local f35_local0 = function ( f36_arg0 )
				f35_arg0.backing:beginAnimation( 1000 ) --[[ @ 0]]
				f35_arg0.backing:setAlpha( 1 ) --[[ @ 0]]
				f35_arg0.backing:registerEventHandler( "interrupted_keyframe", f35_arg0.clipInterrupted ) --[[ @ 0]]
				f35_arg0.backing:registerEventHandler( "transition_complete_keyframe", f35_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f35_arg0.backing:completeAnimation() --[[ @ 0]]
			f35_arg0.backing:setAlpha( 0 ) --[[ @ 0]]
			f35_local0( f35_arg0.backing ) --[[ @ 0]]
			local f35_local1 = function ( f37_arg0 )
				f35_arg0.BackgroundImage:beginAnimation( 1000 ) --[[ @ 0]]
				f35_arg0.BackgroundImage:setAlpha( 0.85 ) --[[ @ 0]]
				f35_arg0.BackgroundImage:registerEventHandler( "interrupted_keyframe", f35_arg0.clipInterrupted ) --[[ @ 0]]
				f35_arg0.BackgroundImage:registerEventHandler( "transition_complete_keyframe", f35_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f35_arg0.BackgroundImage:completeAnimation() --[[ @ 0]]
			f35_arg0.BackgroundImage:setAlpha( 0 ) --[[ @ 0]]
			f35_local1( f35_arg0.BackgroundImage ) --[[ @ 0]]
			local f35_local2 = function ( f38_arg0 )
				f35_arg0.FramingCornerBrackets:beginAnimation( 1000 ) --[[ @ 0]]
				f35_arg0.FramingCornerBrackets:setAlpha( 0.1 ) --[[ @ 0]]
				f35_arg0.FramingCornerBrackets:registerEventHandler( "interrupted_keyframe", f35_arg0.clipInterrupted ) --[[ @ 0]]
				f35_arg0.FramingCornerBrackets:registerEventHandler( "transition_complete_keyframe", f35_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f35_arg0.FramingCornerBrackets:completeAnimation() --[[ @ 0]]
			f35_arg0.FramingCornerBrackets:setAlpha( 0 ) --[[ @ 0]]
			f35_local2( f35_arg0.FramingCornerBrackets ) --[[ @ 0]]
			local f35_local3 = function ( f39_arg0 )
				f35_arg0.NoiseTiledBackingRight:beginAnimation( 1000 ) --[[ @ 0]]
				f35_arg0.NoiseTiledBackingRight:setAlpha( 0.4 ) --[[ @ 0]]
				f35_arg0.NoiseTiledBackingRight:registerEventHandler( "interrupted_keyframe", f35_arg0.clipInterrupted ) --[[ @ 0]]
				f35_arg0.NoiseTiledBackingRight:registerEventHandler( "transition_complete_keyframe", f35_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f35_arg0.NoiseTiledBackingRight:completeAnimation() --[[ @ 0]]
			f35_arg0.NoiseTiledBackingRight:setAlpha( 0 ) --[[ @ 0]]
			f35_local3( f35_arg0.NoiseTiledBackingRight ) --[[ @ 0]]
			local f35_local4 = function ( f40_arg0 )
				f35_arg0.DottedLineBtm:beginAnimation( 1000 ) --[[ @ 0]]
				f35_arg0.DottedLineBtm:setAlpha( 0.35 ) --[[ @ 0]]
				f35_arg0.DottedLineBtm:registerEventHandler( "interrupted_keyframe", f35_arg0.clipInterrupted ) --[[ @ 0]]
				f35_arg0.DottedLineBtm:registerEventHandler( "transition_complete_keyframe", f35_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f35_arg0.DottedLineBtm:completeAnimation() --[[ @ 0]]
			f35_arg0.DottedLineBtm:setAlpha( 0 ) --[[ @ 0]]
			f35_local4( f35_arg0.DottedLineBtm ) --[[ @ 0]]
			local f35_local5 = function ( f41_arg0 )
				f35_arg0.DottedLineTop:beginAnimation( 1000 ) --[[ @ 0]]
				f35_arg0.DottedLineTop:setAlpha( 0.35 ) --[[ @ 0]]
				f35_arg0.DottedLineTop:registerEventHandler( "interrupted_keyframe", f35_arg0.clipInterrupted ) --[[ @ 0]]
				f35_arg0.DottedLineTop:registerEventHandler( "transition_complete_keyframe", f35_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f35_arg0.DottedLineTop:completeAnimation() --[[ @ 0]]
			f35_arg0.DottedLineTop:setAlpha( 0 ) --[[ @ 0]]
			f35_local5( f35_arg0.DottedLineTop ) --[[ @ 0]]
			local f35_local6 = function ( f42_arg0 )
				f35_arg0.GenericMenuFrameIdentity:beginAnimation( 1000 ) --[[ @ 0]]
				f35_arg0.GenericMenuFrameIdentity:setAlpha( 1 ) --[[ @ 0]]
				f35_arg0.GenericMenuFrameIdentity:registerEventHandler( "interrupted_keyframe", f35_arg0.clipInterrupted ) --[[ @ 0]]
				f35_arg0.GenericMenuFrameIdentity:registerEventHandler( "transition_complete_keyframe", f35_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f35_arg0.GenericMenuFrameIdentity:completeAnimation() --[[ @ 0]]
			f35_arg0.GenericMenuFrameIdentity:setAlpha( 0 ) --[[ @ 0]]
			f35_local6( f35_arg0.GenericMenuFrameIdentity ) --[[ @ 0]]
			f35_arg0.ReservesReroll:completeAnimation() --[[ @ 0]]
			f35_arg0.ReservesReroll:setAlpha( 0 ) --[[ @ 0]]
			f35_arg0.clipFinished( f35_arg0.ReservesReroll ) --[[ @ 0]]
			f35_arg0.DupeMeter:completeAnimation() --[[ @ 0]]
			f35_arg0.DupeMeter:setAlpha( 0 ) --[[ @ 0]]
			f35_arg0.clipFinished( f35_arg0.DupeMeter ) --[[ @ 0]]
		end
	},
	Rolling = {
		DefaultClip = function ( f43_arg0, f43_arg1 )
			f43_arg0:__resetProperties() --[[ @ 0]]
			f43_arg0:setupElementClipCounter( 9 ) --[[ @ 0]]
			f43_arg0.backing:completeAnimation() --[[ @ 0]]
			f43_arg0.backing:setAlpha( 1 ) --[[ @ 0]]
			f43_arg0.clipFinished( f43_arg0.backing ) --[[ @ 0]]
			f43_arg0.BackgroundImage:completeAnimation() --[[ @ 0]]
			f43_arg0.BackgroundImage:setAlpha( 0.85 ) --[[ @ 0]]
			f43_arg0.clipFinished( f43_arg0.BackgroundImage ) --[[ @ 0]]
			f43_arg0.FramingCornerBrackets:completeAnimation() --[[ @ 0]]
			f43_arg0.FramingCornerBrackets:setAlpha( 0.1 ) --[[ @ 0]]
			f43_arg0.clipFinished( f43_arg0.FramingCornerBrackets ) --[[ @ 0]]
			f43_arg0.NoiseTiledBackingRight:completeAnimation() --[[ @ 0]]
			f43_arg0.NoiseTiledBackingRight:setAlpha( 0.4 ) --[[ @ 0]]
			f43_arg0.clipFinished( f43_arg0.NoiseTiledBackingRight ) --[[ @ 0]]
			f43_arg0.DottedLineBtm:completeAnimation() --[[ @ 0]]
			f43_arg0.DottedLineBtm:setAlpha( 0.35 ) --[[ @ 0]]
			f43_arg0.clipFinished( f43_arg0.DottedLineBtm ) --[[ @ 0]]
			f43_arg0.DottedLineTop:completeAnimation() --[[ @ 0]]
			f43_arg0.DottedLineTop:setAlpha( 0.35 ) --[[ @ 0]]
			f43_arg0.clipFinished( f43_arg0.DottedLineTop ) --[[ @ 0]]
			f43_arg0.GenericMenuFrameIdentity:completeAnimation() --[[ @ 0]]
			f43_arg0.GenericMenuFrameIdentity:setAlpha( 1 ) --[[ @ 0]]
			f43_arg0.clipFinished( f43_arg0.GenericMenuFrameIdentity ) --[[ @ 0]]
			f43_arg0.ReservesReroll:completeAnimation() --[[ @ 0]]
			f43_arg0.ReservesReroll:setAlpha( 0 ) --[[ @ 0]]
			f43_arg0.clipFinished( f43_arg0.ReservesReroll ) --[[ @ 0]]
			f43_arg0.DupeMeter:completeAnimation() --[[ @ 0]]
			f43_arg0.DupeMeter:setAlpha( 0 ) --[[ @ 0]]
			f43_arg0.clipFinished( f43_arg0.DupeMeter ) --[[ @ 0]]
		end
	},
	Results = {
		DefaultClip = function ( f44_arg0, f44_arg1 )
			f44_arg0:__resetProperties() --[[ @ 0]]
			f44_arg0:setupElementClipCounter( 9 ) --[[ @ 0]]
			f44_arg0.backing:completeAnimation() --[[ @ 0]]
			f44_arg0.backing:setAlpha( 1 ) --[[ @ 0]]
			f44_arg0.clipFinished( f44_arg0.backing ) --[[ @ 0]]
			f44_arg0.BackgroundImage:completeAnimation() --[[ @ 0]]
			f44_arg0.BackgroundImage:setAlpha( 0.85 ) --[[ @ 0]]
			f44_arg0.clipFinished( f44_arg0.BackgroundImage ) --[[ @ 0]]
			f44_arg0.FramingCornerBrackets:completeAnimation() --[[ @ 0]]
			f44_arg0.FramingCornerBrackets:setAlpha( 0.1 ) --[[ @ 0]]
			f44_arg0.clipFinished( f44_arg0.FramingCornerBrackets ) --[[ @ 0]]
			f44_arg0.NoiseTiledBackingRight:completeAnimation() --[[ @ 0]]
			f44_arg0.NoiseTiledBackingRight:setAlpha( 0.4 ) --[[ @ 0]]
			f44_arg0.clipFinished( f44_arg0.NoiseTiledBackingRight ) --[[ @ 0]]
			f44_arg0.DottedLineBtm:completeAnimation() --[[ @ 0]]
			f44_arg0.DottedLineBtm:setAlpha( 0.35 ) --[[ @ 0]]
			f44_arg0.clipFinished( f44_arg0.DottedLineBtm ) --[[ @ 0]]
			f44_arg0.DottedLineTop:completeAnimation() --[[ @ 0]]
			f44_arg0.DottedLineTop:setAlpha( 0.35 ) --[[ @ 0]]
			f44_arg0.clipFinished( f44_arg0.DottedLineTop ) --[[ @ 0]]
			f44_arg0.GenericMenuFrameIdentity:completeAnimation() --[[ @ 0]]
			f44_arg0.GenericMenuFrameIdentity:setAlpha( 1 ) --[[ @ 0]]
			f44_arg0.clipFinished( f44_arg0.GenericMenuFrameIdentity ) --[[ @ 0]]
			f44_arg0.ReservesReroll:completeAnimation() --[[ @ 0]]
			f44_arg0.ReservesReroll:setAlpha( 0 ) --[[ @ 0]]
			f44_arg0.clipFinished( f44_arg0.ReservesReroll ) --[[ @ 0]]
			f44_arg0.DupeMeter:completeAnimation() --[[ @ 0]]
			f44_arg0.DupeMeter:setAlpha( 0 ) --[[ @ 0]]
			f44_arg0.clipFinished( f44_arg0.DupeMeter ) --[[ @ 0]]
		end,
		Reroll = function ( f45_arg0, f45_arg1 )
			f45_arg0:__resetProperties() --[[ @ 0]]
			f45_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			local f45_local0 = function ( f46_arg0 )
				f45_arg0.ReservesReroll:beginAnimation( 200 ) --[[ @ 0]]
				f45_arg0.ReservesReroll:setAlpha( 1 ) --[[ @ 0]]
				f45_arg0.ReservesReroll:registerEventHandler( "interrupted_keyframe", f45_arg0.clipInterrupted ) --[[ @ 0]]
				f45_arg0.ReservesReroll:registerEventHandler( "transition_complete_keyframe", f45_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f45_arg0.ReservesReroll:completeAnimation() --[[ @ 0]]
			f45_arg0.ReservesReroll:setAlpha( 0 ) --[[ @ 0]]
			f45_local0( f45_arg0.ReservesReroll ) --[[ @ 0]]
			local f45_local1 = function ( f47_arg0 )
				f45_arg0.DupeMeter:beginAnimation( 200 ) --[[ @ 0]]
				f45_arg0.DupeMeter:setAlpha( 1 ) --[[ @ 0]]
				f45_arg0.DupeMeter:registerEventHandler( "interrupted_keyframe", f45_arg0.clipInterrupted ) --[[ @ 0]]
				f45_arg0.DupeMeter:registerEventHandler( "transition_complete_keyframe", f45_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f45_arg0.DupeMeter:completeAnimation() --[[ @ 0]]
			f45_arg0.DupeMeter:setAlpha( 0 ) --[[ @ 0]]
			f45_local1( f45_arg0.DupeMeter ) --[[ @ 0]]
		end
	},
	Reroll = {
		DefaultClip = function ( f48_arg0, f48_arg1 )
			f48_arg0:__resetProperties() --[[ @ 0]]
			f48_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.BlackjackReserveReveal.__onClose = function ( f49_arg0 )
	f49_arg0.FramingCornerBrackets:close() --[[ @ 0]]
	f49_arg0.GenericMenuFrameIdentity:close() --[[ @ 0]]
	f49_arg0.ReservesReroll:close() --[[ @ 0]]
	f49_arg0.DupeMeter:close() --[[ @ 0]]
	f49_arg0.SkipRevealPrompt:close() --[[ @ 0]]
	f49_arg0.RevealList:close() --[[ @ 0]]
end
 --[[ @ 0]]
