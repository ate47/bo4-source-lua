-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:49
require( "x64:18ffe7c4e01e7052" ) --[[ @ 0]]
require( "x64:55f8cf56752aa71b" ) --[[ @ 0]]
require( "ui/uieditor/widgets/onoffimage" ) --[[ @ 0]]
require( "x64:70218890762b209b" ) --[[ @ 0]]
require( "x64:199814ce8a424f57" ) --[[ @ 0]]

CoD.SpecialistOutfitEntry_Internal = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.SpecialistOutfitEntry_Internal.__defaultWidth = 125 --[[ @ 0]]
CoD.SpecialistOutfitEntry_Internal.__defaultHeight = 150 --[[ @ 0]]
CoD.SpecialistOutfitEntry_Internal.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.SpecialistOutfitEntry_Internal ) --[[ @ 0]]
	self.id = "SpecialistOutfitEntry_Internal" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local backing = CoD.SpecialistOutfitRowBacking.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	self:addElement( backing ) --[[ @ 0]]
	self.backing = backing --[[ @ 0]]
	
	local ItemImage = CoD.SpecialistOutfitEntryIcon.new( f1_arg0, f1_arg1, 0, 0, 2, 123, 0, 0, 2, 148 ) --[[ @ 0]]
	ItemImage:linkToElementModel( self, nil, false, function ( model )
		ItemImage:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( ItemImage ) --[[ @ 0]]
	self.ItemImage = ItemImage --[[ @ 0]]
	
	local LockedIcon = LUI.UIImage.new( 0.5, 0.5, -64, 64, 0.5, 0.5, -64, 64 ) --[[ @ 0]]
	LockedIcon:setAlpha( 0 ) --[[ @ 0]]
	LockedIcon:setScale( 0.25, 0.25 ) --[[ @ 0]]
	LockedIcon:setImage( RegisterImage( @"uie_ui_icon_global_lock" ) ) --[[ @ 0]]
	LockedIcon:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_F755127C95CF5B6" ) ) --[[ @ 0]]
	LockedIcon:setShaderVector( 0, 4, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( LockedIcon ) --[[ @ 0]]
	self.LockedIcon = LockedIcon --[[ @ 0]]
	
	local EquippedMarkerTick = CoD.onOffImage.new( f1_arg0, f1_arg1, 1, 1, -34, 10, 0, 0, -9, 35 ) --[[ @ 0]]
	EquippedMarkerTick:mergeStateConditions( {
		{
			stateName = "On",
			condition = function ( menu, element, event )
				return CoD.PlayerRoleUtility.IsSelectedOutfitItemIndex( element, f1_arg1 )
			end
		}
	} ) --[[ @ 0]]
	local CommonButtonOutline = EquippedMarkerTick --[[ @ 0]]
	local BreadcrumbNew = EquippedMarkerTick.subscribeToModel --[[ @ 0]]
	local f1_local7 = DataSources.MPSpecialistThemes.getModel( f1_arg1 ) --[[ @ 0]]
	BreadcrumbNew( CommonButtonOutline, f1_local7.update, function ( f4_arg0 )
		f1_arg0:updateElementState( EquippedMarkerTick, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f4_arg0:get(),
			modelName = "update"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	EquippedMarkerTick:linkToElementModel( EquippedMarkerTick, "itemIndex", true, function ( model )
		f1_arg0:updateElementState( EquippedMarkerTick, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "itemIndex"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	EquippedMarkerTick:setZoom( 4 ) --[[ @ 0]]
	EquippedMarkerTick.image:setImage( RegisterImage( @"uie_ui_menu_cac_equipped_marker_tick" ) ) --[[ @ 0]]
	EquippedMarkerTick:linkToElementModel( self, nil, false, function ( model )
		EquippedMarkerTick:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( EquippedMarkerTick ) --[[ @ 0]]
	self.EquippedMarkerTick = EquippedMarkerTick --[[ @ 0]]
	
	BreadcrumbNew = CoD.ItemNewBreadcrumbWidget.new( f1_arg0, f1_arg1, 0.5, 0.5, -78, 78, 0.5, 0.5, -18, 18 ) --[[ @ 0]]
	BreadcrumbNew:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( BreadcrumbNew ) --[[ @ 0]]
	self.BreadcrumbNew = BreadcrumbNew --[[ @ 0]]
	
	CommonButtonOutline = CoD.CommonButtonOutline.new( f1_arg0, f1_arg1, 0, 1, 0, 0, -0, 1, 0, 0 ) --[[ @ 0]]
	CommonButtonOutline:mergeStateConditions( {
		{
			stateName = "Disabled",
			condition = function ( menu, element, event )
				return not CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg1, "owned" )
			end
		}
	} ) --[[ @ 0]]
	CommonButtonOutline:linkToElementModel( CommonButtonOutline, "owned", true, function ( model )
		f1_arg0:updateElementState( CommonButtonOutline, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "owned"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local f1_local8 = CommonButtonOutline --[[ @ 0]]
	f1_local7 = CommonButtonOutline.subscribeToModel --[[ @ 0]]
	local f1_local9 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local7( f1_local8, f1_local9["lobbyRoot.lobbyNav"], function ( f9_arg0 )
		f1_arg0:updateElementState( CommonButtonOutline, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f9_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	CommonButtonOutline.Lines:setAlpha( 0 ) --[[ @ 0]]
	CommonButtonOutline.LineSolid:setAlpha( 1 ) --[[ @ 0]]
	CommonButtonOutline:linkToElementModel( self, nil, false, function ( model )
		CommonButtonOutline:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( CommonButtonOutline ) --[[ @ 0]]
	self.CommonButtonOutline = CommonButtonOutline --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Unavailable",
			condition = function ( menu, element, event )
				return not CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg1, "available" )
			end
		},
		{
			stateName = "Disabled",
			condition = function ( menu, element, event )
				return not CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg1, "owned" )
			end
		},
		{
			stateName = "New",
			condition = function ( menu, element, event )
				return CoD.BreadcrumbUtility.IsSpecialistOutfitItemNew( menu, element, f1_arg1 )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "available", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "available"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:linkToElementModel( self, "owned", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "owned"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:linkToElementModel( self, "itemIndex", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "itemIndex"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:linkToElementModel( self, "presetIndex", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "presetIndex"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	CommonButtonOutline.id = "CommonButtonOutline" --[[ @ 0]]
	self.__defaultFocus = CommonButtonOutline --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.SpecialistOutfitEntry_Internal.__resetProperties = function ( f18_arg0 )
	f18_arg0.EquippedMarkerTick:completeAnimation() --[[ @ 0]]
	f18_arg0.LockedIcon:completeAnimation() --[[ @ 0]]
	f18_arg0.BreadcrumbNew:completeAnimation() --[[ @ 0]]
	f18_arg0.EquippedMarkerTick:setAlpha( 1 ) --[[ @ 0]]
	f18_arg0.LockedIcon:setAlpha( 0 ) --[[ @ 0]]
	f18_arg0.BreadcrumbNew:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.SpecialistOutfitEntry_Internal.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f19_arg0, f19_arg1 )
			f19_arg0:__resetProperties() --[[ @ 0]]
			f19_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	Unavailable = {
		DefaultClip = function ( f20_arg0, f20_arg1 )
			f20_arg0:__resetProperties() --[[ @ 0]]
			f20_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f20_arg0.EquippedMarkerTick:completeAnimation() --[[ @ 0]]
			f20_arg0.EquippedMarkerTick:setAlpha( 0 ) --[[ @ 0]]
			f20_arg0.clipFinished( f20_arg0.EquippedMarkerTick ) --[[ @ 0]]
		end,
		ChildFocus = function ( f21_arg0, f21_arg1 )
			f21_arg0:__resetProperties() --[[ @ 0]]
			f21_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f21_arg0.EquippedMarkerTick:completeAnimation() --[[ @ 0]]
			f21_arg0.EquippedMarkerTick:setAlpha( 0 ) --[[ @ 0]]
			f21_arg0.clipFinished( f21_arg0.EquippedMarkerTick ) --[[ @ 0]]
		end,
		GainChildFocus = function ( f22_arg0, f22_arg1 )
			f22_arg0:__resetProperties() --[[ @ 0]]
			f22_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f22_arg0.EquippedMarkerTick:completeAnimation() --[[ @ 0]]
			f22_arg0.EquippedMarkerTick:setAlpha( 0 ) --[[ @ 0]]
			f22_arg0.clipFinished( f22_arg0.EquippedMarkerTick ) --[[ @ 0]]
		end,
		LoseChildFocus = function ( f23_arg0, f23_arg1 )
			f23_arg0:__resetProperties() --[[ @ 0]]
			f23_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f23_arg0.EquippedMarkerTick:completeAnimation() --[[ @ 0]]
			f23_arg0.EquippedMarkerTick:setAlpha( 0 ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.EquippedMarkerTick ) --[[ @ 0]]
		end
	},
	Disabled = {
		DefaultClip = function ( f24_arg0, f24_arg1 )
			f24_arg0:__resetProperties() --[[ @ 0]]
			f24_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f24_arg0.LockedIcon:completeAnimation() --[[ @ 0]]
			f24_arg0.LockedIcon:setAlpha( 0.1 ) --[[ @ 0]]
			f24_arg0.clipFinished( f24_arg0.LockedIcon ) --[[ @ 0]]
		end,
		ChildFocus = function ( f25_arg0, f25_arg1 )
			f25_arg0:__resetProperties() --[[ @ 0]]
			f25_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f25_arg0.LockedIcon:completeAnimation() --[[ @ 0]]
			f25_arg0.LockedIcon:setAlpha( 0.1 ) --[[ @ 0]]
			f25_arg0.clipFinished( f25_arg0.LockedIcon ) --[[ @ 0]]
		end,
		GainChildFocus = function ( f26_arg0, f26_arg1 )
			f26_arg0:__resetProperties() --[[ @ 0]]
			f26_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f26_arg0.LockedIcon:completeAnimation() --[[ @ 0]]
			f26_arg0.LockedIcon:setAlpha( 0.1 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.LockedIcon ) --[[ @ 0]]
		end,
		LoseChildFocus = function ( f27_arg0, f27_arg1 )
			f27_arg0:__resetProperties() --[[ @ 0]]
			f27_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f27_arg0.LockedIcon:completeAnimation() --[[ @ 0]]
			f27_arg0.LockedIcon:setAlpha( 0.1 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.LockedIcon ) --[[ @ 0]]
		end
	},
	New = {
		DefaultClip = function ( f28_arg0, f28_arg1 )
			f28_arg0:__resetProperties() --[[ @ 0]]
			f28_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f28_arg0.BreadcrumbNew:completeAnimation() --[[ @ 0]]
			f28_arg0.BreadcrumbNew:setAlpha( 1 ) --[[ @ 0]]
			f28_arg0.clipFinished( f28_arg0.BreadcrumbNew ) --[[ @ 0]]
		end,
		ChildFocus = function ( f29_arg0, f29_arg1 )
			f29_arg0:__resetProperties() --[[ @ 0]]
			f29_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f29_local0 = function ( f30_arg0 )
				local f30_local0 = function ( f31_arg0 )
					f31_arg0:beginAnimation( 200, Enum[@"luitween"][@"luitween_ease_out"] ) --[[ @ 0]]
					f31_arg0:setAlpha( 0 ) --[[ @ 0]]
					f31_arg0:registerEventHandler( "transition_complete_keyframe", f29_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f29_arg0.BreadcrumbNew:beginAnimation( 400 ) --[[ @ 0]]
				f29_arg0.BreadcrumbNew:registerEventHandler( "interrupted_keyframe", f29_arg0.clipInterrupted ) --[[ @ 0]]
				f29_arg0.BreadcrumbNew:registerEventHandler( "transition_complete_keyframe", f30_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f29_arg0.BreadcrumbNew:completeAnimation() --[[ @ 0]]
			f29_arg0.BreadcrumbNew:setAlpha( 1 ) --[[ @ 0]]
			f29_local0( f29_arg0.BreadcrumbNew ) --[[ @ 0]]
		end,
		GainChildFocus = function ( f32_arg0, f32_arg1 )
			f32_arg0:__resetProperties() --[[ @ 0]]
			f32_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f32_arg0.BreadcrumbNew:completeAnimation() --[[ @ 0]]
			f32_arg0.BreadcrumbNew:setAlpha( 1 ) --[[ @ 0]]
			f32_arg0.clipFinished( f32_arg0.BreadcrumbNew ) --[[ @ 0]]
		end,
		LoseChildFocus = function ( f33_arg0, f33_arg1 )
			f33_arg0:__resetProperties() --[[ @ 0]]
			f33_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f33_arg0.BreadcrumbNew:completeAnimation() --[[ @ 0]]
			f33_arg0.BreadcrumbNew:setAlpha( 1 ) --[[ @ 0]]
			f33_arg0.clipFinished( f33_arg0.BreadcrumbNew ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.SpecialistOutfitEntry_Internal.__onClose = function ( f34_arg0 )
	f34_arg0.backing:close() --[[ @ 0]]
	f34_arg0.ItemImage:close() --[[ @ 0]]
	f34_arg0.EquippedMarkerTick:close() --[[ @ 0]]
	f34_arg0.BreadcrumbNew:close() --[[ @ 0]]
	f34_arg0.CommonButtonOutline:close() --[[ @ 0]]
end
 --[[ @ 0]]
