-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:33
require( "ui/uieditor/widgets/pc/utility/verticallistspacer" ) --[[ @ 0]]
require( "ui/uieditor/widgets/systemoverlays/featureoverlay_button" ) --[[ @ 0]]
require( "ui/uieditor/widgets/systemoverlays/systemoverlay_layout_foregroundmultilinetext" ) --[[ @ 0]]

CoD.systemOverlay_Layout_GenericForeground_PC = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.systemOverlay_Layout_GenericForeground_PC.__defaultWidth = 1920 --[[ @ 0]]
CoD.systemOverlay_Layout_GenericForeground_PC.__defaultHeight = 294 --[[ @ 0]]
CoD.systemOverlay_Layout_GenericForeground_PC.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIVerticalList.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9, 0, true ) --[[ @ 0]]
	self:setAlignment( LUI.Alignment.Middle ) --[[ @ 0]]
	self:setClass( CoD.systemOverlay_Layout_GenericForeground_PC ) --[[ @ 0]]
	self.id = "systemOverlay_Layout_GenericForeground_PC" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local categoryTypeImage = LUI.UIImage.new( 0, 0, 464.5, 514.5, 0, 0, 74, 124 ) --[[ @ 0]]
	categoryTypeImage:setAlpha( 0 ) --[[ @ 0]]
	categoryTypeImage:linkToElementModel( self, "categoryType", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			categoryTypeImage:setImage( RegisterImage( GetCategoryIconForOverlayType( f2_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( categoryTypeImage ) --[[ @ 0]]
	self.categoryTypeImage = categoryTypeImage --[[ @ 0]]
	
	local title = LUI.UIText.new( 0, 0, 542, 1812, 0, 0, 65.5, 100.5 ) --[[ @ 0]]
	title:setRGB( ColorSet.T8__BEIGE__HEADER.r, ColorSet.T8__BEIGE__HEADER.g, ColorSet.T8__BEIGE__HEADER.b ) --[[ @ 0]]
	title:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	title:setLetterSpacing( 6 ) --[[ @ 0]]
	title:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	title:setAlignment( Enum[@"LUIAlignment"][@"hash_670510683C22104B"] ) --[[ @ 0]]
	title:linkToElementModel( self, "title", true, function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			title:setText( LocalizeToUpperString( CoD.BaseUtility.LocalizeIfXHash( f3_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( title ) --[[ @ 0]]
	self.title = title --[[ @ 0]]
	
	local VerticalListSpacer = CoD.VerticalListSpacer.new( f1_arg0, f1_arg1, 0, 0, 542, 1292, 0, 0, 100.5, 105.5 ) --[[ @ 0]]
	self:addElement( VerticalListSpacer ) --[[ @ 0]]
	self.VerticalListSpacer = VerticalListSpacer --[[ @ 0]]
	
	local text = CoD.systemOverlay_Layout_ForegroundMultilineText.new( f1_arg0, f1_arg1, 0, 0, 542, 1664, 0, 0, 105.5, 135.5 ) --[[ @ 0]]
	text:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	text:setScale( LanguageOverrideNumber( "japanese", 0.85, 1, 1 ) ) --[[ @ 0]]
	text:linkToElementModel( self, "description", true, function ( model )
		local f4_local0 = model:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			text.text:setText( CoD.BaseUtility.LocalizeIfXHash( f4_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( text ) --[[ @ 0]]
	self.text = text --[[ @ 0]]
	
	local VerticalListSpacer2 = CoD.VerticalListSpacer.new( f1_arg0, f1_arg1, 0, 0, 542, 1292, 0, 0, 135.5, 161.5 ) --[[ @ 0]]
	self:addElement( VerticalListSpacer2 ) --[[ @ 0]]
	self.VerticalListSpacer2 = VerticalListSpacer2 --[[ @ 0]]
	
	local options = LUI.UIList.new( f1_arg0, f1_arg1, 15, 0, nil, true, false, false, false ) --[[ @ 0]]
	options:setLeftRight( 0, 0, 542, 957 ) --[[ @ 0]]
	options:setTopBottom( 1, 1, -132.5, -65.5 ) --[[ @ 0]]
	options:setAutoScaleContent( true ) --[[ @ 0]]
	options:setWidgetType( CoD.featureOverlay_Button ) --[[ @ 0]]
	options:setHorizontalCount( 2 ) --[[ @ 0]]
	options:setSpacing( 15 ) --[[ @ 0]]
	options:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	options:linkToElementModel( self, "listDatasource", true, function ( model )
		local f5_local0 = model:get() --[[ @ 0]]
		if f5_local0 ~= nil then
			options:setDataSource( f5_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	options:linkToElementModel( options, "disabled", true, function ( model, f6_arg1 )
		CoD.Menu.UpdateButtonShownState( f6_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	options:registerEventHandler( "gain_focus", function ( element, event )
		local f7_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f7_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f7_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f7_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( options, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		if not IsDisabled( element, controller ) then
			ProcessListAction( self, element, controller, menu ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsDisabled( element, controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, "ui_confirm" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( options ) --[[ @ 0]]
	self.options = options --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Gamepad",
			condition = function ( menu, element, event )
				return IsGamepad( f1_arg1 )
			end
		}
	} ) --[[ @ 0]]
	self:appendEventHandler( "input_source_changed", function ( f11_arg0, f11_arg1 )
		f11_arg1.menu = f11_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( self, f11_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local f1_local7 = self --[[ @ 0]]
	local f1_local8 = self.subscribeToModel --[[ @ 0]]
	local f1_local9 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local8( f1_local7, f1_local9.LastInput, function ( f12_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f12_arg0:get(),
			modelName = "LastInput"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( self, "setState", function ( element, controller, f13_arg2, f13_arg3, f13_arg4 )
		DelayedForceCheckDefaultPCFocus( self.options, f1_arg0, controller, 100 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	options.id = "options" --[[ @ 0]]
	self.__defaultFocus = options --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PreLoadFunc then
		PreLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	f1_local8 = self --[[ @ 0]]
	if IsFreeCursorActive( f1_arg1 ) then
		
	else
		
	end
	return self
end
 --[[ @ 0]]
CoD.systemOverlay_Layout_GenericForeground_PC.__onClose = function ( f14_arg0 )
	f14_arg0.categoryTypeImage:close() --[[ @ 0]]
	f14_arg0.title:close() --[[ @ 0]]
	f14_arg0.VerticalListSpacer:close() --[[ @ 0]]
	f14_arg0.text:close() --[[ @ 0]]
	f14_arg0.VerticalListSpacer2:close() --[[ @ 0]]
	f14_arg0.options:close() --[[ @ 0]]
end
 --[[ @ 0]]
