-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:50
require( "x64:31533c52beba2c" ) --[[ @ 0]]

CoD.AmmoWidgetZM_SpecialWeaponProgress = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.AmmoWidgetZM_SpecialWeaponProgress.__defaultWidth = 89 --[[ @ 0]]
CoD.AmmoWidgetZM_SpecialWeaponProgress.__defaultHeight = 40 --[[ @ 0]]
CoD.AmmoWidgetZM_SpecialWeaponProgress.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.AmmoWidgetZM_SpecialWeaponProgress ) --[[ @ 0]]
	self.id = "AmmoWidgetZM_SpecialWeaponProgress" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local ZmAmmoWeaponProgressFactory = CoD.ZmAmmo_WeaponProgressFactory.new( f1_arg0, f1_arg1, 0, 0, 29.5, 88.5, 0, 0, 8.5, 32.5 ) --[[ @ 0]]
	self:addElement( ZmAmmoWeaponProgressFactory ) --[[ @ 0]]
	self.ZmAmmoWeaponProgressFactory = ZmAmmoWeaponProgressFactory --[[ @ 0]]
	
	local specialWeaponLevelBacking = LUI.UIImage.new( 0, 0, 0, 40, 0, 0, 0, 40 ) --[[ @ 0]]
	specialWeaponLevelBacking:setImage( RegisterImage( @"uie_zm_hud_specweapon_diamondbg" ) ) --[[ @ 0]]
	self:addElement( specialWeaponLevelBacking ) --[[ @ 0]]
	self.specialWeaponLevelBacking = specialWeaponLevelBacking --[[ @ 0]]
	
	local specialWeaponLevel = LUI.UIText.new( 0, 0, 3.5, 37.5, 0, 0, 12, 30 ) --[[ @ 0]]
	specialWeaponLevel:setTTF( "skorzhen" ) --[[ @ 0]]
	specialWeaponLevel:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	specialWeaponLevel:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	specialWeaponLevel:subscribeToGlobalModel( f1_arg1, "ZMHud", "weaponLevel", function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			specialWeaponLevel:setText( StringAdd( 1, f2_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( specialWeaponLevel ) --[[ @ 0]]
	self.specialWeaponLevel = specialWeaponLevel --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return not CoD.ModelUtility.IsSelfModelValueNonEmptyString( element, f1_arg1, "id" )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "id", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "id"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.AmmoWidgetZM_SpecialWeaponProgress.__resetProperties = function ( f5_arg0 )
	f5_arg0.specialWeaponLevel:completeAnimation() --[[ @ 0]]
	f5_arg0.specialWeaponLevelBacking:completeAnimation() --[[ @ 0]]
	f5_arg0.ZmAmmoWeaponProgressFactory:completeAnimation() --[[ @ 0]]
	f5_arg0.specialWeaponLevel:setAlpha( 1 ) --[[ @ 0]]
	f5_arg0.specialWeaponLevelBacking:setAlpha( 1 ) --[[ @ 0]]
	f5_arg0.ZmAmmoWeaponProgressFactory:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.AmmoWidgetZM_SpecialWeaponProgress.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f6_arg0, f6_arg1 )
			f6_arg0:__resetProperties() --[[ @ 0]]
			f6_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	Hidden = {
		DefaultClip = function ( f7_arg0, f7_arg1 )
			f7_arg0:__resetProperties() --[[ @ 0]]
			f7_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f7_arg0.ZmAmmoWeaponProgressFactory:completeAnimation() --[[ @ 0]]
			f7_arg0.ZmAmmoWeaponProgressFactory:setAlpha( 0 ) --[[ @ 0]]
			f7_arg0.clipFinished( f7_arg0.ZmAmmoWeaponProgressFactory ) --[[ @ 0]]
			f7_arg0.specialWeaponLevelBacking:completeAnimation() --[[ @ 0]]
			f7_arg0.specialWeaponLevelBacking:setAlpha( 0 ) --[[ @ 0]]
			f7_arg0.clipFinished( f7_arg0.specialWeaponLevelBacking ) --[[ @ 0]]
			f7_arg0.specialWeaponLevel:completeAnimation() --[[ @ 0]]
			f7_arg0.specialWeaponLevel:setAlpha( 0 ) --[[ @ 0]]
			f7_arg0.clipFinished( f7_arg0.specialWeaponLevel ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.AmmoWidgetZM_SpecialWeaponProgress.__onClose = function ( f8_arg0 )
	f8_arg0.ZmAmmoWeaponProgressFactory:close() --[[ @ 0]]
	f8_arg0.specialWeaponLevel:close() --[[ @ 0]]
end
 --[[ @ 0]]
