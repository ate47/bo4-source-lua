-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:51
require( "x64:76f04ea11bdb2fba" ) --[[ @ 0]]
require( "x64:2666d2365354a2ea" ) --[[ @ 0]]
require( "x64:5eacfc4f19b485e9" ) --[[ @ 0]]

CoD.PositionDraft_Teams = InheritFrom( CoD.Menu ) --[[ @ 0]]
LUI.createMenu.PositionDraft_Teams = function ( f1_arg0, f1_arg1 )
	local self = CoD.Menu.NewForUIEditor( "PositionDraft_Teams", f1_arg0 ) --[[ @ 0]]
	local f1_local1 = self --[[ @ 0]]
	SetProperty( self, "disablePopupOpenCloseAnim", true ) --[[ @ 0]]
	self:setClass( CoD.PositionDraft_Teams ) --[[ @ 0]]
	self.soundSet = "ChooseDecal" --[[ @ 0]]
	self:setOwner( f1_arg0 ) --[[ @ 0]]
	self:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	self:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	self:playSound( "menu_open", f1_arg0 ) --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_local1:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local BG = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	BG:setRGB( 0, 0, 0 ) --[[ @ 0]]
	BG:setAlpha( 0.75 ) --[[ @ 0]]
	self:addElement( BG ) --[[ @ 0]]
	self.BG = BG --[[ @ 0]]
	
	local BGCenter = LUI.UIImage.new( 0, 1, 0, 0, 0.5, 0.5, -430, 430 ) --[[ @ 0]]
	BGCenter:setRGB( 0, 0, 0 ) --[[ @ 0]]
	BGCenter:setAlpha( 0.6 ) --[[ @ 0]]
	self:addElement( BGCenter ) --[[ @ 0]]
	self.BGCenter = BGCenter --[[ @ 0]]
	
	local TiledBacking = LUI.UIImage.new( -0.01, 1.01, 0, 0, 0.5, 0.5, -430, 430 ) --[[ @ 0]]
	TiledBacking:setRGB( 0, 0, 0 ) --[[ @ 0]]
	TiledBacking:setAlpha( 0.5 ) --[[ @ 0]]
	TiledBacking:setImage( RegisterImage( @"uie_ui_menu_specialist_hub_repeat_bg" ) ) --[[ @ 0]]
	TiledBacking:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_16CBE95C250C6D15" ) ) --[[ @ 0]]
	TiledBacking:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	TiledBacking:setupNineSliceShader( 196, 88 ) --[[ @ 0]]
	self:addElement( TiledBacking ) --[[ @ 0]]
	self.TiledBacking = TiledBacking --[[ @ 0]]
	
	local CircleBaseLarge = LUI.UIImage.new( 0.5, 0.5, -100, 100, 0.5, 0.5, -100, 100 ) --[[ @ 0]]
	CircleBaseLarge:setRGB( 0, 0, 0 ) --[[ @ 0]]
	CircleBaseLarge:setAlpha( 0.1 ) --[[ @ 0]]
	CircleBaseLarge:setImage( RegisterImage( @"uie_ui_hud_common_draft_timer_backer" ) ) --[[ @ 0]]
	self:addElement( CircleBaseLarge ) --[[ @ 0]]
	self.CircleBaseLarge = CircleBaseLarge --[[ @ 0]]
	
	local CircleBaseSmall = LUI.UIImage.new( 0.5, 0.5, -70, 70, 0.5, 0.5, -70, 70 ) --[[ @ 0]]
	CircleBaseSmall:setRGB( 0, 0, 0 ) --[[ @ 0]]
	CircleBaseSmall:setAlpha( 0.6 ) --[[ @ 0]]
	CircleBaseSmall:setScale( 1.1, 1.1 ) --[[ @ 0]]
	CircleBaseSmall:setImage( RegisterImage( @"uie_ui_hud_common_draft_timer_backer" ) ) --[[ @ 0]]
	self:addElement( CircleBaseSmall ) --[[ @ 0]]
	self.CircleBaseSmall = CircleBaseSmall --[[ @ 0]]
	
	local Ring = LUI.UIImage.new( 0.5, 0.5, -70, 70, 0.5, 0.5, -70, 70 ) --[[ @ 0]]
	Ring:setAlpha( 0.5 ) --[[ @ 0]]
	Ring:setImage( RegisterImage( @"uie_ui_hud_common_draft_timer_fui" ) ) --[[ @ 0]]
	Ring:setMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	self:addElement( Ring ) --[[ @ 0]]
	self.Ring = Ring --[[ @ 0]]
	
	local StrokeL = LUI.UIImage.new( 0.5, 0.5, -491, -136, 0.5, 0.5, -1, 1 ) --[[ @ 0]]
	StrokeL:setAlpha( 0.06 ) --[[ @ 0]]
	StrokeL:setYRot( 180 ) --[[ @ 0]]
	self:addElement( StrokeL ) --[[ @ 0]]
	self.StrokeL = StrokeL --[[ @ 0]]
	
	local StrokeR = LUI.UIImage.new( 0.5, 0.5, 136, 491, 0.5, 0.5, -1, 1 ) --[[ @ 0]]
	StrokeR:setAlpha( 0.06 ) --[[ @ 0]]
	StrokeR:setYRot( 180 ) --[[ @ 0]]
	self:addElement( StrokeR ) --[[ @ 0]]
	self.StrokeR = StrokeR --[[ @ 0]]
	
	local VS2 = LUI.UIText.new( 0.5, 0.5, -585, 585, 0.5, 0.5, -21.5, 23.5 ) --[[ @ 0]]
	VS2:setRGB( ColorSet.T8__BIEGE.r, ColorSet.T8__BIEGE.g, ColorSet.T8__BIEGE.b ) --[[ @ 0]]
	VS2:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_34F347C78B3F5793" ) ) --[[ @ 0]]
	VS2:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	VS2:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	VS2:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	self:addElement( VS2 ) --[[ @ 0]]
	self.VS2 = VS2 --[[ @ 0]]
	
	local EnemyLineL = LUI.UIImage.new( 0, 1, 0, 0, 0.5, 0.5, 56, 432 ) --[[ @ 0]]
	EnemyLineL:setAlpha( 0 ) --[[ @ 0]]
	EnemyLineL:setYRot( 180 ) --[[ @ 0]]
	EnemyLineL:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_wipe_delta_normal" ) ) --[[ @ 0]]
	EnemyLineL:setShaderVector( 0, 0, 1, 0, 0 ) --[[ @ 0]]
	EnemyLineL:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	EnemyLineL:setShaderVector( 2, 0, 1, 0, 0 ) --[[ @ 0]]
	EnemyLineL:setShaderVector( 3, 1, 0, 0, 0 ) --[[ @ 0]]
	EnemyLineL:setShaderVector( 4, 0, 0, 0, 0 ) --[[ @ 0]]
	EnemyLineL:subscribeToGlobalModel( f1_arg0, "Factions", "axisFactionColor", function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			EnemyLineL:setRGB( f2_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( EnemyLineL ) --[[ @ 0]]
	self.EnemyLineL = EnemyLineL --[[ @ 0]]
	
	local EnemyLineL2 = LUI.UIImage.new( 0, 1, 0, 0, 0.5, 0.5, 430, 436 ) --[[ @ 0]]
	EnemyLineL2:setYRot( 180 ) --[[ @ 0]]
	EnemyLineL2:subscribeToGlobalModel( f1_arg0, "Factions", "axisFactionColor", function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			EnemyLineL2:setRGB( f3_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( EnemyLineL2 ) --[[ @ 0]]
	self.EnemyLineL2 = EnemyLineL2 --[[ @ 0]]
	
	local FriendlyLineL = LUI.UIImage.new( 0, 1, 0, 0, 0.5, 0.5, -432, -56 ) --[[ @ 0]]
	FriendlyLineL:setAlpha( 0 ) --[[ @ 0]]
	FriendlyLineL:setYRot( 180 ) --[[ @ 0]]
	FriendlyLineL:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_wipe_delta_normal" ) ) --[[ @ 0]]
	FriendlyLineL:setShaderVector( 0, 0, 1, 0, 0 ) --[[ @ 0]]
	FriendlyLineL:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	FriendlyLineL:setShaderVector( 2, 0, 1, 0, 0 ) --[[ @ 0]]
	FriendlyLineL:setShaderVector( 3, 0, 1, 0, 0 ) --[[ @ 0]]
	FriendlyLineL:setShaderVector( 4, 0, 0, 0, 0 ) --[[ @ 0]]
	FriendlyLineL:subscribeToGlobalModel( f1_arg0, "Factions", "alliesFactionColor", function ( model )
		local f4_local0 = model:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			FriendlyLineL:setRGB( f4_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( FriendlyLineL ) --[[ @ 0]]
	self.FriendlyLineL = FriendlyLineL --[[ @ 0]]
	
	local FriendlyLineL2 = LUI.UIImage.new( 0, 1, 0, 0, 0.5, 0.5, -436, -430 ) --[[ @ 0]]
	FriendlyLineL2:setAlpha( 0.3 ) --[[ @ 0]]
	FriendlyLineL2:setYRot( 180 ) --[[ @ 0]]
	FriendlyLineL2:subscribeToGlobalModel( f1_arg0, "Factions", "alliesFactionColor", function ( model )
		local f5_local0 = model:get() --[[ @ 0]]
		if f5_local0 ~= nil then
			FriendlyLineL2:setRGB( f5_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( FriendlyLineL2 ) --[[ @ 0]]
	self.FriendlyLineL2 = FriendlyLineL2 --[[ @ 0]]
	
	local EnemyTeam = LUI.UIList.new( f1_local1, f1_arg0, 15, 0, nil, false, false, false, false ) --[[ @ 0]]
	EnemyTeam:mergeStateConditions( {
		{
			stateName = "Friendly_CharacterSelected_Rank",
			condition = function ( menu, element, event )
				local f6_local0 --[[ @ 0]]
				if not CoD.ModelUtility.IsSelfModelValueNilOrZero( element, f1_arg0, "characterIndex" ) then
					f6_local0 = IsPublicOnlineGame() --[[ @ 0]]
					if f6_local0 then
						f6_local0 = AlwaysFalse() --[[ @ 0]]
					end
				else
					f6_local0 = false --[[ @ 0]]
				end
				return f6_local0
			end
		},
		{
			stateName = "Friendly_CharacterSelected",
			condition = function ( menu, element, event )
				local f7_local0 --[[ @ 0]]
				if not CoD.ModelUtility.IsSelfModelValueNilOrZero( element, f1_arg0, "characterIndex" ) then
					f7_local0 = AlwaysFalse() --[[ @ 0]]
				else
					f7_local0 = false --[[ @ 0]]
				end
				return f7_local0
			end
		},
		{
			stateName = "Friendly_ValidClient",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueGreaterThanOrEqualTo( element, f1_arg0, "clientNum", 0 ) and AlwaysFalse()
			end
		},
		{
			stateName = "Friendly_Searching",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		},
		{
			stateName = "Enemy_CharacterSelected",
			condition = function ( menu, element, event )
				return true
			end
		},
		{
			stateName = "Enemy_Searching",
			condition = function ( menu, element, event )
				return AlwaysTrue()
			end
		}
	} ) --[[ @ 0]]
	EnemyTeam:linkToElementModel( EnemyTeam, "characterIndex", true, function ( model )
		f1_local1:updateElementState( EnemyTeam, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = model:get(),
			modelName = "characterIndex"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	EnemyTeam:linkToElementModel( EnemyTeam, "clientNum", true, function ( model )
		f1_local1:updateElementState( EnemyTeam, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = model:get(),
			modelName = "clientNum"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	EnemyTeam:setLeftRight( 0.5, 0.5, -604.5, 604.5 ) --[[ @ 0]]
	EnemyTeam:setTopBottom( 0.5, 0.5, 134, 350 ) --[[ @ 0]]
	EnemyTeam:setScale( 1.2, 1.2 ) --[[ @ 0]]
	EnemyTeam:setWidgetType( CoD.PositionDraft_ViewTeams_Client ) --[[ @ 0]]
	EnemyTeam:setHorizontalCount( 6 ) --[[ @ 0]]
	EnemyTeam:setSpacing( 15 ) --[[ @ 0]]
	EnemyTeam:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	EnemyTeam:setDataSource( "Clients" ) --[[ @ 0]]
	self:addElement( EnemyTeam ) --[[ @ 0]]
	self.EnemyTeam = EnemyTeam --[[ @ 0]]
	
	local EnemyTeamCodCaster = LUI.UIList.new( f1_local1, f1_arg0, 15, 0, nil, false, false, false, false ) --[[ @ 0]]
	EnemyTeamCodCaster:mergeStateConditions( {
		{
			stateName = "Friendly_CharacterSelected_Rank",
			condition = function ( menu, element, event )
				local f14_local0 --[[ @ 0]]
				if not CoD.ModelUtility.IsSelfModelValueNilOrZero( element, f1_arg0, "characterIndex" ) then
					f14_local0 = IsPublicOnlineGame() --[[ @ 0]]
					if f14_local0 then
						f14_local0 = AlwaysFalse() --[[ @ 0]]
					end
				else
					f14_local0 = false --[[ @ 0]]
				end
				return f14_local0
			end
		},
		{
			stateName = "Friendly_CharacterSelected",
			condition = function ( menu, element, event )
				local f15_local0 --[[ @ 0]]
				if not CoD.ModelUtility.IsSelfModelValueNilOrZero( element, f1_arg0, "characterIndex" ) then
					f15_local0 = AlwaysFalse() --[[ @ 0]]
				else
					f15_local0 = false --[[ @ 0]]
				end
				return f15_local0
			end
		},
		{
			stateName = "Friendly_ValidClient",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueGreaterThanOrEqualTo( element, f1_arg0, "clientNum", 0 ) and AlwaysFalse()
			end
		},
		{
			stateName = "Friendly_Searching",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		},
		{
			stateName = "Enemy_CharacterSelected",
			condition = function ( menu, element, event )
				return true
			end
		},
		{
			stateName = "Enemy_Searching",
			condition = function ( menu, element, event )
				return AlwaysTrue()
			end
		}
	} ) --[[ @ 0]]
	EnemyTeamCodCaster:linkToElementModel( EnemyTeamCodCaster, "characterIndex", true, function ( model )
		f1_local1:updateElementState( EnemyTeamCodCaster, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = model:get(),
			modelName = "characterIndex"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	EnemyTeamCodCaster:linkToElementModel( EnemyTeamCodCaster, "clientNum", true, function ( model )
		f1_local1:updateElementState( EnemyTeamCodCaster, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = model:get(),
			modelName = "clientNum"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	EnemyTeamCodCaster:setLeftRight( 0.5, 0.5, -604.5, 604.5 ) --[[ @ 0]]
	EnemyTeamCodCaster:setTopBottom( 0.5, 0.5, 134, 350 ) --[[ @ 0]]
	EnemyTeamCodCaster:setAlpha( 0 ) --[[ @ 0]]
	EnemyTeamCodCaster:setScale( 1.2, 1.2 ) --[[ @ 0]]
	EnemyTeamCodCaster:setWidgetType( CoD.PositionDraft_ViewTeams_CodCaster_Client ) --[[ @ 0]]
	EnemyTeamCodCaster:setHorizontalCount( 6 ) --[[ @ 0]]
	EnemyTeamCodCaster:setSpacing( 15 ) --[[ @ 0]]
	EnemyTeamCodCaster:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	self:addElement( EnemyTeamCodCaster ) --[[ @ 0]]
	self.EnemyTeamCodCaster = EnemyTeamCodCaster --[[ @ 0]]
	
	local FriendlyTeam = LUI.UIList.new( f1_local1, f1_arg0, 15, 0, nil, false, false, false, false ) --[[ @ 0]]
	FriendlyTeam:mergeStateConditions( {
		{
			stateName = "Friendly_Searching",
			condition = function ( menu, element, event )
				return AlwaysTrue()
			end
		},
		{
			stateName = "Enemy_CharacterSelected",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		},
		{
			stateName = "Enemy_CharacterSelected_Hidden",
			condition = function ( menu, element, event )
				local f24_local0 --[[ @ 0]]
				if not CoD.ModelUtility.IsSelfModelValueNilOrZero( element, f1_arg0, "characterIndex" ) then
					f24_local0 = IsGametypeSettingsValue( "draftHideEnemyTeam", 1 ) --[[ @ 0]]
					if f24_local0 then
						f24_local0 = AlwaysFalse() --[[ @ 0]]
					end
				else
					f24_local0 = false --[[ @ 0]]
				end
				return f24_local0
			end
		},
		{
			stateName = "Enemy_ValidClient",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueGreaterThanOrEqualTo( element, f1_arg0, "clientNum", 0 ) and AlwaysFalse()
			end
		},
		{
			stateName = "Enemy_Searching",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		}
	} ) --[[ @ 0]]
	FriendlyTeam:linkToElementModel( FriendlyTeam, "characterIndex", true, function ( model )
		f1_local1:updateElementState( FriendlyTeam, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = model:get(),
			modelName = "characterIndex"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	FriendlyTeam:linkToElementModel( FriendlyTeam, "clientNum", true, function ( model )
		f1_local1:updateElementState( FriendlyTeam, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = model:get(),
			modelName = "clientNum"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	FriendlyTeam:setLeftRight( 0.5, 0.5, -604.5, 604.5 ) --[[ @ 0]]
	FriendlyTeam:setTopBottom( 0.5, 0.5, -350, -134 ) --[[ @ 0]]
	FriendlyTeam:setScale( 1.2, 1.2 ) --[[ @ 0]]
	FriendlyTeam:setWidgetType( CoD.PositionDraft_ViewTeams_Client ) --[[ @ 0]]
	FriendlyTeam:setHorizontalCount( 6 ) --[[ @ 0]]
	FriendlyTeam:setSpacing( 15 ) --[[ @ 0]]
	FriendlyTeam:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	FriendlyTeam:setDataSource( "Clients" ) --[[ @ 0]]
	self:addElement( FriendlyTeam ) --[[ @ 0]]
	self.FriendlyTeam = FriendlyTeam --[[ @ 0]]
	
	local FriendlyTeamCodCaster = LUI.UIList.new( f1_local1, f1_arg0, 15, 0, nil, false, false, false, false ) --[[ @ 0]]
	FriendlyTeamCodCaster:mergeStateConditions( {
		{
			stateName = "Friendly_Searching",
			condition = function ( menu, element, event )
				return AlwaysTrue()
			end
		},
		{
			stateName = "Enemy_CharacterSelected",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		},
		{
			stateName = "Enemy_ValidClient",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueGreaterThanOrEqualTo( element, f1_arg0, "clientNum", 0 ) and AlwaysFalse()
			end
		},
		{
			stateName = "Enemy_Searching",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		}
	} ) --[[ @ 0]]
	FriendlyTeamCodCaster:linkToElementModel( FriendlyTeamCodCaster, "characterIndex", true, function ( model )
		f1_local1:updateElementState( FriendlyTeamCodCaster, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = model:get(),
			modelName = "characterIndex"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	FriendlyTeamCodCaster:linkToElementModel( FriendlyTeamCodCaster, "clientNum", true, function ( model )
		f1_local1:updateElementState( FriendlyTeamCodCaster, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = model:get(),
			modelName = "clientNum"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	FriendlyTeamCodCaster:setLeftRight( 0.5, 0.5, -604.5, 604.5 ) --[[ @ 0]]
	FriendlyTeamCodCaster:setTopBottom( 0.5, 0.5, -350, -134 ) --[[ @ 0]]
	FriendlyTeamCodCaster:setAlpha( 0 ) --[[ @ 0]]
	FriendlyTeamCodCaster:setScale( 1.2, 1.2 ) --[[ @ 0]]
	FriendlyTeamCodCaster:setWidgetType( CoD.PositionDraft_ViewTeams_CodCaster_Client ) --[[ @ 0]]
	FriendlyTeamCodCaster:setHorizontalCount( 6 ) --[[ @ 0]]
	FriendlyTeamCodCaster:setSpacing( 15 ) --[[ @ 0]]
	FriendlyTeamCodCaster:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	self:addElement( FriendlyTeamCodCaster ) --[[ @ 0]]
	self.FriendlyTeamCodCaster = FriendlyTeamCodCaster --[[ @ 0]]
	
	local FrameL = CoD.GameEndScoreGraphicFrame.new( f1_local1, f1_arg0, 0.5, 0.5, -154, -78, 0.5, 0.5, -15.5, 15.5 ) --[[ @ 0]]
	self:addElement( FrameL ) --[[ @ 0]]
	self.FrameL = FrameL --[[ @ 0]]
	
	local FrameR = CoD.GameEndScoreGraphicFrame.new( f1_local1, f1_arg0, 0.5, 0.5, 81, 151, 0.5, 0.5, -15.5, 15.5 ) --[[ @ 0]]
	FrameR:setYRot( 180 ) --[[ @ 0]]
	self:addElement( FrameR ) --[[ @ 0]]
	self.FrameR = FrameR --[[ @ 0]]
	
	local TeamStripBase = LUI.UIImage.new( -0, 1, 0, 0, 0.5, 0.5, -449, -415 ) --[[ @ 0]]
	TeamStripBase:setAlpha( 0.15 ) --[[ @ 0]]
	TeamStripBase:setImage( RegisterImage( @"hash_530CAAA0A9615B70" ) ) --[[ @ 0]]
	TeamStripBase:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_tile_scroll_normal" ) ) --[[ @ 0]]
	TeamStripBase:setShaderVector( 0, 1.3, 1, 0, 0 ) --[[ @ 0]]
	TeamStripBase:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	TeamStripBase:subscribeToGlobalModel( f1_arg0, "Factions", "alliesFactionColor", function ( model )
		local f35_local0 = model:get() --[[ @ 0]]
		if f35_local0 ~= nil then
			TeamStripBase:setRGB( f35_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( TeamStripBase ) --[[ @ 0]]
	self.TeamStripBase = TeamStripBase --[[ @ 0]]
	
	local f1_local22 = nil --[[ @ 0]]
	self.TeamStripGlow = LUI.UIElement.createFake() --[[ @ 0]]
	local TeamStripGlowPC = nil --[[ @ 0]]
	
	TeamStripGlowPC = LUI.UIImage.new( -0, 1, 0, 0, 0.5, 0.5, -449, -415 ) --[[ @ 0]]
	TeamStripGlowPC:setAlpha( 0 ) --[[ @ 0]]
	TeamStripGlowPC:setXRot( 180 ) --[[ @ 0]]
	TeamStripGlowPC:setImage( RegisterImage( @"hash_52485F8201F6B57A" ) ) --[[ @ 0]]
	TeamStripGlowPC:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_17EA4827662D4CD4" ) ) --[[ @ 0]]
	TeamStripGlowPC:setShaderVector( 0, 7, 1, 0, 0 ) --[[ @ 0]]
	TeamStripGlowPC:setShaderVector( 1, 0, 1, 0, 1 ) --[[ @ 0]]
	TeamStripGlowPC:subscribeToGlobalModel( f1_arg0, "Factions", "alliesFactionColor", function ( model )
		local f36_local0 = model:get() --[[ @ 0]]
		if f36_local0 ~= nil then
			TeamStripGlowPC:setRGB( f36_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( TeamStripGlowPC ) --[[ @ 0]]
	self.TeamStripGlowPC = TeamStripGlowPC --[[ @ 0]]
	
	local EnemyStripBase = LUI.UIImage.new( -0, 1, 0, 0, 0.5, 0.5, 416, 450 ) --[[ @ 0]]
	EnemyStripBase:setAlpha( 0.15 ) --[[ @ 0]]
	EnemyStripBase:setImage( RegisterImage( @"hash_530CAAA0A9615B70" ) ) --[[ @ 0]]
	EnemyStripBase:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_tile_scroll_normal" ) ) --[[ @ 0]]
	EnemyStripBase:setShaderVector( 0, 1.3, 1, 0, 0 ) --[[ @ 0]]
	EnemyStripBase:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	EnemyStripBase:subscribeToGlobalModel( f1_arg0, "Factions", "axisFactionColor", function ( model )
		local f37_local0 = model:get() --[[ @ 0]]
		if f37_local0 ~= nil then
			EnemyStripBase:setRGB( f37_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( EnemyStripBase ) --[[ @ 0]]
	self.EnemyStripBase = EnemyStripBase --[[ @ 0]]
	
	local f1_local25 = nil --[[ @ 0]]
	self.EnemyStripGlow = LUI.UIElement.createFake() --[[ @ 0]]
	local EnemyStripGlowPC = nil --[[ @ 0]]
	
	EnemyStripGlowPC = LUI.UIImage.new( 0, 1, 0, 0, 0.5, 0.5, 416, 450 ) --[[ @ 0]]
	EnemyStripGlowPC:setAlpha( 0 ) --[[ @ 0]]
	EnemyStripGlowPC:setImage( RegisterImage( @"hash_52485F8201F6B57A" ) ) --[[ @ 0]]
	EnemyStripGlowPC:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_17EA4827662D4CD4" ) ) --[[ @ 0]]
	EnemyStripGlowPC:setShaderVector( 0, 7, 1, 0, 0 ) --[[ @ 0]]
	EnemyStripGlowPC:setShaderVector( 1, 0, 1, 0, 1 ) --[[ @ 0]]
	EnemyStripGlowPC:subscribeToGlobalModel( f1_arg0, "Factions", "axisFactionColor", function ( model )
		local f38_local0 = model:get() --[[ @ 0]]
		if f38_local0 ~= nil then
			EnemyStripGlowPC:setRGB( f38_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( EnemyStripGlowPC ) --[[ @ 0]]
	self.EnemyStripGlowPC = EnemyStripGlowPC --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "CodCaster",
			condition = function ( menu, element, event )
				return IsCodCaster( f1_arg0 )
			end
		}
	} ) --[[ @ 0]]
	local f1_local27 = self --[[ @ 0]]
	local f1_local28 = self.subscribeToModel --[[ @ 0]]
	local f1_local29 = Engine[@"getmodelforcontroller"]( f1_arg0 ) --[[ @ 0]]
	f1_local28( f1_local27, f1_local29["factions.isCoDCaster"], function ( f40_arg0 )
		f1_local1:updateElementState( self, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f40_arg0:get(),
			modelName = "factions.isCoDCaster"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"luibutton"][@"lui_key_xbb_pscircle"], nil, function ( element, menu, controller, model )
		GoBack( self, controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xbb_pscircle"], @"hash_972E7D1EB1EF77F", nil, nil ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"luibutton"][@"lui_key_back"], "TAB", function ( element, menu, controller, model )
		GoBack( self, controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_back"], @"hash_0", nil, "TAB" ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	EnemyTeam.id = "EnemyTeam" --[[ @ 0]]
	EnemyTeamCodCaster.id = "EnemyTeamCodCaster" --[[ @ 0]]
	FriendlyTeam.id = "FriendlyTeam" --[[ @ 0]]
	FriendlyTeamCodCaster.id = "FriendlyTeamCodCaster" --[[ @ 0]]
	self:processEvent( {
		name = "menu_loaded",
		controller = f1_arg0
	} ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PreLoadFunc then
		PreLoadFunc( self, f1_arg0 ) --[[ @ 0]]
	end
	f1_local28 = self --[[ @ 0]]
	if IsCodCaster( f1_arg0 ) then
		SetListDataSource( self.FriendlyTeamCodCaster, "Clients" ) --[[ @ 0]]
		SetListDataSource( self.EnemyTeamCodCaster, "Clients" ) --[[ @ 0]]
		CoD.ScoreboardUtility.SetupTeamLists( self, f1_arg0, self.FriendlyTeam, self.EnemyTeam, self.FriendlyTeamCodCaster, self.EnemyTeamCodCaster ) --[[ @ 0]]
		MenuHidesFreeCursor( f1_local1, f1_arg0 ) --[[ @ 0]]
	else
		SetListDataSource( self.FriendlyTeam, "Clients" ) --[[ @ 0]]
		SetListDataSource( self.EnemyTeam, "Clients" ) --[[ @ 0]]
		CoD.ScoreboardUtility.SetupTeamLists( self, f1_arg0, self.FriendlyTeam, self.EnemyTeam, self.FriendlyTeamCodCaster, self.EnemyTeamCodCaster ) --[[ @ 0]]
		MenuHidesFreeCursor( f1_local1, f1_arg0 ) --[[ @ 0]]
	end
	return self
end
 --[[ @ 0]]
CoD.PositionDraft_Teams.__resetProperties = function ( f45_arg0 )
	f45_arg0.FriendlyTeamCodCaster:completeAnimation() --[[ @ 0]]
	f45_arg0.FriendlyTeam:completeAnimation() --[[ @ 0]]
	f45_arg0.EnemyTeamCodCaster:completeAnimation() --[[ @ 0]]
	f45_arg0.EnemyTeam:completeAnimation() --[[ @ 0]]
	f45_arg0.FriendlyTeamCodCaster:setAlpha( 0 ) --[[ @ 0]]
	f45_arg0.FriendlyTeam:setAlpha( 1 ) --[[ @ 0]]
	f45_arg0.EnemyTeamCodCaster:setAlpha( 0 ) --[[ @ 0]]
	f45_arg0.EnemyTeam:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.PositionDraft_Teams.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f46_arg0, f46_arg1 )
			f46_arg0:__resetProperties() --[[ @ 0]]
			f46_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	CodCaster = {
		DefaultClip = function ( f47_arg0, f47_arg1 )
			f47_arg0:__resetProperties() --[[ @ 0]]
			f47_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f47_arg0.EnemyTeam:completeAnimation() --[[ @ 0]]
			f47_arg0.EnemyTeam:setAlpha( 0 ) --[[ @ 0]]
			f47_arg0.clipFinished( f47_arg0.EnemyTeam ) --[[ @ 0]]
			f47_arg0.EnemyTeamCodCaster:completeAnimation() --[[ @ 0]]
			f47_arg0.EnemyTeamCodCaster:setAlpha( 1 ) --[[ @ 0]]
			f47_arg0.clipFinished( f47_arg0.EnemyTeamCodCaster ) --[[ @ 0]]
			f47_arg0.FriendlyTeam:completeAnimation() --[[ @ 0]]
			f47_arg0.FriendlyTeam:setAlpha( 0 ) --[[ @ 0]]
			f47_arg0.clipFinished( f47_arg0.FriendlyTeam ) --[[ @ 0]]
			f47_arg0.FriendlyTeamCodCaster:completeAnimation() --[[ @ 0]]
			f47_arg0.FriendlyTeamCodCaster:setAlpha( 1 ) --[[ @ 0]]
			f47_arg0.clipFinished( f47_arg0.FriendlyTeamCodCaster ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.PositionDraft_Teams.__onClose = function ( f48_arg0 )
	f48_arg0.EnemyLineL:close() --[[ @ 0]]
	f48_arg0.EnemyLineL2:close() --[[ @ 0]]
	f48_arg0.FriendlyLineL:close() --[[ @ 0]]
	f48_arg0.FriendlyLineL2:close() --[[ @ 0]]
	f48_arg0.EnemyTeam:close() --[[ @ 0]]
	f48_arg0.EnemyTeamCodCaster:close() --[[ @ 0]]
	f48_arg0.FriendlyTeam:close() --[[ @ 0]]
	f48_arg0.FriendlyTeamCodCaster:close() --[[ @ 0]]
	f48_arg0.FrameL:close() --[[ @ 0]]
	f48_arg0.FrameR:close() --[[ @ 0]]
	f48_arg0.TeamStripBase:close() --[[ @ 0]]
	f48_arg0.TeamStripGlow:close() --[[ @ 0]]
	f48_arg0.TeamStripGlowPC:close() --[[ @ 0]]
	f48_arg0.EnemyStripBase:close() --[[ @ 0]]
	f48_arg0.EnemyStripGlow:close() --[[ @ 0]]
	f48_arg0.EnemyStripGlowPC:close() --[[ @ 0]]
end
 --[[ @ 0]]
