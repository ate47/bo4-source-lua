-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
require( "x64:7757ffe244726b9" ) --[[ @ 0]]
require( "ui/uieditor/widgets/hud/scoreinfo/scoreinfo" ) --[[ @ 0]]
require( "ui/uieditor/widgets/hud/scoreinfo/scoreinfo_timer" ) --[[ @ 0]]
require( "x64:22b8a915cdb60244" ) --[[ @ 0]]

CoD.ScoreInfoContainer = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.ScoreInfoContainer.__defaultWidth = 210 --[[ @ 0]]
CoD.ScoreInfoContainer.__defaultHeight = 103 --[[ @ 0]]
CoD.ScoreInfoContainer.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	CoD.BaseUtility.InitControllerModelIfNotSet( f1_arg1, "hudItems.tankState", 0 ) --[[ @ 0]]
	self:setClass( CoD.ScoreInfoContainer ) --[[ @ 0]]
	self.id = "ScoreInfoContainer" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local BountyHunterCashMoney = CoD.BountyHunterPlayerMoney.new( f1_arg0, f1_arg1, 0.5, 0.5, -102.5, 102.5, 0, 0, -36, 4 ) --[[ @ 0]]
	BountyHunterCashMoney:subscribeToGlobalModel( f1_arg1, "PerController", nil, function ( model )
		BountyHunterCashMoney:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( BountyHunterCashMoney ) --[[ @ 0]]
	self.BountyHunterCashMoney = BountyHunterCashMoney --[[ @ 0]]
	
	local ScoreInfoTimer = CoD.ScoreInfo_Timer.new( f1_arg0, f1_arg1, 0.5, 0.5, -102.5, 102.5, 0, 0, 63, 103 ) --[[ @ 0]]
	ScoreInfoTimer:mergeStateConditions( {
		{
			stateName = "HardpointActive",
			condition = function ( menu, element, event )
				local f3_local0 = CoD.HUDUtility.IsGameTypeEqualToString( "koth" ) --[[ @ 0]]
				if f3_local0 then
					f3_local0 = CoD.ModelUtility.IsModelValueGreaterThan( f1_arg1, "gameScore.gameTimeEnd", 0 ) --[[ @ 0]]
					if f3_local0 then
						if not CoD.ModelUtility.IsModelValueEqualTo( f1_arg1, "gameScore.gameTimeLow", 1 ) then
							f3_local0 = not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"] ) --[[ @ 0]]
						else
							f3_local0 = false --[[ @ 0]]
						end
					end
				end
				return f3_local0
			end
		},
		{
			stateName = "HardpointTimeLow",
			condition = function ( menu, element, event )
				local f4_local0 = CoD.HUDUtility.IsGameTypeEqualToString( "koth" ) --[[ @ 0]]
				if f4_local0 then
					f4_local0 = CoD.ModelUtility.IsModelValueGreaterThan( f1_arg1, "gameScore.gameTimeEnd", 0 ) --[[ @ 0]]
					if f4_local0 then
						f4_local0 = not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"] ) --[[ @ 0]]
					end
				end
				return f4_local0
			end
		},
		{
			stateName = "PropHunt",
			condition = function ( menu, element, event )
				local f5_local0 = CoD.HUDUtility.IsGameTypeEqualToString( "prop" ) --[[ @ 0]]
				if f5_local0 then
					f5_local0 = CoD.ModelUtility.IsModelValueGreaterThan( f1_arg1, "gameScore.gameTimeEnd", 0 ) --[[ @ 0]]
					if f5_local0 then
						if not CoD.ModelUtility.IsModelValueEqualTo( f1_arg1, "gameScore.gameTimeLow", 1 ) then
							f5_local0 = not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"] ) --[[ @ 0]]
						else
							f5_local0 = false --[[ @ 0]]
						end
					end
				end
				return f5_local0
			end
		},
		{
			stateName = "PropHuntTimeLow",
			condition = function ( menu, element, event )
				local f6_local0 = CoD.HUDUtility.IsGameTypeEqualToString( "prop" ) --[[ @ 0]]
				if f6_local0 then
					f6_local0 = CoD.ModelUtility.IsModelValueGreaterThan( f1_arg1, "gameScore.gameTimeEnd", 0 ) --[[ @ 0]]
					if f6_local0 then
						f6_local0 = not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"] ) --[[ @ 0]]
					end
				end
				return f6_local0
			end
		},
		{
			stateName = "Active",
			condition = function ( menu, element, event )
				local f7_local0 = CoD.ModelUtility.IsModelValueGreaterThan( f1_arg1, "gameScore.gameTimeEnd", 0 ) --[[ @ 0]]
				if f7_local0 then
					if not CoD.ModelUtility.IsModelValueEqualTo( f1_arg1, "gameScore.gameTimeLow", 1 ) then
						f7_local0 = not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"] ) --[[ @ 0]]
					else
						f7_local0 = false --[[ @ 0]]
					end
				end
				return f7_local0
			end
		},
		{
			stateName = "Overtime",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsModelValueTrue( f1_arg1, "gameScore.gameTimeOvertime" ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"] )
			end
		},
		{
			stateName = "TimeLow",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsModelValueGreaterThan( f1_arg1, "gameScore.gameTimeEnd", 0 ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"] )
			end
		}
	} ) --[[ @ 0]]
	local EMPbacker = ScoreInfoTimer --[[ @ 0]]
	local ScoreInfo = ScoreInfoTimer.subscribeToModel --[[ @ 0]]
	local ScoreInfoHacked = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	ScoreInfo( EMPbacker, ScoreInfoHacked["gameScore.gameTimeEnd"], function ( f10_arg0 )
		f1_arg0:updateElementState( ScoreInfoTimer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f10_arg0:get(),
			modelName = "gameScore.gameTimeEnd"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	EMPbacker = ScoreInfoTimer --[[ @ 0]]
	ScoreInfo = ScoreInfoTimer.subscribeToModel --[[ @ 0]]
	ScoreInfoHacked = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	ScoreInfo( EMPbacker, ScoreInfoHacked["gameScore.gameTimeLow"], function ( f11_arg0 )
		f1_arg0:updateElementState( ScoreInfoTimer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f11_arg0:get(),
			modelName = "gameScore.gameTimeLow"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	EMPbacker = ScoreInfoTimer --[[ @ 0]]
	ScoreInfo = ScoreInfoTimer.subscribeToModel --[[ @ 0]]
	ScoreInfoHacked = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	ScoreInfo( EMPbacker, ScoreInfoHacked["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"]], function ( f12_arg0 )
		f1_arg0:updateElementState( ScoreInfoTimer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f12_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	EMPbacker = ScoreInfoTimer --[[ @ 0]]
	ScoreInfo = ScoreInfoTimer.subscribeToModel --[[ @ 0]]
	ScoreInfoHacked = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	ScoreInfo( EMPbacker, ScoreInfoHacked["gameScore.gameTimeOvertime"], function ( f13_arg0 )
		f1_arg0:updateElementState( ScoreInfoTimer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f13_arg0:get(),
			modelName = "gameScore.gameTimeOvertime"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:addElement( ScoreInfoTimer ) --[[ @ 0]]
	self.ScoreInfoTimer = ScoreInfoTimer --[[ @ 0]]
	
	ScoreInfo = CoD.ScoreInfo.new( f1_arg0, f1_arg1, 0, 0, 0, 210, 0, 0, 0, 68 ) --[[ @ 0]]
	self:addElement( ScoreInfo ) --[[ @ 0]]
	self.ScoreInfo = ScoreInfo --[[ @ 0]]
	
	EMPbacker = LUI.UIImage.new( 0, 0, -10.5, 221.5, 0, 0, -11.5, 112.5 ) --[[ @ 0]]
	EMPbacker:setRGB( 0, 0, 0 ) --[[ @ 0]]
	EMPbacker:setAlpha( 0 ) --[[ @ 0]]
	EMPbacker:setImage( RegisterImage( @"hash_3F90B8BFAD34F9E3" ) ) --[[ @ 0]]
	self:addElement( EMPbacker ) --[[ @ 0]]
	self.EMPbacker = EMPbacker --[[ @ 0]]
	
	ScoreInfoHacked = LUI.UIImage.new( 0, 0, 1, 209, 0, 0, -1, 103 ) --[[ @ 0]]
	ScoreInfoHacked:setAlpha( 0 ) --[[ @ 0]]
	ScoreInfoHacked:setImage( RegisterImage( @"hash_3F90B8BFAD34F9E3" ) ) --[[ @ 0]]
	ScoreInfoHacked:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_emp" ) ) --[[ @ 0]]
	ScoreInfoHacked:setShaderVector( 0, 25, 0, 0, 0 ) --[[ @ 0]]
	ScoreInfoHacked:setShaderVector( 1, 1, 0, 0, 0 ) --[[ @ 0]]
	ScoreInfoHacked:setShaderVector( 2, 1, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( ScoreInfoHacked ) --[[ @ 0]]
	self.ScoreInfoHacked = ScoreInfoHacked --[[ @ 0]]
	
	local Hacked = CoD.hud_hacked_score_widget.new( f1_arg0, f1_arg1, 0, 0, -2.5, 217.5, 0, 0, -2, 70 ) --[[ @ 0]]
	self:addElement( Hacked ) --[[ @ 0]]
	self.Hacked = Hacked --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "EMP",
			condition = function ( menu, element, event )
				local f14_local0 --[[ @ 0]]
				if not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_4B8E9B69F4B87954"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_5D3ABF9A2753CE40"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_669C28E2FCA82769"] ) and Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_7ADC477DDE486DD7"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_523CD9BAB9B9F4C8"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_68A5E996D4528DA2"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_47B52A87BC9AA4C7"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_29BF57CE75A8755E"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_6668F0686232679"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_33AEEAA452536E6E"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_1D298E43D0B6FEF2"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_624E603C16FCC38F"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) and Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_BB045E46E88E762"] ) and not IsCodCaster( f1_arg1 ) then
					f14_local0 = CoD.ModelUtility.IsModelValueTrue( f1_arg1, "hudItems.playerSpawned" ) --[[ @ 0]]
					if f14_local0 then
						f14_local0 = Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_59333FC97F7870"] ) --[[ @ 0]]
					end
				else
					f14_local0 = false --[[ @ 0]]
				end
				return f14_local0
			end
		},
		{
			stateName = "VisibleSpawnSelectPC",
			condition = function ( menu, element, event )
				local f15_local0 = CoD.ModelUtility.IsModelValueTrue( f1_arg1, "hudItems.playerSpawned" ) --[[ @ 0]]
				if f15_local0 then
					if not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_4B8E9B69F4B87954"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_5D3ABF9A2753CE40"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_59333FC97F7870"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_669C28E2FCA82769"] ) and Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_7ADC477DDE486DD7"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_523CD9BAB9B9F4C8"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_68A5E996D4528DA2"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_47B52A87BC9AA4C7"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_29BF57CE75A8755E"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_6668F0686232679"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_33AEEAA452536E6E"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_1D298E43D0B6FEF2"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_624E603C16FCC38F"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_5C57360571B0917E"] ) and not CoD.BaseUtility.IsCurrentSessionModeEqualTo( Enum[@"eModes"][@"hash_3BF1DCC8138A9D39"] ) then
						f15_local0 = CoD.ModelUtility.IsModelValueEqualTo( f1_arg1, "hudItems.showSpawnSelect", 1 ) --[[ @ 0]]
						if f15_local0 then
							f15_local0 = IsPC() --[[ @ 0]]
						end
					else
						f15_local0 = false --[[ @ 0]]
					end
				end
				return f15_local0
			end
		},
		{
			stateName = "VisibleBountyPC",
			condition = function ( menu, element, event )
				local f16_local0 = CoD.ModelUtility.IsModelValueTrue( f1_arg1, "hudItems.playerSpawned" ) --[[ @ 0]]
				if f16_local0 then
					if not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_4B8E9B69F4B87954"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_5D3ABF9A2753CE40"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_59333FC97F7870"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_669C28E2FCA82769"] ) and Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_7ADC477DDE486DD7"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_523CD9BAB9B9F4C8"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_68A5E996D4528DA2"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_47B52A87BC9AA4C7"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_29BF57CE75A8755E"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_6668F0686232679"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_33AEEAA452536E6E"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_1D298E43D0B6FEF2"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_624E603C16FCC38F"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_5C57360571B0917E"] ) and not CoD.BaseUtility.IsCurrentSessionModeEqualTo( Enum[@"eModes"][@"hash_3BF1DCC8138A9D39"] ) then
						f16_local0 = CoD.BountyHunterUtility.GameTypeIsBounty( f1_arg1 ) --[[ @ 0]]
						if f16_local0 then
							f16_local0 = IsPC() --[[ @ 0]]
						end
					else
						f16_local0 = false --[[ @ 0]]
					end
				end
				return f16_local0
			end
		},
		{
			stateName = "VisiblePC",
			condition = function ( menu, element, event )
				local f17_local0 = CoD.ModelUtility.IsModelValueTrue( f1_arg1, "hudItems.playerSpawned" ) --[[ @ 0]]
				if f17_local0 then
					if not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_4B8E9B69F4B87954"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_5D3ABF9A2753CE40"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_59333FC97F7870"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_669C28E2FCA82769"] ) and Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_7ADC477DDE486DD7"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_523CD9BAB9B9F4C8"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_68A5E996D4528DA2"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_47B52A87BC9AA4C7"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_29BF57CE75A8755E"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_6668F0686232679"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_33AEEAA452536E6E"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_1D298E43D0B6FEF2"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_624E603C16FCC38F"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_5C57360571B0917E"] ) and not CoD.BaseUtility.IsCurrentSessionModeEqualTo( Enum[@"eModes"][@"hash_3BF1DCC8138A9D39"] ) then
						f17_local0 = IsPC() --[[ @ 0]]
					else
						f17_local0 = false --[[ @ 0]]
					end
				end
				return f17_local0
			end
		},
		{
			stateName = "VisibleSpawnSelect",
			condition = function ( menu, element, event )
				local f18_local0 = CoD.ModelUtility.IsModelValueTrue( f1_arg1, "hudItems.playerSpawned" ) --[[ @ 0]]
				if f18_local0 then
					if not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_4B8E9B69F4B87954"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_5D3ABF9A2753CE40"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_59333FC97F7870"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_669C28E2FCA82769"] ) and Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_7ADC477DDE486DD7"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_523CD9BAB9B9F4C8"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_68A5E996D4528DA2"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_47B52A87BC9AA4C7"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_29BF57CE75A8755E"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_6668F0686232679"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_33AEEAA452536E6E"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_1D298E43D0B6FEF2"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_624E603C16FCC38F"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_5C57360571B0917E"] ) and not CoD.BaseUtility.IsCurrentSessionModeEqualTo( Enum[@"eModes"][@"hash_3BF1DCC8138A9D39"] ) then
						f18_local0 = CoD.ModelUtility.IsModelValueEqualTo( f1_arg1, "hudItems.showSpawnSelect", 1 ) --[[ @ 0]]
					else
						f18_local0 = false --[[ @ 0]]
					end
				end
				return f18_local0
			end
		},
		{
			stateName = "VisibleBounty",
			condition = function ( menu, element, event )
				local f19_local0 = CoD.ModelUtility.IsModelValueTrue( f1_arg1, "hudItems.playerSpawned" ) --[[ @ 0]]
				if f19_local0 then
					if not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_4B8E9B69F4B87954"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_5D3ABF9A2753CE40"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_59333FC97F7870"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_669C28E2FCA82769"] ) and Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_7ADC477DDE486DD7"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_523CD9BAB9B9F4C8"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_68A5E996D4528DA2"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_47B52A87BC9AA4C7"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_29BF57CE75A8755E"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_6668F0686232679"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_33AEEAA452536E6E"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_1D298E43D0B6FEF2"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_624E603C16FCC38F"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_5C57360571B0917E"] ) and not CoD.BaseUtility.IsCurrentSessionModeEqualTo( Enum[@"eModes"][@"hash_3BF1DCC8138A9D39"] ) then
						f19_local0 = CoD.BountyHunterUtility.GameTypeIsBounty( f1_arg1 ) --[[ @ 0]]
					else
						f19_local0 = false --[[ @ 0]]
					end
				end
				return f19_local0
			end
		},
		{
			stateName = "Visible",
			condition = function ( menu, element, event )
				local f20_local0 = CoD.ModelUtility.IsModelValueTrue( f1_arg1, "hudItems.playerSpawned" ) --[[ @ 0]]
				if f20_local0 then
					if not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_4B8E9B69F4B87954"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_5D3ABF9A2753CE40"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_59333FC97F7870"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_669C28E2FCA82769"] ) and Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_7ADC477DDE486DD7"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_523CD9BAB9B9F4C8"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_68A5E996D4528DA2"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_47B52A87BC9AA4C7"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_29BF57CE75A8755E"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_6668F0686232679"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_33AEEAA452536E6E"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_1D298E43D0B6FEF2"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_624E603C16FCC38F"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_5C57360571B0917E"] ) then
						f20_local0 = not CoD.BaseUtility.IsCurrentSessionModeEqualTo( Enum[@"eModes"][@"hash_3BF1DCC8138A9D39"] ) --[[ @ 0]]
					else
						f20_local0 = false --[[ @ 0]]
					end
				end
				return f20_local0
			end
		},
		{
			stateName = "CodCasterInvisible",
			condition = function ( menu, element, event )
				return IsCodCaster( f1_arg1 )
			end
		}
	} ) --[[ @ 0]]
	local f1_local7 = self --[[ @ 0]]
	local f1_local8 = self.subscribeToModel --[[ @ 0]]
	local f1_local9 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local8( f1_local7, f1_local9["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_4B8E9B69F4B87954"]], function ( f22_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f22_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_4B8E9B69F4B87954"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = self --[[ @ 0]]
	f1_local8 = self.subscribeToModel --[[ @ 0]]
	f1_local9 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local8( f1_local7, f1_local9["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5D3ABF9A2753CE40"]], function ( f23_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f23_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5D3ABF9A2753CE40"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = self --[[ @ 0]]
	f1_local8 = self.subscribeToModel --[[ @ 0]]
	f1_local9 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local8( f1_local7, f1_local9["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_669C28E2FCA82769"]], function ( f24_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f24_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_669C28E2FCA82769"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = self --[[ @ 0]]
	f1_local8 = self.subscribeToModel --[[ @ 0]]
	f1_local9 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local8( f1_local7, f1_local9["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_7ADC477DDE486DD7"]], function ( f25_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f25_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_7ADC477DDE486DD7"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = self --[[ @ 0]]
	f1_local8 = self.subscribeToModel --[[ @ 0]]
	f1_local9 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local8( f1_local7, f1_local9["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_523CD9BAB9B9F4C8"]], function ( f26_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f26_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_523CD9BAB9B9F4C8"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = self --[[ @ 0]]
	f1_local8 = self.subscribeToModel --[[ @ 0]]
	f1_local9 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local8( f1_local7, f1_local9["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_68A5E996D4528DA2"]], function ( f27_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f27_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_68A5E996D4528DA2"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = self --[[ @ 0]]
	f1_local8 = self.subscribeToModel --[[ @ 0]]
	f1_local9 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local8( f1_local7, f1_local9["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_47B52A87BC9AA4C7"]], function ( f28_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f28_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_47B52A87BC9AA4C7"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = self --[[ @ 0]]
	f1_local8 = self.subscribeToModel --[[ @ 0]]
	f1_local9 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local8( f1_local7, f1_local9["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_29BF57CE75A8755E"]], function ( f29_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f29_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_29BF57CE75A8755E"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = self --[[ @ 0]]
	f1_local8 = self.subscribeToModel --[[ @ 0]]
	f1_local9 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local8( f1_local7, f1_local9["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_6668F0686232679"]], function ( f30_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f30_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_6668F0686232679"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = self --[[ @ 0]]
	f1_local8 = self.subscribeToModel --[[ @ 0]]
	f1_local9 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local8( f1_local7, f1_local9["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_33AEEAA452536E6E"]], function ( f31_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f31_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_33AEEAA452536E6E"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = self --[[ @ 0]]
	f1_local8 = self.subscribeToModel --[[ @ 0]]
	f1_local9 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local8( f1_local7, f1_local9["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_1D298E43D0B6FEF2"]], function ( f32_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f32_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_1D298E43D0B6FEF2"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = self --[[ @ 0]]
	f1_local8 = self.subscribeToModel --[[ @ 0]]
	f1_local9 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local8( f1_local7, f1_local9["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_624E603C16FCC38F"]], function ( f33_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f33_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_624E603C16FCC38F"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = self --[[ @ 0]]
	f1_local8 = self.subscribeToModel --[[ @ 0]]
	f1_local9 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local8( f1_local7, f1_local9["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"]], function ( f34_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f34_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = self --[[ @ 0]]
	f1_local8 = self.subscribeToModel --[[ @ 0]]
	f1_local9 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local8( f1_local7, f1_local9["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"]], function ( f35_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f35_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = self --[[ @ 0]]
	f1_local8 = self.subscribeToModel --[[ @ 0]]
	f1_local9 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local8( f1_local7, f1_local9["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_BB045E46E88E762"]], function ( f36_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f36_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_BB045E46E88E762"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = self --[[ @ 0]]
	f1_local8 = self.subscribeToModel --[[ @ 0]]
	f1_local9 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local8( f1_local7, f1_local9["factions.isCoDCaster"], function ( f37_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f37_arg0:get(),
			modelName = "factions.isCoDCaster"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = self --[[ @ 0]]
	f1_local8 = self.subscribeToModel --[[ @ 0]]
	f1_local9 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local8( f1_local7, f1_local9["hudItems.playerSpawned"], function ( f38_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f38_arg0:get(),
			modelName = "hudItems.playerSpawned"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = self --[[ @ 0]]
	f1_local8 = self.subscribeToModel --[[ @ 0]]
	f1_local9 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local8( f1_local7, f1_local9["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_59333FC97F7870"]], function ( f39_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f39_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_59333FC97F7870"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = self --[[ @ 0]]
	f1_local8 = self.subscribeToModel --[[ @ 0]]
	f1_local9 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local8( f1_local7, f1_local9["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"]], function ( f40_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f40_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = self --[[ @ 0]]
	f1_local8 = self.subscribeToModel --[[ @ 0]]
	f1_local9 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local8( f1_local7, f1_local9["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5C57360571B0917E"]], function ( f41_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f41_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5C57360571B0917E"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = self --[[ @ 0]]
	f1_local8 = self.subscribeToModel --[[ @ 0]]
	f1_local9 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local8( f1_local7, f1_local9["hudItems.showSpawnSelect"], function ( f42_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f42_arg0:get(),
			modelName = "hudItems.showSpawnSelect"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ScoreInfo.id = "ScoreInfo" --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.ScoreInfoContainer.__resetProperties = function ( f43_arg0 )
	f43_arg0.ScoreInfoTimer:completeAnimation() --[[ @ 0]]
	f43_arg0.ScoreInfo:completeAnimation() --[[ @ 0]]
	f43_arg0.BountyHunterCashMoney:completeAnimation() --[[ @ 0]]
	f43_arg0.ScoreInfoHacked:completeAnimation() --[[ @ 0]]
	f43_arg0.EMPbacker:completeAnimation() --[[ @ 0]]
	f43_arg0.ScoreInfoTimer:setLeftRight( 0.5, 0.5, -102.5, 102.5 ) --[[ @ 0]]
	f43_arg0.ScoreInfoTimer:setTopBottom( 0, 0, 63, 103 ) --[[ @ 0]]
	f43_arg0.ScoreInfoTimer:setAlpha( 1 ) --[[ @ 0]]
	f43_arg0.ScoreInfo:setLeftRight( 0, 0, 0, 210 ) --[[ @ 0]]
	f43_arg0.ScoreInfo:setTopBottom( 0, 0, 0, 68 ) --[[ @ 0]]
	f43_arg0.ScoreInfo:setAlpha( 1 ) --[[ @ 0]]
	f43_arg0.BountyHunterCashMoney:setLeftRight( 0.5, 0.5, -102.5, 102.5 ) --[[ @ 0]]
	f43_arg0.BountyHunterCashMoney:setTopBottom( 0, 0, -36, 4 ) --[[ @ 0]]
	f43_arg0.BountyHunterCashMoney:setAlpha( 1 ) --[[ @ 0]]
	f43_arg0.ScoreInfoHacked:setAlpha( 0 ) --[[ @ 0]]
	f43_arg0.EMPbacker:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ScoreInfoContainer.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f44_arg0, f44_arg1 )
			f44_arg0:__resetProperties() --[[ @ 0]]
			f44_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f44_arg0.BountyHunterCashMoney:completeAnimation() --[[ @ 0]]
			f44_arg0.BountyHunterCashMoney:setTopBottom( 0, 0, -36, 4 ) --[[ @ 0]]
			f44_arg0.BountyHunterCashMoney:setAlpha( 0 ) --[[ @ 0]]
			f44_arg0.clipFinished( f44_arg0.BountyHunterCashMoney ) --[[ @ 0]]
			f44_arg0.ScoreInfoTimer:completeAnimation() --[[ @ 0]]
			f44_arg0.ScoreInfoTimer:setTopBottom( 0, 0, 59, 93 ) --[[ @ 0]]
			f44_arg0.ScoreInfoTimer:setAlpha( 0 ) --[[ @ 0]]
			f44_arg0.clipFinished( f44_arg0.ScoreInfoTimer ) --[[ @ 0]]
			f44_arg0.ScoreInfo:completeAnimation() --[[ @ 0]]
			f44_arg0.ScoreInfo:setTopBottom( 0, 0, 0, 68 ) --[[ @ 0]]
			f44_arg0.ScoreInfo:setAlpha( 0 ) --[[ @ 0]]
			f44_arg0.clipFinished( f44_arg0.ScoreInfo ) --[[ @ 0]]
		end,
		Visible = function ( f45_arg0, f45_arg1 )
			f45_arg0:__resetProperties() --[[ @ 0]]
			f45_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			local f45_local0 = function ( f46_arg0 )
				f45_arg0.ScoreInfoTimer:beginAnimation( 600 ) --[[ @ 0]]
				f45_arg0.ScoreInfoTimer:setLeftRight( 0.5, 0.5, -102.5, 102.5 ) --[[ @ 0]]
				f45_arg0.ScoreInfoTimer:setAlpha( 1 ) --[[ @ 0]]
				f45_arg0.ScoreInfoTimer:registerEventHandler( "interrupted_keyframe", f45_arg0.clipInterrupted ) --[[ @ 0]]
				f45_arg0.ScoreInfoTimer:registerEventHandler( "transition_complete_keyframe", f45_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f45_arg0.ScoreInfoTimer:completeAnimation() --[[ @ 0]]
			f45_arg0.ScoreInfoTimer:setLeftRight( 0.5, 0.5, -122.5, 82.5 ) --[[ @ 0]]
			f45_arg0.ScoreInfoTimer:setAlpha( 0 ) --[[ @ 0]]
			f45_local0( f45_arg0.ScoreInfoTimer ) --[[ @ 0]]
			local f45_local1 = function ( f47_arg0 )
				f45_arg0.ScoreInfo:beginAnimation( 600 ) --[[ @ 0]]
				f45_arg0.ScoreInfo:setLeftRight( 0, 0, 0, 166 ) --[[ @ 0]]
				f45_arg0.ScoreInfo:setAlpha( 1 ) --[[ @ 0]]
				f45_arg0.ScoreInfo:registerEventHandler( "interrupted_keyframe", f45_arg0.clipInterrupted ) --[[ @ 0]]
				f45_arg0.ScoreInfo:registerEventHandler( "transition_complete_keyframe", f45_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f45_arg0.ScoreInfo:completeAnimation() --[[ @ 0]]
			f45_arg0.ScoreInfo:setLeftRight( 0, 0, -20, 146 ) --[[ @ 0]]
			f45_arg0.ScoreInfo:setAlpha( 0 ) --[[ @ 0]]
			f45_local1( f45_arg0.ScoreInfo ) --[[ @ 0]]
		end,
		VisibleSpawnSelect = function ( f48_arg0, f48_arg1 )
			f48_arg0:__resetProperties() --[[ @ 0]]
			f48_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			local f48_local0 = function ( f49_arg0 )
				f48_arg0.ScoreInfoTimer:beginAnimation( 600 ) --[[ @ 0]]
				f48_arg0.ScoreInfoTimer:setLeftRight( 0.5, 0.5, -102.5, 102.5 ) --[[ @ 0]]
				f48_arg0.ScoreInfoTimer:setAlpha( 1 ) --[[ @ 0]]
				f48_arg0.ScoreInfoTimer:registerEventHandler( "interrupted_keyframe", f48_arg0.clipInterrupted ) --[[ @ 0]]
				f48_arg0.ScoreInfoTimer:registerEventHandler( "transition_complete_keyframe", f48_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f48_arg0.ScoreInfoTimer:completeAnimation() --[[ @ 0]]
			f48_arg0.ScoreInfoTimer:setLeftRight( 0.5, 0.5, -122.5, 82.5 ) --[[ @ 0]]
			f48_arg0.ScoreInfoTimer:setAlpha( 0 ) --[[ @ 0]]
			f48_local0( f48_arg0.ScoreInfoTimer ) --[[ @ 0]]
			local f48_local1 = function ( f50_arg0 )
				f48_arg0.ScoreInfo:beginAnimation( 600 ) --[[ @ 0]]
				f48_arg0.ScoreInfo:setLeftRight( 0, 0, 0, 166 ) --[[ @ 0]]
				f48_arg0.ScoreInfo:setAlpha( 1 ) --[[ @ 0]]
				f48_arg0.ScoreInfo:registerEventHandler( "interrupted_keyframe", f48_arg0.clipInterrupted ) --[[ @ 0]]
				f48_arg0.ScoreInfo:registerEventHandler( "transition_complete_keyframe", f48_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f48_arg0.ScoreInfo:completeAnimation() --[[ @ 0]]
			f48_arg0.ScoreInfo:setLeftRight( 0, 0, -20, 146 ) --[[ @ 0]]
			f48_arg0.ScoreInfo:setAlpha( 0 ) --[[ @ 0]]
			f48_local1( f48_arg0.ScoreInfo ) --[[ @ 0]]
		end,
		VisibleBounty = function ( f51_arg0, f51_arg1 )
			f51_arg0:__resetProperties() --[[ @ 0]]
			f51_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			local f51_local0 = function ( f52_arg0 )
				f51_arg0.BountyHunterCashMoney:beginAnimation( 600 ) --[[ @ 0]]
				f51_arg0.BountyHunterCashMoney:setLeftRight( 0.5, 0.5, -102.5, 102.5 ) --[[ @ 0]]
				f51_arg0.BountyHunterCashMoney:setAlpha( 1 ) --[[ @ 0]]
				f51_arg0.BountyHunterCashMoney:registerEventHandler( "interrupted_keyframe", f51_arg0.clipInterrupted ) --[[ @ 0]]
				f51_arg0.BountyHunterCashMoney:registerEventHandler( "transition_complete_keyframe", f51_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f51_arg0.BountyHunterCashMoney:completeAnimation() --[[ @ 0]]
			f51_arg0.BountyHunterCashMoney:setLeftRight( 0.5, 0.5, -122.5, 82.5 ) --[[ @ 0]]
			f51_arg0.BountyHunterCashMoney:setTopBottom( 0, 0, 0, 40 ) --[[ @ 0]]
			f51_arg0.BountyHunterCashMoney:setAlpha( 0 ) --[[ @ 0]]
			f51_local0( f51_arg0.BountyHunterCashMoney ) --[[ @ 0]]
			local f51_local1 = function ( f53_arg0 )
				f51_arg0.ScoreInfoTimer:beginAnimation( 600 ) --[[ @ 0]]
				f51_arg0.ScoreInfoTimer:setLeftRight( 0.5, 0.5, -102.5, 102.5 ) --[[ @ 0]]
				f51_arg0.ScoreInfoTimer:setTopBottom( 0, 0, 99, 139 ) --[[ @ 0]]
				f51_arg0.ScoreInfoTimer:setAlpha( 1 ) --[[ @ 0]]
				f51_arg0.ScoreInfoTimer:registerEventHandler( "interrupted_keyframe", f51_arg0.clipInterrupted ) --[[ @ 0]]
				f51_arg0.ScoreInfoTimer:registerEventHandler( "transition_complete_keyframe", f51_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f51_arg0.ScoreInfoTimer:completeAnimation() --[[ @ 0]]
			f51_arg0.ScoreInfoTimer:setLeftRight( 0.5, 0.5, -122.5, 82.5 ) --[[ @ 0]]
			f51_arg0.ScoreInfoTimer:setTopBottom( 0, 0, 98.5, 138.5 ) --[[ @ 0]]
			f51_arg0.ScoreInfoTimer:setAlpha( 0 ) --[[ @ 0]]
			f51_local1( f51_arg0.ScoreInfoTimer ) --[[ @ 0]]
			local f51_local2 = function ( f54_arg0 )
				f51_arg0.ScoreInfo:beginAnimation( 600 ) --[[ @ 0]]
				f51_arg0.ScoreInfo:setLeftRight( 0, 0, 0, 210 ) --[[ @ 0]]
				f51_arg0.ScoreInfo:setAlpha( 1 ) --[[ @ 0]]
				f51_arg0.ScoreInfo:registerEventHandler( "interrupted_keyframe", f51_arg0.clipInterrupted ) --[[ @ 0]]
				f51_arg0.ScoreInfo:registerEventHandler( "transition_complete_keyframe", f51_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f51_arg0.ScoreInfo:completeAnimation() --[[ @ 0]]
			f51_arg0.ScoreInfo:setLeftRight( 0, 0, -20, 190 ) --[[ @ 0]]
			f51_arg0.ScoreInfo:setTopBottom( 0, 0, 36, 104 ) --[[ @ 0]]
			f51_arg0.ScoreInfo:setAlpha( 0 ) --[[ @ 0]]
			f51_local2( f51_arg0.ScoreInfo ) --[[ @ 0]]
		end,
		VisibleSpawnSelectPC = function ( f55_arg0, f55_arg1 )
			f55_arg0:__resetProperties() --[[ @ 0]]
			f55_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			local f55_local0 = function ( f56_arg0 )
				f55_arg0.ScoreInfoTimer:beginAnimation( 200, Enum[@"hash_1F50FFF429AB1890"][@"hash_15193EA7825DC097"] ) --[[ @ 0]]
				f55_arg0.ScoreInfoTimer:setLeftRight( 0.5, 0.5, -102.5, 102.5 ) --[[ @ 0]]
				f55_arg0.ScoreInfoTimer:setAlpha( 1 ) --[[ @ 0]]
				f55_arg0.ScoreInfoTimer:registerEventHandler( "interrupted_keyframe", f55_arg0.clipInterrupted ) --[[ @ 0]]
				f55_arg0.ScoreInfoTimer:registerEventHandler( "transition_complete_keyframe", f55_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f55_arg0.ScoreInfoTimer:completeAnimation() --[[ @ 0]]
			f55_arg0.ScoreInfoTimer:setLeftRight( 0.5, 0.5, -122.5, 82.5 ) --[[ @ 0]]
			f55_arg0.ScoreInfoTimer:setAlpha( 0 ) --[[ @ 0]]
			f55_local0( f55_arg0.ScoreInfoTimer ) --[[ @ 0]]
			local f55_local1 = function ( f57_arg0 )
				f55_arg0.ScoreInfo:beginAnimation( 200, Enum[@"hash_1F50FFF429AB1890"][@"hash_15193EA7825DC097"] ) --[[ @ 0]]
				f55_arg0.ScoreInfo:setLeftRight( 0, 0, 0, 166 ) --[[ @ 0]]
				f55_arg0.ScoreInfo:setAlpha( 1 ) --[[ @ 0]]
				f55_arg0.ScoreInfo:registerEventHandler( "interrupted_keyframe", f55_arg0.clipInterrupted ) --[[ @ 0]]
				f55_arg0.ScoreInfo:registerEventHandler( "transition_complete_keyframe", f55_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f55_arg0.ScoreInfo:completeAnimation() --[[ @ 0]]
			f55_arg0.ScoreInfo:setLeftRight( 0, 0, -20, 146 ) --[[ @ 0]]
			f55_arg0.ScoreInfo:setAlpha( 0 ) --[[ @ 0]]
			f55_local1( f55_arg0.ScoreInfo ) --[[ @ 0]]
		end,
		VisiblePC = function ( f58_arg0, f58_arg1 )
			f58_arg0:__resetProperties() --[[ @ 0]]
			f58_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			local f58_local0 = function ( f59_arg0 )
				f58_arg0.ScoreInfoTimer:beginAnimation( 200, Enum[@"hash_1F50FFF429AB1890"][@"hash_15193EA7825DC097"] ) --[[ @ 0]]
				f58_arg0.ScoreInfoTimer:setLeftRight( 0.5, 0.5, -102.5, 102.5 ) --[[ @ 0]]
				f58_arg0.ScoreInfoTimer:setAlpha( 1 ) --[[ @ 0]]
				f58_arg0.ScoreInfoTimer:registerEventHandler( "interrupted_keyframe", f58_arg0.clipInterrupted ) --[[ @ 0]]
				f58_arg0.ScoreInfoTimer:registerEventHandler( "transition_complete_keyframe", f58_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f58_arg0.ScoreInfoTimer:completeAnimation() --[[ @ 0]]
			f58_arg0.ScoreInfoTimer:setLeftRight( 0.5, 0.5, -122.5, 82.5 ) --[[ @ 0]]
			f58_arg0.ScoreInfoTimer:setAlpha( 0 ) --[[ @ 0]]
			f58_local0( f58_arg0.ScoreInfoTimer ) --[[ @ 0]]
			local f58_local1 = function ( f60_arg0 )
				f58_arg0.ScoreInfo:beginAnimation( 200, Enum[@"hash_1F50FFF429AB1890"][@"hash_15193EA7825DC097"] ) --[[ @ 0]]
				f58_arg0.ScoreInfo:setLeftRight( 0, 0, 0, 166 ) --[[ @ 0]]
				f58_arg0.ScoreInfo:setAlpha( 1 ) --[[ @ 0]]
				f58_arg0.ScoreInfo:registerEventHandler( "interrupted_keyframe", f58_arg0.clipInterrupted ) --[[ @ 0]]
				f58_arg0.ScoreInfo:registerEventHandler( "transition_complete_keyframe", f58_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f58_arg0.ScoreInfo:completeAnimation() --[[ @ 0]]
			f58_arg0.ScoreInfo:setLeftRight( 0, 0, -20, 146 ) --[[ @ 0]]
			f58_arg0.ScoreInfo:setAlpha( 0 ) --[[ @ 0]]
			f58_local1( f58_arg0.ScoreInfo ) --[[ @ 0]]
		end,
		VisibleBountyPC = function ( f61_arg0, f61_arg1 )
			f61_arg0:__resetProperties() --[[ @ 0]]
			f61_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			local f61_local0 = function ( f62_arg0 )
				f61_arg0.BountyHunterCashMoney:beginAnimation( 200, Enum[@"hash_1F50FFF429AB1890"][@"hash_15193EA7825DC097"] ) --[[ @ 0]]
				f61_arg0.BountyHunterCashMoney:setLeftRight( 0.5, 0.5, -102.5, 102.5 ) --[[ @ 0]]
				f61_arg0.BountyHunterCashMoney:setAlpha( 1 ) --[[ @ 0]]
				f61_arg0.BountyHunterCashMoney:registerEventHandler( "interrupted_keyframe", f61_arg0.clipInterrupted ) --[[ @ 0]]
				f61_arg0.BountyHunterCashMoney:registerEventHandler( "transition_complete_keyframe", f61_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f61_arg0.BountyHunterCashMoney:completeAnimation() --[[ @ 0]]
			f61_arg0.BountyHunterCashMoney:setLeftRight( 0.5, 0.5, -122.5, 82.5 ) --[[ @ 0]]
			f61_arg0.BountyHunterCashMoney:setTopBottom( 0, 0, 0, 40 ) --[[ @ 0]]
			f61_arg0.BountyHunterCashMoney:setAlpha( 0 ) --[[ @ 0]]
			f61_local0( f61_arg0.BountyHunterCashMoney ) --[[ @ 0]]
			local f61_local1 = function ( f63_arg0 )
				f61_arg0.ScoreInfoTimer:beginAnimation( 200, Enum[@"hash_1F50FFF429AB1890"][@"hash_15193EA7825DC097"] ) --[[ @ 0]]
				f61_arg0.ScoreInfoTimer:setLeftRight( 0.5, 0.5, -102.5, 102.5 ) --[[ @ 0]]
				f61_arg0.ScoreInfoTimer:setTopBottom( 0, 0, 99, 139 ) --[[ @ 0]]
				f61_arg0.ScoreInfoTimer:setAlpha( 1 ) --[[ @ 0]]
				f61_arg0.ScoreInfoTimer:registerEventHandler( "interrupted_keyframe", f61_arg0.clipInterrupted ) --[[ @ 0]]
				f61_arg0.ScoreInfoTimer:registerEventHandler( "transition_complete_keyframe", f61_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f61_arg0.ScoreInfoTimer:completeAnimation() --[[ @ 0]]
			f61_arg0.ScoreInfoTimer:setLeftRight( 0.5, 0.5, -122.5, 82.5 ) --[[ @ 0]]
			f61_arg0.ScoreInfoTimer:setTopBottom( 0, 0, 98.5, 138.5 ) --[[ @ 0]]
			f61_arg0.ScoreInfoTimer:setAlpha( 0 ) --[[ @ 0]]
			f61_local1( f61_arg0.ScoreInfoTimer ) --[[ @ 0]]
			local f61_local2 = function ( f64_arg0 )
				f61_arg0.ScoreInfo:beginAnimation( 200, Enum[@"hash_1F50FFF429AB1890"][@"hash_15193EA7825DC097"] ) --[[ @ 0]]
				f61_arg0.ScoreInfo:setLeftRight( 0, 0, 0, 210 ) --[[ @ 0]]
				f61_arg0.ScoreInfo:setAlpha( 1 ) --[[ @ 0]]
				f61_arg0.ScoreInfo:registerEventHandler( "interrupted_keyframe", f61_arg0.clipInterrupted ) --[[ @ 0]]
				f61_arg0.ScoreInfo:registerEventHandler( "transition_complete_keyframe", f61_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f61_arg0.ScoreInfo:completeAnimation() --[[ @ 0]]
			f61_arg0.ScoreInfo:setLeftRight( 0, 0, -20, 190 ) --[[ @ 0]]
			f61_arg0.ScoreInfo:setTopBottom( 0, 0, 36, 104 ) --[[ @ 0]]
			f61_arg0.ScoreInfo:setAlpha( 0 ) --[[ @ 0]]
			f61_local2( f61_arg0.ScoreInfo ) --[[ @ 0]]
		end
	},
	EMP = {
		DefaultClip = function ( f65_arg0, f65_arg1 )
			f65_arg0:__resetProperties() --[[ @ 0]]
			f65_arg0:setupElementClipCounter( 5 ) --[[ @ 0]]
			f65_arg0.BountyHunterCashMoney:completeAnimation() --[[ @ 0]]
			f65_arg0.BountyHunterCashMoney:setAlpha( 0 ) --[[ @ 0]]
			f65_arg0.clipFinished( f65_arg0.BountyHunterCashMoney ) --[[ @ 0]]
			f65_arg0.ScoreInfoTimer:completeAnimation() --[[ @ 0]]
			f65_arg0.ScoreInfoTimer:setAlpha( 0 ) --[[ @ 0]]
			f65_arg0.clipFinished( f65_arg0.ScoreInfoTimer ) --[[ @ 0]]
			f65_arg0.ScoreInfo:completeAnimation() --[[ @ 0]]
			f65_arg0.ScoreInfo:setAlpha( 0 ) --[[ @ 0]]
			f65_arg0.clipFinished( f65_arg0.ScoreInfo ) --[[ @ 0]]
			f65_arg0.EMPbacker:completeAnimation() --[[ @ 0]]
			f65_arg0.EMPbacker:setAlpha( 0.9 ) --[[ @ 0]]
			f65_arg0.clipFinished( f65_arg0.EMPbacker ) --[[ @ 0]]
			f65_arg0.ScoreInfoHacked:completeAnimation() --[[ @ 0]]
			f65_arg0.ScoreInfoHacked:setAlpha( 1 ) --[[ @ 0]]
			f65_arg0.clipFinished( f65_arg0.ScoreInfoHacked ) --[[ @ 0]]
		end
	},
	VisibleSpawnSelectPC = {
		DefaultClip = function ( f66_arg0, f66_arg1 )
			f66_arg0:__resetProperties() --[[ @ 0]]
			f66_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end,
		Visible = function ( f67_arg0, f67_arg1 )
			f67_arg0:__resetProperties() --[[ @ 0]]
			f67_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			local f67_local0 = function ( f68_arg0 )
				f67_arg0.ScoreInfoTimer:beginAnimation( 600 ) --[[ @ 0]]
				f67_arg0.ScoreInfoTimer:setLeftRight( 0.5, 0.5, -102.5, 102.5 ) --[[ @ 0]]
				f67_arg0.ScoreInfoTimer:setAlpha( 1 ) --[[ @ 0]]
				f67_arg0.ScoreInfoTimer:registerEventHandler( "interrupted_keyframe", f67_arg0.clipInterrupted ) --[[ @ 0]]
				f67_arg0.ScoreInfoTimer:registerEventHandler( "transition_complete_keyframe", f67_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f67_arg0.ScoreInfoTimer:completeAnimation() --[[ @ 0]]
			f67_arg0.ScoreInfoTimer:setLeftRight( 0.5, 0.5, -122.5, 82.5 ) --[[ @ 0]]
			f67_arg0.ScoreInfoTimer:setAlpha( 0 ) --[[ @ 0]]
			f67_local0( f67_arg0.ScoreInfoTimer ) --[[ @ 0]]
			local f67_local1 = function ( f69_arg0 )
				f67_arg0.ScoreInfo:beginAnimation( 600 ) --[[ @ 0]]
				f67_arg0.ScoreInfo:setLeftRight( 0, 0, 0, 166 ) --[[ @ 0]]
				f67_arg0.ScoreInfo:setAlpha( 1 ) --[[ @ 0]]
				f67_arg0.ScoreInfo:registerEventHandler( "interrupted_keyframe", f67_arg0.clipInterrupted ) --[[ @ 0]]
				f67_arg0.ScoreInfo:registerEventHandler( "transition_complete_keyframe", f67_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f67_arg0.ScoreInfo:completeAnimation() --[[ @ 0]]
			f67_arg0.ScoreInfo:setLeftRight( 0, 0, -20, 146 ) --[[ @ 0]]
			f67_arg0.ScoreInfo:setAlpha( 0 ) --[[ @ 0]]
			f67_local1( f67_arg0.ScoreInfo ) --[[ @ 0]]
		end
	},
	VisibleBountyPC = {
		DefaultClip = function ( f70_arg0, f70_arg1 )
			f70_arg0:__resetProperties() --[[ @ 0]]
			f70_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f70_arg0.BountyHunterCashMoney:completeAnimation() --[[ @ 0]]
			f70_arg0.BountyHunterCashMoney:setTopBottom( 0, 0, 0, 40 ) --[[ @ 0]]
			f70_arg0.clipFinished( f70_arg0.BountyHunterCashMoney ) --[[ @ 0]]
			f70_arg0.ScoreInfoTimer:completeAnimation() --[[ @ 0]]
			f70_arg0.ScoreInfoTimer:setTopBottom( 0, 0, 99, 139 ) --[[ @ 0]]
			f70_arg0.clipFinished( f70_arg0.ScoreInfoTimer ) --[[ @ 0]]
			f70_arg0.ScoreInfo:completeAnimation() --[[ @ 0]]
			f70_arg0.ScoreInfo:setTopBottom( 0, 0, 36, 104 ) --[[ @ 0]]
			f70_arg0.clipFinished( f70_arg0.ScoreInfo ) --[[ @ 0]]
		end
	},
	VisiblePC = {
		DefaultClip = function ( f71_arg0, f71_arg1 )
			f71_arg0:__resetProperties() --[[ @ 0]]
			f71_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f71_arg0.ScoreInfoTimer:completeAnimation() --[[ @ 0]]
			f71_arg0.ScoreInfoTimer:setTopBottom( 0, 0, 63, 103 ) --[[ @ 0]]
			f71_arg0.clipFinished( f71_arg0.ScoreInfoTimer ) --[[ @ 0]]
			f71_arg0.ScoreInfo:completeAnimation() --[[ @ 0]]
			f71_arg0.ScoreInfo:setTopBottom( 0, 0, 0, 68 ) --[[ @ 0]]
			f71_arg0.clipFinished( f71_arg0.ScoreInfo ) --[[ @ 0]]
		end
	},
	VisibleSpawnSelect = {
		DefaultClip = function ( f72_arg0, f72_arg1 )
			f72_arg0:__resetProperties() --[[ @ 0]]
			f72_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end,
		Visible = function ( f73_arg0, f73_arg1 )
			f73_arg0:__resetProperties() --[[ @ 0]]
			f73_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			local f73_local0 = function ( f74_arg0 )
				f73_arg0.ScoreInfoTimer:beginAnimation( 600 ) --[[ @ 0]]
				f73_arg0.ScoreInfoTimer:setLeftRight( 0.5, 0.5, -102.5, 102.5 ) --[[ @ 0]]
				f73_arg0.ScoreInfoTimer:setAlpha( 1 ) --[[ @ 0]]
				f73_arg0.ScoreInfoTimer:registerEventHandler( "interrupted_keyframe", f73_arg0.clipInterrupted ) --[[ @ 0]]
				f73_arg0.ScoreInfoTimer:registerEventHandler( "transition_complete_keyframe", f73_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f73_arg0.ScoreInfoTimer:completeAnimation() --[[ @ 0]]
			f73_arg0.ScoreInfoTimer:setLeftRight( 0.5, 0.5, -122.5, 82.5 ) --[[ @ 0]]
			f73_arg0.ScoreInfoTimer:setAlpha( 0 ) --[[ @ 0]]
			f73_local0( f73_arg0.ScoreInfoTimer ) --[[ @ 0]]
			local f73_local1 = function ( f75_arg0 )
				f73_arg0.ScoreInfo:beginAnimation( 600 ) --[[ @ 0]]
				f73_arg0.ScoreInfo:setLeftRight( 0, 0, 0, 166 ) --[[ @ 0]]
				f73_arg0.ScoreInfo:setAlpha( 1 ) --[[ @ 0]]
				f73_arg0.ScoreInfo:registerEventHandler( "interrupted_keyframe", f73_arg0.clipInterrupted ) --[[ @ 0]]
				f73_arg0.ScoreInfo:registerEventHandler( "transition_complete_keyframe", f73_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f73_arg0.ScoreInfo:completeAnimation() --[[ @ 0]]
			f73_arg0.ScoreInfo:setLeftRight( 0, 0, -20, 146 ) --[[ @ 0]]
			f73_arg0.ScoreInfo:setAlpha( 0 ) --[[ @ 0]]
			f73_local1( f73_arg0.ScoreInfo ) --[[ @ 0]]
		end
	},
	VisibleBounty = {
		DefaultClip = function ( f76_arg0, f76_arg1 )
			f76_arg0:__resetProperties() --[[ @ 0]]
			f76_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f76_arg0.BountyHunterCashMoney:completeAnimation() --[[ @ 0]]
			f76_arg0.BountyHunterCashMoney:setTopBottom( 0, 0, 0, 40 ) --[[ @ 0]]
			f76_arg0.clipFinished( f76_arg0.BountyHunterCashMoney ) --[[ @ 0]]
			f76_arg0.ScoreInfoTimer:completeAnimation() --[[ @ 0]]
			f76_arg0.ScoreInfoTimer:setTopBottom( 0, 0, 99, 139 ) --[[ @ 0]]
			f76_arg0.clipFinished( f76_arg0.ScoreInfoTimer ) --[[ @ 0]]
			f76_arg0.ScoreInfo:completeAnimation() --[[ @ 0]]
			f76_arg0.ScoreInfo:setTopBottom( 0, 0, 36, 104 ) --[[ @ 0]]
			f76_arg0.clipFinished( f76_arg0.ScoreInfo ) --[[ @ 0]]
		end
	},
	Visible = {
		DefaultClip = function ( f77_arg0, f77_arg1 )
			f77_arg0:__resetProperties() --[[ @ 0]]
			f77_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f77_arg0.ScoreInfoTimer:completeAnimation() --[[ @ 0]]
			f77_arg0.ScoreInfoTimer:setTopBottom( 0, 0, 63, 103 ) --[[ @ 0]]
			f77_arg0.clipFinished( f77_arg0.ScoreInfoTimer ) --[[ @ 0]]
			f77_arg0.ScoreInfo:completeAnimation() --[[ @ 0]]
			f77_arg0.ScoreInfo:setTopBottom( 0, 0, 0, 68 ) --[[ @ 0]]
			f77_arg0.clipFinished( f77_arg0.ScoreInfo ) --[[ @ 0]]
		end
	},
	CodCasterInvisible = {
		DefaultClip = function ( f78_arg0, f78_arg1 )
			f78_arg0:__resetProperties() --[[ @ 0]]
			f78_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f78_arg0.BountyHunterCashMoney:completeAnimation() --[[ @ 0]]
			f78_arg0.BountyHunterCashMoney:setAlpha( 0 ) --[[ @ 0]]
			f78_arg0.clipFinished( f78_arg0.BountyHunterCashMoney ) --[[ @ 0]]
			f78_arg0.ScoreInfoTimer:completeAnimation() --[[ @ 0]]
			f78_arg0.ScoreInfoTimer:setAlpha( 0 ) --[[ @ 0]]
			f78_arg0.clipFinished( f78_arg0.ScoreInfoTimer ) --[[ @ 0]]
			f78_arg0.ScoreInfo:completeAnimation() --[[ @ 0]]
			f78_arg0.ScoreInfo:setAlpha( 0 ) --[[ @ 0]]
			f78_arg0.clipFinished( f78_arg0.ScoreInfo ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.ScoreInfoContainer.__onClose = function ( f79_arg0 )
	f79_arg0.BountyHunterCashMoney:close() --[[ @ 0]]
	f79_arg0.ScoreInfoTimer:close() --[[ @ 0]]
	f79_arg0.ScoreInfo:close() --[[ @ 0]]
	f79_arg0.Hacked:close() --[[ @ 0]]
end
 --[[ @ 0]]
