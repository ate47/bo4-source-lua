-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:35
require( "x64:2f5618b9151603a5" ) --[[ @ 0]]
require( "ui/uieditor/widgets/controllerdependent_textbox" ) --[[ @ 0]]

CoD.WarzoneMapKeyItemWithPlayerIcon = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.WarzoneMapKeyItemWithPlayerIcon.__defaultWidth = 256 --[[ @ 0]]
CoD.WarzoneMapKeyItemWithPlayerIcon.__defaultHeight = 40 --[[ @ 0]]
CoD.WarzoneMapKeyItemWithPlayerIcon.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIHorizontalList.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9, 10, false ) --[[ @ 0]]
	self:setAlignment( LUI.Alignment.Left ) --[[ @ 0]]
	self:setClass( CoD.WarzoneMapKeyItemWithPlayerIcon ) --[[ @ 0]]
	self.id = "WarzoneMapKeyItemWithPlayerIcon" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	local ControllerDependentTextBox = nil --[[ @ 0]]
	
	ControllerDependentTextBox = CoD.ControllerDependent_TextBox.new( f1_arg0, f1_arg1, 0, 0, 0, 0, 0, 0, 19, 41 ) --[[ @ 0]]
	ControllerDependentTextBox:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( ControllerDependentTextBox ) --[[ @ 0]]
	self.ControllerDependentTextBox = ControllerDependentTextBox --[[ @ 0]]
	
	local Image = LUI.UIImage.new( 0, 0, 10, 46, 0, 0, 2, 38 ) --[[ @ 0]]
	Image:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_saturation_normal" ) ) --[[ @ 0]]
	Image:setShaderVector( 0, 1, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( Image ) --[[ @ 0]]
	self.Image = Image --[[ @ 0]]
	
	local Action = LUI.UIText.new( 0, 0, 56, 226, 0, 0, 7, 34 ) --[[ @ 0]]
	Action:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_393E719493E9E18F" ) ) --[[ @ 0]]
	Action:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	Action:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	Action:setAlignment( Enum[@"LUIAlignment"][@"hash_E821F0ECFF8D1C7"] ) --[[ @ 0]]
	self:addElement( Action ) --[[ @ 0]]
	self.Action = Action --[[ @ 0]]
	
	local WarzonePlayerArrow = CoD.WarzonePlayerArrow.new( f1_arg0, f1_arg1, 0, 0, 233, 266, 0.5, 0.5, -16.5, 16.5 ) --[[ @ 0]]
	WarzonePlayerArrow.arrow.__arrow_Color = function ( f2_arg0 )
		local f2_local0 = f2_arg0:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			WarzonePlayerArrow.arrow:setRGB( CoD.WZUtility.TeamPlayerColorForClientNum( f1_arg1, f2_local0 ) ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	WarzonePlayerArrow:subscribeToGlobalModel( f1_arg1, "PerClient", "clientNum", WarzonePlayerArrow.arrow.__arrow_Color ) --[[ @ 0]]
	WarzonePlayerArrow.arrow.__arrow_Color_FullPath = function ()
		local f3_local0 = DataSources.PerClient.getModel( f1_arg1 ) --[[ @ 0]]
		f3_local0 = f3_local0.clientNum --[[ @ 0]]
		if f3_local0 then
			WarzonePlayerArrow.arrow.__arrow_Color( f3_local0 ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	self:addElement( WarzonePlayerArrow ) --[[ @ 0]]
	self.WarzonePlayerArrow = WarzonePlayerArrow --[[ @ 0]]
	
	WarzonePlayerArrow:linkToElementModel( self, "team", true, WarzonePlayerArrow.arrow.__arrow_Color_FullPath ) --[[ @ 0]]
	local f1_local5 = WarzonePlayerArrow --[[ @ 0]]
	local f1_local6 = WarzonePlayerArrow.subscribeToModel --[[ @ 0]]
	local f1_local7 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local6( f1_local5, f1_local7["profile.colorblindMode"], WarzonePlayerArrow.arrow.__arrow_Color_FullPath ) --[[ @ 0]]
	self:mergeStateConditions( {
		{
			stateName = "NotAvailablePC",
			condition = function ( menu, element, event )
				return IsMouseOrKeyboard( f1_arg1 )
			end
		},
		{
			stateName = "NotAvailable",
			condition = function ( menu, element, event )
				return not IsMouseOrKeyboard( f1_arg1 )
			end
		},
		{
			stateName = "PC",
			condition = function ( menu, element, event )
				return IsMouseOrKeyboard( f1_arg1 )
			end
		}
	} ) --[[ @ 0]]
	self:appendEventHandler( "input_source_changed", function ( f7_arg0, f7_arg1 )
		f7_arg1.menu = f7_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( self, f7_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	f1_local5 = self --[[ @ 0]]
	f1_local6 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local6( f1_local5, f1_local7.LastInput, function ( f8_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f8_arg0:get(),
			modelName = "LastInput"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.WarzoneMapKeyItemWithPlayerIcon.__resetProperties = function ( f9_arg0 )
	f9_arg0.Image:completeAnimation() --[[ @ 0]]
	f9_arg0.ControllerDependentTextBox:completeAnimation() --[[ @ 0]]
	f9_arg0.Action:completeAnimation() --[[ @ 0]]
	f9_arg0.Image:setAlpha( 1 ) --[[ @ 0]]
	f9_arg0.Image:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_saturation_normal" ) ) --[[ @ 0]]
	f9_arg0.Image:setShaderVector( 0, 1, 0, 0, 0 ) --[[ @ 0]]
	f9_arg0.ControllerDependentTextBox:setLeftRight( 0, 0, 0, 0 ) --[[ @ 0]]
	f9_arg0.ControllerDependentTextBox:setTopBottom( 0, 0, 19, 41 ) --[[ @ 0]]
	f9_arg0.ControllerDependentTextBox:setAlpha( 0 ) --[[ @ 0]]
	f9_arg0.Action:setLeftRight( 0, 0, 56, 226 ) --[[ @ 0]]
	f9_arg0.Action:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.WarzoneMapKeyItemWithPlayerIcon.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f10_arg0, f10_arg1 )
			f10_arg0:__resetProperties() --[[ @ 0]]
			f10_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	NotAvailablePC = {
		DefaultClip = function ( f11_arg0, f11_arg1 )
			f11_arg0:__resetProperties() --[[ @ 0]]
			f11_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f11_arg0.ControllerDependentTextBox:completeAnimation() --[[ @ 0]]
			f11_arg0.ControllerDependentTextBox:setLeftRight( 0, 0, 0, 88 ) --[[ @ 0]]
			f11_arg0.ControllerDependentTextBox:setTopBottom( 0, 0, 18, 40 ) --[[ @ 0]]
			f11_arg0.ControllerDependentTextBox:setAlpha( 0.1 ) --[[ @ 0]]
			f11_arg0.clipFinished( f11_arg0.ControllerDependentTextBox ) --[[ @ 0]]
			f11_arg0.Image:completeAnimation() --[[ @ 0]]
			f11_arg0.Image:setAlpha( 0 ) --[[ @ 0]]
			f11_arg0.clipFinished( f11_arg0.Image ) --[[ @ 0]]
			f11_arg0.Action:completeAnimation() --[[ @ 0]]
			f11_arg0.Action:setLeftRight( 0, 0, 78, 183 ) --[[ @ 0]]
			f11_arg0.Action:setAlpha( 0.1 ) --[[ @ 0]]
			f11_arg0.clipFinished( f11_arg0.Action ) --[[ @ 0]]
		end
	},
	NotAvailable = {
		DefaultClip = function ( f12_arg0, f12_arg1 )
			f12_arg0:__resetProperties() --[[ @ 0]]
			f12_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f12_arg0.Image:completeAnimation() --[[ @ 0]]
			f12_arg0.Image:setAlpha( 0.15 ) --[[ @ 0]]
			f12_arg0.Image:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_saturation_normal" ) ) --[[ @ 0]]
			f12_arg0.Image:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.Image ) --[[ @ 0]]
			f12_arg0.Action:completeAnimation() --[[ @ 0]]
			f12_arg0.Action:setAlpha( 0.15 ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.Action ) --[[ @ 0]]
		end
	},
	PC = {
		DefaultClip = function ( f13_arg0, f13_arg1 )
			f13_arg0:__resetProperties() --[[ @ 0]]
			f13_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f13_arg0.ControllerDependentTextBox:completeAnimation() --[[ @ 0]]
			f13_arg0.ControllerDependentTextBox:setLeftRight( 0, 0, 0, 88 ) --[[ @ 0]]
			f13_arg0.ControllerDependentTextBox:setTopBottom( 0, 0, 18, 40 ) --[[ @ 0]]
			f13_arg0.ControllerDependentTextBox:setAlpha( 1 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.ControllerDependentTextBox ) --[[ @ 0]]
			f13_arg0.Image:completeAnimation() --[[ @ 0]]
			f13_arg0.Image:setAlpha( 0 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.Image ) --[[ @ 0]]
			f13_arg0.Action:completeAnimation() --[[ @ 0]]
			f13_arg0.Action:setLeftRight( 0, 0, 78, 183 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.Action ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.WarzoneMapKeyItemWithPlayerIcon.__onClose = function ( f14_arg0 )
	f14_arg0.ControllerDependentTextBox:close() --[[ @ 0]]
	f14_arg0.WarzonePlayerArrow:close() --[[ @ 0]]
end
 --[[ @ 0]]
