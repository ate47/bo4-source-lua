-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:49
require( "x64:322e9d2bd1a9e86a" ) --[[ @ 0]]
require( "x64:38575142f3bda12c" ) --[[ @ 0]]

CoD.VHUD_HCXD = InheritFrom( CoD.Menu ) --[[ @ 0]]
LUI.createMenu.VHUD_HCXD = function ( f1_arg0, f1_arg1 )
	local self = CoD.Menu.NewForUIEditor( "VHUD_HCXD", f1_arg0 ) --[[ @ 0]]
	local f1_local1 = self --[[ @ 0]]
	self:setClass( CoD.VHUD_HCXD ) --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self:setOwner( f1_arg0 ) --[[ @ 0]]
	self:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	self:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	self:playSound( "menu_open", f1_arg0 ) --[[ @ 0]]
	self.ignoreCursor = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_local1:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local vignette = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	vignette:setAlpha( 0 ) --[[ @ 0]]
	vignette:setImage( RegisterImage( @"uie_t7_hcxd_vignette_score_streak" ) ) --[[ @ 0]]
	self:addElement( vignette ) --[[ @ 0]]
	self.vignette = vignette --[[ @ 0]]
	
	local vignetteCenter = LUI.UIImage.new( 0, 1, -304, 304, 0, 1, -177, 165 ) --[[ @ 0]]
	vignetteCenter:setAlpha( 0 ) --[[ @ 0]]
	vignetteCenter:setImage( RegisterImage( @"uie_t7_cp_hud_vehicle_agr_backgroundtint" ) ) --[[ @ 0]]
	self:addElement( vignetteCenter ) --[[ @ 0]]
	self.vignetteCenter = vignetteCenter --[[ @ 0]]
	
	local hudspeedometerwidget = CoD.hud_speedometer_widget.new( f1_local1, f1_arg0, 0.5, 0.5, -785, -533, 1, 1, -305.5, -173.5 ) --[[ @ 0]]
	hudspeedometerwidget:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( hudspeedometerwidget ) --[[ @ 0]]
	self.hudspeedometerwidget = hudspeedometerwidget --[[ @ 0]]
	
	local vhudhcdxhud = CoD.vhud_hcdx_hud.new( f1_local1, f1_arg0, 0.5, 0.5, -960, 960, 0.5, 0.5, -540, 540 ) --[[ @ 0]]
	vhudhcdxhud:linkToElementModel( self, nil, false, function ( model )
		vhudhcdxhud:setModel( model, f1_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( vhudhcdxhud ) --[[ @ 0]]
	self.vhudhcdxhud = vhudhcdxhud --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "DefaultStateKBM",
			condition = function ( menu, element, event )
				return IsMouseOrKeyboard( f1_arg0 )
			end
		}
	} ) --[[ @ 0]]
	self:appendEventHandler( "input_source_changed", function ( f4_arg0, f4_arg1 )
		f4_arg1.menu = f4_arg1.menu or f1_local1 --[[ @ 0]]
		f1_local1:updateElementState( self, f4_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local f1_local6 = self --[[ @ 0]]
	local f1_local7 = self.subscribeToModel --[[ @ 0]]
	local f1_local8 = Engine[@"getmodelforcontroller"]( f1_arg0 ) --[[ @ 0]]
	f1_local7( f1_local6, f1_local8.LastInput, function ( f5_arg0 )
		f1_local1:updateElementState( self, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f5_arg0:get(),
			modelName = "LastInput"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:registerEventHandler( "menu_loaded", function ( self, event )
		local f6_local0 = nil --[[ @ 0]]
		if self.menuLoaded then
			f6_local0 = self:menuLoaded( event ) --[[ @ 0]]
		elseif self.super.menuLoaded then
			f6_local0 = self.super:menuLoaded( event ) --[[ @ 0]]
		end
		SizeToSafeArea( self, f1_arg0 ) --[[ @ 0]]
		if not f6_local0 then
			f6_local0 = self:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f6_local0
	end ) --[[ @ 0]]
	self:processEvent( {
		name = "menu_loaded",
		controller = f1_arg0
	} ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PreLoadFunc then
		PreLoadFunc( self, f1_arg0 ) --[[ @ 0]]
	end
	f1_local7 = self --[[ @ 0]]
	if IsPC() then
		SizeToHudArea( self.vhudhcdxhud, f1_arg0 ) --[[ @ 0]]
	elseif IsSplitscreenAndInGame( f1_arg0 ) then
		SizeToSafeArea( self.vhudhcdxhud, f1_arg0 ) --[[ @ 0]]
	end
	return self
end
 --[[ @ 0]]
CoD.VHUD_HCXD.__onClose = function ( f7_arg0 )
	f7_arg0.hudspeedometerwidget:close() --[[ @ 0]]
	f7_arg0.vhudhcdxhud:close() --[[ @ 0]]
end
 --[[ @ 0]]
