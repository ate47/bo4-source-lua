-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
require( "x64:7fbffc86e9a93477" ) --[[ @ 0]]
require( "x64:17b5952c3bc0ee42" ) --[[ @ 0]]
require( "ui/uieditor/widgets/scrollbars/verticalcounter" ) --[[ @ 0]]
require( "ui/uieditor/widgets/pc/utility/xcammousecontrol" ) --[[ @ 0]]

CoD.WeaponDeathFxSelectInternal = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.WeaponDeathFxSelectInternal.__defaultWidth = 1920 --[[ @ 0]]
CoD.WeaponDeathFxSelectInternal.__defaultHeight = 1080 --[[ @ 0]]
CoD.WeaponDeathFxSelectInternal.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	if not IsCurrentMenu( f1_arg0, "WeaponTabbedAccessoriesSelect" ) then
		CoD.WeaponOptionsUtility.DeathFxCharacterUpdate( f1_arg0, f1_arg1 ) --[[ @ 0]]
	elseif IsCurrentMenu( f1_arg0, "WeaponTabbedAccessoriesSelect" ) then
		SendCustomClientScriptMenuChangeNotify( f1_arg1, "WeaponDeathFxSelect", true ) --[[ @ 0]]
		CoD.WeaponOptionsUtility.DeathFxCharacterUpdate( f1_arg0, f1_arg1 ) --[[ @ 0]]
	end
	self:setClass( CoD.WeaponDeathFxSelectInternal ) --[[ @ 0]]
	self.id = "WeaponDeathFxSelectInternal" --[[ @ 0]]
	self.soundSet = "CAC_WeaponPersonalization" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	
	local DeathFxListBg = LUI.UIImage.new( 0, 0, 73, 921, 0, 0, 81, 926 ) --[[ @ 0]]
	DeathFxListBg:setScale( 0.77, 0.77 ) --[[ @ 0]]
	DeathFxListBg:setImage( RegisterImage( @"uie_ui_menu_emblem_empty_bg" ) ) --[[ @ 0]]
	DeathFxListBg:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_67C9C02F608D0A75" ) ) --[[ @ 0]]
	DeathFxListBg:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	DeathFxListBg:setupNineSliceShader( 212, 212 ) --[[ @ 0]]
	self:addElement( DeathFxListBg ) --[[ @ 0]]
	self.DeathFxListBg = DeathFxListBg --[[ @ 0]]
	
	local DeathFxList = LUI.UIList.new( f1_arg0, f1_arg1, 11, 0, nil, true, false, false, false ) --[[ @ 0]]
	DeathFxList:setLeftRight( 0, 0, 173, 814 ) --[[ @ 0]]
	DeathFxList:setTopBottom( 0, 0, 178, 819 ) --[[ @ 0]]
	DeathFxList:setWidgetType( CoD.LootWeaponOptionButton ) --[[ @ 0]]
	DeathFxList:setHorizontalCount( 4 ) --[[ @ 0]]
	DeathFxList:setVerticalCount( 4 ) --[[ @ 0]]
	DeathFxList:setSpacing( 11 ) --[[ @ 0]]
	DeathFxList:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	DeathFxList:setVerticalCounter( CoD.verticalCounter ) --[[ @ 0]]
	DeathFxList:setDataSource( "WeaponDeathFxList" ) --[[ @ 0]]
	DeathFxList:linkToElementModel( DeathFxList, "available", true, function ( model, f2_arg1 )
		CoD.Menu.UpdateButtonShownState( f2_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	DeathFxList:appendEventHandler( "input_source_changed", function ( f3_arg0, f3_arg1 )
		f3_arg1.menu = f3_arg1.menu or f1_arg0 --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f3_arg0, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_1E6DB407A2AF8B09"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f3_arg0, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_6A86619565BE54DB"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f3_arg0, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f3_arg0, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_64D2505E19049444"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local XCamMouseControl = DeathFxList --[[ @ 0]]
	local ItemInfoPanel = DeathFxList.subscribeToModel --[[ @ 0]]
	local f1_local5 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	ItemInfoPanel( XCamMouseControl, f1_local5.LastInput, function ( f4_arg0, f4_arg1 )
		CoD.Menu.UpdateButtonShownState( f4_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_1E6DB407A2AF8B09"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f4_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_6A86619565BE54DB"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f4_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f4_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_64D2505E19049444"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	DeathFxList:registerEventHandler( "list_item_lose_focus", function ( element, event )
		local f5_local0 = nil --[[ @ 0]]
		CoD.BreadcrumbUtility.SetWeaponDeathFxOld( f1_arg0, element, f1_arg1 ) --[[ @ 0]]
		return f5_local0
	end ) --[[ @ 0]]
	DeathFxList:registerEventHandler( "gain_focus", function ( element, event )
		local f6_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f6_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f6_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_1E6DB407A2AF8B09"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_6A86619565BE54DB"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_64D2505E19049444"] ) --[[ @ 0]]
		return f6_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( DeathFxList, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], nil, function ( element, menu, controller, model )
		if CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "available" ) and not IsElementModelConditionFn( menu, self, element, controller, "isEquippedFn" ) and not IsPC() then
			CoD.WeaponOptionsUtility.EquipDeathFx( menu, element, controller, false ) --[[ @ 0]]
			UpdateButtonPromptState( menu, element, controller, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"] ) --[[ @ 0]]
			SaveLoadout( self, controller ) --[[ @ 0]]
			return true
		elseif CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "available" ) and not IsElementModelConditionFn( menu, self, element, controller, "isEquippedFn" ) then
			CoD.WeaponOptionsUtility.EquipDeathFx( menu, element, controller, false ) --[[ @ 0]]
			UpdateButtonPromptState( menu, element, controller, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"] ) --[[ @ 0]]
			CoD.WeaponOptionsUtility.PreviewDeathFx( menu, element, controller ) --[[ @ 0]]
			SaveLoadout( self, controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "available" ) and not IsElementModelConditionFn( menu, self, element, controller, "isEquippedFn" ) and not IsPC() then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, nil ) --[[ @ 0]]
			return true
		elseif CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "available" ) and not IsElementModelConditionFn( menu, self, element, controller, "isEquippedFn" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, nil ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( DeathFxList, f1_arg1, Enum[@"LUIButton"][@"hash_1E6DB407A2AF8B09"], nil, function ( element, menu, controller, model )
		if IsGamepad( controller ) then
			CoD.WeaponOptionsUtility.PreviewDeathFx( menu, element, controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsGamepad( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_1E6DB407A2AF8B09"], @"hash_52FB29ED3A3CA79", nil, nil ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( DeathFxList, f1_arg1, Enum[@"LUIButton"][@"hash_6A86619565BE54DB"], "ui_contextual_1", function ( element, menu, controller, model )
		if IsMouseOrKeyboard( controller ) then
			CoD.WeaponOptionsUtility.PreviewDeathFx( menu, element, controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsMouseOrKeyboard( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_6A86619565BE54DB"], @"hash_52FB29ED3A3CA79", Enum[@"hash_3BEBDBAEEB3ECCCA"][@"hash_4B6372335C630AD3"], "ui_contextual_1" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( DeathFxList, f1_arg1, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"], nil, function ( element, menu, controller, model )
		if IsElementModelConditionFn( menu, self, element, controller, "isEquippedFn" ) and IsGamepad( controller ) then
			CoD.WeaponOptionsUtility.ClearDeathFx( menu, controller ) --[[ @ 0]]
			UpdateButtonPromptState( menu, element, controller, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"] ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsElementModelConditionFn( menu, self, element, controller, "isEquippedFn" ) and IsGamepad( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"], @"hash_1679ACA6FFC6C8F3", nil, nil ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( DeathFxList, f1_arg1, Enum[@"LUIButton"][@"hash_64D2505E19049444"], "ui_remove", function ( element, menu, controller, model )
		if IsElementModelConditionFn( menu, self, element, controller, "isEquippedFn" ) and IsMouseOrKeyboard( controller ) then
			CoD.WeaponOptionsUtility.ClearDeathFx( menu, controller ) --[[ @ 0]]
			UpdateButtonPromptState( menu, element, controller, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"] ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsElementModelConditionFn( menu, self, element, controller, "isEquippedFn" ) and IsMouseOrKeyboard( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_64D2505E19049444"], @"hash_1679ACA6FFC6C8F3", Enum[@"hash_3BEBDBAEEB3ECCCA"][@"hash_4B6372335C630AD3"], "ui_remove" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	DeathFxList:AddContextualMenuAction( f1_arg0, f1_arg1, @"hash_52FB29ED3A3CA79", function ( f17_arg0, f17_arg1, f17_arg2, f17_arg3 )
		return function ( f18_arg0, f18_arg1, f18_arg2, f18_arg3 )
			CoD.WeaponOptionsUtility.PreviewDeathFx( f18_arg1, f18_arg0, f18_arg2 ) --[[ @ 0]]
		end
		
	end ) --[[ @ 0]]
	DeathFxList:AddContextualMenuAction( f1_arg0, f1_arg1, @"hash_1679ACA6FFC6C8F3", function ( f19_arg0, f19_arg1, f19_arg2, f19_arg3 )
		if IsElementModelConditionFn( f19_arg1, self, f19_arg0, f19_arg2, "isEquippedFn" ) then
			return function ( f20_arg0, f20_arg1, f20_arg2, f20_arg3 )
				CoD.WeaponOptionsUtility.ClearDeathFx( f20_arg1, f20_arg2 ) --[[ @ 0]]
				UpdateButtonPromptState( f20_arg1, f20_arg0, f20_arg2, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"] ) --[[ @ 0]]
			end
			
		else
			
		end
	end ) --[[ @ 0]]
	self:addElement( DeathFxList ) --[[ @ 0]]
	self.DeathFxList = DeathFxList --[[ @ 0]]
	
	ItemInfoPanel = CoD.BM_ItemInfoPanel.new( f1_arg0, f1_arg1, 1, 1, -732, -192, 0, 0, 695, 845 ) --[[ @ 0]]
	self:addElement( ItemInfoPanel ) --[[ @ 0]]
	self.ItemInfoPanel = ItemInfoPanel --[[ @ 0]]
	
	XCamMouseControl = nil --[[ @ 0]]
	
	XCamMouseControl = CoD.XCamMouseControl.new( f1_arg0, f1_arg1, 0.32, 0.68, 500, 500, 0, 0, 165, 665 ) --[[ @ 0]]
	self:addElement( XCamMouseControl ) --[[ @ 0]]
	self.XCamMouseControl = XCamMouseControl --[[ @ 0]]
	
	ItemInfoPanel:linkToElementModel( DeathFxList, nil, false, function ( model )
		ItemInfoPanel:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( self, "close", function ( element )
		if not IsCurrentMenu( f1_arg0, "WeaponTabbedAccessoriesSelect" ) then
			CoD.WeaponOptionsUtility.StopDeathFxPreview( f1_arg0, f1_arg1 ) --[[ @ 0]]
		elseif IsCurrentMenu( f1_arg0, "WeaponTabbedAccessoriesSelect" ) then
			CoD.WeaponOptionsUtility.StopDeathFxPreview( f1_arg0, f1_arg1 ) --[[ @ 0]]
			SendCustomClientScriptMenuChangeNotify( f1_arg1, "WeaponDeathFxSelect", false ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	DeathFxList.id = "DeathFxList" --[[ @ 0]]
	if CoD.isPC then
		XCamMouseControl.id = "XCamMouseControl" --[[ @ 0]]
	end
	self.__defaultFocus = DeathFxList --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	f1_local5 = self --[[ @ 0]]
	f1_local5 = DeathFxList --[[ @ 0]]
	if IsPC() then
		CoD.PCWidgetUtility.SetupContextualMenu( f1_local5, f1_arg1, "name", "", "" ) --[[ @ 0]]
	end
	return self
end
 --[[ @ 0]]
CoD.WeaponDeathFxSelectInternal.__onClose = function ( f23_arg0 )
	f23_arg0.ItemInfoPanel:close() --[[ @ 0]]
	f23_arg0.DeathFxList:close() --[[ @ 0]]
	f23_arg0.XCamMouseControl:close() --[[ @ 0]]
end
 --[[ @ 0]]
