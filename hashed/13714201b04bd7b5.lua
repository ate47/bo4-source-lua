-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:48
require( "x64:1cee87353c67a42a" ) --[[ @ 0]]

CoD.WZAAR = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.WZAAR.__defaultWidth = 1920 --[[ @ 0]]
CoD.WZAAR.__defaultHeight = 1080 --[[ @ 0]]
CoD.WZAAR.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	CoD.BaseUtility.InitPersistentControllerModelIfNotSet( f1_arg1, "seenWZInGameAAR", false ) --[[ @ 0]]
	CoD.AARUtility.SetupMeritRewardModels( f1_arg0, f1_arg1, false ) --[[ @ 0]]
	self:setClass( CoD.WZAAR ) --[[ @ 0]]
	self.id = "WZAAR" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local WZAARContainers = CoD.WZAAR_Containers.new( f1_arg0, f1_arg1, 0.5, 0.5, -960, 960, 0, 0, 0, 1080 ) --[[ @ 0]]
	WZAARContainers:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( WZAARContainers ) --[[ @ 0]]
	self.WZAARContainers = WZAARContainers --[[ @ 0]]
	
	local f1_local2 = nil --[[ @ 0]]
	f1_local2 = LUI.UIElement.createFake() --[[ @ 0]]
	self.emptyFocusable = f1_local2 --[[ @ 0]]
	self:mergeStateConditions( {
		{
			stateName = "Visible",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsModelValueTrue( f1_arg1, "hudItems.warzone.aarVisible" )
			end
		}
	} ) --[[ @ 0]]
	local f1_local3 = self --[[ @ 0]]
	local f1_local4 = self.subscribeToModel --[[ @ 0]]
	local f1_local5 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local4( f1_local3, f1_local5["hudItems.warzone.aarVisible"], function ( f3_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f3_arg0:get(),
			modelName = "hudItems.warzone.aarVisible"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( self, "setState", function ( element, controller, f4_arg2, f4_arg3, f4_arg4 )
		if IsSelfInState( self, "Visible" ) then
			LockInputHUD( self, controller, true ) --[[ @ 0]]
			MenuHidesFreeCursor( f1_arg0, controller ) --[[ @ 0]]
			CoD.AARUtility.SetupMeritRewardModels( f1_arg0, controller, true ) --[[ @ 0]]
		elseif IsSelfInState( self, "DefaultState" ) then
			LockInputHUD( self, controller, false ) --[[ @ 0]]
			SetLoseFocusToSelf( self, controller ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	WZAARContainers.id = "WZAARContainers" --[[ @ 0]]
	f1_local2.id = "emptyFocusable" --[[ @ 0]]
	self.__defaultFocus = f1_local2 --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.WZAAR.__resetProperties = function ( f5_arg0 )
	f5_arg0.emptyFocusable:completeAnimation() --[[ @ 0]]
	f5_arg0.WZAARContainers:completeAnimation() --[[ @ 0]]
	f5_arg0.emptyFocusable:setAlpha( 1 ) --[[ @ 0]]
	f5_arg0.WZAARContainers:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.WZAAR.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f6_arg0, f6_arg1 )
			f6_arg0:__resetProperties() --[[ @ 0]]
			f6_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f6_arg0.WZAARContainers:completeAnimation() --[[ @ 0]]
			f6_arg0.WZAARContainers:setAlpha( 0 ) --[[ @ 0]]
			f6_arg0.clipFinished( f6_arg0.WZAARContainers ) --[[ @ 0]]
			f6_arg0.emptyFocusable:completeAnimation() --[[ @ 0]]
			f6_arg0.emptyFocusable:setAlpha( 0 ) --[[ @ 0]]
			f6_arg0.clipFinished( f6_arg0.emptyFocusable ) --[[ @ 0]]
		end
	},
	Visible = {
		DefaultClip = function ( f7_arg0, f7_arg1 )
			f7_arg0:__resetProperties() --[[ @ 0]]
			f7_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f7_arg0.WZAARContainers:completeAnimation() --[[ @ 0]]
			f7_arg0.WZAARContainers:setAlpha( 1 ) --[[ @ 0]]
			f7_arg0.clipFinished( f7_arg0.WZAARContainers ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.WZAAR.__onClose = function ( f8_arg0 )
	f8_arg0.WZAARContainers:close() --[[ @ 0]]
	f8_arg0.emptyFocusable:close() --[[ @ 0]]
end
 --[[ @ 0]]
