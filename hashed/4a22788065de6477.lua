-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
require( "x64:6fda45231af81f63" ) --[[ @ 0]]
require( "x64:546349b7589a5cf8" ) --[[ @ 0]]

CoD.MapVoteZM = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.MapVoteZM.__defaultWidth = 394 --[[ @ 0]]
CoD.MapVoteZM.__defaultHeight = 355 --[[ @ 0]]
CoD.MapVoteZM.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.MapVoteZM ) --[[ @ 0]]
	self.id = "MapVoteZM" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local DirectorMapGameTypeAndDifficulty = CoD.DirectorMapGameTypeAndDifficulty.new( f1_arg0, f1_arg1, 0, 0, 6, 388, 0, 0, 37, 143 ) --[[ @ 0]]
	DirectorMapGameTypeAndDifficulty:mergeStateConditions( {
		{
			stateName = "Unselectable",
			condition = function ( menu, element, event )
				return AlwaysTrue()
			end
		}
	} ) --[[ @ 0]]
	DirectorMapGameTypeAndDifficulty:setAlpha( 0 ) --[[ @ 0]]
	DirectorMapGameTypeAndDifficulty.DirectorMapAndGameInternal.PlaylistHeader.GameModeText:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_1C95DCE378B96DFF" ) ) --[[ @ 0]]
	DirectorMapGameTypeAndDifficulty.DirectorMapAndGameInternal.PlaylistHeaderNonHost.GameModeText:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_1C95DCE378B96DFF" ) ) --[[ @ 0]]
	DirectorMapGameTypeAndDifficulty:subscribeToGlobalModel( f1_arg1, "MapVote", "mapVoteMapNext", function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			DirectorMapGameTypeAndDifficulty.DirectorMapAndGameInternal.MapImage:setImage( RegisterImage( MapNameToMapImage( f3_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	DirectorMapGameTypeAndDifficulty.DirectorMapAndGameInternal.GamemodeIcon.__GamemodeIcon_Image = function ( f4_arg0 )
		local f4_local0 = f4_arg0:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			DirectorMapGameTypeAndDifficulty.DirectorMapAndGameInternal.GamemodeIcon:setImage( RegisterImage( CoD.ZombieUtility.GetLocalZMDifficultyImage( f4_local0 ) ) ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	DirectorMapGameTypeAndDifficulty:subscribeToGlobalModel( f1_arg1, "MapVote", "mapVoteGameModeNext", DirectorMapGameTypeAndDifficulty.DirectorMapAndGameInternal.GamemodeIcon.__GamemodeIcon_Image ) --[[ @ 0]]
	DirectorMapGameTypeAndDifficulty.DirectorMapAndGameInternal.GamemodeIcon.__GamemodeIcon_Image_FullPath = function ()
		local f5_local0 = DataSources.MapVote.getModel( f1_arg1 ) --[[ @ 0]]
		f5_local0 = f5_local0.mapVoteGameModeNext --[[ @ 0]]
		if f5_local0 then
			DirectorMapGameTypeAndDifficulty.DirectorMapAndGameInternal.GamemodeIcon.__GamemodeIcon_Image( f5_local0 ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	DirectorMapGameTypeAndDifficulty.DirectorMapAndGameInternal.DirectorMapAndGameTypeInternalTitles.Label.__Label_Desc = function ( f6_arg0 )
		local f6_local0 = f6_arg0:get() --[[ @ 0]]
		if f6_local0 ~= nil then
			DirectorMapGameTypeAndDifficulty.DirectorMapAndGameInternal.DirectorMapAndGameTypeInternalTitles.Label:setText( CoD.ZombieUtility.MapNameToZMOfflineLocalizedMapName( f6_local0 ) ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	DirectorMapGameTypeAndDifficulty:subscribeToGlobalModel( f1_arg1, "MapVote", "mapVoteMapNext", DirectorMapGameTypeAndDifficulty.DirectorMapAndGameInternal.DirectorMapAndGameTypeInternalTitles.Label.__Label_Desc ) --[[ @ 0]]
	DirectorMapGameTypeAndDifficulty.DirectorMapAndGameInternal.DirectorMapAndGameTypeInternalTitles.Label.__Label_Desc_FullPath = function ()
		local f7_local0 = DataSources.MapVote.getModel( f1_arg1 ) --[[ @ 0]]
		f7_local0 = f7_local0.mapVoteMapNext --[[ @ 0]]
		if f7_local0 then
			DirectorMapGameTypeAndDifficulty.DirectorMapAndGameInternal.DirectorMapAndGameTypeInternalTitles.Label.__Label_Desc( f7_local0 ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	DirectorMapGameTypeAndDifficulty:subscribeToGlobalModel( f1_arg1, "MapVote", "mapVoteGameModeNext", function ( model )
		local f8_local0 = model:get() --[[ @ 0]]
		if f8_local0 ~= nil then
			DirectorMapGameTypeAndDifficulty.DirectorMapAndGameInternal.DirectorMapAndGameTypeInternalTitles.SubTitle:setText( CoD.GameTypeUtility.GameTypeToLocalizeToUpperName( f8_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( DirectorMapGameTypeAndDifficulty ) --[[ @ 0]]
	self.DirectorMapGameTypeAndDifficulty = DirectorMapGameTypeAndDifficulty --[[ @ 0]]
	
	local MapVoteItemRandomZM = CoD.MapVoteItemZM.new( f1_arg0, f1_arg1, 0, 0, 0, 394, 0, 0, 249, 355 ) --[[ @ 0]]
	MapVoteItemRandomZM.MapImage:setImage( RegisterImage( @"uie_lui_random_map_vote" ) ) --[[ @ 0]]
	MapVoteItemRandomZM.GameMode:setText( LocalizeToUpperString( @"hash_3FDFC63B040DE92E" ) ) --[[ @ 0]]
	MapVoteItemRandomZM.MapName:setText( LocalizeToUpperString( @"hash_68C899D3B96CB850" ) ) --[[ @ 0]]
	MapVoteItemRandomZM.GameModeIcon:setImage( RegisterImage( @"blacktransparent" ) ) --[[ @ 0]]
	MapVoteItemRandomZM.VoteType:setText( LocalizeToUpperString( @"hash_2A0C72A43293DDE0" ) ) --[[ @ 0]]
	MapVoteItemRandomZM:subscribeToGlobalModel( f1_arg1, "MapVote", "mapVoteCountRandom", function ( model )
		local f9_local0 = model:get() --[[ @ 0]]
		if f9_local0 ~= nil then
			MapVoteItemRandomZM.voteCount:setText( f9_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	MapVoteItemRandomZM:registerEventHandler( "lobby_map_vote_random_chosen", function ( element, event )
		local f10_local0 = nil --[[ @ 0]]
		PlayClip( self, "MapVoteChosenRandom", f1_arg1 ) --[[ @ 0]]
		if not f10_local0 then
			f10_local0 = element:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f10_local0
	end ) --[[ @ 0]]
	MapVoteItemRandomZM:registerEventHandler( "gain_focus", function ( element, event )
		local f11_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f11_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f11_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f11_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( MapVoteItemRandomZM, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		CoD.LobbyUtility.LobbyMapVoteSelectRandom( self, controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, "ui_confirm" ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	self:addElement( MapVoteItemRandomZM ) --[[ @ 0]]
	self.MapVoteItemRandomZM = MapVoteItemRandomZM --[[ @ 0]]
	
	local MapVoteItemPreviousZM = CoD.MapVoteItemZM.new( f1_arg0, f1_arg1, 0, 0, 0, 394, 0, 0, 143, 249 ) --[[ @ 0]]
	MapVoteItemPreviousZM:mergeStateConditions( {
		{
			stateName = "Unselectable",
			condition = function ( menu, element, event )
				return not CoD.LobbyUtility.MapVotePreviousSelectable()
			end
		}
	} ) --[[ @ 0]]
	local LobbyStatus = MapVoteItemPreviousZM --[[ @ 0]]
	local MapVoteItemNextZM = MapVoteItemPreviousZM.subscribeToModel --[[ @ 0]]
	local f1_local6 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	MapVoteItemNextZM( LobbyStatus, f1_local6["lobbyRoot.mapVote"], function ( f15_arg0 )
		f1_arg0:updateElementState( MapVoteItemPreviousZM, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f15_arg0:get(),
			modelName = "lobbyRoot.mapVote"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	LobbyStatus = MapVoteItemPreviousZM --[[ @ 0]]
	MapVoteItemNextZM = MapVoteItemPreviousZM.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	MapVoteItemNextZM( LobbyStatus, f1_local6["lobbyRoot.lobbyNav"], function ( f16_arg0 )
		f1_arg0:updateElementState( MapVoteItemPreviousZM, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f16_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	MapVoteItemPreviousZM.VoteType:setText( LocalizeToUpperString( @"hash_71AC7271BB7AB90A" ) ) --[[ @ 0]]
	MapVoteItemPreviousZM:subscribeToGlobalModel( f1_arg1, "MapVote", "mapVoteMapPrevious", function ( model )
		local f17_local0 = model:get() --[[ @ 0]]
		if f17_local0 ~= nil then
			MapVoteItemPreviousZM.MapImage:setImage( RegisterImage( MapNameToMapImage( f17_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	MapVoteItemPreviousZM:subscribeToGlobalModel( f1_arg1, "MapVote", "mapVoteGameModePrevious", function ( model )
		local f18_local0 = model:get() --[[ @ 0]]
		if f18_local0 ~= nil then
			MapVoteItemPreviousZM.GameMode:setText( CoD.GameTypeUtility.GameTypeToLocalizeToUpperName( f18_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	MapVoteItemPreviousZM:subscribeToGlobalModel( f1_arg1, "MapVote", "mapVoteMapPrevious", function ( model )
		local f19_local0 = model:get() --[[ @ 0]]
		if f19_local0 ~= nil then
			MapVoteItemPreviousZM.MapName:setText( CoD.MapUtility.MapNameToLocalizedToUpperName( f19_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	MapVoteItemPreviousZM:subscribeToGlobalModel( f1_arg1, "MapVote", "mapVoteGameModePrevious", function ( model )
		local f20_local0 = model:get() --[[ @ 0]]
		if f20_local0 ~= nil then
			MapVoteItemPreviousZM.GameModeIcon:setImage( RegisterImage( CoD.GameTypeUtility.GameTypeToImage( f20_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	MapVoteItemPreviousZM:subscribeToGlobalModel( f1_arg1, "MapVote", "mapVoteCountPrevious", function ( model )
		local f21_local0 = model:get() --[[ @ 0]]
		if f21_local0 ~= nil then
			MapVoteItemPreviousZM.voteCount:setText( f21_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	MapVoteItemPreviousZM:registerEventHandler( "lobby_map_vote_previous_chosen", function ( element, event )
		local f22_local0 = nil --[[ @ 0]]
		PlayClip( self, "MapVoteChosenPrevious", f1_arg1 ) --[[ @ 0]]
		if not f22_local0 then
			f22_local0 = element:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f22_local0
	end ) --[[ @ 0]]
	MapVoteItemPreviousZM:registerEventHandler( "gain_focus", function ( element, event )
		local f23_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f23_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f23_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f23_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( MapVoteItemPreviousZM, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		CoD.LobbyUtility.LobbyMapVoteSelectPrevious( self, controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, "ui_confirm" ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	self:addElement( MapVoteItemPreviousZM ) --[[ @ 0]]
	self.MapVoteItemPreviousZM = MapVoteItemPreviousZM --[[ @ 0]]
	
	MapVoteItemNextZM = CoD.MapVoteItemZM.new( f1_arg0, f1_arg1, 0, 0, 0, 394, 0, 0, 37, 143 ) --[[ @ 0]]
	MapVoteItemNextZM.VoteType:setText( LocalizeToUpperString( @"hash_2F0DF87756796D4E" ) ) --[[ @ 0]]
	MapVoteItemNextZM:subscribeToGlobalModel( f1_arg1, "MapVote", "mapVoteMapNext", function ( model )
		local f26_local0 = model:get() --[[ @ 0]]
		if f26_local0 ~= nil then
			MapVoteItemNextZM.MapImage:setImage( RegisterImage( MapNameToMapImage( f26_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	MapVoteItemNextZM:subscribeToGlobalModel( f1_arg1, "MapVote", "mapVoteGameModeNext", function ( model )
		local f27_local0 = model:get() --[[ @ 0]]
		if f27_local0 ~= nil then
			MapVoteItemNextZM.GameMode:setText( CoD.GameTypeUtility.GameTypeToLocalizeToUpperName( f27_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	MapVoteItemNextZM:subscribeToGlobalModel( f1_arg1, "MapVote", "mapVoteMapNext", function ( model )
		local f28_local0 = model:get() --[[ @ 0]]
		if f28_local0 ~= nil then
			MapVoteItemNextZM.MapName:setText( CoD.MapUtility.MapNameToLocalizedToUpperName( f28_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	MapVoteItemNextZM:subscribeToGlobalModel( f1_arg1, "MapVote", "mapVoteGameModeNext", function ( model )
		local f29_local0 = model:get() --[[ @ 0]]
		if f29_local0 ~= nil then
			MapVoteItemNextZM.GameModeIcon:setImage( RegisterImage( CoD.GameTypeUtility.GameTypeToImage( f29_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	MapVoteItemNextZM:subscribeToGlobalModel( f1_arg1, "MapVote", "mapVoteCountNext", function ( model )
		local f30_local0 = model:get() --[[ @ 0]]
		if f30_local0 ~= nil then
			MapVoteItemNextZM.voteCount:setText( f30_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	MapVoteItemNextZM:registerEventHandler( "lobby_map_vote_next_chosen", function ( element, event )
		local f31_local0 = nil --[[ @ 0]]
		PlayClip( self, "MapVoteChosenNext", f1_arg1 ) --[[ @ 0]]
		if not f31_local0 then
			f31_local0 = element:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f31_local0
	end ) --[[ @ 0]]
	MapVoteItemNextZM:registerEventHandler( "gain_focus", function ( element, event )
		local f32_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f32_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f32_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f32_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( MapVoteItemNextZM, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		CoD.LobbyUtility.LobbyMapVoteSelectNext( self, controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, "ui_confirm" ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	self:addElement( MapVoteItemNextZM ) --[[ @ 0]]
	self.MapVoteItemNextZM = MapVoteItemNextZM --[[ @ 0]]
	
	LobbyStatus = LUI.UIText.new( 0, 0, 5, 384, 0, 0, 12, 32 ) --[[ @ 0]]
	LobbyStatus:setRGB( 0.63, 0.62, 0.61 ) --[[ @ 0]]
	LobbyStatus:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	LobbyStatus:setLetterSpacing( 6 ) --[[ @ 0]]
	LobbyStatus:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	LobbyStatus:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	LobbyStatus:subscribeToGlobalModel( f1_arg1, "LobbyRoot", "lobbyStatus", function ( model )
		local f35_local0 = model:get() --[[ @ 0]]
		if f35_local0 ~= nil then
			LobbyStatus:setText( ToUpper( f35_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( LobbyStatus ) --[[ @ 0]]
	self.LobbyStatus = LobbyStatus --[[ @ 0]]
	
	local f1_local7 = DirectorMapGameTypeAndDifficulty --[[ @ 0]]
	f1_local6 = DirectorMapGameTypeAndDifficulty.subscribeToModel --[[ @ 0]]
	local f1_local8 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local6( f1_local7, f1_local8.localZMDifficulty, DirectorMapGameTypeAndDifficulty.DirectorMapAndGameInternal.GamemodeIcon.__GamemodeIcon_Image_FullPath ) --[[ @ 0]]
	f1_local7 = DirectorMapGameTypeAndDifficulty --[[ @ 0]]
	f1_local6 = DirectorMapGameTypeAndDifficulty.subscribeToModel --[[ @ 0]]
	f1_local8 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local6( f1_local7, f1_local8.offlineScreenState, DirectorMapGameTypeAndDifficulty.DirectorMapAndGameInternal.GamemodeIcon.__GamemodeIcon_Image_FullPath ) --[[ @ 0]]
	f1_local7 = DirectorMapGameTypeAndDifficulty --[[ @ 0]]
	f1_local6 = DirectorMapGameTypeAndDifficulty.subscribeToModel --[[ @ 0]]
	f1_local8 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local6( f1_local7, f1_local8.localZMDifficulty, DirectorMapGameTypeAndDifficulty.DirectorMapAndGameInternal.DirectorMapAndGameTypeInternalTitles.Label.__Label_Desc_FullPath ) --[[ @ 0]]
	f1_local7 = DirectorMapGameTypeAndDifficulty --[[ @ 0]]
	f1_local6 = DirectorMapGameTypeAndDifficulty.subscribeToModel --[[ @ 0]]
	f1_local8 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local6( f1_local7, f1_local8.localZMTrialVariant, DirectorMapGameTypeAndDifficulty.DirectorMapAndGameInternal.DirectorMapAndGameTypeInternalTitles.Label.__Label_Desc_FullPath ) --[[ @ 0]]
	f1_local7 = DirectorMapGameTypeAndDifficulty --[[ @ 0]]
	f1_local6 = DirectorMapGameTypeAndDifficulty.subscribeToModel --[[ @ 0]]
	f1_local8 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local6( f1_local7, f1_local8["MapVote.mapVoteGameModeNext"], DirectorMapGameTypeAndDifficulty.DirectorMapAndGameInternal.DirectorMapAndGameTypeInternalTitles.Label.__Label_Desc_FullPath ) --[[ @ 0]]
	self:mergeStateConditions( {
		{
			stateName = "MapVote",
			condition = function ( menu, element, event )
				return CoD.LobbyUtility.MapVoteInState( LuaEnum.MAP_VOTE_STATE.VOTING )
			end
		},
		{
			stateName = "MapVoteChosenNext",
			condition = function ( menu, element, event )
				return CoD.LobbyUtility.MapVoteInState( LuaEnum.MAP_VOTE_STATE.LOCKEDIN ) and CoD.ModelUtility.IsGlobalModelValueEqualToEnum( "MapVote.lobbyMapVoteType", Enum[@"LobbyMapVote"][@"hash_4658B6B1B964D38A"] )
			end
		},
		{
			stateName = "MapVoteChosenPrevious",
			condition = function ( menu, element, event )
				return CoD.LobbyUtility.MapVoteInState( LuaEnum.MAP_VOTE_STATE.LOCKEDIN ) and CoD.ModelUtility.IsGlobalModelValueEqualToEnum( "MapVote.lobbyMapVoteType", Enum[@"LobbyMapVote"][@"hash_6D8A67C2C1AF1036"] )
			end
		},
		{
			stateName = "MapVoteChosenRandom",
			condition = function ( menu, element, event )
				return CoD.LobbyUtility.MapVoteInState( LuaEnum.MAP_VOTE_STATE.LOCKEDIN ) and CoD.ModelUtility.IsGlobalModelValueEqualToEnum( "MapVote.lobbyMapVoteType", Enum[@"LobbyMapVote"][@"hash_374A46A6237E75F4"] )
			end
		},
		{
			stateName = "SelectedMap",
			condition = function ( menu, element, event )
				return CoD.LobbyUtility.MapVoteInState( LuaEnum.MAP_VOTE_STATE.LOCKEDIN )
			end
		}
	} ) --[[ @ 0]]
	f1_local7 = self --[[ @ 0]]
	f1_local6 = self.subscribeToModel --[[ @ 0]]
	f1_local8 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local6( f1_local7, f1_local8["lobbyRoot.mapVote"], function ( f41_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f41_arg0:get(),
			modelName = "lobbyRoot.mapVote"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = self --[[ @ 0]]
	f1_local6 = self.subscribeToModel --[[ @ 0]]
	f1_local8 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local6( f1_local7, f1_local8["lobbyRoot.lobbyNav"], function ( f42_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f42_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = self --[[ @ 0]]
	f1_local6 = self.subscribeToModel --[[ @ 0]]
	f1_local8 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local6( f1_local7, f1_local8["MapVote.lobbyMapVoteType"], function ( f43_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f43_arg0:get(),
			modelName = "MapVote.lobbyMapVoteType"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( self, "setState", function ( element, controller, f44_arg2, f44_arg3, f44_arg4 )
		if CoD.LobbyUtility.ShouldSetMapVoteStateToSelectedMap( self ) then
			CoD.LobbyUtility.SetMapVoteSelectedStateOnClipOver( self, controller, "SelectedMap" ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	DirectorMapGameTypeAndDifficulty.id = "DirectorMapGameTypeAndDifficulty" --[[ @ 0]]
	MapVoteItemRandomZM.id = "MapVoteItemRandomZM" --[[ @ 0]]
	MapVoteItemPreviousZM.id = "MapVoteItemPreviousZM" --[[ @ 0]]
	MapVoteItemNextZM.id = "MapVoteItemNextZM" --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.MapVoteZM.__resetProperties = function ( f45_arg0 )
	f45_arg0.LobbyStatus:completeAnimation() --[[ @ 0]]
	f45_arg0.MapVoteItemNextZM:completeAnimation() --[[ @ 0]]
	f45_arg0.MapVoteItemPreviousZM:completeAnimation() --[[ @ 0]]
	f45_arg0.MapVoteItemRandomZM:completeAnimation() --[[ @ 0]]
	f45_arg0.DirectorMapGameTypeAndDifficulty:completeAnimation() --[[ @ 0]]
	f45_arg0.LobbyStatus:setTopBottom( 0, 0, 12, 32 ) --[[ @ 0]]
	f45_arg0.LobbyStatus:setAlpha( 1 ) --[[ @ 0]]
	f45_arg0.MapVoteItemNextZM:setAlpha( 1 ) --[[ @ 0]]
	f45_arg0.MapVoteItemPreviousZM:setTopBottom( 0, 0, 143, 249 ) --[[ @ 0]]
	f45_arg0.MapVoteItemPreviousZM:setAlpha( 1 ) --[[ @ 0]]
	f45_arg0.MapVoteItemRandomZM:setTopBottom( 0, 0, 249, 355 ) --[[ @ 0]]
	f45_arg0.MapVoteItemRandomZM:setAlpha( 1 ) --[[ @ 0]]
	f45_arg0.DirectorMapGameTypeAndDifficulty:setTopBottom( 0, 0, 37, 143 ) --[[ @ 0]]
	f45_arg0.DirectorMapGameTypeAndDifficulty:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.MapVoteZM.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f46_arg0, f46_arg1 )
			f46_arg0:__resetProperties() --[[ @ 0]]
			f46_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f46_arg0.MapVoteItemRandomZM:completeAnimation() --[[ @ 0]]
			f46_arg0.MapVoteItemRandomZM:setAlpha( 0 ) --[[ @ 0]]
			f46_arg0.clipFinished( f46_arg0.MapVoteItemRandomZM ) --[[ @ 0]]
			f46_arg0.MapVoteItemPreviousZM:completeAnimation() --[[ @ 0]]
			f46_arg0.MapVoteItemPreviousZM:setAlpha( 0 ) --[[ @ 0]]
			f46_arg0.clipFinished( f46_arg0.MapVoteItemPreviousZM ) --[[ @ 0]]
			f46_arg0.MapVoteItemNextZM:completeAnimation() --[[ @ 0]]
			f46_arg0.MapVoteItemNextZM:setAlpha( 0 ) --[[ @ 0]]
			f46_arg0.clipFinished( f46_arg0.MapVoteItemNextZM ) --[[ @ 0]]
			f46_arg0.LobbyStatus:completeAnimation() --[[ @ 0]]
			f46_arg0.LobbyStatus:setAlpha( 0 ) --[[ @ 0]]
			f46_arg0.clipFinished( f46_arg0.LobbyStatus ) --[[ @ 0]]
		end,
		MapVote = function ( f47_arg0, f47_arg1 )
			f47_arg0:__resetProperties() --[[ @ 0]]
			f47_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			local f47_local0 = function ( f48_arg0 )
				f47_arg0.MapVoteItemRandomZM:beginAnimation( 250 ) --[[ @ 0]]
				f47_arg0.MapVoteItemRandomZM:setAlpha( 1 ) --[[ @ 0]]
				f47_arg0.MapVoteItemRandomZM:registerEventHandler( "interrupted_keyframe", f47_arg0.clipInterrupted ) --[[ @ 0]]
				f47_arg0.MapVoteItemRandomZM:registerEventHandler( "transition_complete_keyframe", f47_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f47_arg0.MapVoteItemRandomZM:completeAnimation() --[[ @ 0]]
			f47_arg0.MapVoteItemRandomZM:setAlpha( 0 ) --[[ @ 0]]
			f47_local0( f47_arg0.MapVoteItemRandomZM ) --[[ @ 0]]
			local f47_local1 = function ( f49_arg0 )
				f47_arg0.MapVoteItemPreviousZM:beginAnimation( 250 ) --[[ @ 0]]
				f47_arg0.MapVoteItemPreviousZM:setAlpha( 1 ) --[[ @ 0]]
				f47_arg0.MapVoteItemPreviousZM:registerEventHandler( "interrupted_keyframe", f47_arg0.clipInterrupted ) --[[ @ 0]]
				f47_arg0.MapVoteItemPreviousZM:registerEventHandler( "transition_complete_keyframe", f47_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f47_arg0.MapVoteItemPreviousZM:completeAnimation() --[[ @ 0]]
			f47_arg0.MapVoteItemPreviousZM:setAlpha( 0 ) --[[ @ 0]]
			f47_local1( f47_arg0.MapVoteItemPreviousZM ) --[[ @ 0]]
			local f47_local2 = function ( f50_arg0 )
				f47_arg0.MapVoteItemNextZM:beginAnimation( 250 ) --[[ @ 0]]
				f47_arg0.MapVoteItemNextZM:setAlpha( 1 ) --[[ @ 0]]
				f47_arg0.MapVoteItemNextZM:registerEventHandler( "interrupted_keyframe", f47_arg0.clipInterrupted ) --[[ @ 0]]
				f47_arg0.MapVoteItemNextZM:registerEventHandler( "transition_complete_keyframe", f47_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f47_arg0.MapVoteItemNextZM:completeAnimation() --[[ @ 0]]
			f47_arg0.MapVoteItemNextZM:setAlpha( 0 ) --[[ @ 0]]
			f47_local2( f47_arg0.MapVoteItemNextZM ) --[[ @ 0]]
			local f47_local3 = function ( f51_arg0 )
				f47_arg0.LobbyStatus:beginAnimation( 250 ) --[[ @ 0]]
				f47_arg0.LobbyStatus:setAlpha( 1 ) --[[ @ 0]]
				f47_arg0.LobbyStatus:registerEventHandler( "interrupted_keyframe", f47_arg0.clipInterrupted ) --[[ @ 0]]
				f47_arg0.LobbyStatus:registerEventHandler( "transition_complete_keyframe", f47_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f47_arg0.LobbyStatus:completeAnimation() --[[ @ 0]]
			f47_arg0.LobbyStatus:setAlpha( 0 ) --[[ @ 0]]
			f47_local3( f47_arg0.LobbyStatus ) --[[ @ 0]]
		end,
		MapSelected = function ( f52_arg0, f52_arg1 )
			f52_arg0:__resetProperties() --[[ @ 0]]
			f52_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			local f52_local0 = function ( f53_arg0 )
				f52_arg0.MapVoteItemRandomZM:beginAnimation( 400 ) --[[ @ 0]]
				f52_arg0.MapVoteItemRandomZM:registerEventHandler( "interrupted_keyframe", f52_arg0.clipInterrupted ) --[[ @ 0]]
				f52_arg0.MapVoteItemRandomZM:registerEventHandler( "transition_complete_keyframe", f52_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f52_arg0.MapVoteItemRandomZM:completeAnimation() --[[ @ 0]]
			f52_arg0.MapVoteItemRandomZM:setAlpha( 0 ) --[[ @ 0]]
			f52_local0( f52_arg0.MapVoteItemRandomZM ) --[[ @ 0]]
			local f52_local1 = function ( f54_arg0 )
				f52_arg0.MapVoteItemPreviousZM:beginAnimation( 400 ) --[[ @ 0]]
				f52_arg0.MapVoteItemPreviousZM:registerEventHandler( "interrupted_keyframe", f52_arg0.clipInterrupted ) --[[ @ 0]]
				f52_arg0.MapVoteItemPreviousZM:registerEventHandler( "transition_complete_keyframe", f52_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f52_arg0.MapVoteItemPreviousZM:completeAnimation() --[[ @ 0]]
			f52_arg0.MapVoteItemPreviousZM:setAlpha( 0 ) --[[ @ 0]]
			f52_local1( f52_arg0.MapVoteItemPreviousZM ) --[[ @ 0]]
			local f52_local2 = function ( f55_arg0 )
				f52_arg0.MapVoteItemNextZM:beginAnimation( 400 ) --[[ @ 0]]
				f52_arg0.MapVoteItemNextZM:registerEventHandler( "interrupted_keyframe", f52_arg0.clipInterrupted ) --[[ @ 0]]
				f52_arg0.MapVoteItemNextZM:registerEventHandler( "transition_complete_keyframe", f52_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f52_arg0.MapVoteItemNextZM:completeAnimation() --[[ @ 0]]
			f52_arg0.MapVoteItemNextZM:setAlpha( 0 ) --[[ @ 0]]
			f52_local2( f52_arg0.MapVoteItemNextZM ) --[[ @ 0]]
			local f52_local3 = function ( f56_arg0 )
				f52_arg0.LobbyStatus:beginAnimation( 400 ) --[[ @ 0]]
				f52_arg0.LobbyStatus:setAlpha( 1 ) --[[ @ 0]]
				f52_arg0.LobbyStatus:registerEventHandler( "interrupted_keyframe", f52_arg0.clipInterrupted ) --[[ @ 0]]
				f52_arg0.LobbyStatus:registerEventHandler( "transition_complete_keyframe", f52_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f52_arg0.LobbyStatus:completeAnimation() --[[ @ 0]]
			f52_arg0.LobbyStatus:setAlpha( 0 ) --[[ @ 0]]
			f52_local3( f52_arg0.LobbyStatus ) --[[ @ 0]]
		end,
		MapVoteChosenNext = function ( f57_arg0, f57_arg1 )
			f57_arg0:__resetProperties() --[[ @ 0]]
			f57_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			local f57_local0 = function ( f58_arg0 )
				f57_arg0.MapVoteItemRandomZM:beginAnimation( 400 ) --[[ @ 0]]
				f57_arg0.MapVoteItemRandomZM:registerEventHandler( "interrupted_keyframe", f57_arg0.clipInterrupted ) --[[ @ 0]]
				f57_arg0.MapVoteItemRandomZM:registerEventHandler( "transition_complete_keyframe", f57_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f57_arg0.MapVoteItemRandomZM:completeAnimation() --[[ @ 0]]
			f57_arg0.MapVoteItemRandomZM:setAlpha( 0 ) --[[ @ 0]]
			f57_local0( f57_arg0.MapVoteItemRandomZM ) --[[ @ 0]]
			local f57_local1 = function ( f59_arg0 )
				f57_arg0.MapVoteItemPreviousZM:beginAnimation( 400 ) --[[ @ 0]]
				f57_arg0.MapVoteItemPreviousZM:registerEventHandler( "interrupted_keyframe", f57_arg0.clipInterrupted ) --[[ @ 0]]
				f57_arg0.MapVoteItemPreviousZM:registerEventHandler( "transition_complete_keyframe", f57_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f57_arg0.MapVoteItemPreviousZM:completeAnimation() --[[ @ 0]]
			f57_arg0.MapVoteItemPreviousZM:setAlpha( 0 ) --[[ @ 0]]
			f57_local1( f57_arg0.MapVoteItemPreviousZM ) --[[ @ 0]]
			local f57_local2 = function ( f60_arg0 )
				f57_arg0.MapVoteItemNextZM:beginAnimation( 400 ) --[[ @ 0]]
				f57_arg0.MapVoteItemNextZM:registerEventHandler( "interrupted_keyframe", f57_arg0.clipInterrupted ) --[[ @ 0]]
				f57_arg0.MapVoteItemNextZM:registerEventHandler( "transition_complete_keyframe", f57_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f57_arg0.MapVoteItemNextZM:completeAnimation() --[[ @ 0]]
			f57_arg0.MapVoteItemNextZM:setAlpha( 0 ) --[[ @ 0]]
			f57_local2( f57_arg0.MapVoteItemNextZM ) --[[ @ 0]]
			local f57_local3 = function ( f61_arg0 )
				f57_arg0.LobbyStatus:beginAnimation( 400 ) --[[ @ 0]]
				f57_arg0.LobbyStatus:setAlpha( 1 ) --[[ @ 0]]
				f57_arg0.LobbyStatus:registerEventHandler( "interrupted_keyframe", f57_arg0.clipInterrupted ) --[[ @ 0]]
				f57_arg0.LobbyStatus:registerEventHandler( "transition_complete_keyframe", f57_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f57_arg0.LobbyStatus:completeAnimation() --[[ @ 0]]
			f57_arg0.LobbyStatus:setAlpha( 0 ) --[[ @ 0]]
			f57_local3( f57_arg0.LobbyStatus ) --[[ @ 0]]
		end,
		MapVoteChosenPrevious = function ( f62_arg0, f62_arg1 )
			f62_arg0:__resetProperties() --[[ @ 0]]
			f62_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			local f62_local0 = function ( f63_arg0 )
				f62_arg0.MapVoteItemRandomZM:beginAnimation( 400 ) --[[ @ 0]]
				f62_arg0.MapVoteItemRandomZM:registerEventHandler( "interrupted_keyframe", f62_arg0.clipInterrupted ) --[[ @ 0]]
				f62_arg0.MapVoteItemRandomZM:registerEventHandler( "transition_complete_keyframe", f62_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f62_arg0.MapVoteItemRandomZM:completeAnimation() --[[ @ 0]]
			f62_arg0.MapVoteItemRandomZM:setAlpha( 0 ) --[[ @ 0]]
			f62_local0( f62_arg0.MapVoteItemRandomZM ) --[[ @ 0]]
			local f62_local1 = function ( f64_arg0 )
				f62_arg0.MapVoteItemPreviousZM:beginAnimation( 400 ) --[[ @ 0]]
				f62_arg0.MapVoteItemPreviousZM:registerEventHandler( "interrupted_keyframe", f62_arg0.clipInterrupted ) --[[ @ 0]]
				f62_arg0.MapVoteItemPreviousZM:registerEventHandler( "transition_complete_keyframe", f62_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f62_arg0.MapVoteItemPreviousZM:completeAnimation() --[[ @ 0]]
			f62_arg0.MapVoteItemPreviousZM:setAlpha( 0 ) --[[ @ 0]]
			f62_local1( f62_arg0.MapVoteItemPreviousZM ) --[[ @ 0]]
			local f62_local2 = function ( f65_arg0 )
				f62_arg0.MapVoteItemNextZM:beginAnimation( 400 ) --[[ @ 0]]
				f62_arg0.MapVoteItemNextZM:registerEventHandler( "interrupted_keyframe", f62_arg0.clipInterrupted ) --[[ @ 0]]
				f62_arg0.MapVoteItemNextZM:registerEventHandler( "transition_complete_keyframe", f62_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f62_arg0.MapVoteItemNextZM:completeAnimation() --[[ @ 0]]
			f62_arg0.MapVoteItemNextZM:setAlpha( 0 ) --[[ @ 0]]
			f62_local2( f62_arg0.MapVoteItemNextZM ) --[[ @ 0]]
			local f62_local3 = function ( f66_arg0 )
				f62_arg0.LobbyStatus:beginAnimation( 400 ) --[[ @ 0]]
				f62_arg0.LobbyStatus:setAlpha( 1 ) --[[ @ 0]]
				f62_arg0.LobbyStatus:registerEventHandler( "interrupted_keyframe", f62_arg0.clipInterrupted ) --[[ @ 0]]
				f62_arg0.LobbyStatus:registerEventHandler( "transition_complete_keyframe", f62_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f62_arg0.LobbyStatus:completeAnimation() --[[ @ 0]]
			f62_arg0.LobbyStatus:setAlpha( 0 ) --[[ @ 0]]
			f62_local3( f62_arg0.LobbyStatus ) --[[ @ 0]]
		end,
		MapVoteChosenRandom = function ( f67_arg0, f67_arg1 )
			f67_arg0:__resetProperties() --[[ @ 0]]
			f67_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			local f67_local0 = function ( f68_arg0 )
				f67_arg0.MapVoteItemRandomZM:beginAnimation( 400 ) --[[ @ 0]]
				f67_arg0.MapVoteItemRandomZM:registerEventHandler( "interrupted_keyframe", f67_arg0.clipInterrupted ) --[[ @ 0]]
				f67_arg0.MapVoteItemRandomZM:registerEventHandler( "transition_complete_keyframe", f67_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f67_arg0.MapVoteItemRandomZM:completeAnimation() --[[ @ 0]]
			f67_arg0.MapVoteItemRandomZM:setAlpha( 0 ) --[[ @ 0]]
			f67_local0( f67_arg0.MapVoteItemRandomZM ) --[[ @ 0]]
			local f67_local1 = function ( f69_arg0 )
				f67_arg0.MapVoteItemPreviousZM:beginAnimation( 400 ) --[[ @ 0]]
				f67_arg0.MapVoteItemPreviousZM:registerEventHandler( "interrupted_keyframe", f67_arg0.clipInterrupted ) --[[ @ 0]]
				f67_arg0.MapVoteItemPreviousZM:registerEventHandler( "transition_complete_keyframe", f67_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f67_arg0.MapVoteItemPreviousZM:completeAnimation() --[[ @ 0]]
			f67_arg0.MapVoteItemPreviousZM:setAlpha( 0 ) --[[ @ 0]]
			f67_local1( f67_arg0.MapVoteItemPreviousZM ) --[[ @ 0]]
			local f67_local2 = function ( f70_arg0 )
				f67_arg0.MapVoteItemNextZM:beginAnimation( 400 ) --[[ @ 0]]
				f67_arg0.MapVoteItemNextZM:registerEventHandler( "interrupted_keyframe", f67_arg0.clipInterrupted ) --[[ @ 0]]
				f67_arg0.MapVoteItemNextZM:registerEventHandler( "transition_complete_keyframe", f67_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f67_arg0.MapVoteItemNextZM:completeAnimation() --[[ @ 0]]
			f67_arg0.MapVoteItemNextZM:setAlpha( 0 ) --[[ @ 0]]
			f67_local2( f67_arg0.MapVoteItemNextZM ) --[[ @ 0]]
			local f67_local3 = function ( f71_arg0 )
				f67_arg0.LobbyStatus:beginAnimation( 400 ) --[[ @ 0]]
				f67_arg0.LobbyStatus:setAlpha( 1 ) --[[ @ 0]]
				f67_arg0.LobbyStatus:registerEventHandler( "interrupted_keyframe", f67_arg0.clipInterrupted ) --[[ @ 0]]
				f67_arg0.LobbyStatus:registerEventHandler( "transition_complete_keyframe", f67_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f67_arg0.LobbyStatus:completeAnimation() --[[ @ 0]]
			f67_arg0.LobbyStatus:setAlpha( 0 ) --[[ @ 0]]
			f67_local3( f67_arg0.LobbyStatus ) --[[ @ 0]]
		end
	},
	MapVote = {
		DefaultClip = function ( f72_arg0, f72_arg1 )
			f72_arg0:__resetProperties() --[[ @ 0]]
			f72_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f72_arg0.MapVoteItemRandomZM:completeAnimation() --[[ @ 0]]
			f72_arg0.MapVoteItemRandomZM:setAlpha( 1 ) --[[ @ 0]]
			f72_arg0.clipFinished( f72_arg0.MapVoteItemRandomZM ) --[[ @ 0]]
			f72_arg0.MapVoteItemPreviousZM:completeAnimation() --[[ @ 0]]
			f72_arg0.MapVoteItemPreviousZM:setAlpha( 1 ) --[[ @ 0]]
			f72_arg0.clipFinished( f72_arg0.MapVoteItemPreviousZM ) --[[ @ 0]]
			f72_arg0.MapVoteItemNextZM:completeAnimation() --[[ @ 0]]
			f72_arg0.MapVoteItemNextZM:setAlpha( 1 ) --[[ @ 0]]
			f72_arg0.clipFinished( f72_arg0.MapVoteItemNextZM ) --[[ @ 0]]
		end,
		MapVoteChosenNext = function ( f73_arg0, f73_arg1 )
			f73_arg0:__resetProperties() --[[ @ 0]]
			f73_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f73_arg0.DirectorMapGameTypeAndDifficulty:completeAnimation() --[[ @ 0]]
			f73_arg0.DirectorMapGameTypeAndDifficulty:setAlpha( 1 ) --[[ @ 0]]
			f73_arg0.clipFinished( f73_arg0.DirectorMapGameTypeAndDifficulty ) --[[ @ 0]]
			local f73_local0 = function ( f74_arg0 )
				f73_arg0.MapVoteItemRandomZM:beginAnimation( 400 ) --[[ @ 0]]
				f73_arg0.MapVoteItemRandomZM:setAlpha( 0 ) --[[ @ 0]]
				f73_arg0.MapVoteItemRandomZM:registerEventHandler( "interrupted_keyframe", f73_arg0.clipInterrupted ) --[[ @ 0]]
				f73_arg0.MapVoteItemRandomZM:registerEventHandler( "transition_complete_keyframe", f73_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f73_arg0.MapVoteItemRandomZM:completeAnimation() --[[ @ 0]]
			f73_arg0.MapVoteItemRandomZM:setAlpha( 1 ) --[[ @ 0]]
			f73_local0( f73_arg0.MapVoteItemRandomZM ) --[[ @ 0]]
			local f73_local1 = function ( f75_arg0 )
				f73_arg0.MapVoteItemPreviousZM:beginAnimation( 400 ) --[[ @ 0]]
				f73_arg0.MapVoteItemPreviousZM:setAlpha( 0 ) --[[ @ 0]]
				f73_arg0.MapVoteItemPreviousZM:registerEventHandler( "interrupted_keyframe", f73_arg0.clipInterrupted ) --[[ @ 0]]
				f73_arg0.MapVoteItemPreviousZM:registerEventHandler( "transition_complete_keyframe", f73_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f73_arg0.MapVoteItemPreviousZM:completeAnimation() --[[ @ 0]]
			f73_arg0.MapVoteItemPreviousZM:setAlpha( 1 ) --[[ @ 0]]
			f73_local1( f73_arg0.MapVoteItemPreviousZM ) --[[ @ 0]]
			local f73_local2 = function ( f76_arg0 )
				local f76_local0 = function ( f77_arg0 )
					f77_arg0:beginAnimation( 200 ) --[[ @ 0]]
					f77_arg0:setAlpha( 0 ) --[[ @ 0]]
					f77_arg0:registerEventHandler( "transition_complete_keyframe", f73_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f73_arg0.MapVoteItemNextZM:beginAnimation( 200 ) --[[ @ 0]]
				f73_arg0.MapVoteItemNextZM:registerEventHandler( "interrupted_keyframe", f73_arg0.clipInterrupted ) --[[ @ 0]]
				f73_arg0.MapVoteItemNextZM:registerEventHandler( "transition_complete_keyframe", f76_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f73_arg0.MapVoteItemNextZM:completeAnimation() --[[ @ 0]]
			f73_arg0.MapVoteItemNextZM:setAlpha( 1 ) --[[ @ 0]]
			f73_local2( f73_arg0.MapVoteItemNextZM ) --[[ @ 0]]
		end,
		MapVoteChosenPrevious = function ( f78_arg0, f78_arg1 )
			f78_arg0:__resetProperties() --[[ @ 0]]
			f78_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			local f78_local0 = function ( f79_arg0 )
				local f79_local0 = function ( f80_arg0 )
					f80_arg0:beginAnimation( 99 ) --[[ @ 0]]
					f80_arg0:setAlpha( 1 ) --[[ @ 0]]
					f80_arg0:registerEventHandler( "transition_complete_keyframe", f78_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f78_arg0.DirectorMapGameTypeAndDifficulty:beginAnimation( 400 ) --[[ @ 0]]
				f78_arg0.DirectorMapGameTypeAndDifficulty:registerEventHandler( "interrupted_keyframe", f78_arg0.clipInterrupted ) --[[ @ 0]]
				f78_arg0.DirectorMapGameTypeAndDifficulty:registerEventHandler( "transition_complete_keyframe", f79_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f78_arg0.DirectorMapGameTypeAndDifficulty:completeAnimation() --[[ @ 0]]
			f78_arg0.DirectorMapGameTypeAndDifficulty:setAlpha( 0 ) --[[ @ 0]]
			f78_local0( f78_arg0.DirectorMapGameTypeAndDifficulty ) --[[ @ 0]]
			local f78_local1 = function ( f81_arg0 )
				f78_arg0.MapVoteItemRandomZM:beginAnimation( 200 ) --[[ @ 0]]
				f78_arg0.MapVoteItemRandomZM:setAlpha( 0 ) --[[ @ 0]]
				f78_arg0.MapVoteItemRandomZM:registerEventHandler( "interrupted_keyframe", f78_arg0.clipInterrupted ) --[[ @ 0]]
				f78_arg0.MapVoteItemRandomZM:registerEventHandler( "transition_complete_keyframe", f78_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f78_arg0.MapVoteItemRandomZM:completeAnimation() --[[ @ 0]]
			f78_arg0.MapVoteItemRandomZM:setAlpha( 1 ) --[[ @ 0]]
			f78_local1( f78_arg0.MapVoteItemRandomZM ) --[[ @ 0]]
			local f78_local2 = function ( f82_arg0 )
				local f82_local0 = function ( f83_arg0 )
					local f83_local0 = function ( f84_arg0 )
						f84_arg0:beginAnimation( 99 ) --[[ @ 0]]
						f84_arg0:setAlpha( 0 ) --[[ @ 0]]
						f84_arg0:registerEventHandler( "transition_complete_keyframe", f78_arg0.clipFinished ) --[[ @ 0]]
					end
					 --[[ @ 0]]
					f83_arg0:beginAnimation( 200, Enum[@"hash_1F50FFF429AB1890"][@"hash_15193EA7825DC097"] ) --[[ @ 0]]
					f83_arg0:setTopBottom( 0, 0, 37, 143 ) --[[ @ 0]]
					f83_arg0:registerEventHandler( "transition_complete_keyframe", f83_local0 ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f78_arg0.MapVoteItemPreviousZM:beginAnimation( 200 ) --[[ @ 0]]
				f78_arg0.MapVoteItemPreviousZM:registerEventHandler( "interrupted_keyframe", f78_arg0.clipInterrupted ) --[[ @ 0]]
				f78_arg0.MapVoteItemPreviousZM:registerEventHandler( "transition_complete_keyframe", f82_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f78_arg0.MapVoteItemPreviousZM:completeAnimation() --[[ @ 0]]
			f78_arg0.MapVoteItemPreviousZM:setTopBottom( 0, 0, 143, 249 ) --[[ @ 0]]
			f78_arg0.MapVoteItemPreviousZM:setAlpha( 1 ) --[[ @ 0]]
			f78_local2( f78_arg0.MapVoteItemPreviousZM ) --[[ @ 0]]
			local f78_local3 = function ( f85_arg0 )
				f78_arg0.MapVoteItemNextZM:beginAnimation( 200 ) --[[ @ 0]]
				f78_arg0.MapVoteItemNextZM:setAlpha( 0 ) --[[ @ 0]]
				f78_arg0.MapVoteItemNextZM:registerEventHandler( "interrupted_keyframe", f78_arg0.clipInterrupted ) --[[ @ 0]]
				f78_arg0.MapVoteItemNextZM:registerEventHandler( "transition_complete_keyframe", f78_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f78_arg0.MapVoteItemNextZM:completeAnimation() --[[ @ 0]]
			f78_arg0.MapVoteItemNextZM:setAlpha( 1 ) --[[ @ 0]]
			f78_local3( f78_arg0.MapVoteItemNextZM ) --[[ @ 0]]
		end,
		MapVoteChosenRandom = function ( f86_arg0, f86_arg1 )
			f86_arg0:__resetProperties() --[[ @ 0]]
			f86_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			local f86_local0 = function ( f87_arg0 )
				local f87_local0 = function ( f88_arg0 )
					f88_arg0:beginAnimation( 99 ) --[[ @ 0]]
					f88_arg0:setAlpha( 1 ) --[[ @ 0]]
					f88_arg0:registerEventHandler( "transition_complete_keyframe", f86_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f86_arg0.DirectorMapGameTypeAndDifficulty:beginAnimation( 400 ) --[[ @ 0]]
				f86_arg0.DirectorMapGameTypeAndDifficulty:registerEventHandler( "interrupted_keyframe", f86_arg0.clipInterrupted ) --[[ @ 0]]
				f86_arg0.DirectorMapGameTypeAndDifficulty:registerEventHandler( "transition_complete_keyframe", f87_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f86_arg0.DirectorMapGameTypeAndDifficulty:completeAnimation() --[[ @ 0]]
			f86_arg0.DirectorMapGameTypeAndDifficulty:setAlpha( 0 ) --[[ @ 0]]
			f86_local0( f86_arg0.DirectorMapGameTypeAndDifficulty ) --[[ @ 0]]
			local f86_local1 = function ( f89_arg0 )
				local f89_local0 = function ( f90_arg0 )
					local f90_local0 = function ( f91_arg0 )
						f91_arg0:beginAnimation( 99 ) --[[ @ 0]]
						f91_arg0:setAlpha( 0 ) --[[ @ 0]]
						f91_arg0:registerEventHandler( "transition_complete_keyframe", f86_arg0.clipFinished ) --[[ @ 0]]
					end
					 --[[ @ 0]]
					f90_arg0:beginAnimation( 200, Enum[@"hash_1F50FFF429AB1890"][@"hash_15193EA7825DC097"] ) --[[ @ 0]]
					f90_arg0:setTopBottom( 0, 0, 37, 143 ) --[[ @ 0]]
					f90_arg0:registerEventHandler( "transition_complete_keyframe", f90_local0 ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f86_arg0.MapVoteItemRandomZM:beginAnimation( 200 ) --[[ @ 0]]
				f86_arg0.MapVoteItemRandomZM:registerEventHandler( "interrupted_keyframe", f86_arg0.clipInterrupted ) --[[ @ 0]]
				f86_arg0.MapVoteItemRandomZM:registerEventHandler( "transition_complete_keyframe", f89_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f86_arg0.MapVoteItemRandomZM:completeAnimation() --[[ @ 0]]
			f86_arg0.MapVoteItemRandomZM:setTopBottom( 0, 0, 249, 355 ) --[[ @ 0]]
			f86_arg0.MapVoteItemRandomZM:setAlpha( 1 ) --[[ @ 0]]
			f86_local1( f86_arg0.MapVoteItemRandomZM ) --[[ @ 0]]
			local f86_local2 = function ( f92_arg0 )
				f86_arg0.MapVoteItemPreviousZM:beginAnimation( 200 ) --[[ @ 0]]
				f86_arg0.MapVoteItemPreviousZM:setAlpha( 0 ) --[[ @ 0]]
				f86_arg0.MapVoteItemPreviousZM:registerEventHandler( "interrupted_keyframe", f86_arg0.clipInterrupted ) --[[ @ 0]]
				f86_arg0.MapVoteItemPreviousZM:registerEventHandler( "transition_complete_keyframe", f86_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f86_arg0.MapVoteItemPreviousZM:completeAnimation() --[[ @ 0]]
			f86_arg0.MapVoteItemPreviousZM:setAlpha( 1 ) --[[ @ 0]]
			f86_local2( f86_arg0.MapVoteItemPreviousZM ) --[[ @ 0]]
			local f86_local3 = function ( f93_arg0 )
				f86_arg0.MapVoteItemNextZM:beginAnimation( 200 ) --[[ @ 0]]
				f86_arg0.MapVoteItemNextZM:setAlpha( 0 ) --[[ @ 0]]
				f86_arg0.MapVoteItemNextZM:registerEventHandler( "interrupted_keyframe", f86_arg0.clipInterrupted ) --[[ @ 0]]
				f86_arg0.MapVoteItemNextZM:registerEventHandler( "transition_complete_keyframe", f86_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f86_arg0.MapVoteItemNextZM:completeAnimation() --[[ @ 0]]
			f86_arg0.MapVoteItemNextZM:setAlpha( 1 ) --[[ @ 0]]
			f86_local3( f86_arg0.MapVoteItemNextZM ) --[[ @ 0]]
		end,
		DefaultState = function ( f94_arg0, f94_arg1 )
			f94_arg0:__resetProperties() --[[ @ 0]]
			f94_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			local f94_local0 = function ( f95_arg0 )
				f94_arg0.MapVoteItemRandomZM:beginAnimation( 400 ) --[[ @ 0]]
				f94_arg0.MapVoteItemRandomZM:setAlpha( 0 ) --[[ @ 0]]
				f94_arg0.MapVoteItemRandomZM:registerEventHandler( "interrupted_keyframe", f94_arg0.clipInterrupted ) --[[ @ 0]]
				f94_arg0.MapVoteItemRandomZM:registerEventHandler( "transition_complete_keyframe", f94_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f94_arg0.MapVoteItemRandomZM:completeAnimation() --[[ @ 0]]
			f94_arg0.MapVoteItemRandomZM:setAlpha( 1 ) --[[ @ 0]]
			f94_local0( f94_arg0.MapVoteItemRandomZM ) --[[ @ 0]]
			local f94_local1 = function ( f96_arg0 )
				f94_arg0.MapVoteItemPreviousZM:beginAnimation( 400 ) --[[ @ 0]]
				f94_arg0.MapVoteItemPreviousZM:setAlpha( 0 ) --[[ @ 0]]
				f94_arg0.MapVoteItemPreviousZM:registerEventHandler( "interrupted_keyframe", f94_arg0.clipInterrupted ) --[[ @ 0]]
				f94_arg0.MapVoteItemPreviousZM:registerEventHandler( "transition_complete_keyframe", f94_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f94_arg0.MapVoteItemPreviousZM:completeAnimation() --[[ @ 0]]
			f94_arg0.MapVoteItemPreviousZM:setAlpha( 1 ) --[[ @ 0]]
			f94_local1( f94_arg0.MapVoteItemPreviousZM ) --[[ @ 0]]
			local f94_local2 = function ( f97_arg0 )
				f94_arg0.MapVoteItemNextZM:beginAnimation( 400 ) --[[ @ 0]]
				f94_arg0.MapVoteItemNextZM:setAlpha( 0 ) --[[ @ 0]]
				f94_arg0.MapVoteItemNextZM:registerEventHandler( "interrupted_keyframe", f94_arg0.clipInterrupted ) --[[ @ 0]]
				f94_arg0.MapVoteItemNextZM:registerEventHandler( "transition_complete_keyframe", f94_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f94_arg0.MapVoteItemNextZM:completeAnimation() --[[ @ 0]]
			f94_arg0.MapVoteItemNextZM:setAlpha( 1 ) --[[ @ 0]]
			f94_local2( f94_arg0.MapVoteItemNextZM ) --[[ @ 0]]
			local f94_local3 = function ( f98_arg0 )
				f94_arg0.LobbyStatus:beginAnimation( 400 ) --[[ @ 0]]
				f94_arg0.LobbyStatus:setAlpha( 0 ) --[[ @ 0]]
				f94_arg0.LobbyStatus:registerEventHandler( "interrupted_keyframe", f94_arg0.clipInterrupted ) --[[ @ 0]]
				f94_arg0.LobbyStatus:registerEventHandler( "transition_complete_keyframe", f94_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f94_arg0.LobbyStatus:completeAnimation() --[[ @ 0]]
			f94_arg0.LobbyStatus:setAlpha( 1 ) --[[ @ 0]]
			f94_local3( f94_arg0.LobbyStatus ) --[[ @ 0]]
		end
	},
	MapVoteChosenNext = {
		DefaultClip = function ( f99_arg0, f99_arg1 )
			f99_arg0:__resetProperties() --[[ @ 0]]
			f99_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f99_arg0.DirectorMapGameTypeAndDifficulty:completeAnimation() --[[ @ 0]]
			f99_arg0.DirectorMapGameTypeAndDifficulty:setAlpha( 1 ) --[[ @ 0]]
			f99_arg0.clipFinished( f99_arg0.DirectorMapGameTypeAndDifficulty ) --[[ @ 0]]
			f99_arg0.MapVoteItemRandomZM:completeAnimation() --[[ @ 0]]
			f99_arg0.MapVoteItemRandomZM:setAlpha( 0 ) --[[ @ 0]]
			f99_arg0.clipFinished( f99_arg0.MapVoteItemRandomZM ) --[[ @ 0]]
			f99_arg0.MapVoteItemPreviousZM:completeAnimation() --[[ @ 0]]
			f99_arg0.MapVoteItemPreviousZM:setAlpha( 0 ) --[[ @ 0]]
			f99_arg0.clipFinished( f99_arg0.MapVoteItemPreviousZM ) --[[ @ 0]]
			f99_arg0.MapVoteItemNextZM:completeAnimation() --[[ @ 0]]
			f99_arg0.MapVoteItemNextZM:setAlpha( 0 ) --[[ @ 0]]
			f99_arg0.clipFinished( f99_arg0.MapVoteItemNextZM ) --[[ @ 0]]
		end
	},
	MapVoteChosenPrevious = {
		DefaultClip = function ( f100_arg0, f100_arg1 )
			f100_arg0:__resetProperties() --[[ @ 0]]
			f100_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f100_arg0.DirectorMapGameTypeAndDifficulty:completeAnimation() --[[ @ 0]]
			f100_arg0.DirectorMapGameTypeAndDifficulty:setAlpha( 1 ) --[[ @ 0]]
			f100_arg0.clipFinished( f100_arg0.DirectorMapGameTypeAndDifficulty ) --[[ @ 0]]
			f100_arg0.MapVoteItemRandomZM:completeAnimation() --[[ @ 0]]
			f100_arg0.MapVoteItemRandomZM:setAlpha( 0 ) --[[ @ 0]]
			f100_arg0.clipFinished( f100_arg0.MapVoteItemRandomZM ) --[[ @ 0]]
			f100_arg0.MapVoteItemPreviousZM:completeAnimation() --[[ @ 0]]
			f100_arg0.MapVoteItemPreviousZM:setAlpha( 0 ) --[[ @ 0]]
			f100_arg0.clipFinished( f100_arg0.MapVoteItemPreviousZM ) --[[ @ 0]]
			f100_arg0.MapVoteItemNextZM:completeAnimation() --[[ @ 0]]
			f100_arg0.MapVoteItemNextZM:setAlpha( 0 ) --[[ @ 0]]
			f100_arg0.clipFinished( f100_arg0.MapVoteItemNextZM ) --[[ @ 0]]
		end
	},
	MapVoteChosenRandom = {
		DefaultClip = function ( f101_arg0, f101_arg1 )
			f101_arg0:__resetProperties() --[[ @ 0]]
			f101_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f101_arg0.DirectorMapGameTypeAndDifficulty:completeAnimation() --[[ @ 0]]
			f101_arg0.DirectorMapGameTypeAndDifficulty:setAlpha( 1 ) --[[ @ 0]]
			f101_arg0.clipFinished( f101_arg0.DirectorMapGameTypeAndDifficulty ) --[[ @ 0]]
			f101_arg0.MapVoteItemRandomZM:completeAnimation() --[[ @ 0]]
			f101_arg0.MapVoteItemRandomZM:setAlpha( 0 ) --[[ @ 0]]
			f101_arg0.clipFinished( f101_arg0.MapVoteItemRandomZM ) --[[ @ 0]]
			f101_arg0.MapVoteItemPreviousZM:completeAnimation() --[[ @ 0]]
			f101_arg0.MapVoteItemPreviousZM:setAlpha( 0 ) --[[ @ 0]]
			f101_arg0.clipFinished( f101_arg0.MapVoteItemPreviousZM ) --[[ @ 0]]
			f101_arg0.MapVoteItemNextZM:completeAnimation() --[[ @ 0]]
			f101_arg0.MapVoteItemNextZM:setAlpha( 0 ) --[[ @ 0]]
			f101_arg0.clipFinished( f101_arg0.MapVoteItemNextZM ) --[[ @ 0]]
		end
	},
	SelectedMap = {
		DefaultClip = function ( f102_arg0, f102_arg1 )
			f102_arg0:__resetProperties() --[[ @ 0]]
			f102_arg0:setupElementClipCounter( 5 ) --[[ @ 0]]
			local f102_local0 = function ( f103_arg0 )
				f102_arg0.DirectorMapGameTypeAndDifficulty:beginAnimation( 500, Enum[@"hash_1F50FFF429AB1890"][@"hash_66F6186B702830BC"] ) --[[ @ 0]]
				f102_arg0.DirectorMapGameTypeAndDifficulty:setTopBottom( 0, 0, 175, 355 ) --[[ @ 0]]
				f102_arg0.DirectorMapGameTypeAndDifficulty:registerEventHandler( "interrupted_keyframe", f102_arg0.clipInterrupted ) --[[ @ 0]]
				f102_arg0.DirectorMapGameTypeAndDifficulty:registerEventHandler( "transition_complete_keyframe", f102_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f102_arg0.DirectorMapGameTypeAndDifficulty:completeAnimation() --[[ @ 0]]
			f102_arg0.DirectorMapGameTypeAndDifficulty:setTopBottom( 0, 0, 37, 143 ) --[[ @ 0]]
			f102_arg0.DirectorMapGameTypeAndDifficulty:setAlpha( 1 ) --[[ @ 0]]
			f102_local0( f102_arg0.DirectorMapGameTypeAndDifficulty ) --[[ @ 0]]
			f102_arg0.MapVoteItemRandomZM:completeAnimation() --[[ @ 0]]
			f102_arg0.MapVoteItemRandomZM:setAlpha( 0 ) --[[ @ 0]]
			f102_arg0.clipFinished( f102_arg0.MapVoteItemRandomZM ) --[[ @ 0]]
			f102_arg0.MapVoteItemPreviousZM:completeAnimation() --[[ @ 0]]
			f102_arg0.MapVoteItemPreviousZM:setAlpha( 0 ) --[[ @ 0]]
			f102_arg0.clipFinished( f102_arg0.MapVoteItemPreviousZM ) --[[ @ 0]]
			f102_arg0.MapVoteItemNextZM:completeAnimation() --[[ @ 0]]
			f102_arg0.MapVoteItemNextZM:setAlpha( 0 ) --[[ @ 0]]
			f102_arg0.clipFinished( f102_arg0.MapVoteItemNextZM ) --[[ @ 0]]
			local f102_local1 = function ( f104_arg0 )
				f102_arg0.LobbyStatus:beginAnimation( 500, Enum[@"hash_1F50FFF429AB1890"][@"hash_66F6186B702830BC"] ) --[[ @ 0]]
				f102_arg0.LobbyStatus:setTopBottom( 0, 0, 150, 170 ) --[[ @ 0]]
				f102_arg0.LobbyStatus:registerEventHandler( "interrupted_keyframe", f102_arg0.clipInterrupted ) --[[ @ 0]]
				f102_arg0.LobbyStatus:registerEventHandler( "transition_complete_keyframe", f102_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f102_arg0.LobbyStatus:completeAnimation() --[[ @ 0]]
			f102_arg0.LobbyStatus:setTopBottom( 0, 0, 12, 32 ) --[[ @ 0]]
			f102_local1( f102_arg0.LobbyStatus ) --[[ @ 0]]
		end,
		DefaultState = function ( f105_arg0, f105_arg1 )
			f105_arg0:__resetProperties() --[[ @ 0]]
			f105_arg0:setupElementClipCounter( 5 ) --[[ @ 0]]
			local f105_local0 = function ( f106_arg0 )
				f105_arg0.DirectorMapGameTypeAndDifficulty:beginAnimation( 400 ) --[[ @ 0]]
				f105_arg0.DirectorMapGameTypeAndDifficulty:setAlpha( 0 ) --[[ @ 0]]
				f105_arg0.DirectorMapGameTypeAndDifficulty:registerEventHandler( "interrupted_keyframe", f105_arg0.clipInterrupted ) --[[ @ 0]]
				f105_arg0.DirectorMapGameTypeAndDifficulty:registerEventHandler( "transition_complete_keyframe", f105_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f105_arg0.DirectorMapGameTypeAndDifficulty:completeAnimation() --[[ @ 0]]
			f105_arg0.DirectorMapGameTypeAndDifficulty:setTopBottom( 0, 0, 175, 355 ) --[[ @ 0]]
			f105_arg0.DirectorMapGameTypeAndDifficulty:setAlpha( 1 ) --[[ @ 0]]
			f105_local0( f105_arg0.DirectorMapGameTypeAndDifficulty ) --[[ @ 0]]
			f105_arg0.MapVoteItemRandomZM:completeAnimation() --[[ @ 0]]
			f105_arg0.MapVoteItemRandomZM:setAlpha( 0 ) --[[ @ 0]]
			f105_arg0.clipFinished( f105_arg0.MapVoteItemRandomZM ) --[[ @ 0]]
			f105_arg0.MapVoteItemPreviousZM:completeAnimation() --[[ @ 0]]
			f105_arg0.MapVoteItemPreviousZM:setAlpha( 0 ) --[[ @ 0]]
			f105_arg0.clipFinished( f105_arg0.MapVoteItemPreviousZM ) --[[ @ 0]]
			f105_arg0.MapVoteItemNextZM:completeAnimation() --[[ @ 0]]
			f105_arg0.MapVoteItemNextZM:setAlpha( 0 ) --[[ @ 0]]
			f105_arg0.clipFinished( f105_arg0.MapVoteItemNextZM ) --[[ @ 0]]
			local f105_local1 = function ( f107_arg0 )
				f105_arg0.LobbyStatus:beginAnimation( 400 ) --[[ @ 0]]
				f105_arg0.LobbyStatus:setAlpha( 0 ) --[[ @ 0]]
				f105_arg0.LobbyStatus:registerEventHandler( "interrupted_keyframe", f105_arg0.clipInterrupted ) --[[ @ 0]]
				f105_arg0.LobbyStatus:registerEventHandler( "transition_complete_keyframe", f105_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f105_arg0.LobbyStatus:completeAnimation() --[[ @ 0]]
			f105_arg0.LobbyStatus:setTopBottom( 0, 0, 150, 170 ) --[[ @ 0]]
			f105_arg0.LobbyStatus:setAlpha( 1 ) --[[ @ 0]]
			f105_local1( f105_arg0.LobbyStatus ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.MapVoteZM.__onClose = function ( f108_arg0 )
	f108_arg0.DirectorMapGameTypeAndDifficulty:close() --[[ @ 0]]
	f108_arg0.MapVoteItemRandomZM:close() --[[ @ 0]]
	f108_arg0.MapVoteItemPreviousZM:close() --[[ @ 0]]
	f108_arg0.MapVoteItemNextZM:close() --[[ @ 0]]
	f108_arg0.LobbyStatus:close() --[[ @ 0]]
end
 --[[ @ 0]]
