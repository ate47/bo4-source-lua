-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:48
CoD.ZMPerk_ModifierInfo = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.ZMPerk_ModifierInfo.__defaultWidth = 400 --[[ @ 0]]
CoD.ZMPerk_ModifierInfo.__defaultHeight = 64 --[[ @ 0]]
CoD.ZMPerk_ModifierInfo.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.ZMPerk_ModifierInfo ) --[[ @ 0]]
	self.id = "ZMPerk_ModifierInfo" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local ModifierDescription = LUI.UIText.new( 0, 0, 5, 365, 0, 0, 50, 66 ) --[[ @ 0]]
	ModifierDescription:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	ModifierDescription:setText( "" ) --[[ @ 0]]
	ModifierDescription:setTTF( "dinnext_regular" ) --[[ @ 0]]
	ModifierDescription:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	ModifierDescription:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	self:addElement( ModifierDescription ) --[[ @ 0]]
	self.ModifierDescription = ModifierDescription --[[ @ 0]]
	
	local ModifierName = LUI.UIText.new( 0, 0, 5, 365, 0, 0, 15, 35 ) --[[ @ 0]]
	ModifierName:setRGB( 0.58, 0.85, 1 ) --[[ @ 0]]
	ModifierName:setText( LocalizeToUpperString( @"hash_0" ) ) --[[ @ 0]]
	ModifierName:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	ModifierName:setLetterSpacing( 4 ) --[[ @ 0]]
	ModifierName:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	ModifierName:setAlignment( Enum[@"luialignment"][@"lui_alignment_bottom"] ) --[[ @ 0]]
	self:addElement( ModifierName ) --[[ @ 0]]
	self.ModifierName = ModifierName --[[ @ 0]]
	
	local Spacer = LUI.UIImage.new( 0, 0, 0, 3, 0, 1, 0, 0 ) --[[ @ 0]]
	Spacer:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( Spacer ) --[[ @ 0]]
	self.Spacer = Spacer --[[ @ 0]]
	
	local SubHeaderDivider = LUI.UIImage.new( 0, 0, -18, 372, 0, 0, 39, 40 ) --[[ @ 0]]
	SubHeaderDivider:setRGB( 0.58, 0.58, 0.58 ) --[[ @ 0]]
	SubHeaderDivider:setAlpha( 0.25 ) --[[ @ 0]]
	SubHeaderDivider:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_wipe_delta_normal" ) ) --[[ @ 0]]
	SubHeaderDivider:setShaderVector( 0, 0, 1, 0, 0 ) --[[ @ 0]]
	SubHeaderDivider:setShaderVector( 1, 0, 1.24, 0, 0 ) --[[ @ 0]]
	SubHeaderDivider:setShaderVector( 2, 0, 1, 0, 0 ) --[[ @ 0]]
	SubHeaderDivider:setShaderVector( 3, 0, 0, 0, 0 ) --[[ @ 0]]
	SubHeaderDivider:setShaderVector( 4, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( SubHeaderDivider ) --[[ @ 0]]
	self.SubHeaderDivider = SubHeaderDivider --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.ZMPerk_ModifierInfo.__resetProperties = function ( f2_arg0 )
	f2_arg0.ModifierDescription:completeAnimation() --[[ @ 0]]
	f2_arg0.ModifierName:completeAnimation() --[[ @ 0]]
	f2_arg0.Spacer:completeAnimation() --[[ @ 0]]
	f2_arg0.SubHeaderDivider:completeAnimation() --[[ @ 0]]
	f2_arg0.ModifierDescription:setAlpha( 1 ) --[[ @ 0]]
	f2_arg0.ModifierName:setAlpha( 1 ) --[[ @ 0]]
	f2_arg0.Spacer:setAlpha( 0 ) --[[ @ 0]]
	f2_arg0.SubHeaderDivider:setAlpha( 0.25 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ZMPerk_ModifierInfo.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f3_arg0, f3_arg1 )
			f3_arg0:__resetProperties() --[[ @ 0]]
			f3_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f3_arg0.ModifierDescription:completeAnimation() --[[ @ 0]]
			f3_arg0.ModifierDescription:setAlpha( 0 ) --[[ @ 0]]
			f3_arg0.clipFinished( f3_arg0.ModifierDescription ) --[[ @ 0]]
			f3_arg0.ModifierName:completeAnimation() --[[ @ 0]]
			f3_arg0.ModifierName:setAlpha( 0 ) --[[ @ 0]]
			f3_arg0.clipFinished( f3_arg0.ModifierName ) --[[ @ 0]]
			f3_arg0.Spacer:completeAnimation() --[[ @ 0]]
			f3_arg0.Spacer:setAlpha( 0 ) --[[ @ 0]]
			f3_arg0.clipFinished( f3_arg0.Spacer ) --[[ @ 0]]
			f3_arg0.SubHeaderDivider:completeAnimation() --[[ @ 0]]
			f3_arg0.SubHeaderDivider:setAlpha( 0 ) --[[ @ 0]]
			f3_arg0.clipFinished( f3_arg0.SubHeaderDivider ) --[[ @ 0]]
		end
	},
	Visible = {
		DefaultClip = function ( f4_arg0, f4_arg1 )
			f4_arg0:__resetProperties() --[[ @ 0]]
			f4_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f4_arg0.Spacer:completeAnimation() --[[ @ 0]]
			f4_arg0.Spacer:setAlpha( 0 ) --[[ @ 0]]
			f4_arg0.clipFinished( f4_arg0.Spacer ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
