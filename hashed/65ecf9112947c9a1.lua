-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:50
require( "ui/uieditor/widgets/lobby/common/fe_focusbarcontainer" ) --[[ @ 0]]

local f0_local0 = function ( f1_arg0, f1_arg1, f1_arg2 )
	CoD.Menu.AddButtonCallbackFunction( f1_arg2, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xbb_pscircle"], nil, function ( element, menu, controller, f2_arg3 )
		f1_arg0:processEvent( {
			name = "lose_focus",
			controller = controller
		} ) --[[ @ 0]]
		return f1_arg0:dispatchEventToParent( {
			name = "dropdown_item_cancelled",
			element = f1_arg0
		} )
	end ) --[[ @ 0]]
	CoD.Menu.AddButtonCallbackFunction( f1_arg2, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"], "ui_confirm", function ( element, menu, controller, f3_arg3 )
		if not menu.m_disableNavigation and menu:AcceptGamePadButtonInputFromModelCallback( controller ) then
			f1_arg0:processEvent( {
				name = "lose_focus",
				controller = controller
			} ) --[[ @ 0]]
			return f1_arg0:dispatchEventToParent( {
				name = "dropdown_item_selected",
				element = f1_arg0
			} )
		else
			
		end
	end ) --[[ @ 0]]
	f1_arg0.m_dropdownItem = true --[[ @ 0]]
end
 --[[ @ 0]]
local PostLoadFunc = function ( self, controller, menu )
	if CoD.isPC then
		f0_local0( self, controller, menu ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
CoD.OptionDropdownItem = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.OptionDropdownItem.__defaultWidth = 375 --[[ @ 0]]
CoD.OptionDropdownItem.__defaultHeight = 36 --[[ @ 0]]
CoD.OptionDropdownItem.new = function ( f5_arg0, f5_arg1, f5_arg2, f5_arg3, f5_arg4, f5_arg5, f5_arg6, f5_arg7, f5_arg8, f5_arg9 )
	local self = LUI.UIElement.new( f5_arg2, f5_arg3, f5_arg4, f5_arg5, f5_arg6, f5_arg7, f5_arg8, f5_arg9 ) --[[ @ 0]]
	self:setClass( CoD.OptionDropdownItem ) --[[ @ 0]]
	self.id = "OptionDropdownItem" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	f5_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local fullbacking = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	fullbacking:setRGB( 0, 0, 0 ) --[[ @ 0]]
	self:addElement( fullbacking ) --[[ @ 0]]
	self.fullbacking = fullbacking --[[ @ 0]]
	
	local labelText = LUI.UIText.new( 0, 0, 9, 364, 0, 0, 0, 36 ) --[[ @ 0]]
	labelText:setTTF( "default" ) --[[ @ 0]]
	labelText:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	labelText:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	labelText:linkToElementModel( self, "valueDisplay", true, function ( model )
		local f6_local0 = model:get() --[[ @ 0]]
		if f6_local0 ~= nil then
			labelText:setText( Engine[@"hash_4F9F1239CFD921FE"]( f6_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( labelText ) --[[ @ 0]]
	self.labelText = labelText --[[ @ 0]]
	
	local FocusBarT = CoD.FE_FocusBarContainer.new( f5_arg0, f5_arg1, 0, 1, -3, 3, 0, 0, -1, 5 ) --[[ @ 0]]
	FocusBarT:setAlpha( 0 ) --[[ @ 0]]
	FocusBarT:setZoom( 1 ) --[[ @ 0]]
	self:addElement( FocusBarT ) --[[ @ 0]]
	self.FocusBarT = FocusBarT --[[ @ 0]]
	
	local FocusBarB = CoD.FE_FocusBarContainer.new( f5_arg0, f5_arg1, 0, 1, -3, 3, 1, 1, -3, 3 ) --[[ @ 0]]
	FocusBarB:setAlpha( 0 ) --[[ @ 0]]
	FocusBarB:setZoom( 1 ) --[[ @ 0]]
	self:addElement( FocusBarB ) --[[ @ 0]]
	self.FocusBarB = FocusBarB --[[ @ 0]]
	
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f5_arg1, f5_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.OptionDropdownItem.__resetProperties = function ( f7_arg0 )
	f7_arg0.labelText:completeAnimation() --[[ @ 0]]
	f7_arg0.FocusBarT:completeAnimation() --[[ @ 0]]
	f7_arg0.FocusBarB:completeAnimation() --[[ @ 0]]
	f7_arg0.labelText:setLeftRight( 0, 0, 9, 364 ) --[[ @ 0]]
	f7_arg0.labelText:setTopBottom( 0, 0, 0, 36 ) --[[ @ 0]]
	f7_arg0.labelText:setRGB( 1, 1, 1 ) --[[ @ 0]]
	f7_arg0.labelText:setAlpha( 1 ) --[[ @ 0]]
	f7_arg0.FocusBarT:setAlpha( 0 ) --[[ @ 0]]
	f7_arg0.FocusBarB:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.OptionDropdownItem.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f8_arg0, f8_arg1 )
			f8_arg0:__resetProperties() --[[ @ 0]]
			f8_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f8_arg0.labelText:completeAnimation() --[[ @ 0]]
			f8_arg0.labelText:setRGB( 0.87, 0.37, 0 ) --[[ @ 0]]
			f8_arg0.labelText:setAlpha( 0.75 ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.labelText ) --[[ @ 0]]
		end,
		Focus = function ( f9_arg0, f9_arg1 )
			f9_arg0:__resetProperties() --[[ @ 0]]
			f9_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f9_arg0.labelText:completeAnimation() --[[ @ 0]]
			f9_arg0.labelText:setLeftRight( 0, 0, 9, 360 ) --[[ @ 0]]
			f9_arg0.labelText:setTopBottom( 0, 0, 0, 36 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.labelText ) --[[ @ 0]]
			f9_arg0.FocusBarT:completeAnimation() --[[ @ 0]]
			f9_arg0.FocusBarT:setAlpha( 1 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.FocusBarT ) --[[ @ 0]]
			f9_arg0.FocusBarB:completeAnimation() --[[ @ 0]]
			f9_arg0.FocusBarB:setAlpha( 1 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.FocusBarB ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.OptionDropdownItem.__onClose = function ( f10_arg0 )
	f10_arg0.labelText:close() --[[ @ 0]]
	f10_arg0.FocusBarT:close() --[[ @ 0]]
	f10_arg0.FocusBarB:close() --[[ @ 0]]
end
 --[[ @ 0]]
