-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:50
require( "x64:79b528a05aba52d6" ) --[[ @ 0]]
require( "x64:479a2abecba85306" ) --[[ @ 0]]
require( "x64:193604c7b6b216ac" ) --[[ @ 0]]
require( "x64:3137eb392d404a1a" ) --[[ @ 0]]
require( "ui/uieditor/widgets/director/directorpregamebutton" ) --[[ @ 0]]

CoD.ItemShopFrameInternal = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.ItemShopFrameInternal.__defaultWidth = 1920 --[[ @ 0]]
CoD.ItemShopFrameInternal.__defaultHeight = 1080 --[[ @ 0]]
CoD.ItemShopFrameInternal.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.ItemShopFrameInternal ) --[[ @ 0]]
	self.id = "ItemShopFrameInternal" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	
	local DailyListLabel = CoD.ListLabel.new( f1_arg0, f1_arg1, 0.5, 0.5, -248, 107, 0.5, 0.5, -361, -311 ) --[[ @ 0]]
	DailyListLabel:subscribeToGlobalModel( f1_arg1, "ItemshopRotation", "loot_itemshop_slot3_timer", function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			DailyListLabel.TextBox2:setText( LocalizeIntoStringIfNotEmpty( @"hash_1C0CE2452CF87DB1", f2_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( DailyListLabel ) --[[ @ 0]]
	self.DailyListLabel = DailyListLabel --[[ @ 0]]
	
	local FeaturedListLabel = CoD.ListLabel.new( f1_arg0, f1_arg1, 0.5, 0.5, -835, -593, 0, 0, 178, 228 ) --[[ @ 0]]
	FeaturedListLabel:subscribeToGlobalModel( f1_arg1, "ItemshopRotation", "loot_itemshop_slot1_timer", function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			FeaturedListLabel.TextBox2:setText( LocalizeIntoStringIfNotEmpty( @"hash_1C0CE2452CF87DB1", f3_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( FeaturedListLabel ) --[[ @ 0]]
	self.FeaturedListLabel = FeaturedListLabel --[[ @ 0]]
	
	local FeaturedListLabel2 = CoD.ListLabel.new( f1_arg0, f1_arg1, 0.5, 0.5, -563, -321, 0, 0, 178, 228 ) --[[ @ 0]]
	FeaturedListLabel2:subscribeToGlobalModel( f1_arg1, "ItemshopRotation", "loot_itemshop_slot2_timer", function ( model )
		local f4_local0 = model:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			FeaturedListLabel2.TextBox2:setText( LocalizeIntoStringIfNotEmpty( @"hash_1C0CE2452CF87DB1", f4_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( FeaturedListLabel2 ) --[[ @ 0]]
	self.FeaturedListLabel2 = FeaturedListLabel2 --[[ @ 0]]
	
	local DailyItems = LUI.UIList.new( f1_arg0, f1_arg1, 30, 0, nil, false, false, false, false ) --[[ @ 0]]
	DailyItems:setLeftRight( 0.5, 0.5, -248, 262 ) --[[ @ 0]]
	DailyItems:setTopBottom( 0.5, 0.5, -319, 191 ) --[[ @ 0]]
	DailyItems:setWidgetType( CoD.PurchaseableItem ) --[[ @ 0]]
	DailyItems:setHorizontalCount( 2 ) --[[ @ 0]]
	DailyItems:setVerticalCount( 2 ) --[[ @ 0]]
	DailyItems:setSpacing( 30 ) --[[ @ 0]]
	DailyItems:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	DailyItems:setDataSource( "ItemShopList" ) --[[ @ 0]]
	DailyItems:registerEventHandler( "list_item_gain_focus", function ( element, event )
		local f5_local0 = nil --[[ @ 0]]
		CoD.BlackMarketUtility.ChangeSupplyChainCameraBySelection( f1_arg0, f1_arg1, element ) --[[ @ 0]]
		SetElementModelToFocusedElementModel( f1_arg1, self, element, "SupplyChainDetails" ) --[[ @ 0]]
		return f5_local0
	end ) --[[ @ 0]]
	DailyItems:registerEventHandler( "gain_focus", function ( element, event )
		local f6_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f6_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f6_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		return f6_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( DailyItems, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"], nil, function ( element, menu, controller, model )
		OpenOverlay( self, "ItemShopDetails", controller, {
			_model = element:getModel()
		} ) --[[ @ 0]]
		PlaySoundAlias( "uin_toggle_generic" ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"menu/select", nil, nil ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	DailyItems:subscribeToGlobalModel( f1_arg1, "GlobalModel", "ItemshopRotation.cycled", function ( model )
		local f9_local0 = DailyItems --[[ @ 0]]
		if CoD.ModelUtility.IsGlobalModelValueTrue( "ItemshopRotation.cycled" ) then
			CoD.GridAndListUtility.UpdateDataSource( f9_local0, true, true, true ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( DailyItems ) --[[ @ 0]]
	self.DailyItems = DailyItems --[[ @ 0]]
	
	local FeaturedItems = LUI.UIList.new( f1_arg0, f1_arg1, 30, 0, nil, false, false, false, false ) --[[ @ 0]]
	FeaturedItems:setLeftRight( 0.5, 0.5, -834, -324 ) --[[ @ 0]]
	FeaturedItems:setTopBottom( 0.5, 0.5, -319, 191 ) --[[ @ 0]]
	FeaturedItems:setWidgetType( CoD.PurchaseableItem ) --[[ @ 0]]
	FeaturedItems:setHorizontalCount( 2 ) --[[ @ 0]]
	FeaturedItems:setVerticalCount( 2 ) --[[ @ 0]]
	FeaturedItems:setSpacing( 30 ) --[[ @ 0]]
	FeaturedItems:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	FeaturedItems:setDataSource( "ItemShopFeaturedList" ) --[[ @ 0]]
	FeaturedItems:registerEventHandler( "list_item_gain_focus", function ( element, event )
		local f10_local0 = nil --[[ @ 0]]
		CoD.BlackMarketUtility.ChangeSupplyChainCameraBySelection( f1_arg0, f1_arg1, element ) --[[ @ 0]]
		SetElementModelToFocusedElementModel( f1_arg1, self, element, "SupplyChainDetails" ) --[[ @ 0]]
		return f10_local0
	end ) --[[ @ 0]]
	FeaturedItems:registerEventHandler( "gain_focus", function ( element, event )
		local f11_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f11_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f11_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		return f11_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( FeaturedItems, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"], nil, function ( element, menu, controller, model )
		OpenOverlay( self, "ItemShopDetails", controller, {
			_model = element:getModel()
		} ) --[[ @ 0]]
		PlaySoundAlias( "uin_toggle_generic" ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"menu/purchase", nil, nil ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	FeaturedItems:subscribeToGlobalModel( f1_arg1, "GlobalModel", "ItemshopRotation.cycled", function ( model )
		local f14_local0 = FeaturedItems --[[ @ 0]]
		if CoD.ModelUtility.IsGlobalModelValueTrue( "ItemshopRotation.cycled" ) then
			CoD.GridAndListUtility.UpdateDataSource( f14_local0, true, true, true ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( FeaturedItems ) --[[ @ 0]]
	self.FeaturedItems = FeaturedItems --[[ @ 0]]
	
	local BottomBracket9Slice2 = LUI.UIImage.new( 0.5, 0.5, -255, 270, 0, 0, 176, 185 ) --[[ @ 0]]
	BottomBracket9Slice2:setAlpha( 0.5 ) --[[ @ 0]]
	BottomBracket9Slice2:setZRot( 180 ) --[[ @ 0]]
	BottomBracket9Slice2:setImage( RegisterImage( @"hash_4C325BED3F226657" ) ) --[[ @ 0]]
	BottomBracket9Slice2:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_add" ) ) --[[ @ 0]]
	BottomBracket9Slice2:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	BottomBracket9Slice2:setupNineSliceShader( 16, 4 ) --[[ @ 0]]
	self:addElement( BottomBracket9Slice2 ) --[[ @ 0]]
	self.BottomBracket9Slice2 = BottomBracket9Slice2 --[[ @ 0]]
	
	local TransactionDeepLinkButton = nil --[[ @ 0]]
	
	TransactionDeepLinkButton = CoD.DirectorPreGameButton.new( f1_arg0, f1_arg1, 0.5, 0.5, -835, -605, 0, 0, 921, 991 ) --[[ @ 0]]
	TransactionDeepLinkButton.DirectorCustomStartButton.MiddleText:setText( LocalizeToUpperString( @"hash_44031C820A02E7BA" ) ) --[[ @ 0]]
	TransactionDeepLinkButton.DirectorCustomStartButton.MiddleTextFocus:setText( LocalizeToUpperString( @"hash_44031C820A02E7BA" ) ) --[[ @ 0]]
	TransactionDeepLinkButton:registerEventHandler( "gain_focus", function ( element, event )
		local f15_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f15_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f15_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_none"] ) --[[ @ 0]]
		return f15_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( TransactionDeepLinkButton, f1_arg1, Enum[@"luibutton"][@"lui_key_none"], "ui_confirm", function ( element, menu, controller, model )
		if IsPC() and CoD.PCKoreaUtility.IsInKorea() then
			CoD.PCKoreaUtility.OpenTransactionsDeepLinkBlackmarket( controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsPC() and CoD.PCKoreaUtility.IsInKorea() then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_none"], @"hash_0", nil, "ui_confirm" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( TransactionDeepLinkButton, f1_arg1, Enum[@"luibutton"][@"lui_key_none"], "MOUSE1", function ( element, menu, controller, model )
		if IsPC() and CoD.PCKoreaUtility.IsInKorea() then
			CoD.PCKoreaUtility.OpenTransactionsDeepLinkBlackmarket( controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsPC() and CoD.PCKoreaUtility.IsInKorea() then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_none"], @"hash_0", nil, "MOUSE1" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( TransactionDeepLinkButton ) --[[ @ 0]]
	self.TransactionDeepLinkButton = TransactionDeepLinkButton --[[ @ 0]]
	
	local infoBracketBot = LUI.UIImage.new( 0.5, 0.5, -841, -316, 0, 0, 176, 184 ) --[[ @ 0]]
	infoBracketBot:setRGB( 0.98, 1, 0.89 ) --[[ @ 0]]
	infoBracketBot:setAlpha( 0.35 ) --[[ @ 0]]
	infoBracketBot:setZRot( 180 ) --[[ @ 0]]
	infoBracketBot:setImage( RegisterImage( @"hash_4C325BED3F226657" ) ) --[[ @ 0]]
	infoBracketBot:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_add" ) ) --[[ @ 0]]
	infoBracketBot:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	infoBracketBot:setupNineSliceShader( 16, 4 ) --[[ @ 0]]
	self:addElement( infoBracketBot ) --[[ @ 0]]
	self.infoBracketBot = infoBracketBot --[[ @ 0]]
	
	local SupplyChainDetails = CoD.ContractSupplyChainDetails.new( f1_arg0, f1_arg1, 0.5, 0.5, 310, 910, 0, 0, -79, 1001 ) --[[ @ 0]]
	SupplyChainDetails:mergeStateConditions( {
		{
			stateName = "NoInfoPanel",
			condition = function ( menu, element, event )
				local f20_local0 --[[ @ 0]]
				if not IsMouseOrKeyboard( f1_arg1 ) then
					f20_local0 = AlwaysFalse() --[[ @ 0]]
				else
					f20_local0 = false --[[ @ 0]]
				end
				return f20_local0
			end
		}
	} ) --[[ @ 0]]
	SupplyChainDetails:linkToElementModel( SupplyChainDetails, "name", true, function ( model )
		f1_arg0:updateElementState( SupplyChainDetails, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "name"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	SupplyChainDetails:appendEventHandler( "input_source_changed", function ( f22_arg0, f22_arg1 )
		f22_arg1.menu = f22_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( SupplyChainDetails, f22_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local TextBox = SupplyChainDetails --[[ @ 0]]
	local TextBox2 = SupplyChainDetails.subscribeToModel --[[ @ 0]]
	local f1_local12 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	TextBox2( TextBox, f1_local12.LastInput, function ( f23_arg0 )
		f1_arg0:updateElementState( SupplyChainDetails, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f23_arg0:get(),
			modelName = "LastInput"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	SupplyChainDetails:linkToElementModel( SupplyChainDetails, "character", true, function ( model )
		f1_arg0:updateElementState( SupplyChainDetails, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "character"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	SupplyChainDetails:linkToElementModel( SupplyChainDetails, "weaponRef", true, function ( model )
		f1_arg0:updateElementState( SupplyChainDetails, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "weaponRef"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( SupplyChainDetails ) --[[ @ 0]]
	self.SupplyChainDetails = SupplyChainDetails --[[ @ 0]]
	
	TextBox2 = LUI.UIText.new( 0.5, 0.5, -835, -480, 0, 0, 152, 170 ) --[[ @ 0]]
	TextBox2:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	TextBox2:setText( LocalizeToUpperString( @"menu/featured_items" ) ) --[[ @ 0]]
	TextBox2:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	TextBox2:setLetterSpacing( 4 ) --[[ @ 0]]
	TextBox2:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	TextBox2:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	self:addElement( TextBox2 ) --[[ @ 0]]
	self.TextBox2 = TextBox2 --[[ @ 0]]
	
	TextBox = LUI.UIText.new( 0.5, 0.5, -249, 106, 0, 0, 152, 170 ) --[[ @ 0]]
	TextBox:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	TextBox:setText( LocalizeToUpperString( @"menu/daily_items" ) ) --[[ @ 0]]
	TextBox:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	TextBox:setLetterSpacing( 4 ) --[[ @ 0]]
	TextBox:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	TextBox:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	self:addElement( TextBox ) --[[ @ 0]]
	self.TextBox = TextBox --[[ @ 0]]
	
	self:subscribeToGlobalModel( f1_arg1, "GlobalModel", "RefreshDWInventoryMenu", function ( model )
		local f26_local0 = self --[[ @ 0]]
		UpdateDataSource( self, self.DailyItems, f1_arg1 ) --[[ @ 0]]
		UpdateDataSource( self, self.FeaturedItems, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	DailyItems.id = "DailyItems" --[[ @ 0]]
	FeaturedItems.id = "FeaturedItems" --[[ @ 0]]
	if CoD.isPC then
		TransactionDeepLinkButton.id = "TransactionDeepLinkButton" --[[ @ 0]]
	end
	if CoD.isPC then
		SupplyChainDetails.id = "SupplyChainDetails" --[[ @ 0]]
	end
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	f1_local12 = self --[[ @ 0]]
	SendClientScriptMenuChangeNotifyWithState( f1_arg1, f1_arg0, true, "character" ) --[[ @ 0]]
	f1_local12 = TransactionDeepLinkButton --[[ @ 0]]
	if IsPC() and not CoD.PCKoreaUtility.ShowTransactionHistoryButton() then
		ReplaceElementWithFake( self, "TransactionDeepLinkButton" ) --[[ @ 0]]
	end
	return self
end
 --[[ @ 0]]
CoD.ItemShopFrameInternal.__onClose = function ( f27_arg0 )
	f27_arg0.DailyListLabel:close() --[[ @ 0]]
	f27_arg0.FeaturedListLabel:close() --[[ @ 0]]
	f27_arg0.FeaturedListLabel2:close() --[[ @ 0]]
	f27_arg0.DailyItems:close() --[[ @ 0]]
	f27_arg0.FeaturedItems:close() --[[ @ 0]]
	f27_arg0.TransactionDeepLinkButton:close() --[[ @ 0]]
	f27_arg0.SupplyChainDetails:close() --[[ @ 0]]
end
 --[[ @ 0]]
