-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:33
require( "x64:6395c63182187e85" ) --[[ @ 0]]

CoD.ZMTalismanListItem = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.ZMTalismanListItem.__defaultWidth = 142 --[[ @ 0]]
CoD.ZMTalismanListItem.__defaultHeight = 138 --[[ @ 0]]
CoD.ZMTalismanListItem.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.ZMTalismanListItem ) --[[ @ 0]]
	self.id = "ZMTalismanListItem" --[[ @ 0]]
	self.soundSet = "FrontendMain" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local Talisman = CoD.ZMTalismanSlotInternal.new( f1_arg0, f1_arg1, 0.5, 0.5, -80, 80, 0.5, 0.5, -80, 80 ) --[[ @ 0]]
	Talisman:mergeStateConditions( {
		{
			stateName = "Equipped",
			condition = function ( menu, element, event )
				return CoD.ZMTalismanUtility.IsTalismanEqipped( menu, element, f1_arg1 )
			end
		},
		{
			stateName = "NoConsumablesRemaining",
			condition = function ( menu, element, event )
				return not CoD.CACUtility.DoesCACItemHaveConsumablesRemaining( menu, element, f1_arg1, Enum[@"hash_6EB546760F890D2"][@"hash_15544C104CD15F10"] )
			end
		}
	} ) --[[ @ 0]]
	local f1_local2 = Talisman --[[ @ 0]]
	local f1_local3 = Talisman.subscribeToModel --[[ @ 0]]
	local f1_local4 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local3( f1_local2, f1_local4["TalismanSelect.Update"], function ( f4_arg0 )
		f1_arg0:updateElementState( Talisman, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f4_arg0:get(),
			modelName = "TalismanSelect.Update"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	Talisman:linkToElementModel( Talisman, "itemIndex", true, function ( model )
		f1_arg0:updateElementState( Talisman, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "itemIndex"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	Talisman:linkToElementModel( self, nil, false, function ( model )
		Talisman:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	Talisman:linkToElementModel( self, nil, false, function ( model )
		Talisman.EquipIndicator:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	Talisman:linkToElementModel( self, "image", true, function ( model )
		local f8_local0 = model:get() --[[ @ 0]]
		if f8_local0 ~= nil then
			Talisman.itemImage:setImage( CoD.BaseUtility.AlreadyRegistered( f8_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	Talisman:linkToElementModel( self, nil, false, function ( model )
		Talisman.ConsumableCounter:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	Talisman:linkToElementModel( self, "displayName", true, function ( model )
		local f10_local0 = model:get() --[[ @ 0]]
		if f10_local0 ~= nil then
			Talisman.itemName:setText( Engine[@"hash_4F9F1239CFD921FE"]( f10_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Talisman ) --[[ @ 0]]
	self.Talisman = Talisman --[[ @ 0]]
	
	Talisman.id = "Talisman" --[[ @ 0]]
	self.__defaultFocus = Talisman --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.ZMTalismanListItem.__resetProperties = function ( f11_arg0 )
	f11_arg0.Talisman:completeAnimation() --[[ @ 0]]
	f11_arg0.Talisman:setScale( 1, 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ZMTalismanListItem.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f12_arg0, f12_arg1 )
			f12_arg0:__resetProperties() --[[ @ 0]]
			f12_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end,
		ChildFocus = function ( f13_arg0, f13_arg1 )
			f13_arg0:__resetProperties() --[[ @ 0]]
			f13_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f13_arg0.Talisman:completeAnimation() --[[ @ 0]]
			f13_arg0.Talisman:setScale( 1.03, 1.03 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.Talisman ) --[[ @ 0]]
		end,
		GainChildFocus = function ( f14_arg0, f14_arg1 )
			f14_arg0:__resetProperties() --[[ @ 0]]
			f14_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f14_local0 = function ( f15_arg0 )
				f14_arg0.Talisman:beginAnimation( 200 ) --[[ @ 0]]
				f14_arg0.Talisman:setScale( 1.03, 1.03 ) --[[ @ 0]]
				f14_arg0.Talisman:registerEventHandler( "interrupted_keyframe", f14_arg0.clipInterrupted ) --[[ @ 0]]
				f14_arg0.Talisman:registerEventHandler( "transition_complete_keyframe", f14_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f14_arg0.Talisman:completeAnimation() --[[ @ 0]]
			f14_arg0.Talisman:setScale( 1, 1 ) --[[ @ 0]]
			f14_local0( f14_arg0.Talisman ) --[[ @ 0]]
		end,
		LoseChildFocus = function ( f16_arg0, f16_arg1 )
			f16_arg0:__resetProperties() --[[ @ 0]]
			f16_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f16_local0 = function ( f17_arg0 )
				f16_arg0.Talisman:beginAnimation( 200 ) --[[ @ 0]]
				f16_arg0.Talisman:setScale( 1, 1 ) --[[ @ 0]]
				f16_arg0.Talisman:registerEventHandler( "interrupted_keyframe", f16_arg0.clipInterrupted ) --[[ @ 0]]
				f16_arg0.Talisman:registerEventHandler( "transition_complete_keyframe", f16_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f16_arg0.Talisman:completeAnimation() --[[ @ 0]]
			f16_arg0.Talisman:setScale( 1.03, 1.03 ) --[[ @ 0]]
			f16_local0( f16_arg0.Talisman ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.ZMTalismanListItem.__onClose = function ( f18_arg0 )
	f18_arg0.Talisman:close() --[[ @ 0]]
end
 --[[ @ 0]]
