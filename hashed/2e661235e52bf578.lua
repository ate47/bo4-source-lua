-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:33
require( "ui/uieditor/widgets/zmfrontend/cac/zmattachmentslot" ) --[[ @ 0]]

CoD.ZMItemGridButton = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.ZMItemGridButton.__defaultWidth = 292 --[[ @ 0]]
CoD.ZMItemGridButton.__defaultHeight = 146 --[[ @ 0]]
CoD.ZMItemGridButton.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	CoD.BaseUtility.InitControllerModelIfNotSet( f1_arg1, "weaponSelectItemIndex", 0 ) --[[ @ 0]]
	self:setClass( CoD.ZMItemGridButton ) --[[ @ 0]]
	self.id = "ZMItemGridButton" --[[ @ 0]]
	self.soundSet = "FrontendMain" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local ZMItem = CoD.ZMAttachmentSlot.new( f1_arg0, f1_arg1, 0, 0, 0, 292, 0, 0, 0, 146 ) --[[ @ 0]]
	ZMItem:mergeStateConditions( {
		{
			stateName = "LootNotOwned",
			condition = function ( menu, element, event )
				return CoD.CACUtility.IsCACBlackMarketItemLocked( menu, element, f1_arg1 )
			end
		},
		{
			stateName = "NotAvailable",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		},
		{
			stateName = "Locked",
			condition = function ( menu, element, event )
				return CoD.CACUtility.IsCACItemLocked( menu, element, f1_arg1 )
			end
		},
		{
			stateName = "Equipped",
			condition = function ( menu, element, event )
				return CoD.CACUtility.IsItemEquippedInCurrentSlot( menu, element, f1_arg1 )
			end
		}
	} ) --[[ @ 0]]
	ZMItem:linkToElementModel( ZMItem, "refHash", true, function ( model )
		f1_arg0:updateElementState( ZMItem, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "refHash"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	ZMItem:linkToElementModel( ZMItem, "globalItemIndex", true, function ( model )
		f1_arg0:updateElementState( ZMItem, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "globalItemIndex"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	ZMItem:linkToElementModel( ZMItem, "itemIndex", true, function ( model )
		f1_arg0:updateElementState( ZMItem, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "itemIndex"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	ZMItem:linkToElementModel( self, nil, false, function ( model )
		ZMItem:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	ZMItem.AttachmentImage.__Image = function ( f10_arg0 )
		local f10_local0 = f10_arg0:get() --[[ @ 0]]
		if f10_local0 ~= nil then
			ZMItem.AttachmentImage:setImage( CoD.BaseUtility.AlreadyRegistered( CoD.ZMLoadoutUtility.GetEquippedSignatureWeaponImage( self:getModel(), f1_arg1, f10_local0 ) ) ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	ZMItem:linkToElementModel( self, "itemIndex", true, ZMItem.AttachmentImage.__Image ) --[[ @ 0]]
	ZMItem.AttachmentImage.__Image_FullPath = function ()
		local f11_local0 = self:getModel() --[[ @ 0]]
		if f11_local0 then
			f11_local0 = self:getModel() --[[ @ 0]]
			f11_local0 = f11_local0.itemIndex --[[ @ 0]]
		end
		if f11_local0 then
			ZMItem.AttachmentImage.__Image( f11_local0 ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	ZMItem:linkToElementModel( self, nil, false, function ( model )
		ZMItem.ItemHintTextBreadcrumb:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	ZMItem:linkToElementModel( self, "hintText", true, function ( model )
		local f13_local0 = model:get() --[[ @ 0]]
		if f13_local0 ~= nil then
			ZMItem.ItemHintTextBreadcrumb.textCenterAlign:setText( f13_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	ZMItem:linkToElementModel( self, nil, false, function ( model )
		ZMItem.ItemHintTextBreadcrumb.Breadcrumb:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	ZMItem.AttachmentName.__Name = function ( f15_arg0 )
		local f15_local0 = f15_arg0:get() --[[ @ 0]]
		if f15_local0 ~= nil then
			ZMItem.AttachmentName:setText( LocalizeToUpperString( CoD.ZMLoadoutUtility.GetEquippedSignatureWeaponName( self:getModel(), f1_arg1, f15_local0 ) ) ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	ZMItem:linkToElementModel( self, "itemIndex", true, ZMItem.AttachmentName.__Name ) --[[ @ 0]]
	ZMItem.AttachmentName.__Name_FullPath = function ()
		local f16_local0 = self:getModel() --[[ @ 0]]
		if f16_local0 then
			f16_local0 = self:getModel() --[[ @ 0]]
			f16_local0 = f16_local0.itemIndex --[[ @ 0]]
		end
		if f16_local0 then
			ZMItem.AttachmentName.__Name( f16_local0 ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	self:addElement( ZMItem ) --[[ @ 0]]
	self.ZMItem = ZMItem --[[ @ 0]]
	
	local f1_local2 = ZMItem --[[ @ 0]]
	local f1_local3 = ZMItem.subscribeToModel --[[ @ 0]]
	local f1_local4 = DataSources.WeaponPersonalization.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local3( f1_local2, f1_local4.listUpdate, ZMItem.AttachmentImage.__Image_FullPath ) --[[ @ 0]]
	ZMItem:linkToElementModel( self, "useVariantSlot", true, ZMItem.AttachmentImage.__Image_FullPath ) --[[ @ 0]]
	ZMItem:linkToElementModel( self, "image", true, ZMItem.AttachmentImage.__Image_FullPath ) --[[ @ 0]]
	f1_local2 = ZMItem --[[ @ 0]]
	f1_local3 = ZMItem.subscribeToModel --[[ @ 0]]
	f1_local4 = DataSources.WeaponPersonalization.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local3( f1_local2, f1_local4.listUpdate, ZMItem.AttachmentName.__Name_FullPath ) --[[ @ 0]]
	ZMItem:linkToElementModel( self, "useVariantSlot", true, ZMItem.AttachmentName.__Name_FullPath ) --[[ @ 0]]
	ZMItem:linkToElementModel( self, "displayName", true, ZMItem.AttachmentName.__Name_FullPath ) --[[ @ 0]]
	self:mergeStateConditions( {
		{
			stateName = "PC",
			condition = function ( menu, element, event )
				return IsPC()
			end
		},
		{
			stateName = "Equipped",
			condition = function ( menu, element, event )
				return true
			end
		}
	} ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( self, "childFocusGained", function ( element )
		CoD.BaseUtility.SetControllerModelToSelfModelValue( f1_arg1, element, "weaponSelectItemIndex", "itemIndex" ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:linkToElementModel( self, "itemIndex", true, function ( model )
		SetElementProperty( self, "_itemIndex", model:get() ) --[[ @ 0]]
	end ) --[[ @ 0]]
	ZMItem.id = "ZMItem" --[[ @ 0]]
	self.__defaultFocus = ZMItem --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PreLoadFunc then
		PreLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	f1_local3 = self --[[ @ 0]]
	if IsPC() then
		CoD.PCUtility.SetForceMouseEventDispatch( self, true ) --[[ @ 0]]
	end
	return self
end
 --[[ @ 0]]
CoD.ZMItemGridButton.__resetProperties = function ( f21_arg0 )
	f21_arg0.ZMItem:completeAnimation() --[[ @ 0]]
	f21_arg0.ZMItem:setScale( 1, 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ZMItemGridButton.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f22_arg0, f22_arg1 )
			f22_arg0:__resetProperties() --[[ @ 0]]
			f22_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end,
		ChildFocus = function ( f23_arg0, f23_arg1 )
			f23_arg0:__resetProperties() --[[ @ 0]]
			f23_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f23_arg0.ZMItem:completeAnimation() --[[ @ 0]]
			f23_arg0.ZMItem:setScale( 1.05, 1.05 ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.ZMItem ) --[[ @ 0]]
		end,
		GainChildFocus = function ( f24_arg0, f24_arg1 )
			f24_arg0:__resetProperties() --[[ @ 0]]
			f24_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f24_local0 = function ( f25_arg0 )
				f24_arg0.ZMItem:beginAnimation( 200 ) --[[ @ 0]]
				f24_arg0.ZMItem:setScale( 1.05, 1.05 ) --[[ @ 0]]
				f24_arg0.ZMItem:registerEventHandler( "interrupted_keyframe", f24_arg0.clipInterrupted ) --[[ @ 0]]
				f24_arg0.ZMItem:registerEventHandler( "transition_complete_keyframe", f24_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f24_arg0.ZMItem:completeAnimation() --[[ @ 0]]
			f24_arg0.ZMItem:setScale( 1, 1 ) --[[ @ 0]]
			f24_local0( f24_arg0.ZMItem ) --[[ @ 0]]
		end,
		LoseChildFocus = function ( f26_arg0, f26_arg1 )
			f26_arg0:__resetProperties() --[[ @ 0]]
			f26_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f26_local0 = function ( f27_arg0 )
				f26_arg0.ZMItem:beginAnimation( 200 ) --[[ @ 0]]
				f26_arg0.ZMItem:setScale( 1, 1 ) --[[ @ 0]]
				f26_arg0.ZMItem:registerEventHandler( "interrupted_keyframe", f26_arg0.clipInterrupted ) --[[ @ 0]]
				f26_arg0.ZMItem:registerEventHandler( "transition_complete_keyframe", f26_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f26_arg0.ZMItem:completeAnimation() --[[ @ 0]]
			f26_arg0.ZMItem:setScale( 1.05, 1.05 ) --[[ @ 0]]
			f26_local0( f26_arg0.ZMItem ) --[[ @ 0]]
		end
	},
	PC = {
		DefaultClip = function ( f28_arg0, f28_arg1 )
			f28_arg0:__resetProperties() --[[ @ 0]]
			f28_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	Equipped = {
		DefaultClip = function ( f29_arg0, f29_arg1 )
			f29_arg0:__resetProperties() --[[ @ 0]]
			f29_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.ZMItemGridButton.__onClose = function ( f30_arg0 )
	f30_arg0.ZMItem:close() --[[ @ 0]]
end
 --[[ @ 0]]
