-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:33
require( "x64:475d27055190f173" ) --[[ @ 0]]
require( "x64:30681f11650a68a6" ) --[[ @ 0]]

CoD.BM_AvailableContractsListContainer = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.BM_AvailableContractsListContainer.__defaultWidth = 500 --[[ @ 0]]
CoD.BM_AvailableContractsListContainer.__defaultHeight = 700 --[[ @ 0]]
CoD.BM_AvailableContractsListContainer.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.BM_AvailableContractsListContainer ) --[[ @ 0]]
	self.id = "BM_AvailableContractsListContainer" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	
	local AvailableContractsList = LUI.UIList.new( f1_arg0, f1_arg1, 18, 0, nil, false, false, false, false ) --[[ @ 0]]
	AvailableContractsList:setLeftRight( 0, 0, 0, 418 ) --[[ @ 0]]
	AvailableContractsList:setTopBottom( 0, 0, 0, 636 ) --[[ @ 0]]
	AvailableContractsList:setWidgetType( CoD.BM_AvailabeContractItem ) --[[ @ 0]]
	AvailableContractsList:setHorizontalCount( 2 ) --[[ @ 0]]
	AvailableContractsList:setVerticalCount( 3 ) --[[ @ 0]]
	AvailableContractsList:setSpacing( 18 ) --[[ @ 0]]
	AvailableContractsList:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	AvailableContractsList:setStaggeredIntroTime( 1 ) --[[ @ 0]]
	AvailableContractsList:setDataSource( "BlackMarketAvailableContracts" ) --[[ @ 0]]
	AvailableContractsList:linkToElementModel( AvailableContractsList, "active", true, function ( model, f2_arg1 )
		CoD.Menu.UpdateButtonShownState( f2_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	AvailableContractsList:linkToElementModel( AvailableContractsList, "completed", true, function ( model, f3_arg1 )
		CoD.Menu.UpdateButtonShownState( f3_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	AvailableContractsList:registerEventHandler( "gain_focus", function ( element, event )
		local f4_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f4_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f4_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f4_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( AvailableContractsList, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], nil, function ( element, menu, controller, model )
		if not CoD.BlackMarketUtility.IsActiveContractAvailable( controller, element, menu ) and not CoD.BlackMarketUtility.IsActiveContractCompleted( controller, element, menu ) and not CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "active" ) then
			OpenOverlay( self, "BlackMarketContractReplacementConfirmation", controller, {
				_model = menu:getModel(),
				_selectedModel = element:getModel(),
				_contractSlot = menu._contractSlot
			} ) --[[ @ 0]]
			PlaySoundAlias( "cac_slide_equip_item" ) --[[ @ 0]]
			return true
		elseif not CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "active" ) and not CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "completed" ) then
			CoD.BlackMarketUtility.PinContract( controller, element, menu, nil ) --[[ @ 0]]
			DelayGoBack( menu, controller, 250 ) --[[ @ 0]]
			PlaySoundAlias( "cac_slide_equip_item" ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not CoD.BlackMarketUtility.IsActiveContractAvailable( controller, element, menu ) and not CoD.BlackMarketUtility.IsActiveContractCompleted( controller, element, menu ) and not CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "active" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, nil ) --[[ @ 0]]
			return true
		elseif not CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "active" ) and not CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "completed" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, nil ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	AvailableContractsList:subscribeToGlobalModel( f1_arg1, "PerController", "lootContracts.forceRefresh", function ( model )
		CoD.GridAndListUtility.UpdateDataSource( AvailableContractsList, true, true, true ) --[[ @ 0]]
	end ) --[[ @ 0]]
	AvailableContractsList:subscribeToGlobalModel( f1_arg1, "PerController", "lootContracts.pinnedContractStatus_1", function ( model )
		CoD.GridAndListUtility.UpdateDataSource( AvailableContractsList, true, true, true ) --[[ @ 0]]
	end ) --[[ @ 0]]
	AvailableContractsList:subscribeToGlobalModel( f1_arg1, "PerController", "lootContracts.pinnedContractStatus_2", function ( model )
		CoD.GridAndListUtility.UpdateDataSource( AvailableContractsList, true, true, true ) --[[ @ 0]]
	end ) --[[ @ 0]]
	AvailableContractsList:subscribeToGlobalModel( f1_arg1, "PerController", "Contracts.availableContractsExpired", function ( model )
		CoD.GridAndListUtility.UpdateDataSource( AvailableContractsList, true, true, true ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( AvailableContractsList ) --[[ @ 0]]
	self.AvailableContractsList = AvailableContractsList --[[ @ 0]]
	
	AvailableContractsList.id = "AvailableContractsList" --[[ @ 0]]
	self.__defaultFocus = AvailableContractsList --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.BM_AvailableContractsListContainer.__onClose = function ( f11_arg0 )
	f11_arg0.AvailableContractsList:close() --[[ @ 0]]
end
 --[[ @ 0]]
