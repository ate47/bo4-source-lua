-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
require( "ui/uieditor/widgets/cac/newbreadcrumb" ) --[[ @ 0]]
require( "x64:52213f4cb2c008" ) --[[ @ 0]]

CoD.WeaponPersonalizeSlot = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.WeaponPersonalizeSlot.__defaultWidth = 152 --[[ @ 0]]
CoD.WeaponPersonalizeSlot.__defaultHeight = 152 --[[ @ 0]]
CoD.WeaponPersonalizeSlot.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.WeaponPersonalizeSlot ) --[[ @ 0]]
	self.id = "WeaponPersonalizeSlot" --[[ @ 0]]
	self.soundSet = "FrontendMain" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local WeaponPersonalizationItem = CoD.WeaponPersonalizeSlotInternal.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	WeaponPersonalizationItem:linkToElementModel( self, nil, false, function ( model )
		WeaponPersonalizationItem:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( WeaponPersonalizationItem ) --[[ @ 0]]
	self.WeaponPersonalizationItem = WeaponPersonalizationItem --[[ @ 0]]
	
	local ButtonName = LUI.UIText.new( 0, 1, 0, 0, 0, 0, -21, -5 ) --[[ @ 0]]
	ButtonName:setRGB( 0.63, 0.62, 0.61 ) --[[ @ 0]]
	ButtonName:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_70FA6E6FE616EF67" ) ) --[[ @ 0]]
	ButtonName:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	ButtonName:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_171E049B161CD00A" ) ) --[[ @ 0]]
	ButtonName:setLetterSpacing( 3 ) --[[ @ 0]]
	ButtonName:setAlignment( Enum[@"LUIAlignment"][@"hash_1FEEB12BCB0D7041"] ) --[[ @ 0]]
	self:addElement( ButtonName ) --[[ @ 0]]
	self.ButtonName = ButtonName --[[ @ 0]]
	
	local newIcon = CoD.NewBreadcrumb.new( f1_arg0, f1_arg1, 1, 1, 5, 23, 0, 0, -1, 17 ) --[[ @ 0]]
	newIcon:mergeStateConditions( {
		{
			stateName = "Visible",
			condition = function ( menu, element, event )
				return IsLive() and CoD.ModelUtility.IsSelfModelValueGreaterThan( element, f1_arg1, "breadcrumbCount", 0 )
			end
		}
	} ) --[[ @ 0]]
	local f1_local4 = newIcon --[[ @ 0]]
	local f1_local5 = newIcon.subscribeToModel --[[ @ 0]]
	local f1_local6 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local5( f1_local4, f1_local6["lobbyRoot.lobbyNetworkMode"], function ( f4_arg0 )
		f1_arg0:updateElementState( newIcon, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f4_arg0:get(),
			modelName = "lobbyRoot.lobbyNetworkMode"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local4 = newIcon --[[ @ 0]]
	f1_local5 = newIcon.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local5( f1_local4, f1_local6["lobbyRoot.lobbyNav"], function ( f5_arg0 )
		f1_arg0:updateElementState( newIcon, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f5_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	newIcon:linkToElementModel( newIcon, "breadcrumbCount", true, function ( model )
		f1_arg0:updateElementState( newIcon, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "breadcrumbCount"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( newIcon ) --[[ @ 0]]
	self.newIcon = newIcon --[[ @ 0]]
	
	WeaponPersonalizationItem.id = "WeaponPersonalizationItem" --[[ @ 0]]
	self.__defaultFocus = WeaponPersonalizationItem --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.WeaponPersonalizeSlot.__resetProperties = function ( f7_arg0 )
	f7_arg0.WeaponPersonalizationItem:completeAnimation() --[[ @ 0]]
	f7_arg0.ButtonName:completeAnimation() --[[ @ 0]]
	f7_arg0.newIcon:completeAnimation() --[[ @ 0]]
	f7_arg0.WeaponPersonalizationItem:setAlpha( 1 ) --[[ @ 0]]
	f7_arg0.ButtonName:setAlpha( 1 ) --[[ @ 0]]
	f7_arg0.newIcon:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.WeaponPersonalizeSlot.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f8_arg0, f8_arg1 )
			f8_arg0:__resetProperties() --[[ @ 0]]
			f8_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	Hidden = {
		DefaultClip = function ( f9_arg0, f9_arg1 )
			f9_arg0:__resetProperties() --[[ @ 0]]
			f9_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f9_arg0.WeaponPersonalizationItem:completeAnimation() --[[ @ 0]]
			f9_arg0.WeaponPersonalizationItem:setAlpha( 0 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.WeaponPersonalizationItem ) --[[ @ 0]]
			f9_arg0.ButtonName:completeAnimation() --[[ @ 0]]
			f9_arg0.ButtonName:setAlpha( 0 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.ButtonName ) --[[ @ 0]]
			f9_arg0.newIcon:completeAnimation() --[[ @ 0]]
			f9_arg0.newIcon:setAlpha( 0 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.newIcon ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.WeaponPersonalizeSlot.__onClose = function ( f10_arg0 )
	f10_arg0.WeaponPersonalizationItem:close() --[[ @ 0]]
	f10_arg0.newIcon:close() --[[ @ 0]]
end
 --[[ @ 0]]
