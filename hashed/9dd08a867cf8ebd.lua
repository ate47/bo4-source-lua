-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:35
CoD.MinimapHelper = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.MinimapHelper.__defaultWidth = 1140 --[[ @ 0]]
CoD.MinimapHelper.__defaultHeight = 740 --[[ @ 0]]
CoD.MinimapHelper.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.MinimapHelper ) --[[ @ 0]]
	self.id = "MinimapHelper" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local HDRClamp = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	HDRClamp:setRGB( 0, 0, 0 ) --[[ @ 0]]
	HDRClamp:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_67076F9EF46E6640" ) ) --[[ @ 0]]
	self:addElement( HDRClamp ) --[[ @ 0]]
	self.HDRClamp = HDRClamp --[[ @ 0]]
	
	local BackingColor = LUI.UIImage.new( 0.25, 1.75, -570, -570, 0.25, 1.75, -370, -370 ) --[[ @ 0]]
	BackingColor:setRGB( 0.01, 0.01, 0.01 ) --[[ @ 0]]
	self:addElement( BackingColor ) --[[ @ 0]]
	self.BackingColor = BackingColor --[[ @ 0]]
	
	local MapGlitch = LUI.UIImage.new( 0, 1, -1, -1, 0, 1, 0, 0 ) --[[ @ 0]]
	MapGlitch:setRGB( 0.01, 0.01, 0.01 ) --[[ @ 0]]
	MapGlitch:setImage( RegisterImage( GetCurrentMinimapImageName( @"uie_hud_t7_minimap_mp_ethiopia_full" ) ) ) --[[ @ 0]]
	self:addElement( MapGlitch ) --[[ @ 0]]
	self.MapGlitch = MapGlitch --[[ @ 0]]
	
	local MapBacking = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	MapBacking:setRGB( 0.38, 0.38, 0.38 ) --[[ @ 0]]
	self:addElement( MapBacking ) --[[ @ 0]]
	self.MapBacking = MapBacking --[[ @ 0]]
	
	local MinimapFogOfWar = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	MinimapFogOfWar:setImage( RegisterImage( @"uie_hud_mp_minimap_fogofwar_range" ) ) --[[ @ 0]]
	MinimapFogOfWar:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_ACA98D41A38E390" ) ) --[[ @ 0]]
	MinimapFogOfWar:setShaderVector( 0, 1, 0.1, 0.05, 0 ) --[[ @ 0]]
	MinimapFogOfWar:setupCompassFog( Enum[@"CompassType"][@"hash_772D54007C707EBC"] ) --[[ @ 0]]
	MinimapFogOfWar:setupCompassFogImageDiameter( 1 ) --[[ @ 0]]
	self:addElement( MinimapFogOfWar ) --[[ @ 0]]
	self.MinimapFogOfWar = MinimapFogOfWar --[[ @ 0]]
	
	local MinimapFogOfWarEnemyTearing = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	MinimapFogOfWarEnemyTearing:setImage( RegisterImage( @"hash_4706DFCD9F680830" ) ) --[[ @ 0]]
	MinimapFogOfWarEnemyTearing:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_flipbook_animated" ) ) --[[ @ 0]]
	MinimapFogOfWarEnemyTearing:setShaderVector( 0, 5, 1, 0, 0 ) --[[ @ 0]]
	MinimapFogOfWarEnemyTearing:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	MinimapFogOfWarEnemyTearing:setupCompassEnemyTearingFog( Enum[@"CompassType"][@"hash_772D54007C707EBC"] ) --[[ @ 0]]
	MinimapFogOfWarEnemyTearing:setupCompassFogImageDiameter( 0.74 ) --[[ @ 0]]
	self:addElement( MinimapFogOfWarEnemyTearing ) --[[ @ 0]]
	self.MinimapFogOfWarEnemyTearing = MinimapFogOfWarEnemyTearing --[[ @ 0]]
	
	local overlay = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	overlay:setAlpha( 0.7 ) --[[ @ 0]]
	overlay:setupCompassOverlay( Enum[@"CompassType"][@"hash_772D54007C707EBC"] ) --[[ @ 0]]
	self:addElement( overlay ) --[[ @ 0]]
	self.overlay = overlay --[[ @ 0]]
	
	local Scanlines = LUI.UIImage.new( -0.25, 1.25, 1, 1, -0.25, 1.25, 0, 0 ) --[[ @ 0]]
	Scanlines:setRGB( 0.54, 0.53, 0.72 ) --[[ @ 0]]
	Scanlines:setAlpha( 0.03 ) --[[ @ 0]]
	Scanlines:setImage( RegisterImage( GetCurrentMinimapImageName( @"uie_hud_t7_minimap_mp_ethiopia_full" ) ) ) --[[ @ 0]]
	Scanlines:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_scanlines_add" ) ) --[[ @ 0]]
	Scanlines:setShaderVector( 0, 0.07, 0, 0, 0 ) --[[ @ 0]]
	Scanlines:setShaderVector( 1, 0.86, 0, 0, 0 ) --[[ @ 0]]
	Scanlines:setShaderVector( 2, 0.01, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( Scanlines ) --[[ @ 0]]
	self.Scanlines = Scanlines --[[ @ 0]]
	
	local MinimapMap2 = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	MinimapMap2:setMaterial( LUI.UIImage.GetCachedMaterial( @"ui_multiply" ) ) --[[ @ 0]]
	MinimapMap2:setupCompassMap( Enum[@"CompassType"][@"hash_772D54007C707EBC"] ) --[[ @ 0]]
	self:addElement( MinimapMap2 ) --[[ @ 0]]
	self.MinimapMap2 = MinimapMap2 --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.MinimapHelper.__resetProperties = function ( f2_arg0 )
	f2_arg0.Scanlines:completeAnimation() --[[ @ 0]]
	f2_arg0.Scanlines:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_scanlines_add" ) ) --[[ @ 0]]
	f2_arg0.Scanlines:setShaderVector( 0, 0.07, 0, 0, 0 ) --[[ @ 0]]
	f2_arg0.Scanlines:setShaderVector( 1, 0.86, 0, 0, 0 ) --[[ @ 0]]
	f2_arg0.Scanlines:setShaderVector( 2, 0.01, 0, 0, 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.MinimapHelper.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f3_arg0, f3_arg1 )
			f3_arg0:__resetProperties() --[[ @ 0]]
			f3_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f3_local0 = function ( f4_arg0 )
				local f4_local0 = function ( f5_arg0 )
					f5_arg0:beginAnimation( 4000 ) --[[ @ 0]]
					f5_arg0:setShaderVector( 2, 0, 0, 0, 0 ) --[[ @ 0]]
					f5_arg0:registerEventHandler( "transition_complete_keyframe", f3_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f3_arg0.Scanlines:beginAnimation( 4000 ) --[[ @ 0]]
				f3_arg0.Scanlines:setShaderVector( 2, 0.01, 0, 0, 0 ) --[[ @ 0]]
				f3_arg0.Scanlines:registerEventHandler( "interrupted_keyframe", f3_arg0.clipInterrupted ) --[[ @ 0]]
				f3_arg0.Scanlines:registerEventHandler( "transition_complete_keyframe", f4_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f3_arg0.Scanlines:completeAnimation() --[[ @ 0]]
			f3_arg0.Scanlines:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_scanlines_add" ) ) --[[ @ 0]]
			f3_arg0.Scanlines:setShaderVector( 0, 0.07, 0, 0, 0 ) --[[ @ 0]]
			f3_arg0.Scanlines:setShaderVector( 1, 0.86, 0, 0, 0 ) --[[ @ 0]]
			f3_arg0.Scanlines:setShaderVector( 2, 0, 0, 0, 0 ) --[[ @ 0]]
			f3_local0( f3_arg0.Scanlines ) --[[ @ 0]]
			f3_arg0.nextClip = "DefaultClip" --[[ @ 0]]
		end
	}
} --[[ @ 0]]
