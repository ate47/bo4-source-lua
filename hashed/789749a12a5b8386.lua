-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:35
CoD.BM_SmallContractProgress = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.BM_SmallContractProgress.__defaultWidth = 68 --[[ @ 0]]
CoD.BM_SmallContractProgress.__defaultHeight = 68 --[[ @ 0]]
CoD.BM_SmallContractProgress.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.BM_SmallContractProgress ) --[[ @ 0]]
	self.id = "BM_SmallContractProgress" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local EmptyFill = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	EmptyFill:setRGB( 0.45, 0.45, 0.45 ) --[[ @ 0]]
	EmptyFill:setAlpha( 0 ) --[[ @ 0]]
	EmptyFill:setImage( RegisterImage( @"hash_25EE487F3CC2F5EE" ) ) --[[ @ 0]]
	self:addElement( EmptyFill ) --[[ @ 0]]
	self.EmptyFill = EmptyFill --[[ @ 0]]
	
	local EmptyRing = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	EmptyRing:setRGB( 0.45, 0.45, 0.45 ) --[[ @ 0]]
	EmptyRing:setAlpha( 0 ) --[[ @ 0]]
	EmptyRing:setImage( RegisterImage( @"hash_5A63A1E82AA367D2" ) ) --[[ @ 0]]
	self:addElement( EmptyRing ) --[[ @ 0]]
	self.EmptyRing = EmptyRing --[[ @ 0]]
	
	local ProgressBarBack = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	ProgressBarBack:setRGB( 0.45, 0.45, 0.45 ) --[[ @ 0]]
	ProgressBarBack:setImage( RegisterImage( @"hash_69A7834DA6C08B1A" ) ) --[[ @ 0]]
	self:addElement( ProgressBarBack ) --[[ @ 0]]
	self.ProgressBarBack = ProgressBarBack --[[ @ 0]]
	
	local ProgressBarFront = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	ProgressBarFront:setRGB( ColorSet.PlayerYellow.r, ColorSet.PlayerYellow.g, ColorSet.PlayerYellow.b ) --[[ @ 0]]
	ProgressBarFront:setImage( RegisterImage( @"hash_1BAD1467C2B4564C" ) ) --[[ @ 0]]
	ProgressBarFront:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_clock_normal" ) ) --[[ @ 0]]
	ProgressBarFront:setShaderVector( 1, 0.5, 0, 0, 0 ) --[[ @ 0]]
	ProgressBarFront:setShaderVector( 2, 0.5, 0, 0, 0 ) --[[ @ 0]]
	ProgressBarFront:setShaderVector( 3, 0, 0, 0, 0 ) --[[ @ 0]]
	ProgressBarFront:setShaderVector( 4, 0, 0, 0, 0 ) --[[ @ 0]]
	ProgressBarFront:linkToElementModel( self, "progressRatio", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			ProgressBarFront:setShaderVector( 0, CoD.GetVectorComponentFromString( f2_local0, 1 ), CoD.GetVectorComponentFromString( f2_local0, 2 ), CoD.GetVectorComponentFromString( f2_local0, 3 ), CoD.GetVectorComponentFromString( f2_local0, 4 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( ProgressBarFront ) --[[ @ 0]]
	self.ProgressBarFront = ProgressBarFront --[[ @ 0]]
	
	local ProgressBarComplete = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	ProgressBarComplete:setAlpha( 0 ) --[[ @ 0]]
	ProgressBarComplete:setImage( RegisterImage( @"hash_200DFB498DD9B4E" ) ) --[[ @ 0]]
	ProgressBarComplete:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_clock_normal" ) ) --[[ @ 0]]
	ProgressBarComplete:setShaderVector( 1, 0.5, 0, 0, 0 ) --[[ @ 0]]
	ProgressBarComplete:setShaderVector( 2, 0.5, 0, 0, 0 ) --[[ @ 0]]
	ProgressBarComplete:setShaderVector( 3, 0, 0, 0, 0 ) --[[ @ 0]]
	ProgressBarComplete:setShaderVector( 4, 0, 0, 0, 0 ) --[[ @ 0]]
	ProgressBarComplete:linkToElementModel( self, "progressRatio", true, function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			ProgressBarComplete:setShaderVector( 0, CoD.GetVectorComponentFromString( f3_local0, 1 ), CoD.GetVectorComponentFromString( f3_local0, 2 ), CoD.GetVectorComponentFromString( f3_local0, 3 ), CoD.GetVectorComponentFromString( f3_local0, 4 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( ProgressBarComplete ) --[[ @ 0]]
	self.ProgressBarComplete = ProgressBarComplete --[[ @ 0]]
	
	local Icon = LUI.UIImage.new( 0.5, 0.5, -20, 20, 0.5, 0.5, -20, 20 ) --[[ @ 0]]
	Icon:linkToElementModel( self, "contractIcon", true, function ( model )
		local f4_local0 = model:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			Icon:setImage( RegisterImage( f4_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Icon ) --[[ @ 0]]
	self.Icon = Icon --[[ @ 0]]
	
	local Plus = LUI.UIImage.new( 0.5, 0.5, -32, 32, 0.5, 0.5, -32, 32 ) --[[ @ 0]]
	Plus:setRGB( 0.45, 0.45, 0.45 ) --[[ @ 0]]
	Plus:setAlpha( 0 ) --[[ @ 0]]
	Plus:setImage( RegisterImage( @"hash_208CCA2C769C2E30" ) ) --[[ @ 0]]
	self:addElement( Plus ) --[[ @ 0]]
	self.Plus = Plus --[[ @ 0]]
	
	local Check = LUI.UIImage.new( 0.5, 0.5, -32, 32, 0.5, 0.5, -32, 32 ) --[[ @ 0]]
	Check:setAlpha( 0 ) --[[ @ 0]]
	Check:setImage( RegisterImage( @"uie_ui_menu_contracts_check" ) ) --[[ @ 0]]
	self:addElement( Check ) --[[ @ 0]]
	self.Check = Check --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Empty",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualTo( element, f1_arg1, "displayName", @"hash_0" )
			end
		},
		{
			stateName = "Completed",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg1, "completed" )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "displayName", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "displayName"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:linkToElementModel( self, "completed", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "completed"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.BM_SmallContractProgress.__resetProperties = function ( f9_arg0 )
	f9_arg0.Icon:completeAnimation() --[[ @ 0]]
	f9_arg0.Plus:completeAnimation() --[[ @ 0]]
	f9_arg0.ProgressBarFront:completeAnimation() --[[ @ 0]]
	f9_arg0.ProgressBarBack:completeAnimation() --[[ @ 0]]
	f9_arg0.EmptyRing:completeAnimation() --[[ @ 0]]
	f9_arg0.EmptyFill:completeAnimation() --[[ @ 0]]
	f9_arg0.ProgressBarComplete:completeAnimation() --[[ @ 0]]
	f9_arg0.Check:completeAnimation() --[[ @ 0]]
	f9_arg0.Icon:setRGB( 1, 1, 1 ) --[[ @ 0]]
	f9_arg0.Icon:setAlpha( 1 ) --[[ @ 0]]
	f9_arg0.Plus:setRGB( 0.45, 0.45, 0.45 ) --[[ @ 0]]
	f9_arg0.Plus:setAlpha( 0 ) --[[ @ 0]]
	f9_arg0.ProgressBarFront:setAlpha( 1 ) --[[ @ 0]]
	f9_arg0.ProgressBarBack:setAlpha( 1 ) --[[ @ 0]]
	f9_arg0.EmptyRing:setAlpha( 0 ) --[[ @ 0]]
	f9_arg0.EmptyFill:setAlpha( 0 ) --[[ @ 0]]
	f9_arg0.ProgressBarComplete:setAlpha( 0 ) --[[ @ 0]]
	f9_arg0.Check:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.BM_SmallContractProgress.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f10_arg0, f10_arg1 )
			f10_arg0:__resetProperties() --[[ @ 0]]
			f10_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	Empty = {
		DefaultClip = function ( f11_arg0, f11_arg1 )
			f11_arg0:__resetProperties() --[[ @ 0]]
			f11_arg0:setupElementClipCounter( 6 ) --[[ @ 0]]
			f11_arg0.EmptyFill:completeAnimation() --[[ @ 0]]
			f11_arg0.EmptyFill:setAlpha( 0.05 ) --[[ @ 0]]
			f11_arg0.clipFinished( f11_arg0.EmptyFill ) --[[ @ 0]]
			f11_arg0.EmptyRing:completeAnimation() --[[ @ 0]]
			f11_arg0.EmptyRing:setAlpha( 1 ) --[[ @ 0]]
			f11_arg0.clipFinished( f11_arg0.EmptyRing ) --[[ @ 0]]
			f11_arg0.ProgressBarBack:completeAnimation() --[[ @ 0]]
			f11_arg0.ProgressBarBack:setAlpha( 0 ) --[[ @ 0]]
			f11_arg0.clipFinished( f11_arg0.ProgressBarBack ) --[[ @ 0]]
			f11_arg0.ProgressBarFront:completeAnimation() --[[ @ 0]]
			f11_arg0.ProgressBarFront:setAlpha( 0 ) --[[ @ 0]]
			f11_arg0.clipFinished( f11_arg0.ProgressBarFront ) --[[ @ 0]]
			f11_arg0.Icon:completeAnimation() --[[ @ 0]]
			f11_arg0.Icon:setAlpha( 0 ) --[[ @ 0]]
			f11_arg0.clipFinished( f11_arg0.Icon ) --[[ @ 0]]
			f11_arg0.Plus:completeAnimation() --[[ @ 0]]
			f11_arg0.Plus:setRGB( 0.45, 0.45, 0.45 ) --[[ @ 0]]
			f11_arg0.Plus:setAlpha( 1 ) --[[ @ 0]]
			f11_arg0.clipFinished( f11_arg0.Plus ) --[[ @ 0]]
		end
	},
	Completed = {
		DefaultClip = function ( f12_arg0, f12_arg1 )
			f12_arg0:__resetProperties() --[[ @ 0]]
			f12_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f12_arg0.ProgressBarFront:completeAnimation() --[[ @ 0]]
			f12_arg0.ProgressBarFront:setAlpha( 0 ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.ProgressBarFront ) --[[ @ 0]]
			f12_arg0.ProgressBarComplete:completeAnimation() --[[ @ 0]]
			f12_arg0.ProgressBarComplete:setAlpha( 1 ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.ProgressBarComplete ) --[[ @ 0]]
			f12_arg0.Icon:completeAnimation() --[[ @ 0]]
			f12_arg0.Icon:setRGB( 0.64, 0.64, 0.64 ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.Icon ) --[[ @ 0]]
			f12_arg0.Check:completeAnimation() --[[ @ 0]]
			f12_arg0.Check:setAlpha( 1 ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.Check ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.BM_SmallContractProgress.__onClose = function ( f13_arg0 )
	f13_arg0.ProgressBarFront:close() --[[ @ 0]]
	f13_arg0.ProgressBarComplete:close() --[[ @ 0]]
	f13_arg0.Icon:close() --[[ @ 0]]
end
 --[[ @ 0]]
