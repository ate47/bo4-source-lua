-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:48
require( "x64:52fa26438cae31e9" ) --[[ @ 0]]
require( "x64:47a4ceca81c49387" ) --[[ @ 0]]
require( "x64:79b528a05aba52d6" ) --[[ @ 0]]
require( "ui/uieditor/menus/lobby/common/popups/vodviewer" ) --[[ @ 0]]
require( "ui/uieditor/widgets/director/directorpregamebutton" ) --[[ @ 0]]
require( "x64:2b25db840a191172" ) --[[ @ 0]]
require( "x64:479a2abecba85306" ) --[[ @ 0]]
require( "x64:7c8666fff462a645" ) --[[ @ 0]]
require( "x64:193604c7b6b216ac" ) --[[ @ 0]]
require( "x64:35653ef4ad2299d" ) --[[ @ 0]]
require( "x64:4b1b346e32476a2e" ) --[[ @ 0]]

CoD.BlackMarketItemShopFrame = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.BlackMarketItemShopFrame.__defaultWidth = 1920 --[[ @ 0]]
CoD.BlackMarketItemShopFrame.__defaultHeight = 1080 --[[ @ 0]]
CoD.BlackMarketItemShopFrame.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	CoD.FTUEUtility.ShowFTUESequenceIfNotSeen( self, f1_arg1, "BlackjackShopIntroduction" ) --[[ @ 0]]
	self:setClass( CoD.BlackMarketItemShopFrame ) --[[ @ 0]]
	self.id = "BlackMarketItemShopFrame" --[[ @ 0]]
	self.soundSet = "ItemShop" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local FeaturedSlot1Timer = CoD.ListLabel.new( f1_arg0, f1_arg1, 0.5, 0.5, -841, -599, 0.5, 0.5, -369, -319 ) --[[ @ 0]]
	FeaturedSlot1Timer:subscribeToGlobalModel( f1_arg1, "ItemshopRotation", "loot_itemshop_slot1_timer", function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			FeaturedSlot1Timer.TextBox2:setText( f2_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( FeaturedSlot1Timer ) --[[ @ 0]]
	self.FeaturedSlot1Timer = FeaturedSlot1Timer --[[ @ 0]]
	
	local NoMyShopOffers = LUI.UIText.new( 0.5, 0.5, 12, 252, 0.5, 0.5, -218.5, -181.5 ) --[[ @ 0]]
	NoMyShopOffers:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_640A4373BEE19526" ) ) --[[ @ 0]]
	NoMyShopOffers:setTTF( "default" ) --[[ @ 0]]
	NoMyShopOffers:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	NoMyShopOffers:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	self:addElement( NoMyShopOffers ) --[[ @ 0]]
	self.NoMyShopOffers = NoMyShopOffers --[[ @ 0]]
	
	local FeaturedSlot1 = LUI.UIList.new( f1_arg0, f1_arg1, 30, 0, nil, true, false, false, false ) --[[ @ 0]]
	FeaturedSlot1:setLeftRight( 0.5, 0.5, -840, -600 ) --[[ @ 0]]
	FeaturedSlot1:setTopBottom( 0.5, 0.5, -319, 191 ) --[[ @ 0]]
	FeaturedSlot1:setWidgetType( CoD.BMTallItemContainer ) --[[ @ 0]]
	FeaturedSlot1:setSpacing( 30 ) --[[ @ 0]]
	FeaturedSlot1:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	FeaturedSlot1:setHorizontalCounter( CoD.horizontalCounterTriggerPrompts ) --[[ @ 0]]
	FeaturedSlot1:setDataSource( "ItemShopSlot1List" ) --[[ @ 0]]
	FeaturedSlot1:linkToElementModel( FeaturedSlot1, "movieName", true, function ( model, f3_arg1 )
		CoD.Menu.UpdateButtonShownState( f3_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xbx_pssquare"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f3_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_pckey_2"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	FeaturedSlot1:appendEventHandler( "input_source_changed", function ( f4_arg0, f4_arg1 )
		f4_arg1.menu = f4_arg1.menu or f1_arg0 --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f4_arg0, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xbx_pssquare"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f4_arg0, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_pckey_2"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local FeaturedLabel = FeaturedSlot1 --[[ @ 0]]
	local SpecialOrdersBracket = FeaturedSlot1.subscribeToModel --[[ @ 0]]
	local FeaturedSlot2Timer = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	SpecialOrdersBracket( FeaturedLabel, FeaturedSlot2Timer.LastInput, function ( f5_arg0, f5_arg1 )
		CoD.Menu.UpdateButtonShownState( f5_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xbx_pssquare"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f5_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_pckey_2"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	FeaturedSlot1:registerEventHandler( "list_item_gain_focus", function ( element, event )
		local f6_local0 = nil --[[ @ 0]]
		CoD.BlackMarketUtility.ChangeSupplyChainCameraBySelection( f1_arg0, f1_arg1, element ) --[[ @ 0]]
		SetElementModelToFocusedElementModel( f1_arg1, self, element, "SupplyChainDetails" ) --[[ @ 0]]
		CoD.BlackMarketUtility.AutoPlayGestureIfApplicable( f1_arg0, element, f1_arg1 ) --[[ @ 0]]
		return f6_local0
	end ) --[[ @ 0]]
	FeaturedSlot1:registerEventHandler( "occlusion_change", function ( element, event )
		local f7_local0 = nil --[[ @ 0]]
		if element.OcclusionChange then
			f7_local0 = element:OcclusionChange( event ) --[[ @ 0]]
		elseif element.super.OcclusionChange then
			f7_local0 = element.super:OcclusionChange( event ) --[[ @ 0]]
		end
		if IsEventPropertyEqualTo( event, "occluded", false ) then
			CoD.BlackMarketUtility.TriggerItemShopRevealAnimation( f1_arg1, element ) --[[ @ 0]]
		end
		if not f7_local0 then
			f7_local0 = element:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f7_local0
	end ) --[[ @ 0]]
	FeaturedSlot1:registerEventHandler( "gain_list_focus", function ( element, event )
		local f8_local0 = nil --[[ @ 0]]
		CoD.GridAndListUtility.DisableAutoScrolling( f1_arg1, self.FeaturedSlot1 ) --[[ @ 0]]
		return f8_local0
	end ) --[[ @ 0]]
	FeaturedSlot1:registerEventHandler( "lose_list_focus", function ( element, event )
		local f9_local0 = nil --[[ @ 0]]
		CoD.GridAndListUtility.ReEnableAutoScrolling( f1_arg1, self.FeaturedSlot1 ) --[[ @ 0]]
		CoD.BlackMarketUtility.ChangeSupplyChainCameraBySelection( f1_arg0, f1_arg1, f1_arg0 ) --[[ @ 0]]
		return f9_local0
	end ) --[[ @ 0]]
	FeaturedSlot1:registerEventHandler( "gain_focus", function ( element, event )
		local f10_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f10_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f10_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xbx_pssquare"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_pckey_2"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_rtrig"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_ltrig"] ) --[[ @ 0]]
		return f10_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( FeaturedSlot1, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"], nil, function ( element, menu, controller, model )
		CoD.BlackMarketUtility.PlayItemShopSelectSound( element, controller ) --[[ @ 0]]
		OpenOverlay( self, "BlackMarketBountyDetails", controller, {
			_model = element:getModel()
		} ) --[[ @ 0]]
		SetControllerModelValue( controller, "LootStreamProgress.playAnimation", false ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"menu/select", nil, nil ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( FeaturedSlot1, f1_arg1, Enum[@"luibutton"][@"lui_key_xbx_pssquare"], nil, function ( element, menu, controller, model )
		if CoD.ModelUtility.IsSelfModelValueNonEmptyString( element, controller, "movieName" ) and IsGamepad( controller ) then
			SetControllerModelValue( controller, "LootStreamProgress.playAnimation", false ) --[[ @ 0]]
			CoD.VideoStreamingUtility.SetupVoDMovie( controller, element, "" ) --[[ @ 0]]
			DelayOpenOverlay( menu, "VoDViewer", controller, {
				fullscreen = true
			} ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if CoD.ModelUtility.IsSelfModelValueNonEmptyString( element, controller, "movieName" ) and IsGamepad( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xbx_pssquare"], @"menu/preview", nil, nil ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( FeaturedSlot1, f1_arg1, Enum[@"luibutton"][@"lui_key_pckey_2"], "ui_remove", function ( element, menu, controller, model )
		if CoD.ModelUtility.IsSelfModelValueNonEmptyString( element, controller, "movieName" ) and IsMouseOrKeyboard( controller ) then
			SetControllerModelValue( controller, "LootStreamProgress.playAnimation", false ) --[[ @ 0]]
			CoD.VideoStreamingUtility.SetupVoDMovie( controller, element, "" ) --[[ @ 0]]
			DelayOpenOverlay( menu, "VoDViewer", controller, {
				fullscreen = true
			} ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if CoD.ModelUtility.IsSelfModelValueNonEmptyString( element, controller, "movieName" ) and IsMouseOrKeyboard( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_pckey_2"], @"menu/preview", Enum[@"luibuttonpromptflags"][@"bpf_contextual"], "ui_remove" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( FeaturedSlot1, f1_arg1, Enum[@"luibutton"][@"lui_key_rtrig"], "MWHEELDOWN", function ( element, menu, controller, model )
		if not IsRepeatButtonPress( model ) then
			CoD.GridAndListUtility.NavigateGridItemOnParentGridOrList( element, controller, true ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsRepeatButtonPress( nil ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_rtrig"], @"hash_0", nil, "MWHEELDOWN" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( FeaturedSlot1, f1_arg1, Enum[@"luibutton"][@"lui_key_ltrig"], "MWHEELUP", function ( element, menu, controller, model )
		if not IsRepeatButtonPress( model ) then
			CoD.GridAndListUtility.NavigateGridItemOnParentGridOrList( element, controller, false ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsRepeatButtonPress( nil ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_ltrig"], @"hash_0", nil, "MWHEELUP" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( FeaturedSlot1, "updateDataSource", function ( element, controller, f21_arg2, f21_arg3 )
		if CoD.BlackMarketUtility.IsShopListInFocus( f1_arg1, element ) then
			CoD.BlackMarketUtility.ChangeSupplyChainCameraBySelection( f1_arg0, f1_arg1, element ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	FeaturedSlot1:subscribeToGlobalModel( f1_arg1, "GlobalModel", "ItemshopRotation.cycled", function ( model )
		local f22_local0 = FeaturedSlot1 --[[ @ 0]]
		if CoD.ModelUtility.IsGlobalModelValueTrue( "ItemshopRotation.cycled" ) then
			CoD.GridAndListUtility.UpdateDataSource( f22_local0, true, true, true ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	FeaturedSlot1:AddContextualMenuAction( f1_arg0, f1_arg1, @"menu/preview", function ( f23_arg0, f23_arg1, f23_arg2, f23_arg3 )
		if CoD.ModelUtility.IsSelfModelValueNonEmptyString( f23_arg0, f23_arg2, "movieName" ) then
			return function ( f24_arg0, f24_arg1, f24_arg2, f24_arg3 )
				SetControllerModelValue( f24_arg2, "LootStreamProgress.playAnimation", false ) --[[ @ 0]]
				CoD.VideoStreamingUtility.SetupVoDMovie( f24_arg2, f24_arg0, "" ) --[[ @ 0]]
				DelayOpenOverlay( f24_arg1, "VoDViewer", f24_arg2, {
					fullscreen = true
				} ) --[[ @ 0]]
			end
			
		else
			
		end
	end ) --[[ @ 0]]
	self:addElement( FeaturedSlot1 ) --[[ @ 0]]
	self.FeaturedSlot1 = FeaturedSlot1 --[[ @ 0]]
	
	SpecialOrdersBracket = LUI.UIImage.new( 0.5, 0.5, -277, -27, 0.5, 0.5, -364, -356 ) --[[ @ 0]]
	SpecialOrdersBracket:setRGB( 0.98, 1, 0.89 ) --[[ @ 0]]
	SpecialOrdersBracket:setAlpha( 0.5 ) --[[ @ 0]]
	SpecialOrdersBracket:setZRot( 180 ) --[[ @ 0]]
	SpecialOrdersBracket:setImage( RegisterImage( @"hash_4C325BED3F226657" ) ) --[[ @ 0]]
	SpecialOrdersBracket:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_add" ) ) --[[ @ 0]]
	SpecialOrdersBracket:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	SpecialOrdersBracket:setupNineSliceShader( 16, 4 ) --[[ @ 0]]
	self:addElement( SpecialOrdersBracket ) --[[ @ 0]]
	self.SpecialOrdersBracket = SpecialOrdersBracket --[[ @ 0]]
	
	FeaturedLabel = LUI.UIText.new( 0.5, 0.5, -845, -605, 0.5, 0.5, -388, -370 ) --[[ @ 0]]
	FeaturedLabel:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	FeaturedLabel:setText( LocalizeToUpperString( @"menu/featured" ) ) --[[ @ 0]]
	FeaturedLabel:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	FeaturedLabel:setLetterSpacing( 4 ) --[[ @ 0]]
	FeaturedLabel:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	FeaturedLabel:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	self:addElement( FeaturedLabel ) --[[ @ 0]]
	self.FeaturedLabel = FeaturedLabel --[[ @ 0]]
	
	FeaturedSlot2Timer = CoD.ListLabel.new( f1_arg0, f1_arg1, 0.5, 0.5, -557, -316, 0.5, 0.5, -369, -319 ) --[[ @ 0]]
	FeaturedSlot2Timer:subscribeToGlobalModel( f1_arg1, "ItemshopRotation", "loot_itemshop_slot2_timer", function ( model )
		local f25_local0 = model:get() --[[ @ 0]]
		if f25_local0 ~= nil then
			FeaturedSlot2Timer.TextBox2:setText( f25_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( FeaturedSlot2Timer ) --[[ @ 0]]
	self.FeaturedSlot2Timer = FeaturedSlot2Timer --[[ @ 0]]
	
	local FeaturedSlot2 = LUI.UIList.new( f1_arg0, f1_arg1, 30, 0, nil, true, false, false, false ) --[[ @ 0]]
	FeaturedSlot2:setLeftRight( 0.5, 0.5, -556, -316 ) --[[ @ 0]]
	FeaturedSlot2:setTopBottom( 0.5, 0.5, -319, 191 ) --[[ @ 0]]
	FeaturedSlot2:setWidgetType( CoD.BMTallItemContainer ) --[[ @ 0]]
	FeaturedSlot2:setSpacing( 30 ) --[[ @ 0]]
	FeaturedSlot2:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	FeaturedSlot2:setHorizontalCounter( CoD.horizontalCounterTriggerPrompts ) --[[ @ 0]]
	FeaturedSlot2:setDataSource( "ItemShopSlot2List" ) --[[ @ 0]]
	FeaturedSlot2:linkToElementModel( FeaturedSlot2, "movieName", true, function ( model, f26_arg1 )
		CoD.Menu.UpdateButtonShownState( f26_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xbx_pssquare"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f26_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_pckey_2"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	FeaturedSlot2:appendEventHandler( "input_source_changed", function ( f27_arg0, f27_arg1 )
		f27_arg1.menu = f27_arg1.menu or f1_arg0 --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f27_arg0, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xbx_pssquare"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f27_arg0, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_pckey_2"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local FeaturedItemsBracket = FeaturedSlot2 --[[ @ 0]]
	local SpecialOrders = FeaturedSlot2.subscribeToModel --[[ @ 0]]
	local SpecialOrdersLabel = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	SpecialOrders( FeaturedItemsBracket, SpecialOrdersLabel.LastInput, function ( f28_arg0, f28_arg1 )
		CoD.Menu.UpdateButtonShownState( f28_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xbx_pssquare"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f28_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_pckey_2"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	FeaturedSlot2:registerEventHandler( "list_item_gain_focus", function ( element, event )
		local f29_local0 = nil --[[ @ 0]]
		CoD.BlackMarketUtility.ChangeSupplyChainCameraBySelection( f1_arg0, f1_arg1, element ) --[[ @ 0]]
		SetElementModelToFocusedElementModel( f1_arg1, self, element, "SupplyChainDetails" ) --[[ @ 0]]
		CoD.BlackMarketUtility.AutoPlayGestureIfApplicable( f1_arg0, element, f1_arg1 ) --[[ @ 0]]
		return f29_local0
	end ) --[[ @ 0]]
	FeaturedSlot2:registerEventHandler( "occlusion_change", function ( element, event )
		local f30_local0 = nil --[[ @ 0]]
		if element.OcclusionChange then
			f30_local0 = element:OcclusionChange( event ) --[[ @ 0]]
		elseif element.super.OcclusionChange then
			f30_local0 = element.super:OcclusionChange( event ) --[[ @ 0]]
		end
		if IsEventPropertyEqualTo( event, "occluded", false ) then
			CoD.BlackMarketUtility.TriggerItemShopRevealAnimation( f1_arg1, element ) --[[ @ 0]]
		end
		if not f30_local0 then
			f30_local0 = element:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f30_local0
	end ) --[[ @ 0]]
	FeaturedSlot2:registerEventHandler( "lose_list_focus", function ( element, event )
		local f31_local0 = nil --[[ @ 0]]
		CoD.GridAndListUtility.ReEnableAutoScrolling( f1_arg1, self.FeaturedSlot2 ) --[[ @ 0]]
		CoD.BlackMarketUtility.ChangeSupplyChainCameraBySelection( f1_arg0, f1_arg1, f1_arg0 ) --[[ @ 0]]
		return f31_local0
	end ) --[[ @ 0]]
	FeaturedSlot2:registerEventHandler( "gain_list_focus", function ( element, event )
		local f32_local0 = nil --[[ @ 0]]
		CoD.GridAndListUtility.DisableAutoScrolling( f1_arg1, self.FeaturedSlot2 ) --[[ @ 0]]
		return f32_local0
	end ) --[[ @ 0]]
	FeaturedSlot2:registerEventHandler( "gain_focus", function ( element, event )
		local f33_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f33_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f33_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xbx_pssquare"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_pckey_2"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_rtrig"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_ltrig"] ) --[[ @ 0]]
		return f33_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( FeaturedSlot2, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"], nil, function ( element, menu, controller, model )
		CoD.BlackMarketUtility.PlayItemShopSelectSound( element, controller ) --[[ @ 0]]
		OpenOverlay( self, "BlackMarketBountyDetails", controller, {
			_model = element:getModel()
		} ) --[[ @ 0]]
		SetControllerModelValue( controller, "LootStreamProgress.playAnimation", false ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"menu/select", nil, nil ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( FeaturedSlot2, f1_arg1, Enum[@"luibutton"][@"lui_key_xbx_pssquare"], nil, function ( element, menu, controller, model )
		if CoD.ModelUtility.IsSelfModelValueNonEmptyString( element, controller, "movieName" ) and IsGamepad( controller ) then
			SetControllerModelValue( controller, "LootStreamProgress.playAnimation", false ) --[[ @ 0]]
			CoD.VideoStreamingUtility.SetupVoDMovie( controller, element, "" ) --[[ @ 0]]
			DelayOpenOverlay( menu, "VoDViewer", controller, {
				fullscreen = true
			} ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if CoD.ModelUtility.IsSelfModelValueNonEmptyString( element, controller, "movieName" ) and IsGamepad( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xbx_pssquare"], @"menu/preview", nil, nil ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( FeaturedSlot2, f1_arg1, Enum[@"luibutton"][@"lui_key_pckey_2"], "ui_remove", function ( element, menu, controller, model )
		if CoD.ModelUtility.IsSelfModelValueNonEmptyString( element, controller, "movieName" ) and IsMouseOrKeyboard( controller ) then
			SetControllerModelValue( controller, "LootStreamProgress.playAnimation", false ) --[[ @ 0]]
			CoD.VideoStreamingUtility.SetupVoDMovie( controller, element, "" ) --[[ @ 0]]
			DelayOpenOverlay( menu, "VoDViewer", controller, {
				fullscreen = true
			} ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if CoD.ModelUtility.IsSelfModelValueNonEmptyString( element, controller, "movieName" ) and IsMouseOrKeyboard( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_pckey_2"], @"menu/preview", Enum[@"luibuttonpromptflags"][@"bpf_contextual"], "ui_remove" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( FeaturedSlot2, f1_arg1, Enum[@"luibutton"][@"lui_key_rtrig"], "MWHEELDOWN", function ( element, menu, controller, model )
		if not IsRepeatButtonPress( model ) then
			CoD.GridAndListUtility.NavigateGridItemOnParentGridOrList( element, controller, true ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsRepeatButtonPress( nil ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_rtrig"], @"hash_0", nil, "MWHEELDOWN" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( FeaturedSlot2, f1_arg1, Enum[@"luibutton"][@"lui_key_ltrig"], "MWHEELUP", function ( element, menu, controller, model )
		if not IsRepeatButtonPress( model ) then
			CoD.GridAndListUtility.NavigateGridItemOnParentGridOrList( element, controller, false ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsRepeatButtonPress( nil ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_ltrig"], @"hash_0", nil, "MWHEELUP" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( FeaturedSlot2, "updateDataSource", function ( element, controller, f44_arg2, f44_arg3 )
		if CoD.BlackMarketUtility.IsShopListInFocus( f1_arg1, element ) then
			CoD.BlackMarketUtility.ChangeSupplyChainCameraBySelection( f1_arg0, f1_arg1, element ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	FeaturedSlot2:subscribeToGlobalModel( f1_arg1, "GlobalModel", "ItemshopRotation.cycled", function ( model )
		local f45_local0 = FeaturedSlot2 --[[ @ 0]]
		if CoD.ModelUtility.IsGlobalModelValueTrue( "ItemshopRotation.cycled" ) then
			CoD.GridAndListUtility.UpdateDataSource( f45_local0, true, true, true ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	FeaturedSlot2:AddContextualMenuAction( f1_arg0, f1_arg1, @"menu/preview", function ( f46_arg0, f46_arg1, f46_arg2, f46_arg3 )
		if CoD.ModelUtility.IsSelfModelValueNonEmptyString( f46_arg0, f46_arg2, "movieName" ) then
			return function ( f47_arg0, f47_arg1, f47_arg2, f47_arg3 )
				SetControllerModelValue( f47_arg2, "LootStreamProgress.playAnimation", false ) --[[ @ 0]]
				CoD.VideoStreamingUtility.SetupVoDMovie( f47_arg2, f47_arg0, "" ) --[[ @ 0]]
				DelayOpenOverlay( f47_arg1, "VoDViewer", f47_arg2, {
					fullscreen = true
				} ) --[[ @ 0]]
			end
			
		else
			
		end
	end ) --[[ @ 0]]
	self:addElement( FeaturedSlot2 ) --[[ @ 0]]
	self.FeaturedSlot2 = FeaturedSlot2 --[[ @ 0]]
	
	SpecialOrders = LUI.UIList.new( f1_arg0, f1_arg1, 30, 0, nil, true, false, false, false ) --[[ @ 0]]
	SpecialOrders:setLeftRight( 0.5, 0.5, -272, -32 ) --[[ @ 0]]
	SpecialOrders:setTopBottom( 0.5, 0.5, -319, 191 ) --[[ @ 0]]
	SpecialOrders:setWidgetType( CoD.BMTallItemContainer ) --[[ @ 0]]
	SpecialOrders:setSpacing( 30 ) --[[ @ 0]]
	SpecialOrders:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	SpecialOrders:setHorizontalCounter( CoD.horizontalCounterTriggerPrompts ) --[[ @ 0]]
	SpecialOrders:setDataSource( "ItemShopSlot3List" ) --[[ @ 0]]
	SpecialOrders:linkToElementModel( SpecialOrders, "movieName", true, function ( model, f48_arg1 )
		CoD.Menu.UpdateButtonShownState( f48_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xbx_pssquare"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f48_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_pckey_2"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	SpecialOrders:appendEventHandler( "input_source_changed", function ( f49_arg0, f49_arg1 )
		f49_arg1.menu = f49_arg1.menu or f1_arg0 --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f49_arg0, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xbx_pssquare"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f49_arg0, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_pckey_2"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	SpecialOrdersLabel = SpecialOrders --[[ @ 0]]
	FeaturedItemsBracket = SpecialOrders.subscribeToModel --[[ @ 0]]
	local MyShopTimer = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	FeaturedItemsBracket( SpecialOrdersLabel, MyShopTimer.LastInput, function ( f50_arg0, f50_arg1 )
		CoD.Menu.UpdateButtonShownState( f50_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xbx_pssquare"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f50_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_pckey_2"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	SpecialOrders:registerEventHandler( "list_item_gain_focus", function ( element, event )
		local f51_local0 = nil --[[ @ 0]]
		CoD.BlackMarketUtility.ChangeSupplyChainCameraBySelection( f1_arg0, f1_arg1, element ) --[[ @ 0]]
		SetElementModelToFocusedElementModel( f1_arg1, self, element, "SupplyChainDetails" ) --[[ @ 0]]
		CoD.BlackMarketUtility.AutoPlayGestureIfApplicable( f1_arg0, element, f1_arg1 ) --[[ @ 0]]
		return f51_local0
	end ) --[[ @ 0]]
	SpecialOrders:registerEventHandler( "occlusion_change", function ( element, event )
		local f52_local0 = nil --[[ @ 0]]
		if element.OcclusionChange then
			f52_local0 = element:OcclusionChange( event ) --[[ @ 0]]
		elseif element.super.OcclusionChange then
			f52_local0 = element.super:OcclusionChange( event ) --[[ @ 0]]
		end
		if IsEventPropertyEqualTo( event, "occluded", false ) then
			CoD.BlackMarketUtility.TriggerItemShopRevealAnimation( f1_arg1, element ) --[[ @ 0]]
		end
		if not f52_local0 then
			f52_local0 = element:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f52_local0
	end ) --[[ @ 0]]
	SpecialOrders:registerEventHandler( "lose_list_focus", function ( element, event )
		local f53_local0 = nil --[[ @ 0]]
		CoD.GridAndListUtility.ReEnableAutoScrolling( f1_arg1, self.SpecialOrders ) --[[ @ 0]]
		CoD.BlackMarketUtility.ChangeSupplyChainCameraBySelection( f1_arg0, f1_arg1, f1_arg0 ) --[[ @ 0]]
		return f53_local0
	end ) --[[ @ 0]]
	SpecialOrders:registerEventHandler( "gain_list_focus", function ( element, event )
		local f54_local0 = nil --[[ @ 0]]
		CoD.GridAndListUtility.DisableAutoScrolling( f1_arg1, self.SpecialOrders ) --[[ @ 0]]
		return f54_local0
	end ) --[[ @ 0]]
	SpecialOrders:registerEventHandler( "gain_focus", function ( element, event )
		local f55_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f55_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f55_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xbx_pssquare"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_pckey_2"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_rtrig"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_ltrig"] ) --[[ @ 0]]
		return f55_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( SpecialOrders, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"], nil, function ( element, menu, controller, model )
		CoD.BlackMarketUtility.PlayItemShopSelectSound( element, controller ) --[[ @ 0]]
		SetControllerModelValue( controller, "LootStreamProgress.playAnimation", false ) --[[ @ 0]]
		CoD.ContractUtility.OpenContractDetails( self, element, controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"menu/select", nil, nil ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( SpecialOrders, f1_arg1, Enum[@"luibutton"][@"lui_key_xbx_pssquare"], nil, function ( element, menu, controller, model )
		if CoD.ModelUtility.IsSelfModelValueNonEmptyString( element, controller, "movieName" ) and IsGamepad( controller ) then
			SetControllerModelValue( controller, "LootStreamProgress.playAnimation", false ) --[[ @ 0]]
			CoD.VideoStreamingUtility.SetupVoDMovie( controller, element, "" ) --[[ @ 0]]
			DelayOpenOverlay( menu, "VoDViewer", controller, {
				fullscreen = true
			} ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if CoD.ModelUtility.IsSelfModelValueNonEmptyString( element, controller, "movieName" ) and IsGamepad( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xbx_pssquare"], @"menu/preview", nil, nil ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( SpecialOrders, f1_arg1, Enum[@"luibutton"][@"lui_key_pckey_2"], "ui_remove", function ( element, menu, controller, model )
		if CoD.ModelUtility.IsSelfModelValueNonEmptyString( element, controller, "movieName" ) and IsMouseOrKeyboard( controller ) then
			SetControllerModelValue( controller, "LootStreamProgress.playAnimation", false ) --[[ @ 0]]
			CoD.VideoStreamingUtility.SetupVoDMovie( controller, element, "" ) --[[ @ 0]]
			DelayOpenOverlay( menu, "VoDViewer", controller, {
				fullscreen = true
			} ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if CoD.ModelUtility.IsSelfModelValueNonEmptyString( element, controller, "movieName" ) and IsMouseOrKeyboard( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_pckey_2"], @"menu/preview", Enum[@"luibuttonpromptflags"][@"bpf_contextual"], "ui_remove" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( SpecialOrders, f1_arg1, Enum[@"luibutton"][@"lui_key_rtrig"], "MWHEELDOWN", function ( element, menu, controller, model )
		if not IsRepeatButtonPress( model ) then
			CoD.GridAndListUtility.NavigateGridItemOnParentGridOrList( element, controller, true ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsRepeatButtonPress( nil ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_rtrig"], @"hash_0", nil, "MWHEELDOWN" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( SpecialOrders, f1_arg1, Enum[@"luibutton"][@"lui_key_ltrig"], "MWHEELUP", function ( element, menu, controller, model )
		if not IsRepeatButtonPress( model ) then
			CoD.GridAndListUtility.NavigateGridItemOnParentGridOrList( element, controller, false ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsRepeatButtonPress( nil ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_ltrig"], @"hash_0", nil, "MWHEELUP" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( SpecialOrders, "updateDataSource", function ( element, controller, f66_arg2, f66_arg3 )
		if CoD.BlackMarketUtility.IsShopListInFocus( f1_arg1, element ) then
			CoD.BlackMarketUtility.ChangeSupplyChainCameraBySelection( f1_arg0, f1_arg1, element ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	SpecialOrders:subscribeToGlobalModel( f1_arg1, "GlobalModel", "ItemshopRotation.cycled", function ( model )
		local f67_local0 = SpecialOrders --[[ @ 0]]
		if CoD.ModelUtility.IsGlobalModelValueTrue( "ItemshopRotation.cycled" ) then
			CoD.GridAndListUtility.UpdateDataSource( f67_local0, true, true, true ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	SpecialOrders:AddContextualMenuAction( f1_arg0, f1_arg1, @"menu/preview", function ( f68_arg0, f68_arg1, f68_arg2, f68_arg3 )
		if CoD.ModelUtility.IsSelfModelValueNonEmptyString( f68_arg0, f68_arg2, "movieName" ) then
			return function ( f69_arg0, f69_arg1, f69_arg2, f69_arg3 )
				SetControllerModelValue( f69_arg2, "LootStreamProgress.playAnimation", false ) --[[ @ 0]]
				CoD.VideoStreamingUtility.SetupVoDMovie( f69_arg2, f69_arg0, "" ) --[[ @ 0]]
				DelayOpenOverlay( f69_arg1, "VoDViewer", f69_arg2, {
					fullscreen = true
				} ) --[[ @ 0]]
			end
			
		else
			
		end
	end ) --[[ @ 0]]
	self:addElement( SpecialOrders ) --[[ @ 0]]
	self.SpecialOrders = SpecialOrders --[[ @ 0]]
	
	FeaturedItemsBracket = LUI.UIImage.new( 0.5, 0.5, -846, -311, 0.5, 0.5, -364, -356 ) --[[ @ 0]]
	FeaturedItemsBracket:setAlpha( 0.5 ) --[[ @ 0]]
	FeaturedItemsBracket:setZRot( 180 ) --[[ @ 0]]
	FeaturedItemsBracket:setImage( RegisterImage( @"hash_4C325BED3F226657" ) ) --[[ @ 0]]
	FeaturedItemsBracket:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_add" ) ) --[[ @ 0]]
	FeaturedItemsBracket:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	FeaturedItemsBracket:setupNineSliceShader( 16, 4 ) --[[ @ 0]]
	self:addElement( FeaturedItemsBracket ) --[[ @ 0]]
	self.FeaturedItemsBracket = FeaturedItemsBracket --[[ @ 0]]
	
	SpecialOrdersLabel = LUI.UIText.new( 0.5, 0.5, -277, -36, 0.5, 0.5, -388, -370 ) --[[ @ 0]]
	SpecialOrdersLabel:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	SpecialOrdersLabel:setText( LocalizeToUpperString( @"hash_3D3C4B3D8C22E57C" ) ) --[[ @ 0]]
	SpecialOrdersLabel:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	SpecialOrdersLabel:setLetterSpacing( 4 ) --[[ @ 0]]
	SpecialOrdersLabel:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	SpecialOrdersLabel:setAlignment( Enum[@"luialignment"][@"lui_alignment_bottom"] ) --[[ @ 0]]
	self:addElement( SpecialOrdersLabel ) --[[ @ 0]]
	self.SpecialOrdersLabel = SpecialOrdersLabel --[[ @ 0]]
	
	MyShopTimer = CoD.ListLabel.new( f1_arg0, f1_arg1, 0.5, 0.5, 11, 253, 0.5, 0.5, -369, -319 ) --[[ @ 0]]
	MyShopTimer:subscribeToGlobalModel( f1_arg1, "ItemshopRotation", "loot_itemshop_slot4_timer", function ( model )
		local f70_local0 = model:get() --[[ @ 0]]
		if f70_local0 ~= nil then
			MyShopTimer.TextBox2:setText( f70_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( MyShopTimer ) --[[ @ 0]]
	self.MyShopTimer = MyShopTimer --[[ @ 0]]
	
	local SpecialOrdersTimer = CoD.ListLabel.new( f1_arg0, f1_arg1, 0.5, 0.5, -273, -33, 0.5, 0.5, -369, -319 ) --[[ @ 0]]
	SpecialOrdersTimer:subscribeToGlobalModel( f1_arg1, "ItemshopRotation", "loot_itemshop_slot3_timer", function ( model )
		local f71_local0 = model:get() --[[ @ 0]]
		if f71_local0 ~= nil then
			SpecialOrdersTimer.TextBox2:setText( f71_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( SpecialOrdersTimer ) --[[ @ 0]]
	self.SpecialOrdersTimer = SpecialOrdersTimer --[[ @ 0]]
	
	local MyShop = LUI.UIList.new( f1_arg0, f1_arg1, 30, 0, nil, true, false, false, false ) --[[ @ 0]]
	MyShop:setLeftRight( 0.5, 0.5, 12, 252 ) --[[ @ 0]]
	MyShop:setTopBottom( 0.5, 0.5, -319, 191 ) --[[ @ 0]]
	MyShop:setWidgetType( CoD.BMTallItemContainer ) --[[ @ 0]]
	MyShop:setSpacing( 30 ) --[[ @ 0]]
	MyShop:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	MyShop:setHorizontalCounter( CoD.horizontalCounterTriggerPrompts ) --[[ @ 0]]
	MyShop:setDataSource( "MyShopItemList" ) --[[ @ 0]]
	MyShop:linkToElementModel( MyShop, "lootType", true, function ( model, f72_arg1 )
		CoD.Menu.UpdateButtonShownState( f72_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	MyShop:registerEventHandler( "list_item_lose_focus", function ( element, event )
		local f73_local0 = nil --[[ @ 0]]
		CoD.PlayerRoleUtility.StopGesturePreview( f1_arg0, f1_arg1 ) --[[ @ 0]]
		return f73_local0
	end ) --[[ @ 0]]
	MyShop:registerEventHandler( "occlusion_change", function ( element, event )
		local f74_local0 = nil --[[ @ 0]]
		if element.OcclusionChange then
			f74_local0 = element:OcclusionChange( event ) --[[ @ 0]]
		elseif element.super.OcclusionChange then
			f74_local0 = element.super:OcclusionChange( event ) --[[ @ 0]]
		end
		if IsEventPropertyEqualTo( event, "occluded", false ) then
			CoD.BlackMarketUtility.TriggerItemShopRevealAnimation( f1_arg1, element ) --[[ @ 0]]
			CoD.GridAndListUtility.UpdateDataSource( element, true, true, true ) --[[ @ 0]]
		end
		if not f74_local0 then
			f74_local0 = element:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f74_local0
	end ) --[[ @ 0]]
	MyShop:registerEventHandler( "lose_list_focus", function ( element, event )
		local f75_local0 = nil --[[ @ 0]]
		CoD.BlackMarketUtility.ChangeSupplyChainCameraBySelection( f1_arg0, f1_arg1, f1_arg0 ) --[[ @ 0]]
		return f75_local0
	end ) --[[ @ 0]]
	MyShop:registerEventHandler( "list_item_gain_focus", function ( element, event )
		local f76_local0 = nil --[[ @ 0]]
		if not IsListElementChildInState( element, "BMTallItem", "MysteryItem" ) then
			SetElementModelToFocusedElementModel( f1_arg1, self, element, "SupplyChainDetails" ) --[[ @ 0]]
			CoD.BlackMarketUtility.ChangeSupplyChainCameraBySelection( f1_arg0, f1_arg1, element ) --[[ @ 0]]
			CoD.BlackMarketUtility.AutoPlayGestureIfApplicable( f1_arg0, element, f1_arg1 ) --[[ @ 0]]
		end
		return f76_local0
	end ) --[[ @ 0]]
	MyShop:registerEventHandler( "gain_focus", function ( element, event )
		local f77_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f77_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f77_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_rtrig"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_ltrig"] ) --[[ @ 0]]
		return f77_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( MyShop, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"], nil, function ( element, menu, controller, model )
		if not CoD.ModelUtility.IsSelfModelValueEqualToEnum( element, controller, "lootType", LuaEnum.LOOT_TYPE.CONTRACT ) and IsListElementChildInState( element, "BMTallItem", "DefaultState" ) then
			CoD.BlackMarketUtility.PlayItemShopSelectSound( element, controller ) --[[ @ 0]]
			SetControllerModelValue( controller, "LootStreamProgress.playAnimation", false ) --[[ @ 0]]
			OpenOverlay( self, "ItemShopDetails", controller, {
				_model = element:getModel()
			} ) --[[ @ 0]]
			return true
		elseif IsListElementChildInState( element, "BMTallItem", "MysteryItem" ) then
			PlaySoundAlias( "uin_toggle_generic" ) --[[ @ 0]]
			CoD.BlackMarketUtility.RevealMyShopItem( controller, self.MyShop ) --[[ @ 0]]
			return true
		elseif IsListElementChildInState( element, "BMTallItem", "DefaultState" ) and CoD.ModelUtility.IsSelfModelValueEqualToEnum( element, controller, "lootType", LuaEnum.LOOT_TYPE.CONTRACT ) then
			PlaySoundAlias( "uin_toggle_generic" ) --[[ @ 0]]
			SetControllerModelValue( controller, "LootStreamProgress.playAnimation", false ) --[[ @ 0]]
			CoD.ContractUtility.OpenContractDetails( self, element, controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not CoD.ModelUtility.IsSelfModelValueEqualToEnum( element, controller, "lootType", LuaEnum.LOOT_TYPE.CONTRACT ) and IsListElementChildInState( element, "BMTallItem", "DefaultState" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"menu/select", nil, nil ) --[[ @ 0]]
			return true
		elseif IsListElementChildInState( element, "BMTallItem", "MysteryItem" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"menu/select", nil, nil ) --[[ @ 0]]
			return true
		elseif IsListElementChildInState( element, "BMTallItem", "DefaultState" ) and CoD.ModelUtility.IsSelfModelValueEqualToEnum( element, controller, "lootType", LuaEnum.LOOT_TYPE.CONTRACT ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"menu/select", nil, nil ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( MyShop, f1_arg1, Enum[@"luibutton"][@"lui_key_rtrig"], "MWHEELDOWN", function ( element, menu, controller, model )
		if not IsRepeatButtonPress( model ) then
			CoD.GridAndListUtility.NavigateGridItemOnParentGridOrList( element, controller, true ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsRepeatButtonPress( nil ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_rtrig"], @"hash_0", nil, "MWHEELDOWN" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( MyShop, f1_arg1, Enum[@"luibutton"][@"lui_key_ltrig"], "MWHEELUP", function ( element, menu, controller, model )
		if not IsRepeatButtonPress( model ) then
			CoD.GridAndListUtility.NavigateGridItemOnParentGridOrList( element, controller, false ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsRepeatButtonPress( nil ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_ltrig"], @"hash_0", nil, "MWHEELUP" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( MyShop, "updateDataSource", function ( element, controller, f84_arg2, f84_arg3 )
		if CoD.BlackMarketUtility.IsShopListInFocus( f1_arg1, element ) and CoD.ModelUtility.IsSelfModelValueEqualToEnum( element, f1_arg1, "lootType", LuaEnum.LOOT_TYPE.EMPTY ) then
			CoD.BlackMarketUtility.ChangeSupplyChainCameraBySelection( f1_arg0, f1_arg1, element ) --[[ @ 0]]
			SetAlpha( self.MyShopTimer, 0 ) --[[ @ 0]]
		elseif CoD.BlackMarketUtility.IsShopListInFocus( f1_arg1, element ) and not CoD.ModelUtility.IsSelfModelValueEqualToEnum( element, f1_arg1, "lootType", LuaEnum.LOOT_TYPE.EMPTY ) then
			CoD.BlackMarketUtility.ChangeSupplyChainCameraBySelection( f1_arg0, f1_arg1, element ) --[[ @ 0]]
			CoD.BlackMarketUtility.AutoPlayGestureIfApplicable( f1_arg0, element, f1_arg1 ) --[[ @ 0]]
			SetAlpha( self.MyShopTimer, 1 ) --[[ @ 0]]
		elseif CoD.ModelUtility.IsSelfModelValueEqualToEnum( element, f1_arg1, "lootType", LuaEnum.LOOT_TYPE.EMPTY ) then
			SetAlpha( self.MyShopTimer, 0 ) --[[ @ 0]]
		elseif not CoD.ModelUtility.IsSelfModelValueEqualToEnum( element, f1_arg1, "lootType", LuaEnum.LOOT_TYPE.EMPTY ) then
			SetAlpha( self.MyShopTimer, 1 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	MyShop:subscribeToGlobalModel( f1_arg1, "GlobalModel", "ItemshopRotation.cycled", function ( model )
		local f85_local0 = MyShop --[[ @ 0]]
		if CoD.ModelUtility.IsGlobalModelValueTrue( "ItemshopRotation.cycled" ) then
			CoD.GridAndListUtility.UpdateDataSource( f85_local0, true, true, true ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( MyShop ) --[[ @ 0]]
	self.MyShop = MyShop --[[ @ 0]]
	
	local MyShopLabel = LUI.UIText.new( 0.5, 0.5, 7, 247, 0.5, 0.5, -388, -370 ) --[[ @ 0]]
	MyShopLabel:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	MyShopLabel:setText( LocalizeToUpperString( @"menu/my_shop" ) ) --[[ @ 0]]
	MyShopLabel:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	MyShopLabel:setLetterSpacing( 4 ) --[[ @ 0]]
	MyShopLabel:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	MyShopLabel:setAlignment( Enum[@"luialignment"][@"lui_alignment_bottom"] ) --[[ @ 0]]
	self:addElement( MyShopLabel ) --[[ @ 0]]
	self.MyShopLabel = MyShopLabel --[[ @ 0]]
	
	local TransactionDeepLinkButton = nil --[[ @ 0]]
	
	TransactionDeepLinkButton = CoD.DirectorPreGameButton.new( f1_arg0, f1_arg1, 0.5, 0.5, -840, -610, 0, 0, 748, 818 ) --[[ @ 0]]
	TransactionDeepLinkButton.DirectorCustomStartButton.MiddleText:setText( LocalizeToUpperString( @"hash_44031C820A02E7BA" ) ) --[[ @ 0]]
	TransactionDeepLinkButton.DirectorCustomStartButton.MiddleTextFocus:setText( LocalizeToUpperString( @"hash_44031C820A02E7BA" ) ) --[[ @ 0]]
	TransactionDeepLinkButton:registerEventHandler( "gain_focus", function ( element, event )
		local f86_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f86_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f86_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_none"] ) --[[ @ 0]]
		return f86_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( TransactionDeepLinkButton, f1_arg1, Enum[@"luibutton"][@"lui_key_none"], "ui_confirm", function ( element, menu, controller, model )
		if IsPC() and CoD.PCKoreaUtility.IsInKorea() then
			CoD.PCKoreaUtility.OpenTransactionsDeepLinkBlackmarket( controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsPC() and CoD.PCKoreaUtility.IsInKorea() then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_none"], @"hash_0", nil, "ui_confirm" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( TransactionDeepLinkButton, f1_arg1, Enum[@"luibutton"][@"lui_key_none"], "MOUSE1", function ( element, menu, controller, model )
		if IsPC() and CoD.PCKoreaUtility.IsInKorea() then
			CoD.PCKoreaUtility.OpenTransactionsDeepLinkBlackmarket( controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsPC() and CoD.PCKoreaUtility.IsInKorea() then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_none"], @"hash_0", nil, "MOUSE1" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( TransactionDeepLinkButton ) --[[ @ 0]]
	self.TransactionDeepLinkButton = TransactionDeepLinkButton --[[ @ 0]]
	
	local MyShopBracket = LUI.UIImage.new( 0.5, 0.5, 7, 257, 0.5, 0.5, -364, -356 ) --[[ @ 0]]
	MyShopBracket:setAlpha( 0.5 ) --[[ @ 0]]
	MyShopBracket:setZRot( 180 ) --[[ @ 0]]
	MyShopBracket:setImage( RegisterImage( @"hash_4C325BED3F226657" ) ) --[[ @ 0]]
	MyShopBracket:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_add" ) ) --[[ @ 0]]
	MyShopBracket:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	MyShopBracket:setupNineSliceShader( 16, 4 ) --[[ @ 0]]
	self:addElement( MyShopBracket ) --[[ @ 0]]
	self.MyShopBracket = MyShopBracket --[[ @ 0]]
	
	local SupplyChainDetails = CoD.ContractSupplyChainDetails.new( f1_arg0, f1_arg1, 0.5, 0.5, 310, 910, 0.5, 0.5, -619, 461 ) --[[ @ 0]]
	SupplyChainDetails:mergeStateConditions( {
		{
			stateName = "NoInfoPanel",
			condition = function ( menu, element, event )
				local f91_local0 --[[ @ 0]]
				if not IsMouseOrKeyboard( f1_arg1 ) then
					f91_local0 = AlwaysTrue() --[[ @ 0]]
				else
					f91_local0 = false --[[ @ 0]]
				end
				return f91_local0
			end
		}
	} ) --[[ @ 0]]
	SupplyChainDetails:linkToElementModel( SupplyChainDetails, "name", true, function ( model )
		f1_arg0:updateElementState( SupplyChainDetails, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "name"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	SupplyChainDetails:appendEventHandler( "input_source_changed", function ( f93_arg0, f93_arg1 )
		f93_arg1.menu = f93_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( SupplyChainDetails, f93_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local DirectorPreGameButton = SupplyChainDetails --[[ @ 0]]
	local DiscountTiersWidget = SupplyChainDetails.subscribeToModel --[[ @ 0]]
	local f1_local20 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	DiscountTiersWidget( DirectorPreGameButton, f1_local20.LastInput, function ( f94_arg0 )
		f1_arg0:updateElementState( SupplyChainDetails, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f94_arg0:get(),
			modelName = "LastInput"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	SupplyChainDetails:linkToElementModel( SupplyChainDetails, "character", true, function ( model )
		f1_arg0:updateElementState( SupplyChainDetails, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "character"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	SupplyChainDetails:linkToElementModel( SupplyChainDetails, "weaponRef", true, function ( model )
		f1_arg0:updateElementState( SupplyChainDetails, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "weaponRef"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( SupplyChainDetails ) --[[ @ 0]]
	self.SupplyChainDetails = SupplyChainDetails --[[ @ 0]]
	
	DiscountTiersWidget = CoD.DiscountTiersContainer.new( f1_arg0, f1_arg1, 0.5, 0.5, -960, 960, 0.5, 0.5, -540, 540 ) --[[ @ 0]]
	DiscountTiersWidget:registerEventHandler( "gain_list_focus", function ( element, event )
		local f97_local0 = nil --[[ @ 0]]
		SetElementState( self, self.SupplyChainDetails, f1_arg1, "Hidden" ) --[[ @ 0]]
		SetElementState( self, self.DiscountTiersWidget, f1_arg1, "DefaultState" ) --[[ @ 0]]
		return f97_local0
	end ) --[[ @ 0]]
	DiscountTiersWidget:registerEventHandler( "lose_list_focus", function ( element, event )
		local f98_local0 = nil --[[ @ 0]]
		UpdateElementState( self, "SupplyChainDetails", f1_arg1 ) --[[ @ 0]]
		UpdateElementState( self, "DiscountTiersWidget", f1_arg1 ) --[[ @ 0]]
		return f98_local0
	end ) --[[ @ 0]]
	DiscountTiersWidget:registerEventHandler( "list_item_gain_focus", function ( element, event )
		local f99_local0 = nil --[[ @ 0]]
		CoD.BlackMarketUtility.ChangeSupplyChainCameraBySelection( f1_arg0, f1_arg1, element ) --[[ @ 0]]
		return f99_local0
	end ) --[[ @ 0]]
	self:addElement( DiscountTiersWidget ) --[[ @ 0]]
	self.DiscountTiersWidget = DiscountTiersWidget --[[ @ 0]]
	
	DirectorPreGameButton = CoD.DirectorPreGameButton.new( f1_arg0, f1_arg1, 0, 0, 1217, 1447, 0, 0, 875, 945 ) --[[ @ 0]]
	DirectorPreGameButton.DirectorCustomStartButton.MiddleText:setText( LocalizeToUpperString( @"hash_6616EBD2B8F67E64" ) ) --[[ @ 0]]
	DirectorPreGameButton.DirectorCustomStartButton.MiddleTextFocus:setText( LocalizeToUpperString( @"hash_6616EBD2B8F67E64" ) ) --[[ @ 0]]
	DirectorPreGameButton:registerEventHandler( "gain_focus", function ( element, event )
		local f100_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f100_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f100_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		return f100_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( DirectorPreGameButton, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"], nil, function ( element, menu, controller, model )
		OpenOverlay( self, "BlackMarketContracts", controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"menu/select", nil, nil ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	self:addElement( DirectorPreGameButton ) --[[ @ 0]]
	self.DirectorPreGameButton = DirectorPreGameButton --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "KBM",
			condition = function ( menu, element, event )
				return IsPC() and IsMouseOrKeyboard( f1_arg1 )
			end
		}
	} ) --[[ @ 0]]
	self:appendEventHandler( "input_source_changed", function ( f104_arg0, f104_arg1 )
		f104_arg1.menu = f104_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( self, f104_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local f1_local21 = self --[[ @ 0]]
	f1_local20 = self.subscribeToModel --[[ @ 0]]
	local f1_local22 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local20( f1_local21, f1_local22.LastInput, function ( f105_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f105_arg0:get(),
			modelName = "LastInput"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:subscribeToGlobalModel( f1_arg1, "GlobalModel", "RefreshDWInventoryMenu", function ( model )
		local f106_local0 = self --[[ @ 0]]
		if not CoD.BlackMarketUtility.IsMenuOccluded( f1_arg0 ) then
			UpdateDataSource( self, self.MyShop, f1_arg1 ) --[[ @ 0]]
			UpdateDataSource( self, self.FeaturedSlot1, f1_arg1 ) --[[ @ 0]]
			UpdateDataSource( self, self.SpecialOrders, f1_arg1 ) --[[ @ 0]]
			UpdateDataSource( self, self.FeaturedSlot2, f1_arg1 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	FeaturedSlot1.id = "FeaturedSlot1" --[[ @ 0]]
	FeaturedSlot2.id = "FeaturedSlot2" --[[ @ 0]]
	SpecialOrders.id = "SpecialOrders" --[[ @ 0]]
	MyShop.id = "MyShop" --[[ @ 0]]
	if CoD.isPC then
		TransactionDeepLinkButton.id = "TransactionDeepLinkButton" --[[ @ 0]]
	end
	if CoD.isPC then
		SupplyChainDetails.id = "SupplyChainDetails" --[[ @ 0]]
	end
	DiscountTiersWidget.id = "DiscountTiersWidget" --[[ @ 0]]
	DirectorPreGameButton.id = "DirectorPreGameButton" --[[ @ 0]]
	self.__defaultFocus = SpecialOrders --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	f1_local20 = self --[[ @ 0]]
	SendClientScriptMenuChangeNotifyWithState( f1_arg1, f1_arg0, true, "character" ) --[[ @ 0]]
	SetMenuProperty( f1_arg0, "__hideSupplyChainDetailsButtons", true ) --[[ @ 0]]
	CoD.BlackMarketUtility.ForceStreamStoreImages( f1_arg1 ) --[[ @ 0]]
	CoD.BlackMarketUtility.TriggerGreetingVO( self, f1_arg1 ) --[[ @ 0]]
	CoD.BlackMarketUtility.SetupBlackJackFrameContextualMenus( self, f1_arg1 ) --[[ @ 0]]
	f1_local20 = FeaturedSlot1 --[[ @ 0]]
	CoD.BaseUtility.DisableNavigation( f1_local20 ) --[[ @ 0]]
	SetElementProperty( f1_local20, "__loopOnSameRow", true ) --[[ @ 0]]
	SetElementProperty( f1_local20, "__allowCreateOnLoop", true ) --[[ @ 0]]
	CoD.BlackMarketUtility.InitialHideScrollPrompts( self, f1_arg1, f1_local20 ) --[[ @ 0]]
	CoD.BlackMarketUtility.ShopCycleThroughItems( f1_arg0, f1_arg1, f1_local20, 0.5 ) --[[ @ 0]]
	f1_local20 = FeaturedSlot2 --[[ @ 0]]
	CoD.BaseUtility.DisableNavigation( f1_local20 ) --[[ @ 0]]
	SetElementProperty( f1_local20, "__loopOnSameRow", true ) --[[ @ 0]]
	SetElementProperty( f1_local20, "__allowCreateOnLoop", true ) --[[ @ 0]]
	CoD.BlackMarketUtility.InitialHideScrollPrompts( self, f1_arg1, f1_local20 ) --[[ @ 0]]
	CoD.BlackMarketUtility.ShopCycleThroughItems( f1_arg0, f1_arg1, f1_local20, 0.5 ) --[[ @ 0]]
	f1_local20 = SpecialOrders --[[ @ 0]]
	CoD.BaseUtility.DisableNavigation( f1_local20 ) --[[ @ 0]]
	SetElementProperty( f1_local20, "__loopOnSameRow", true ) --[[ @ 0]]
	SetElementProperty( f1_local20, "__allowCreateOnLoop", true ) --[[ @ 0]]
	CoD.BlackMarketUtility.InitialHideScrollPrompts( self, f1_arg1, f1_local20 ) --[[ @ 0]]
	CoD.BlackMarketUtility.ShopCycleThroughItems( f1_arg0, f1_arg1, f1_local20, 0.5 ) --[[ @ 0]]
	f1_local20 = MyShop --[[ @ 0]]
	CoD.BaseUtility.DisableNavigation( f1_local20 ) --[[ @ 0]]
	SetElementProperty( f1_local20, "__loopOnSameRow", true ) --[[ @ 0]]
	SetElementProperty( f1_local20, "__allowCreateOnLoop", true ) --[[ @ 0]]
	CoD.BlackMarketUtility.InitialHideScrollPrompts( self, f1_arg1, f1_local20 ) --[[ @ 0]]
	f1_local20 = TransactionDeepLinkButton --[[ @ 0]]
	if IsPC() and not CoD.PCKoreaUtility.ShowTransactionHistoryButton() then
		ReplaceElementWithFake( self, "TransactionDeepLinkButton" ) --[[ @ 0]]
	end
	return self
end
 --[[ @ 0]]
CoD.BlackMarketItemShopFrame.__resetProperties = function ( f107_arg0 )
	f107_arg0.MyShop:completeAnimation() --[[ @ 0]]
	f107_arg0.SpecialOrders:completeAnimation() --[[ @ 0]]
	f107_arg0.FeaturedSlot2:completeAnimation() --[[ @ 0]]
	f107_arg0.FeaturedSlot1:completeAnimation() --[[ @ 0]]
	f107_arg0.MyShop:setHorizontalCounter( CoD.horizontalCounterTriggerPrompts ) --[[ @ 0]]
	f107_arg0.SpecialOrders:setHorizontalCounter( CoD.horizontalCounterTriggerPrompts ) --[[ @ 0]]
	f107_arg0.FeaturedSlot2:setHorizontalCounter( CoD.horizontalCounterTriggerPrompts ) --[[ @ 0]]
	f107_arg0.FeaturedSlot1:setHorizontalCounter( CoD.horizontalCounterTriggerPrompts ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.BlackMarketItemShopFrame.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f108_arg0, f108_arg1 )
			f108_arg0:__resetProperties() --[[ @ 0]]
			f108_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	KBM = {
		DefaultClip = function ( f109_arg0, f109_arg1 )
			f109_arg0:__resetProperties() --[[ @ 0]]
			f109_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f109_arg0.FeaturedSlot1:completeAnimation() --[[ @ 0]]
			f109_arg0.FeaturedSlot1:setHorizontalCounter( CoD.horizontalCounter ) --[[ @ 0]]
			f109_arg0.clipFinished( f109_arg0.FeaturedSlot1 ) --[[ @ 0]]
			f109_arg0.FeaturedSlot2:completeAnimation() --[[ @ 0]]
			f109_arg0.FeaturedSlot2:setHorizontalCounter( CoD.horizontalCounter ) --[[ @ 0]]
			f109_arg0.clipFinished( f109_arg0.FeaturedSlot2 ) --[[ @ 0]]
			f109_arg0.SpecialOrders:completeAnimation() --[[ @ 0]]
			f109_arg0.SpecialOrders:setHorizontalCounter( CoD.horizontalCounter ) --[[ @ 0]]
			f109_arg0.clipFinished( f109_arg0.SpecialOrders ) --[[ @ 0]]
			f109_arg0.MyShop:completeAnimation() --[[ @ 0]]
			f109_arg0.MyShop:setHorizontalCounter( CoD.horizontalCounter ) --[[ @ 0]]
			f109_arg0.clipFinished( f109_arg0.MyShop ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.BlackMarketItemShopFrame.__onClose = function ( f110_arg0 )
	f110_arg0.FeaturedSlot1Timer:close() --[[ @ 0]]
	f110_arg0.FeaturedSlot1:close() --[[ @ 0]]
	f110_arg0.FeaturedSlot2Timer:close() --[[ @ 0]]
	f110_arg0.FeaturedSlot2:close() --[[ @ 0]]
	f110_arg0.SpecialOrders:close() --[[ @ 0]]
	f110_arg0.MyShopTimer:close() --[[ @ 0]]
	f110_arg0.SpecialOrdersTimer:close() --[[ @ 0]]
	f110_arg0.MyShop:close() --[[ @ 0]]
	f110_arg0.TransactionDeepLinkButton:close() --[[ @ 0]]
	f110_arg0.SupplyChainDetails:close() --[[ @ 0]]
	f110_arg0.DiscountTiersWidget:close() --[[ @ 0]]
	f110_arg0.DirectorPreGameButton:close() --[[ @ 0]]
end
 --[[ @ 0]]
