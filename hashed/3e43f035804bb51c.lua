-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:33
require( "ui/uieditor/menus/startmenu/popups/startmenu_options_codaccount_cta" ) --[[ @ 0]]
require( "ui/uieditor/menus/startmenu/popups/startmenu_options_codaccount_manageaccount" ) --[[ @ 0]]
require( "x64:673ff064d16a0105" ) --[[ @ 0]]
require( "x64:6a1e3458734c429b" ) --[[ @ 0]]
require( "x64:6e6df4068375d284" ) --[[ @ 0]]
require( "x64:5750f2874ca1277f" ) --[[ @ 0]]
require( "x64:5c46d9902ea5afaf" ) --[[ @ 0]]
require( "ui/uieditor/widgets/startmenu/startmenu_button_sm" ) --[[ @ 0]]
require( "x64:629205f7f485f09d" ) --[[ @ 0]]

CoD.StartMenu_Options = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.StartMenu_Options.__defaultWidth = 1920 --[[ @ 0]]
CoD.StartMenu_Options.__defaultHeight = 1080 --[[ @ 0]]
CoD.StartMenu_Options.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	CoD.BaseUtility.InitControllerModelIfNotSet( f1_arg1, "hudItems.hasStartedWZMatch", false ) --[[ @ 0]]
	self:setClass( CoD.StartMenu_Options ) --[[ @ 0]]
	self.id = "StartMenu_Options" --[[ @ 0]]
	self.soundSet = "ChooseDecal" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local Credits = CoD.StartMenu_Button_SM.new( f1_arg0, f1_arg1, 0.5, 0.5, 270.5, 510.5, 0.5, 0.5, -69, 171 ) --[[ @ 0]]
	Credits:mergeStateConditions( {
		{
			stateName = "Disabled",
			condition = function ( menu, element, event )
				return not CoD.OptionsUtility.AreCreditsAvailable( f1_arg1 )
			end
		}
	} ) --[[ @ 0]]
	Credits.StartMenuOptionsSubFrame.ImageContainer.ImageContainer:setImage( RegisterImage( @"ui_icon_startmenu_option_credits" ) ) --[[ @ 0]]
	Credits.StartMenuOptionsSubFrame.ButtonText:setText( LocalizeToUpperString( @"hash_1791B466F6591CE9" ) ) --[[ @ 0]]
	Credits:registerEventHandler( "gain_focus", function ( element, event )
		local f3_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f3_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f3_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f3_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( Credits, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		if IsInDefaultState( self.Credits ) then
			OpenOverlay_NoDependency( self, "Credit_Fullscreen", controller, nil ) --[[ @ 0]]
			PlaySoundAlias( "uin_toggle_generic" ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsInDefaultState( self.Credits ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, "ui_confirm" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( Credits ) --[[ @ 0]]
	self.Credits = Credits --[[ @ 0]]
	
	local GraphicContent = CoD.StartMenu_Button_SM.new( f1_arg0, f1_arg1, 0.5, 0.5, 9, 249, 0.5, 0.5, -69, 171 ) --[[ @ 0]]
	GraphicContent:mergeStateConditions( {
		{
			stateName = "Disabled",
			condition = function ( menu, element, event )
				return CoD.DirectorUtility.DisableForCurrentMilestone( f1_arg1 ) and not IsGameTrial()
			end
		}
	} ) --[[ @ 0]]
	GraphicContent.StartMenuOptionsSubFrame.ImageContainer.ImageContainer:setImage( RegisterImage( @"ui_icon_startmenu_option_graphiccontent" ) ) --[[ @ 0]]
	GraphicContent.StartMenuOptionsSubFrame.ButtonText:setText( LocalizeToUpperString( @"hash_1D52DB291DBBD257" ) ) --[[ @ 0]]
	GraphicContent:registerEventHandler( "gain_focus", function ( element, event )
		local f7_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f7_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f7_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f7_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( GraphicContent, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		if IsInDefaultState( self.GraphicContent ) then
			CoD.ModelUtility.SetControllerModelValueToEnum( controller, "selectedPlayerOptionsTab", CoD.OptionsUtility.PlayerOptionsTabIndex.OPTION_TAB_CONTENT_FILTER ) --[[ @ 0]]
			OpenOverlay( self, "StartMenu_Options_Main", controller, nil ) --[[ @ 0]]
			PlaySoundAlias( "uin_toggle_generic" ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsInDefaultState( self.GraphicContent ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, "ui_confirm" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( GraphicContent ) --[[ @ 0]]
	self.GraphicContent = GraphicContent --[[ @ 0]]
	
	local Muting = CoD.StartMenu_Button_SM.new( f1_arg0, f1_arg1, 0.5, 0.5, -257, -17, 0.5, 0.5, -69, 171 ) --[[ @ 0]]
	Muting:mergeStateConditions( {
		{
			stateName = "Disabled",
			condition = function ( menu, element, event )
				return CoD.DirectorUtility.IsOfflineDemo() and not IsGameTrial()
			end
		}
	} ) --[[ @ 0]]
	Muting.StartMenuOptionsSubFrame.ImageContainer.ImageContainer:setImage( RegisterImage( @"ui_icon_startmenu_option_muting" ) ) --[[ @ 0]]
	Muting.StartMenuOptionsSubFrame.ButtonText:setText( LocalizeToUpperString( @"hash_3B87589E683A1951" ) ) --[[ @ 0]]
	Muting:registerEventHandler( "gain_focus", function ( element, event )
		local f11_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f11_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f11_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f11_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( Muting, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		if IsInDefaultState( self.Muting ) then
			CoD.ModelUtility.SetControllerModelValueToEnum( controller, "selectedPlayerOptionsTab", CoD.OptionsUtility.PlayerOptionsTabIndex.OPTION_TAB_VOICE ) --[[ @ 0]]
			OpenOverlay( self, "StartMenu_Options_Main", controller, nil ) --[[ @ 0]]
			PlaySoundAlias( "uin_toggle_generic" ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsInDefaultState( self.Muting ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, "ui_confirm" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( Muting ) --[[ @ 0]]
	self.Muting = Muting --[[ @ 0]]
	
	local Network = CoD.StartMenu_Button_SM.new( f1_arg0, f1_arg1, 0.5, 0.5, -521.5, -281.5, 0.5, 0.5, -69, 171 ) --[[ @ 0]]
	Network:mergeStateConditions( {
		{
			stateName = "Disabled",
			condition = function ( menu, element, event )
				return CoD.DirectorUtility.IsOfflineDemo() and not IsGameTrial()
			end
		}
	} ) --[[ @ 0]]
	Network.StartMenuOptionsSubFrame.ImageContainer.ImageContainer:setImage( RegisterImage( @"ui_icon_startmenu_option_network" ) ) --[[ @ 0]]
	Network.StartMenuOptionsSubFrame.ButtonText:setText( LocalizeToUpperString( @"hash_39F9A830F04564A7" ) ) --[[ @ 0]]
	Network:registerEventHandler( "gain_focus", function ( element, event )
		local f15_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f15_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f15_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f15_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( Network, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		if IsInDefaultState( self.Network ) then
			CoD.ModelUtility.SetControllerModelValueToEnum( controller, "selectedPlayerOptionsTab", CoD.OptionsUtility.PlayerOptionsTabIndex.OPTION_TAB_NETWORK ) --[[ @ 0]]
			OpenOverlay( self, "StartMenu_Options_Main", controller, nil ) --[[ @ 0]]
			PlaySoundAlias( "uin_toggle_generic" ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsInDefaultState( self.Network ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, "ui_confirm" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( Network ) --[[ @ 0]]
	self.Network = Network --[[ @ 0]]
	
	local Blackout = CoD.StartMenu_Button_SM.new( f1_arg0, f1_arg1, 0.5, 0.5, 270.5, 510.5, 0.5, 0.5, -336, -96 ) --[[ @ 0]]
	Blackout:mergeStateConditions( {
		{
			stateName = "Disabled",
			condition = function ( menu, element, event )
				local f18_local0 --[[ @ 0]]
				if not IsWarzone() then
					f18_local0 = not IsMainModeInvalid() --[[ @ 0]]
				else
					f18_local0 = false --[[ @ 0]]
				end
				return f18_local0
			end
		}
	} ) --[[ @ 0]]
	local Graphics = Blackout --[[ @ 0]]
	local Audio = Blackout.subscribeToModel --[[ @ 0]]
	local Controls = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	Audio( Graphics, Controls["lobbyRoot.lobbyNav"], function ( f19_arg0 )
		f1_arg0:updateElementState( Blackout, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f19_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	Graphics = Blackout --[[ @ 0]]
	Audio = Blackout.subscribeToModel --[[ @ 0]]
	Controls = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	Audio( Graphics, Controls["lobbyRoot.lobbyMainMode"], function ( f20_arg0 )
		f1_arg0:updateElementState( Blackout, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f20_arg0:get(),
			modelName = "lobbyRoot.lobbyMainMode"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	Blackout.StartMenuOptionsSubFrame.ImageContainer.ImageContainer:setImage( RegisterImage( @"ui_icon_startmenu_option_music" ) ) --[[ @ 0]]
	Blackout.StartMenuOptionsSubFrame.ButtonText:setText( LocalizeToUpperString( @"hash_7A2DD20750465431" ) ) --[[ @ 0]]
	Blackout:registerEventHandler( "gain_focus", function ( element, event )
		local f21_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f21_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f21_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f21_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( Blackout, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		if IsInDefaultState( self.Blackout ) then
			CoD.ModelUtility.SetControllerModelValueToEnum( controller, "selectedPlayerOptionsTab", CoD.OptionsUtility.PlayerOptionsTabIndex.OPTION_TAB_WARZONE ) --[[ @ 0]]
			OpenOverlay( self, "StartMenu_Options_Main", controller, nil ) --[[ @ 0]]
			PlaySoundAlias( "uin_toggle_generic" ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsInDefaultState( self.Blackout ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, "ui_confirm" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( Blackout ) --[[ @ 0]]
	self.Blackout = Blackout --[[ @ 0]]
	
	Audio = CoD.StartMenu_Button_SM.new( f1_arg0, f1_arg1, 0.5, 0.5, 9, 249, 0.5, 0.5, -336, -96 ) --[[ @ 0]]
	Audio:mergeStateConditions( {
		{
			stateName = "Disabled",
			condition = function ( menu, element, event )
				return not ShouldOpenGraphicsAndSoundOptions()
			end
		}
	} ) --[[ @ 0]]
	Audio.StartMenuOptionsSubFrame.ImageContainer.ImageContainer:setImage( RegisterImage( @"uie_img_t7_menu_startmenu_option_audio" ) ) --[[ @ 0]]
	Audio.StartMenuOptionsSubFrame.ButtonText:setText( LocalizeToUpperString( @"hash_B8F71718019166B" ) ) --[[ @ 0]]
	Audio:registerEventHandler( "gain_focus", function ( element, event )
		local f25_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f25_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f25_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f25_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( Audio, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		if ShouldOpenGraphicsAndSoundOptions() then
			CoD.ModelUtility.SetControllerModelValueToEnum( controller, "selectedPlayerOptionsTab", CoD.OptionsUtility.PlayerOptionsTabIndex.OPTION_TAB_AUDIO ) --[[ @ 0]]
			OpenOverlay( self, "StartMenu_Options_Main", controller, nil ) --[[ @ 0]]
			PlaySoundAlias( "uin_toggle_generic" ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if ShouldOpenGraphicsAndSoundOptions() then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, "ui_confirm" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( Audio ) --[[ @ 0]]
	self.Audio = Audio --[[ @ 0]]
	
	Graphics = CoD.StartMenu_Button_SM.new( f1_arg0, f1_arg1, 0.5, 0.5, -257, -17, 0.5, 0.5, -336, -96 ) --[[ @ 0]]
	Graphics:mergeStateConditions( {
		{
			stateName = "Disabled",
			condition = function ( menu, element, event )
				return not ShouldOpenGraphicsAndSoundOptions()
			end
		}
	} ) --[[ @ 0]]
	Graphics.StartMenuOptionsSubFrame.ImageContainer.ImageContainer:setImage( RegisterImage( @"uie_ui_icon_startmenu_option_graphics" ) ) --[[ @ 0]]
	Graphics.StartMenuOptionsSubFrame.ButtonText:setText( LocalizeToUpperString( @"hash_1E2B4B3485831A1A" ) ) --[[ @ 0]]
	Graphics:registerEventHandler( "gain_focus", function ( element, event )
		local f29_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f29_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f29_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f29_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( Graphics, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		if IsInDefaultState( self.Graphics ) then
			CoD.ModelUtility.SetControllerModelValueToEnum( controller, "selectedPlayerOptionsTab", CoD.OptionsUtility.PlayerOptionsTabIndex.OPTION_TAB_GRAPHICS ) --[[ @ 0]]
			OpenOverlay( self, "StartMenu_Options_Main", controller, nil ) --[[ @ 0]]
			PlaySoundAlias( "uin_toggle_generic" ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsInDefaultState( self.Graphics ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, "ui_confirm" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( Graphics ) --[[ @ 0]]
	self.Graphics = Graphics --[[ @ 0]]
	
	Controls = CoD.StartMenu_Button_SM.new( f1_arg0, f1_arg1, 0.5, 0.5, -521.5, -281.5, 0.5, 0.5, -336, -96 ) --[[ @ 0]]
	Controls.StartMenuOptionsSubFrame.ButtonText:setText( LocalizeToUpperString( @"hash_219352A5A4C9CAC9" ) ) --[[ @ 0]]
	Controls:subscribeToGlobalModel( f1_arg1, "PlatformControllerImage", "image", function ( model )
		local f32_local0 = model:get() --[[ @ 0]]
		if f32_local0 ~= nil then
			Controls.StartMenuOptionsSubFrame.ImageContainer.ImageContainer:setImage( RegisterImage( f32_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	Controls:registerEventHandler( "gain_focus", function ( element, event )
		local f33_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f33_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f33_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f33_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( Controls, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		CoD.ModelUtility.SetControllerModelValueToEnum( controller, "selectedPlayerOptionsTab", CoD.OptionsUtility.PlayerOptionsTabIndex.OPTION_TAB_CONTROLS ) --[[ @ 0]]
		OpenOverlay( self, "StartMenu_Options_Main", controller, nil ) --[[ @ 0]]
		PlaySoundAlias( "uin_toggle_generic" ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, "ui_confirm" ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	self:addElement( Controls ) --[[ @ 0]]
	self.Controls = Controls --[[ @ 0]]
	
	local QuitButtonCodcaster = CoD.StartMenu_QuitButtonFitted.new( f1_arg0, f1_arg1, 0.5, 0.5, 290.5, 490.5, 0.5, 0.5, 226, 295 ) --[[ @ 0]]
	QuitButtonCodcaster:appendEventHandler( "input_source_changed", function ( f36_arg0, f36_arg1 )
		f36_arg1.menu = f36_arg1.menu or f1_arg0 --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f36_arg0, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local PrivacySettingsButton = QuitButtonCodcaster --[[ @ 0]]
	local CoDAccount = QuitButtonCodcaster.subscribeToModel --[[ @ 0]]
	local QuitButton = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	CoDAccount( PrivacySettingsButton, QuitButton.LastInput, function ( f37_arg0, f37_arg1 )
		CoD.Menu.UpdateButtonShownState( f37_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	QuitButtonCodcaster:registerEventHandler( "gain_focus", function ( element, event )
		local f38_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f38_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f38_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f38_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( QuitButtonCodcaster, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "MOUSE1", function ( element, menu, controller, model )
		if IsMouseOrKeyboard( controller ) and IsPC() then
			QuitPCGame_MP( self, controller, false ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsMouseOrKeyboard( controller ) and IsPC() then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_0", nil, "MOUSE1" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( QuitButtonCodcaster, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], nil, function ( element, menu, controller, model )
		if IsGamepad( controller ) then
			CoD.StartMenuUtility.QuitGameWarningPrompt( controller, menu ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsGamepad( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_0", nil, nil ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( QuitButtonCodcaster ) --[[ @ 0]]
	self.QuitButtonCodcaster = QuitButtonCodcaster --[[ @ 0]]
	
	CoDAccount = CoD.StartMenu_Options_CoDAccountButton.new( f1_arg0, f1_arg1, 0.5, 0.5, -265, 249, 0.5, 0.5, 226, 295 ) --[[ @ 0]]
	CoDAccount.DirectorCustomStartButton.MiddleText:setText( LocalizeToUpperString( @"hash_630BC41F2404F851" ) ) --[[ @ 0]]
	CoDAccount.DirectorCustomStartButton.MiddleTextFocus:setText( LocalizeToUpperString( @"hash_630BC41F2404F851" ) ) --[[ @ 0]]
	CoDAccount:registerEventHandler( "gain_focus", function ( element, event )
		local f43_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f43_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f43_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f43_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( CoDAccount, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		if CoD.CoDAccountUtility.IsAccountFeatureEnabled( controller ) and not IsSignedIntoUno( controller ) then
			OpenOverlay( self, "StartMenu_Options_CoDAccount_CTA", controller ) --[[ @ 0]]
			PlaySoundAlias( "uin_toggle_generic" ) --[[ @ 0]]
			return true
		elseif CoD.CoDAccountUtility.IsAccountFeatureEnabled( controller ) and IsSignedIntoUno( controller ) then
			OpenOverlay( self, "StartMenu_Options_CoDAccount_ManageAccount", controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if CoD.CoDAccountUtility.IsAccountFeatureEnabled( controller ) and not IsSignedIntoUno( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, "ui_confirm" ) --[[ @ 0]]
			return true
		elseif CoD.CoDAccountUtility.IsAccountFeatureEnabled( controller ) and IsSignedIntoUno( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, "ui_confirm" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( CoDAccount ) --[[ @ 0]]
	self.CoDAccount = CoDAccount --[[ @ 0]]
	
	PrivacySettingsButton = CoD.StartMenu_Options_PrivacySettingsButton.new( f1_arg0, f1_arg1, 0.5, 0.5, -265, 249, 0.5, 0.5, 313, 382 ) --[[ @ 0]]
	PrivacySettingsButton.DirectorCustomStartButton.MiddleText:setText( LocalizeToUpperString( @"hash_65EB6FED86163697" ) ) --[[ @ 0]]
	PrivacySettingsButton.DirectorCustomStartButton.MiddleTextFocus:setText( LocalizeToUpperString( @"hash_65EB6FED86163697" ) ) --[[ @ 0]]
	PrivacySettingsButton:registerEventHandler( "gain_focus", function ( element, event )
		local f46_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f46_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f46_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f46_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( PrivacySettingsButton, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		OpenOverlay( self, "StartMenu_Options_PrivacySettings", controller ) --[[ @ 0]]
		PlaySoundAlias( "uin_toggle_generic" ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, "ui_confirm" ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	self:addElement( PrivacySettingsButton ) --[[ @ 0]]
	self.PrivacySettingsButton = PrivacySettingsButton --[[ @ 0]]
	
	QuitButton = CoD.StartMenu_QuitButtonFitted.new( f1_arg0, f1_arg1, 0, 0, -20, 230, 1, 1, -162, -70 ) --[[ @ 0]]
	QuitButton:setScale( 0.7, 0.7 ) --[[ @ 0]]
	QuitButton:appendEventHandler( "input_source_changed", function ( f49_arg0, f49_arg1 )
		f49_arg1.menu = f49_arg1.menu or f1_arg0 --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f49_arg0, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local f1_local13 = QuitButton --[[ @ 0]]
	local DirectorGenericButton = QuitButton.subscribeToModel --[[ @ 0]]
	local f1_local15 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	DirectorGenericButton( f1_local13, f1_local15.LastInput, function ( f50_arg0, f50_arg1 )
		CoD.Menu.UpdateButtonShownState( f50_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	QuitButton:registerEventHandler( "gain_focus", function ( element, event )
		local f51_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f51_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f51_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f51_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( QuitButton, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "MOUSE1", function ( element, menu, controller, model )
		if IsMouseOrKeyboard( controller ) and IsPC() then
			QuitPCGame_MP( self, controller, true ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsMouseOrKeyboard( controller ) and IsPC() then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_2B2EF56B4AF147B8", nil, "MOUSE1" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( QuitButton, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], nil, function ( element, menu, controller, model )
		if IsGamepad( controller ) then
			CoD.StartMenuUtility.QuitGameWarningPrompt( controller, menu ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsGamepad( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_2B2EF56B4AF147B8", nil, nil ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( QuitButton ) --[[ @ 0]]
	self.QuitButton = QuitButton --[[ @ 0]]
	
	DirectorGenericButton = CoD.DirectorGenericButton.new( f1_arg0, f1_arg1, 0, 0, 176, 426, 1, 1, -162, -70 ) --[[ @ 0]]
	DirectorGenericButton:mergeStateConditions( {
		{
			stateName = "Visible",
			condition = function ( menu, element, event )
				local f56_local0 = CoD.HUDUtility.IsWarzone() --[[ @ 0]]
				if f56_local0 then
					f56_local0 = CoD.WZUtility.AllowWZOffline() --[[ @ 0]]
					if f56_local0 then
						f56_local0 = CoD.HUDUtility.IsWZCustomGame( f1_arg1 ) --[[ @ 0]]
						if f56_local0 then
							f56_local0 = IsLobbyHost() --[[ @ 0]]
							if f56_local0 then
								f56_local0 = not CoD.ModelUtility.IsControllerModelValueTrue( f1_arg1, "hudItems.hasStartedWZMatch" ) --[[ @ 0]]
							end
						end
					end
				end
				return f56_local0
			end
		}
	} ) --[[ @ 0]]
	DirectorGenericButton:appendEventHandler( "on_session_start", function ( f57_arg0, f57_arg1 )
		f57_arg1.menu = f57_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( DirectorGenericButton, f57_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	DirectorGenericButton:appendEventHandler( "on_session_end", function ( f58_arg0, f58_arg1 )
		f58_arg1.menu = f58_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( DirectorGenericButton, f58_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	f1_local15 = DirectorGenericButton --[[ @ 0]]
	f1_local13 = DirectorGenericButton.subscribeToModel --[[ @ 0]]
	local f1_local16 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local13( f1_local15, f1_local16["hudItems.hasStartedWZMatch"], function ( f59_arg0 )
		f1_arg0:updateElementState( DirectorGenericButton, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f59_arg0:get(),
			modelName = "hudItems.hasStartedWZMatch"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	DirectorGenericButton:setScale( 0.7, 0.7 ) --[[ @ 0]]
	DirectorGenericButton.DirectorSelectButtonMiniInternal.MiddleText:setText( LocalizeToUpperString( @"hash_394E8FF2C42CAFFB" ) ) --[[ @ 0]]
	DirectorGenericButton.DirectorSelectButtonMiniInternal.MiddleTextFocus:setText( LocalizeToUpperString( @"hash_394E8FF2C42CAFFB" ) ) --[[ @ 0]]
	DirectorGenericButton:appendEventHandler( "on_session_start", function ( f60_arg0, f60_arg1 )
		f60_arg1.menu = f60_arg1.menu or f1_arg0 --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f60_arg0, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	DirectorGenericButton:appendEventHandler( "on_session_end", function ( f61_arg0, f61_arg1 )
		f61_arg1.menu = f61_arg1.menu or f1_arg0 --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f61_arg0, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	f1_local15 = DirectorGenericButton --[[ @ 0]]
	f1_local13 = DirectorGenericButton.subscribeToModel --[[ @ 0]]
	f1_local16 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local13( f1_local15, f1_local16["hudItems.hasStartedWZMatch"], function ( f62_arg0, f62_arg1 )
		CoD.Menu.UpdateButtonShownState( f62_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	DirectorGenericButton:registerEventHandler( "gain_focus", function ( element, event )
		local f63_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f63_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f63_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f63_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( DirectorGenericButton, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], nil, function ( element, menu, controller, model )
		if CoD.HUDUtility.IsWarzone() and CoD.WZUtility.AllowWZOffline() and IsLobbyHost() and CoD.HUDUtility.IsWZCustomGame( controller ) and not CoD.ModelUtility.IsControllerModelValueTrue( controller, "hudItems.hasStartedWZMatch" ) then
			CoD.WZUtility.StartWarzone( controller ) --[[ @ 0]]
			SetControllerModelValue( controller, "hudItems.hasStartedWZMatch", true ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if CoD.HUDUtility.IsWarzone() and CoD.WZUtility.AllowWZOffline() and IsLobbyHost() and CoD.HUDUtility.IsWZCustomGame( controller ) and not CoD.ModelUtility.IsControllerModelValueTrue( controller, "hudItems.hasStartedWZMatch" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_0", nil, nil ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( DirectorGenericButton ) --[[ @ 0]]
	self.DirectorGenericButton = DirectorGenericButton --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "codcaster",
			condition = function ( menu, element, event )
				return IsCodCaster( f1_arg1 )
			end
		},
		{
			stateName = "Warzone",
			condition = function ( menu, element, event )
				return IsWarzone() and not InFrontend()
			end
		}
	} ) --[[ @ 0]]
	f1_local15 = self --[[ @ 0]]
	f1_local13 = self.subscribeToModel --[[ @ 0]]
	f1_local16 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local13( f1_local15, f1_local16["factions.isCoDCaster"], function ( f68_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f68_arg0:get(),
			modelName = "factions.isCoDCaster"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local15 = self --[[ @ 0]]
	f1_local13 = self.subscribeToModel --[[ @ 0]]
	f1_local16 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local13( f1_local15, f1_local16["lobbyRoot.lobbyNav"], function ( f69_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f69_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	Credits.id = "Credits" --[[ @ 0]]
	GraphicContent.id = "GraphicContent" --[[ @ 0]]
	Muting.id = "Muting" --[[ @ 0]]
	Network.id = "Network" --[[ @ 0]]
	Blackout.id = "Blackout" --[[ @ 0]]
	Audio.id = "Audio" --[[ @ 0]]
	Graphics.id = "Graphics" --[[ @ 0]]
	Controls.id = "Controls" --[[ @ 0]]
	QuitButtonCodcaster:appendEventHandler( "menu_loaded", function ()
		QuitButtonCodcaster:setModel( f1_arg0.buttonModel, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	QuitButtonCodcaster.id = "QuitButtonCodcaster" --[[ @ 0]]
	CoDAccount.id = "CoDAccount" --[[ @ 0]]
	PrivacySettingsButton.id = "PrivacySettingsButton" --[[ @ 0]]
	QuitButton:appendEventHandler( "menu_loaded", function ()
		QuitButton:setModel( f1_arg0.buttonModel, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	QuitButton.id = "QuitButton" --[[ @ 0]]
	DirectorGenericButton.id = "DirectorGenericButton" --[[ @ 0]]
	self.__defaultFocus = Controls --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	CoD.FreeCursorUtility.RetriggerCursorPosition( self, f1_arg1 ) --[[ @ 0]]
	return self
end
 --[[ @ 0]]
CoD.StartMenu_Options.__resetProperties = function ( f72_arg0 )
	f72_arg0.CoDAccount:completeAnimation() --[[ @ 0]]
	f72_arg0.Controls:completeAnimation() --[[ @ 0]]
	f72_arg0.Graphics:completeAnimation() --[[ @ 0]]
	f72_arg0.Audio:completeAnimation() --[[ @ 0]]
	f72_arg0.Blackout:completeAnimation() --[[ @ 0]]
	f72_arg0.Network:completeAnimation() --[[ @ 0]]
	f72_arg0.Muting:completeAnimation() --[[ @ 0]]
	f72_arg0.GraphicContent:completeAnimation() --[[ @ 0]]
	f72_arg0.Credits:completeAnimation() --[[ @ 0]]
	f72_arg0.QuitButton:completeAnimation() --[[ @ 0]]
	f72_arg0.QuitButtonCodcaster:completeAnimation() --[[ @ 0]]
	f72_arg0.DirectorGenericButton:completeAnimation() --[[ @ 0]]
	f72_arg0.PrivacySettingsButton:completeAnimation() --[[ @ 0]]
	f72_arg0.CoDAccount:setAlpha( 1 ) --[[ @ 0]]
	f72_arg0.Controls:setAlpha( 1 ) --[[ @ 0]]
	f72_arg0.Graphics:setAlpha( 1 ) --[[ @ 0]]
	f72_arg0.Audio:setAlpha( 1 ) --[[ @ 0]]
	f72_arg0.Blackout:setAlpha( 1 ) --[[ @ 0]]
	f72_arg0.Network:setAlpha( 1 ) --[[ @ 0]]
	f72_arg0.Muting:setAlpha( 1 ) --[[ @ 0]]
	f72_arg0.GraphicContent:setAlpha( 1 ) --[[ @ 0]]
	f72_arg0.Credits:setAlpha( 1 ) --[[ @ 0]]
	f72_arg0.QuitButton:setAlpha( 1 ) --[[ @ 0]]
	f72_arg0.QuitButtonCodcaster:setLeftRight( 0.5, 0.5, 290.5, 490.5 ) --[[ @ 0]]
	f72_arg0.QuitButtonCodcaster:setTopBottom( 0.5, 0.5, 226, 295 ) --[[ @ 0]]
	f72_arg0.QuitButtonCodcaster:setAlpha( 1 ) --[[ @ 0]]
	f72_arg0.DirectorGenericButton:setAlpha( 1 ) --[[ @ 0]]
	f72_arg0.PrivacySettingsButton:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.StartMenu_Options.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f73_arg0, f73_arg1 )
			f73_arg0:__resetProperties() --[[ @ 0]]
			f73_arg0:setupElementClipCounter( 13 ) --[[ @ 0]]
			local f73_local0 = function ( f74_arg0 )
				local f74_local0 = function ( f75_arg0 )
					f75_arg0:beginAnimation( 150 ) --[[ @ 0]]
					f75_arg0:setAlpha( 1 ) --[[ @ 0]]
					f75_arg0:registerEventHandler( "transition_complete_keyframe", f73_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f73_arg0.Credits:beginAnimation( 400 ) --[[ @ 0]]
				f73_arg0.Credits:registerEventHandler( "interrupted_keyframe", f73_arg0.clipInterrupted ) --[[ @ 0]]
				f73_arg0.Credits:registerEventHandler( "transition_complete_keyframe", f74_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f73_arg0.Credits:completeAnimation() --[[ @ 0]]
			f73_arg0.Credits:setAlpha( 0 ) --[[ @ 0]]
			f73_local0( f73_arg0.Credits ) --[[ @ 0]]
			local f73_local1 = function ( f76_arg0 )
				local f76_local0 = function ( f77_arg0 )
					f77_arg0:beginAnimation( 149 ) --[[ @ 0]]
					f77_arg0:setAlpha( 1 ) --[[ @ 0]]
					f77_arg0:registerEventHandler( "transition_complete_keyframe", f73_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f73_arg0.GraphicContent:beginAnimation( 230 ) --[[ @ 0]]
				f73_arg0.GraphicContent:registerEventHandler( "interrupted_keyframe", f73_arg0.clipInterrupted ) --[[ @ 0]]
				f73_arg0.GraphicContent:registerEventHandler( "transition_complete_keyframe", f76_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f73_arg0.GraphicContent:completeAnimation() --[[ @ 0]]
			f73_arg0.GraphicContent:setAlpha( 0 ) --[[ @ 0]]
			f73_local1( f73_arg0.GraphicContent ) --[[ @ 0]]
			local f73_local2 = function ( f78_arg0 )
				local f78_local0 = function ( f79_arg0 )
					f79_arg0:beginAnimation( 150 ) --[[ @ 0]]
					f79_arg0:setAlpha( 1 ) --[[ @ 0]]
					f79_arg0:registerEventHandler( "transition_complete_keyframe", f73_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f73_arg0.Muting:beginAnimation( 50 ) --[[ @ 0]]
				f73_arg0.Muting:registerEventHandler( "interrupted_keyframe", f73_arg0.clipInterrupted ) --[[ @ 0]]
				f73_arg0.Muting:registerEventHandler( "transition_complete_keyframe", f78_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f73_arg0.Muting:completeAnimation() --[[ @ 0]]
			f73_arg0.Muting:setAlpha( 0 ) --[[ @ 0]]
			f73_local2( f73_arg0.Muting ) --[[ @ 0]]
			local f73_local3 = function ( f80_arg0 )
				local f80_local0 = function ( f81_arg0 )
					f81_arg0:beginAnimation( 150 ) --[[ @ 0]]
					f81_arg0:setAlpha( 1 ) --[[ @ 0]]
					f81_arg0:registerEventHandler( "transition_complete_keyframe", f73_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f73_arg0.Network:beginAnimation( 50 ) --[[ @ 0]]
				f73_arg0.Network:registerEventHandler( "interrupted_keyframe", f73_arg0.clipInterrupted ) --[[ @ 0]]
				f73_arg0.Network:registerEventHandler( "transition_complete_keyframe", f80_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f73_arg0.Network:completeAnimation() --[[ @ 0]]
			f73_arg0.Network:setAlpha( 0 ) --[[ @ 0]]
			f73_local3( f73_arg0.Network ) --[[ @ 0]]
			local f73_local4 = function ( f82_arg0 )
				local f82_local0 = function ( f83_arg0 )
					f83_arg0:beginAnimation( 150 ) --[[ @ 0]]
					f83_arg0:setAlpha( 1 ) --[[ @ 0]]
					f83_arg0:registerEventHandler( "transition_complete_keyframe", f73_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f73_arg0.Blackout:beginAnimation( 400 ) --[[ @ 0]]
				f73_arg0.Blackout:registerEventHandler( "interrupted_keyframe", f73_arg0.clipInterrupted ) --[[ @ 0]]
				f73_arg0.Blackout:registerEventHandler( "transition_complete_keyframe", f82_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f73_arg0.Blackout:completeAnimation() --[[ @ 0]]
			f73_arg0.Blackout:setAlpha( 0 ) --[[ @ 0]]
			f73_local4( f73_arg0.Blackout ) --[[ @ 0]]
			local f73_local5 = function ( f84_arg0 )
				local f84_local0 = function ( f85_arg0 )
					f85_arg0:beginAnimation( 149 ) --[[ @ 0]]
					f85_arg0:setAlpha( 1 ) --[[ @ 0]]
					f85_arg0:registerEventHandler( "transition_complete_keyframe", f73_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f73_arg0.Audio:beginAnimation( 230 ) --[[ @ 0]]
				f73_arg0.Audio:registerEventHandler( "interrupted_keyframe", f73_arg0.clipInterrupted ) --[[ @ 0]]
				f73_arg0.Audio:registerEventHandler( "transition_complete_keyframe", f84_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f73_arg0.Audio:completeAnimation() --[[ @ 0]]
			f73_arg0.Audio:setAlpha( 0 ) --[[ @ 0]]
			f73_local5( f73_arg0.Audio ) --[[ @ 0]]
			local f73_local6 = function ( f86_arg0 )
				local f86_local0 = function ( f87_arg0 )
					f87_arg0:beginAnimation( 150 ) --[[ @ 0]]
					f87_arg0:setAlpha( 1 ) --[[ @ 0]]
					f87_arg0:registerEventHandler( "transition_complete_keyframe", f73_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f73_arg0.Graphics:beginAnimation( 50 ) --[[ @ 0]]
				f73_arg0.Graphics:registerEventHandler( "interrupted_keyframe", f73_arg0.clipInterrupted ) --[[ @ 0]]
				f73_arg0.Graphics:registerEventHandler( "transition_complete_keyframe", f86_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f73_arg0.Graphics:completeAnimation() --[[ @ 0]]
			f73_arg0.Graphics:setAlpha( 0 ) --[[ @ 0]]
			f73_local6( f73_arg0.Graphics ) --[[ @ 0]]
			local f73_local7 = function ( f88_arg0 )
				local f88_local0 = function ( f89_arg0 )
					f89_arg0:beginAnimation( 150 ) --[[ @ 0]]
					f89_arg0:setAlpha( 1 ) --[[ @ 0]]
					f89_arg0:registerEventHandler( "transition_complete_keyframe", f73_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f73_arg0.Controls:beginAnimation( 50 ) --[[ @ 0]]
				f73_arg0.Controls:registerEventHandler( "interrupted_keyframe", f73_arg0.clipInterrupted ) --[[ @ 0]]
				f73_arg0.Controls:registerEventHandler( "transition_complete_keyframe", f88_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f73_arg0.Controls:completeAnimation() --[[ @ 0]]
			f73_arg0.Controls:setAlpha( 0 ) --[[ @ 0]]
			f73_local7( f73_arg0.Controls ) --[[ @ 0]]
			f73_arg0.QuitButtonCodcaster:completeAnimation() --[[ @ 0]]
			f73_arg0.QuitButtonCodcaster:setLeftRight( 0.5, 0.5, 260.5, 510.5 ) --[[ @ 0]]
			f73_arg0.QuitButtonCodcaster:setTopBottom( 1, 1, -337, -245 ) --[[ @ 0]]
			f73_arg0.QuitButtonCodcaster:setAlpha( 0 ) --[[ @ 0]]
			f73_arg0.clipFinished( f73_arg0.QuitButtonCodcaster ) --[[ @ 0]]
			local f73_local8 = function ( f90_arg0 )
				local f90_local0 = function ( f91_arg0 )
					f91_arg0:beginAnimation( 150 ) --[[ @ 0]]
					f91_arg0:setAlpha( 1 ) --[[ @ 0]]
					f91_arg0:registerEventHandler( "transition_complete_keyframe", f73_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f73_arg0.CoDAccount:beginAnimation( 400 ) --[[ @ 0]]
				f73_arg0.CoDAccount:registerEventHandler( "interrupted_keyframe", f73_arg0.clipInterrupted ) --[[ @ 0]]
				f73_arg0.CoDAccount:registerEventHandler( "transition_complete_keyframe", f90_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f73_arg0.CoDAccount:completeAnimation() --[[ @ 0]]
			f73_arg0.CoDAccount:setAlpha( 0 ) --[[ @ 0]]
			f73_local8( f73_arg0.CoDAccount ) --[[ @ 0]]
			local f73_local9 = function ( f92_arg0 )
				local f92_local0 = function ( f93_arg0 )
					f93_arg0:beginAnimation( 150 ) --[[ @ 0]]
					f93_arg0:setAlpha( 1 ) --[[ @ 0]]
					f93_arg0:registerEventHandler( "transition_complete_keyframe", f73_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f73_arg0.PrivacySettingsButton:beginAnimation( 400 ) --[[ @ 0]]
				f73_arg0.PrivacySettingsButton:registerEventHandler( "interrupted_keyframe", f73_arg0.clipInterrupted ) --[[ @ 0]]
				f73_arg0.PrivacySettingsButton:registerEventHandler( "transition_complete_keyframe", f92_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f73_arg0.PrivacySettingsButton:completeAnimation() --[[ @ 0]]
			f73_arg0.PrivacySettingsButton:setAlpha( 0 ) --[[ @ 0]]
			f73_local9( f73_arg0.PrivacySettingsButton ) --[[ @ 0]]
			f73_arg0.QuitButton:completeAnimation() --[[ @ 0]]
			f73_arg0.QuitButton:setAlpha( 0 ) --[[ @ 0]]
			f73_arg0.clipFinished( f73_arg0.QuitButton ) --[[ @ 0]]
			f73_arg0.DirectorGenericButton:completeAnimation() --[[ @ 0]]
			f73_arg0.DirectorGenericButton:setAlpha( 0 ) --[[ @ 0]]
			f73_arg0.clipFinished( f73_arg0.DirectorGenericButton ) --[[ @ 0]]
		end
	},
	codcaster = {
		DefaultClip = function ( f94_arg0, f94_arg1 )
			f94_arg0:__resetProperties() --[[ @ 0]]
			f94_arg0:setupElementClipCounter( 13 ) --[[ @ 0]]
			local f94_local0 = function ( f95_arg0 )
				f95_arg0:beginAnimation( 149 ) --[[ @ 0]]
				f95_arg0:setAlpha( 1 ) --[[ @ 0]]
				f95_arg0:registerEventHandler( "transition_complete_keyframe", f94_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f94_arg0.Credits:beginAnimation( 380 ) --[[ @ 0]]
			f94_arg0.Credits:setAlpha( 0 ) --[[ @ 0]]
			f94_arg0.Credits:registerEventHandler( "interrupted_keyframe", f94_arg0.clipInterrupted ) --[[ @ 0]]
			f94_arg0.Credits:registerEventHandler( "transition_complete_keyframe", f94_local0 ) --[[ @ 0]]
			local f94_local1 = function ( f96_arg0 )
				f96_arg0:beginAnimation( 149 ) --[[ @ 0]]
				f96_arg0:setAlpha( 1 ) --[[ @ 0]]
				f96_arg0:registerEventHandler( "transition_complete_keyframe", f94_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f94_arg0.GraphicContent:beginAnimation( 230 ) --[[ @ 0]]
			f94_arg0.GraphicContent:setAlpha( 0 ) --[[ @ 0]]
			f94_arg0.GraphicContent:registerEventHandler( "interrupted_keyframe", f94_arg0.clipInterrupted ) --[[ @ 0]]
			f94_arg0.GraphicContent:registerEventHandler( "transition_complete_keyframe", f94_local1 ) --[[ @ 0]]
			local f94_local2 = function ( f97_arg0 )
				f97_arg0:beginAnimation( 150 ) --[[ @ 0]]
				f97_arg0:setAlpha( 1 ) --[[ @ 0]]
				f97_arg0:registerEventHandler( "transition_complete_keyframe", f94_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f94_arg0.Muting:beginAnimation( 100 ) --[[ @ 0]]
			f94_arg0.Muting:setAlpha( 0 ) --[[ @ 0]]
			f94_arg0.Muting:registerEventHandler( "interrupted_keyframe", f94_arg0.clipInterrupted ) --[[ @ 0]]
			f94_arg0.Muting:registerEventHandler( "transition_complete_keyframe", f94_local2 ) --[[ @ 0]]
			local f94_local3 = function ( f98_arg0 )
				f94_arg0.Network:beginAnimation( 150 ) --[[ @ 0]]
				f94_arg0.Network:setAlpha( 1 ) --[[ @ 0]]
				f94_arg0.Network:registerEventHandler( "interrupted_keyframe", f94_arg0.clipInterrupted ) --[[ @ 0]]
				f94_arg0.Network:registerEventHandler( "transition_complete_keyframe", f94_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f94_arg0.Network:completeAnimation() --[[ @ 0]]
			f94_arg0.Network:setAlpha( 0 ) --[[ @ 0]]
			f94_local3( f94_arg0.Network ) --[[ @ 0]]
			local f94_local4 = function ( f99_arg0 )
				f99_arg0:beginAnimation( 149 ) --[[ @ 0]]
				f99_arg0:setAlpha( 1 ) --[[ @ 0]]
				f99_arg0:registerEventHandler( "transition_complete_keyframe", f94_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f94_arg0.Blackout:beginAnimation( 380 ) --[[ @ 0]]
			f94_arg0.Blackout:setAlpha( 0 ) --[[ @ 0]]
			f94_arg0.Blackout:registerEventHandler( "interrupted_keyframe", f94_arg0.clipInterrupted ) --[[ @ 0]]
			f94_arg0.Blackout:registerEventHandler( "transition_complete_keyframe", f94_local4 ) --[[ @ 0]]
			local f94_local5 = function ( f100_arg0 )
				f100_arg0:beginAnimation( 149 ) --[[ @ 0]]
				f100_arg0:setAlpha( 1 ) --[[ @ 0]]
				f100_arg0:registerEventHandler( "transition_complete_keyframe", f94_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f94_arg0.Audio:beginAnimation( 230 ) --[[ @ 0]]
			f94_arg0.Audio:setAlpha( 0 ) --[[ @ 0]]
			f94_arg0.Audio:registerEventHandler( "interrupted_keyframe", f94_arg0.clipInterrupted ) --[[ @ 0]]
			f94_arg0.Audio:registerEventHandler( "transition_complete_keyframe", f94_local5 ) --[[ @ 0]]
			local f94_local6 = function ( f101_arg0 )
				f101_arg0:beginAnimation( 150 ) --[[ @ 0]]
				f101_arg0:setAlpha( 1 ) --[[ @ 0]]
				f101_arg0:registerEventHandler( "transition_complete_keyframe", f94_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f94_arg0.Graphics:beginAnimation( 100 ) --[[ @ 0]]
			f94_arg0.Graphics:setAlpha( 0 ) --[[ @ 0]]
			f94_arg0.Graphics:registerEventHandler( "interrupted_keyframe", f94_arg0.clipInterrupted ) --[[ @ 0]]
			f94_arg0.Graphics:registerEventHandler( "transition_complete_keyframe", f94_local6 ) --[[ @ 0]]
			local f94_local7 = function ( f102_arg0 )
				f94_arg0.Controls:beginAnimation( 150 ) --[[ @ 0]]
				f94_arg0.Controls:setAlpha( 1 ) --[[ @ 0]]
				f94_arg0.Controls:registerEventHandler( "interrupted_keyframe", f94_arg0.clipInterrupted ) --[[ @ 0]]
				f94_arg0.Controls:registerEventHandler( "transition_complete_keyframe", f94_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f94_arg0.Controls:completeAnimation() --[[ @ 0]]
			f94_arg0.Controls:setAlpha( 0 ) --[[ @ 0]]
			f94_local7( f94_arg0.Controls ) --[[ @ 0]]
			local f94_local8 = function ( f103_arg0 )
				f103_arg0:beginAnimation( 149 ) --[[ @ 0]]
				f103_arg0:setAlpha( 1 ) --[[ @ 0]]
				f103_arg0:registerEventHandler( "transition_complete_keyframe", f94_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f94_arg0.QuitButtonCodcaster:beginAnimation( 380 ) --[[ @ 0]]
			f94_arg0.QuitButtonCodcaster:setAlpha( 0 ) --[[ @ 0]]
			f94_arg0.QuitButtonCodcaster:registerEventHandler( "interrupted_keyframe", f94_arg0.clipInterrupted ) --[[ @ 0]]
			f94_arg0.QuitButtonCodcaster:registerEventHandler( "transition_complete_keyframe", f94_local8 ) --[[ @ 0]]
			local f94_local9 = function ( f104_arg0 )
				f104_arg0:beginAnimation( 150 ) --[[ @ 0]]
				f104_arg0:setAlpha( 1 ) --[[ @ 0]]
				f104_arg0:registerEventHandler( "transition_complete_keyframe", f94_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f94_arg0.CoDAccount:beginAnimation( 400 ) --[[ @ 0]]
			f94_arg0.CoDAccount:setAlpha( 0 ) --[[ @ 0]]
			f94_arg0.CoDAccount:registerEventHandler( "interrupted_keyframe", f94_arg0.clipInterrupted ) --[[ @ 0]]
			f94_arg0.CoDAccount:registerEventHandler( "transition_complete_keyframe", f94_local9 ) --[[ @ 0]]
			local f94_local10 = function ( f105_arg0 )
				local f105_local0 = function ( f106_arg0 )
					f106_arg0:beginAnimation( 150 ) --[[ @ 0]]
					f106_arg0:setAlpha( 1 ) --[[ @ 0]]
					f106_arg0:registerEventHandler( "transition_complete_keyframe", f94_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f94_arg0.PrivacySettingsButton:beginAnimation( 400 ) --[[ @ 0]]
				f94_arg0.PrivacySettingsButton:registerEventHandler( "interrupted_keyframe", f94_arg0.clipInterrupted ) --[[ @ 0]]
				f94_arg0.PrivacySettingsButton:registerEventHandler( "transition_complete_keyframe", f105_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f94_arg0.PrivacySettingsButton:completeAnimation() --[[ @ 0]]
			f94_arg0.PrivacySettingsButton:setAlpha( 0 ) --[[ @ 0]]
			f94_local10( f94_arg0.PrivacySettingsButton ) --[[ @ 0]]
			f94_arg0.QuitButton:completeAnimation() --[[ @ 0]]
			f94_arg0.QuitButton:setAlpha( 0 ) --[[ @ 0]]
			f94_arg0.clipFinished( f94_arg0.QuitButton ) --[[ @ 0]]
			f94_arg0.DirectorGenericButton:completeAnimation() --[[ @ 0]]
			f94_arg0.DirectorGenericButton:setAlpha( 0 ) --[[ @ 0]]
			f94_arg0.clipFinished( f94_arg0.DirectorGenericButton ) --[[ @ 0]]
		end
	},
	Warzone = {
		DefaultClip = function ( f107_arg0, f107_arg1 )
			f107_arg0:__resetProperties() --[[ @ 0]]
			f107_arg0:setupElementClipCounter( 11 ) --[[ @ 0]]
			local f107_local0 = function ( f108_arg0 )
				local f108_local0 = function ( f109_arg0 )
					f109_arg0:beginAnimation( 150 ) --[[ @ 0]]
					f109_arg0:setAlpha( 1 ) --[[ @ 0]]
					f109_arg0:registerEventHandler( "transition_complete_keyframe", f107_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f107_arg0.Credits:beginAnimation( 400 ) --[[ @ 0]]
				f107_arg0.Credits:registerEventHandler( "interrupted_keyframe", f107_arg0.clipInterrupted ) --[[ @ 0]]
				f107_arg0.Credits:registerEventHandler( "transition_complete_keyframe", f108_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f107_arg0.Credits:completeAnimation() --[[ @ 0]]
			f107_arg0.Credits:setAlpha( 0 ) --[[ @ 0]]
			f107_local0( f107_arg0.Credits ) --[[ @ 0]]
			local f107_local1 = function ( f110_arg0 )
				local f110_local0 = function ( f111_arg0 )
					f111_arg0:beginAnimation( 149 ) --[[ @ 0]]
					f111_arg0:setAlpha( 1 ) --[[ @ 0]]
					f111_arg0:registerEventHandler( "transition_complete_keyframe", f107_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f107_arg0.GraphicContent:beginAnimation( 230 ) --[[ @ 0]]
				f107_arg0.GraphicContent:registerEventHandler( "interrupted_keyframe", f107_arg0.clipInterrupted ) --[[ @ 0]]
				f107_arg0.GraphicContent:registerEventHandler( "transition_complete_keyframe", f110_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f107_arg0.GraphicContent:completeAnimation() --[[ @ 0]]
			f107_arg0.GraphicContent:setAlpha( 0 ) --[[ @ 0]]
			f107_local1( f107_arg0.GraphicContent ) --[[ @ 0]]
			local f107_local2 = function ( f112_arg0 )
				local f112_local0 = function ( f113_arg0 )
					f113_arg0:beginAnimation( 150 ) --[[ @ 0]]
					f113_arg0:setAlpha( 1 ) --[[ @ 0]]
					f113_arg0:registerEventHandler( "transition_complete_keyframe", f107_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f107_arg0.Muting:beginAnimation( 50 ) --[[ @ 0]]
				f107_arg0.Muting:registerEventHandler( "interrupted_keyframe", f107_arg0.clipInterrupted ) --[[ @ 0]]
				f107_arg0.Muting:registerEventHandler( "transition_complete_keyframe", f112_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f107_arg0.Muting:completeAnimation() --[[ @ 0]]
			f107_arg0.Muting:setAlpha( 0 ) --[[ @ 0]]
			f107_local2( f107_arg0.Muting ) --[[ @ 0]]
			local f107_local3 = function ( f114_arg0 )
				local f114_local0 = function ( f115_arg0 )
					f115_arg0:beginAnimation( 150 ) --[[ @ 0]]
					f115_arg0:setAlpha( 1 ) --[[ @ 0]]
					f115_arg0:registerEventHandler( "transition_complete_keyframe", f107_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f107_arg0.Network:beginAnimation( 50 ) --[[ @ 0]]
				f107_arg0.Network:registerEventHandler( "interrupted_keyframe", f107_arg0.clipInterrupted ) --[[ @ 0]]
				f107_arg0.Network:registerEventHandler( "transition_complete_keyframe", f114_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f107_arg0.Network:completeAnimation() --[[ @ 0]]
			f107_arg0.Network:setAlpha( 0 ) --[[ @ 0]]
			f107_local3( f107_arg0.Network ) --[[ @ 0]]
			local f107_local4 = function ( f116_arg0 )
				local f116_local0 = function ( f117_arg0 )
					f117_arg0:beginAnimation( 150 ) --[[ @ 0]]
					f117_arg0:setAlpha( 1 ) --[[ @ 0]]
					f117_arg0:registerEventHandler( "transition_complete_keyframe", f107_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f107_arg0.Blackout:beginAnimation( 400 ) --[[ @ 0]]
				f107_arg0.Blackout:registerEventHandler( "interrupted_keyframe", f107_arg0.clipInterrupted ) --[[ @ 0]]
				f107_arg0.Blackout:registerEventHandler( "transition_complete_keyframe", f116_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f107_arg0.Blackout:completeAnimation() --[[ @ 0]]
			f107_arg0.Blackout:setAlpha( 0 ) --[[ @ 0]]
			f107_local4( f107_arg0.Blackout ) --[[ @ 0]]
			local f107_local5 = function ( f118_arg0 )
				local f118_local0 = function ( f119_arg0 )
					f119_arg0:beginAnimation( 149 ) --[[ @ 0]]
					f119_arg0:setAlpha( 1 ) --[[ @ 0]]
					f119_arg0:registerEventHandler( "transition_complete_keyframe", f107_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f107_arg0.Audio:beginAnimation( 230 ) --[[ @ 0]]
				f107_arg0.Audio:registerEventHandler( "interrupted_keyframe", f107_arg0.clipInterrupted ) --[[ @ 0]]
				f107_arg0.Audio:registerEventHandler( "transition_complete_keyframe", f118_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f107_arg0.Audio:completeAnimation() --[[ @ 0]]
			f107_arg0.Audio:setAlpha( 0 ) --[[ @ 0]]
			f107_local5( f107_arg0.Audio ) --[[ @ 0]]
			local f107_local6 = function ( f120_arg0 )
				local f120_local0 = function ( f121_arg0 )
					f121_arg0:beginAnimation( 150 ) --[[ @ 0]]
					f121_arg0:setAlpha( 1 ) --[[ @ 0]]
					f121_arg0:registerEventHandler( "transition_complete_keyframe", f107_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f107_arg0.Graphics:beginAnimation( 50 ) --[[ @ 0]]
				f107_arg0.Graphics:registerEventHandler( "interrupted_keyframe", f107_arg0.clipInterrupted ) --[[ @ 0]]
				f107_arg0.Graphics:registerEventHandler( "transition_complete_keyframe", f120_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f107_arg0.Graphics:completeAnimation() --[[ @ 0]]
			f107_arg0.Graphics:setAlpha( 0 ) --[[ @ 0]]
			f107_local6( f107_arg0.Graphics ) --[[ @ 0]]
			local f107_local7 = function ( f122_arg0 )
				local f122_local0 = function ( f123_arg0 )
					f123_arg0:beginAnimation( 150 ) --[[ @ 0]]
					f123_arg0:setAlpha( 1 ) --[[ @ 0]]
					f123_arg0:registerEventHandler( "transition_complete_keyframe", f107_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f107_arg0.Controls:beginAnimation( 50 ) --[[ @ 0]]
				f107_arg0.Controls:registerEventHandler( "interrupted_keyframe", f107_arg0.clipInterrupted ) --[[ @ 0]]
				f107_arg0.Controls:registerEventHandler( "transition_complete_keyframe", f122_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f107_arg0.Controls:completeAnimation() --[[ @ 0]]
			f107_arg0.Controls:setAlpha( 0 ) --[[ @ 0]]
			f107_local7( f107_arg0.Controls ) --[[ @ 0]]
			f107_arg0.QuitButtonCodcaster:completeAnimation() --[[ @ 0]]
			f107_arg0.QuitButtonCodcaster:setAlpha( 0 ) --[[ @ 0]]
			f107_arg0.clipFinished( f107_arg0.QuitButtonCodcaster ) --[[ @ 0]]
			local f107_local8 = function ( f124_arg0 )
				local f124_local0 = function ( f125_arg0 )
					f125_arg0:beginAnimation( 150 ) --[[ @ 0]]
					f125_arg0:setAlpha( 1 ) --[[ @ 0]]
					f125_arg0:registerEventHandler( "transition_complete_keyframe", f107_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f107_arg0.CoDAccount:beginAnimation( 400 ) --[[ @ 0]]
				f107_arg0.CoDAccount:registerEventHandler( "interrupted_keyframe", f107_arg0.clipInterrupted ) --[[ @ 0]]
				f107_arg0.CoDAccount:registerEventHandler( "transition_complete_keyframe", f124_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f107_arg0.CoDAccount:completeAnimation() --[[ @ 0]]
			f107_arg0.CoDAccount:setAlpha( 0 ) --[[ @ 0]]
			f107_local8( f107_arg0.CoDAccount ) --[[ @ 0]]
			local f107_local9 = function ( f126_arg0 )
				local f126_local0 = function ( f127_arg0 )
					f127_arg0:beginAnimation( 150 ) --[[ @ 0]]
					f127_arg0:setAlpha( 1 ) --[[ @ 0]]
					f127_arg0:registerEventHandler( "transition_complete_keyframe", f107_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f107_arg0.PrivacySettingsButton:beginAnimation( 400 ) --[[ @ 0]]
				f107_arg0.PrivacySettingsButton:registerEventHandler( "interrupted_keyframe", f107_arg0.clipInterrupted ) --[[ @ 0]]
				f107_arg0.PrivacySettingsButton:registerEventHandler( "transition_complete_keyframe", f126_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f107_arg0.PrivacySettingsButton:completeAnimation() --[[ @ 0]]
			f107_arg0.PrivacySettingsButton:setAlpha( 0 ) --[[ @ 0]]
			f107_local9( f107_arg0.PrivacySettingsButton ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.StartMenu_Options.__onClose = function ( f128_arg0 )
	f128_arg0.Credits:close() --[[ @ 0]]
	f128_arg0.GraphicContent:close() --[[ @ 0]]
	f128_arg0.Muting:close() --[[ @ 0]]
	f128_arg0.Network:close() --[[ @ 0]]
	f128_arg0.Blackout:close() --[[ @ 0]]
	f128_arg0.Audio:close() --[[ @ 0]]
	f128_arg0.Graphics:close() --[[ @ 0]]
	f128_arg0.Controls:close() --[[ @ 0]]
	f128_arg0.QuitButtonCodcaster:close() --[[ @ 0]]
	f128_arg0.CoDAccount:close() --[[ @ 0]]
	f128_arg0.PrivacySettingsButton:close() --[[ @ 0]]
	f128_arg0.QuitButton:close() --[[ @ 0]]
	f128_arg0.DirectorGenericButton:close() --[[ @ 0]]
end
 --[[ @ 0]]
