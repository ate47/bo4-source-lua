-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
require( "ui/uieditor/widgets/emptyfocusable" ) --[[ @ 0]]
require( "x64:32b3a36f75bb6e0e" ) --[[ @ 0]]
require( "ui/uieditor/widgets/startmenu/options/startmenuoptionsmaincorners" ) --[[ @ 0]]
require( "ui/uieditor/widgets/startmenu/options/startmenuoptionsmainframe" ) --[[ @ 0]]

local PostLoadFunc = function ( self, controller, menu )
	if CursorInputEnabledForBuild() then
		self.m_preventFromBeingCurrentMouseFocus = true --[[ @ 0]]
		self:setForceMouseEventDispatch( true ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
CoD.StartMenu_Options_Slider_Control_Item = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.StartMenu_Options_Slider_Control_Item.__defaultWidth = 324 --[[ @ 0]]
CoD.StartMenu_Options_Slider_Control_Item.__defaultHeight = 60 --[[ @ 0]]
CoD.StartMenu_Options_Slider_Control_Item.new = function ( f2_arg0, f2_arg1, f2_arg2, f2_arg3, f2_arg4, f2_arg5, f2_arg6, f2_arg7, f2_arg8, f2_arg9 )
	local self = LUI.UIElement.new( f2_arg2, f2_arg3, f2_arg4, f2_arg5, f2_arg6, f2_arg7, f2_arg8, f2_arg9 ) --[[ @ 0]]
	self:setClass( CoD.StartMenu_Options_Slider_Control_Item ) --[[ @ 0]]
	self.id = "StartMenu_Options_Slider_Control_Item" --[[ @ 0]]
	self.soundSet = "ChooseDecal" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	
	local emptyFocusable = CoD.emptyFocusable.new( f2_arg0, f2_arg1, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	self:addElement( emptyFocusable ) --[[ @ 0]]
	self.emptyFocusable = emptyFocusable --[[ @ 0]]
	
	local LabelBacking = LUI.UIImage.new( 0, 0.61, 0, 0, 0, 0, 0, 55 ) --[[ @ 0]]
	LabelBacking:setRGB( 0.13, 0.12, 0.12 ) --[[ @ 0]]
	LabelBacking:setAlpha( 0.5 ) --[[ @ 0]]
	self:addElement( LabelBacking ) --[[ @ 0]]
	self.LabelBacking = LabelBacking --[[ @ 0]]
	
	local Frame = CoD.StartMenuOptionsMainFrame.new( f2_arg0, f2_arg1, 0, 0, 0, 198, 0, 0, 0, 55 ) --[[ @ 0]]
	Frame:setRGB( 0.78, 0.74, 0.67 ) --[[ @ 0]]
	Frame:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( Frame ) --[[ @ 0]]
	self.Frame = Frame --[[ @ 0]]
	
	local Corner = CoD.StartMenuOptionsMainCorners.new( f2_arg0, f2_arg1, 0, 0, 0, 198, 0, 0, 0, 55 ) --[[ @ 0]]
	Corner:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( Corner ) --[[ @ 0]]
	self.Corner = Corner --[[ @ 0]]
	
	local SettingLabel = LUI.UIText.new( 0, 1, 5, -129, 0, 0, 11.5, 41.5 ) --[[ @ 0]]
	SettingLabel:setRGB( 0.78, 0.74, 0.67 ) --[[ @ 0]]
	SettingLabel:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	SettingLabel:setAlignment( Enum[@"LUIAlignment"][@"hash_1FEEB12BCB0D7041"] ) --[[ @ 0]]
	SettingLabel:setAlignment( Enum[@"LUIAlignment"][@"hash_6ED4298C93DC5ED"] ) --[[ @ 0]]
	SettingLabel:linkToElementModel( self, "text", true, function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			SettingLabel:setText( CoD.BaseUtility.AlreadyLocalized( f3_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( SettingLabel ) --[[ @ 0]]
	self.SettingLabel = SettingLabel --[[ @ 0]]
	
	local OptionCountBorder = LUI.UIImage.new( 0, 0.61, 0, 0, 1, 1, -4, 0 ) --[[ @ 0]]
	OptionCountBorder:setRGB( 0.3, 0.29, 0.28 ) --[[ @ 0]]
	OptionCountBorder:setAlpha( 0.9 ) --[[ @ 0]]
	OptionCountBorder:setImage( RegisterImage( @"uie_hud_core_loadout_panel1" ) ) --[[ @ 0]]
	OptionCountBorder:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_631E7B3C72564429" ) ) --[[ @ 0]]
	OptionCountBorder:setShaderVector( 0, 0, 0, 0.55, 0.13 ) --[[ @ 0]]
	OptionCountBorder:setShaderVector( 2, 0, 1, 0, 1 ) --[[ @ 0]]
	OptionCountBorder:setupNineSliceShader( 25, 4 ) --[[ @ 0]]
	OptionCountBorder:linkToElementModel( self, "totalOptionsCount", true, function ( model )
		local f4_local0 = model:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			OptionCountBorder:setShaderVector( 1, SetVectorComponent( 2, 1, CoD.GetVectorComponentFromString( f4_local0, 1 ), CoD.GetVectorComponentFromString( f4_local0, 2 ), CoD.GetVectorComponentFromString( f4_local0, 3 ), CoD.GetVectorComponentFromString( f4_local0, 4 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( OptionCountBorder ) --[[ @ 0]]
	self.OptionCountBorder = OptionCountBorder --[[ @ 0]]
	
	local CurrentOptionBorder = LUI.UIImage.new( 0, 0.61, 0, 0, 1, 1, -4, 0 ) --[[ @ 0]]
	CurrentOptionBorder:setRGB( 0.8, 0.8, 0.8 ) --[[ @ 0]]
	CurrentOptionBorder:setImage( RegisterImage( @"uie_hud_core_loadout_panel1" ) ) --[[ @ 0]]
	CurrentOptionBorder:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_631E7B3C72564429" ) ) --[[ @ 0]]
	CurrentOptionBorder:setShaderVector( 0, 0, 0, 0.55, 0.13 ) --[[ @ 0]]
	CurrentOptionBorder:setupNineSliceShader( 25, 4 ) --[[ @ 0]]
	CurrentOptionBorder:linkToElementModel( self, "totalOptionsCount", true, function ( model )
		local f5_local0 = model:get() --[[ @ 0]]
		if f5_local0 ~= nil then
			CurrentOptionBorder:setShaderVector( 1, SetVectorComponent( 2, 1, CoD.GetVectorComponentFromString( f5_local0, 1 ), CoD.GetVectorComponentFromString( f5_local0, 2 ), CoD.GetVectorComponentFromString( f5_local0, 3 ), CoD.GetVectorComponentFromString( f5_local0, 4 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	CurrentOptionBorder:linkToElementModel( self, "index", true, function ( model )
		local f6_local0 = model:get() --[[ @ 0]]
		if f6_local0 ~= nil then
			CurrentOptionBorder:setShaderVector( 2, CoD.OptionsUtility.GetSettingSliderCurrentOptionPip( f2_arg1, self:getModel(), CoD.GetVectorComponentFromString( f6_local0, 1 ), CoD.GetVectorComponentFromString( f6_local0, 2 ), CoD.GetVectorComponentFromString( f6_local0, 3 ), CoD.GetVectorComponentFromString( f6_local0, 4 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( CurrentOptionBorder ) --[[ @ 0]]
	self.CurrentOptionBorder = CurrentOptionBorder --[[ @ 0]]
	
	local RightArrow = CoD.StartMenu_Options_SettingSliderArrow.new( f2_arg0, f2_arg1, 1, 1, -60, 0, 0, 0, 0, 60 ) --[[ @ 0]]
	RightArrow:setZRot( 90 ) --[[ @ 0]]
	RightArrow:registerEventHandler( "gain_focus", function ( element, event )
		local f7_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f7_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f7_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f2_arg0, f2_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f7_local0
	end ) --[[ @ 0]]
	f2_arg0:AddButtonCallbackFunction( RightArrow, f2_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], nil, function ( element, menu, controller, model )
		SendButtonPressToMenuEx( menu, controller, Enum[@"LUIButton"][@"hash_4571F08AD84807E0"] ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, nil ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	self:addElement( RightArrow ) --[[ @ 0]]
	self.RightArrow = RightArrow --[[ @ 0]]
	
	local LeftArrow = CoD.StartMenu_Options_SettingSliderArrow.new( f2_arg0, f2_arg1, 1, 1, -123, -63, 0, 0, 0, 60 ) --[[ @ 0]]
	LeftArrow:setZRot( -90 ) --[[ @ 0]]
	LeftArrow:registerEventHandler( "gain_focus", function ( element, event )
		local f10_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f10_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f10_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f2_arg0, f2_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f10_local0
	end ) --[[ @ 0]]
	f2_arg0:AddButtonCallbackFunction( LeftArrow, f2_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], nil, function ( element, menu, controller, model )
		SendButtonPressToMenuEx( menu, controller, Enum[@"LUIButton"][@"hash_1057783F8DA4AAEF"] ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, nil ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	self:addElement( LeftArrow ) --[[ @ 0]]
	self.LeftArrow = LeftArrow --[[ @ 0]]
	
	emptyFocusable.id = "emptyFocusable" --[[ @ 0]]
	RightArrow.id = "RightArrow" --[[ @ 0]]
	LeftArrow.id = "LeftArrow" --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f2_arg1, f2_arg0 ) --[[ @ 0]]
	end
	
	local f2_local10 = self --[[ @ 0]]
	CallCustomElementFunction_Element( self, "setForceMouseEventDispatch", true ) --[[ @ 0]]
	return self
end
 --[[ @ 0]]
CoD.StartMenu_Options_Slider_Control_Item.__onClose = function ( f13_arg0 )
	f13_arg0.emptyFocusable:close() --[[ @ 0]]
	f13_arg0.Frame:close() --[[ @ 0]]
	f13_arg0.Corner:close() --[[ @ 0]]
	f13_arg0.SettingLabel:close() --[[ @ 0]]
	f13_arg0.OptionCountBorder:close() --[[ @ 0]]
	f13_arg0.CurrentOptionBorder:close() --[[ @ 0]]
	f13_arg0.RightArrow:close() --[[ @ 0]]
	f13_arg0.LeftArrow:close() --[[ @ 0]]
end
 --[[ @ 0]]
