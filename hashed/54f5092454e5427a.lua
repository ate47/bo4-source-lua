-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
require( "ui/uieditor/widgets/controllerdependent_textbox" ) --[[ @ 0]]
require( "ui/uieditor/widgets/hud/core_ammowidget/ammowidget_equipmentempty" ) --[[ @ 0]]
require( "x64:24b789df27433d6" ) --[[ @ 0]]
require( "x64:36e5d082bb780458" ) --[[ @ 0]]
require( "ui/uieditor/widgets/onofftext" ) --[[ @ 0]]

CoD.HealCooldown = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.HealCooldown.__defaultWidth = 72 --[[ @ 0]]
CoD.HealCooldown.__defaultHeight = 40 --[[ @ 0]]
CoD.HealCooldown.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.HealCooldown ) --[[ @ 0]]
	self.id = "HealCooldown" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local HealButtonTextImageReplacement = CoD.ControllerDependent_TextBox.new( f1_arg0, f1_arg1, 0, 0, -8.5, 80.5, 0, 0, 53.5, 75.5 ) --[[ @ 0]]
	HealButtonTextImageReplacement.KBMText:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_234175BD548C4C21" ) ) --[[ @ 0]]
	HealButtonTextImageReplacement.GamepadText:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_234175BD548C4C21" ) ) --[[ @ 0]]
	HealButtonTextImageReplacement.GamepadText:setLetterSpacing( -2 ) --[[ @ 0]]
	HealButtonTextImageReplacement.GamepadText:setAlignment( Enum[@"LUIAlignment"][@"hash_1FEEB12BCB0D7041"] ) --[[ @ 0]]
	self:addElement( HealButtonTextImageReplacement ) --[[ @ 0]]
	self.HealButtonTextImageReplacement = HealButtonTextImageReplacement --[[ @ 0]]
	
	local BackingFill = LUI.UIImage.new( 0, 0, -5, 67, 0, 0, -15, 45 ) --[[ @ 0]]
	BackingFill:setRGB( ColorSet.T8__BIEGE.r, ColorSet.T8__BIEGE.g, ColorSet.T8__BIEGE.b ) --[[ @ 0]]
	BackingFill:setAlpha( 0 ) --[[ @ 0]]
	BackingFill:setZRot( 180 ) --[[ @ 0]]
	BackingFill:setImage( RegisterImage( @"hash_216FB6BFD381E066" ) ) --[[ @ 0]]
	BackingFill:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_wipe_normal" ) ) --[[ @ 0]]
	BackingFill:setShaderVector( 0, 1, 0, 0, 0 ) --[[ @ 0]]
	BackingFill:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	BackingFill:setShaderVector( 3, 0.05, 0, 0, 0 ) --[[ @ 0]]
	BackingFill:setShaderVector( 4, 0, 0, 0, 0 ) --[[ @ 0]]
	BackingFill:linkToElementModel( self, "powerRatio", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			BackingFill:setShaderVector( 2, AddToVector( 0.12, 0, 0, 0, ScaleVectorComponents( 0.9, 1, 1, 1, CoD.GetVectorComponentFromString( f2_local0, 1 ), CoD.GetVectorComponentFromString( f2_local0, 2 ), CoD.GetVectorComponentFromString( f2_local0, 3 ), CoD.GetVectorComponentFromString( f2_local0, 4 ) ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( BackingFill ) --[[ @ 0]]
	self.BackingFill = BackingFill --[[ @ 0]]
	
	local ReadyBox = LUI.UIImage.new( 0, 0, 0, 72, 0, 0, -27.5, 62.5 ) --[[ @ 0]]
	ReadyBox:setRGB( 1, 0.68, 0 ) --[[ @ 0]]
	ReadyBox:setImage( RegisterImage( @"hash_628081B8F637C9BD" ) ) --[[ @ 0]]
	ReadyBox:setMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	self:addElement( ReadyBox ) --[[ @ 0]]
	self.ReadyBox = ReadyBox --[[ @ 0]]
	
	local ReadyGlow = LUI.UIImage.new( 0, 0, 10, 62, 0, 0, -19.5, 62.5 ) --[[ @ 0]]
	ReadyGlow:setImage( RegisterImage( @"hash_3560FE2D650E06A5" ) ) --[[ @ 0]]
	ReadyGlow:setMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	self:addElement( ReadyGlow ) --[[ @ 0]]
	self.ReadyGlow = ReadyGlow --[[ @ 0]]
	
	local ReadyGlow2 = LUI.UIImage.new( 0, 0, 10, 62, 0, 0, -19.5, 62.5 ) --[[ @ 0]]
	ReadyGlow2:setImage( RegisterImage( @"hash_3560FE2D650E06A5" ) ) --[[ @ 0]]
	ReadyGlow2:setMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	self:addElement( ReadyGlow2 ) --[[ @ 0]]
	self.ReadyGlow2 = ReadyGlow2 --[[ @ 0]]
	
	local ReadyPulse = LUI.UIImage.new( 0, 0, 9, 61, 0, 0, -18.5, 63.5 ) --[[ @ 0]]
	ReadyPulse:setRGB( ColorSet.T8__OCHRE.r, ColorSet.T8__OCHRE.g, ColorSet.T8__OCHRE.b ) --[[ @ 0]]
	ReadyPulse:setImage( RegisterImage( @"hash_349F3334F5ECEF5" ) ) --[[ @ 0]]
	ReadyPulse:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_31CC85D0A86303B0" ) ) --[[ @ 0]]
	ReadyPulse:setShaderVector( 0, 2, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( ReadyPulse ) --[[ @ 0]]
	self.ReadyPulse = ReadyPulse --[[ @ 0]]
	
	local HealEmpty = CoD.AmmoWidget_EquipmentEmpty.new( f1_arg0, f1_arg1, 0, 0, 3.5, 65.5, 0, 0, -5, 35 ) --[[ @ 0]]
	HealEmpty.ImgIcon:setImage( RegisterImage( @"blacktransparent" ) ) --[[ @ 0]]
	HealEmpty.ImgIconGrow:setImage( RegisterImage( @"blacktransparent" ) ) --[[ @ 0]]
	HealEmpty:linkToElementModel( self, nil, false, function ( model )
		HealEmpty:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( HealEmpty ) --[[ @ 0]]
	self.HealEmpty = HealEmpty --[[ @ 0]]
	
	local BackingPulse = CoD.AmmoWidgetMP_EquipmentLethal_Flash.new( f1_arg0, f1_arg1, 0, 0, 16.5, 55.5, 0, 0, 0.5, 39.5 ) --[[ @ 0]]
	BackingPulse:setYRot( 180 ) --[[ @ 0]]
	BackingPulse:setRFTMaterial( LUI.UIImage.GetCachedMaterial( @"hash_51DE43899593E67E" ) ) --[[ @ 0]]
	BackingPulse:setShaderVector( 0, 0, 1, 0, 0 ) --[[ @ 0]]
	BackingPulse:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	BackingPulse:setShaderVector( 3, 0, 0, 0, 0 ) --[[ @ 0]]
	BackingPulse.Backing:setYRot( 180 ) --[[ @ 0]]
	BackingPulse.Backing:setZRot( 0 ) --[[ @ 0]]
	BackingPulse.BackingMask:setYRot( 180 ) --[[ @ 0]]
	BackingPulse.BackingMask:setZRot( 0 ) --[[ @ 0]]
	BackingPulse:linkToElementModel( self, nil, false, function ( model )
		BackingPulse:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	BackingPulse:linkToElementModel( self, "powerRatio", true, function ( model )
		local f5_local0 = model:get() --[[ @ 0]]
		if f5_local0 ~= nil then
			BackingPulse:setShaderVector( 2, SetVectorComponent( 2, 1, SubtractVectorComponentFrom( 1, 1, CoD.GetVectorComponentFromString( f5_local0, 1 ), CoD.GetVectorComponentFromString( f5_local0, 2 ), CoD.GetVectorComponentFromString( f5_local0, 3 ), CoD.GetVectorComponentFromString( f5_local0, 4 ) ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( BackingPulse ) --[[ @ 0]]
	self.BackingPulse = BackingPulse --[[ @ 0]]
	
	local HealIcon = LUI.UIImage.new( 0, 0, 12.5, 58.5, 0, 0, -3, 43 ) --[[ @ 0]]
	HealIcon:setRGB( 0.29, 0.29, 0.29 ) --[[ @ 0]]
	HealIcon:setScale( 0.7, 0.7 ) --[[ @ 0]]
	HealIcon:linkToElementModel( self, "id", true, function ( model )
		local f6_local0 = model:get() --[[ @ 0]]
		if f6_local0 ~= nil then
			HealIcon:setImage( GetWeaponGadgetIconAvailable( f6_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( HealIcon ) --[[ @ 0]]
	self.HealIcon = HealIcon --[[ @ 0]]
	
	local LocalHealIcon = LUI.UIImage.new( 0, 0, 12.5, 58.5, 0, 0, -3, 43 ) --[[ @ 0]]
	LocalHealIcon:setRGB( 0, 0, 0 ) --[[ @ 0]]
	LocalHealIcon:setAlpha( 0 ) --[[ @ 0]]
	LocalHealIcon:setScale( 0.7, 0.7 ) --[[ @ 0]]
	LocalHealIcon:setImage( RegisterImage( @"hash_40A4F8228AC959" ) ) --[[ @ 0]]
	self:addElement( LocalHealIcon ) --[[ @ 0]]
	self.LocalHealIcon = LocalHealIcon --[[ @ 0]]
	
	local AmmoWidgetMPAbilityFlare = CoD.AmmoWidgetMP_Ability_Flare.new( f1_arg0, f1_arg1, 0, 0, -275, 1463, 0, 0, -986.5, 87.5 ) --[[ @ 0]]
	AmmoWidgetMPAbilityFlare:setYRot( 180 ) --[[ @ 0]]
	AmmoWidgetMPAbilityFlare:linkToElementModel( self, nil, false, function ( model )
		AmmoWidgetMPAbilityFlare:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( AmmoWidgetMPAbilityFlare ) --[[ @ 0]]
	self.AmmoWidgetMPAbilityFlare = AmmoWidgetMPAbilityFlare --[[ @ 0]]
	
	local Line = LUI.UIImage.new( 0, 0, 16, 55, 0.35, 0.35, -1, 1 ) --[[ @ 0]]
	Line:setRGB( ColorSet.T8__BIEGE.r, ColorSet.T8__BIEGE.g, ColorSet.T8__BIEGE.b ) --[[ @ 0]]
	Line:setAlpha( 0 ) --[[ @ 0]]
	Line:linkToElementModel( self, "powerRatio", true, function ( model )
		local f8_local0 = model:get() --[[ @ 0]]
		if f8_local0 ~= nil then
			Line:setTopPct( Negate( f8_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Line ) --[[ @ 0]]
	self.Line = Line --[[ @ 0]]
	
	local Box = LUI.UIImage.new( 0, 0, 11, 61, 0, 0, -5.5, 44.5 ) --[[ @ 0]]
	Box:setAlpha( 0.5 ) --[[ @ 0]]
	Box:setImage( RegisterImage( @"hash_61361B633E108517" ) ) --[[ @ 0]]
	Box:setMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	self:addElement( Box ) --[[ @ 0]]
	self.Box = Box --[[ @ 0]]
	
	local WZAmmoNumber = CoD.onOffText.new( f1_arg0, f1_arg1, 0, 0, 45.5, 65.5, 0, 0, 13, 50 ) --[[ @ 0]]
	WZAmmoNumber:mergeStateConditions( {
		{
			stateName = "Invisible",
			condition = function ( menu, element, event )
				return not IsWarzone()
			end
		}
	} ) --[[ @ 0]]
	local f1_local15 = WZAmmoNumber --[[ @ 0]]
	local f1_local16 = WZAmmoNumber.subscribeToModel --[[ @ 0]]
	local f1_local17 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local16( f1_local15, f1_local17["lobbyRoot.lobbyNav"], function ( f10_arg0 )
		f1_arg0:updateElementState( WZAmmoNumber, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f10_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	WZAmmoNumber:linkToElementModel( self, "ammo", true, function ( model )
		local f11_local0 = model:get() --[[ @ 0]]
		if f11_local0 ~= nil then
			WZAmmoNumber.TextBox:setText( f11_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( WZAmmoNumber ) --[[ @ 0]]
	self.WZAmmoNumber = WZAmmoNumber --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return not IsWarzone()
			end
		},
		{
			stateName = "LocalHealingActive",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalDataSourceModelValueEqualTo( f1_arg1, "HUDItems", "localHealActive", 1 )
			end
		},
		{
			stateName = "InUse",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualToEnum( self, f1_arg1, "state", Enum[@"hash_F0447219F15F7F3"][@"hash_51873A43E9D1620E"] )
			end
		},
		{
			stateName = "Charging",
			condition = function ( menu, element, event )
				return IsSecondaryOffhandGadgetPowerBased( f1_arg1 ) and CoD.ModelUtility.IsSelfModelValueLessThan( self, f1_arg1, "powerRatio", 1 )
			end
		},
		{
			stateName = "Empty",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualTo( self, f1_arg1, "ammo", 0 ) and IsWarzone()
			end
		}
	} ) --[[ @ 0]]
	f1_local15 = self --[[ @ 0]]
	f1_local16 = self.subscribeToModel --[[ @ 0]]
	f1_local17 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local16( f1_local15, f1_local17["lobbyRoot.lobbyNav"], function ( f17_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f17_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local15 = self --[[ @ 0]]
	f1_local16 = self.subscribeToModel --[[ @ 0]]
	f1_local17 = DataSources.HUDItems.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local16( f1_local15, f1_local17.localHealActive, function ( f18_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f18_arg0:get(),
			modelName = "localHealActive"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:linkToElementModel( self, "state", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "state"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:linkToElementModel( self, "id", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "id"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:linkToElementModel( self, "powerRatio", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "powerRatio"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:linkToElementModel( self, "ammo", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "ammo"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:subscribeToGlobalModel( f1_arg1, "HUDItems", "pulseNoTactical", function ( model )
		if CoD.ModelUtility.IsSelfModelValueLessThan( self, f1_arg1, "powerRatio", 1 ) then
			PlayClipOnElement( self, {
				elementName = "HealEmpty",
				clipName = "Empty"
			}, f1_arg1 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.HealCooldown.__resetProperties = function ( f24_arg0 )
	f24_arg0.BackingPulse:completeAnimation() --[[ @ 0]]
	f24_arg0.BackingFill:completeAnimation() --[[ @ 0]]
	f24_arg0.HealEmpty:completeAnimation() --[[ @ 0]]
	f24_arg0.ReadyBox:completeAnimation() --[[ @ 0]]
	f24_arg0.Line:completeAnimation() --[[ @ 0]]
	f24_arg0.HealIcon:completeAnimation() --[[ @ 0]]
	f24_arg0.ReadyGlow2:completeAnimation() --[[ @ 0]]
	f24_arg0.ReadyGlow:completeAnimation() --[[ @ 0]]
	f24_arg0.ReadyPulse:completeAnimation() --[[ @ 0]]
	f24_arg0.HealButtonTextImageReplacement:completeAnimation() --[[ @ 0]]
	f24_arg0.AmmoWidgetMPAbilityFlare:completeAnimation() --[[ @ 0]]
	f24_arg0.Box:completeAnimation() --[[ @ 0]]
	f24_arg0.WZAmmoNumber:completeAnimation() --[[ @ 0]]
	f24_arg0.LocalHealIcon:completeAnimation() --[[ @ 0]]
	f24_arg0.BackingPulse:setLeftRight( 0, 0, 16.5, 55.5 ) --[[ @ 0]]
	f24_arg0.BackingPulse:setTopBottom( 0, 0, 0.5, 39.5 ) --[[ @ 0]]
	f24_arg0.BackingPulse:setAlpha( 1 ) --[[ @ 0]]
	f24_arg0.BackingFill:setRGB( ColorSet.T8__BIEGE.r, ColorSet.T8__BIEGE.g, ColorSet.T8__BIEGE.b ) --[[ @ 0]]
	f24_arg0.BackingFill:setAlpha( 0 ) --[[ @ 0]]
	f24_arg0.HealEmpty:setLeftRight( 0, 0, 3.5, 65.5 ) --[[ @ 0]]
	f24_arg0.HealEmpty:setTopBottom( 0, 0, -5, 35 ) --[[ @ 0]]
	f24_arg0.HealEmpty:setAlpha( 1 ) --[[ @ 0]]
	f24_arg0.HealEmpty:setScale( 1, 1 ) --[[ @ 0]]
	f24_arg0.ReadyBox:setRGB( 1, 0.68, 0 ) --[[ @ 0]]
	f24_arg0.ReadyBox:setAlpha( 1 ) --[[ @ 0]]
	f24_arg0.Line:setTopBottom( 0, 0, -1, 1 ) --[[ @ 0]]
	f24_arg0.Line:setRGB( ColorSet.T8__BIEGE.r, ColorSet.T8__BIEGE.g, ColorSet.T8__BIEGE.b ) --[[ @ 0]]
	f24_arg0.Line:setAlpha( 0 ) --[[ @ 0]]
	f24_arg0.HealIcon:setRGB( 0.29, 0.29, 0.29 ) --[[ @ 0]]
	f24_arg0.HealIcon:setAlpha( 1 ) --[[ @ 0]]
	f24_arg0.ReadyGlow2:setAlpha( 1 ) --[[ @ 0]]
	f24_arg0.ReadyGlow:setAlpha( 1 ) --[[ @ 0]]
	f24_arg0.ReadyPulse:setLeftRight( 0, 0, 9, 61 ) --[[ @ 0]]
	f24_arg0.ReadyPulse:setTopBottom( 0, 0, -18.5, 63.5 ) --[[ @ 0]]
	f24_arg0.ReadyPulse:setAlpha( 1 ) --[[ @ 0]]
	f24_arg0.HealButtonTextImageReplacement:setAlpha( 1 ) --[[ @ 0]]
	f24_arg0.AmmoWidgetMPAbilityFlare:setAlpha( 1 ) --[[ @ 0]]
	f24_arg0.Box:setAlpha( 0.5 ) --[[ @ 0]]
	f24_arg0.WZAmmoNumber:setAlpha( 1 ) --[[ @ 0]]
	f24_arg0.LocalHealIcon:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.HealCooldown.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f25_arg0, f25_arg1 )
			f25_arg0:__resetProperties() --[[ @ 0]]
			f25_arg0:setupElementClipCounter( 9 ) --[[ @ 0]]
			f25_arg0.BackingFill:completeAnimation() --[[ @ 0]]
			f25_arg0.BackingFill:setRGB( 1, 0.7, 0 ) --[[ @ 0]]
			f25_arg0.BackingFill:setAlpha( 0 ) --[[ @ 0]]
			f25_arg0.clipFinished( f25_arg0.BackingFill ) --[[ @ 0]]
			local f25_local0 = function ( f26_arg0 )
				local f26_local0 = function ( f27_arg0 )
					f27_arg0:beginAnimation( 1000 ) --[[ @ 0]]
					f27_arg0:setAlpha( 0.8 ) --[[ @ 0]]
					f27_arg0:registerEventHandler( "transition_complete_keyframe", f25_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f25_arg0.ReadyBox:beginAnimation( 1000 ) --[[ @ 0]]
				f25_arg0.ReadyBox:setAlpha( 1 ) --[[ @ 0]]
				f25_arg0.ReadyBox:registerEventHandler( "interrupted_keyframe", f25_arg0.clipInterrupted ) --[[ @ 0]]
				f25_arg0.ReadyBox:registerEventHandler( "transition_complete_keyframe", f26_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f25_arg0.ReadyBox:completeAnimation() --[[ @ 0]]
			f25_arg0.ReadyBox:setAlpha( 0.8 ) --[[ @ 0]]
			f25_local0( f25_arg0.ReadyBox ) --[[ @ 0]]
			local f25_local1 = function ( f28_arg0 )
				local f28_local0 = function ( f29_arg0 )
					f29_arg0:beginAnimation( 1000 ) --[[ @ 0]]
					f29_arg0:setAlpha( 1 ) --[[ @ 0]]
					f29_arg0:registerEventHandler( "transition_complete_keyframe", f25_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f25_arg0.ReadyGlow:beginAnimation( 1000 ) --[[ @ 0]]
				f25_arg0.ReadyGlow:setAlpha( 0 ) --[[ @ 0]]
				f25_arg0.ReadyGlow:registerEventHandler( "interrupted_keyframe", f25_arg0.clipInterrupted ) --[[ @ 0]]
				f25_arg0.ReadyGlow:registerEventHandler( "transition_complete_keyframe", f28_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f25_arg0.ReadyGlow:completeAnimation() --[[ @ 0]]
			f25_arg0.ReadyGlow:setAlpha( 1 ) --[[ @ 0]]
			f25_local1( f25_arg0.ReadyGlow ) --[[ @ 0]]
			local f25_local2 = function ( f30_arg0 )
				local f30_local0 = function ( f31_arg0 )
					f31_arg0:beginAnimation( 1000 ) --[[ @ 0]]
					f31_arg0:setAlpha( 1 ) --[[ @ 0]]
					f31_arg0:registerEventHandler( "transition_complete_keyframe", f25_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f25_arg0.ReadyGlow2:beginAnimation( 1000 ) --[[ @ 0]]
				f25_arg0.ReadyGlow2:setAlpha( 0 ) --[[ @ 0]]
				f25_arg0.ReadyGlow2:registerEventHandler( "interrupted_keyframe", f25_arg0.clipInterrupted ) --[[ @ 0]]
				f25_arg0.ReadyGlow2:registerEventHandler( "transition_complete_keyframe", f30_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f25_arg0.ReadyGlow2:completeAnimation() --[[ @ 0]]
			f25_arg0.ReadyGlow2:setAlpha( 1 ) --[[ @ 0]]
			f25_local2( f25_arg0.ReadyGlow2 ) --[[ @ 0]]
			local f25_local3 = function ( f32_arg0 )
				local f32_local0 = function ( f33_arg0 )
					f33_arg0:beginAnimation( 1000 ) --[[ @ 0]]
					f33_arg0:setAlpha( 1 ) --[[ @ 0]]
					f33_arg0:registerEventHandler( "transition_complete_keyframe", f25_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f25_arg0.ReadyPulse:beginAnimation( 1000 ) --[[ @ 0]]
				f25_arg0.ReadyPulse:setAlpha( 0 ) --[[ @ 0]]
				f25_arg0.ReadyPulse:registerEventHandler( "interrupted_keyframe", f25_arg0.clipInterrupted ) --[[ @ 0]]
				f25_arg0.ReadyPulse:registerEventHandler( "transition_complete_keyframe", f32_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f25_arg0.ReadyPulse:completeAnimation() --[[ @ 0]]
			f25_arg0.ReadyPulse:setAlpha( 1 ) --[[ @ 0]]
			f25_local3( f25_arg0.ReadyPulse ) --[[ @ 0]]
			f25_arg0.HealEmpty:completeAnimation() --[[ @ 0]]
			f25_arg0.HealEmpty:setAlpha( 1 ) --[[ @ 0]]
			f25_arg0.clipFinished( f25_arg0.HealEmpty ) --[[ @ 0]]
			f25_arg0.BackingPulse:completeAnimation() --[[ @ 0]]
			f25_arg0.BackingPulse:setLeftRight( 0, 0, 3, 68 ) --[[ @ 0]]
			f25_arg0.BackingPulse:setTopBottom( 0, 0, 0, 59 ) --[[ @ 0]]
			f25_arg0.BackingPulse:setAlpha( 1 ) --[[ @ 0]]
			f25_arg0.clipFinished( f25_arg0.BackingPulse ) --[[ @ 0]]
			f25_arg0.HealIcon:completeAnimation() --[[ @ 0]]
			f25_arg0.HealIcon:setRGB( 0.95, 0.93, 0.86 ) --[[ @ 0]]
			f25_arg0.clipFinished( f25_arg0.HealIcon ) --[[ @ 0]]
			f25_arg0.Line:completeAnimation() --[[ @ 0]]
			f25_arg0.Line:setRGB( 0.92, 0.92, 0.92 ) --[[ @ 0]]
			f25_arg0.Line:setAlpha( 0 ) --[[ @ 0]]
			f25_arg0.clipFinished( f25_arg0.Line ) --[[ @ 0]]
			f25_arg0.nextClip = "DefaultClip" --[[ @ 0]]
		end
	},
	Hidden = {
		DefaultClip = function ( f34_arg0, f34_arg1 )
			f34_arg0:__resetProperties() --[[ @ 0]]
			f34_arg0:setupElementClipCounter( 11 ) --[[ @ 0]]
			f34_arg0.HealButtonTextImageReplacement:completeAnimation() --[[ @ 0]]
			f34_arg0.HealButtonTextImageReplacement:setAlpha( 0 ) --[[ @ 0]]
			f34_arg0.clipFinished( f34_arg0.HealButtonTextImageReplacement ) --[[ @ 0]]
			f34_arg0.ReadyBox:completeAnimation() --[[ @ 0]]
			f34_arg0.ReadyBox:setAlpha( 0 ) --[[ @ 0]]
			f34_arg0.clipFinished( f34_arg0.ReadyBox ) --[[ @ 0]]
			f34_arg0.ReadyGlow:completeAnimation() --[[ @ 0]]
			f34_arg0.ReadyGlow:setAlpha( 0 ) --[[ @ 0]]
			f34_arg0.clipFinished( f34_arg0.ReadyGlow ) --[[ @ 0]]
			f34_arg0.ReadyGlow2:completeAnimation() --[[ @ 0]]
			f34_arg0.ReadyGlow2:setAlpha( 0 ) --[[ @ 0]]
			f34_arg0.clipFinished( f34_arg0.ReadyGlow2 ) --[[ @ 0]]
			f34_arg0.ReadyPulse:completeAnimation() --[[ @ 0]]
			f34_arg0.ReadyPulse:setAlpha( 0 ) --[[ @ 0]]
			f34_arg0.clipFinished( f34_arg0.ReadyPulse ) --[[ @ 0]]
			f34_arg0.HealEmpty:completeAnimation() --[[ @ 0]]
			f34_arg0.HealEmpty:setAlpha( 0 ) --[[ @ 0]]
			f34_arg0.clipFinished( f34_arg0.HealEmpty ) --[[ @ 0]]
			f34_arg0.BackingPulse:completeAnimation() --[[ @ 0]]
			f34_arg0.BackingPulse:setAlpha( 0 ) --[[ @ 0]]
			f34_arg0.clipFinished( f34_arg0.BackingPulse ) --[[ @ 0]]
			f34_arg0.HealIcon:completeAnimation() --[[ @ 0]]
			f34_arg0.HealIcon:setAlpha( 0 ) --[[ @ 0]]
			f34_arg0.clipFinished( f34_arg0.HealIcon ) --[[ @ 0]]
			f34_arg0.AmmoWidgetMPAbilityFlare:completeAnimation() --[[ @ 0]]
			f34_arg0.AmmoWidgetMPAbilityFlare:setAlpha( 0 ) --[[ @ 0]]
			f34_arg0.clipFinished( f34_arg0.AmmoWidgetMPAbilityFlare ) --[[ @ 0]]
			f34_arg0.Box:completeAnimation() --[[ @ 0]]
			f34_arg0.Box:setAlpha( 0 ) --[[ @ 0]]
			f34_arg0.clipFinished( f34_arg0.Box ) --[[ @ 0]]
			f34_arg0.WZAmmoNumber:completeAnimation() --[[ @ 0]]
			f34_arg0.WZAmmoNumber:setAlpha( 0 ) --[[ @ 0]]
			f34_arg0.clipFinished( f34_arg0.WZAmmoNumber ) --[[ @ 0]]
		end
	},
	LocalHealingActive = {
		DefaultClip = function ( f35_arg0, f35_arg1 )
			f35_arg0:__resetProperties() --[[ @ 0]]
			f35_arg0:setupElementClipCounter( 8 ) --[[ @ 0]]
			f35_arg0.HealButtonTextImageReplacement:completeAnimation() --[[ @ 0]]
			f35_arg0.HealButtonTextImageReplacement:setAlpha( 0 ) --[[ @ 0]]
			f35_arg0.clipFinished( f35_arg0.HealButtonTextImageReplacement ) --[[ @ 0]]
			f35_arg0.BackingFill:completeAnimation() --[[ @ 0]]
			f35_arg0.BackingFill:setAlpha( 0 ) --[[ @ 0]]
			f35_arg0.clipFinished( f35_arg0.BackingFill ) --[[ @ 0]]
			f35_arg0.ReadyBox:completeAnimation() --[[ @ 0]]
			f35_arg0.ReadyBox:setRGB( 1, 1, 1 ) --[[ @ 0]]
			f35_arg0.ReadyBox:setAlpha( 1 ) --[[ @ 0]]
			f35_arg0.clipFinished( f35_arg0.ReadyBox ) --[[ @ 0]]
			f35_arg0.HealEmpty:completeAnimation() --[[ @ 0]]
			f35_arg0.HealEmpty:setAlpha( 1 ) --[[ @ 0]]
			f35_arg0.clipFinished( f35_arg0.HealEmpty ) --[[ @ 0]]
			f35_arg0.BackingPulse:completeAnimation() --[[ @ 0]]
			f35_arg0.BackingPulse:setLeftRight( 0, 0, 3, 68 ) --[[ @ 0]]
			f35_arg0.BackingPulse:setTopBottom( 0, 0, 0, 59 ) --[[ @ 0]]
			f35_arg0.BackingPulse:setAlpha( 1 ) --[[ @ 0]]
			f35_arg0.clipFinished( f35_arg0.BackingPulse ) --[[ @ 0]]
			f35_arg0.HealIcon:completeAnimation() --[[ @ 0]]
			f35_arg0.HealIcon:setAlpha( 0 ) --[[ @ 0]]
			f35_arg0.clipFinished( f35_arg0.HealIcon ) --[[ @ 0]]
			f35_arg0.LocalHealIcon:completeAnimation() --[[ @ 0]]
			f35_arg0.LocalHealIcon:setAlpha( 1 ) --[[ @ 0]]
			f35_arg0.clipFinished( f35_arg0.LocalHealIcon ) --[[ @ 0]]
			f35_arg0.Line:completeAnimation() --[[ @ 0]]
			f35_arg0.Line:setAlpha( 0 ) --[[ @ 0]]
			f35_arg0.clipFinished( f35_arg0.Line ) --[[ @ 0]]
		end
	},
	InUse = {
		DefaultClip = function ( f36_arg0, f36_arg1 )
			f36_arg0:__resetProperties() --[[ @ 0]]
			f36_arg0:setupElementClipCounter( 10 ) --[[ @ 0]]
			f36_arg0.HealButtonTextImageReplacement:completeAnimation() --[[ @ 0]]
			f36_arg0.HealButtonTextImageReplacement:setAlpha( 0 ) --[[ @ 0]]
			f36_arg0.clipFinished( f36_arg0.HealButtonTextImageReplacement ) --[[ @ 0]]
			f36_arg0.BackingFill:completeAnimation() --[[ @ 0]]
			f36_arg0.BackingFill:setRGB( 0.36, 0.36, 0.36 ) --[[ @ 0]]
			f36_arg0.clipFinished( f36_arg0.BackingFill ) --[[ @ 0]]
			f36_arg0.ReadyBox:completeAnimation() --[[ @ 0]]
			f36_arg0.ReadyBox:setAlpha( 0 ) --[[ @ 0]]
			f36_arg0.clipFinished( f36_arg0.ReadyBox ) --[[ @ 0]]
			f36_arg0.ReadyGlow:completeAnimation() --[[ @ 0]]
			f36_arg0.ReadyGlow:setAlpha( 0 ) --[[ @ 0]]
			f36_arg0.clipFinished( f36_arg0.ReadyGlow ) --[[ @ 0]]
			f36_arg0.ReadyGlow2:completeAnimation() --[[ @ 0]]
			f36_arg0.ReadyGlow2:setAlpha( 0 ) --[[ @ 0]]
			f36_arg0.clipFinished( f36_arg0.ReadyGlow2 ) --[[ @ 0]]
			f36_arg0.ReadyPulse:completeAnimation() --[[ @ 0]]
			f36_arg0.ReadyPulse:setAlpha( 0 ) --[[ @ 0]]
			f36_arg0.clipFinished( f36_arg0.ReadyPulse ) --[[ @ 0]]
			f36_arg0.HealEmpty:completeAnimation() --[[ @ 0]]
			f36_arg0.HealEmpty:setAlpha( 0 ) --[[ @ 0]]
			f36_arg0.clipFinished( f36_arg0.HealEmpty ) --[[ @ 0]]
			f36_arg0.BackingPulse:completeAnimation() --[[ @ 0]]
			f36_arg0.BackingPulse:setAlpha( 0 ) --[[ @ 0]]
			f36_arg0.clipFinished( f36_arg0.BackingPulse ) --[[ @ 0]]
			f36_arg0.HealIcon:completeAnimation() --[[ @ 0]]
			f36_arg0.HealIcon:setRGB( 0.97, 0.97, 0.84 ) --[[ @ 0]]
			f36_arg0.HealIcon:setAlpha( 1 ) --[[ @ 0]]
			f36_arg0.clipFinished( f36_arg0.HealIcon ) --[[ @ 0]]
			f36_arg0.Line:completeAnimation() --[[ @ 0]]
			f36_arg0.Line:setAlpha( 0 ) --[[ @ 0]]
			f36_arg0.clipFinished( f36_arg0.Line ) --[[ @ 0]]
		end
	},
	Charging = {
		DefaultClip = function ( f37_arg0, f37_arg1 )
			f37_arg0:__resetProperties() --[[ @ 0]]
			f37_arg0:setupElementClipCounter( 10 ) --[[ @ 0]]
			f37_arg0.HealButtonTextImageReplacement:completeAnimation() --[[ @ 0]]
			f37_arg0.HealButtonTextImageReplacement:setAlpha( 0 ) --[[ @ 0]]
			f37_arg0.clipFinished( f37_arg0.HealButtonTextImageReplacement ) --[[ @ 0]]
			f37_arg0.BackingFill:completeAnimation() --[[ @ 0]]
			f37_arg0.BackingFill:setRGB( 0.36, 0.36, 0.36 ) --[[ @ 0]]
			f37_arg0.clipFinished( f37_arg0.BackingFill ) --[[ @ 0]]
			f37_arg0.ReadyBox:completeAnimation() --[[ @ 0]]
			f37_arg0.ReadyBox:setAlpha( 0 ) --[[ @ 0]]
			f37_arg0.clipFinished( f37_arg0.ReadyBox ) --[[ @ 0]]
			f37_arg0.ReadyGlow:completeAnimation() --[[ @ 0]]
			f37_arg0.ReadyGlow:setAlpha( 0 ) --[[ @ 0]]
			f37_arg0.clipFinished( f37_arg0.ReadyGlow ) --[[ @ 0]]
			f37_arg0.ReadyGlow2:completeAnimation() --[[ @ 0]]
			f37_arg0.ReadyGlow2:setAlpha( 0 ) --[[ @ 0]]
			f37_arg0.clipFinished( f37_arg0.ReadyGlow2 ) --[[ @ 0]]
			f37_arg0.ReadyPulse:completeAnimation() --[[ @ 0]]
			f37_arg0.ReadyPulse:setLeftRight( 0, 0, 10, 62 ) --[[ @ 0]]
			f37_arg0.ReadyPulse:setTopBottom( 0, 0, -9.5, 72.5 ) --[[ @ 0]]
			f37_arg0.ReadyPulse:setAlpha( 0 ) --[[ @ 0]]
			f37_arg0.clipFinished( f37_arg0.ReadyPulse ) --[[ @ 0]]
			f37_arg0.HealEmpty:completeAnimation() --[[ @ 0]]
			f37_arg0.HealEmpty:setLeftRight( 0, 0, 4, 66 ) --[[ @ 0]]
			f37_arg0.HealEmpty:setTopBottom( 0, 0, 0.5, 40.5 ) --[[ @ 0]]
			f37_arg0.HealEmpty:setAlpha( 1 ) --[[ @ 0]]
			f37_arg0.HealEmpty:setScale( 0.61, 0.67 ) --[[ @ 0]]
			f37_arg0.clipFinished( f37_arg0.HealEmpty ) --[[ @ 0]]
			f37_arg0.BackingPulse:completeAnimation() --[[ @ 0]]
			f37_arg0.BackingPulse:setAlpha( 0.8 ) --[[ @ 0]]
			f37_arg0.clipFinished( f37_arg0.BackingPulse ) --[[ @ 0]]
			f37_arg0.HealIcon:completeAnimation() --[[ @ 0]]
			f37_arg0.HealIcon:setRGB( 0.32, 0.32, 0.32 ) --[[ @ 0]]
			f37_arg0.HealIcon:setAlpha( 1 ) --[[ @ 0]]
			f37_arg0.clipFinished( f37_arg0.HealIcon ) --[[ @ 0]]
			f37_arg0.Line:completeAnimation() --[[ @ 0]]
			f37_arg0.Line:setTopBottom( 0, 0, -1, 1 ) --[[ @ 0]]
			f37_arg0.Line:setAlpha( 0.5 ) --[[ @ 0]]
			f37_arg0.clipFinished( f37_arg0.Line ) --[[ @ 0]]
		end
	},
	Empty = {
		DefaultClip = function ( f38_arg0, f38_arg1 )
			f38_arg0:__resetProperties() --[[ @ 0]]
			f38_arg0:setupElementClipCounter( 10 ) --[[ @ 0]]
			f38_arg0.HealButtonTextImageReplacement:completeAnimation() --[[ @ 0]]
			f38_arg0.HealButtonTextImageReplacement:setAlpha( 0 ) --[[ @ 0]]
			f38_arg0.clipFinished( f38_arg0.HealButtonTextImageReplacement ) --[[ @ 0]]
			f38_arg0.BackingFill:completeAnimation() --[[ @ 0]]
			f38_arg0.BackingFill:setRGB( 0.36, 0.36, 0.36 ) --[[ @ 0]]
			f38_arg0.clipFinished( f38_arg0.BackingFill ) --[[ @ 0]]
			f38_arg0.ReadyBox:completeAnimation() --[[ @ 0]]
			f38_arg0.ReadyBox:setAlpha( 0 ) --[[ @ 0]]
			f38_arg0.clipFinished( f38_arg0.ReadyBox ) --[[ @ 0]]
			f38_arg0.ReadyGlow:completeAnimation() --[[ @ 0]]
			f38_arg0.ReadyGlow:setAlpha( 0 ) --[[ @ 0]]
			f38_arg0.clipFinished( f38_arg0.ReadyGlow ) --[[ @ 0]]
			f38_arg0.ReadyGlow2:completeAnimation() --[[ @ 0]]
			f38_arg0.ReadyGlow2:setAlpha( 0 ) --[[ @ 0]]
			f38_arg0.clipFinished( f38_arg0.ReadyGlow2 ) --[[ @ 0]]
			f38_arg0.ReadyPulse:completeAnimation() --[[ @ 0]]
			f38_arg0.ReadyPulse:setAlpha( 0 ) --[[ @ 0]]
			f38_arg0.clipFinished( f38_arg0.ReadyPulse ) --[[ @ 0]]
			f38_arg0.HealEmpty:completeAnimation() --[[ @ 0]]
			f38_arg0.HealEmpty:setAlpha( 0 ) --[[ @ 0]]
			f38_arg0.clipFinished( f38_arg0.HealEmpty ) --[[ @ 0]]
			f38_arg0.BackingPulse:completeAnimation() --[[ @ 0]]
			f38_arg0.BackingPulse:setAlpha( 0 ) --[[ @ 0]]
			f38_arg0.clipFinished( f38_arg0.BackingPulse ) --[[ @ 0]]
			f38_arg0.HealIcon:completeAnimation() --[[ @ 0]]
			f38_arg0.HealIcon:setRGB( 0.97, 0.97, 0.84 ) --[[ @ 0]]
			f38_arg0.HealIcon:setAlpha( 1 ) --[[ @ 0]]
			f38_arg0.clipFinished( f38_arg0.HealIcon ) --[[ @ 0]]
			f38_arg0.Line:completeAnimation() --[[ @ 0]]
			f38_arg0.Line:setAlpha( 0 ) --[[ @ 0]]
			f38_arg0.clipFinished( f38_arg0.Line ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.HealCooldown.__onClose = function ( f39_arg0 )
	f39_arg0.HealButtonTextImageReplacement:close() --[[ @ 0]]
	f39_arg0.BackingFill:close() --[[ @ 0]]
	f39_arg0.HealEmpty:close() --[[ @ 0]]
	f39_arg0.BackingPulse:close() --[[ @ 0]]
	f39_arg0.HealIcon:close() --[[ @ 0]]
	f39_arg0.AmmoWidgetMPAbilityFlare:close() --[[ @ 0]]
	f39_arg0.Line:close() --[[ @ 0]]
	f39_arg0.WZAmmoNumber:close() --[[ @ 0]]
end
 --[[ @ 0]]
