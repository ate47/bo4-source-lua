-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:33
require( "x64:5f3b71d7ea8417f2" ) --[[ @ 0]]
require( "x64:251a3136d617a48d" ) --[[ @ 0]]

CoD.DirectorCharacterZM = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.DirectorCharacterZM.__defaultWidth = 240 --[[ @ 0]]
CoD.DirectorCharacterZM.__defaultHeight = 44 --[[ @ 0]]
CoD.DirectorCharacterZM.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	if CoD.DirectorUtility.IsSessionModeAvailable( f1_arg1, Enum[@"eModes"][@"hash_73723205FAE52C4A"] ) and CoD.ZombieUtility.ShowZMLobbyPoseOptions() then
		CoD.BaseUtility.InitControllerModel( f1_arg1, "PositionDraft.autoSelected", -1 ) --[[ @ 0]]
		CoD.BaseUtility.CreateControllerModel( f1_arg1, "PositionDraft.stage" ) --[[ @ 0]]
		CoD.BaseUtility.CreateControllerModel( f1_arg1, "PositionDraft.focusedCharacterIndex" ) --[[ @ 0]]
		SetControllerModelValue( f1_arg1, "PositionDraft.focusedCharacterIndex", -1 ) --[[ @ 0]]
		CoD.BaseUtility.CreateGlobalModel( "lobbyRoot.publicLobby.stage" ) --[[ @ 0]]
	else
		CoD.BaseUtility.CreateGlobalModel( "lobbyRoot.publicLobby.stage" ) --[[ @ 0]]
	end
	self:setClass( CoD.DirectorCharacterZM ) --[[ @ 0]]
	self.id = "DirectorCharacterZM" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local ClientClanGamertag = CoD.DirectorLobbyClientGamertag.new( f1_arg0, f1_arg1, 0.5, 0.5, -148, 148, 0, 0, 4.5, 37.5 ) --[[ @ 0]]
	ClientClanGamertag:linkToElementModel( self, "info", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			ClientClanGamertag:setModel( f2_local0, f1_arg1 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( ClientClanGamertag ) --[[ @ 0]]
	self.ClientClanGamertag = ClientClanGamertag --[[ @ 0]]
	
	local ZMReadyUp = CoD.ZMReadyUp.new( f1_arg0, f1_arg1, 0, 0, 20, 220, 0, 0, -24, 0 ) --[[ @ 0]]
	ZMReadyUp:linkToElementModel( self, "info", true, function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			ZMReadyUp:setModel( f3_local0, f1_arg1 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( ZMReadyUp ) --[[ @ 0]]
	self.ZMReadyUp = ZMReadyUp --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "InvalidInfo",
			condition = function ( menu, element, event )
				return CoD.DirectorUtility.IsInvalidLobbyClientInfo( element, "info" )
			end
		},
		{
			stateName = "Visible3DModelNoReady",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg1, "visible" ) and CoD.DirectorUtility.InReadyStage( f1_arg1 )
			end
		},
		{
			stateName = "Visible3DModel",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg1, "visible" )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "info", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "info"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:linkToElementModel( self, "visible", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "visible"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local f1_local3 = self --[[ @ 0]]
	local f1_local4 = self.subscribeToModel --[[ @ 0]]
	local f1_local5 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local4( f1_local3, f1_local5["lobbyRoot.lobbyNav"], function ( f9_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f9_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local3 = self --[[ @ 0]]
	f1_local4 = self.subscribeToModel --[[ @ 0]]
	f1_local5 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local4( f1_local3, f1_local5["lobbyRoot.publicLobby.stage"], function ( f10_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f10_arg0:get(),
			modelName = "lobbyRoot.publicLobby.stage"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	f1_local4 = self --[[ @ 0]]
	if CoD.DirectorUtility.IsSessionModeAvailable( f1_arg1, Enum[@"eModes"][@"hash_73723205FAE52C4A"] ) and CoD.ZombieUtility.ShowZMLobbyPoseOptions() then
		CoD.PlayerRoleUtility.PositionDraftClientsSizeOverride( self, f1_arg1 ) --[[ @ 0]]
	end
	return self
end
 --[[ @ 0]]
CoD.DirectorCharacterZM.__resetProperties = function ( f11_arg0 )
	f11_arg0.ClientClanGamertag:completeAnimation() --[[ @ 0]]
	f11_arg0.ZMReadyUp:completeAnimation() --[[ @ 0]]
	f11_arg0.ClientClanGamertag:setAlpha( 1 ) --[[ @ 0]]
	f11_arg0.ZMReadyUp:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorCharacterZM.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f12_arg0, f12_arg1 )
			f12_arg0:__resetProperties() --[[ @ 0]]
			f12_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f12_arg0.ClientClanGamertag:completeAnimation() --[[ @ 0]]
			f12_arg0.ClientClanGamertag:setAlpha( 0 ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.ClientClanGamertag ) --[[ @ 0]]
			f12_arg0.ZMReadyUp:completeAnimation() --[[ @ 0]]
			f12_arg0.ZMReadyUp:setAlpha( 0 ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.ZMReadyUp ) --[[ @ 0]]
		end
	},
	InvalidInfo = {
		DefaultClip = function ( f13_arg0, f13_arg1 )
			f13_arg0:__resetProperties() --[[ @ 0]]
			f13_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f13_arg0.ClientClanGamertag:completeAnimation() --[[ @ 0]]
			f13_arg0.ClientClanGamertag:setAlpha( 0 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.ClientClanGamertag ) --[[ @ 0]]
			f13_arg0.ZMReadyUp:completeAnimation() --[[ @ 0]]
			f13_arg0.ZMReadyUp:setAlpha( 0 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.ZMReadyUp ) --[[ @ 0]]
		end
	},
	Visible3DModelNoReady = {
		DefaultClip = function ( f14_arg0, f14_arg1 )
			f14_arg0:__resetProperties() --[[ @ 0]]
			f14_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	Visible3DModel = {
		DefaultClip = function ( f15_arg0, f15_arg1 )
			f15_arg0:__resetProperties() --[[ @ 0]]
			f15_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f15_arg0.ZMReadyUp:completeAnimation() --[[ @ 0]]
			f15_arg0.ZMReadyUp:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.ZMReadyUp ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.DirectorCharacterZM.__onClose = function ( f16_arg0 )
	f16_arg0.ClientClanGamertag:close() --[[ @ 0]]
	f16_arg0.ZMReadyUp:close() --[[ @ 0]]
end
 --[[ @ 0]]
