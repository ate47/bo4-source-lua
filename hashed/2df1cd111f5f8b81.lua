-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:49
CoD.PC_Korea_Event_Day_Progression = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.PC_Korea_Event_Day_Progression.__defaultWidth = 112 --[[ @ 0]]
CoD.PC_Korea_Event_Day_Progression.__defaultHeight = 112 --[[ @ 0]]
CoD.PC_Korea_Event_Day_Progression.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.PC_Korea_Event_Day_Progression ) --[[ @ 0]]
	self.id = "PC_Korea_Event_Day_Progression" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local EmptyStarImage = LUI.UIImage.new( 0.5, 0.5, -48, 48, 0.5, 0.5, -53, 43 ) --[[ @ 0]]
	EmptyStarImage:setRGB( 0.8, 0.8, 0.8 ) --[[ @ 0]]
	EmptyStarImage:setImage( RegisterImage( @"uie_pc_igrevent_weekprogression_star_empty" ) ) --[[ @ 0]]
	self:addElement( EmptyStarImage ) --[[ @ 0]]
	self.EmptyStarImage = EmptyStarImage --[[ @ 0]]
	
	local StarImage = LUI.UIImage.new( 0.5, 0.5, -48, 48, 0.5, 0.5, -53, 43 ) --[[ @ 0]]
	StarImage:setAlpha( 0 ) --[[ @ 0]]
	StarImage:setImage( RegisterImage( @"uie_pc_igrevent_weekprogression_star" ) ) --[[ @ 0]]
	StarImage:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_glint" ) ) --[[ @ 0]]
	StarImage:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	StarImage:setShaderVector( 1, -46.8, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( StarImage ) --[[ @ 0]]
	self.StarImage = StarImage --[[ @ 0]]
	
	local ReceiveStar = LUI.UIElement.new( 0, 0, 40, 72, 0, 0, 112, 144 ) --[[ @ 0]]
	self:addElement( ReceiveStar ) --[[ @ 0]]
	self.ReceiveStar = ReceiveStar --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "ReceiveStar",
			condition = function ( menu, element, event )
				local f2_local0 = CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg1, "isCompleted" ) --[[ @ 0]]
				if f2_local0 then
					f2_local0 = CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg1, "showCompletedAnimation" ) --[[ @ 0]]
					if f2_local0 then
						f2_local0 = CoD.ModelUtility.IsModelValueTrue( f1_arg1, "PCKoreaEventCurrentDayProgression.showStarCompletedAnimation" ) --[[ @ 0]]
					end
				end
				return f2_local0
			end
		},
		{
			stateName = "Completed",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg1, "isCompleted" )
			end
		},
		{
			stateName = "Failed",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg1, "isFailed" )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "isCompleted", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "isCompleted"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:linkToElementModel( self, "showCompletedAnimation", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "showCompletedAnimation"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local f1_local4 = self --[[ @ 0]]
	local f1_local5 = self.subscribeToModel --[[ @ 0]]
	local f1_local6 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local5( f1_local4, f1_local6["PCKoreaEventCurrentDayProgression.showStarCompletedAnimation"], function ( f7_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f7_arg0:get(),
			modelName = "PCKoreaEventCurrentDayProgression.showStarCompletedAnimation"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:linkToElementModel( self, "isFailed", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "isFailed"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.PC_Korea_Event_Day_Progression.__resetProperties = function ( f9_arg0 )
	f9_arg0.EmptyStarImage:completeAnimation() --[[ @ 0]]
	f9_arg0.ReceiveStar:completeAnimation() --[[ @ 0]]
	f9_arg0.StarImage:completeAnimation() --[[ @ 0]]
	f9_arg0.EmptyStarImage:setAlpha( 1 ) --[[ @ 0]]
	f9_arg0.ReceiveStar:setPlaySoundDirect( false ) --[[ @ 0]]
	f9_arg0.StarImage:setRGB( 1, 1, 1 ) --[[ @ 0]]
	f9_arg0.StarImage:setAlpha( 0 ) --[[ @ 0]]
	f9_arg0.StarImage:setScale( 1, 1 ) --[[ @ 0]]
	f9_arg0.StarImage:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	f9_arg0.StarImage:setShaderVector( 1, -46.8, 0, 0, 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.PC_Korea_Event_Day_Progression.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f10_arg0, f10_arg1 )
			f10_arg0:__resetProperties() --[[ @ 0]]
			f10_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f10_arg0.EmptyStarImage:completeAnimation() --[[ @ 0]]
			f10_arg0.EmptyStarImage:setAlpha( 1 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.EmptyStarImage ) --[[ @ 0]]
		end
	},
	ReceiveStar = {
		DefaultClip = function ( f11_arg0, f11_arg1 )
			f11_arg0:__resetProperties() --[[ @ 0]]
			f11_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			local f11_local0 = function ( f12_arg0 )
				local f12_local0 = function ( f13_arg0 )
					local f13_local0 = function ( f14_arg0 )
						local f14_local0 = function ( f15_arg0 )
							local f15_local0 = function ( f16_arg0 )
								f16_arg0:beginAnimation( 1120 ) --[[ @ 0]]
								f16_arg0:setShaderVector( 0, 1, 0, 0, 0 ) --[[ @ 0]]
								f16_arg0:registerEventHandler( "transition_complete_keyframe", f11_arg0.clipFinished ) --[[ @ 0]]
							end
							 --[[ @ 0]]
							f15_arg0:beginAnimation( 340 ) --[[ @ 0]]
							f15_arg0:registerEventHandler( "transition_complete_keyframe", f15_local0 ) --[[ @ 0]]
						end
						 --[[ @ 0]]
						f14_arg0:beginAnimation( 89 ) --[[ @ 0]]
						f14_arg0:setScale( 1, 1 ) --[[ @ 0]]
						f14_arg0:registerEventHandler( "transition_complete_keyframe", f14_local0 ) --[[ @ 0]]
					end
					 --[[ @ 0]]
					f13_arg0:beginAnimation( 9 ) --[[ @ 0]]
					f13_arg0:setAlpha( 1 ) --[[ @ 0]]
					f13_arg0:setScale( 1.27, 1.27 ) --[[ @ 0]]
					f13_arg0:registerEventHandler( "transition_complete_keyframe", f13_local0 ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f12_arg0:beginAnimation( 260 ) --[[ @ 0]]
				f12_arg0:setAlpha( 0.96 ) --[[ @ 0]]
				f12_arg0:setScale( 1.3, 1.3 ) --[[ @ 0]]
				f12_arg0:registerEventHandler( "transition_complete_keyframe", f12_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f11_arg0.StarImage:beginAnimation( 3000 ) --[[ @ 0]]
			f11_arg0.StarImage:setRGB( 1, 1, 1 ) --[[ @ 0]]
			f11_arg0.StarImage:setAlpha( 0 ) --[[ @ 0]]
			f11_arg0.StarImage:setScale( 0.1, 0.1 ) --[[ @ 0]]
			f11_arg0.StarImage:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
			f11_arg0.StarImage:setShaderVector( 1, -46.8, 0, 0, 0 ) --[[ @ 0]]
			f11_arg0.StarImage:registerEventHandler( "interrupted_keyframe", f11_arg0.clipInterrupted ) --[[ @ 0]]
			f11_arg0.StarImage:registerEventHandler( "transition_complete_keyframe", f11_local0 ) --[[ @ 0]]
			local f11_local1 = function ( f17_arg0 )
				f11_arg0.ReceiveStar:beginAnimation( 3000 ) --[[ @ 0]]
				f11_arg0.ReceiveStar:setPlaySoundDirect( true ) --[[ @ 0]]
				f11_arg0.ReceiveStar:registerEventHandler( "interrupted_keyframe", f11_arg0.clipInterrupted ) --[[ @ 0]]
				f11_arg0.ReceiveStar:registerEventHandler( "transition_complete_keyframe", function ( element, event )
					element:playSound( "uin_igr_receivestar", f11_arg1 ) --[[ @ 0]]
					f11_arg0.clipFinished( element, event ) --[[ @ 0]]
				end ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f11_arg0.ReceiveStar:completeAnimation() --[[ @ 0]]
			f11_arg0.ReceiveStar:setPlaySoundDirect( false ) --[[ @ 0]]
			f11_local1( f11_arg0.ReceiveStar ) --[[ @ 0]]
		end
	},
	Completed = {
		DefaultClip = function ( f19_arg0, f19_arg1 )
			f19_arg0:__resetProperties() --[[ @ 0]]
			f19_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f19_local0 = function ( f20_arg0 )
				local f20_local0 = function ( f21_arg0 )
					f21_arg0:beginAnimation( 990 ) --[[ @ 0]]
					f21_arg0:setShaderVector( 0, 1.17, 0, 0, 0 ) --[[ @ 0]]
					f21_arg0:registerEventHandler( "transition_complete_keyframe", f19_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f19_arg0.StarImage:beginAnimation( 2650 ) --[[ @ 0]]
				f19_arg0.StarImage:registerEventHandler( "interrupted_keyframe", f19_arg0.clipInterrupted ) --[[ @ 0]]
				f19_arg0.StarImage:registerEventHandler( "transition_complete_keyframe", f20_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f19_arg0.StarImage:completeAnimation() --[[ @ 0]]
			f19_arg0.StarImage:setRGB( 1, 1, 1 ) --[[ @ 0]]
			f19_arg0.StarImage:setAlpha( 1 ) --[[ @ 0]]
			f19_arg0.StarImage:setShaderVector( 0, -0.06, 0, 0, 0 ) --[[ @ 0]]
			f19_arg0.StarImage:setShaderVector( 1, -46.8, 0, 0, 0 ) --[[ @ 0]]
			f19_local0( f19_arg0.StarImage ) --[[ @ 0]]
			f19_arg0.nextClip = "DefaultClip" --[[ @ 0]]
		end
	},
	Failed = {
		DefaultClip = function ( f22_arg0, f22_arg1 )
			f22_arg0:__resetProperties() --[[ @ 0]]
			f22_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f22_arg0.EmptyStarImage:completeAnimation() --[[ @ 0]]
			f22_arg0.EmptyStarImage:setAlpha( 0.5 ) --[[ @ 0]]
			f22_arg0.clipFinished( f22_arg0.EmptyStarImage ) --[[ @ 0]]
			f22_arg0.StarImage:completeAnimation() --[[ @ 0]]
			f22_arg0.StarImage:setRGB( 0.8, 0.8, 0.8 ) --[[ @ 0]]
			f22_arg0.clipFinished( f22_arg0.StarImage ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
