-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:35
CoD.ZMAARGameInfo = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.ZMAARGameInfo.__defaultWidth = 974 --[[ @ 0]]
CoD.ZMAARGameInfo.__defaultHeight = 113 --[[ @ 0]]
CoD.ZMAARGameInfo.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.ZMAARGameInfo ) --[[ @ 0]]
	self.id = "ZMAARGameInfo" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local GametypeImage = LUI.UIImage.new( 0, 0, -1.5, 118.5, 0, 0, -3.5, 116.5 ) --[[ @ 0]]
	GametypeImage:setAlpha( 0.9 ) --[[ @ 0]]
	GametypeImage:linkToElementModel( self, "gametypeIcon", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			GametypeImage:setImage( RegisterImage( f2_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( GametypeImage ) --[[ @ 0]]
	self.GametypeImage = GametypeImage --[[ @ 0]]
	
	local GametypeAndMap = LUI.UIText.new( 0, 0, 125, 979, 0, 0, 33.5, 93.5 ) --[[ @ 0]]
	GametypeAndMap:setRGB( 0.58, 0.85, 1 ) --[[ @ 0]]
	GametypeAndMap:setAlpha( 0.5 ) --[[ @ 0]]
	GametypeAndMap:setTTF( "skorzhen" ) --[[ @ 0]]
	GametypeAndMap:setLetterSpacing( 3 ) --[[ @ 0]]
	GametypeAndMap:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	GametypeAndMap:linkToElementModel( self, "gametypeAndMap", true, function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			GametypeAndMap:setText( LocalizeToUpperString( f3_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( GametypeAndMap ) --[[ @ 0]]
	self.GametypeAndMap = GametypeAndMap --[[ @ 0]]
	
	local VictoryDefeat = LUI.UIText.new( 0, 0, 125, 980, 0, 0, 33.5, 93.5 ) --[[ @ 0]]
	VictoryDefeat:setRGB( 0.58, 0.85, 1 ) --[[ @ 0]]
	VictoryDefeat:setAlpha( 0 ) --[[ @ 0]]
	VictoryDefeat:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_AB769C72F266516" ) ) --[[ @ 0]]
	VictoryDefeat:setTTF( "skorzhen" ) --[[ @ 0]]
	VictoryDefeat:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_171E049B161CD00A" ) ) --[[ @ 0]]
	VictoryDefeat:setLetterSpacing( 3 ) --[[ @ 0]]
	VictoryDefeat:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	self:addElement( VictoryDefeat ) --[[ @ 0]]
	self.VictoryDefeat = VictoryDefeat --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Stats",
			condition = function ( menu, element, event )
				return IsZombies() and CoD.ModelUtility.IsModelValueEqualToEnum( f1_arg1, "AAR.activeTab", CoD.AARUtility.AARTabs.ZM_AAR_SCOREBOARD )
			end
		},
		{
			stateName = "Summary",
			condition = function ( menu, element, event )
				return IsZombies() and CoD.ModelUtility.IsModelValueEqualToEnum( f1_arg1, "AAR.activeTab", CoD.AARUtility.AARTabs.AAR_SUMMARY )
			end
		},
		{
			stateName = "Trial",
			condition = function ( menu, element, event )
				return IsZombies() and CoD.ModelUtility.IsModelValueEqualToEnum( f1_arg1, "AAR.activeTab", CoD.AARUtility.AARTabs.AAR_TRIAL )
			end
		}
	} ) --[[ @ 0]]
	local f1_local4 = self --[[ @ 0]]
	local f1_local5 = self.subscribeToModel --[[ @ 0]]
	local f1_local6 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local5( f1_local4, f1_local6["lobbyRoot.lobbyNav"], function ( f7_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f7_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local4 = self --[[ @ 0]]
	f1_local5 = self.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local5( f1_local4, f1_local6["AAR.activeTab"], function ( f8_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f8_arg0:get(),
			modelName = "AAR.activeTab"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.ZMAARGameInfo.__resetProperties = function ( f9_arg0 )
	f9_arg0.VictoryDefeat:completeAnimation() --[[ @ 0]]
	f9_arg0.GametypeAndMap:completeAnimation() --[[ @ 0]]
	f9_arg0.VictoryDefeat:setRGB( 0.58, 0.85, 1 ) --[[ @ 0]]
	f9_arg0.VictoryDefeat:setAlpha( 0 ) --[[ @ 0]]
	f9_arg0.VictoryDefeat:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_AB769C72F266516" ) ) --[[ @ 0]]
	f9_arg0.VictoryDefeat:setLetterSpacing( 3 ) --[[ @ 0]]
	f9_arg0.GametypeAndMap:setAlpha( 0.5 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ZMAARGameInfo.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f10_arg0, f10_arg1 )
			f10_arg0:__resetProperties() --[[ @ 0]]
			f10_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f10_arg0.VictoryDefeat:completeAnimation() --[[ @ 0]]
			f10_arg0.VictoryDefeat:setRGB( 0.4, 0.55, 0.22 ) --[[ @ 0]]
			f10_arg0.VictoryDefeat:setAlpha( 0 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.VictoryDefeat ) --[[ @ 0]]
		end
	},
	Stats = {
		DefaultClip = function ( f11_arg0, f11_arg1 )
			f11_arg0:__resetProperties() --[[ @ 0]]
			f11_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f11_arg0.VictoryDefeat:completeAnimation() --[[ @ 0]]
			f11_arg0.VictoryDefeat:setAlpha( 0 ) --[[ @ 0]]
			f11_arg0.VictoryDefeat:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_707BB5E9B11633E3" ) ) --[[ @ 0]]
			f11_arg0.clipFinished( f11_arg0.VictoryDefeat ) --[[ @ 0]]
		end
	},
	Summary = {
		DefaultClip = function ( f12_arg0, f12_arg1 )
			f12_arg0:__resetProperties() --[[ @ 0]]
			f12_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f12_arg0.VictoryDefeat:completeAnimation() --[[ @ 0]]
			f12_arg0.VictoryDefeat:setAlpha( 0 ) --[[ @ 0]]
			f12_arg0.VictoryDefeat:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_15E9C86634E25EA8" ) ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.VictoryDefeat ) --[[ @ 0]]
		end
	},
	Trial = {
		DefaultClip = function ( f13_arg0, f13_arg1 )
			f13_arg0:__resetProperties() --[[ @ 0]]
			f13_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f13_arg0.GametypeAndMap:completeAnimation() --[[ @ 0]]
			f13_arg0.GametypeAndMap:setAlpha( 0 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.GametypeAndMap ) --[[ @ 0]]
			f13_arg0.VictoryDefeat:completeAnimation() --[[ @ 0]]
			f13_arg0.VictoryDefeat:setAlpha( 0.5 ) --[[ @ 0]]
			f13_arg0.VictoryDefeat:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_82F7D154900B7D8" ) ) --[[ @ 0]]
			f13_arg0.VictoryDefeat:setLetterSpacing( 3 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.VictoryDefeat ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.ZMAARGameInfo.__onClose = function ( f14_arg0 )
	f14_arg0.GametypeImage:close() --[[ @ 0]]
	f14_arg0.GametypeAndMap:close() --[[ @ 0]]
end
 --[[ @ 0]]
