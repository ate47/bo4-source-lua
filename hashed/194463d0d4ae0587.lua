-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:33
require( "x64:4ceb8e53c9b511d" ) --[[ @ 0]]

CoD.ZMPerkOption = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.ZMPerkOption.__defaultWidth = 132 --[[ @ 0]]
CoD.ZMPerkOption.__defaultHeight = 128 --[[ @ 0]]
CoD.ZMPerkOption.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.ZMPerkOption ) --[[ @ 0]]
	self.id = "ZMPerkOption" --[[ @ 0]]
	self.soundSet = "FrontendMain" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local ZMPerk = CoD.ZMElixirSlotInternal.new( f1_arg0, f1_arg1, 0.5, 0.5, -80, 80, 0.5, 0.5, -80, 80 ) --[[ @ 0]]
	ZMPerk:mergeStateConditions( {
		{
			stateName = "Locked",
			condition = function ( menu, element, event )
				return CoD.ZMPerkUtility.IsPerkLocked( element, f1_arg1, menu )
			end
		},
		{
			stateName = "NoConsumablesRemainingEquipped",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		},
		{
			stateName = "NoConsumablesRemaining",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		},
		{
			stateName = "Equipped",
			condition = function ( menu, element, event )
				return CoD.ZMPerkUtility.IsPerkEquipped( self, f1_arg1, menu )
			end
		}
	} ) --[[ @ 0]]
	local f1_local2 = ZMPerk --[[ @ 0]]
	local f1_local3 = ZMPerk.subscribeToModel --[[ @ 0]]
	local f1_local4 = DataSources.ZMEquippedPerks.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local3( f1_local2, f1_local4.updateEquipped, function ( f6_arg0 )
		f1_arg0:updateElementState( ZMPerk, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f6_arg0:get(),
			modelName = "updateEquipped"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ZMPerk:linkToElementModel( ZMPerk, "globalItemIndex", true, function ( model )
		f1_arg0:updateElementState( ZMPerk, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "globalItemIndex"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	ZMPerk:setScale( 0.9, 0.9 ) --[[ @ 0]]
	ZMPerk:linkToElementModel( self, nil, false, function ( model )
		ZMPerk:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( ZMPerk ) --[[ @ 0]]
	self.ZMPerk = ZMPerk --[[ @ 0]]
	
	ZMPerk.id = "ZMPerk" --[[ @ 0]]
	self.__defaultFocus = ZMPerk --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.ZMPerkOption.__resetProperties = function ( f9_arg0 )
	f9_arg0.ZMPerk:completeAnimation() --[[ @ 0]]
	f9_arg0.ZMPerk:setScale( 0.9, 0.9 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ZMPerkOption.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f10_arg0, f10_arg1 )
			f10_arg0:__resetProperties() --[[ @ 0]]
			f10_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end,
		ChildFocus = function ( f11_arg0, f11_arg1 )
			f11_arg0:__resetProperties() --[[ @ 0]]
			f11_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f11_arg0.ZMPerk:completeAnimation() --[[ @ 0]]
			f11_arg0.ZMPerk:setScale( 0.93, 0.93 ) --[[ @ 0]]
			f11_arg0.clipFinished( f11_arg0.ZMPerk ) --[[ @ 0]]
		end,
		GainChildFocus = function ( f12_arg0, f12_arg1 )
			f12_arg0:__resetProperties() --[[ @ 0]]
			f12_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f12_local0 = function ( f13_arg0 )
				f12_arg0.ZMPerk:beginAnimation( 200, Enum[@"hash_1F50FFF429AB1890"][@"hash_15193EA7825DC097"] ) --[[ @ 0]]
				f12_arg0.ZMPerk:setScale( 0.93, 0.93 ) --[[ @ 0]]
				f12_arg0.ZMPerk:registerEventHandler( "interrupted_keyframe", f12_arg0.clipInterrupted ) --[[ @ 0]]
				f12_arg0.ZMPerk:registerEventHandler( "transition_complete_keyframe", f12_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f12_arg0.ZMPerk:completeAnimation() --[[ @ 0]]
			f12_arg0.ZMPerk:setScale( 0.9, 0.9 ) --[[ @ 0]]
			f12_local0( f12_arg0.ZMPerk ) --[[ @ 0]]
		end,
		LoseChildFocus = function ( f14_arg0, f14_arg1 )
			f14_arg0:__resetProperties() --[[ @ 0]]
			f14_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f14_local0 = function ( f15_arg0 )
				f14_arg0.ZMPerk:beginAnimation( 200, Enum[@"hash_1F50FFF429AB1890"][@"hash_15193EA7825DC097"] ) --[[ @ 0]]
				f14_arg0.ZMPerk:setScale( 0.9, 0.9 ) --[[ @ 0]]
				f14_arg0.ZMPerk:registerEventHandler( "interrupted_keyframe", f14_arg0.clipInterrupted ) --[[ @ 0]]
				f14_arg0.ZMPerk:registerEventHandler( "transition_complete_keyframe", f14_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f14_arg0.ZMPerk:completeAnimation() --[[ @ 0]]
			f14_arg0.ZMPerk:setScale( 0.93, 0.93 ) --[[ @ 0]]
			f14_local0( f14_arg0.ZMPerk ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.ZMPerkOption.__onClose = function ( f16_arg0 )
	f16_arg0.ZMPerk:close() --[[ @ 0]]
end
 --[[ @ 0]]
