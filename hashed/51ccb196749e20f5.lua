-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
require( "ui/uieditor/widgets/mphudwidgets/thrustmeter/thrustmeterarrows" ) --[[ @ 0]]
require( "ui/uieditor/widgets/mphudwidgets/thrustmeter/thrustmeterdots" ) --[[ @ 0]]

CoD.ThrustMeter = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.ThrustMeter.__defaultWidth = 224 --[[ @ 0]]
CoD.ThrustMeter.__defaultHeight = 44 --[[ @ 0]]
CoD.ThrustMeter.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	SetProperty( self, "_lastScalableWidth", -1 ) --[[ @ 0]]
	self:setUseCylinderMapping( false ) --[[ @ 0]]
	self:setClass( CoD.ThrustMeter ) --[[ @ 0]]
	self.id = "ThrustMeter" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	
	local Panel = LUI.UIImage.new( 0.5, 0.5, -112, 112, 0.5, 0.5, -22, 22 ) --[[ @ 0]]
	Panel:setImage( RegisterImage( @"hash_40866397AC1DFF95" ) ) --[[ @ 0]]
	self:addElement( Panel ) --[[ @ 0]]
	self.Panel = Panel --[[ @ 0]]
	
	local Empty = LUI.UIImage.new( 0, 0, 17, 239, 0, 0, 13, 57 ) --[[ @ 0]]
	Empty:setAlpha( 0 ) --[[ @ 0]]
	Empty:setImage( RegisterImage( @"uie_ui_hud_core_thrust_widget_meter_empty" ) ) --[[ @ 0]]
	self:addElement( Empty ) --[[ @ 0]]
	self.Empty = Empty --[[ @ 0]]
	
	local Arc = LUI.UIImage.new( 0, 0, 16.5, 238.5, 0, 0, 13, 57 ) --[[ @ 0]]
	Arc:setAlpha( 0 ) --[[ @ 0]]
	Arc:setImage( RegisterImage( @"uie_ui_hud_core_thrust_widget_arc" ) ) --[[ @ 0]]
	self:addElement( Arc ) --[[ @ 0]]
	self.Arc = Arc --[[ @ 0]]
	
	local thrustMeter = CoD.ThrustMeterDots.new( f1_arg0, f1_arg1, 0.5, 0.5, -114, 110, 0.5, 0.5, -22, 22 ) --[[ @ 0]]
	thrustMeter.dots:setShaderVector( 0, 0.8, 0.01, 0, 0 ) --[[ @ 0]]
	thrustMeter.dots:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	thrustMeter.fill:setShaderVector( 0, 0.54, 0, 0, 0 ) --[[ @ 0]]
	thrustMeter.fill:setShaderVector( 2, -3.18, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( thrustMeter ) --[[ @ 0]]
	self.thrustMeter = thrustMeter --[[ @ 0]]
	
	local thrustArrows = CoD.ThrustMeterArrows.new( f1_arg0, f1_arg1, 0.5, 0.5, -10, 12, 1, 1, -445, 5 ) --[[ @ 0]]
	thrustArrows:setAlpha( 0 ) --[[ @ 0]]
	thrustArrows.right1:setZRot( 27 ) --[[ @ 0]]
	self:addElement( thrustArrows ) --[[ @ 0]]
	self.thrustArrows = thrustArrows --[[ @ 0]]
	
	local pixel1 = LUI.UIImage.new( 0.5, 0.5, -120, -108, 1, 1, -54, -42 ) --[[ @ 0]]
	pixel1:setAlpha( 0 ) --[[ @ 0]]
	pixel1:setImage( RegisterImage( @"uie_t7_cp_hud_abilitywheel_pixel" ) ) --[[ @ 0]]
	pixel1:setMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	self:addElement( pixel1 ) --[[ @ 0]]
	self.pixel1 = pixel1 --[[ @ 0]]
	
	local pixel2 = LUI.UIImage.new( 0.5, 0.5, 108, 120, 1, 1, -54, -42 ) --[[ @ 0]]
	pixel2:setAlpha( 0 ) --[[ @ 0]]
	pixel2:setImage( RegisterImage( @"uie_t7_cp_hud_abilitywheel_pixel" ) ) --[[ @ 0]]
	pixel2:setMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	self:addElement( pixel2 ) --[[ @ 0]]
	self.pixel2 = pixel2 --[[ @ 0]]
	
	self:subscribeToGlobalModel( f1_arg1, "PlayerAbilities", "playerEnergyRatio", function ( model )
		local f2_local0 = self --[[ @ 0]]
		CoD.HUDUtility.UpdateThrustMeter( self, self.thrustMeter, self.thrustArrows, f1_arg1, model ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.ThrustMeter.__onClose = function ( f3_arg0 )
	f3_arg0.thrustMeter:close() --[[ @ 0]]
	f3_arg0.thrustArrows:close() --[[ @ 0]]
end
 --[[ @ 0]]
