-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:35
require( "ui/uieditor/widgets/store/storecommontextbacking" ) --[[ @ 0]]

CoD.AARTierPip = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.AARTierPip.__defaultWidth = 54 --[[ @ 0]]
CoD.AARTierPip.__defaultHeight = 54 --[[ @ 0]]
CoD.AARTierPip.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.AARTierPip ) --[[ @ 0]]
	self.id = "AARTierPip" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local FrameBorder = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	FrameBorder:setAlpha( 0 ) --[[ @ 0]]
	FrameBorder:setImage( RegisterImage( @"uie_ui_menu_store_common_frame" ) ) --[[ @ 0]]
	FrameBorder:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_add" ) ) --[[ @ 0]]
	FrameBorder:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	FrameBorder:setupNineSliceShader( 12, 12 ) --[[ @ 0]]
	self:addElement( FrameBorder ) --[[ @ 0]]
	self.FrameBorder = FrameBorder --[[ @ 0]]
	
	local ImageX = LUI.UIImage.new( 0, 1, 2, -2, 0, 1, 2, -2 ) --[[ @ 0]]
	ImageX:setAlpha( 0 ) --[[ @ 0]]
	ImageX:setImage( RegisterImage( @"uie_t7_menu_frontend_slidex" ) ) --[[ @ 0]]
	ImageX:setMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	self:addElement( ImageX ) --[[ @ 0]]
	self.ImageX = ImageX --[[ @ 0]]
	
	local Glow = LUI.UIImage.new( 0, 1, -12, 12, 0, 1, -15, 15 ) --[[ @ 0]]
	Glow:setRGB( ColorSet.T8__OCHRE.r, ColorSet.T8__OCHRE.g, ColorSet.T8__OCHRE.b ) --[[ @ 0]]
	Glow:setAlpha( 0 ) --[[ @ 0]]
	Glow:setImage( RegisterImage( @"uie_ui_hud_core_no_ammo_glow" ) ) --[[ @ 0]]
	Glow:setMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	self:addElement( Glow ) --[[ @ 0]]
	self.Glow = Glow --[[ @ 0]]
	
	local Background = LUI.UIImage.new( 0, 1, 2, -2, 0, 1, 2, -2 ) --[[ @ 0]]
	Background:setRGB( 1, 0.93, 0 ) --[[ @ 0]]
	Background:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( Background ) --[[ @ 0]]
	self.Background = Background --[[ @ 0]]
	
	local DotTiledBacking = CoD.StoreCommonTextBacking.new( f1_arg0, f1_arg1, 0, 1, 2, -2, 0, 1, 2, -2 ) --[[ @ 0]]
	DotTiledBacking:setRGB( ColorSet.PlayerYellow.r, ColorSet.PlayerYellow.g, ColorSet.PlayerYellow.b ) --[[ @ 0]]
	DotTiledBacking:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( DotTiledBacking ) --[[ @ 0]]
	self.DotTiledBacking = DotTiledBacking --[[ @ 0]]
	
	local FocusBorder = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	FocusBorder:setRGB( ColorSet.WarzoneTeammate1.r, ColorSet.WarzoneTeammate1.g, ColorSet.WarzoneTeammate1.b ) --[[ @ 0]]
	FocusBorder:setAlpha( 0 ) --[[ @ 0]]
	FocusBorder:setImage( RegisterImage( @"uie_ui_menu_store_focus_frame" ) ) --[[ @ 0]]
	FocusBorder:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_add" ) ) --[[ @ 0]]
	FocusBorder:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	FocusBorder:setupNineSliceShader( 8, 8 ) --[[ @ 0]]
	self:addElement( FocusBorder ) --[[ @ 0]]
	self.FocusBorder = FocusBorder --[[ @ 0]]
	
	local TierText = LUI.UIText.new( 0.5, 0.5, -15, 15, 0.5, 0.5, -15, 15 ) --[[ @ 0]]
	TierText:setAlpha( 0 ) --[[ @ 0]]
	TierText:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	TierText:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_2AE166D9BA8C6907" ) ) --[[ @ 0]]
	TierText:setShaderVector( 0, 0.02, 0, 0, 0 ) --[[ @ 0]]
	TierText:setShaderVector( 1, 0.06, 0, 0, 0 ) --[[ @ 0]]
	TierText:setShaderVector( 2, 1, 0, 0, 0 ) --[[ @ 0]]
	TierText:setLetterSpacing( 2 ) --[[ @ 0]]
	TierText:setAlignment( Enum[@"LUIAlignment"][@"hash_1FEEB12BCB0D7041"] ) --[[ @ 0]]
	TierText:setAlignment( Enum[@"LUIAlignment"][@"hash_6ED4298C93DC5ED"] ) --[[ @ 0]]
	self:addElement( TierText ) --[[ @ 0]]
	self.TierText = TierText --[[ @ 0]]
	
	self.TierText:linkToElementModel( self, "tierText", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			TierText:setText( f2_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.AARTierPip.__resetProperties = function ( f3_arg0 )
	f3_arg0.FrameBorder:completeAnimation() --[[ @ 0]]
	f3_arg0.TierText:completeAnimation() --[[ @ 0]]
	f3_arg0.ImageX:completeAnimation() --[[ @ 0]]
	f3_arg0.Glow:completeAnimation() --[[ @ 0]]
	f3_arg0.Background:completeAnimation() --[[ @ 0]]
	f3_arg0.DotTiledBacking:completeAnimation() --[[ @ 0]]
	f3_arg0.FocusBorder:completeAnimation() --[[ @ 0]]
	f3_arg0.FrameBorder:setAlpha( 0 ) --[[ @ 0]]
	f3_arg0.TierText:setRGB( 1, 1, 1 ) --[[ @ 0]]
	f3_arg0.TierText:setAlpha( 0 ) --[[ @ 0]]
	f3_arg0.ImageX:setRGB( 1, 1, 1 ) --[[ @ 0]]
	f3_arg0.ImageX:setAlpha( 0 ) --[[ @ 0]]
	f3_arg0.Glow:setAlpha( 0 ) --[[ @ 0]]
	f3_arg0.Background:setAlpha( 0 ) --[[ @ 0]]
	f3_arg0.DotTiledBacking:setAlpha( 0 ) --[[ @ 0]]
	f3_arg0.FocusBorder:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.AARTierPip.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f4_arg0, f4_arg1 )
			f4_arg0:__resetProperties() --[[ @ 0]]
			f4_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f4_arg0.FrameBorder:completeAnimation() --[[ @ 0]]
			f4_arg0.FrameBorder:setAlpha( 0 ) --[[ @ 0]]
			f4_arg0.clipFinished( f4_arg0.FrameBorder ) --[[ @ 0]]
			f4_arg0.ImageX:completeAnimation() --[[ @ 0]]
			f4_arg0.ImageX:setAlpha( 0 ) --[[ @ 0]]
			f4_arg0.clipFinished( f4_arg0.ImageX ) --[[ @ 0]]
			f4_arg0.TierText:completeAnimation() --[[ @ 0]]
			f4_arg0.TierText:setAlpha( 0 ) --[[ @ 0]]
			f4_arg0.clipFinished( f4_arg0.TierText ) --[[ @ 0]]
		end
	},
	Filled = {
		DefaultClip = function ( f5_arg0, f5_arg1 )
			f5_arg0:__resetProperties() --[[ @ 0]]
			f5_arg0:setupElementClipCounter( 6 ) --[[ @ 0]]
			f5_arg0.ImageX:completeAnimation() --[[ @ 0]]
			f5_arg0.ImageX:setRGB( 0, 0, 0 ) --[[ @ 0]]
			f5_arg0.ImageX:setAlpha( 0 ) --[[ @ 0]]
			f5_arg0.clipFinished( f5_arg0.ImageX ) --[[ @ 0]]
			f5_arg0.Glow:completeAnimation() --[[ @ 0]]
			f5_arg0.Glow:setAlpha( 0.6 ) --[[ @ 0]]
			f5_arg0.clipFinished( f5_arg0.Glow ) --[[ @ 0]]
			f5_arg0.Background:completeAnimation() --[[ @ 0]]
			f5_arg0.Background:setAlpha( 0.7 ) --[[ @ 0]]
			f5_arg0.clipFinished( f5_arg0.Background ) --[[ @ 0]]
			f5_arg0.DotTiledBacking:completeAnimation() --[[ @ 0]]
			f5_arg0.DotTiledBacking:setAlpha( 0.25 ) --[[ @ 0]]
			f5_arg0.clipFinished( f5_arg0.DotTiledBacking ) --[[ @ 0]]
			f5_arg0.FocusBorder:completeAnimation() --[[ @ 0]]
			f5_arg0.FocusBorder:setAlpha( 1 ) --[[ @ 0]]
			f5_arg0.clipFinished( f5_arg0.FocusBorder ) --[[ @ 0]]
			f5_arg0.TierText:completeAnimation() --[[ @ 0]]
			f5_arg0.TierText:setRGB( 0, 0, 0 ) --[[ @ 0]]
			f5_arg0.TierText:setAlpha( 1 ) --[[ @ 0]]
			f5_arg0.clipFinished( f5_arg0.TierText ) --[[ @ 0]]
		end
	},
	NotFilled = {
		DefaultClip = function ( f6_arg0, f6_arg1 )
			f6_arg0:__resetProperties() --[[ @ 0]]
			f6_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f6_arg0.FrameBorder:completeAnimation() --[[ @ 0]]
			f6_arg0.FrameBorder:setAlpha( 0.15 ) --[[ @ 0]]
			f6_arg0.clipFinished( f6_arg0.FrameBorder ) --[[ @ 0]]
			f6_arg0.ImageX:completeAnimation() --[[ @ 0]]
			f6_arg0.ImageX:setAlpha( 1 ) --[[ @ 0]]
			f6_arg0.clipFinished( f6_arg0.ImageX ) --[[ @ 0]]
			f6_arg0.TierText:completeAnimation() --[[ @ 0]]
			f6_arg0.TierText:setAlpha( 1 ) --[[ @ 0]]
			f6_arg0.clipFinished( f6_arg0.TierText ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.AARTierPip.__onClose = function ( f7_arg0 )
	f7_arg0.DotTiledBacking:close() --[[ @ 0]]
	f7_arg0.TierText:close() --[[ @ 0]]
end
 --[[ @ 0]]
