-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:33
require( "ui/uieditor/menus/charactercustomization/personalizecharacter" ) --[[ @ 0]]
require( "x64:4e2ecedbb00c2e1b" ) --[[ @ 0]]
require( "x64:486b4582183041dd" ) --[[ @ 0]]
require( "x64:2ef912f3f903134c" ) --[[ @ 0]]
require( "ui/uieditor/widgets/scoreboard/tabbedscoreboardfuibox" ) --[[ @ 0]]
require( "ui/uieditor/widgets/scrollbars/verticalcounter" ) --[[ @ 0]]

CoD.CharacterSelection_CustomCharacterFrameWidget = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.CharacterSelection_CustomCharacterFrameWidget.__defaultWidth = 1718 --[[ @ 0]]
CoD.CharacterSelection_CustomCharacterFrameWidget.__defaultHeight = 800 --[[ @ 0]]
CoD.CharacterSelection_CustomCharacterFrameWidget.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.CharacterSelection_CustomCharacterFrameWidget ) --[[ @ 0]]
	self.id = "CharacterSelection_CustomCharacterFrameWidget" --[[ @ 0]]
	self.soundSet = "FrontendMain" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	
	local CustomCharacter = CoD.CharacterSelection_CustomCharacterButton.new( f1_arg0, f1_arg1, 0.5, 0.5, 78, 378, 0, 0, 194.5, 674.5 ) --[[ @ 0]]
	CustomCharacter:mergeStateConditions( {
		{
			stateName = "NoPersonalize",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		}
	} ) --[[ @ 0]]
	CustomCharacter:subscribeToGlobalModel( f1_arg1, "WZDefaultCharacterInfo", nil, function ( model )
		CustomCharacter:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	CustomCharacter:appendEventHandler( "input_source_changed", function ( f4_arg0, f4_arg1 )
		f4_arg1.menu = f4_arg1.menu or f1_arg0 --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f4_arg0, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_1E6DB407A2AF8B09"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local IconsLine = CustomCharacter --[[ @ 0]]
	local Characters = CustomCharacter.subscribeToModel --[[ @ 0]]
	local IconsText = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	Characters( IconsLine, IconsText.LastInput, function ( f5_arg0, f5_arg1 )
		CoD.Menu.UpdateButtonShownState( f5_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_1E6DB407A2AF8B09"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	CustomCharacter:registerEventHandler( "gain_focus", function ( element, event )
		local f6_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f6_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f6_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_1E6DB407A2AF8B09"] ) --[[ @ 0]]
		return f6_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( CustomCharacter, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		if IsElementInState( element, "DefaultState" ) then
			PositionDraftSelectCharacterFrontend( self, element, controller ) --[[ @ 0]]
			GoBack( self, controller ) --[[ @ 0]]
			PlaySoundAlias( "uin_specialist_select" ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsElementInState( element, "DefaultState" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, "ui_confirm" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( CustomCharacter, f1_arg1, Enum[@"LUIButton"][@"hash_1E6DB407A2AF8B09"], "ui_contextual_2", function ( element, menu, controller, model )
		if IsGamepad( controller ) then
			PlaySoundAlias( "uin_toggle_generic" ) --[[ @ 0]]
			OpenOverlay( self, "PersonalizeDefaultWZCharacter", controller, nil ) --[[ @ 0]]
			return true
		elseif not IsGamepad( controller ) then
			PlaySoundAlias( "uin_toggle_generic" ) --[[ @ 0]]
			OpenOverlay( self, "PersonalizeDefaultWZCharacter", controller, nil ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsGamepad( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_1E6DB407A2AF8B09"], @"hash_72AA2EA68ACC2317", nil, "ui_contextual_2" ) --[[ @ 0]]
			return true
		elseif not IsGamepad( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_1E6DB407A2AF8B09"], @"hash_72AA2EA68ACC2317", Enum[@"hash_3BEBDBAEEB3ECCCA"][@"hash_4B6372335C630AD3"], "ui_contextual_2" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( CustomCharacter, "childFocusGained", function ( element )
		PositionDraftOnFocusCharacter( self, element, f1_arg1 ) --[[ @ 0]]
		SetControllerModelValue( f1_arg1, "WZCharacterInfo.infoModel", element:getModel() ) --[[ @ 0]]
		CoD.ModelUtility.SetControllerModelValueToEnum( f1_arg1, "WZCharacterInfo.showInfoState", CoD.WZUtility.CharacterInfoShowState.SHOW ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( CustomCharacter, "childFocusLost", function ( element )
		if not CoD.BaseUtility.DoesElementOrChildHaveFocus( self, "Characters" ) then
			PositionDraftOnFocusCharacterLost( self, element, f1_arg1, true ) --[[ @ 0]]
			CoD.ModelUtility.SetControllerModelValueToEnum( f1_arg1, "WZCharacterInfo.showInfoState", CoD.WZUtility.CharacterInfoShowState.HIDE ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	CustomCharacter:AddContextualMenuAction( f1_arg0, f1_arg1, @"hash_72AA2EA68ACC2317", function ( f13_arg0, f13_arg1, f13_arg2, f13_arg3 )
		return function ( f14_arg0, f14_arg1, f14_arg2, f14_arg3 )
			PlaySoundAlias( "uin_toggle_generic" ) --[[ @ 0]]
			OpenOverlay( self, "PersonalizeDefaultWZCharacter", f14_arg2, nil ) --[[ @ 0]]
		end
		
	end ) --[[ @ 0]]
	self:addElement( CustomCharacter ) --[[ @ 0]]
	self.CustomCharacter = CustomCharacter --[[ @ 0]]
	
	Characters = LUI.UIList.new( f1_arg0, f1_arg1, 0, 0, nil, false, false, false, false ) --[[ @ 0]]
	Characters:setLeftRight( 0.5, 0.5, 385, 859 ) --[[ @ 0]]
	Characters:setTopBottom( 0, 0, 162.5, 782.5 ) --[[ @ 0]]
	Characters:setWidgetType( CoD.CharacterSelection_CharacterListWidget ) --[[ @ 0]]
	Characters:setHorizontalCount( 3 ) --[[ @ 0]]
	Characters:setVerticalCount( 4 ) --[[ @ 0]]
	Characters:setSpacing( 0 ) --[[ @ 0]]
	Characters:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	Characters:setVerticalCounter( CoD.verticalCounter ) --[[ @ 0]]
	Characters:linkToElementModel( self, "characterDatasource", true, function ( model )
		local f15_local0 = model:get() --[[ @ 0]]
		if f15_local0 ~= nil then
			Characters:setDataSource( f15_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	Characters:linkToElementModel( Characters, "purchasable", true, function ( model, f16_arg1 )
		CoD.Menu.UpdateButtonShownState( f16_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	Characters:linkToElementModel( Characters, "disabled", true, function ( model, f17_arg1 )
		CoD.Menu.UpdateButtonShownState( f17_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f17_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_1E6DB407A2AF8B09"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	Characters:appendEventHandler( "input_source_changed", function ( f18_arg0, f18_arg1 )
		f18_arg1.menu = f18_arg1.menu or f1_arg0 --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f18_arg0, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_1E6DB407A2AF8B09"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	IconsText = Characters --[[ @ 0]]
	IconsLine = Characters.subscribeToModel --[[ @ 0]]
	local DefaultLine = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	IconsLine( IconsText, DefaultLine.LastInput, function ( f19_arg0, f19_arg1 )
		CoD.Menu.UpdateButtonShownState( f19_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_1E6DB407A2AF8B09"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	Characters:linkToElementModel( Characters, "hasCustomization", true, function ( model, f20_arg1 )
		CoD.Menu.UpdateButtonShownState( f20_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_1E6DB407A2AF8B09"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	Characters:registerEventHandler( "list_item_gain_focus", function ( element, event )
		local f21_local0 = nil --[[ @ 0]]
		PositionDraftOnFocusCharacter( self, element, f1_arg1 ) --[[ @ 0]]
		SetControllerModelValue( f1_arg1, "WZCharacterInfo.infoModel", element:getModel() ) --[[ @ 0]]
		CoD.ModelUtility.SetControllerModelValueToEnum( f1_arg1, "WZCharacterInfo.showInfoState", CoD.WZUtility.CharacterInfoShowState.SHOW ) --[[ @ 0]]
		return f21_local0
	end ) --[[ @ 0]]
	Characters:registerEventHandler( "list_item_lose_focus", function ( element, event )
		local f22_local0 = nil --[[ @ 0]]
		if not CoD.BaseUtility.DoesElementOrChildHaveFocus( self, "CustomCharacter" ) and not CoD.BaseUtility.DoesElementOrChildHaveFocus( self, "Characters" ) then
			PositionDraftOnFocusCharacterLost( self, element, f1_arg1, false ) --[[ @ 0]]
			CoD.ModelUtility.SetControllerModelValueToEnum( f1_arg1, "WZCharacterInfo.showInfoState", CoD.WZUtility.CharacterInfoShowState.HIDE ) --[[ @ 0]]
		end
		return f22_local0
	end ) --[[ @ 0]]
	Characters:registerEventHandler( "gain_focus", function ( element, event )
		local f23_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f23_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f23_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_1E6DB407A2AF8B09"] ) --[[ @ 0]]
		return f23_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( Characters, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		if not CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "purchasable" ) and not CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "disabled" ) and not IsGameTrial() then
			PositionDraftSelectCharacterFrontend( self, element, controller ) --[[ @ 0]]
			GoBack( self, controller ) --[[ @ 0]]
			PlaySoundAlias( "uin_specialist_select" ) --[[ @ 0]]
			SaveLoadout( self, controller ) --[[ @ 0]]
			return true
		elseif IsPC() and IsElementInState( element, "Selected" ) and not IsGameTrial() then
			GoBack( self, controller ) --[[ @ 0]]
			PlaySoundAlias( "uin_specialist_select" ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "purchasable" ) and not CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "disabled" ) and not IsGameTrial() then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, "ui_confirm" ) --[[ @ 0]]
			return true
		elseif IsPC() and IsElementInState( element, "Selected" ) and not IsGameTrial() then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, "ui_confirm" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( Characters, f1_arg1, Enum[@"LUIButton"][@"hash_1E6DB407A2AF8B09"], "ui_contextual_2", function ( element, menu, controller, model )
		if IsGamepad( controller ) and not CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "disabled" ) and not IsGameTrial() and CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "hasCustomization" ) then
			PlaySoundAlias( "uin_toggle_generic" ) --[[ @ 0]]
			OpenOverlay( self, "PersonalizeCharacter", controller, {
				model = element:getModel(),
				properties = {
					_sessionMode = menu._sessionMode,
					_storageLoadoutBuffer = menu._storageLoadoutBuffer
				}
			} ) --[[ @ 0]]
			return true
		elseif not IsGamepad( controller ) and not CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "disabled" ) and not IsGameTrial() and CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "hasCustomization" ) then
			PlaySoundAlias( "uin_toggle_generic" ) --[[ @ 0]]
			OpenOverlay( self, "PersonalizeCharacter", controller, {
				model = element:getModel(),
				properties = {
					_sessionMode = menu._sessionMode,
					_storageLoadoutBuffer = menu._storageLoadoutBuffer
				}
			} ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsGamepad( controller ) and not CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "disabled" ) and not IsGameTrial() and CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "hasCustomization" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_1E6DB407A2AF8B09"], @"hash_72AA2EA68ACC2317", nil, "ui_contextual_2" ) --[[ @ 0]]
			return true
		elseif not IsGamepad( controller ) and not CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "disabled" ) and not IsGameTrial() and CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "hasCustomization" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_1E6DB407A2AF8B09"], @"hash_72AA2EA68ACC2317", Enum[@"hash_3BEBDBAEEB3ECCCA"][@"hash_4B6372335C630AD3"], "ui_contextual_2" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	Characters:AddContextualMenuAction( f1_arg0, f1_arg1, @"hash_72AA2EA68ACC2317", function ( f28_arg0, f28_arg1, f28_arg2, f28_arg3 )
		if not CoD.ModelUtility.IsSelfModelValueTrue( f28_arg0, f28_arg2, "disabled" ) and not IsGameTrial() and CoD.ModelUtility.IsSelfModelValueTrue( f28_arg0, f28_arg2, "hasCustomization" ) then
			return function ( f29_arg0, f29_arg1, f29_arg2, f29_arg3 )
				PlaySoundAlias( "uin_toggle_generic" ) --[[ @ 0]]
				OpenOverlay( self, "PersonalizeCharacter", f29_arg2, {
					model = f29_arg0:getModel(),
					properties = {
						_sessionMode = f29_arg1._sessionMode,
						_storageLoadoutBuffer = f29_arg1._storageLoadoutBuffer
					}
				} ) --[[ @ 0]]
			end
			
		else
			
		end
	end ) --[[ @ 0]]
	self:addElement( Characters ) --[[ @ 0]]
	self.Characters = Characters --[[ @ 0]]
	
	IconsLine = LUI.UIImage.new( 0.5, 0.5, 389, 853, 0, 0, 164, 165 ) --[[ @ 0]]
	IconsLine:setRGB( 0.38, 0.38, 0.4 ) --[[ @ 0]]
	IconsLine:setAlpha( 0.8 ) --[[ @ 0]]
	self:addElement( IconsLine ) --[[ @ 0]]
	self.IconsLine = IconsLine --[[ @ 0]]
	
	IconsText = LUI.UIText.new( 0.5, 0.5, 389, 859, 0, 0, 143, 164 ) --[[ @ 0]]
	IconsText:setRGB( 0.38, 0.38, 0.4 ) --[[ @ 0]]
	IconsText:setText( LocalizeToUpperString( @"hash_7CA7BC570F2FBA16" ) ) --[[ @ 0]]
	IconsText:setTTF( "default" ) --[[ @ 0]]
	IconsText:setLetterSpacing( 3 ) --[[ @ 0]]
	IconsText:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	IconsText:setAlignment( Enum[@"LUIAlignment"][@"hash_670510683C22104B"] ) --[[ @ 0]]
	self:addElement( IconsText ) --[[ @ 0]]
	self.IconsText = IconsText --[[ @ 0]]
	
	DefaultLine = LUI.UIImage.new( 0.5, 0.5, 78, 379, 0, 0, 164, 165 ) --[[ @ 0]]
	DefaultLine:setRGB( 0.38, 0.38, 0.4 ) --[[ @ 0]]
	DefaultLine:setAlpha( 0.8 ) --[[ @ 0]]
	self:addElement( DefaultLine ) --[[ @ 0]]
	self.DefaultLine = DefaultLine --[[ @ 0]]
	
	local DefaultText = LUI.UIText.new( 0.5, 0.5, 78, 379, 0, 0, 143, 164 ) --[[ @ 0]]
	DefaultText:setRGB( 0.38, 0.38, 0.4 ) --[[ @ 0]]
	DefaultText:setText( LocalizeToUpperString( @"hash_619D60864B204458" ) ) --[[ @ 0]]
	DefaultText:setTTF( "default" ) --[[ @ 0]]
	DefaultText:setLetterSpacing( 3 ) --[[ @ 0]]
	DefaultText:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	DefaultText:setAlignment( Enum[@"LUIAlignment"][@"hash_670510683C22104B"] ) --[[ @ 0]]
	self:addElement( DefaultText ) --[[ @ 0]]
	self.DefaultText = DefaultText --[[ @ 0]]
	
	local TabbedScoreboardFuiBox2 = CoD.TabbedScoreboardFuiBox.new( f1_arg0, f1_arg1, 0.5, 0.5, 765, 877, 0, 0, 150.5, 166.5 ) --[[ @ 0]]
	TabbedScoreboardFuiBox2:setAlpha( 0.6 ) --[[ @ 0]]
	TabbedScoreboardFuiBox2:setScale( 0.6, 0.6 ) --[[ @ 0]]
	self:addElement( TabbedScoreboardFuiBox2 ) --[[ @ 0]]
	self.TabbedScoreboardFuiBox2 = TabbedScoreboardFuiBox2 --[[ @ 0]]
	
	local DotPipR01 = LUI.UIImage.new( 0.5, 0.5, 387, 391, 0, 0, 162.5, 166.5 ) --[[ @ 0]]
	DotPipR01:setRGB( 0.38, 0.38, 0.4 ) --[[ @ 0]]
	DotPipR01:setAlpha( 0.2 ) --[[ @ 0]]
	DotPipR01:setImage( RegisterImage( @"hash_73854665C02218EF" ) ) --[[ @ 0]]
	DotPipR01:setMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	self:addElement( DotPipR01 ) --[[ @ 0]]
	self.DotPipR01 = DotPipR01 --[[ @ 0]]
	
	local DotPipR02 = LUI.UIImage.new( 0.5, 0.5, 851, 855, 0, 0, 162.5, 166.5 ) --[[ @ 0]]
	DotPipR02:setRGB( 0.38, 0.38, 0.4 ) --[[ @ 0]]
	DotPipR02:setAlpha( 0.2 ) --[[ @ 0]]
	DotPipR02:setImage( RegisterImage( @"hash_73854665C02218EF" ) ) --[[ @ 0]]
	DotPipR02:setMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	self:addElement( DotPipR02 ) --[[ @ 0]]
	self.DotPipR02 = DotPipR02 --[[ @ 0]]
	
	local DotPipL02 = LUI.UIImage.new( 0.5, 0.5, 377, 381, 0, 0, 162.5, 166.5 ) --[[ @ 0]]
	DotPipL02:setRGB( 0.38, 0.38, 0.4 ) --[[ @ 0]]
	DotPipL02:setAlpha( 0.2 ) --[[ @ 0]]
	DotPipL02:setImage( RegisterImage( @"hash_73854665C02218EF" ) ) --[[ @ 0]]
	DotPipL02:setMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	self:addElement( DotPipL02 ) --[[ @ 0]]
	self.DotPipL02 = DotPipL02 --[[ @ 0]]
	
	local DotPipL01 = LUI.UIImage.new( 0.5, 0.5, 76, 80, 0, 0, 162.5, 166.5 ) --[[ @ 0]]
	DotPipL01:setRGB( 0.38, 0.38, 0.4 ) --[[ @ 0]]
	DotPipL01:setAlpha( 0.2 ) --[[ @ 0]]
	DotPipL01:setImage( RegisterImage( @"hash_73854665C02218EF" ) ) --[[ @ 0]]
	DotPipL01:setMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	self:addElement( DotPipL01 ) --[[ @ 0]]
	self.DotPipL01 = DotPipL01 --[[ @ 0]]
	
	self:linkToElementModel( self, "characterDatasource", true, function ( model )
		local f30_local0 = self --[[ @ 0]]
		CoD.ModelUtility.SetControllerModelValueToEnum( f1_arg1, "WZCharacterInfo.showInfoState", CoD.WZUtility.CharacterInfoShowState.HIDE ) --[[ @ 0]]
	end ) --[[ @ 0]]
	CustomCharacter.id = "CustomCharacter" --[[ @ 0]]
	Characters.id = "Characters" --[[ @ 0]]
	self.__defaultFocus = Characters --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PreLoadFunc then
		PreLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	local f1_local12 = self --[[ @ 0]]
	if CoD.WZUtility.IsCurrentCharacterDefault( f1_arg1 ) then
		ChangeDefaultFocus( self, self.CustomCharacter ) --[[ @ 0]]
	end
	return self
end
 --[[ @ 0]]
CoD.CharacterSelection_CustomCharacterFrameWidget.__onClose = function ( f31_arg0 )
	f31_arg0.CustomCharacter:close() --[[ @ 0]]
	f31_arg0.Characters:close() --[[ @ 0]]
	f31_arg0.TabbedScoreboardFuiBox2:close() --[[ @ 0]]
end
 --[[ @ 0]]
