-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:35
CoD.ZMTabbedScoreboardStatBox = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.ZMTabbedScoreboardStatBox.__defaultWidth = 88 --[[ @ 0]]
CoD.ZMTabbedScoreboardStatBox.__defaultHeight = 65 --[[ @ 0]]
CoD.ZMTabbedScoreboardStatBox.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.ZMTabbedScoreboardStatBox ) --[[ @ 0]]
	self.id = "ZMTabbedScoreboardStatBox" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local BarBot = LUI.UIImage.new( 0, 0, 0, 88, 0, 0, 55, 65 ) --[[ @ 0]]
	BarBot:setAlpha( 0 ) --[[ @ 0]]
	BarBot:setImage( RegisterImage( @"uie_ui_menu_mp_scoreboard_list_score_bot" ) ) --[[ @ 0]]
	self:addElement( BarBot ) --[[ @ 0]]
	self.BarBot = BarBot --[[ @ 0]]
	
	local Tint = LUI.UIImage.new( 0.5, 0.5, -43, 41, 0, 0, 0, 58 ) --[[ @ 0]]
	Tint:setAlpha( 0 ) --[[ @ 0]]
	Tint:setImage( RegisterImage( @"uie_ui_menu_mp_scoreboard_list_score_bg" ) ) --[[ @ 0]]
	self:addElement( Tint ) --[[ @ 0]]
	self.Tint = Tint --[[ @ 0]]
	
	local Value = LUI.UIText.new( 0.5, 0.5, -43, 41, 0.5, 0.5, -16.5, 13.5 ) --[[ @ 0]]
	Value:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_393E719493E9E18F" ) ) --[[ @ 0]]
	Value:setTTF( "skorzhen" ) --[[ @ 0]]
	Value:setLetterSpacing( -1 ) --[[ @ 0]]
	Value:setAlignment( Enum[@"LUIAlignment"][@"hash_1FEEB12BCB0D7041"] ) --[[ @ 0]]
	Value:setAlignment( Enum[@"LUIAlignment"][@"hash_6ED4298C93DC5ED"] ) --[[ @ 0]]
	self:addElement( Value ) --[[ @ 0]]
	self.Value = Value --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Self",
			condition = function ( menu, element, event )
				return IsScoreboardPlayerSelf( element, f1_arg1 )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "clientNum", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "clientNum"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local f1_local4 = self --[[ @ 0]]
	local f1_local5 = self.subscribeToModel --[[ @ 0]]
	local f1_local6 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local5( f1_local4, f1_local6["deadSpectator.playerIndex"], function ( f4_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f4_arg0:get(),
			modelName = "deadSpectator.playerIndex"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local4 = self --[[ @ 0]]
	f1_local5 = self.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local5( f1_local4, f1_local6["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"]], function ( f5_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f5_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.ZMTabbedScoreboardStatBox.__resetProperties = function ( f6_arg0 )
	f6_arg0.Tint:completeAnimation() --[[ @ 0]]
	f6_arg0.Value:completeAnimation() --[[ @ 0]]
	f6_arg0.Tint:setAlpha( 0 ) --[[ @ 0]]
	f6_arg0.Value:setRGB( 1, 1, 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ZMTabbedScoreboardStatBox.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f7_arg0, f7_arg1 )
			f7_arg0:__resetProperties() --[[ @ 0]]
			f7_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	Self = {
		DefaultClip = function ( f8_arg0, f8_arg1 )
			f8_arg0:__resetProperties() --[[ @ 0]]
			f8_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f8_arg0.Tint:completeAnimation() --[[ @ 0]]
			f8_arg0.Tint:setAlpha( 0 ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.Tint ) --[[ @ 0]]
			f8_arg0.Value:completeAnimation() --[[ @ 0]]
			f8_arg0.Value:setRGB( 1, 0.76, 0 ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.Value ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
