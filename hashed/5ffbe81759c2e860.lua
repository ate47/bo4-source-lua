-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
require( "x64:7dfb7742075cbb36" ) --[[ @ 0]]
require( "x64:152e481f8ee460a4" ) --[[ @ 0]]
require( "x64:102d52a11dde9653" ) --[[ @ 0]]
require( "x64:7f91cf6839d25705" ) --[[ @ 0]]
require( "ui/uieditor/widgets/startmenu/options/startmenuoptionsbackground" ) --[[ @ 0]]

CoD.BM_ContractsFrame = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.BM_ContractsFrame.__defaultWidth = 1920 --[[ @ 0]]
CoD.BM_ContractsFrame.__defaultHeight = 1080 --[[ @ 0]]
CoD.BM_ContractsFrame.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	CoD.BlackMarketUtility.UpdateActiveContractSlotsModels( f1_arg1, false ) --[[ @ 0]]
	CoD.BaseUtility.CreateControllerModel( f1_arg1, "lootContracts.pinnedContractStatus_1" ) --[[ @ 0]]
	CoD.BaseUtility.CreateControllerModel( f1_arg1, "lootContracts.pinnedContractStatus_2" ) --[[ @ 0]]
	self:setClass( CoD.BM_ContractsFrame ) --[[ @ 0]]
	self.id = "BM_ContractsFrame" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local StartMenuOptionsBackground = CoD.StartMenuOptionsBackground.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	self:addElement( StartMenuOptionsBackground ) --[[ @ 0]]
	self.StartMenuOptionsBackground = StartMenuOptionsBackground --[[ @ 0]]
	
	local f1_local2 = nil --[[ @ 0]]
	self.TrayRight = LUI.UIElement.createFake() --[[ @ 0]]
	local f1_local3 = nil --[[ @ 0]]
	self.TrayLeft = LUI.UIElement.createFake() --[[ @ 0]]
	
	local NoiseBackingRight = LUI.UIImage.new( 0, 1, 0, 0, -0, 1, -30, -30 ) --[[ @ 0]]
	NoiseBackingRight:setAlpha( 0.1 ) --[[ @ 0]]
	NoiseBackingRight:setImage( RegisterImage( @"uie_ui_menu_specialist_hub_repeat_bg" ) ) --[[ @ 0]]
	NoiseBackingRight:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_16CBE95C250C6D15" ) ) --[[ @ 0]]
	NoiseBackingRight:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	NoiseBackingRight:setupNineSliceShader( 196, 88 ) --[[ @ 0]]
	self:addElement( NoiseBackingRight ) --[[ @ 0]]
	self.NoiseBackingRight = NoiseBackingRight --[[ @ 0]]
	
	local Contract2 = CoD.BM_ContractDetails.new( f1_arg0, f1_arg1, 0.5, 0.5, 363, 823, 0.5, 0.5, -340.5, 295.5 ) --[[ @ 0]]
	Contract2:mergeStateConditions( {
		{
			stateName = "ContractSlot",
			condition = function ( menu, element, event )
				return AlwaysTrue()
			end
		}
	} ) --[[ @ 0]]
	Contract2:subscribeToGlobalModel( f1_arg1, "Contracts", "contractSlot2", function ( model )
		Contract2:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	Contract2:registerEventHandler( "gain_focus", function ( element, event )
		local f4_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f4_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f4_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f4_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( Contract2, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], nil, function ( element, menu, controller, model )
		if IsElementInState( self.Contract2, "ContractSlot" ) then
			OpenOverlay( self, "BlackMarketContractSelect", controller, {
				_contractSlot = 2,
				_model = element:getModel()
			} ) --[[ @ 0]]
			PlaySoundAlias( "uin_press_generic" ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsElementInState( self.Contract2, "ContractSlot" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, nil ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( Contract2 ) --[[ @ 0]]
	self.Contract2 = Contract2 --[[ @ 0]]
	
	local Contract1 = CoD.BM_ContractDetails.new( f1_arg0, f1_arg1, 0.5, 0.5, -123, 337, 0.5, 0.5, -340.5, 295.5 ) --[[ @ 0]]
	Contract1:mergeStateConditions( {
		{
			stateName = "ContractSlot",
			condition = function ( menu, element, event )
				return AlwaysTrue()
			end
		}
	} ) --[[ @ 0]]
	Contract1:subscribeToGlobalModel( f1_arg1, "Contracts", "contractSlot1", function ( model )
		Contract1:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	Contract1:registerEventHandler( "gain_focus", function ( element, event )
		local f9_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f9_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f9_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f9_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( Contract1, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], nil, function ( element, menu, controller, model )
		if IsElementInState( self.Contract1, "ContractSlot" ) then
			OpenOverlay( self, "BlackMarketContractSelect", controller, {
				_contractSlot = 1,
				_model = element:getModel()
			} ) --[[ @ 0]]
			PlaySoundAlias( "uin_press_generic" ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsElementInState( self.Contract1, "ContractSlot" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, nil ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( Contract1 ) --[[ @ 0]]
	self.Contract1 = Contract1 --[[ @ 0]]
	
	local DailyContract = CoD.BM_DailyContract.new( f1_arg0, f1_arg1, 0.5, 0.5, -873, -323, 0.5, 0.5, -531, 549 ) --[[ @ 0]]
	DailyContract:mergeStateConditions( {
		{
			stateName = "Empty",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualTo( element, f1_arg1, "displayName", @"hash_0" )
			end
		}
	} ) --[[ @ 0]]
	DailyContract:linkToElementModel( DailyContract, "displayName", true, function ( model )
		f1_arg0:updateElementState( DailyContract, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "displayName"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	DailyContract:linkToElementModel( DailyContract, "completed", true, function ( model )
		f1_arg0:updateElementState( DailyContract, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "completed"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	DailyContract:subscribeToGlobalModel( f1_arg1, "Contracts", "dailyActive", function ( model )
		DailyContract:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( DailyContract ) --[[ @ 0]]
	self.DailyContract = DailyContract --[[ @ 0]]
	
	local DailyContracts = LUI.UIText.new( 0.5, 0.5, -874.5, -331.5, 0.5, 0.5, -413.5, -383.5 ) --[[ @ 0]]
	DailyContracts:setRGB( ColorSet.T8__BIEGE.r, ColorSet.T8__BIEGE.g, ColorSet.T8__BIEGE.b ) --[[ @ 0]]
	DailyContracts:setText( LocalizeToUpperString( @"hash_4B27DDDD116F4EFF" ) ) --[[ @ 0]]
	DailyContracts:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	DailyContracts:setLetterSpacing( 2 ) --[[ @ 0]]
	DailyContracts:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	self:addElement( DailyContracts ) --[[ @ 0]]
	self.DailyContracts = DailyContracts --[[ @ 0]]
	
	local DailyContractTimer = LUI.UIText.new( 0.5, 0.5, -873.5, -330.5, 0.5, 0.5, -383.5, -365.5 ) --[[ @ 0]]
	DailyContractTimer:setRGB( ColorSet.StoreAvailabilityTimer.r, ColorSet.StoreAvailabilityTimer.g, ColorSet.StoreAvailabilityTimer.b ) --[[ @ 0]]
	DailyContractTimer:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	DailyContractTimer:setLetterSpacing( 2 ) --[[ @ 0]]
	DailyContractTimer:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	DailyContractTimer:subscribeToGlobalModel( f1_arg1, "Contracts", "dailyExpirationTime", function ( model )
		local f16_local0 = model:get() --[[ @ 0]]
		if f16_local0 ~= nil then
			DailyContractTimer:setText( LocalizeIntoStringIfNotEmpty( @"hash_669797CFAD4CAB0C", f16_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( DailyContractTimer ) --[[ @ 0]]
	self.DailyContractTimer = DailyContractTimer --[[ @ 0]]
	
	local DirectorLobbyTierSkipNotification = CoD.DirectorLobbyTierSkipNotification.new( f1_arg0, f1_arg1, 0.5, 0.5, -832.5, -322.5, 0.5, 0.5, 319, 413 ) --[[ @ 0]]
	self:addElement( DirectorLobbyTierSkipNotification ) --[[ @ 0]]
	self.DirectorLobbyTierSkipNotification = DirectorLobbyTierSkipNotification --[[ @ 0]]
	
	local NewContractsTimer = LUI.UIText.new( 0.5, 0.5, -115, 345, 0.5, 0.5, -383.5, -365.5 ) --[[ @ 0]]
	NewContractsTimer:setRGB( ColorSet.StoreAvailabilityTimer.r, ColorSet.StoreAvailabilityTimer.g, ColorSet.StoreAvailabilityTimer.b ) --[[ @ 0]]
	NewContractsTimer:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	NewContractsTimer:setLetterSpacing( 2 ) --[[ @ 0]]
	NewContractsTimer:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	NewContractsTimer:subscribeToGlobalModel( f1_arg1, "Contracts", "availableExpirationTime", function ( model )
		local f17_local0 = model:get() --[[ @ 0]]
		if f17_local0 ~= nil then
			NewContractsTimer:setText( LocalizeIntoStringIfNotEmpty( @"hash_3DFF0B6C9E6A2356", f17_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( NewContractsTimer ) --[[ @ 0]]
	self.NewContractsTimer = NewContractsTimer --[[ @ 0]]
	
	local Bracket = LUI.UIImage.new( 0.5, 0.5, -124, 824, 0.5, 0.5, -394.5, -385.5 ) --[[ @ 0]]
	Bracket:setAlpha( 0.5 ) --[[ @ 0]]
	Bracket:setZRot( 180 ) --[[ @ 0]]
	Bracket:setImage( RegisterImage( @"hash_4C325BED3F226657" ) ) --[[ @ 0]]
	Bracket:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_add" ) ) --[[ @ 0]]
	Bracket:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	Bracket:setupNineSliceShader( 16, 4 ) --[[ @ 0]]
	self:addElement( Bracket ) --[[ @ 0]]
	self.Bracket = Bracket --[[ @ 0]]
	
	self:subscribeToGlobalModel( f1_arg1, "PerController", "lootContracts.forceRefresh", function ( model )
		local f18_local0 = self --[[ @ 0]]
		CoD.BlackMarketUtility.UpdateActiveContractSlotsModels( f1_arg1, false ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:subscribeToGlobalModel( f1_arg1, "PerController", "lootContracts.pinnedContractStatus_1", function ( model )
		local f19_local0 = self --[[ @ 0]]
		CoD.BlackMarketUtility.UpdateActiveContractSlotsModels( f1_arg1, false ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:subscribeToGlobalModel( f1_arg1, "PerController", "lootContracts.pinnedContractStatus_2", function ( model )
		local f20_local0 = self --[[ @ 0]]
		CoD.BlackMarketUtility.UpdateActiveContractSlotsModels( f1_arg1, false ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:subscribeToGlobalModel( f1_arg1, "PerController", "Contracts.dailyContractsExpired", function ( model )
		local f21_local0 = self --[[ @ 0]]
		CoD.BlackMarketUtility.UpdateActiveContractSlotsModels( f1_arg1, false ) --[[ @ 0]]
	end ) --[[ @ 0]]
	Contract2.id = "Contract2" --[[ @ 0]]
	Contract1.id = "Contract1" --[[ @ 0]]
	self.__defaultFocus = Contract1 --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.BM_ContractsFrame.__resetProperties = function ( f22_arg0 )
	f22_arg0.DirectorLobbyTierSkipNotification:completeAnimation() --[[ @ 0]]
	f22_arg0.DailyContracts:completeAnimation() --[[ @ 0]]
	f22_arg0.DailyContract:completeAnimation() --[[ @ 0]]
	f22_arg0.Contract2:completeAnimation() --[[ @ 0]]
	f22_arg0.Contract1:completeAnimation() --[[ @ 0]]
	f22_arg0.DirectorLobbyTierSkipNotification:setAlpha( 1 ) --[[ @ 0]]
	f22_arg0.DailyContracts:setAlpha( 1 ) --[[ @ 0]]
	f22_arg0.DailyContract:setAlpha( 1 ) --[[ @ 0]]
	f22_arg0.Contract2:setAlpha( 1 ) --[[ @ 0]]
	f22_arg0.Contract1:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.BM_ContractsFrame.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f23_arg0, f23_arg1 )
			f23_arg0:__resetProperties() --[[ @ 0]]
			f23_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end,
		Intro = function ( f24_arg0, f24_arg1 )
			f24_arg0:__resetProperties() --[[ @ 0]]
			f24_arg0:setupElementClipCounter( 5 ) --[[ @ 0]]
			local f24_local0 = function ( f25_arg0 )
				local f25_local0 = function ( f26_arg0 )
					f26_arg0:beginAnimation( 320, Enum[@"hash_1F50FFF429AB1890"][@"hash_66F6186B702830BC"] ) --[[ @ 0]]
					f26_arg0:setAlpha( 1 ) --[[ @ 0]]
					f26_arg0:registerEventHandler( "transition_complete_keyframe", f24_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f24_arg0.Contract2:beginAnimation( 300 ) --[[ @ 0]]
				f24_arg0.Contract2:registerEventHandler( "interrupted_keyframe", f24_arg0.clipInterrupted ) --[[ @ 0]]
				f24_arg0.Contract2:registerEventHandler( "transition_complete_keyframe", f25_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f24_arg0.Contract2:completeAnimation() --[[ @ 0]]
			f24_arg0.Contract2:setAlpha( 0 ) --[[ @ 0]]
			f24_local0( f24_arg0.Contract2 ) --[[ @ 0]]
			local f24_local1 = function ( f27_arg0 )
				local f27_local0 = function ( f28_arg0 )
					f28_arg0:beginAnimation( 320, Enum[@"hash_1F50FFF429AB1890"][@"hash_66F6186B702830BC"] ) --[[ @ 0]]
					f28_arg0:setAlpha( 1 ) --[[ @ 0]]
					f28_arg0:registerEventHandler( "transition_complete_keyframe", f24_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f24_arg0.Contract1:beginAnimation( 190 ) --[[ @ 0]]
				f24_arg0.Contract1:registerEventHandler( "interrupted_keyframe", f24_arg0.clipInterrupted ) --[[ @ 0]]
				f24_arg0.Contract1:registerEventHandler( "transition_complete_keyframe", f27_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f24_arg0.Contract1:completeAnimation() --[[ @ 0]]
			f24_arg0.Contract1:setAlpha( 0 ) --[[ @ 0]]
			f24_local1( f24_arg0.Contract1 ) --[[ @ 0]]
			local f24_local2 = function ( f29_arg0 )
				local f29_local0 = function ( f30_arg0 )
					f30_arg0:beginAnimation( 280, Enum[@"hash_1F50FFF429AB1890"][@"hash_66F6186B702830BC"] ) --[[ @ 0]]
					f30_arg0:setAlpha( 1 ) --[[ @ 0]]
					f30_arg0:registerEventHandler( "transition_complete_keyframe", f24_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f24_arg0.DailyContract:beginAnimation( 130 ) --[[ @ 0]]
				f24_arg0.DailyContract:registerEventHandler( "interrupted_keyframe", f24_arg0.clipInterrupted ) --[[ @ 0]]
				f24_arg0.DailyContract:registerEventHandler( "transition_complete_keyframe", f29_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f24_arg0.DailyContract:completeAnimation() --[[ @ 0]]
			f24_arg0.DailyContract:setAlpha( 0 ) --[[ @ 0]]
			f24_local2( f24_arg0.DailyContract ) --[[ @ 0]]
			local f24_local3 = function ( f31_arg0 )
				local f31_local0 = function ( f32_arg0 )
					f32_arg0:beginAnimation( 280, Enum[@"hash_1F50FFF429AB1890"][@"hash_66F6186B702830BC"] ) --[[ @ 0]]
					f32_arg0:setAlpha( 1 ) --[[ @ 0]]
					f32_arg0:registerEventHandler( "transition_complete_keyframe", f24_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f24_arg0.DailyContracts:beginAnimation( 130 ) --[[ @ 0]]
				f24_arg0.DailyContracts:registerEventHandler( "interrupted_keyframe", f24_arg0.clipInterrupted ) --[[ @ 0]]
				f24_arg0.DailyContracts:registerEventHandler( "transition_complete_keyframe", f31_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f24_arg0.DailyContracts:completeAnimation() --[[ @ 0]]
			f24_arg0.DailyContracts:setAlpha( 0 ) --[[ @ 0]]
			f24_local3( f24_arg0.DailyContracts ) --[[ @ 0]]
			local f24_local4 = function ( f33_arg0 )
				local f33_local0 = function ( f34_arg0 )
					f34_arg0:beginAnimation( 310, Enum[@"hash_1F50FFF429AB1890"][@"hash_66F6186B702830BC"] ) --[[ @ 0]]
					f34_arg0:setAlpha( 1 ) --[[ @ 0]]
					f34_arg0:registerEventHandler( "transition_complete_keyframe", f24_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f24_arg0.DirectorLobbyTierSkipNotification:beginAnimation( 420 ) --[[ @ 0]]
				f24_arg0.DirectorLobbyTierSkipNotification:registerEventHandler( "interrupted_keyframe", f24_arg0.clipInterrupted ) --[[ @ 0]]
				f24_arg0.DirectorLobbyTierSkipNotification:registerEventHandler( "transition_complete_keyframe", f33_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f24_arg0.DirectorLobbyTierSkipNotification:completeAnimation() --[[ @ 0]]
			f24_arg0.DirectorLobbyTierSkipNotification:setAlpha( 0 ) --[[ @ 0]]
			f24_local4( f24_arg0.DirectorLobbyTierSkipNotification ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.BM_ContractsFrame.__onClose = function ( f35_arg0 )
	f35_arg0.StartMenuOptionsBackground:close() --[[ @ 0]]
	f35_arg0.Contract2:close() --[[ @ 0]]
	f35_arg0.Contract1:close() --[[ @ 0]]
	f35_arg0.DailyContract:close() --[[ @ 0]]
	f35_arg0.DailyContractTimer:close() --[[ @ 0]]
	f35_arg0.DirectorLobbyTierSkipNotification:close() --[[ @ 0]]
	f35_arg0.NewContractsTimer:close() --[[ @ 0]]
end
 --[[ @ 0]]
