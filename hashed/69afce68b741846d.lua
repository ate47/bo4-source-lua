-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:35
CoD.WarzoneCollapseProgress = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.WarzoneCollapseProgress.__defaultWidth = 260 --[[ @ 0]]
CoD.WarzoneCollapseProgress.__defaultHeight = 8 --[[ @ 0]]
CoD.WarzoneCollapseProgress.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.WarzoneCollapseProgress ) --[[ @ 0]]
	self.id = "WarzoneCollapseProgress" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local meterBacking = LUI.UIImage.new( -0.01, -0.01, 0, 266, -0.5, -0.5, 0, 16 ) --[[ @ 0]]
	meterBacking:setRGB( 0.35, 0.35, 0.35 ) --[[ @ 0]]
	meterBacking:setAlpha( 0.45 ) --[[ @ 0]]
	meterBacking:setImage( RegisterImage( @"uie_wz_hud_map_danger_bar_empty" ) ) --[[ @ 0]]
	meterBacking:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_feather_edges" ) ) --[[ @ 0]]
	meterBacking:setShaderVector( 0, 0.01, 0.02, 0.01, 0.02 ) --[[ @ 0]]
	self:addElement( meterBacking ) --[[ @ 0]]
	self.meterBacking = meterBacking --[[ @ 0]]
	
	local meterFill = LUI.UIImage.new( 0, 1, 0, -16, -0.25, 1.25, 0, 0 ) --[[ @ 0]]
	meterFill:setImage( RegisterImage( @"uie_wz_hud_map_danger_bar" ) ) --[[ @ 0]]
	meterFill:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_wipe_delta_normal" ) ) --[[ @ 0]]
	meterFill:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	meterFill:setShaderVector( 2, 0, 1, 0, 0 ) --[[ @ 0]]
	meterFill:setShaderVector( 3, 0.2, 0.2, 0, 0 ) --[[ @ 0]]
	meterFill:setShaderVector( 4, 0, 0, 0, 0 ) --[[ @ 0]]
	meterFill:subscribeToGlobalModel( f1_arg1, "WarzoneGlobal", "collapseProgress", function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			meterFill:setShaderVector( 0, SwapVectorComponents( 1, 2, CoD.GetVectorComponentFromString( f2_local0, 1 ), CoD.GetVectorComponentFromString( f2_local0, 2 ), CoD.GetVectorComponentFromString( f2_local0, 3 ), CoD.GetVectorComponentFromString( f2_local0, 4 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( meterFill ) --[[ @ 0]]
	self.meterFill = meterFill --[[ @ 0]]
	
	local safeZone2 = LUI.UIImage.new( 1, 1, -17.5, 1.5, -1.75, -1.75, 10, 26 ) --[[ @ 0]]
	safeZone2:setImage( RegisterImage( @"hash_7DA0E88765F528A9" ) ) --[[ @ 0]]
	safeZone2:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_feather_edges" ) ) --[[ @ 0]]
	safeZone2:setShaderVector( 0, 0.02, 0.02, 0.02, 0.02 ) --[[ @ 0]]
	self:addElement( safeZone2 ) --[[ @ 0]]
	self.safeZone2 = safeZone2 --[[ @ 0]]
	
	local safeZone = LUI.UIImage.new( 1, 1, -17.5, 1.5, -1.75, -1.75, 9, 27 ) --[[ @ 0]]
	safeZone:setImage( RegisterImage( @"hash_7DA0E88765F528A9" ) ) --[[ @ 0]]
	safeZone:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_feather_edges" ) ) --[[ @ 0]]
	safeZone:setShaderVector( 0, 0.02, 0.02, 0.02, 0.02 ) --[[ @ 0]]
	self:addElement( safeZone ) --[[ @ 0]]
	self.safeZone = safeZone --[[ @ 0]]
	
	local playerPosition = LUI.UIImage.new( 0.7, 0.7, -14, 14, 1, 1, -18, 10 ) --[[ @ 0]]
	playerPosition:setImage( RegisterImage( @"ui_icon_global_runningman" ) ) --[[ @ 0]]
	playerPosition:subscribeToGlobalModel( f1_arg1, "HUDItems", "distanceFromDeathCircle", function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			playerPosition:setLeftPct( CoD.WZUtility.AdjustDistanceFromDeathCircle( 0.94, 0.96, f3_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( playerPosition ) --[[ @ 0]]
	self.playerPosition = playerPosition --[[ @ 0]]
	
	local vehiclePosition = LUI.UIImage.new( 0.4, 0.4, -26, 26, 1, 1, -30, 22 ) --[[ @ 0]]
	vehiclePosition:setAlpha( 0 ) --[[ @ 0]]
	vehiclePosition:setZRot( 270 ) --[[ @ 0]]
	vehiclePosition:setImage( RegisterImage( @"hash_2B024F5E0D917C61" ) ) --[[ @ 0]]
	vehiclePosition:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_flipbook" ) ) --[[ @ 0]]
	vehiclePosition:setShaderVector( 0, 4, 4, 0, 0 ) --[[ @ 0]]
	vehiclePosition:setShaderVector( 1, 30, 0, 0, 0 ) --[[ @ 0]]
	vehiclePosition:subscribeToGlobalModel( f1_arg1, "HUDItems", "insertionVehicleProgress", function ( model )
		local f4_local0 = model:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			vehiclePosition:setLeftPct( f4_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( vehiclePosition ) --[[ @ 0]]
	self.vehiclePosition = vehiclePosition --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "InfiltrationVehicle",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsModelValueEqualTo( f1_arg1, "hudItems.infiltrationVehicle", 1 )
			end
		}
	} ) --[[ @ 0]]
	local f1_local7 = self --[[ @ 0]]
	local f1_local8 = self.subscribeToModel --[[ @ 0]]
	local f1_local9 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local8( f1_local7, f1_local9["hudItems.infiltrationVehicle"], function ( f6_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f6_arg0:get(),
			modelName = "hudItems.infiltrationVehicle"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.WarzoneCollapseProgress.__resetProperties = function ( f7_arg0 )
	f7_arg0.meterFill:completeAnimation() --[[ @ 0]]
	f7_arg0.meterBacking:completeAnimation() --[[ @ 0]]
	f7_arg0.safeZone2:completeAnimation() --[[ @ 0]]
	f7_arg0.safeZone:completeAnimation() --[[ @ 0]]
	f7_arg0.playerPosition:completeAnimation() --[[ @ 0]]
	f7_arg0.meterFill:setAlpha( 1 ) --[[ @ 0]]
	f7_arg0.meterBacking:setAlpha( 0.45 ) --[[ @ 0]]
	f7_arg0.safeZone2:setAlpha( 1 ) --[[ @ 0]]
	f7_arg0.safeZone:setAlpha( 1 ) --[[ @ 0]]
	f7_arg0.playerPosition:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.WarzoneCollapseProgress.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f8_arg0, f8_arg1 )
			f8_arg0:__resetProperties() --[[ @ 0]]
			f8_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	InfiltrationVehicle = {
		DefaultClip = function ( f9_arg0, f9_arg1 )
			f9_arg0:__resetProperties() --[[ @ 0]]
			f9_arg0:setupElementClipCounter( 5 ) --[[ @ 0]]
			f9_arg0.meterBacking:completeAnimation() --[[ @ 0]]
			f9_arg0.meterBacking:setAlpha( 0 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.meterBacking ) --[[ @ 0]]
			f9_arg0.meterFill:completeAnimation() --[[ @ 0]]
			f9_arg0.meterFill:setAlpha( 0 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.meterFill ) --[[ @ 0]]
			f9_arg0.safeZone2:completeAnimation() --[[ @ 0]]
			f9_arg0.safeZone2:setAlpha( 0 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.safeZone2 ) --[[ @ 0]]
			f9_arg0.safeZone:completeAnimation() --[[ @ 0]]
			f9_arg0.safeZone:setAlpha( 0 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.safeZone ) --[[ @ 0]]
			f9_arg0.playerPosition:completeAnimation() --[[ @ 0]]
			f9_arg0.playerPosition:setAlpha( 0 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.playerPosition ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.WarzoneCollapseProgress.__onClose = function ( f10_arg0 )
	f10_arg0.meterFill:close() --[[ @ 0]]
	f10_arg0.playerPosition:close() --[[ @ 0]]
	f10_arg0.vehiclePosition:close() --[[ @ 0]]
end
 --[[ @ 0]]
