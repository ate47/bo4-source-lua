-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
require( "ui/uieditor/menus/codcaster/codcasterquicksettingssidebar" ) --[[ @ 0]]
require( "ui/uieditor/menus/codcaster/codcastersettingssidebar" ) --[[ @ 0]]
require( "x64:1ff7acfecca4dd73" ) --[[ @ 0]]
require( "x64:2abea5b3a2b00e4a" ) --[[ @ 0]]
require( "ui/uieditor/widgets/codcaster/codcasterheadernonteambased" ) --[[ @ 0]]
require( "x64:e8437d7cac4978b" ) --[[ @ 0]]
require( "x64:4c3a0b894dd6acaf" ) --[[ @ 0]]
require( "x64:7873f24eab7200ba" ) --[[ @ 0]]
require( "x64:15a27046af26ff6f" ) --[[ @ 0]]
require( "x64:b90ae294ac02c62" ) --[[ @ 0]]
require( "x64:acce9e739ed6eb0" ) --[[ @ 0]]
require( "x64:3f3397838e47a02d" ) --[[ @ 0]]
require( "x64:7e189378e1349e63" ) --[[ @ 0]]
require( "x64:5f2a72f136d96fc7" ) --[[ @ 0]]
require( "x64:573a5902a7a34efe" ) --[[ @ 0]]
require( "x64:71c1aa88548f1c11" ) --[[ @ 0]]
require( "ui/uieditor/widgets/onofftext" ) --[[ @ 0]]

CoD.CodCaster = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.CodCaster.__defaultWidth = 1920 --[[ @ 0]]
CoD.CodCaster.__defaultHeight = 1080 --[[ @ 0]]
CoD.CodCaster.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	SetProperty( self, "m_focusable", true ) --[[ @ 0]]
	SetProperty( self, "m_disableNavigation", true ) --[[ @ 0]]
	self:setClass( CoD.CodCaster ) --[[ @ 0]]
	self.id = "CodCaster" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local OverheadMap = CoD.CodCasterMap.new( f1_arg0, f1_arg1, 0.5, 0.5, -750, 750, 0.51, 0.51, -377, 467 ) --[[ @ 0]]
	OverheadMap:mergeStateConditions( {
		{
			stateName = "Visible",
			condition = function ( menu, element, event )
				local f2_local0 = CoD.ModelUtility.IsModelValueTrue( f1_arg1, "CodCaster.showFullScreenMap" ) --[[ @ 0]]
				if f2_local0 then
					if not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"] ) then
						f2_local0 = not CoD.CodCasterUtility.CodCasterIsInAerialCam( f1_arg1 ) --[[ @ 0]]
					else
						f2_local0 = false --[[ @ 0]]
					end
				end
				return f2_local0
			end
		}
	} ) --[[ @ 0]]
	local CodCasterHeaderNonTeamBased = OverheadMap --[[ @ 0]]
	local waitingForPlayers = OverheadMap.subscribeToModel --[[ @ 0]]
	local CodCasterPortraitPlayerCard = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	waitingForPlayers( CodCasterHeaderNonTeamBased, CodCasterPortraitPlayerCard["CodCaster.showFullScreenMap"], function ( f3_arg0 )
		f1_arg0:updateElementState( OverheadMap, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f3_arg0:get(),
			modelName = "CodCaster.showFullScreenMap"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	CodCasterHeaderNonTeamBased = OverheadMap --[[ @ 0]]
	waitingForPlayers = OverheadMap.subscribeToModel --[[ @ 0]]
	CodCasterPortraitPlayerCard = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	waitingForPlayers( CodCasterHeaderNonTeamBased, CodCasterPortraitPlayerCard["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"]], function ( f4_arg0 )
		f1_arg0:updateElementState( OverheadMap, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f4_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	CodCasterHeaderNonTeamBased = OverheadMap --[[ @ 0]]
	waitingForPlayers = OverheadMap.subscribeToModel --[[ @ 0]]
	CodCasterPortraitPlayerCard = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	waitingForPlayers( CodCasterHeaderNonTeamBased, CodCasterPortraitPlayerCard["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_57EAF988DDEB83EA"]], function ( f5_arg0 )
		f1_arg0:updateElementState( OverheadMap, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f5_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_57EAF988DDEB83EA"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:addElement( OverheadMap ) --[[ @ 0]]
	self.OverheadMap = OverheadMap --[[ @ 0]]
	
	waitingForPlayers = CoD.onOffText.new( f1_arg0, f1_arg1, 0.5, 0.5, -373, 377, 0, 0, 547, 393 ) --[[ @ 0]]
	waitingForPlayers:mergeStateConditions( {
		{
			stateName = "Invisible",
			condition = function ( menu, element, event )
				return not CoD.ModelUtility.IsGlobalDataSourceModelValueEqualToEnum( f1_arg1, "DeadSpectate", "playerTeam", Enum[@"team_t"][@"hash_5E4DDAC9C5C45556"] )
			end
		}
	} ) --[[ @ 0]]
	CodCasterPortraitPlayerCard = waitingForPlayers --[[ @ 0]]
	CodCasterHeaderNonTeamBased = waitingForPlayers.subscribeToModel --[[ @ 0]]
	local CodCasterPortraitPlayerList = DataSources.DeadSpectate.getModel( f1_arg1 ) --[[ @ 0]]
	CodCasterHeaderNonTeamBased( CodCasterPortraitPlayerCard, CodCasterPortraitPlayerList.playerTeam, function ( f7_arg0 )
		f1_arg0:updateElementState( waitingForPlayers, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f7_arg0:get(),
			modelName = "playerTeam"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	waitingForPlayers.TextBox:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_E26CA69C50088EB" ) ) --[[ @ 0]]
	waitingForPlayers.TextBox:setAlignment( Enum[@"LUIAlignment"][@"hash_1FEEB12BCB0D7041"] ) --[[ @ 0]]
	self:addElement( waitingForPlayers ) --[[ @ 0]]
	self.waitingForPlayers = waitingForPlayers --[[ @ 0]]
	
	CodCasterHeaderNonTeamBased = CoD.CodCasterHeaderNonTeamBased.new( f1_arg0, f1_arg1, 0.5, 0.5, -262, 262, 0, 0, 16, 164 ) --[[ @ 0]]
	CodCasterHeaderNonTeamBased:mergeStateConditions( {
		{
			stateName = "Visible",
			condition = function ( menu, element, event )
				local f8_local0 --[[ @ 0]]
				if not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"] ) and not ScoreboardVisible( f1_arg1 ) then
					f8_local0 = IsCodCasterProfileValueEqualTo( f1_arg1, "shoutcaster_qs_playerlist", 1 ) --[[ @ 0]]
					if f8_local0 then
						f8_local0 = IsCodCasterProfileValueEqualTo( f1_arg1, "shoutcaster_ds_teamscore", 1 ) --[[ @ 0]]
					end
				else
					f8_local0 = false --[[ @ 0]]
				end
				return f8_local0
			end
		}
	} ) --[[ @ 0]]
	CodCasterPortraitPlayerList = CodCasterHeaderNonTeamBased --[[ @ 0]]
	CodCasterPortraitPlayerCard = CodCasterHeaderNonTeamBased.subscribeToModel --[[ @ 0]]
	local CodCasterAnnouncementFeed = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	CodCasterPortraitPlayerCard( CodCasterPortraitPlayerList, CodCasterAnnouncementFeed["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"]], function ( f9_arg0 )
		f1_arg0:updateElementState( CodCasterHeaderNonTeamBased, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f9_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	CodCasterPortraitPlayerList = CodCasterHeaderNonTeamBased --[[ @ 0]]
	CodCasterPortraitPlayerCard = CodCasterHeaderNonTeamBased.subscribeToModel --[[ @ 0]]
	CodCasterAnnouncementFeed = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	CodCasterPortraitPlayerCard( CodCasterPortraitPlayerList, CodCasterAnnouncementFeed.forceScoreboard, function ( f10_arg0 )
		f1_arg0:updateElementState( CodCasterHeaderNonTeamBased, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f10_arg0:get(),
			modelName = "forceScoreboard"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	CodCasterPortraitPlayerList = CodCasterHeaderNonTeamBased --[[ @ 0]]
	CodCasterPortraitPlayerCard = CodCasterHeaderNonTeamBased.subscribeToModel --[[ @ 0]]
	CodCasterAnnouncementFeed = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	CodCasterPortraitPlayerCard( CodCasterPortraitPlayerList, CodCasterAnnouncementFeed["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"]], function ( f11_arg0 )
		f1_arg0:updateElementState( CodCasterHeaderNonTeamBased, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f11_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	CodCasterPortraitPlayerList = CodCasterHeaderNonTeamBased --[[ @ 0]]
	CodCasterPortraitPlayerCard = CodCasterHeaderNonTeamBased.subscribeToModel --[[ @ 0]]
	CodCasterAnnouncementFeed = DataSources.CodCaster.getModel( f1_arg1 ) --[[ @ 0]]
	CodCasterPortraitPlayerCard( CodCasterPortraitPlayerList, CodCasterAnnouncementFeed.profileSettingsUpdated, function ( f12_arg0 )
		f1_arg0:updateElementState( CodCasterHeaderNonTeamBased, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f12_arg0:get(),
			modelName = "profileSettingsUpdated"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	CodCasterHeaderNonTeamBased:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( CodCasterHeaderNonTeamBased ) --[[ @ 0]]
	self.CodCasterHeaderNonTeamBased = CodCasterHeaderNonTeamBased --[[ @ 0]]
	
	CodCasterPortraitPlayerCard = CoD.CodCasterPortraitPlayerCard.new( f1_arg0, f1_arg1, -0, 1, 0, 0, 1, 1, -124, -24 ) --[[ @ 0]]
	CodCasterPortraitPlayerCard:mergeStateConditions( {
		{
			stateName = "Visible",
			condition = function ( menu, element, event )
				local f13_local0 --[[ @ 0]]
				if not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"] ) then
					f13_local0 = IsCodCasterProfileValueEqualTo( f1_arg1, "shoutcaster_qs_playercard", 1 ) --[[ @ 0]]
					if f13_local0 then
						if not ScoreboardVisible( f1_arg1 ) then
							f13_local0 = not CoD.CodCasterUtility.CodCasterIsInAerialCam( f1_arg1 ) --[[ @ 0]]
						else
							f13_local0 = false --[[ @ 0]]
						end
					end
				else
					f13_local0 = false --[[ @ 0]]
				end
				return f13_local0
			end
		}
	} ) --[[ @ 0]]
	CodCasterAnnouncementFeed = CodCasterPortraitPlayerCard --[[ @ 0]]
	CodCasterPortraitPlayerList = CodCasterPortraitPlayerCard.subscribeToModel --[[ @ 0]]
	local CodCasterPortraitTeamScoreBoard = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	CodCasterPortraitPlayerList( CodCasterAnnouncementFeed, CodCasterPortraitTeamScoreBoard["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"]], function ( f14_arg0 )
		f1_arg0:updateElementState( CodCasterPortraitPlayerCard, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f14_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	CodCasterAnnouncementFeed = CodCasterPortraitPlayerCard --[[ @ 0]]
	CodCasterPortraitPlayerList = CodCasterPortraitPlayerCard.subscribeToModel --[[ @ 0]]
	CodCasterPortraitTeamScoreBoard = DataSources.CodCaster.getModel( f1_arg1 ) --[[ @ 0]]
	CodCasterPortraitPlayerList( CodCasterAnnouncementFeed, CodCasterPortraitTeamScoreBoard.profileSettingsUpdated, function ( f15_arg0 )
		f1_arg0:updateElementState( CodCasterPortraitPlayerCard, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f15_arg0:get(),
			modelName = "profileSettingsUpdated"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	CodCasterAnnouncementFeed = CodCasterPortraitPlayerCard --[[ @ 0]]
	CodCasterPortraitPlayerList = CodCasterPortraitPlayerCard.subscribeToModel --[[ @ 0]]
	CodCasterPortraitTeamScoreBoard = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	CodCasterPortraitPlayerList( CodCasterAnnouncementFeed, CodCasterPortraitTeamScoreBoard.forceScoreboard, function ( f16_arg0 )
		f1_arg0:updateElementState( CodCasterPortraitPlayerCard, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f16_arg0:get(),
			modelName = "forceScoreboard"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	CodCasterAnnouncementFeed = CodCasterPortraitPlayerCard --[[ @ 0]]
	CodCasterPortraitPlayerList = CodCasterPortraitPlayerCard.subscribeToModel --[[ @ 0]]
	CodCasterPortraitTeamScoreBoard = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	CodCasterPortraitPlayerList( CodCasterAnnouncementFeed, CodCasterPortraitTeamScoreBoard["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"]], function ( f17_arg0 )
		f1_arg0:updateElementState( CodCasterPortraitPlayerCard, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f17_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	CodCasterAnnouncementFeed = CodCasterPortraitPlayerCard --[[ @ 0]]
	CodCasterPortraitPlayerList = CodCasterPortraitPlayerCard.subscribeToModel --[[ @ 0]]
	CodCasterPortraitTeamScoreBoard = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	CodCasterPortraitPlayerList( CodCasterAnnouncementFeed, CodCasterPortraitTeamScoreBoard["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_57EAF988DDEB83EA"]], function ( f18_arg0 )
		f1_arg0:updateElementState( CodCasterPortraitPlayerCard, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f18_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_57EAF988DDEB83EA"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	CodCasterPortraitPlayerCard:subscribeToGlobalModel( f1_arg1, "DeadSpectate", "playerIndex", function ( model )
		local f19_local0 = model:get() --[[ @ 0]]
		if f19_local0 ~= nil then
			CodCasterPortraitPlayerCard.CodCasterPlayerCardName:setText( GetClientNameAndClanTag( f1_arg1, f19_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	CodCasterPortraitPlayerCard:subscribeToGlobalModel( f1_arg1, "DeadSpectate", "playerIndex", function ( model )
		local f20_local0 = CodCasterPortraitPlayerCard --[[ @ 0]]
		PlayClipOnElement( self, {
			elementName = "CodCasterPortraitPlayerCard",
			clipName = "ShineOverlay"
		}, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( CodCasterPortraitPlayerCard ) --[[ @ 0]]
	self.CodCasterPortraitPlayerCard = CodCasterPortraitPlayerCard --[[ @ 0]]
	
	CodCasterPortraitPlayerList = CoD.CodCasterPortraitPlayerList.new( f1_arg0, f1_arg1, 0.5, 0.5, -960, 960, 0, 0, 28, 173 ) --[[ @ 0]]
	CodCasterPortraitPlayerList:mergeStateConditions( {
		{
			stateName = "Visible",
			condition = function ( menu, element, event )
				local f21_local0 = IsCodCasterProfileValueEqualTo( f1_arg1, "shoutcaster_qs_playerlist", 1 ) --[[ @ 0]]
				if f21_local0 then
					if not ScoreboardVisible( f1_arg1 ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"] ) then
						f21_local0 = CoD.CodCasterUtility.CodCasterShowPortraitList( f1_arg1 ) --[[ @ 0]]
					else
						f21_local0 = false --[[ @ 0]]
					end
				end
				return f21_local0
			end
		}
	} ) --[[ @ 0]]
	CodCasterPortraitTeamScoreBoard = CodCasterPortraitPlayerList --[[ @ 0]]
	CodCasterAnnouncementFeed = CodCasterPortraitPlayerList.subscribeToModel --[[ @ 0]]
	local CodCasterObjectiveStatus = DataSources.CodCaster.getModel( f1_arg1 ) --[[ @ 0]]
	CodCasterAnnouncementFeed( CodCasterPortraitTeamScoreBoard, CodCasterObjectiveStatus.profileSettingsUpdated, function ( f22_arg0 )
		f1_arg0:updateElementState( CodCasterPortraitPlayerList, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f22_arg0:get(),
			modelName = "profileSettingsUpdated"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	CodCasterPortraitTeamScoreBoard = CodCasterPortraitPlayerList --[[ @ 0]]
	CodCasterAnnouncementFeed = CodCasterPortraitPlayerList.subscribeToModel --[[ @ 0]]
	CodCasterObjectiveStatus = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	CodCasterAnnouncementFeed( CodCasterPortraitTeamScoreBoard, CodCasterObjectiveStatus.forceScoreboard, function ( f23_arg0 )
		f1_arg0:updateElementState( CodCasterPortraitPlayerList, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f23_arg0:get(),
			modelName = "forceScoreboard"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	CodCasterPortraitTeamScoreBoard = CodCasterPortraitPlayerList --[[ @ 0]]
	CodCasterAnnouncementFeed = CodCasterPortraitPlayerList.subscribeToModel --[[ @ 0]]
	CodCasterObjectiveStatus = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	CodCasterAnnouncementFeed( CodCasterPortraitTeamScoreBoard, CodCasterObjectiveStatus["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"]], function ( f24_arg0 )
		f1_arg0:updateElementState( CodCasterPortraitPlayerList, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f24_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	CodCasterPortraitTeamScoreBoard = CodCasterPortraitPlayerList --[[ @ 0]]
	CodCasterAnnouncementFeed = CodCasterPortraitPlayerList.subscribeToModel --[[ @ 0]]
	CodCasterObjectiveStatus = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	CodCasterAnnouncementFeed( CodCasterPortraitTeamScoreBoard, CodCasterObjectiveStatus["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"]], function ( f25_arg0 )
		f1_arg0:updateElementState( CodCasterPortraitPlayerList, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f25_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	CodCasterPortraitTeamScoreBoard = CodCasterPortraitPlayerList --[[ @ 0]]
	CodCasterAnnouncementFeed = CodCasterPortraitPlayerList.subscribeToModel --[[ @ 0]]
	CodCasterObjectiveStatus = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	CodCasterAnnouncementFeed( CodCasterPortraitTeamScoreBoard, CodCasterObjectiveStatus["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_23DA38CAFF843C18"]], function ( f26_arg0 )
		f1_arg0:updateElementState( CodCasterPortraitPlayerList, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f26_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_23DA38CAFF843C18"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:addElement( CodCasterPortraitPlayerList ) --[[ @ 0]]
	self.CodCasterPortraitPlayerList = CodCasterPortraitPlayerList --[[ @ 0]]
	
	CodCasterAnnouncementFeed = CoD.CodCasterAnnouncementFeed.new( f1_arg0, f1_arg1, 0.5, 0.5, -197, 197, 0, 0, 154, 178 ) --[[ @ 0]]
	CodCasterAnnouncementFeed:mergeStateConditions( {
		{
			stateName = "HiddenDueToScoreboard",
			condition = function ( menu, element, event )
				return ScoreboardVisible( f1_arg1 )
			end
		},
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"] )
			end
		}
	} ) --[[ @ 0]]
	CodCasterObjectiveStatus = CodCasterAnnouncementFeed --[[ @ 0]]
	CodCasterPortraitTeamScoreBoard = CodCasterAnnouncementFeed.subscribeToModel --[[ @ 0]]
	local CodCasterPlayerList = DataSources.CodCaster.getModel( f1_arg1 ) --[[ @ 0]]
	CodCasterPortraitTeamScoreBoard( CodCasterObjectiveStatus, CodCasterPlayerList.profileSettingsUpdated, function ( f29_arg0 )
		f1_arg0:updateElementState( CodCasterAnnouncementFeed, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f29_arg0:get(),
			modelName = "profileSettingsUpdated"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	CodCasterObjectiveStatus = CodCasterAnnouncementFeed --[[ @ 0]]
	CodCasterPortraitTeamScoreBoard = CodCasterAnnouncementFeed.subscribeToModel --[[ @ 0]]
	CodCasterPlayerList = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	CodCasterPortraitTeamScoreBoard( CodCasterObjectiveStatus, CodCasterPlayerList.forceScoreboard, function ( f30_arg0 )
		f1_arg0:updateElementState( CodCasterAnnouncementFeed, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f30_arg0:get(),
			modelName = "forceScoreboard"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	CodCasterObjectiveStatus = CodCasterAnnouncementFeed --[[ @ 0]]
	CodCasterPortraitTeamScoreBoard = CodCasterAnnouncementFeed.subscribeToModel --[[ @ 0]]
	CodCasterPlayerList = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	CodCasterPortraitTeamScoreBoard( CodCasterObjectiveStatus, CodCasterPlayerList["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"]], function ( f31_arg0 )
		f1_arg0:updateElementState( CodCasterAnnouncementFeed, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f31_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	CodCasterObjectiveStatus = CodCasterAnnouncementFeed --[[ @ 0]]
	CodCasterPortraitTeamScoreBoard = CodCasterAnnouncementFeed.subscribeToModel --[[ @ 0]]
	CodCasterPlayerList = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	CodCasterPortraitTeamScoreBoard( CodCasterObjectiveStatus, CodCasterPlayerList["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"]], function ( f32_arg0 )
		f1_arg0:updateElementState( CodCasterAnnouncementFeed, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f32_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:addElement( CodCasterAnnouncementFeed ) --[[ @ 0]]
	self.CodCasterAnnouncementFeed = CodCasterAnnouncementFeed --[[ @ 0]]
	
	CodCasterPortraitTeamScoreBoard = CoD.CodCasterTeamScoreboard.new( f1_arg0, f1_arg1, 0.5, 0.5, -260, 260, 0, 0, 30, 146 ) --[[ @ 0]]
	CodCasterPortraitTeamScoreBoard:mergeStateConditions( {
		{
			stateName = "teamLeftwatch",
			condition = function ( menu, element, event )
				local f33_local0 = CoD.CodCasterUtility.CurrentSpectatedTeamEqualTo( f1_arg1, 1 ) --[[ @ 0]]
				if f33_local0 then
					if not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"] ) and not ScoreboardVisible( f1_arg1 ) then
						f33_local0 = IsCodCasterProfileValueEqualTo( f1_arg1, "shoutcaster_qs_playerlist", 1 ) --[[ @ 0]]
						if f33_local0 then
							f33_local0 = IsCodCasterProfileValueEqualTo( f1_arg1, "shoutcaster_ds_teamscore", 1 ) --[[ @ 0]]
						end
					else
						f33_local0 = false --[[ @ 0]]
					end
				end
				return f33_local0
			end
		},
		{
			stateName = "teamRigthwatch",
			condition = function ( menu, element, event )
				local f34_local0 = CoD.CodCasterUtility.CurrentSpectatedTeamEqualTo( f1_arg1, 2 ) --[[ @ 0]]
				if f34_local0 then
					if not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"] ) and not ScoreboardVisible( f1_arg1 ) then
						f34_local0 = IsCodCasterProfileValueEqualTo( f1_arg1, "shoutcaster_qs_playerlist", 1 ) --[[ @ 0]]
						if f34_local0 then
							f34_local0 = IsCodCasterProfileValueEqualTo( f1_arg1, "shoutcaster_ds_teamscore", 1 ) --[[ @ 0]]
						end
					else
						f34_local0 = false --[[ @ 0]]
					end
				end
				return f34_local0
			end
		}
	} ) --[[ @ 0]]
	CodCasterPlayerList = CodCasterPortraitTeamScoreBoard --[[ @ 0]]
	CodCasterObjectiveStatus = CodCasterPortraitTeamScoreBoard.subscribeToModel --[[ @ 0]]
	local CodCasterLoadoutTalents = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	CodCasterObjectiveStatus( CodCasterPlayerList, CodCasterLoadoutTalents["deadSpectator.playerTeam"], function ( f35_arg0 )
		f1_arg0:updateElementState( CodCasterPortraitTeamScoreBoard, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f35_arg0:get(),
			modelName = "deadSpectator.playerTeam"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	CodCasterPlayerList = CodCasterPortraitTeamScoreBoard --[[ @ 0]]
	CodCasterObjectiveStatus = CodCasterPortraitTeamScoreBoard.subscribeToModel --[[ @ 0]]
	CodCasterLoadoutTalents = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	CodCasterObjectiveStatus( CodCasterPlayerList, CodCasterLoadoutTalents["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"]], function ( f36_arg0 )
		f1_arg0:updateElementState( CodCasterPortraitTeamScoreBoard, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f36_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	CodCasterPlayerList = CodCasterPortraitTeamScoreBoard --[[ @ 0]]
	CodCasterObjectiveStatus = CodCasterPortraitTeamScoreBoard.subscribeToModel --[[ @ 0]]
	CodCasterLoadoutTalents = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	CodCasterObjectiveStatus( CodCasterPlayerList, CodCasterLoadoutTalents.forceScoreboard, function ( f37_arg0 )
		f1_arg0:updateElementState( CodCasterPortraitTeamScoreBoard, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f37_arg0:get(),
			modelName = "forceScoreboard"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	CodCasterPlayerList = CodCasterPortraitTeamScoreBoard --[[ @ 0]]
	CodCasterObjectiveStatus = CodCasterPortraitTeamScoreBoard.subscribeToModel --[[ @ 0]]
	CodCasterLoadoutTalents = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	CodCasterObjectiveStatus( CodCasterPlayerList, CodCasterLoadoutTalents["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"]], function ( f38_arg0 )
		f1_arg0:updateElementState( CodCasterPortraitTeamScoreBoard, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f38_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	CodCasterPlayerList = CodCasterPortraitTeamScoreBoard --[[ @ 0]]
	CodCasterObjectiveStatus = CodCasterPortraitTeamScoreBoard.subscribeToModel --[[ @ 0]]
	CodCasterLoadoutTalents = DataSources.CodCaster.getModel( f1_arg1 ) --[[ @ 0]]
	CodCasterObjectiveStatus( CodCasterPlayerList, CodCasterLoadoutTalents.profileSettingsUpdated, function ( f39_arg0 )
		f1_arg0:updateElementState( CodCasterPortraitTeamScoreBoard, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f39_arg0:get(),
			modelName = "profileSettingsUpdated"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:addElement( CodCasterPortraitTeamScoreBoard ) --[[ @ 0]]
	self.CodCasterPortraitTeamScoreBoard = CodCasterPortraitTeamScoreBoard --[[ @ 0]]
	
	CodCasterObjectiveStatus = CoD.CodCasterObjectiveStatus.new( f1_arg0, f1_arg1, 0.5, 0.5, -260, 260, 0, 0, 104, 168 ) --[[ @ 0]]
	CodCasterObjectiveStatus:mergeStateConditions( {
		{
			stateName = "Visible",
			condition = function ( menu, element, event )
				local f40_local0 --[[ @ 0]]
				if not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"] ) and not ScoreboardVisible( f1_arg1 ) then
					f40_local0 = IsCodCasterProfileValueEqualTo( f1_arg1, "shoutcaster_qs_playerlist", 1 ) --[[ @ 0]]
					if f40_local0 then
						f40_local0 = IsCodCasterProfileValueEqualTo( f1_arg1, "shoutcaster_ds_teamscore", 1 ) --[[ @ 0]]
						if f40_local0 then
							f40_local0 = IsCodCasterProfileValueEqualTo( f1_arg1, "shoutcaster_ds_objective_status", 1 ) --[[ @ 0]]
						end
					end
				else
					f40_local0 = false --[[ @ 0]]
				end
				return f40_local0
			end
		}
	} ) --[[ @ 0]]
	CodCasterLoadoutTalents = CodCasterObjectiveStatus --[[ @ 0]]
	CodCasterPlayerList = CodCasterObjectiveStatus.subscribeToModel --[[ @ 0]]
	local CodCasterLoadoutPrimary = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	CodCasterPlayerList( CodCasterLoadoutTalents, CodCasterLoadoutPrimary["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"]], function ( f41_arg0 )
		f1_arg0:updateElementState( CodCasterObjectiveStatus, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f41_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	CodCasterLoadoutTalents = CodCasterObjectiveStatus --[[ @ 0]]
	CodCasterPlayerList = CodCasterObjectiveStatus.subscribeToModel --[[ @ 0]]
	CodCasterLoadoutPrimary = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	CodCasterPlayerList( CodCasterLoadoutTalents, CodCasterLoadoutPrimary.forceScoreboard, function ( f42_arg0 )
		f1_arg0:updateElementState( CodCasterObjectiveStatus, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f42_arg0:get(),
			modelName = "forceScoreboard"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	CodCasterLoadoutTalents = CodCasterObjectiveStatus --[[ @ 0]]
	CodCasterPlayerList = CodCasterObjectiveStatus.subscribeToModel --[[ @ 0]]
	CodCasterLoadoutPrimary = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	CodCasterPlayerList( CodCasterLoadoutTalents, CodCasterLoadoutPrimary["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"]], function ( f43_arg0 )
		f1_arg0:updateElementState( CodCasterObjectiveStatus, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f43_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	CodCasterLoadoutTalents = CodCasterObjectiveStatus --[[ @ 0]]
	CodCasterPlayerList = CodCasterObjectiveStatus.subscribeToModel --[[ @ 0]]
	CodCasterLoadoutPrimary = DataSources.CodCaster.getModel( f1_arg1 ) --[[ @ 0]]
	CodCasterPlayerList( CodCasterLoadoutTalents, CodCasterLoadoutPrimary.profileSettingsUpdated, function ( f44_arg0 )
		f1_arg0:updateElementState( CodCasterObjectiveStatus, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f44_arg0:get(),
			modelName = "profileSettingsUpdated"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:addElement( CodCasterObjectiveStatus ) --[[ @ 0]]
	self.CodCasterObjectiveStatus = CodCasterObjectiveStatus --[[ @ 0]]
	
	CodCasterPlayerList = CoD.CodCasterPlayerList.new( f1_arg0, f1_arg1, 0.98, 0.98, -411, -3, 0, 0, 245, 971 ) --[[ @ 0]]
	CodCasterPlayerList:mergeStateConditions( {
		{
			stateName = "Visible",
			condition = function ( menu, element, event )
				local f45_local0 --[[ @ 0]]
				if not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"] ) and not ScoreboardVisible( f1_arg1 ) then
					f45_local0 = IsCodCasterProfileValueEqualTo( f1_arg1, "shoutcaster_qs_playerlist", 1 ) --[[ @ 0]]
					if f45_local0 then
						f45_local0 = CoD.CodCasterUtility.CodCasterShowPlayerList( self, f1_arg1 ) --[[ @ 0]]
						if f45_local0 then
							f45_local0 = IsTeamBasedGame( f1_arg1 ) --[[ @ 0]]
							if f45_local0 then
								f45_local0 = not CoD.ModelUtility.IsModelValueTrue( f1_arg1, "CodCaster.showKeyboard" ) --[[ @ 0]]
							end
						end
					end
				else
					f45_local0 = false --[[ @ 0]]
				end
				return f45_local0
			end
		},
		{
			stateName = "NonTeamBased",
			condition = function ( menu, element, event )
				local f46_local0 --[[ @ 0]]
				if not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"] ) and not ScoreboardVisible( f1_arg1 ) then
					f46_local0 = IsCodCasterProfileValueEqualTo( f1_arg1, "shoutcaster_qs_playerlist", 1 ) --[[ @ 0]]
					if f46_local0 then
						f46_local0 = CoD.CodCasterUtility.CodCasterShowPlayerList( self, f1_arg1 ) --[[ @ 0]]
						if f46_local0 then
							if not IsTeamBasedGame( f1_arg1 ) then
								f46_local0 = not CoD.ModelUtility.IsModelValueTrue( f1_arg1, "CodCaster.showKeyboard" ) --[[ @ 0]]
							else
								f46_local0 = false --[[ @ 0]]
							end
						end
					end
				else
					f46_local0 = false --[[ @ 0]]
				end
				return f46_local0
			end
		}
	} ) --[[ @ 0]]
	CodCasterLoadoutPrimary = CodCasterPlayerList --[[ @ 0]]
	CodCasterLoadoutTalents = CodCasterPlayerList.subscribeToModel --[[ @ 0]]
	local CodCasterLoadoutSecondary = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	CodCasterLoadoutTalents( CodCasterLoadoutPrimary, CodCasterLoadoutSecondary["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"]], function ( f47_arg0 )
		f1_arg0:updateElementState( CodCasterPlayerList, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f47_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	CodCasterLoadoutPrimary = CodCasterPlayerList --[[ @ 0]]
	CodCasterLoadoutTalents = CodCasterPlayerList.subscribeToModel --[[ @ 0]]
	CodCasterLoadoutSecondary = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	CodCasterLoadoutTalents( CodCasterLoadoutPrimary, CodCasterLoadoutSecondary.forceScoreboard, function ( f48_arg0 )
		f1_arg0:updateElementState( CodCasterPlayerList, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f48_arg0:get(),
			modelName = "forceScoreboard"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	CodCasterLoadoutPrimary = CodCasterPlayerList --[[ @ 0]]
	CodCasterLoadoutTalents = CodCasterPlayerList.subscribeToModel --[[ @ 0]]
	CodCasterLoadoutSecondary = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	CodCasterLoadoutTalents( CodCasterLoadoutPrimary, CodCasterLoadoutSecondary["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"]], function ( f49_arg0 )
		f1_arg0:updateElementState( CodCasterPlayerList, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f49_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	CodCasterLoadoutPrimary = CodCasterPlayerList --[[ @ 0]]
	CodCasterLoadoutTalents = CodCasterPlayerList.subscribeToModel --[[ @ 0]]
	CodCasterLoadoutSecondary = DataSources.CodCaster.getModel( f1_arg1 ) --[[ @ 0]]
	CodCasterLoadoutTalents( CodCasterLoadoutPrimary, CodCasterLoadoutSecondary.profileSettingsUpdated, function ( f50_arg0 )
		f1_arg0:updateElementState( CodCasterPlayerList, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f50_arg0:get(),
			modelName = "profileSettingsUpdated"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	CodCasterLoadoutPrimary = CodCasterPlayerList --[[ @ 0]]
	CodCasterLoadoutTalents = CodCasterPlayerList.subscribeToModel --[[ @ 0]]
	CodCasterLoadoutSecondary = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	CodCasterLoadoutTalents( CodCasterLoadoutPrimary, CodCasterLoadoutSecondary["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_23DA38CAFF843C18"]], function ( f51_arg0 )
		f1_arg0:updateElementState( CodCasterPlayerList, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f51_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_23DA38CAFF843C18"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	CodCasterLoadoutPrimary = CodCasterPlayerList --[[ @ 0]]
	CodCasterLoadoutTalents = CodCasterPlayerList.subscribeToModel --[[ @ 0]]
	CodCasterLoadoutSecondary = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	CodCasterLoadoutTalents( CodCasterLoadoutPrimary, CodCasterLoadoutSecondary["MapVote.mapVoteMapPreviousGametype"], function ( f52_arg0 )
		f1_arg0:updateElementState( CodCasterPlayerList, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f52_arg0:get(),
			modelName = "MapVote.mapVoteMapPreviousGametype"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	CodCasterLoadoutPrimary = CodCasterPlayerList --[[ @ 0]]
	CodCasterLoadoutTalents = CodCasterPlayerList.subscribeToModel --[[ @ 0]]
	CodCasterLoadoutSecondary = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	CodCasterLoadoutTalents( CodCasterLoadoutPrimary, CodCasterLoadoutSecondary["CodCaster.showKeyboard"], function ( f53_arg0 )
		f1_arg0:updateElementState( CodCasterPlayerList, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f53_arg0:get(),
			modelName = "CodCaster.showKeyboard"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:addElement( CodCasterPlayerList ) --[[ @ 0]]
	self.CodCasterPlayerList = CodCasterPlayerList --[[ @ 0]]
	
	CodCasterLoadoutTalents = CoD.CodCasterLoadoutTalents.new( f1_arg0, f1_arg1, 0, 0, 321, 1121, 1, 1, -98, -23 ) --[[ @ 0]]
	CodCasterLoadoutTalents:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( CodCasterLoadoutTalents ) --[[ @ 0]]
	self.CodCasterLoadoutTalents = CodCasterLoadoutTalents --[[ @ 0]]
	
	CodCasterLoadoutPrimary = CoD.CodCasterLoadoutPrimary.new( f1_arg0, f1_arg1, 1, 1, -821, -320, 1, 1, -99, -24 ) --[[ @ 0]]
	CodCasterLoadoutPrimary:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( CodCasterLoadoutPrimary ) --[[ @ 0]]
	self.CodCasterLoadoutPrimary = CodCasterLoadoutPrimary --[[ @ 0]]
	
	CodCasterLoadoutSecondary = CoD.CodCasterLoadoutSecondary.new( f1_arg0, f1_arg1, 1, 1, -705, -204, 1, 1, -176, -101 ) --[[ @ 0]]
	CodCasterLoadoutSecondary:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( CodCasterLoadoutSecondary ) --[[ @ 0]]
	self.CodCasterLoadoutSecondary = CodCasterLoadoutSecondary --[[ @ 0]]
	
	local CodCasterButtonBar = CoD.CodCasterButtonBar.new( f1_arg0, f1_arg1, 0.5, 0.5, -960, 960, 1, 1, -107, -71 ) --[[ @ 0]]
	self:addElement( CodCasterButtonBar ) --[[ @ 0]]
	self.CodCasterButtonBar = CodCasterButtonBar --[[ @ 0]]
	
	local CodCasterKeyboard = CoD.CodCaster_Keyboard.new( f1_arg0, f1_arg1, 0.5, 0.5, -960, 960, 0.5, 0.5, -540, 540 ) --[[ @ 0]]
	CodCasterKeyboard:mergeStateConditions( {
		{
			stateName = "Visible",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsModelValueTrue( f1_arg1, "CodCaster.showKeyboard" ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"] )
			end
		}
	} ) --[[ @ 0]]
	local f1_local15 = CodCasterKeyboard --[[ @ 0]]
	local CodCasterMiniMapPosition = CodCasterKeyboard.subscribeToModel --[[ @ 0]]
	local f1_local17 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	CodCasterMiniMapPosition( f1_local15, f1_local17["CodCaster.showKeyboard"], function ( f55_arg0 )
		f1_arg0:updateElementState( CodCasterKeyboard, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f55_arg0:get(),
			modelName = "CodCaster.showKeyboard"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local15 = CodCasterKeyboard --[[ @ 0]]
	CodCasterMiniMapPosition = CodCasterKeyboard.subscribeToModel --[[ @ 0]]
	f1_local17 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	CodCasterMiniMapPosition( f1_local15, f1_local17["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"]], function ( f56_arg0 )
		f1_arg0:updateElementState( CodCasterKeyboard, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f56_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:addElement( CodCasterKeyboard ) --[[ @ 0]]
	self.CodCasterKeyboard = CodCasterKeyboard --[[ @ 0]]
	
	CodCasterMiniMapPosition = CoD.CodCasterMiniMapPosition.new( f1_arg0, f1_arg1, 0, 0, 0, 1920, 0, 0, 224, 624 ) --[[ @ 0]]
	self:addElement( CodCasterMiniMapPosition ) --[[ @ 0]]
	self.CodCasterMiniMapPosition = CodCasterMiniMapPosition --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				local f57_local0 = Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_11CDCB451655ABCF"] ) --[[ @ 0]]
				if not f57_local0 then
					f57_local0 = Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"] ) --[[ @ 0]]
					if not f57_local0 then
						f57_local0 = Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_624E603C16FCC38F"] ) --[[ @ 0]]
						if not f57_local0 then
							f57_local0 = Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_54828BED794DA0A5"] ) --[[ @ 0]]
						end
					end
				end
				return f57_local0
			end
		},
		{
			stateName = "HiddenCopy",
			condition = function ( menu, element, event )
				return ShouldHideCodCasterHud( f1_arg1 )
			end
		},
		{
			stateName = "VisibleLoadoutAndNotTeamBased",
			condition = function ( menu, element, event )
				local f59_local0 --[[ @ 0]]
				if not IsGametypeTeambased() and not CoD.CodCasterUtility.CodCasterIsInAerialCam( f1_arg1 ) and not ScoreboardVisible( f1_arg1 ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_11CDCB451655ABCF"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_624E603C16FCC38F"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_54828BED794DA0A5"] ) and not CoD.HUDUtility.IsGameTypeEqualToString( "gun" ) then
					f59_local0 = IsCodCasterProfileValueEqualTo( f1_arg1, "shoutcaster_qs_loadout", 1 ) --[[ @ 0]]
					if f59_local0 then
						f59_local0 = not CoD.HUDUtility.IsGameTypeEqualToString( "oic" ) --[[ @ 0]]
					end
				else
					f59_local0 = false --[[ @ 0]]
				end
				return f59_local0
			end
		},
		{
			stateName = "VisibleLoadout",
			condition = function ( menu, element, event )
				local f60_local0 --[[ @ 0]]
				if not CoD.CodCasterUtility.CodCasterIsInAerialCam( f1_arg1 ) and not ScoreboardVisible( f1_arg1 ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_11CDCB451655ABCF"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_6668F0686232679"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_624E603C16FCC38F"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_54828BED794DA0A5"] ) then
					f60_local0 = IsCodCasterProfileValueEqualTo( f1_arg1, "shoutcaster_qs_loadout", 1 ) --[[ @ 0]]
					if f60_local0 then
						if not CoD.HUDUtility.IsGameTypeEqualToString( "gun" ) then
							f60_local0 = not CoD.HUDUtility.IsGameTypeEqualToString( "oic" ) --[[ @ 0]]
						else
							f60_local0 = false --[[ @ 0]]
						end
					end
				else
					f60_local0 = false --[[ @ 0]]
				end
				return f60_local0
			end
		},
		{
			stateName = "NotTeamBased",
			condition = function ( menu, element, event )
				return not IsGametypeTeambased()
			end
		}
	} ) --[[ @ 0]]
	f1_local17 = self --[[ @ 0]]
	f1_local15 = self.subscribeToModel --[[ @ 0]]
	local f1_local18 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local15( f1_local17, f1_local18["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_11CDCB451655ABCF"]], function ( f62_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f62_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_11CDCB451655ABCF"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local17 = self --[[ @ 0]]
	f1_local15 = self.subscribeToModel --[[ @ 0]]
	f1_local18 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local15( f1_local17, f1_local18["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"]], function ( f63_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f63_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local17 = self --[[ @ 0]]
	f1_local15 = self.subscribeToModel --[[ @ 0]]
	f1_local18 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local15( f1_local17, f1_local18["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_624E603C16FCC38F"]], function ( f64_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f64_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_624E603C16FCC38F"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local17 = self --[[ @ 0]]
	f1_local15 = self.subscribeToModel --[[ @ 0]]
	f1_local18 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local15( f1_local17, f1_local18["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_54828BED794DA0A5"]], function ( f65_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f65_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_54828BED794DA0A5"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local17 = self --[[ @ 0]]
	f1_local15 = self.subscribeToModel --[[ @ 0]]
	f1_local18 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local15( f1_local17, f1_local18["scoreboard.team1.count"], function ( f66_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f66_arg0:get(),
			modelName = "scoreboard.team1.count"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local17 = self --[[ @ 0]]
	f1_local15 = self.subscribeToModel --[[ @ 0]]
	f1_local18 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local15( f1_local17, f1_local18["scoreboard.team2.count"], function ( f67_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f67_arg0:get(),
			modelName = "scoreboard.team2.count"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local17 = self --[[ @ 0]]
	f1_local15 = self.subscribeToModel --[[ @ 0]]
	f1_local18 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local15( f1_local17, f1_local18["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_57EAF988DDEB83EA"]], function ( f68_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f68_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_57EAF988DDEB83EA"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local17 = self --[[ @ 0]]
	f1_local15 = self.subscribeToModel --[[ @ 0]]
	f1_local18 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local15( f1_local17, f1_local18.forceScoreboard, function ( f69_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f69_arg0:get(),
			modelName = "forceScoreboard"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local17 = self --[[ @ 0]]
	f1_local15 = self.subscribeToModel --[[ @ 0]]
	f1_local18 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local15( f1_local17, f1_local18["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"]], function ( f70_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f70_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local17 = self --[[ @ 0]]
	f1_local15 = self.subscribeToModel --[[ @ 0]]
	f1_local18 = DataSources.CodCaster.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local15( f1_local17, f1_local18.profileSettingsUpdated, function ( f71_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f71_arg0:get(),
			modelName = "profileSettingsUpdated"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local17 = self --[[ @ 0]]
	f1_local15 = self.subscribeToModel --[[ @ 0]]
	f1_local18 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local15( f1_local17, f1_local18["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_6668F0686232679"]], function ( f72_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f72_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_6668F0686232679"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local17 = self --[[ @ 0]]
	f1_local15 = self.subscribeToModel --[[ @ 0]]
	f1_local18 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local15( f1_local17, f1_local18["CodCaster.showFullScreenMap"], function ( f73_arg0, f73_arg1 )
		CoD.Menu.UpdateButtonShownState( f73_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_593AB4C84F113EE1"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f73_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_1E6DB407A2AF8B09"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local17 = self --[[ @ 0]]
	f1_local15 = self.subscribeToModel --[[ @ 0]]
	f1_local18 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local15( f1_local17, f1_local18["CodCaster.showSettingsSideBar"], function ( f74_arg0, f74_arg1 )
		CoD.Menu.UpdateButtonShownState( f74_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_593AB4C84F113EE1"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local17 = self --[[ @ 0]]
	f1_local15 = self.subscribeToModel --[[ @ 0]]
	f1_local18 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local15( f1_local17, f1_local18["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"]], function ( f75_arg0, f75_arg1 )
		CoD.Menu.UpdateButtonShownState( f75_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_593AB4C84F113EE1"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f75_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_1E6DB407A2AF8B09"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f75_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f75_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3D2F467A6C6DA1AC"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f75_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3820DDD869ABBFAA"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f75_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_1057783F8DA4AAEF"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f75_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f75_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_4571F08AD84807E0"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f75_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_24B11D2B20C75A7F"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f75_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_6D4C15FE32148D3A"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local17 = self --[[ @ 0]]
	f1_local15 = self.subscribeToModel --[[ @ 0]]
	f1_local18 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local15( f1_local17, f1_local18["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_57EAF988DDEB83EA"]], function ( f76_arg0, f76_arg1 )
		CoD.Menu.UpdateButtonShownState( f76_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_1E6DB407A2AF8B09"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f76_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_1057783F8DA4AAEF"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f76_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f76_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_4571F08AD84807E0"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f76_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_24B11D2B20C75A7F"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f76_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_6D4C15FE32148D3A"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local17 = self --[[ @ 0]]
	f1_local15 = self.subscribeToModel --[[ @ 0]]
	f1_local18 = DataSources.CodCaster.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local15( f1_local17, f1_local18.profileSettingsUpdated, function ( f77_arg0, f77_arg1 )
		CoD.Menu.UpdateButtonShownState( f77_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f77_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:appendEventHandler( "input_source_changed", function ( f78_arg0, f78_arg1 )
		f78_arg1.menu = f78_arg1.menu or f1_arg0 --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f78_arg0, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f78_arg0, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	f1_local17 = self --[[ @ 0]]
	f1_local15 = self.subscribeToModel --[[ @ 0]]
	f1_local18 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local15( f1_local17, f1_local18.LastInput, function ( f79_arg0, f79_arg1 )
		CoD.Menu.UpdateButtonShownState( f79_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f79_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local17 = self --[[ @ 0]]
	f1_local15 = self.subscribeToModel --[[ @ 0]]
	f1_local18 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local15( f1_local17, f1_local18.forceScoreboard, function ( f80_arg0, f80_arg1 )
		CoD.Menu.UpdateButtonShownState( f80_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f80_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3D2F467A6C6DA1AC"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f80_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3820DDD869ABBFAA"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f80_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_1057783F8DA4AAEF"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f80_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f80_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_4571F08AD84807E0"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f80_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_24B11D2B20C75A7F"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f80_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_6D4C15FE32148D3A"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local17 = self --[[ @ 0]]
	f1_local15 = self.subscribeToModel --[[ @ 0]]
	f1_local18 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local15( f1_local17, f1_local18["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"]], function ( f81_arg0, f81_arg1 )
		CoD.Menu.UpdateButtonShownState( f81_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f81_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3D2F467A6C6DA1AC"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f81_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3820DDD869ABBFAA"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f81_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_1057783F8DA4AAEF"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f81_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f81_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_4571F08AD84807E0"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f81_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_24B11D2B20C75A7F"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f81_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_6D4C15FE32148D3A"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local17 = self --[[ @ 0]]
	f1_local15 = self.subscribeToModel --[[ @ 0]]
	f1_local18 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local15( f1_local17, f1_local18["scoreboard.team1.count"], function ( f82_arg0, f82_arg1 )
		CoD.Menu.UpdateButtonShownState( f82_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_24B11D2B20C75A7F"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f82_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_6D4C15FE32148D3A"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local17 = self --[[ @ 0]]
	f1_local15 = self.subscribeToModel --[[ @ 0]]
	f1_local18 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local15( f1_local17, f1_local18["scoreboard.team2.count"], function ( f83_arg0, f83_arg1 )
		CoD.Menu.UpdateButtonShownState( f83_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_24B11D2B20C75A7F"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f83_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_6D4C15FE32148D3A"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local17 = self --[[ @ 0]]
	f1_local15 = self.subscribeToModel --[[ @ 0]]
	f1_local18 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local15( f1_local17, f1_local18["CodCaster.showKeyboard"], function ( f84_arg0, f84_arg1 )
		CoD.Menu.UpdateButtonShownState( f84_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( self, f1_arg1, Enum[@"LUIButton"][@"hash_593AB4C84F113EE1"], nil, function ( element, menu, controller, model )
		if CoD.ScoreboardUtility.CanShowScoreboard( controller ) and not CoD.ModelUtility.IsModelValueTrue( controller, "CodCaster.showFullScreenMap" ) and not CoD.ModelUtility.IsModelValueEqualTo( controller, "CodCaster.showSettingsSideBar", 1 ) and not IsVisibilityBitSet( controller, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) then
			CoD.ScoreboardUtility.ShowScoreboard( controller ) --[[ @ 0]]
			return true
		elseif CoD.ScoreboardUtility.CanHideScoreboard( controller ) and not CoD.ModelUtility.IsModelValueTrue( controller, "CodCaster.showFullScreenMap" ) and not CoD.ModelUtility.IsModelValueEqualTo( controller, "CodCaster.showSettingsSideBar", 1 ) and not IsVisibilityBitSet( controller, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) then
			CoD.ScoreboardUtility.HideScoreboard( menu, controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if CoD.ScoreboardUtility.CanShowScoreboard( controller ) and not CoD.ModelUtility.IsModelValueTrue( controller, "CodCaster.showFullScreenMap" ) and not CoD.ModelUtility.IsModelValueEqualTo( controller, "CodCaster.showSettingsSideBar", 1 ) and not IsVisibilityBitSet( controller, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_593AB4C84F113EE1"], @"hash_0", nil, nil ) --[[ @ 0]]
			return false
		elseif CoD.ScoreboardUtility.CanHideScoreboard( controller ) and not CoD.ModelUtility.IsModelValueTrue( controller, "CodCaster.showFullScreenMap" ) and not CoD.ModelUtility.IsModelValueEqualTo( controller, "CodCaster.showSettingsSideBar", 1 ) and not IsVisibilityBitSet( controller, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_593AB4C84F113EE1"], @"hash_0", nil, nil ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( self, f1_arg1, Enum[@"LUIButton"][@"hash_1E6DB407A2AF8B09"], "M", function ( element, menu, controller, model )
		if not CoD.ModelUtility.IsModelValueTrue( controller, "CodCaster.showFullScreenMap" ) and not CoD.CodCasterUtility.CodCasterIsInAerialCam( controller ) and not IsVisibilityBitSet( controller, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) then
			ToggleControllerModelValueBoolean( controller, "CodCaster.showFullScreenMap" ) --[[ @ 0]]
			CoD.ScoreboardUtility.HideScoreboard( menu, controller ) --[[ @ 0]]
			return true
		elseif not CoD.CodCasterUtility.CodCasterIsInAerialCam( controller ) and not IsVisibilityBitSet( controller, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) then
			ToggleControllerModelValueBoolean( controller, "CodCaster.showFullScreenMap" ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not CoD.ModelUtility.IsModelValueTrue( controller, "CodCaster.showFullScreenMap" ) and not CoD.CodCasterUtility.CodCasterIsInAerialCam( controller ) and not IsVisibilityBitSet( controller, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_1E6DB407A2AF8B09"], @"hash_0", nil, "M" ) --[[ @ 0]]
			return false
		elseif not CoD.CodCasterUtility.CodCasterIsInAerialCam( controller ) and not IsVisibilityBitSet( controller, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_1E6DB407A2AF8B09"], @"hash_0", nil, "M" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( self, f1_arg1, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"], "T", function ( element, menu, controller, model )
		if IsCodCasterProfileValueEqualTo( controller, "shoutcaster_ds_toolbar", 1 ) and IsGamepad( controller ) then
			SetCodCasterProfileValue( self, element, controller, "shoutcaster_ds_toolbar", "0" ) --[[ @ 0]]
			return true
		elseif IsCodCasterProfileValueEqualTo( controller, "shoutcaster_ds_toolbar", 0 ) and CoD.CodCasterUtility.HasButtonFocus( self ) and IsGamepad( controller ) then
			SetCodCasterProfileValue( self, element, controller, "shoutcaster_ds_toolbar", "1" ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsCodCasterProfileValueEqualTo( controller, "shoutcaster_ds_toolbar", 1 ) and IsGamepad( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"], @"hash_0", nil, "T" ) --[[ @ 0]]
			return false
		elseif IsCodCasterProfileValueEqualTo( controller, "shoutcaster_ds_toolbar", 0 ) and CoD.CodCasterUtility.HasButtonFocus( self ) and IsGamepad( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"], @"hash_0", nil, "T" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( self, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ENTER", function ( element, menu, controller, model )
		if CoD.CodCasterUtility.HasButtonFocus( self ) and not IsVisibilityBitSet( controller, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) and not ScoreboardVisible( controller ) and not GameEnded( controller ) and not IsMouse( controller ) then
			CoD.CodCasterUtility.SpectatePlayer( self, controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if CoD.CodCasterUtility.HasButtonFocus( self ) and not IsVisibilityBitSet( controller, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) and not ScoreboardVisible( controller ) and not GameEnded( controller ) and not IsMouse( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_0", nil, "ENTER" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( self, f1_arg1, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], "T", function ( element, menu, controller, model )
		if IsCodCasterProfileValueEqualTo( controller, "shoutcaster_ds_toolbar", 1 ) then
			SetCodCasterProfileValue( self, element, controller, "shoutcaster_ds_toolbar", "0" ) --[[ @ 0]]
			return true
		elseif IsCodCasterProfileValueEqualTo( controller, "shoutcaster_ds_toolbar", 0 ) and CoD.CodCasterUtility.HasButtonFocus( self ) then
			SetCodCasterProfileValue( self, element, controller, "shoutcaster_ds_toolbar", "1" ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsCodCasterProfileValueEqualTo( controller, "shoutcaster_ds_toolbar", 1 ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], @"hash_0", nil, "T" ) --[[ @ 0]]
			return false
		elseif IsCodCasterProfileValueEqualTo( controller, "shoutcaster_ds_toolbar", 0 ) and CoD.CodCasterUtility.HasButtonFocus( self ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], @"hash_0", nil, "T" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( self, f1_arg1, Enum[@"LUIButton"][@"hash_3D2F467A6C6DA1AC"], "R", function ( element, menu, controller, model )
		if not IsRepeatButtonPress( model ) and not IsVisibilityBitSet( controller, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) and not ScoreboardVisible( controller ) and not GameEnded( controller ) then
			ToggleControllerModelValueNumber( controller, "CodCaster.showQuickSettingsSideBar" ) --[[ @ 0]]
			OpenPopupWithPriority( self, "CodCasterQuickSettingsSideBar", controller, 300 ) --[[ @ 0]]
			SetLuiKeyCatcher( true ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsRepeatButtonPress( nil ) and not IsVisibilityBitSet( controller, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) and not ScoreboardVisible( controller ) and not GameEnded( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3D2F467A6C6DA1AC"], @"hash_0", nil, "R" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( self, f1_arg1, Enum[@"LUIButton"][@"hash_3820DDD869ABBFAA"], "Y", function ( element, menu, controller, model )
		if not IsRepeatButtonPress( model ) and not IsVisibilityBitSet( controller, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) and not ScoreboardVisible( controller ) and not GameEnded( controller ) then
			ToggleControllerModelValueNumber( controller, "CodCaster.showSettingsSideBar" ) --[[ @ 0]]
			OpenPopupWithPriority( self, "CodCasterSettingsSideBar", controller, 300 ) --[[ @ 0]]
			SetLuiKeyCatcher( true ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsRepeatButtonPress( nil ) and not IsVisibilityBitSet( controller, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) and not ScoreboardVisible( controller ) and not GameEnded( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3820DDD869ABBFAA"], @"hash_0", nil, "Y" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( self, f1_arg1, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], "F", function ( element, menu, controller, model )
		CoD.CodCasterUtility.ToggleCodCasterProfileValue( controller, "shoutcaster_qs_xray" ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], @"hash_0", nil, "F" ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( self, f1_arg1, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], "G", function ( element, menu, controller, model )
		CoD.CodCasterUtility.ToggleCodCasterProfileValue( controller, "shoutcaster_qs_listen_in" ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], @"hash_0", nil, "G" ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( self, f1_arg1, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], "H", function ( element, menu, controller, model )
		CoD.CodCasterUtility.ToggleCodCasterProfileValue( controller, "shoutcaster_qs_loadout" ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], @"hash_0", nil, "H" ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( self, f1_arg1, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], "J", function ( element, menu, controller, model )
		CoD.CodCasterUtility.ToggleCodCasterProfileValue( controller, "shoutcaster_qs_playercard" ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], @"hash_0", nil, "J" ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( self, f1_arg1, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], "K", function ( element, menu, controller, model )
		CoD.CodCasterUtility.ToggleCodCasterProfileValue( controller, "shoutcaster_qs_playerhud" ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], @"hash_0", nil, "K" ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( self, f1_arg1, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], "1", function ( element, menu, controller, model )
		CoD.CodCasterUtility.SpectatePlayerNumber( self, controller, "1" ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], @"hash_0", nil, "1" ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( self, f1_arg1, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], "2", function ( element, menu, controller, model )
		CoD.CodCasterUtility.SpectatePlayerNumber( self, controller, "2" ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], @"hash_0", nil, "2" ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( self, f1_arg1, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], "3", function ( element, menu, controller, model )
		CoD.CodCasterUtility.SpectatePlayerNumber( self, controller, "3" ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], @"hash_0", nil, "3" ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( self, f1_arg1, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], "4", function ( element, menu, controller, model )
		CoD.CodCasterUtility.SpectatePlayerNumber( self, controller, "4" ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], @"hash_0", nil, "4" ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( self, f1_arg1, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], "5", function ( element, menu, controller, model )
		CoD.CodCasterUtility.SpectatePlayerNumber( self, controller, "5" ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], @"hash_0", nil, "5" ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( self, f1_arg1, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], "6", function ( element, menu, controller, model )
		CoD.CodCasterUtility.SpectatePlayerNumber( self, controller, "6" ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], @"hash_0", nil, "6" ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( self, f1_arg1, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], "7", function ( element, menu, controller, model )
		CoD.CodCasterUtility.SpectatePlayerNumber( self, controller, "7" ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], @"hash_0", nil, "7" ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( self, f1_arg1, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], "8", function ( element, menu, controller, model )
		CoD.CodCasterUtility.SpectatePlayerNumber( self, controller, "8" ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], @"hash_0", nil, "8" ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( self, f1_arg1, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], "9", function ( element, menu, controller, model )
		CoD.CodCasterUtility.SpectatePlayerNumber( self, controller, "9" ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], @"hash_0", nil, "9" ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( self, f1_arg1, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], "0", function ( element, menu, controller, model )
		CoD.CodCasterUtility.SpectatePlayerNumber( self, controller, "10" ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], @"hash_0", nil, "0" ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( self, f1_arg1, Enum[@"LUIButton"][@"hash_16CE8023188D673F"], "LSHIFT", function ( element, menu, controller, model )
		CoD.CodCasterUtility.ClearSelectedLoadoutElement( self, menu, controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_16CE8023188D673F"], @"hash_0", nil, "LSHIFT" ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( self, f1_arg1, Enum[@"LUIButton"][@"hash_229E5695FF1401AD"], nil, function ( element, menu, controller, model )
		CoD.CodCasterUtility.ToggleCodCasterProfileValue( controller, "shoutcaster_qs_loadout" ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_229E5695FF1401AD"], @"hash_0", nil, nil ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( self, f1_arg1, Enum[@"LUIButton"][@"hash_1057783F8DA4AAEF"], nil, function ( element, menu, controller, model )
		if not IsRepeatButtonPress( model ) and not IsVisibilityBitSet( controller, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) and not ScoreboardVisible( controller ) and not GameEnded( controller ) and IsDpadButton( model ) then
			CoD.CodCasterUtility.OnDpadLeft( self, controller ) --[[ @ 0]]
			return true
		elseif not IsRepeatButtonPress( model ) and not IsVisibilityBitSet( controller, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) and not ScoreboardVisible( controller ) and not GameEnded( controller ) and not IsDpadButton( model ) and not CoD.CodCasterUtility.CodCasterIsInAerialCam( controller ) then
			CoD.CodCasterUtility.NavigateLoadoutLeft( self, menu, controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		local f134_local0 = nil --[[ @ 0]]
		if not IsRepeatButtonPress( f134_local0 ) and not IsVisibilityBitSet( controller, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) and not ScoreboardVisible( controller ) and not GameEnded( controller ) and IsDpadButton( f134_local0 ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_1057783F8DA4AAEF"], @"hash_0", nil, nil ) --[[ @ 0]]
			return false
		elseif not IsRepeatButtonPress( f134_local0 ) and not IsVisibilityBitSet( controller, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) and not ScoreboardVisible( controller ) and not GameEnded( controller ) and not IsDpadButton( f134_local0 ) and not CoD.CodCasterUtility.CodCasterIsInAerialCam( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_1057783F8DA4AAEF"], @"hash_0", nil, nil ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( self, f1_arg1, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], "LEFTARROW", function ( element, menu, controller, model )
		if not IsRepeatButtonPress( model ) and not IsVisibilityBitSet( controller, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) and not ScoreboardVisible( controller ) and not GameEnded( controller ) then
			CoD.CodCasterUtility.OnDpadLeft( self, controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsRepeatButtonPress( nil ) and not IsVisibilityBitSet( controller, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) and not ScoreboardVisible( controller ) and not GameEnded( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], @"hash_0", nil, "LEFTARROW" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( self, f1_arg1, Enum[@"LUIButton"][@"hash_4571F08AD84807E0"], nil, function ( element, menu, controller, model )
		if not IsRepeatButtonPress( model ) and not IsVisibilityBitSet( controller, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) and not ScoreboardVisible( controller ) and not GameEnded( controller ) and IsDpadButton( model ) then
			CoD.CodCasterUtility.OnDpadRight( self, controller ) --[[ @ 0]]
			return true
		elseif not IsRepeatButtonPress( model ) and not IsVisibilityBitSet( controller, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) and not ScoreboardVisible( controller ) and not GameEnded( controller ) and not IsDpadButton( model ) and not CoD.CodCasterUtility.CodCasterIsInAerialCam( controller ) then
			CoD.CodCasterUtility.NavigateLoadoutRight( self, menu, controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		local f138_local0 = nil --[[ @ 0]]
		if not IsRepeatButtonPress( f138_local0 ) and not IsVisibilityBitSet( controller, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) and not ScoreboardVisible( controller ) and not GameEnded( controller ) and IsDpadButton( f138_local0 ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_4571F08AD84807E0"], @"hash_0", nil, nil ) --[[ @ 0]]
			return false
		elseif not IsRepeatButtonPress( f138_local0 ) and not IsVisibilityBitSet( controller, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) and not ScoreboardVisible( controller ) and not GameEnded( controller ) and not IsDpadButton( f138_local0 ) and not CoD.CodCasterUtility.CodCasterIsInAerialCam( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_4571F08AD84807E0"], @"hash_0", nil, nil ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( self, f1_arg1, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], "RIGHTARROW", function ( element, menu, controller, model )
		if not IsRepeatButtonPress( model ) and not IsVisibilityBitSet( controller, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) and not ScoreboardVisible( controller ) and not GameEnded( controller ) then
			CoD.CodCasterUtility.OnDpadRight( self, controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsRepeatButtonPress( nil ) and not IsVisibilityBitSet( controller, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) and not ScoreboardVisible( controller ) and not GameEnded( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], @"hash_0", nil, "RIGHTARROW" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( self, f1_arg1, Enum[@"LUIButton"][@"hash_24B11D2B20C75A7F"], nil, function ( element, menu, controller, model )
		if not IsRepeatButtonPress( model ) and not IsVisibilityBitSet( controller, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) and not ScoreboardVisible( controller ) and not GameEnded( controller ) and IsDpadButton( model ) and not ShouldHideCodCasterHud( controller ) then
			ToggleControllerModelValueBoolean( controller, "codcaster.showPortraitList" ) --[[ @ 0]]
			UpdateSelfElementState( menu, self.CodCasterPortraitPlayerList, controller ) --[[ @ 0]]
			return true
		elseif not IsRepeatButtonPress( model ) and not IsVisibilityBitSet( controller, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) and not ScoreboardVisible( controller ) and not GameEnded( controller ) and not IsDpadButton( model ) and not CoD.CodCasterUtility.CodCasterIsInAerialCam( controller ) then
			CoD.CodCasterUtility.NavigateLoadoutUp( self, menu, controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		local f142_local0 = nil --[[ @ 0]]
		if not IsRepeatButtonPress( f142_local0 ) and not IsVisibilityBitSet( controller, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) and not ScoreboardVisible( controller ) and not GameEnded( controller ) and IsDpadButton( f142_local0 ) and not ShouldHideCodCasterHud( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_24B11D2B20C75A7F"], @"hash_0", nil, nil ) --[[ @ 0]]
			return false
		elseif not IsRepeatButtonPress( f142_local0 ) and not IsVisibilityBitSet( controller, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) and not ScoreboardVisible( controller ) and not GameEnded( controller ) and not IsDpadButton( f142_local0 ) and not CoD.CodCasterUtility.CodCasterIsInAerialCam( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_24B11D2B20C75A7F"], @"hash_0", nil, nil ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( self, f1_arg1, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], "UPARROW", function ( element, menu, controller, model )
		if not IsRepeatButtonPress( model ) and not IsVisibilityBitSet( controller, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) and not ScoreboardVisible( controller ) and not GameEnded( controller ) then
			ToggleControllerModelValueBoolean( controller, "codcaster.showPortraitList" ) --[[ @ 0]]
			UpdateSelfElementState( menu, self.CodCasterPortraitPlayerList, controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsRepeatButtonPress( nil ) and not IsVisibilityBitSet( controller, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) and not ScoreboardVisible( controller ) and not GameEnded( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], @"hash_0", nil, "UPARROW" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( self, f1_arg1, Enum[@"LUIButton"][@"hash_6D4C15FE32148D3A"], nil, function ( element, menu, controller, model )
		if not IsRepeatButtonPress( model ) and not IsVisibilityBitSet( controller, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) and not ScoreboardVisible( controller ) and not GameEnded( controller ) and IsDpadButton( model ) and not ShouldHideCodCasterHud( controller ) then
			ToggleControllerModelValueBoolean( controller, "codcaster.showPlayerList" ) --[[ @ 0]]
			UpdateSelfElementState( menu, self.CodCasterPlayerList, controller ) --[[ @ 0]]
			return true
		elseif not IsRepeatButtonPress( model ) and not IsVisibilityBitSet( controller, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) and not ScoreboardVisible( controller ) and not GameEnded( controller ) and not IsDpadButton( model ) and not CoD.CodCasterUtility.CodCasterIsInAerialCam( controller ) then
			CoD.CodCasterUtility.NavigateLoadoutDown( self, menu, controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		local f146_local0 = nil --[[ @ 0]]
		if not IsRepeatButtonPress( f146_local0 ) and not IsVisibilityBitSet( controller, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) and not ScoreboardVisible( controller ) and not GameEnded( controller ) and IsDpadButton( f146_local0 ) and not ShouldHideCodCasterHud( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_6D4C15FE32148D3A"], @"hash_0", nil, nil ) --[[ @ 0]]
			return false
		elseif not IsRepeatButtonPress( f146_local0 ) and not IsVisibilityBitSet( controller, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) and not ScoreboardVisible( controller ) and not GameEnded( controller ) and not IsDpadButton( f146_local0 ) and not CoD.CodCasterUtility.CodCasterIsInAerialCam( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_6D4C15FE32148D3A"], @"hash_0", nil, nil ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( self, f1_arg1, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], "DOWNARROW", function ( element, menu, controller, model )
		if not IsRepeatButtonPress( model ) and not IsVisibilityBitSet( controller, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) and not ScoreboardVisible( controller ) and not GameEnded( controller ) then
			ToggleControllerModelValueBoolean( controller, "codcaster.showPlayerList" ) --[[ @ 0]]
			UpdateSelfElementState( menu, self.CodCasterPlayerList, controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsRepeatButtonPress( nil ) and not IsVisibilityBitSet( controller, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) and not ScoreboardVisible( controller ) and not GameEnded( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], @"hash_0", nil, "DOWNARROW" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( self, f1_arg1, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], "A", function ( element, menu, controller, model )
		if not IsRepeatButtonPress( model ) and not IsVisibilityBitSet( controller, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) and not ScoreboardVisible( controller ) and not GameEnded( controller ) and not CoD.CodCasterUtility.CodCasterIsInAerialCam( controller ) then
			CoD.CodCasterUtility.NavigateLoadoutLeft( self, menu, controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsRepeatButtonPress( nil ) and not IsVisibilityBitSet( controller, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) and not ScoreboardVisible( controller ) and not GameEnded( controller ) and not CoD.CodCasterUtility.CodCasterIsInAerialCam( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], @"hash_0", nil, "A" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( self, f1_arg1, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], "D", function ( element, menu, controller, model )
		if not IsRepeatButtonPress( model ) and not IsVisibilityBitSet( controller, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) and not ScoreboardVisible( controller ) and not GameEnded( controller ) and not CoD.CodCasterUtility.CodCasterIsInAerialCam( controller ) then
			CoD.CodCasterUtility.NavigateLoadoutRight( self, menu, controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsRepeatButtonPress( nil ) and not IsVisibilityBitSet( controller, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) and not ScoreboardVisible( controller ) and not GameEnded( controller ) and not CoD.CodCasterUtility.CodCasterIsInAerialCam( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], @"hash_0", nil, "D" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( self, f1_arg1, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], "W", function ( element, menu, controller, model )
		if not IsRepeatButtonPress( model ) and not IsVisibilityBitSet( controller, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) and not ScoreboardVisible( controller ) and not GameEnded( controller ) and not CoD.CodCasterUtility.CodCasterIsInAerialCam( controller ) then
			CoD.CodCasterUtility.NavigateLoadoutUp( self, menu, controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsRepeatButtonPress( nil ) and not IsVisibilityBitSet( controller, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) and not ScoreboardVisible( controller ) and not GameEnded( controller ) and not CoD.CodCasterUtility.CodCasterIsInAerialCam( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], @"hash_0", nil, "W" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( self, f1_arg1, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], "S", function ( element, menu, controller, model )
		if not IsRepeatButtonPress( model ) and not IsVisibilityBitSet( controller, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) and not ScoreboardVisible( controller ) and not GameEnded( controller ) and not CoD.CodCasterUtility.CodCasterIsInAerialCam( controller ) then
			CoD.CodCasterUtility.NavigateLoadoutDown( self, menu, controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsRepeatButtonPress( nil ) and not IsVisibilityBitSet( controller, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) and not ScoreboardVisible( controller ) and not GameEnded( controller ) and not CoD.CodCasterUtility.CodCasterIsInAerialCam( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], @"hash_0", nil, "S" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( self, f1_arg1, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], "V", function ( element, menu, controller, model )
		if not CoD.ModelUtility.IsModelValueTrue( controller, "CodCaster.showKeyboard" ) and not IsVisibilityBitSet( controller, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) then
			ToggleControllerModelValueBoolean( controller, "CodCaster.showKeyboard" ) --[[ @ 0]]
			CoD.ScoreboardUtility.HideScoreboard( menu, controller ) --[[ @ 0]]
			return true
		elseif not IsVisibilityBitSet( controller, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) then
			ToggleControllerModelValueBoolean( controller, "CodCaster.showKeyboard" ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not CoD.ModelUtility.IsModelValueTrue( controller, "CodCaster.showKeyboard" ) and not IsVisibilityBitSet( controller, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], @"hash_0", nil, "V" ) --[[ @ 0]]
			return false
		elseif not IsVisibilityBitSet( controller, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], @"hash_0", nil, "V" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self.__on_menuOpened_self = function ( f159_arg0, f159_arg1, f159_arg2, f159_arg3 )
		local f159_local0 = self --[[ @ 0]]
		UpdateSelfState( self, f159_arg1 ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	f1_arg0:addMenuOpenedCallback( self.__on_menuOpened_self ) --[[ @ 0]]
	self:subscribeToGlobalModel( f1_arg1, "PerController", "deadSpectator.playerIndex", function ( model )
		local f160_local0 = self --[[ @ 0]]
		CoD.CodCasterUtility.SetLoadoutElementsTextWithDelay( self, f1_arg0, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:subscribeToGlobalModel( f1_arg1, "PerController", "playerAbilities.playerGadget2.name", function ( model )
		local f161_local0 = self --[[ @ 0]]
		CoD.CodCasterUtility.SetLoadoutElementsText( self, f1_arg0, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:subscribeToGlobalModel( f1_arg1, "PerController", "primaryWeapon.itemIndex", function ( model )
		local f162_local0 = self --[[ @ 0]]
		CoD.CodCasterUtility.SetLoadoutElementsText( self, f1_arg0, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:subscribeToGlobalModel( f1_arg1, "PerController", "secondaryWeapon.indexIndex", function ( model )
		local f163_local0 = self --[[ @ 0]]
		CoD.CodCasterUtility.SetLoadoutElementsText( self, f1_arg0, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:subscribeToGlobalModel( f1_arg1, "PerController", "primaryWeapon.attachmentCount", function ( model )
		local f164_local0 = self --[[ @ 0]]
		CoD.CodCasterUtility.SetLoadoutElementsText( self, f1_arg0, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:subscribeToGlobalModel( f1_arg1, "PerController", "secondaryWeapon.attachmentCount", function ( model )
		local f165_local0 = self --[[ @ 0]]
		CoD.CodCasterUtility.SetLoadoutElementsText( self, f1_arg0, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:subscribeToGlobalModel( f1_arg1, "PerController", "hudItems.safeAreaUpdated", function ( model )
		local f166_local0 = self --[[ @ 0]]
		if IsPC() then
			SizeToHudArea( f166_local0, f1_arg1 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	CodCasterPortraitPlayerList.id = "CodCasterPortraitPlayerList" --[[ @ 0]]
	CodCasterPlayerList.id = "CodCasterPlayerList" --[[ @ 0]]
	CodCasterLoadoutTalents.id = "CodCasterLoadoutTalents" --[[ @ 0]]
	CodCasterLoadoutPrimary.id = "CodCasterLoadoutPrimary" --[[ @ 0]]
	CodCasterLoadoutSecondary.id = "CodCasterLoadoutSecondary" --[[ @ 0]]
	CodCasterButtonBar:appendEventHandler( "menu_loaded", function ()
		CodCasterButtonBar:setModel( f1_arg0.buttonModel, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	if CoD.isPC then
		CodCasterButtonBar.id = "CodCasterButtonBar" --[[ @ 0]]
	end
	self.__on_close_removeOverrides = function ()
		f1_arg0:removeMenuOpenedCallback( self.__on_menuOpened_self ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	f1_local15 = self --[[ @ 0]]
	CoD.CodCasterUtility.PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	return self
end
 --[[ @ 0]]
CoD.CodCaster.__resetProperties = function ( f169_arg0 )
	f169_arg0.CodCasterLoadoutTalents:completeAnimation() --[[ @ 0]]
	f169_arg0.CodCasterLoadoutPrimary:completeAnimation() --[[ @ 0]]
	f169_arg0.CodCasterButtonBar:completeAnimation() --[[ @ 0]]
	f169_arg0.OverheadMap:completeAnimation() --[[ @ 0]]
	f169_arg0.CodCasterPortraitPlayerList:completeAnimation() --[[ @ 0]]
	f169_arg0.CodCasterHeaderNonTeamBased:completeAnimation() --[[ @ 0]]
	f169_arg0.CodCasterPortraitTeamScoreBoard:completeAnimation() --[[ @ 0]]
	f169_arg0.CodCasterKeyboard:completeAnimation() --[[ @ 0]]
	f169_arg0.CodCasterAnnouncementFeed:completeAnimation() --[[ @ 0]]
	f169_arg0.CodCasterObjectiveStatus:completeAnimation() --[[ @ 0]]
	f169_arg0.CodCasterPlayerList:completeAnimation() --[[ @ 0]]
	f169_arg0.CodCasterLoadoutSecondary:completeAnimation() --[[ @ 0]]
	f169_arg0.CodCasterPortraitPlayerCard:completeAnimation() --[[ @ 0]]
	f169_arg0.CodCasterLoadoutTalents:setAlpha( 0 ) --[[ @ 0]]
	f169_arg0.CodCasterLoadoutPrimary:setAlpha( 0 ) --[[ @ 0]]
	f169_arg0.CodCasterButtonBar:setAlpha( 1 ) --[[ @ 0]]
	f169_arg0.OverheadMap:setAlpha( 1 ) --[[ @ 0]]
	f169_arg0.CodCasterPortraitPlayerList:setTopBottom( 0, 0, 28, 173 ) --[[ @ 0]]
	f169_arg0.CodCasterPortraitPlayerList:setAlpha( 1 ) --[[ @ 0]]
	f169_arg0.CodCasterHeaderNonTeamBased:setAlpha( 0 ) --[[ @ 0]]
	f169_arg0.CodCasterPortraitTeamScoreBoard:setAlpha( 1 ) --[[ @ 0]]
	f169_arg0.CodCasterKeyboard:setAlpha( 1 ) --[[ @ 0]]
	f169_arg0.CodCasterAnnouncementFeed:setAlpha( 1 ) --[[ @ 0]]
	f169_arg0.CodCasterObjectiveStatus:setAlpha( 1 ) --[[ @ 0]]
	f169_arg0.CodCasterPlayerList:setAlpha( 1 ) --[[ @ 0]]
	f169_arg0.CodCasterLoadoutSecondary:setAlpha( 0 ) --[[ @ 0]]
	f169_arg0.CodCasterPortraitPlayerCard:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.CodCaster.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f170_arg0, f170_arg1 )
			f170_arg0:__resetProperties() --[[ @ 0]]
			f170_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f170_arg0.CodCasterLoadoutTalents:completeAnimation() --[[ @ 0]]
			f170_arg0.CodCasterLoadoutTalents:setAlpha( 0 ) --[[ @ 0]]
			f170_arg0.clipFinished( f170_arg0.CodCasterLoadoutTalents ) --[[ @ 0]]
			f170_arg0.CodCasterLoadoutPrimary:completeAnimation() --[[ @ 0]]
			f170_arg0.CodCasterLoadoutPrimary:setAlpha( 0 ) --[[ @ 0]]
			f170_arg0.clipFinished( f170_arg0.CodCasterLoadoutPrimary ) --[[ @ 0]]
		end
	},
	Hidden = {
		DefaultClip = function ( f171_arg0, f171_arg1 )
			f171_arg0:__resetProperties() --[[ @ 0]]
			f171_arg0:setupElementClipCounter( 6 ) --[[ @ 0]]
			f171_arg0.OverheadMap:completeAnimation() --[[ @ 0]]
			f171_arg0.OverheadMap:setAlpha( 0 ) --[[ @ 0]]
			f171_arg0.clipFinished( f171_arg0.OverheadMap ) --[[ @ 0]]
			f171_arg0.CodCasterHeaderNonTeamBased:completeAnimation() --[[ @ 0]]
			f171_arg0.CodCasterHeaderNonTeamBased:setAlpha( 0 ) --[[ @ 0]]
			f171_arg0.clipFinished( f171_arg0.CodCasterHeaderNonTeamBased ) --[[ @ 0]]
			f171_arg0.CodCasterPortraitPlayerList:completeAnimation() --[[ @ 0]]
			f171_arg0.CodCasterPortraitPlayerList:setAlpha( 0 ) --[[ @ 0]]
			f171_arg0.clipFinished( f171_arg0.CodCasterPortraitPlayerList ) --[[ @ 0]]
			f171_arg0.CodCasterPortraitTeamScoreBoard:completeAnimation() --[[ @ 0]]
			f171_arg0.CodCasterPortraitTeamScoreBoard:setAlpha( 0 ) --[[ @ 0]]
			f171_arg0.clipFinished( f171_arg0.CodCasterPortraitTeamScoreBoard ) --[[ @ 0]]
			f171_arg0.CodCasterButtonBar:completeAnimation() --[[ @ 0]]
			f171_arg0.CodCasterButtonBar:setAlpha( 0 ) --[[ @ 0]]
			f171_arg0.clipFinished( f171_arg0.CodCasterButtonBar ) --[[ @ 0]]
			f171_arg0.CodCasterKeyboard:completeAnimation() --[[ @ 0]]
			f171_arg0.CodCasterKeyboard:setAlpha( 0 ) --[[ @ 0]]
			f171_arg0.clipFinished( f171_arg0.CodCasterKeyboard ) --[[ @ 0]]
		end
	},
	HiddenCopy = {
		DefaultClip = function ( f172_arg0, f172_arg1 )
			f172_arg0:__resetProperties() --[[ @ 0]]
			f172_arg0:setupElementClipCounter( 13 ) --[[ @ 0]]
			f172_arg0.OverheadMap:completeAnimation() --[[ @ 0]]
			f172_arg0.OverheadMap:setAlpha( 0 ) --[[ @ 0]]
			f172_arg0.clipFinished( f172_arg0.OverheadMap ) --[[ @ 0]]
			f172_arg0.CodCasterHeaderNonTeamBased:completeAnimation() --[[ @ 0]]
			f172_arg0.CodCasterHeaderNonTeamBased:setAlpha( 0 ) --[[ @ 0]]
			f172_arg0.clipFinished( f172_arg0.CodCasterHeaderNonTeamBased ) --[[ @ 0]]
			f172_arg0.CodCasterPortraitPlayerCard:completeAnimation() --[[ @ 0]]
			f172_arg0.CodCasterPortraitPlayerCard:setAlpha( 0 ) --[[ @ 0]]
			f172_arg0.clipFinished( f172_arg0.CodCasterPortraitPlayerCard ) --[[ @ 0]]
			f172_arg0.CodCasterPortraitPlayerList:completeAnimation() --[[ @ 0]]
			f172_arg0.CodCasterPortraitPlayerList:setTopBottom( 0, 0, 29, 174 ) --[[ @ 0]]
			f172_arg0.CodCasterPortraitPlayerList:setAlpha( 0 ) --[[ @ 0]]
			f172_arg0.clipFinished( f172_arg0.CodCasterPortraitPlayerList ) --[[ @ 0]]
			f172_arg0.CodCasterAnnouncementFeed:completeAnimation() --[[ @ 0]]
			f172_arg0.CodCasterAnnouncementFeed:setAlpha( 0 ) --[[ @ 0]]
			f172_arg0.clipFinished( f172_arg0.CodCasterAnnouncementFeed ) --[[ @ 0]]
			f172_arg0.CodCasterPortraitTeamScoreBoard:completeAnimation() --[[ @ 0]]
			f172_arg0.CodCasterPortraitTeamScoreBoard:setAlpha( 0 ) --[[ @ 0]]
			f172_arg0.clipFinished( f172_arg0.CodCasterPortraitTeamScoreBoard ) --[[ @ 0]]
			f172_arg0.CodCasterObjectiveStatus:completeAnimation() --[[ @ 0]]
			f172_arg0.CodCasterObjectiveStatus:setAlpha( 0 ) --[[ @ 0]]
			f172_arg0.clipFinished( f172_arg0.CodCasterObjectiveStatus ) --[[ @ 0]]
			f172_arg0.CodCasterPlayerList:completeAnimation() --[[ @ 0]]
			f172_arg0.CodCasterPlayerList:setAlpha( 0 ) --[[ @ 0]]
			f172_arg0.clipFinished( f172_arg0.CodCasterPlayerList ) --[[ @ 0]]
			f172_arg0.CodCasterLoadoutTalents:completeAnimation() --[[ @ 0]]
			f172_arg0.CodCasterLoadoutTalents:setAlpha( 0 ) --[[ @ 0]]
			f172_arg0.clipFinished( f172_arg0.CodCasterLoadoutTalents ) --[[ @ 0]]
			f172_arg0.CodCasterLoadoutPrimary:completeAnimation() --[[ @ 0]]
			f172_arg0.CodCasterLoadoutPrimary:setAlpha( 0 ) --[[ @ 0]]
			f172_arg0.clipFinished( f172_arg0.CodCasterLoadoutPrimary ) --[[ @ 0]]
			f172_arg0.CodCasterLoadoutSecondary:completeAnimation() --[[ @ 0]]
			f172_arg0.CodCasterLoadoutSecondary:setAlpha( 0 ) --[[ @ 0]]
			f172_arg0.clipFinished( f172_arg0.CodCasterLoadoutSecondary ) --[[ @ 0]]
			f172_arg0.CodCasterButtonBar:completeAnimation() --[[ @ 0]]
			f172_arg0.CodCasterButtonBar:setAlpha( 0 ) --[[ @ 0]]
			f172_arg0.clipFinished( f172_arg0.CodCasterButtonBar ) --[[ @ 0]]
			f172_arg0.CodCasterKeyboard:completeAnimation() --[[ @ 0]]
			f172_arg0.CodCasterKeyboard:setAlpha( 0 ) --[[ @ 0]]
			f172_arg0.clipFinished( f172_arg0.CodCasterKeyboard ) --[[ @ 0]]
		end
	},
	VisibleLoadoutAndNotTeamBased = {
		DefaultClip = function ( f173_arg0, f173_arg1 )
			f173_arg0:__resetProperties() --[[ @ 0]]
			f173_arg0:setupElementClipCounter( 8 ) --[[ @ 0]]
			f173_arg0.CodCasterHeaderNonTeamBased:completeAnimation() --[[ @ 0]]
			f173_arg0.CodCasterHeaderNonTeamBased:setAlpha( 1 ) --[[ @ 0]]
			f173_arg0.clipFinished( f173_arg0.CodCasterHeaderNonTeamBased ) --[[ @ 0]]
			f173_arg0.CodCasterPortraitPlayerList:completeAnimation() --[[ @ 0]]
			f173_arg0.CodCasterPortraitPlayerList:setAlpha( 0 ) --[[ @ 0]]
			f173_arg0.clipFinished( f173_arg0.CodCasterPortraitPlayerList ) --[[ @ 0]]
			f173_arg0.CodCasterAnnouncementFeed:completeAnimation() --[[ @ 0]]
			f173_arg0.CodCasterAnnouncementFeed:setAlpha( 0 ) --[[ @ 0]]
			f173_arg0.clipFinished( f173_arg0.CodCasterAnnouncementFeed ) --[[ @ 0]]
			f173_arg0.CodCasterPortraitTeamScoreBoard:completeAnimation() --[[ @ 0]]
			f173_arg0.CodCasterPortraitTeamScoreBoard:setAlpha( 0 ) --[[ @ 0]]
			f173_arg0.clipFinished( f173_arg0.CodCasterPortraitTeamScoreBoard ) --[[ @ 0]]
			f173_arg0.CodCasterObjectiveStatus:completeAnimation() --[[ @ 0]]
			f173_arg0.CodCasterObjectiveStatus:setAlpha( 0 ) --[[ @ 0]]
			f173_arg0.clipFinished( f173_arg0.CodCasterObjectiveStatus ) --[[ @ 0]]
			f173_arg0.CodCasterLoadoutTalents:completeAnimation() --[[ @ 0]]
			f173_arg0.CodCasterLoadoutTalents:setAlpha( 1 ) --[[ @ 0]]
			f173_arg0.clipFinished( f173_arg0.CodCasterLoadoutTalents ) --[[ @ 0]]
			f173_arg0.CodCasterLoadoutPrimary:completeAnimation() --[[ @ 0]]
			f173_arg0.CodCasterLoadoutPrimary:setAlpha( 1 ) --[[ @ 0]]
			f173_arg0.clipFinished( f173_arg0.CodCasterLoadoutPrimary ) --[[ @ 0]]
			f173_arg0.CodCasterLoadoutSecondary:completeAnimation() --[[ @ 0]]
			f173_arg0.CodCasterLoadoutSecondary:setAlpha( 1 ) --[[ @ 0]]
			f173_arg0.clipFinished( f173_arg0.CodCasterLoadoutSecondary ) --[[ @ 0]]
		end
	},
	VisibleLoadout = {
		DefaultClip = function ( f174_arg0, f174_arg1 )
			f174_arg0:__resetProperties() --[[ @ 0]]
			f174_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f174_arg0.CodCasterLoadoutTalents:completeAnimation() --[[ @ 0]]
			f174_arg0.CodCasterLoadoutTalents:setAlpha( 1 ) --[[ @ 0]]
			f174_arg0.clipFinished( f174_arg0.CodCasterLoadoutTalents ) --[[ @ 0]]
			f174_arg0.CodCasterLoadoutPrimary:completeAnimation() --[[ @ 0]]
			f174_arg0.CodCasterLoadoutPrimary:setAlpha( 1 ) --[[ @ 0]]
			f174_arg0.clipFinished( f174_arg0.CodCasterLoadoutPrimary ) --[[ @ 0]]
			f174_arg0.CodCasterLoadoutSecondary:completeAnimation() --[[ @ 0]]
			f174_arg0.CodCasterLoadoutSecondary:setAlpha( 1 ) --[[ @ 0]]
			f174_arg0.clipFinished( f174_arg0.CodCasterLoadoutSecondary ) --[[ @ 0]]
		end
	},
	NotTeamBased = {
		DefaultClip = function ( f175_arg0, f175_arg1 )
			f175_arg0:__resetProperties() --[[ @ 0]]
			f175_arg0:setupElementClipCounter( 5 ) --[[ @ 0]]
			f175_arg0.CodCasterHeaderNonTeamBased:completeAnimation() --[[ @ 0]]
			f175_arg0.CodCasterHeaderNonTeamBased:setAlpha( 1 ) --[[ @ 0]]
			f175_arg0.clipFinished( f175_arg0.CodCasterHeaderNonTeamBased ) --[[ @ 0]]
			f175_arg0.CodCasterPortraitPlayerList:completeAnimation() --[[ @ 0]]
			f175_arg0.CodCasterPortraitPlayerList:setAlpha( 0 ) --[[ @ 0]]
			f175_arg0.clipFinished( f175_arg0.CodCasterPortraitPlayerList ) --[[ @ 0]]
			f175_arg0.CodCasterAnnouncementFeed:completeAnimation() --[[ @ 0]]
			f175_arg0.CodCasterAnnouncementFeed:setAlpha( 0 ) --[[ @ 0]]
			f175_arg0.clipFinished( f175_arg0.CodCasterAnnouncementFeed ) --[[ @ 0]]
			f175_arg0.CodCasterPortraitTeamScoreBoard:completeAnimation() --[[ @ 0]]
			f175_arg0.CodCasterPortraitTeamScoreBoard:setAlpha( 0 ) --[[ @ 0]]
			f175_arg0.clipFinished( f175_arg0.CodCasterPortraitTeamScoreBoard ) --[[ @ 0]]
			f175_arg0.CodCasterObjectiveStatus:completeAnimation() --[[ @ 0]]
			f175_arg0.CodCasterObjectiveStatus:setAlpha( 0 ) --[[ @ 0]]
			f175_arg0.clipFinished( f175_arg0.CodCasterObjectiveStatus ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.CodCaster.__onClose = function ( f176_arg0 )
	f176_arg0.__on_close_removeOverrides() --[[ @ 0]]
	f176_arg0.OverheadMap:close() --[[ @ 0]]
	f176_arg0.waitingForPlayers:close() --[[ @ 0]]
	f176_arg0.CodCasterHeaderNonTeamBased:close() --[[ @ 0]]
	f176_arg0.CodCasterPortraitPlayerCard:close() --[[ @ 0]]
	f176_arg0.CodCasterPortraitPlayerList:close() --[[ @ 0]]
	f176_arg0.CodCasterAnnouncementFeed:close() --[[ @ 0]]
	f176_arg0.CodCasterPortraitTeamScoreBoard:close() --[[ @ 0]]
	f176_arg0.CodCasterObjectiveStatus:close() --[[ @ 0]]
	f176_arg0.CodCasterPlayerList:close() --[[ @ 0]]
	f176_arg0.CodCasterLoadoutTalents:close() --[[ @ 0]]
	f176_arg0.CodCasterLoadoutPrimary:close() --[[ @ 0]]
	f176_arg0.CodCasterLoadoutSecondary:close() --[[ @ 0]]
	f176_arg0.CodCasterButtonBar:close() --[[ @ 0]]
	f176_arg0.CodCasterKeyboard:close() --[[ @ 0]]
	f176_arg0.CodCasterMiniMapPosition:close() --[[ @ 0]]
end
 --[[ @ 0]]
