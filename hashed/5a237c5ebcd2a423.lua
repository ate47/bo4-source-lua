-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
CoD.AmmoWidget_AbilityContainer = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.AmmoWidget_AbilityContainer.__defaultWidth = 92 --[[ @ 0]]
CoD.AmmoWidget_AbilityContainer.__defaultHeight = 44 --[[ @ 0]]
CoD.AmmoWidget_AbilityContainer.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.AmmoWidget_AbilityContainer ) --[[ @ 0]]
	self.id = "AmmoWidget_AbilityContainer" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local BlurPanel = LUI.UIImage.new( 0, 0, -6, 114, 0, 0, -3, 45 ) --[[ @ 0]]
	BlurPanel:setImage( RegisterImage( @"hash_47B36897EA2EA839" ) ) --[[ @ 0]]
	BlurPanel:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_E2354BE557C4C7A" ) ) --[[ @ 0]]
	BlurPanel:setShaderVector( 0, 0, 0.07, 0, 0 ) --[[ @ 0]]
	self:addElement( BlurPanel ) --[[ @ 0]]
	self.BlurPanel = BlurPanel --[[ @ 0]]
	
	local BlurPanelTint = LUI.UIImage.new( 0, 0, -6, 114, 0, 0, -3, 45 ) --[[ @ 0]]
	BlurPanelTint:setRGB( 0, 0, 0 ) --[[ @ 0]]
	BlurPanelTint:setAlpha( 0.2 ) --[[ @ 0]]
	BlurPanelTint:setImage( RegisterImage( @"hash_47B36897EA2EA839" ) ) --[[ @ 0]]
	self:addElement( BlurPanelTint ) --[[ @ 0]]
	self.BlurPanelTint = BlurPanelTint --[[ @ 0]]
	
	local EquipmentEmpty = LUI.UIImage.new( 0, 1, 0, 0, 0, 0, 0, 44 ) --[[ @ 0]]
	EquipmentEmpty:setRGB( 0, 0, 0 ) --[[ @ 0]]
	EquipmentEmpty:setAlpha( 0 ) --[[ @ 0]]
	EquipmentEmpty:setImage( RegisterImage( @"hash_6E06EE06576BABAB" ) ) --[[ @ 0]]
	EquipmentEmpty:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_normal" ) ) --[[ @ 0]]
	EquipmentEmpty:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	EquipmentEmpty:setupNineSliceShader( 46, 22 ) --[[ @ 0]]
	self:addElement( EquipmentEmpty ) --[[ @ 0]]
	self.EquipmentEmpty = EquipmentEmpty --[[ @ 0]]
	
	local EquipmentBacking = LUI.UIImage.new( 0, 1, 0, 0, 0, 0, 0, 44 ) --[[ @ 0]]
	EquipmentBacking:setRGB( 0, 0, 0 ) --[[ @ 0]]
	EquipmentBacking:setAlpha( 0 ) --[[ @ 0]]
	EquipmentBacking:setImage( RegisterImage( @"hash_3D9FA23761E74CB" ) ) --[[ @ 0]]
	EquipmentBacking:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_normal" ) ) --[[ @ 0]]
	EquipmentBacking:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	EquipmentBacking:setupNineSliceShader( 46, 22 ) --[[ @ 0]]
	self:addElement( EquipmentBacking ) --[[ @ 0]]
	self.EquipmentBacking = EquipmentBacking --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Campaign",
			condition = function ( menu, element, event )
				return IsCampaign()
			end
		}
	} ) --[[ @ 0]]
	local f1_local5 = self --[[ @ 0]]
	local f1_local6 = self.subscribeToModel --[[ @ 0]]
	local f1_local7 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local6( f1_local5, f1_local7["lobbyRoot.lobbyNav"], function ( f3_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f3_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
