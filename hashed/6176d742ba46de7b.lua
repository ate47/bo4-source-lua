-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
CoD.WeaponBribeSelectionTimer = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.WeaponBribeSelectionTimer.__defaultWidth = 1111 --[[ @ 0]]
CoD.WeaponBribeSelectionTimer.__defaultHeight = 33 --[[ @ 0]]
CoD.WeaponBribeSelectionTimer.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.WeaponBribeSelectionTimer ) --[[ @ 0]]
	self.id = "WeaponBribeSelectionTimer" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local TimerText = LUI.UIText.new( 0.5, 0.5, -555.5, 555.5, 0.5, 0.5, -16.5, 16.5 ) --[[ @ 0]]
	TimerText:setRGB( ColorSet.StoreAvailabilityTimer.r, ColorSet.StoreAvailabilityTimer.g, ColorSet.StoreAvailabilityTimer.b ) --[[ @ 0]]
	TimerText:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	TimerText:setLetterSpacing( 2 ) --[[ @ 0]]
	TimerText:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	TimerText:subscribeToGlobalModel( f1_arg1, "BribeMenuTimer", "bribe_menu_timer", function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			TimerText:setText( ToUpper( LocalizeIntoString( @"hash_5AC0D5F97E5CC643", f2_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( TimerText ) --[[ @ 0]]
	self.TimerText = TimerText --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return IsBooleanDvarSet( "loot_weaponBribeMultiPurchaseActive" )
			end
		}
	} ) --[[ @ 0]]
	self:subscribeToGlobalModel( f1_arg1, "BribeMenuTimer", "cycled", function ( model )
		local f4_local0 = self --[[ @ 0]]
		if CoD.ModelUtility.IsGlobalDataSourceModelValueTrue( f1_arg1, "BribeMenuTimer", "cycled" ) then
			UpdateSelfElementState( f1_arg0, f4_local0, f1_arg1 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.WeaponBribeSelectionTimer.__resetProperties = function ( f5_arg0 )
	f5_arg0.TimerText:completeAnimation() --[[ @ 0]]
	f5_arg0.TimerText:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.WeaponBribeSelectionTimer.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f6_arg0, f6_arg1 )
			f6_arg0:__resetProperties() --[[ @ 0]]
			f6_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	Hidden = {
		DefaultClip = function ( f7_arg0, f7_arg1 )
			f7_arg0:__resetProperties() --[[ @ 0]]
			f7_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f7_arg0.TimerText:completeAnimation() --[[ @ 0]]
			f7_arg0.TimerText:setAlpha( 0 ) --[[ @ 0]]
			f7_arg0.clipFinished( f7_arg0.TimerText ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.WeaponBribeSelectionTimer.__onClose = function ( f8_arg0 )
	f8_arg0.TimerText:close() --[[ @ 0]]
end
 --[[ @ 0]]
