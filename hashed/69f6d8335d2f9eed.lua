-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:50
require( "x64:6e6df4068375d284" ) --[[ @ 0]]
require( "x64:737ed89902d7e13c" ) --[[ @ 0]]

CoD.StartMenu_QuitButtonFitted = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.StartMenu_QuitButtonFitted.__defaultWidth = 240 --[[ @ 0]]
CoD.StartMenu_QuitButtonFitted.__defaultHeight = 75 --[[ @ 0]]
CoD.StartMenu_QuitButtonFitted.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.StartMenu_QuitButtonFitted ) --[[ @ 0]]
	self.id = "StartMenu_QuitButtonFitted" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local DirectorGenericButton = CoD.DirectorGenericButton.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	DirectorGenericButton.DirectorSelectButtonMiniInternal.MiddleText:setText( LocalizeToUpperString( @"hash_0" ) ) --[[ @ 0]]
	DirectorGenericButton.DirectorSelectButtonMiniInternal.MiddleTextFocus:setText( LocalizeToUpperString( @"hash_0" ) ) --[[ @ 0]]
	self:addElement( DirectorGenericButton ) --[[ @ 0]]
	self.DirectorGenericButton = DirectorGenericButton --[[ @ 0]]
	
	local HoldButtonFill = CoD.StartMenu_QuitButtonFill.new( f1_arg0, f1_arg1, 0, 1, 2, -2, 0, 1, 11, -11 ) --[[ @ 0]]
	HoldButtonFill:mergeStateConditions( {
		{
			stateName = "Playing",
			condition = function ( menu, element, event )
				local f2_local0 --[[ @ 0]]
				if not CoD.ModelUtility.IsSelfModelPathValueEqualTo( element, f1_arg1, "buttonBit->progress", 0 ) then
					f2_local0 = CoD.BaseUtility.DoesElementOrChildHaveFocus( self, "DirectorGenericButton" ) --[[ @ 0]]
				else
					f2_local0 = false --[[ @ 0]]
				end
				return f2_local0
			end
		}
	} ) --[[ @ 0]]
	HoldButtonFill:linkToElementModel( HoldButtonFill, "buttonBit", true, function ( model )
		if HoldButtonFill["__stateValidation_buttonBit->progress"] then
			HoldButtonFill:removeSubscription( HoldButtonFill["__stateValidation_buttonBit->progress"] ) --[[ @ 0]]
			HoldButtonFill["__stateValidation_buttonBit->progress"] = nil --[[ @ 0]]
		end
		if model then
			local f3_local0 = model:get() --[[ @ 0]]
			local f3_local1 = model:get() --[[ @ 0]]
			model = f3_local0 and f3_local1.progress --[[ @ 0]]
		end
		if model then
			HoldButtonFill["__stateValidation_buttonBit->progress"] = HoldButtonFill:subscribeToModel( model, function ( model )
				f1_arg0:updateElementState( HoldButtonFill, {
					name = "model_validation",
					menu = f1_arg0,
					controller = f1_arg1,
					modelValue = model:get(),
					modelName = "buttonBit->progress"
				} ) --[[ @ 0]]
			end ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	HoldButtonFill:appendEventHandler( "record_curr_focused_elem_id", function ( f5_arg0, f5_arg1 )
		f5_arg1.menu = f5_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( HoldButtonFill, f5_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	HoldButtonFill:setAlpha( 0 ) --[[ @ 0]]
	HoldButtonFill:linkToElementModel( self, "" .. Enum[@"luibutton"][@"lui_key_xba_pscross"], false, function ( model )
		HoldButtonFill:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( HoldButtonFill ) --[[ @ 0]]
	self.HoldButtonFill = HoldButtonFill --[[ @ 0]]
	
	local TextBox = LUI.UIText.new( 0.5, 0.5, -125, 125, 0.5, 0.5, -12, 12 ) --[[ @ 0]]
	TextBox:setRGB( ColorSet.T8__BIEGE.r, ColorSet.T8__BIEGE.g, ColorSet.T8__BIEGE.b ) --[[ @ 0]]
	TextBox:setText( LocalizeToUpperString( @"menu/quit_game" ) ) --[[ @ 0]]
	TextBox:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	TextBox:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_2AE166D9BA8C6907" ) ) --[[ @ 0]]
	TextBox:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	TextBox:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	TextBox:setShaderVector( 2, 1, 0, 0, 0 ) --[[ @ 0]]
	TextBox:setLetterSpacing( 3 ) --[[ @ 0]]
	TextBox:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	TextBox:setAlignment( Enum[@"luialignment"][@"lui_alignment_middle"] ) --[[ @ 0]]
	self:addElement( TextBox ) --[[ @ 0]]
	self.TextBox = TextBox --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "EndGame",
			condition = function ( menu, element, event )
				local f7_local0 = IsLobbyHost() --[[ @ 0]]
				if f7_local0 then
					if not IsOnlineGame() and not InFrontend() and not IsDemoPlaying() then
						f7_local0 = IsGamepad( f1_arg1 ) --[[ @ 0]]
					else
						f7_local0 = false --[[ @ 0]]
					end
				end
				return f7_local0
			end
		}
	} ) --[[ @ 0]]
	self:appendEventHandler( "on_session_start", function ( f8_arg0, f8_arg1 )
		f8_arg1.menu = f8_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( self, f8_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:appendEventHandler( "on_session_end", function ( f9_arg0, f9_arg1 )
		f9_arg1.menu = f9_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( self, f9_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:appendEventHandler( "input_source_changed", function ( f10_arg0, f10_arg1 )
		f10_arg1.menu = f10_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( self, f10_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local f1_local4 = self --[[ @ 0]]
	local f1_local5 = self.subscribeToModel --[[ @ 0]]
	local f1_local6 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local5( f1_local4, f1_local6.LastInput, function ( f11_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f11_arg0:get(),
			modelName = "LastInput"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	DirectorGenericButton.id = "DirectorGenericButton" --[[ @ 0]]
	self.__defaultFocus = DirectorGenericButton --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.StartMenu_QuitButtonFitted.__resetProperties = function ( f12_arg0 )
	f12_arg0.HoldButtonFill:completeAnimation() --[[ @ 0]]
	f12_arg0.TextBox:completeAnimation() --[[ @ 0]]
	f12_arg0.HoldButtonFill:setAlpha( 0 ) --[[ @ 0]]
	f12_arg0.TextBox:setRGB( ColorSet.T8__BIEGE.r, ColorSet.T8__BIEGE.g, ColorSet.T8__BIEGE.b ) --[[ @ 0]]
	f12_arg0.TextBox:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	f12_arg0.TextBox:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	f12_arg0.TextBox:setShaderVector( 2, 1, 0, 0, 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.StartMenu_QuitButtonFitted.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f13_arg0, f13_arg1 )
			f13_arg0:__resetProperties() --[[ @ 0]]
			f13_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f13_arg0.DirectorGenericButton:completeAnimation() --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.DirectorGenericButton ) --[[ @ 0]]
		end,
		ChildFocus = function ( f14_arg0, f14_arg1 )
			f14_arg0:__resetProperties() --[[ @ 0]]
			f14_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f14_arg0.DirectorGenericButton:completeAnimation() --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.DirectorGenericButton ) --[[ @ 0]]
			f14_arg0.HoldButtonFill:completeAnimation() --[[ @ 0]]
			f14_arg0.HoldButtonFill:setAlpha( 1 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.HoldButtonFill ) --[[ @ 0]]
			f14_arg0.TextBox:completeAnimation() --[[ @ 0]]
			f14_arg0.TextBox:setRGB( 0, 0, 0 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.TextBox ) --[[ @ 0]]
		end
	},
	EndGame = {
		DefaultClip = function ( f15_arg0, f15_arg1 )
			f15_arg0:__resetProperties() --[[ @ 0]]
			f15_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f15_arg0.DirectorGenericButton:completeAnimation() --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.DirectorGenericButton ) --[[ @ 0]]
		end,
		ChildFocus = function ( f16_arg0, f16_arg1 )
			f16_arg0:__resetProperties() --[[ @ 0]]
			f16_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f16_arg0.DirectorGenericButton:completeAnimation() --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.DirectorGenericButton ) --[[ @ 0]]
			f16_arg0.HoldButtonFill:completeAnimation() --[[ @ 0]]
			f16_arg0.HoldButtonFill:setAlpha( 1 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.HoldButtonFill ) --[[ @ 0]]
			f16_arg0.TextBox:completeAnimation() --[[ @ 0]]
			f16_arg0.TextBox:setRGB( 0, 0, 0 ) --[[ @ 0]]
			f16_arg0.TextBox:setShaderVector( 0, 0.1, 0, 0, 0 ) --[[ @ 0]]
			f16_arg0.TextBox:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
			f16_arg0.TextBox:setShaderVector( 2, 1, 0, 0, 0 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.TextBox ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.StartMenu_QuitButtonFitted.__onClose = function ( f17_arg0 )
	f17_arg0.DirectorGenericButton:close() --[[ @ 0]]
	f17_arg0.HoldButtonFill:close() --[[ @ 0]]
end
 --[[ @ 0]]
