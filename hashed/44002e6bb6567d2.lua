-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
require( "x64:6c12626f56e6eb65" ) --[[ @ 0]]
require( "x64:14bd876d3a2730a" ) --[[ @ 0]]
require( "ui/uieditor/widgets/backgroundframes/genericmenuframe" ) --[[ @ 0]]
require( "x64:471d2a0ed724628e" ) --[[ @ 0]]
require( "x64:de2199ef19d9304" ) --[[ @ 0]]
require( "x64:67fcf708ed5e2cb1" ) --[[ @ 0]]
require( "x64:1075a9f83b5ec1af" ) --[[ @ 0]]
require( "x64:7c16487fea5a0141" ) --[[ @ 0]]
require( "x64:1b1264dcdcf2dd99" ) --[[ @ 0]]
require( "x64:460e92f4004e2d3d" ) --[[ @ 0]]
require( "x64:9f5fd294aba0edc" ) --[[ @ 0]]
require( "x64:4e7a9f9500d0792b" ) --[[ @ 0]]
require( "ui/uieditor/widgets/startmenu/options/startmenuoptionsbackground" ) --[[ @ 0]]

CoD.Prestige_PlayerLevel = InheritFrom( CoD.Menu ) --[[ @ 0]]
LUI.createMenu.Prestige_PlayerLevel = function ( f1_arg0, f1_arg1 )
	local self = CoD.Menu.NewForUIEditor( "Prestige_PlayerLevel", f1_arg0 ) --[[ @ 0]]
	local f1_local1 = self --[[ @ 0]]
	CoD.StartMenuUtility.SetModeForStartMenu( f1_local1 ) --[[ @ 0]]
	CoD.StartMenuUtility.SetStorageBufferForMenu( f1_local1, f1_arg0 ) --[[ @ 0]]
	CoD.PrestigeUtility.CreatePermanentUnlockTokenModel( f1_arg0 ) --[[ @ 0]]
	self:setClass( CoD.Prestige_PlayerLevel ) --[[ @ 0]]
	self.soundSet = "FrontendMain" --[[ @ 0]]
	self:setOwner( f1_arg0 ) --[[ @ 0]]
	self:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	self:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	self:playSound( "menu_open", f1_arg0 ) --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_local1:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local Background = CoD.StartMenuOptionsBackground.new( f1_local1, f1_arg0, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	self:addElement( Background ) --[[ @ 0]]
	self.Background = Background --[[ @ 0]]
	
	local BlackBacking = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	BlackBacking:setRGB( 0, 0, 0 ) --[[ @ 0]]
	BlackBacking:setAlpha( 0.15 ) --[[ @ 0]]
	self:addElement( BlackBacking ) --[[ @ 0]]
	self.BlackBacking = BlackBacking --[[ @ 0]]
	
	local TiledPlusGrid = LUI.UIImage.new( 0, 1.07, -135, -135, 0, 1, 0, 0 ) --[[ @ 0]]
	TiledPlusGrid:setAlpha( 0.05 ) --[[ @ 0]]
	TiledPlusGrid:setImage( RegisterImage( @"uie_ui_hud_vehicle_hellstorm_repeat_plusgrid" ) ) --[[ @ 0]]
	TiledPlusGrid:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_67C9C02F608D0A75" ) ) --[[ @ 0]]
	TiledPlusGrid:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	TiledPlusGrid:setupNineSliceShader( 220, 220 ) --[[ @ 0]]
	self:addElement( TiledPlusGrid ) --[[ @ 0]]
	self.TiledPlusGrid = TiledPlusGrid --[[ @ 0]]
	
	local GenericMenuFrame = CoD.GenericMenuFrame.new( f1_local1, f1_arg0, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	GenericMenuFrame.CommonHeader.subtitle.StageTitle:setText( LocalizeToUpperString( CoD.PrestigeUtility.GetPrestigeMenuTitleString( @"hash_2EB4043431740D3" ) ) ) --[[ @ 0]]
	GenericMenuFrame.CommonHeader.subtitle.subtitle:setText( "" ) --[[ @ 0]]
	self:addElement( GenericMenuFrame ) --[[ @ 0]]
	self.GenericMenuFrame = GenericMenuFrame --[[ @ 0]]
	
	local DetailsPanelMainImage = CoD.Prestige_DetailsPanel.new( f1_local1, f1_arg0, 0.5, 0.5, 432, 831, 0, 0, 347, 878 ) --[[ @ 0]]
	DetailsPanelMainImage:subscribeToGlobalModel( f1_arg0, "PrestigeMenuInfo", "currentHighlightedItem", function ( model )
		DetailsPanelMainImage:setModel( model, f1_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( DetailsPanelMainImage ) --[[ @ 0]]
	self.DetailsPanelMainImage = DetailsPanelMainImage --[[ @ 0]]
	
	local LevelProgress = CoD.Prestige_LevelProgressWidget.new( f1_local1, f1_arg0, 0.5, 0.5, -836, 272, 0, 0, 187, 281 ) --[[ @ 0]]
	self:addElement( LevelProgress ) --[[ @ 0]]
	self.LevelProgress = LevelProgress --[[ @ 0]]
	
	local ArenaProgressWidget = CoD.ArenaProgressWidget.new( f1_local1, f1_arg0, 0.5, 0.5, -839, 271, 0, 0, 147, 347 ) --[[ @ 0]]
	self:addElement( ArenaProgressWidget ) --[[ @ 0]]
	self.ArenaProgressWidget = ArenaProgressWidget --[[ @ 0]]
	
	local PrestigeHeader = CoD.Prestige_PrestigeHeader.new( f1_local1, f1_arg0, 0.5, 0.5, 44, 262, 0, 0, 205, 225 ) --[[ @ 0]]
	PrestigeHeader:setScale( 1.02, 1.02 ) --[[ @ 0]]
	self:addElement( PrestigeHeader ) --[[ @ 0]]
	self.PrestigeHeader = PrestigeHeader --[[ @ 0]]
	
	local RewardsWidget = CoD.Prestige_LevelContentWidget.new( f1_local1, f1_arg0, 0.5, 0.5, -960, 960, 0, 0, 370.5, 900.5 ) --[[ @ 0]]
	self:addElement( RewardsWidget ) --[[ @ 0]]
	self.RewardsWidget = RewardsWidget --[[ @ 0]]
	
	local PrestigeButton = CoD.Prestige_PrestigeButton.new( f1_local1, f1_arg0, 0.5, 0.5, 432, 832, 0, 0, 187, 281 ) --[[ @ 0]]
	PrestigeButton:registerEventHandler( "gain_focus", function ( element, event )
		local f3_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f3_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f3_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f3_local0
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( PrestigeButton, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], nil, function ( element, menu, controller, model )
		if IsAtXPCap( controller ) and not IsMaxPrestigeLevel( controller ) then
			OpenEnterPrestigeModeMenu( self, controller, menu ) --[[ @ 0]]
			PlaySoundAlias( "uin_press_generic" ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsAtXPCap( controller ) and not IsMaxPrestigeLevel( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, nil ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( PrestigeButton ) --[[ @ 0]]
	self.PrestigeButton = PrestigeButton --[[ @ 0]]
	
	local FreshStartButton = CoD.Prestige_PlayerLevelButton.new( f1_local1, f1_arg0, 0.5, 0.5, -832, -486, 0, 0, 911.5, 968.5 ) --[[ @ 0]]
	FreshStartButton:mergeStateConditions( {
		{
			stateName = "TextOnly",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		},
		{
			stateName = "QuantityActive",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		},
		{
			stateName = "IconOnly",
			condition = function ( menu, element, event )
				return CoD.PrestigeUtility.ShowFreshStart( f1_arg0 )
			end
		},
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return not CoD.PrestigeUtility.ShowFreshStart( f1_arg0 )
			end
		},
		{
			stateName = "UnlockTokenIndicator",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		}
	} ) --[[ @ 0]]
	FreshStartButton.CommonButtonOutlineThin.ButtonIcon:setImage( RegisterImage( @"ui_icon_prestige_freshstart" ) ) --[[ @ 0]]
	FreshStartButton.CommonButtonOutlineThin.MainText:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_2F98F72A48A5CFCA" ) ) --[[ @ 0]]
	FreshStartButton:registerEventHandler( "gain_focus", function ( element, event )
		local f11_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f11_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f11_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f11_local0
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( FreshStartButton, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], nil, function ( element, menu, controller, model )
		OpenPrestigeFreshStartMenu( self, controller, menu ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, nil ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	self:addElement( FreshStartButton ) --[[ @ 0]]
	self.FreshStartButton = FreshStartButton --[[ @ 0]]
	
	local PrestigeUnlockTokenIndicatorBar = CoD.Prestige_UnlockTokenIndicatorBar.new( f1_local1, f1_arg0, 0.5, 0.5, -471.5, -125.5, 0, 0, 911.5, 968.5 ) --[[ @ 0]]
	PrestigeUnlockTokenIndicatorBar:subscribeToGlobalModel( f1_arg0, "PerController", "permanentUnlockTokensCount", function ( model )
		local f14_local0 = model:get() --[[ @ 0]]
		if f14_local0 ~= nil then
			PrestigeUnlockTokenIndicatorBar:setAlpha( CoD.PrestigeUtility.HideIfPrestigeMasterOrValueZero( f1_arg0, f14_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	PrestigeUnlockTokenIndicatorBar:subscribeToGlobalModel( f1_arg0, "PerController", "permanentUnlockTokensCount", function ( model )
		local f15_local0 = model:get() --[[ @ 0]]
		if f15_local0 ~= nil then
			PrestigeUnlockTokenIndicatorBar.CountText:setText( f15_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	PrestigeUnlockTokenIndicatorBar:subscribeToGlobalModel( f1_arg0, "PerController", "permanentUnlockTokensCount", function ( model )
		local f16_local0 = model:get() --[[ @ 0]]
		if f16_local0 ~= nil then
			PrestigeUnlockTokenIndicatorBar.MainText:setText( ToUpper( GetPermanentUnlockTokenText( f1_arg0, f16_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( PrestigeUnlockTokenIndicatorBar ) --[[ @ 0]]
	self.PrestigeUnlockTokenIndicatorBar = PrestigeUnlockTokenIndicatorBar --[[ @ 0]]
	
	local CustomizePrestigeIconButton = CoD.Prestige_PlayerLevelButton.new( f1_local1, f1_arg0, 0.5, 0.5, -471.5, -125.5, 0, 0, 911.5, 968.5 ) --[[ @ 0]]
	CustomizePrestigeIconButton:mergeStateConditions( {
		{
			stateName = "TextOnly",
			condition = function ( menu, element, event )
				return CoD.PrestigeUtility.CanCustomizePrestigeIcon( menu, f1_arg0 )
			end
		},
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return not CoD.PrestigeUtility.CanCustomizePrestigeIcon( menu, f1_arg0 )
			end
		}
	} ) --[[ @ 0]]
	CustomizePrestigeIconButton.CommonButtonOutlineThin.MainText:setText( LocalizeToUpperString( @"hash_7754A8D073F00C06" ) ) --[[ @ 0]]
	CustomizePrestigeIconButton:registerEventHandler( "gain_focus", function ( element, event )
		local f19_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f19_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f19_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f19_local0
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( CustomizePrestigeIconButton, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], nil, function ( element, menu, controller, model )
		PlaySoundAlias( "uin_toggle_generic" ) --[[ @ 0]]
		OpenOverlay( self, "Prestige_CustomizeIcon", controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, nil ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	self:addElement( CustomizePrestigeIconButton ) --[[ @ 0]]
	self.CustomizePrestigeIconButton = CustomizePrestigeIconButton --[[ @ 0]]
	
	local PrestigeFanfare = CoD.Prestige_Fanfare.new( f1_local1, f1_arg0, 0.5, 0.5, -350, 350, 0.5, 0.5, -540, 540 ) --[[ @ 0]]
	PrestigeFanfare.PrestigeImage:setImage( RegisterImage( CoD.PlayerStatsUtility.GetNextPrestigeIcon( f1_local1, true, @"t7_icon_rank_mp_level_21" ) ) ) --[[ @ 0]]
	PrestigeFanfare.PrestigeTitle:setText( Engine[@"hash_4F9F1239CFD921FE"]( CoD.PlayerStatsUtility.GetNextPrestigeFanfareText( f1_local1, @"hash_39E3050512D6C49B" ) ) ) --[[ @ 0]]
	PrestigeFanfare.PrestigeTitle2:setText( CoD.PlayerStatsUtility.GetNextPrestigeTitle( f1_local1, @"hash_4910399F02006FB7" ) ) --[[ @ 0]]
	self:addElement( PrestigeFanfare ) --[[ @ 0]]
	self.PrestigeFanfare = PrestigeFanfare --[[ @ 0]]
	
	local PermanentUnlockTokenText = LUI.UIText.new( 0.5, 0.5, -471.5, -125.5, 0, 0, 970.5, 988.5 ) --[[ @ 0]]
	PermanentUnlockTokenText:setRGB( ColorSet.T8__OFF__GRAY.r, ColorSet.T8__OFF__GRAY.g, ColorSet.T8__OFF__GRAY.b ) --[[ @ 0]]
	PermanentUnlockTokenText:setText( Engine[@"hash_4F9F1239CFD921FE"]( CoD.PrestigeUtility.GetPermanentUnlockInfoString( @"hash_5E84CE29A8B160AD" ) ) ) --[[ @ 0]]
	PermanentUnlockTokenText:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	PermanentUnlockTokenText:setLetterSpacing( 1 ) --[[ @ 0]]
	PermanentUnlockTokenText:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	PermanentUnlockTokenText:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	PermanentUnlockTokenText:subscribeToGlobalModel( f1_arg0, "PerController", "permanentUnlockTokensCount", function ( model )
		local f22_local0 = model:get() --[[ @ 0]]
		if f22_local0 ~= nil then
			PermanentUnlockTokenText:setAlpha( CoD.PrestigeUtility.HideIfPrestigeMasterOrValueZero( f1_arg0, f22_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( PermanentUnlockTokenText ) --[[ @ 0]]
	self.PermanentUnlockTokenText = PermanentUnlockTokenText --[[ @ 0]]
	
	local CommonIdentityWidgetStreamlinedSafeAreaContainer = CoD.CommonIdentityWidgetStreamlinedSafeAreaContainer.new( f1_local1, f1_arg0, 0, 0, 0, 1920, 0, 0, 0, 1080 ) --[[ @ 0]]
	CommonIdentityWidgetStreamlinedSafeAreaContainer:registerEventHandler( "menu_loaded", function ( element, event )
		local f23_local0 = nil --[[ @ 0]]
		if element.menuLoaded then
			f23_local0 = element:menuLoaded( event ) --[[ @ 0]]
		elseif element.super.menuLoaded then
			f23_local0 = element.super:menuLoaded( event ) --[[ @ 0]]
		end
		SizeToSafeArea( element, f1_arg0 ) --[[ @ 0]]
		if not f23_local0 then
			f23_local0 = element:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f23_local0
	end ) --[[ @ 0]]
	self:addElement( CommonIdentityWidgetStreamlinedSafeAreaContainer ) --[[ @ 0]]
	self.CommonIdentityWidgetStreamlinedSafeAreaContainer = CommonIdentityWidgetStreamlinedSafeAreaContainer --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "WarzoneState",
			condition = function ( menu, element, event )
				return IsWarzone()
			end
		},
		{
			stateName = "ArenaState",
			condition = function ( menu, element, event )
				return IsArenaMode()
			end
		}
	} ) --[[ @ 0]]
	local f1_local18 = self --[[ @ 0]]
	local f1_local19 = self.subscribeToModel --[[ @ 0]]
	local f1_local20 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local19( f1_local18, f1_local20["lobbyRoot.lobbyNav"], function ( f26_arg0 )
		f1_local1:updateElementState( self, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f26_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"], nil, function ( element, menu, controller, model )
		GoBack( self, controller ) --[[ @ 0]]
		ClearMenuSavedState( menu ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"], @"hash_370A9FDC87CD3D48", nil, nil ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"LUIButton"][@"hash_3D2F467A6C6DA1AC"], "ui_prevtab", function ( element, menu, controller, model )
		if not IsRepeatButtonPress( model ) then
			PlaySoundAlias( "uin_list_horizontal_generic" ) --[[ @ 0]]
			ClearRecordedFocus( menu, controller ) --[[ @ 0]]
			CoD.PrestigeUtility.UpdateCurrentTargetIndex( self, controller, menu, true ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsRepeatButtonPress( nil ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3D2F467A6C6DA1AC"], @"hash_0", nil, "ui_prevtab" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"LUIButton"][@"hash_3820DDD869ABBFAA"], "ui_nexttab", function ( element, menu, controller, model )
		if not IsRepeatButtonPress( model ) then
			PlaySoundAlias( "uin_list_horizontal_generic" ) --[[ @ 0]]
			ClearRecordedFocus( menu, controller ) --[[ @ 0]]
			CoD.PrestigeUtility.UpdateCurrentTargetIndex( self, controller, menu, false ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsRepeatButtonPress( nil ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3820DDD869ABBFAA"], @"hash_0", nil, "ui_nexttab" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], "MWHEELUP", function ( element, menu, controller, model )
		PlaySoundAlias( "uin_list_horizontal_generic" ) --[[ @ 0]]
		ClearRecordedFocus( menu, controller ) --[[ @ 0]]
		CoD.PrestigeUtility.UpdateCurrentTargetIndex( self, controller, menu, true ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], @"hash_0", nil, "MWHEELUP" ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], "MWHEELDOWN", function ( element, menu, controller, model )
		PlaySoundAlias( "uin_list_horizontal_generic" ) --[[ @ 0]]
		ClearRecordedFocus( menu, controller ) --[[ @ 0]]
		CoD.PrestigeUtility.UpdateCurrentTargetIndex( self, controller, menu, false ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], @"hash_0", nil, "MWHEELDOWN" ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	self.__on_menuOpened_self = function ( f37_arg0, f37_arg1, f37_arg2, f37_arg3 )
		local f37_local0 = self --[[ @ 0]]
		CoD.PrestigeUtility.DisplayBetaRewardInventoryNotification( self, f37_arg1, f37_arg2 ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	f1_local1:addMenuOpenedCallback( self.__on_menuOpened_self ) --[[ @ 0]]
	self:subscribeToGlobalModel( f1_arg0, "PrestigeResult", "inprogress", function ( model )
		local f38_local0 = self --[[ @ 0]]
		CoD.PrestigeUtility.OnPrestigeTransactionResultUpdated( self, self.PrestigeFanfare, f1_arg0, model ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:subscribeToGlobalModel( f1_arg0, "PrestigeUnlockResult", "inprogress", function ( model )
		local f39_local0 = self --[[ @ 0]]
		CoD.PrestigeUtility.OnPrestigeUnlockTransactionResultUpdated( self, f1_arg0, model ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:subscribeToGlobalModel( f1_arg0, "PrestigeMenuInfo", "hasPrestiged", function ( model )
		local f40_local0 = self --[[ @ 0]]
		UpdateSelfState( self, f1_arg0 ) --[[ @ 0]]
		CoD.ChallengesUtility.RefreshCategoryStats( f1_arg0, model ) --[[ @ 0]]
		CoD.PrestigeUtility.CreatePermanentUnlockTokenModel( f1_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:subscribeToGlobalModel( f1_arg0, "PrestigeFreshStartResult", "inprogress", function ( model )
		local f41_local0 = self --[[ @ 0]]
		CoD.PrestigeUtility.OnFreshStartTransactionResultUpdated( self, f1_arg0, model ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:subscribeToGlobalModel( f1_arg0, "GlobalModel", "RefreshDWInventoryMenu", function ( model )
		local f42_local0 = self --[[ @ 0]]
		CoD.PrestigeUtility.CreatePermanentUnlockTokenModel( f1_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	if CoD.isPC then
		GenericMenuFrame.id = "GenericMenuFrame" --[[ @ 0]]
	end
	DetailsPanelMainImage.id = "DetailsPanelMainImage" --[[ @ 0]]
	PrestigeHeader.id = "PrestigeHeader" --[[ @ 0]]
	RewardsWidget.id = "RewardsWidget" --[[ @ 0]]
	PrestigeButton.id = "PrestigeButton" --[[ @ 0]]
	FreshStartButton.id = "FreshStartButton" --[[ @ 0]]
	CustomizePrestigeIconButton.id = "CustomizePrestigeIconButton" --[[ @ 0]]
	self:processEvent( {
		name = "menu_loaded",
		controller = f1_arg0
	} ) --[[ @ 0]]
	self.__defaultFocus = RewardsWidget --[[ @ 0]]
	if CoD.isPC and (IsKeyboard( f1_arg0 ) or self.ignoreCursor) then
		self:restoreState( f1_arg0 ) --[[ @ 0]]
	end
	self.__on_close_removeOverrides = function ()
		f1_local1:removeMenuOpenedCallback( self.__on_menuOpened_self ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg0 ) --[[ @ 0]]
	end
	
	f1_local19 = self --[[ @ 0]]
	CoD.PrestigeUtility.InitializePrestigeMenu( self, f1_arg0, f1_local1 ) --[[ @ 0]]
	CoD.FTUEUtility.ShowFTUESequenceIfNotSeen( self, f1_arg0, "WZProgressionInfo" ) --[[ @ 0]]
	return self
end
 --[[ @ 0]]
CoD.Prestige_PlayerLevel.__resetProperties = function ( f44_arg0 )
	f44_arg0.ArenaProgressWidget:completeAnimation() --[[ @ 0]]
	f44_arg0.LevelProgress:completeAnimation() --[[ @ 0]]
	f44_arg0.PrestigeHeader:completeAnimation() --[[ @ 0]]
	f44_arg0.ArenaProgressWidget:setAlpha( 1 ) --[[ @ 0]]
	f44_arg0.LevelProgress:setAlpha( 1 ) --[[ @ 0]]
	f44_arg0.PrestigeHeader:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.Prestige_PlayerLevel.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f45_arg0, f45_arg1 )
			f45_arg0:__resetProperties() --[[ @ 0]]
			f45_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f45_arg0.ArenaProgressWidget:completeAnimation() --[[ @ 0]]
			f45_arg0.ArenaProgressWidget:setAlpha( 0 ) --[[ @ 0]]
			f45_arg0.clipFinished( f45_arg0.ArenaProgressWidget ) --[[ @ 0]]
		end
	},
	WarzoneState = {
		DefaultClip = function ( f46_arg0, f46_arg1 )
			f46_arg0:__resetProperties() --[[ @ 0]]
			f46_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f46_arg0.ArenaProgressWidget:completeAnimation() --[[ @ 0]]
			f46_arg0.ArenaProgressWidget:setAlpha( 0 ) --[[ @ 0]]
			f46_arg0.clipFinished( f46_arg0.ArenaProgressWidget ) --[[ @ 0]]
		end
	},
	ArenaState = {
		DefaultClip = function ( f47_arg0, f47_arg1 )
			f47_arg0:__resetProperties() --[[ @ 0]]
			f47_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f47_arg0.LevelProgress:completeAnimation() --[[ @ 0]]
			f47_arg0.LevelProgress:setAlpha( 0 ) --[[ @ 0]]
			f47_arg0.clipFinished( f47_arg0.LevelProgress ) --[[ @ 0]]
			f47_arg0.PrestigeHeader:completeAnimation() --[[ @ 0]]
			f47_arg0.PrestigeHeader:setAlpha( 0 ) --[[ @ 0]]
			f47_arg0.clipFinished( f47_arg0.PrestigeHeader ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.Prestige_PlayerLevel.__onClose = function ( f48_arg0 )
	f48_arg0.__on_close_removeOverrides() --[[ @ 0]]
	f48_arg0.Background:close() --[[ @ 0]]
	f48_arg0.GenericMenuFrame:close() --[[ @ 0]]
	f48_arg0.DetailsPanelMainImage:close() --[[ @ 0]]
	f48_arg0.LevelProgress:close() --[[ @ 0]]
	f48_arg0.ArenaProgressWidget:close() --[[ @ 0]]
	f48_arg0.PrestigeHeader:close() --[[ @ 0]]
	f48_arg0.RewardsWidget:close() --[[ @ 0]]
	f48_arg0.PrestigeButton:close() --[[ @ 0]]
	f48_arg0.FreshStartButton:close() --[[ @ 0]]
	f48_arg0.PrestigeUnlockTokenIndicatorBar:close() --[[ @ 0]]
	f48_arg0.CustomizePrestigeIconButton:close() --[[ @ 0]]
	f48_arg0.PrestigeFanfare:close() --[[ @ 0]]
	f48_arg0.PermanentUnlockTokenText:close() --[[ @ 0]]
	f48_arg0.CommonIdentityWidgetStreamlinedSafeAreaContainer:close() --[[ @ 0]]
end
 --[[ @ 0]]
