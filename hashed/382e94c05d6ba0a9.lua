-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:33
require( "ui/uieditor/widgets/common/commoncornerpips01" ) --[[ @ 0]]
require( "x64:3bc7ea4f891a4cca" ) --[[ @ 0]]
require( "x64:4f33e5c5610df98" ) --[[ @ 0]]
require( "x64:396b29a3176ada0f" ) --[[ @ 0]]
require( "ui/uieditor/widgets/footer/fe_footerrighslidein" ) --[[ @ 0]]
require( "ui/uieditor/widgets/startmenu/options/startmenuoptionsmainframe" ) --[[ @ 0]]
require( "ui/uieditor/widgets/theater/theater_hinttext" ) --[[ @ 0]]

CoD.PaintjobEditorOptions = InheritFrom( CoD.Menu ) --[[ @ 0]]
LUI.createMenu.PaintjobEditorOptions = function ( f1_arg0, f1_arg1 )
	local self = CoD.Menu.NewForUIEditor( "PaintjobEditorOptions", f1_arg0 ) --[[ @ 0]]
	local f1_local1 = self --[[ @ 0]]
	CoD.CraftUtility.SetSlotCustomizationType( f1_arg0, Enum[@"CustomizationType"][@"hash_64E4802F1ABF1844"] ) --[[ @ 0]]
	CoD.CraftUtility.InvalidateWCItemRenderAction( f1_arg0 ) --[[ @ 0]]
	self:setClass( CoD.PaintjobEditorOptions ) --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self:setOwner( f1_arg0 ) --[[ @ 0]]
	self:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	self:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	self:playSound( "menu_open", f1_arg0 ) --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	
	local Blackfade = LUI.UIImage.new( 0.39, 0.61, -740, 740, 0, 0, 0, 1080 ) --[[ @ 0]]
	Blackfade:setRGB( 0, 0, 0 ) --[[ @ 0]]
	Blackfade:setAlpha( 0.9 ) --[[ @ 0]]
	self:addElement( Blackfade ) --[[ @ 0]]
	self.Blackfade = Blackfade --[[ @ 0]]
	
	local leftBackground = LUI.UIImage.new( 1, 1, -685, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	leftBackground:setRGB( 0, 0, 0 ) --[[ @ 0]]
	leftBackground:setAlpha( 0.98 ) --[[ @ 0]]
	self:addElement( leftBackground ) --[[ @ 0]]
	self.leftBackground = leftBackground --[[ @ 0]]
	
	local NoiseTiledBacking = LUI.UIImage.new( 0, 0, 1235, 1920, 0.09, 0.09, -92, 988 ) --[[ @ 0]]
	NoiseTiledBacking:setAlpha( 0.7 ) --[[ @ 0]]
	NoiseTiledBacking:setImage( RegisterImage( @"uie_ui_menu_specialist_hub_repeat_bg" ) ) --[[ @ 0]]
	NoiseTiledBacking:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_16CBE95C250C6D15" ) ) --[[ @ 0]]
	NoiseTiledBacking:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	NoiseTiledBacking:setupNineSliceShader( 196, 88 ) --[[ @ 0]]
	self:addElement( NoiseTiledBacking ) --[[ @ 0]]
	self.NoiseTiledBacking = NoiseTiledBacking --[[ @ 0]]
	
	local BGOverlay = LUI.UIImage.new( 1, 1, -685, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	BGOverlay:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	BGOverlay:setAlpha( 0.01 ) --[[ @ 0]]
	self:addElement( BGOverlay ) --[[ @ 0]]
	self.BGOverlay = BGOverlay --[[ @ 0]]
	
	local TiledPlusGrid = LUI.UIImage.new( 0, 0, 1146, 1830, 0, 0, -103, 977 ) --[[ @ 0]]
	TiledPlusGrid:setAlpha( 0.1 ) --[[ @ 0]]
	TiledPlusGrid:setImage( RegisterImage( @"uie_ui_hud_vehicle_hellstorm_repeat_plusgrid" ) ) --[[ @ 0]]
	TiledPlusGrid:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_67C9C02F608D0A75" ) ) --[[ @ 0]]
	TiledPlusGrid:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	TiledPlusGrid:setupNineSliceShader( 220, 220 ) --[[ @ 0]]
	self:addElement( TiledPlusGrid ) --[[ @ 0]]
	self.TiledPlusGrid = TiledPlusGrid --[[ @ 0]]
	
	local SlotsUsedWidget = CoD.SlotsUsedWidget.new( f1_local1, f1_arg0, 0, 0, 1312.5, 1842.5, 0, 0, 930, 1023 ) --[[ @ 0]]
	SlotsUsedWidget.Title.__alertText2_String_Reference = function ()
		SlotsUsedWidget.Title:setText( LocalizeToUpperString( CoD.CraftUtility.GetSlotsUsedHeader( f1_arg0 ) ) ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	SlotsUsedWidget.Title.__alertText2_String_Reference() --[[ @ 0]]
	SlotsUsedWidget:subscribeToGlobalModel( f1_arg0, "CraftSlots", "totalSlots", function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			SlotsUsedWidget.Total:setText( f3_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	SlotsUsedWidget:subscribeToGlobalModel( f1_arg0, "CraftSlots", "usedSlots", function ( model )
		local f4_local0 = model:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			SlotsUsedWidget.Used:setText( f4_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	SlotsUsedWidget:subscribeToGlobalModel( f1_arg0, "CraftSlots", "totalSlots", function ( model )
		local f5_local0 = model:get() --[[ @ 0]]
		if f5_local0 ~= nil then
			SlotsUsedWidget.totalBar:setShaderVector( 1, SetVectorComponent( 2, 1, CoD.GetVectorComponentFromString( f5_local0, 1 ), CoD.GetVectorComponentFromString( f5_local0, 2 ), CoD.GetVectorComponentFromString( f5_local0, 3 ), CoD.GetVectorComponentFromString( f5_local0, 4 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	SlotsUsedWidget:subscribeToGlobalModel( f1_arg0, "CraftSlots", "totalSlots", function ( model )
		local f6_local0 = model:get() --[[ @ 0]]
		if f6_local0 ~= nil then
			SlotsUsedWidget.usedBar:setShaderVector( 1, SetVectorComponent( 2, 1, CoD.GetVectorComponentFromString( f6_local0, 1 ), CoD.GetVectorComponentFromString( f6_local0, 2 ), CoD.GetVectorComponentFromString( f6_local0, 3 ), CoD.GetVectorComponentFromString( f6_local0, 4 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	SlotsUsedWidget:subscribeToGlobalModel( f1_arg0, "CraftSlots", "percent", function ( model )
		local f7_local0 = model:get() --[[ @ 0]]
		if f7_local0 ~= nil then
			SlotsUsedWidget.usedBar:setShaderVector( 2, SetVectorComponent( 4, 1, SetVectorComponent( 3, 0, SetVectorComponent( 1, 0, SwapVectorComponents( 1, 2, CoD.GetVectorComponentFromString( f7_local0, 1 ), CoD.GetVectorComponentFromString( f7_local0, 2 ), CoD.GetVectorComponentFromString( f7_local0, 3 ), CoD.GetVectorComponentFromString( f7_local0, 4 ) ) ) ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( SlotsUsedWidget ) --[[ @ 0]]
	self.SlotsUsedWidget = SlotsUsedWidget --[[ @ 0]]
	
	local OptionsList = LUI.UIList.new( f1_local1, f1_arg0, 18, 0, nil, false, false, false, false ) --[[ @ 0]]
	OptionsList:setLeftRight( 0, 0, 1427.5, 1727.5 ) --[[ @ 0]]
	OptionsList:setTopBottom( 0, 0, 529, 823 ) --[[ @ 0]]
	OptionsList:setWidgetType( CoD.EmblemOptionsButtonSmall ) --[[ @ 0]]
	OptionsList:setVerticalCount( 4 ) --[[ @ 0]]
	OptionsList:setSpacing( 18 ) --[[ @ 0]]
	OptionsList:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	OptionsList:setDataSource( "PaintjobEditorOptionsList" ) --[[ @ 0]]
	OptionsList:registerEventHandler( "gain_focus", function ( element, event )
		local f8_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f8_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f8_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f8_local0
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( OptionsList, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		ProcessListAction( self, element, controller, menu ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, "ui_confirm" ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	self:addElement( OptionsList ) --[[ @ 0]]
	self.OptionsList = OptionsList --[[ @ 0]]
	
	local Title = LUI.UIText.new( 0, 0, 1313.5, 1842.5, 0, 0, 32, 77 ) --[[ @ 0]]
	Title:setRGB( ColorSet.T8__BEIGE__HEADER.r, ColorSet.T8__BEIGE__HEADER.g, ColorSet.T8__BEIGE__HEADER.b ) --[[ @ 0]]
	Title:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_59D5B73C75DAEB43" ) ) --[[ @ 0]]
	Title:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	Title:setLetterSpacing( 4 ) --[[ @ 0]]
	Title:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	Title:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	self:addElement( Title ) --[[ @ 0]]
	self.Title = Title --[[ @ 0]]
	
	local fefooterRighSlideIn = CoD.fe_footerRighSlideIn.new( f1_local1, f1_arg0, 1, 1, -670, -22, 1, 1, -48, 0 ) --[[ @ 0]]
	fefooterRighSlideIn:registerEventHandler( "menu_loaded", function ( element, event )
		local f11_local0 = nil --[[ @ 0]]
		if element.menuLoaded then
			f11_local0 = element:menuLoaded( event ) --[[ @ 0]]
		elseif element.super.menuLoaded then
			f11_local0 = element.super:menuLoaded( event ) --[[ @ 0]]
		end
		SizeToSafeArea( element, f1_arg0 ) --[[ @ 0]]
		if not f11_local0 then
			f11_local0 = element:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f11_local0
	end ) --[[ @ 0]]
	self:addElement( fefooterRighSlideIn ) --[[ @ 0]]
	self.fefooterRighSlideIn = fefooterRighSlideIn --[[ @ 0]]
	
	local hintText = CoD.Theater_HintText.new( f1_local1, f1_arg0, 0, 0, 1433.5, 1733.5, 0, 0, 846.5, 866.5 ) --[[ @ 0]]
	self:addElement( hintText ) --[[ @ 0]]
	self.hintText = hintText --[[ @ 0]]
	
	local CraftAuthorInfo = CoD.CraftAuthorInfo.new( f1_local1, f1_arg0, 0, 0, 1427.5, 1777.5, 0, 0, 421, 521 ) --[[ @ 0]]
	CraftAuthorInfo:mergeStateConditions( {
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return CoD.CraftUtility.Paintjobs_IsNew( f1_arg0 )
			end
		},
		{
			stateName = "Arabic",
			condition = function ( menu, element, event )
				return IsCurrentLanguageArabic()
			end
		}
	} ) --[[ @ 0]]
	CraftAuthorInfo:subscribeToGlobalModel( f1_arg0, "SelectedPaintjob", "createTime", function ( model )
		local f14_local0 = model:get() --[[ @ 0]]
		if f14_local0 ~= nil then
			CraftAuthorInfo.TimestampText:setText( f14_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	CraftAuthorInfo:subscribeToGlobalModel( f1_arg0, "SelectedPaintjob", "xuid", function ( model )
		local f15_local0 = model:get() --[[ @ 0]]
		if f15_local0 ~= nil then
			CraftAuthorInfo.AuthorGamertag:setupPlayerGamertag( f15_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	CraftAuthorInfo:subscribeToGlobalModel( f1_arg0, "SelectedPaintjob", "paintjobTextEntry", function ( model )
		local f16_local0 = model:get() --[[ @ 0]]
		if f16_local0 ~= nil then
			CraftAuthorInfo.EmblemName:setText( f16_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( CraftAuthorInfo ) --[[ @ 0]]
	self.CraftAuthorInfo = CraftAuthorInfo --[[ @ 0]]
	
	local Icon = LUI.UIImage.new( 0, 0, 1320, 1834, 0, 0, 111, 339 ) --[[ @ 0]]
	Icon.__Paintjob_Slot_And_Index = function ( f17_arg0 )
		local f17_local0 = f17_arg0:get() --[[ @ 0]]
		if f17_local0 ~= nil then
			Icon:setupWCPaintjobIconExtraCamRender( GetPaintshopExtraCamParameters( f1_arg0, f17_local0 ) ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	Icon:subscribeToGlobalModel( f1_arg0, "SelectedPaintjob", "paintjobSlot", Icon.__Paintjob_Slot_And_Index ) --[[ @ 0]]
	Icon.__Paintjob_Slot_And_Index_FullPath = function ()
		local f18_local0 = DataSources.SelectedPaintjob.getModel( f1_arg0 ) --[[ @ 0]]
		f18_local0 = f18_local0.paintjobSlot --[[ @ 0]]
		if f18_local0 then
			Icon.__Paintjob_Slot_And_Index( f18_local0 ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	self:addElement( Icon ) --[[ @ 0]]
	self.Icon = Icon --[[ @ 0]]
	
	local EmblemFrame = CoD.StartMenuOptionsMainFrame.new( f1_local1, f1_arg0, 0, 0, 1314.5, 1839.5, 0, 0, 106, 344 ) --[[ @ 0]]
	EmblemFrame:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	EmblemFrame:setAlpha( 0.04 ) --[[ @ 0]]
	self:addElement( EmblemFrame ) --[[ @ 0]]
	self.EmblemFrame = EmblemFrame --[[ @ 0]]
	
	local HeaderStroke = LUI.UIImage.new( 0, 0, 1312.5, 1842.5, 0, 0, 79, 86 ) --[[ @ 0]]
	HeaderStroke:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	HeaderStroke:setZRot( 180 ) --[[ @ 0]]
	HeaderStroke:setImage( RegisterImage( @"hash_4C325BED3F226657" ) ) --[[ @ 0]]
	HeaderStroke:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_add" ) ) --[[ @ 0]]
	HeaderStroke:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	HeaderStroke:setupNineSliceShader( 16, 4 ) --[[ @ 0]]
	self:addElement( HeaderStroke ) --[[ @ 0]]
	self.HeaderStroke = HeaderStroke --[[ @ 0]]
	
	local Border0 = LUI.UIImage.new( 1, 1, -684, -682, 0, 0, 0, 1080 ) --[[ @ 0]]
	Border0:setAlpha( 0.42 ) --[[ @ 0]]
	self:addElement( Border0 ) --[[ @ 0]]
	self.Border0 = Border0 --[[ @ 0]]
	
	local dotline = LUI.UIImage.new( 0, 0, 1316, 1838, 0, 0, 82.5, 86.5 ) --[[ @ 0]]
	dotline:setAlpha( 0.1 ) --[[ @ 0]]
	dotline:setImage( RegisterImage( @"uie_ui_menu_social_emblem_dotline" ) ) --[[ @ 0]]
	dotline:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_31CC85D0A86303B0" ) ) --[[ @ 0]]
	dotline:setShaderVector( 0, 1.2, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( dotline ) --[[ @ 0]]
	self.dotline = dotline --[[ @ 0]]
	
	local CommonCornerPips = CoD.CommonCornerPips01.new( f1_local1, f1_arg0, 0, 0, 1377.5, 1777.5, 0, 0, 99, 499 ) --[[ @ 0]]
	self:addElement( CommonCornerPips ) --[[ @ 0]]
	self.CommonCornerPips = CommonCornerPips --[[ @ 0]]
	
	local f1_local19 = SlotsUsedWidget --[[ @ 0]]
	local f1_local20 = SlotsUsedWidget.subscribeToModel --[[ @ 0]]
	local f1_local21 = DataSources.SlotCustomization.getModel( f1_arg0 ) --[[ @ 0]]
	f1_local20( f1_local19, f1_local21.type, SlotsUsedWidget.Title.__alertText2_String_Reference ) --[[ @ 0]]
	hintText:linkToElementModel( OptionsList, "description", true, function ( model )
		local f19_local0 = model:get() --[[ @ 0]]
		if f19_local0 ~= nil then
			hintText.ItemHintText:setText( Engine[@"hash_4F9F1239CFD921FE"]( f19_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	Icon:linkToElementModel( self, "weaponIndex", true, Icon.__Paintjob_Slot_And_Index_FullPath ) --[[ @ 0]]
	Icon:linkToElementModel( self, "paintjobSlot", true, Icon.__Paintjob_Slot_And_Index_FullPath ) --[[ @ 0]]
	self:registerEventHandler( "ui_keyboard_input", function ( self, event )
		local f20_local0 = nil --[[ @ 0]]
		CoD.CraftUtility.PaintjobEditor_HandleKeyboardComplete( self, f1_arg0, event ) --[[ @ 0]]
		PaintjobSelector_RenamePaintjob( self, f1_arg0 ) --[[ @ 0]]
		if not f20_local0 then
			f20_local0 = self:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f20_local0
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"], nil, function ( element, menu, controller, model )
		GoBack( self, controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"], @"hash_370A9FDC87CD3D48", nil, nil ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( self, "close", function ( element )
		ClearMenuSavedState( f1_local1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:subscribeToGlobalModel( f1_arg0, "GlobalModel", "fileshareRoot.publishTask.state", function ( model )
		local f24_local0 = self --[[ @ 0]]
		if CoD.ModelUtility.IsGlobalModelValueEqualToEnum( "fileshareRoot.publishTask.state", Enum[@"FileshareTaskUIState"][@"hash_6FE5B3BE5B00EEEA"] ) and CoD.ModelUtility.IsGlobalModelValueTrue( "fileshareRoot.publishTask.success" ) then
			GoBack( self, f1_arg0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	OptionsList.id = "OptionsList" --[[ @ 0]]
	fefooterRighSlideIn.buttons:setModel( self.buttonModel, f1_arg0 ) --[[ @ 0]]
	if CoD.isPC then
		fefooterRighSlideIn.id = "fefooterRighSlideIn" --[[ @ 0]]
	end
	self:processEvent( {
		name = "menu_loaded",
		controller = f1_arg0
	} ) --[[ @ 0]]
	self.__defaultFocus = OptionsList --[[ @ 0]]
	if CoD.isPC and (IsKeyboard( f1_arg0 ) or self.ignoreCursor) then
		self:restoreState( f1_arg0 ) --[[ @ 0]]
	end
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.PaintjobEditorOptions.__onClose = function ( f25_arg0 )
	f25_arg0.hintText:close() --[[ @ 0]]
	f25_arg0.SlotsUsedWidget:close() --[[ @ 0]]
	f25_arg0.OptionsList:close() --[[ @ 0]]
	f25_arg0.fefooterRighSlideIn:close() --[[ @ 0]]
	f25_arg0.CraftAuthorInfo:close() --[[ @ 0]]
	f25_arg0.Icon:close() --[[ @ 0]]
	f25_arg0.EmblemFrame:close() --[[ @ 0]]
	f25_arg0.CommonCornerPips:close() --[[ @ 0]]
end
 --[[ @ 0]]
