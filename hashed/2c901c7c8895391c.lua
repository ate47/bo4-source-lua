-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:49
require( "x64:35415c2f3330b8c9" ) --[[ @ 0]]
require( "x64:6cfb14ab0b137a5" ) --[[ @ 0]]

CoD.MeritOverlayManualLayoutVerticalBG = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.MeritOverlayManualLayoutVerticalBG.__defaultWidth = 540 --[[ @ 0]]
CoD.MeritOverlayManualLayoutVerticalBG.__defaultHeight = 628 --[[ @ 0]]
CoD.MeritOverlayManualLayoutVerticalBG.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.MeritOverlayManualLayoutVerticalBG ) --[[ @ 0]]
	self.id = "MeritOverlayManualLayoutVerticalBG" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local IGRbg = CoD.WZAAR_IGR_background.new( f1_arg0, f1_arg1, 0, 0, 0, 540, 0, 0, 0, 628 ) --[[ @ 0]]
	self:addElement( IGRbg ) --[[ @ 0]]
	self.IGRbg = IGRbg --[[ @ 0]]
	
	local NextEchelon = LUI.UIText.new( 0, 0, 460, 518, 0, 0, 571, 599 ) --[[ @ 0]]
	NextEchelon:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	NextEchelon:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	NextEchelon:setAlignment( Enum[@"luialignment"][@"hash_E821F0ECFF8D1C7"] ) --[[ @ 0]]
	NextEchelon:linkToElementModel( self, "nextRank", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			NextEchelon:setText( f2_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( NextEchelon ) --[[ @ 0]]
	self.NextEchelon = NextEchelon --[[ @ 0]]
	
	local EchelonProgress = CoD.WZAAR_MeritProgressBar.new( f1_arg0, f1_arg1, 0.5, 0.5, -184, 184, 0, 0, 575, 595 ) --[[ @ 0]]
	EchelonProgress:linkToElementModel( self, nil, false, function ( model )
		EchelonProgress:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	EchelonProgress:linkToElementModel( self, "earnedXpProgress", true, function ( model )
		local f4_local0 = model:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			EchelonProgress.EarnedXP.Meter:setShaderVector( 0, CoD.GetVectorComponentFromString( f4_local0, 1 ), CoD.GetVectorComponentFromString( f4_local0, 2 ), CoD.GetVectorComponentFromString( f4_local0, 3 ), CoD.GetVectorComponentFromString( f4_local0, 4 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	EchelonProgress:linkToElementModel( self, "earnedXpProgress", true, function ( model )
		local f5_local0 = model:get() --[[ @ 0]]
		if f5_local0 ~= nil then
			EchelonProgress.EarnedXP.MeterAdd:setShaderVector( 0, CoD.GetVectorComponentFromString( f5_local0, 1 ), CoD.GetVectorComponentFromString( f5_local0, 2 ), CoD.GetVectorComponentFromString( f5_local0, 3 ), CoD.GetVectorComponentFromString( f5_local0, 4 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	EchelonProgress:linkToElementModel( self, "earnedXpProgress", true, function ( model )
		local f6_local0 = model:get() --[[ @ 0]]
		if f6_local0 ~= nil then
			EchelonProgress.EarnedXP.MeterGlow:setShaderVector( 0, CoD.GetVectorComponentFromString( f6_local0, 1 ), CoD.GetVectorComponentFromString( f6_local0, 2 ), CoD.GetVectorComponentFromString( f6_local0, 3 ), CoD.GetVectorComponentFromString( f6_local0, 4 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( EchelonProgress ) --[[ @ 0]]
	self.EchelonProgress = EchelonProgress --[[ @ 0]]
	
	local CurrentEchelon = LUI.UIText.new( 0, 0, 22, 80, 0, 0, 571, 599 ) --[[ @ 0]]
	CurrentEchelon:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	CurrentEchelon:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	CurrentEchelon:setAlignment( Enum[@"luialignment"][@"hash_E821F0ECFF8D1C7"] ) --[[ @ 0]]
	CurrentEchelon:linkToElementModel( self, "rank", true, function ( model )
		local f7_local0 = model:get() --[[ @ 0]]
		if f7_local0 ~= nil then
			CurrentEchelon:setText( f7_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( CurrentEchelon ) --[[ @ 0]]
	self.CurrentEchelon = CurrentEchelon --[[ @ 0]]
	
	local EarnedEchelonIcon = LUI.UIImage.new( 0.5, 0.5, 196, 244, 0, 0, 515, 563 ) --[[ @ 0]]
	EarnedEchelonIcon:linkToElementModel( self, "echelon", true, function ( model )
		local f8_local0 = model:get() --[[ @ 0]]
		if f8_local0 ~= nil then
			EarnedEchelonIcon:setImage( RegisterImage( f8_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( EarnedEchelonIcon ) --[[ @ 0]]
	self.EarnedEchelonIcon = EarnedEchelonIcon --[[ @ 0]]
	
	local Box = LUI.UIImage.new( 0.5, 0.5, -200, 200, 0.5, 0.5, -213, 99 ) --[[ @ 0]]
	Box:setAlpha( 0 ) --[[ @ 0]]
	Box:setImage( RegisterImage( @"uie_ui_hud_wz_endgame_merits_box" ) ) --[[ @ 0]]
	self:addElement( Box ) --[[ @ 0]]
	self.Box = Box --[[ @ 0]]
	
	local ProgressTitle = LUI.UIText.new( 0.5, 0.5, -100, 100, 0, 0, 455, 479 ) --[[ @ 0]]
	ProgressTitle:setAlpha( 0 ) --[[ @ 0]]
	ProgressTitle:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_5DB9EE2A23526998" ) ) --[[ @ 0]]
	ProgressTitle:setTTF( "default" ) --[[ @ 0]]
	ProgressTitle:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	ProgressTitle:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	self:addElement( ProgressTitle ) --[[ @ 0]]
	self.ProgressTitle = ProgressTitle --[[ @ 0]]
	
	local MeritsHeader = LUI.UIText.new( 0.5, 0.5, -256.5, 256.5, 0, 0, 76, 100 ) --[[ @ 0]]
	MeritsHeader:setRGB( ColorSet.T8__BIEGE.r, ColorSet.T8__BIEGE.g, ColorSet.T8__BIEGE.b ) --[[ @ 0]]
	MeritsHeader:setText( LocalizeToUpperString( @"hash_32FD7986ED047F25" ) ) --[[ @ 0]]
	MeritsHeader:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	MeritsHeader:setLetterSpacing( 2 ) --[[ @ 0]]
	MeritsHeader:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	MeritsHeader:setAlignment( Enum[@"luialignment"][@"lui_alignment_middle"] ) --[[ @ 0]]
	self:addElement( MeritsHeader ) --[[ @ 0]]
	self.MeritsHeader = MeritsHeader --[[ @ 0]]
	
	local Title = LUI.UIText.new( 0.5, 0.5, -248, 248, 0, 0, 19, 51 ) --[[ @ 0]]
	Title:setRGB( ColorSet.T8__BIEGE.r, ColorSet.T8__BIEGE.g, ColorSet.T8__BIEGE.b ) --[[ @ 0]]
	Title:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_29C7C549DBCFDA00" ) ) --[[ @ 0]]
	Title:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	Title:setLetterSpacing( 4 ) --[[ @ 0]]
	Title:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	Title:setAlignment( Enum[@"luialignment"][@"hash_E821F0ECFF8D1C7"] ) --[[ @ 0]]
	self:addElement( Title ) --[[ @ 0]]
	self.Title = Title --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return not CoD.ModelUtility.IsSelfModelValueGreaterThan( self, f1_arg1, "totalMerit", 0 )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "totalMerit", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "totalMerit"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.MeritOverlayManualLayoutVerticalBG.__resetProperties = function ( f11_arg0 )
	f11_arg0.Title:completeAnimation() --[[ @ 0]]
	f11_arg0.MeritsHeader:completeAnimation() --[[ @ 0]]
	f11_arg0.ProgressTitle:completeAnimation() --[[ @ 0]]
	f11_arg0.Box:completeAnimation() --[[ @ 0]]
	f11_arg0.EarnedEchelonIcon:completeAnimation() --[[ @ 0]]
	f11_arg0.CurrentEchelon:completeAnimation() --[[ @ 0]]
	f11_arg0.EchelonProgress:completeAnimation() --[[ @ 0]]
	f11_arg0.NextEchelon:completeAnimation() --[[ @ 0]]
	f11_arg0.IGRbg:completeAnimation() --[[ @ 0]]
	f11_arg0.Title:setAlpha( 1 ) --[[ @ 0]]
	f11_arg0.MeritsHeader:setAlpha( 1 ) --[[ @ 0]]
	f11_arg0.ProgressTitle:setAlpha( 0 ) --[[ @ 0]]
	f11_arg0.Box:setAlpha( 0 ) --[[ @ 0]]
	f11_arg0.EarnedEchelonIcon:setAlpha( 1 ) --[[ @ 0]]
	f11_arg0.CurrentEchelon:setAlpha( 1 ) --[[ @ 0]]
	f11_arg0.EchelonProgress:setAlpha( 1 ) --[[ @ 0]]
	f11_arg0.NextEchelon:setAlpha( 1 ) --[[ @ 0]]
	f11_arg0.IGRbg:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.MeritOverlayManualLayoutVerticalBG.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f12_arg0, f12_arg1 )
			f12_arg0:__resetProperties() --[[ @ 0]]
			f12_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	Hidden = {
		DefaultClip = function ( f13_arg0, f13_arg1 )
			f13_arg0:__resetProperties() --[[ @ 0]]
			f13_arg0:setupElementClipCounter( 9 ) --[[ @ 0]]
			f13_arg0.IGRbg:completeAnimation() --[[ @ 0]]
			f13_arg0.IGRbg:setAlpha( 0 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.IGRbg ) --[[ @ 0]]
			f13_arg0.NextEchelon:completeAnimation() --[[ @ 0]]
			f13_arg0.NextEchelon:setAlpha( 0 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.NextEchelon ) --[[ @ 0]]
			f13_arg0.EchelonProgress:completeAnimation() --[[ @ 0]]
			f13_arg0.EchelonProgress:setAlpha( 0 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.EchelonProgress ) --[[ @ 0]]
			f13_arg0.CurrentEchelon:completeAnimation() --[[ @ 0]]
			f13_arg0.CurrentEchelon:setAlpha( 0 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.CurrentEchelon ) --[[ @ 0]]
			f13_arg0.EarnedEchelonIcon:completeAnimation() --[[ @ 0]]
			f13_arg0.EarnedEchelonIcon:setAlpha( 0 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.EarnedEchelonIcon ) --[[ @ 0]]
			f13_arg0.Box:completeAnimation() --[[ @ 0]]
			f13_arg0.Box:setAlpha( 0 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.Box ) --[[ @ 0]]
			f13_arg0.ProgressTitle:completeAnimation() --[[ @ 0]]
			f13_arg0.ProgressTitle:setAlpha( 0 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.ProgressTitle ) --[[ @ 0]]
			f13_arg0.MeritsHeader:completeAnimation() --[[ @ 0]]
			f13_arg0.MeritsHeader:setAlpha( 0 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.MeritsHeader ) --[[ @ 0]]
			f13_arg0.Title:completeAnimation() --[[ @ 0]]
			f13_arg0.Title:setAlpha( 0 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.Title ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.MeritOverlayManualLayoutVerticalBG.__onClose = function ( f14_arg0 )
	f14_arg0.IGRbg:close() --[[ @ 0]]
	f14_arg0.NextEchelon:close() --[[ @ 0]]
	f14_arg0.EchelonProgress:close() --[[ @ 0]]
	f14_arg0.CurrentEchelon:close() --[[ @ 0]]
	f14_arg0.EarnedEchelonIcon:close() --[[ @ 0]]
end
 --[[ @ 0]]
