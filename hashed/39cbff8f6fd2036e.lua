-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:49
require( "ui/uieditor/menus/charactercustomization/personalizecharacter" ) --[[ @ 0]]
require( "x64:6341ce33d59fafd1" ) --[[ @ 0]]
require( "x64:362080ad3aaa22da" ) --[[ @ 0]]
require( "ui/uieditor/widgets/lobby/common/layoutelements/commonbglayoutlinkline" ) --[[ @ 0]]
require( "ui/uieditor/widgets/lobby/common/layoutelements/commonsearchingbar" ) --[[ @ 0]]
require( "x64:150e26e98239f317" ) --[[ @ 0]]
require( "x64:4a8235cfc956d5a0" ) --[[ @ 0]]
require( "x64:c3fa19037d61cad" ) --[[ @ 0]]

CoD.StartMenu_Personalization_MP = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.StartMenu_Personalization_MP.__defaultWidth = 1920 --[[ @ 0]]
CoD.StartMenu_Personalization_MP.__defaultHeight = 780 --[[ @ 0]]
CoD.StartMenu_Personalization_MP.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	CoD.BaseUtility.CreateGlobalModel( "currentShowcasedCharacterIndex" ) --[[ @ 0]]
	self:setClass( CoD.StartMenu_Personalization_MP ) --[[ @ 0]]
	self.id = "StartMenu_Personalization_MP" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local CommonBgLayoutLinkLine = CoD.CommonBgLayoutLinkLine.new( f1_arg0, f1_arg1, 0.5, 0.5, 234, 943, 0.5, 0.5, -335.5, -306.5 ) --[[ @ 0]]
	CommonBgLayoutLinkLine:setAlpha( 0.5 ) --[[ @ 0]]
	CommonBgLayoutLinkLine:setZRot( 180 ) --[[ @ 0]]
	self:addElement( CommonBgLayoutLinkLine ) --[[ @ 0]]
	self.CommonBgLayoutLinkLine = CommonBgLayoutLinkLine --[[ @ 0]]
	
	local CommonBgLayoutLinkLine2 = CoD.CommonBgLayoutLinkLine.new( f1_arg0, f1_arg1, 0.5, 0.5, -30.5, 678.5, 0.5, 0.5, -88.5, -59.5 ) --[[ @ 0]]
	CommonBgLayoutLinkLine2:setAlpha( 0.9 ) --[[ @ 0]]
	CommonBgLayoutLinkLine2:setZRot( -90 ) --[[ @ 0]]
	self:addElement( CommonBgLayoutLinkLine2 ) --[[ @ 0]]
	self.CommonBgLayoutLinkLine2 = CommonBgLayoutLinkLine2 --[[ @ 0]]
	
	local CommonInformationFrame = CoD.CommonInformationFrame.new( f1_arg0, f1_arg1, 0.5, 0.5, 324, 811, 0.5, 0.5, -228, 275 ) --[[ @ 0]]
	CommonInformationFrame.SceneBlur:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( CommonInformationFrame ) --[[ @ 0]]
	self.CommonInformationFrame = CommonInformationFrame --[[ @ 0]]
	
	local equipment = CoD.HubEquipmentItem.new( f1_arg0, f1_arg1, 0.5, 0.5, 582, 782, 0.5, 0.5, -100, 246 ) --[[ @ 0]]
	equipment.categoryHeader:setText( LocalizeToUpperString( @"weapon/special_issue" ) ) --[[ @ 0]]
	self:addElement( equipment ) --[[ @ 0]]
	self.equipment = equipment --[[ @ 0]]
	
	local weapon = CoD.HubEquipmentItem.new( f1_arg0, f1_arg1, 0.5, 0.5, 356.5, 556.5, 0.5, 0.5, -100, 246 ) --[[ @ 0]]
	weapon.categoryHeader:setText( LocalizeToUpperString( @"menu/weapon" ) ) --[[ @ 0]]
	self:addElement( weapon ) --[[ @ 0]]
	self.weapon = weapon --[[ @ 0]]
	
	local specialists = LUI.UIList.new( f1_arg0, f1_arg1, 12, 0, nil, false, false, false, false ) --[[ @ 0]]
	specialists:setLeftRight( 0.5, 0.5, -593, 215 ) --[[ @ 0]]
	specialists:setTopBottom( 0.5, 0.5, -271.5, 271.5 ) --[[ @ 0]]
	specialists:setWidgetType( CoD.HubSpecialist_character ) --[[ @ 0]]
	specialists:setHorizontalCount( 5 ) --[[ @ 0]]
	specialists:setVerticalCount( 3 ) --[[ @ 0]]
	specialists:setSpacing( 12 ) --[[ @ 0]]
	specialists:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	specialists:setDataSource( "PositionLoadoutList" ) --[[ @ 0]]
	specialists:linkToElementModel( specialists, "isBMLocked", true, function ( model, f2_arg1 )
		CoD.Menu.UpdateButtonShownState( f2_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f2_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xbx_pssquare"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	specialists:linkToElementModel( specialists, "characterIndex", true, function ( model, f3_arg1 )
		CoD.Menu.UpdateButtonShownState( f3_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xbx_pssquare"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local SpecialistCornerTL = specialists --[[ @ 0]]
	local SpecialistCornerTR = specialists.subscribeToModel --[[ @ 0]]
	local SpecialistCornerBR = Engine[@"getglobalmodel"]() --[[ @ 0]]
	SpecialistCornerTR( SpecialistCornerTL, SpecialistCornerBR.currentShowcasedCharacterIndex, function ( f4_arg0, f4_arg1 )
		CoD.Menu.UpdateButtonShownState( f4_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xbx_pssquare"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	specialists:appendEventHandler( "input_source_changed", function ( f5_arg0, f5_arg1 )
		f5_arg1.menu = f5_arg1.menu or f1_arg0 --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f5_arg0, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xbx_pssquare"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	SpecialistCornerTL = specialists --[[ @ 0]]
	SpecialistCornerTR = specialists.subscribeToModel --[[ @ 0]]
	SpecialistCornerBR = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	SpecialistCornerTR( SpecialistCornerTL, SpecialistCornerBR.LastInput, function ( f6_arg0, f6_arg1 )
		CoD.Menu.UpdateButtonShownState( f6_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xbx_pssquare"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	specialists:registerEventHandler( "gain_focus", function ( element, event )
		local f7_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f7_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f7_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xbx_pssquare"] ) --[[ @ 0]]
		return f7_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( specialists, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"], nil, function ( element, menu, controller, model )
		if not CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "isBMLocked" ) then
			PlaySoundAlias( "uin_toggle_generic" ) --[[ @ 0]]
			OpenOverlay( self, "PersonalizeCharacter", controller, {
				model = element:getModel(),
				properties = {
					_sessionMode = menu._sessionMode,
					_storageLoadoutBuffer = menu._storageLoadoutBuffer
				}
			} ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "isBMLocked" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"menu/select", nil, nil ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( specialists, f1_arg1, Enum[@"luibutton"][@"lui_key_xbx_pssquare"], "ui_contextual_1", function ( element, menu, controller, model )
		if not CoD.PlayerRoleUtility.IsSelectedShowcaseCharacter( element, controller ) and CoD.PlayerRoleUtility.CanSetAsShowcaseCharacter( controller, element ) and IsGamepad( controller ) then
			CoD.PlayerRoleUtility.SetAsSelectedShowcaseCharacter( element, controller ) --[[ @ 0]]
			UpdateSelfElementState( menu, self.showcaseCheckbox, controller ) --[[ @ 0]]
			PlaySoundAlias( "uin_start_char_select" ) --[[ @ 0]]
			return true
		elseif not CoD.PlayerRoleUtility.IsSelectedShowcaseCharacter( element, controller ) and IsMouseOrKeyboard( controller ) and CoD.PlayerRoleUtility.CanSetAsShowcaseCharacter( controller, element ) then
			CoD.PlayerRoleUtility.SetAsSelectedShowcaseCharacter( element, controller ) --[[ @ 0]]
			UpdateSelfElementState( menu, self.showcaseCheckbox, controller ) --[[ @ 0]]
			PlaySoundAlias( "uin_start_char_select" ) --[[ @ 0]]
			UpdateButtonPromptState( menu, element, controller, Enum[@"luibutton"][@"lui_key_xbx_pssquare"] ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not CoD.PlayerRoleUtility.IsSelectedShowcaseCharacter( element, controller ) and CoD.PlayerRoleUtility.CanSetAsShowcaseCharacter( controller, element ) and IsGamepad( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xbx_pssquare"], @"hash_0", nil, "ui_contextual_1" ) --[[ @ 0]]
			return false
		elseif not CoD.PlayerRoleUtility.IsSelectedShowcaseCharacter( element, controller ) and IsMouseOrKeyboard( controller ) and CoD.PlayerRoleUtility.CanSetAsShowcaseCharacter( controller, element ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xbx_pssquare"], @"menu/showcase_character", Enum[@"luibuttonpromptflags"][@"bpf_contextual"], "ui_contextual_1" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	specialists:AddContextualMenuAction( f1_arg0, f1_arg1, @"menu/showcase_character", function ( f12_arg0, f12_arg1, f12_arg2, f12_arg3 )
		if IsMultiplayer() and not IsGameTypeCombatTraining() and not CoD.PlayerRoleUtility.IsSelectedShowcaseCharacter( f12_arg0, f12_arg2 ) and CoD.PlayerRoleUtility.CanSetAsShowcaseCharacter( f12_arg2, f12_arg0 ) then
			return function ( f13_arg0, f13_arg1, f13_arg2, f13_arg3 )
				CoD.PlayerRoleUtility.SetAsSelectedShowcaseCharacter( f13_arg0, f13_arg2 ) --[[ @ 0]]
				UpdateSelfElementState( f13_arg1, self.showcaseCheckbox, f13_arg2 ) --[[ @ 0]]
				PlaySoundAlias( "uin_start_char_select" ) --[[ @ 0]]
			end
			
		else
			
		end
	end ) --[[ @ 0]]
	self:addElement( specialists ) --[[ @ 0]]
	self.specialists = specialists --[[ @ 0]]
	
	SpecialistCornerTR = LUI.UIImage.new( 0.5, 0.5, 234, 258, 0.5, 0.5, -288, -264 ) --[[ @ 0]]
	SpecialistCornerTR:setAlpha( 0.25 ) --[[ @ 0]]
	SpecialistCornerTR:setZRot( -90 ) --[[ @ 0]]
	SpecialistCornerTR:setScale( 0.5, 0.5 ) --[[ @ 0]]
	SpecialistCornerTR:setImage( RegisterImage( @"uie_ui_menu_specialist_hub_window_corner" ) ) --[[ @ 0]]
	SpecialistCornerTR:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_31CC85D0A86303B0" ) ) --[[ @ 0]]
	SpecialistCornerTR:setShaderVector( 0, 1, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( SpecialistCornerTR ) --[[ @ 0]]
	self.SpecialistCornerTR = SpecialistCornerTR --[[ @ 0]]
	
	SpecialistCornerTL = LUI.UIImage.new( 0.5, 0.5, -634, -610, 0.5, 0.5, -288, -264 ) --[[ @ 0]]
	SpecialistCornerTL:setAlpha( 0.2 ) --[[ @ 0]]
	SpecialistCornerTL:setScale( 0.5, 0.5 ) --[[ @ 0]]
	SpecialistCornerTL:setImage( RegisterImage( @"uie_ui_menu_specialist_hub_window_corner" ) ) --[[ @ 0]]
	SpecialistCornerTL:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_31CC85D0A86303B0" ) ) --[[ @ 0]]
	SpecialistCornerTL:setShaderVector( 0, 1, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( SpecialistCornerTL ) --[[ @ 0]]
	self.SpecialistCornerTL = SpecialistCornerTL --[[ @ 0]]
	
	SpecialistCornerBR = LUI.UIImage.new( 0.5, 0.5, 234, 258, 0.5, 0.5, 288.5, 312.5 ) --[[ @ 0]]
	SpecialistCornerBR:setAlpha( 0.2 ) --[[ @ 0]]
	SpecialistCornerBR:setZRot( 180 ) --[[ @ 0]]
	SpecialistCornerBR:setScale( 0.5, 0.5 ) --[[ @ 0]]
	SpecialistCornerBR:setImage( RegisterImage( @"uie_ui_menu_specialist_hub_window_corner" ) ) --[[ @ 0]]
	SpecialistCornerBR:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_31CC85D0A86303B0" ) ) --[[ @ 0]]
	SpecialistCornerBR:setShaderVector( 0, 1, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( SpecialistCornerBR ) --[[ @ 0]]
	self.SpecialistCornerBR = SpecialistCornerBR --[[ @ 0]]
	
	local showcaseCheckbox = CoD.HubShowcaseCheckbox.new( f1_arg0, f1_arg1, 0.5, 0.5, 324, 362, 0.5, 0.5, 300.5, 337.5 ) --[[ @ 0]]
	showcaseCheckbox:mergeStateConditions( {
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return not CoD.PlayerRoleUtility.CanSetAsShowcaseCharacter( f1_arg1, element )
			end
		},
		{
			stateName = "Checked",
			condition = function ( menu, element, event )
				return CoD.PlayerRoleUtility.IsSelectedShowcaseCharacter( element, f1_arg1 )
			end
		}
	} ) --[[ @ 0]]
	showcaseCheckbox:linkToElementModel( showcaseCheckbox, "isBMLocked", true, function ( model )
		f1_arg0:updateElementState( showcaseCheckbox, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "isBMLocked"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	showcaseCheckbox:appendEventHandler( "input_source_changed", function ( f17_arg0, f17_arg1 )
		f17_arg1.menu = f17_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( showcaseCheckbox, f17_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local CommonSearchingBar = showcaseCheckbox --[[ @ 0]]
	local SpecialistCornerBL = showcaseCheckbox.subscribeToModel --[[ @ 0]]
	local RestrictedItemWarningText = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	SpecialistCornerBL( CommonSearchingBar, RestrictedItemWarningText.LastInput, function ( f18_arg0 )
		f1_arg0:updateElementState( showcaseCheckbox, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f18_arg0:get(),
			modelName = "LastInput"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	showcaseCheckbox:linkToElementModel( showcaseCheckbox, "characterIndex", true, function ( model )
		f1_arg0:updateElementState( showcaseCheckbox, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "characterIndex"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	CommonSearchingBar = showcaseCheckbox --[[ @ 0]]
	SpecialistCornerBL = showcaseCheckbox.subscribeToModel --[[ @ 0]]
	RestrictedItemWarningText = Engine[@"getglobalmodel"]() --[[ @ 0]]
	SpecialistCornerBL( CommonSearchingBar, RestrictedItemWarningText.currentShowcasedCharacterIndex, function ( f20_arg0 )
		f1_arg0:updateElementState( showcaseCheckbox, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f20_arg0:get(),
			modelName = "currentShowcasedCharacterIndex"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	showcaseCheckbox.label:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"menu/showcase_character" ) ) --[[ @ 0]]
	self:addElement( showcaseCheckbox ) --[[ @ 0]]
	self.showcaseCheckbox = showcaseCheckbox --[[ @ 0]]
	
	SpecialistCornerBL = LUI.UIImage.new( 0.5, 0.5, -634, -610, 0.5, 0.5, 288.5, 312.5 ) --[[ @ 0]]
	SpecialistCornerBL:setAlpha( 0.2 ) --[[ @ 0]]
	SpecialistCornerBL:setZRot( 90 ) --[[ @ 0]]
	SpecialistCornerBL:setScale( 0.5, 0.5 ) --[[ @ 0]]
	SpecialistCornerBL:setImage( RegisterImage( @"uie_ui_menu_specialist_hub_window_corner" ) ) --[[ @ 0]]
	SpecialistCornerBL:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_31CC85D0A86303B0" ) ) --[[ @ 0]]
	SpecialistCornerBL:setShaderVector( 0, 1, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( SpecialistCornerBL ) --[[ @ 0]]
	self.SpecialistCornerBL = SpecialistCornerBL --[[ @ 0]]
	
	CommonSearchingBar = CoD.CommonSearchingBar.new( f1_arg0, f1_arg1, 0.5, 0.5, -67, 55, 0.5, 0.5, 294, 316 ) --[[ @ 0]]
	CommonSearchingBar:setAlpha( 0.5 ) --[[ @ 0]]
	self:addElement( CommonSearchingBar ) --[[ @ 0]]
	self.CommonSearchingBar = CommonSearchingBar --[[ @ 0]]
	
	RestrictedItemWarningText = CoD.RestrictedItemWarningText.new( f1_arg0, f1_arg1, 0.5, 0.5, 320.5, 814.5, 0.5, 0.5, 375, 405 ) --[[ @ 0]]
	RestrictedItemWarningText:mergeStateConditions( {
		{
			stateName = "Visible",
			condition = function ( menu, element, event )
				local f21_local0 --[[ @ 0]]
				if not CoD.DirectorUtility.ShowDirectorPregame( f1_arg1 ) and not IsPublicWZLobby() then
					f21_local0 = CoD.PlayerRoleUtility.IsAnyAbilityRestricted( element ) --[[ @ 0]]
				else
					f21_local0 = false --[[ @ 0]]
				end
				return f21_local0
			end
		}
	} ) --[[ @ 0]]
	local f1_local14 = RestrictedItemWarningText --[[ @ 0]]
	local f1_local15 = RestrictedItemWarningText.subscribeToModel --[[ @ 0]]
	local f1_local16 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local15( f1_local14, f1_local16["lobbyRoot.lobbyNav"], function ( f22_arg0 )
		f1_arg0:updateElementState( RestrictedItemWarningText, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f22_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:addElement( RestrictedItemWarningText ) --[[ @ 0]]
	self.RestrictedItemWarningText = RestrictedItemWarningText --[[ @ 0]]
	
	CommonInformationFrame:linkToElementModel( specialists, "jobTitle", true, function ( model )
		local f23_local0 = model:get() --[[ @ 0]]
		if f23_local0 ~= nil then
			CommonInformationFrame.altHeader:setText( Engine[@"hash_4F9F1239CFD921FE"]( f23_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	CommonInformationFrame:linkToElementModel( specialists, "name", true, function ( model )
		local f24_local0 = model:get() --[[ @ 0]]
		if f24_local0 ~= nil then
			CommonInformationFrame.header:setText( LocalizeToUpperString( f24_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	CommonInformationFrame:linkToElementModel( specialists, "detailedDesc", true, function ( model )
		local f25_local0 = model:get() --[[ @ 0]]
		if f25_local0 ~= nil then
			CommonInformationFrame.description:setText( CoD.BaseUtility.AlreadyLocalized( f25_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	equipment:linkToElementModel( specialists, "equipment.image", true, function ( model )
		local f26_local0 = model:get() --[[ @ 0]]
		if f26_local0 ~= nil then
			equipment.Icon:setImage( RegisterImage( f26_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	equipment:linkToElementModel( specialists, "equipment.displayName", true, function ( model )
		local f27_local0 = model:get() --[[ @ 0]]
		if f27_local0 ~= nil then
			equipment.name:setText( LocalizeToUpperString( f27_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	equipment:linkToElementModel( specialists, "equipment.statTitle", true, function ( model )
		local f28_local0 = model:get() --[[ @ 0]]
		if f28_local0 ~= nil then
			equipment.statHeader:setText( LocalizeToUpperString( f28_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	equipment:linkToElementModel( specialists, "equipment.statValue", true, function ( model )
		local f29_local0 = model:get() --[[ @ 0]]
		if f29_local0 ~= nil then
			equipment.statValue:setText( f29_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	equipment:linkToElementModel( specialists, "equipment", false, function ( model )
		equipment.RestrictedItemWarning:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	weapon:linkToElementModel( specialists, "ability.image", true, function ( model )
		local f31_local0 = model:get() --[[ @ 0]]
		if f31_local0 ~= nil then
			weapon.Icon:setImage( RegisterImage( f31_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	weapon:linkToElementModel( specialists, "ability.displayName", true, function ( model )
		local f32_local0 = model:get() --[[ @ 0]]
		if f32_local0 ~= nil then
			weapon.name:setText( LocalizeToUpperString( f32_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	weapon:linkToElementModel( specialists, "ability.statTitle", true, function ( model )
		local f33_local0 = model:get() --[[ @ 0]]
		if f33_local0 ~= nil then
			weapon.statHeader:setText( LocalizeToUpperString( f33_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	weapon:linkToElementModel( specialists, "ability.statValue", true, function ( model )
		local f34_local0 = model:get() --[[ @ 0]]
		if f34_local0 ~= nil then
			weapon.statValue:setText( f34_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	weapon:linkToElementModel( specialists, "ability", false, function ( model )
		weapon.RestrictedItemWarning:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	showcaseCheckbox:linkToElementModel( specialists, nil, false, function ( model )
		showcaseCheckbox:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	RestrictedItemWarningText:linkToElementModel( specialists, nil, false, function ( model )
		RestrictedItemWarningText:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	f1_local14 = self --[[ @ 0]]
	f1_local15 = self.subscribeToModel --[[ @ 0]]
	f1_local16 = DataSources.CharacterBreadcrumbs.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local15( f1_local14, f1_local16.breadcrumbCount, function ( f38_arg0, f38_arg1 )
		CoD.Menu.UpdateButtonShownState( f38_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_rstick_pressed"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( self, f1_arg1, Enum[@"luibutton"][@"lui_key_rstick_pressed"], "ui_contextual_2", function ( element, menu, controller, model )
		if CoD.ModelUtility.IsGlobalDataSourceModelValueGreaterThan( controller, "CharacterBreadcrumbs", "breadcrumbCount", 0 ) and not IsPC() then
			CoD.BreadcrumbUtility.ClearAllPersonalizationBreadcrumbs( menu, controller ) --[[ @ 0]]
			UpdateElementState( self, "specialists", controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if CoD.ModelUtility.IsGlobalDataSourceModelValueGreaterThan( controller, "CharacterBreadcrumbs", "breadcrumbCount", 0 ) and not IsPC() then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_rstick_pressed"], @"hash_65619D8212EDA599", nil, "ui_contextual_2" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	specialists.id = "specialists" --[[ @ 0]]
	self.__defaultFocus = specialists --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PreLoadFunc then
		PreLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	f1_local15 = self --[[ @ 0]]
	f1_local15 = specialists --[[ @ 0]]
	if IsPC() then
		CoD.PCWidgetUtility.SetupContextualMenu( f1_local15, f1_arg1, "name", "", "" ) --[[ @ 0]]
	end
	f1_local15 = showcaseCheckbox --[[ @ 0]]
	if IsPC() then
		HideWidget( f1_local15 ) --[[ @ 0]]
	end
	return self
end
 --[[ @ 0]]
CoD.StartMenu_Personalization_MP.__resetProperties = function ( f41_arg0 )
	f41_arg0.SpecialistCornerBL:completeAnimation() --[[ @ 0]]
	f41_arg0.SpecialistCornerBR:completeAnimation() --[[ @ 0]]
	f41_arg0.SpecialistCornerTL:completeAnimation() --[[ @ 0]]
	f41_arg0.SpecialistCornerTR:completeAnimation() --[[ @ 0]]
	f41_arg0.specialists:completeAnimation() --[[ @ 0]]
	f41_arg0.weapon:completeAnimation() --[[ @ 0]]
	f41_arg0.equipment:completeAnimation() --[[ @ 0]]
	f41_arg0.CommonInformationFrame:completeAnimation() --[[ @ 0]]
	f41_arg0.showcaseCheckbox:completeAnimation() --[[ @ 0]]
	f41_arg0.CommonBgLayoutLinkLine2:completeAnimation() --[[ @ 0]]
	f41_arg0.CommonBgLayoutLinkLine:completeAnimation() --[[ @ 0]]
	f41_arg0.SpecialistCornerBL:setAlpha( 0.2 ) --[[ @ 0]]
	f41_arg0.SpecialistCornerBR:setAlpha( 0.2 ) --[[ @ 0]]
	f41_arg0.SpecialistCornerTL:setAlpha( 0.2 ) --[[ @ 0]]
	f41_arg0.SpecialistCornerTR:setAlpha( 0.25 ) --[[ @ 0]]
	f41_arg0.specialists:setAlpha( 1 ) --[[ @ 0]]
	f41_arg0.weapon:setAlpha( 1 ) --[[ @ 0]]
	f41_arg0.equipment:setAlpha( 1 ) --[[ @ 0]]
	f41_arg0.CommonInformationFrame:setAlpha( 1 ) --[[ @ 0]]
	f41_arg0.showcaseCheckbox:setAlpha( 1 ) --[[ @ 0]]
	f41_arg0.CommonBgLayoutLinkLine2:setAlpha( 0.9 ) --[[ @ 0]]
	f41_arg0.CommonBgLayoutLinkLine:setAlpha( 0.5 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.StartMenu_Personalization_MP.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f42_arg0, f42_arg1 )
			f42_arg0:__resetProperties() --[[ @ 0]]
			f42_arg0:setupElementClipCounter( 11 ) --[[ @ 0]]
			local f42_local0 = function ( f43_arg0 )
				f43_arg0:beginAnimation( 150 ) --[[ @ 0]]
				f43_arg0:setAlpha( 0.5 ) --[[ @ 0]]
				f43_arg0:registerEventHandler( "transition_complete_keyframe", f42_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f42_arg0.CommonBgLayoutLinkLine:beginAnimation( 400 ) --[[ @ 0]]
			f42_arg0.CommonBgLayoutLinkLine:setAlpha( 0 ) --[[ @ 0]]
			f42_arg0.CommonBgLayoutLinkLine:registerEventHandler( "interrupted_keyframe", f42_arg0.clipInterrupted ) --[[ @ 0]]
			f42_arg0.CommonBgLayoutLinkLine:registerEventHandler( "transition_complete_keyframe", f42_local0 ) --[[ @ 0]]
			local f42_local1 = function ( f44_arg0 )
				f44_arg0:beginAnimation( 150 ) --[[ @ 0]]
				f44_arg0:setAlpha( 0.9 ) --[[ @ 0]]
				f44_arg0:registerEventHandler( "transition_complete_keyframe", f42_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f42_arg0.CommonBgLayoutLinkLine2:beginAnimation( 400 ) --[[ @ 0]]
			f42_arg0.CommonBgLayoutLinkLine2:setAlpha( 0 ) --[[ @ 0]]
			f42_arg0.CommonBgLayoutLinkLine2:registerEventHandler( "interrupted_keyframe", f42_arg0.clipInterrupted ) --[[ @ 0]]
			f42_arg0.CommonBgLayoutLinkLine2:registerEventHandler( "transition_complete_keyframe", f42_local1 ) --[[ @ 0]]
			local f42_local2 = function ( f45_arg0 )
				local f45_local0 = function ( f46_arg0 )
					f46_arg0:beginAnimation( 150 ) --[[ @ 0]]
					f46_arg0:setAlpha( 1 ) --[[ @ 0]]
					f46_arg0:registerEventHandler( "transition_complete_keyframe", f42_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f42_arg0.CommonInformationFrame:beginAnimation( 220 ) --[[ @ 0]]
				f42_arg0.CommonInformationFrame:registerEventHandler( "interrupted_keyframe", f42_arg0.clipInterrupted ) --[[ @ 0]]
				f42_arg0.CommonInformationFrame:registerEventHandler( "transition_complete_keyframe", f45_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f42_arg0.CommonInformationFrame:completeAnimation() --[[ @ 0]]
			f42_arg0.CommonInformationFrame:setAlpha( 0 ) --[[ @ 0]]
			f42_local2( f42_arg0.CommonInformationFrame ) --[[ @ 0]]
			local f42_local3 = function ( f47_arg0 )
				local f47_local0 = function ( f48_arg0 )
					f48_arg0:beginAnimation( 150 ) --[[ @ 0]]
					f48_arg0:setAlpha( 1 ) --[[ @ 0]]
					f48_arg0:registerEventHandler( "transition_complete_keyframe", f42_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f42_arg0.equipment:beginAnimation( 320 ) --[[ @ 0]]
				f42_arg0.equipment:registerEventHandler( "interrupted_keyframe", f42_arg0.clipInterrupted ) --[[ @ 0]]
				f42_arg0.equipment:registerEventHandler( "transition_complete_keyframe", f47_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f42_arg0.equipment:completeAnimation() --[[ @ 0]]
			f42_arg0.equipment:setAlpha( 0 ) --[[ @ 0]]
			f42_local3( f42_arg0.equipment ) --[[ @ 0]]
			local f42_local4 = function ( f49_arg0 )
				local f49_local0 = function ( f50_arg0 )
					f50_arg0:beginAnimation( 149 ) --[[ @ 0]]
					f50_arg0:setAlpha( 1 ) --[[ @ 0]]
					f50_arg0:registerEventHandler( "transition_complete_keyframe", f42_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f42_arg0.weapon:beginAnimation( 300 ) --[[ @ 0]]
				f42_arg0.weapon:registerEventHandler( "interrupted_keyframe", f42_arg0.clipInterrupted ) --[[ @ 0]]
				f42_arg0.weapon:registerEventHandler( "transition_complete_keyframe", f49_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f42_arg0.weapon:completeAnimation() --[[ @ 0]]
			f42_arg0.weapon:setAlpha( 0 ) --[[ @ 0]]
			f42_local4( f42_arg0.weapon ) --[[ @ 0]]
			local f42_local5 = function ( f51_arg0 )
				local f51_local0 = function ( f52_arg0 )
					f52_arg0:beginAnimation( 150 ) --[[ @ 0]]
					f52_arg0:setAlpha( 1 ) --[[ @ 0]]
					f52_arg0:registerEventHandler( "transition_complete_keyframe", f42_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f42_arg0.specialists:beginAnimation( 100 ) --[[ @ 0]]
				f42_arg0.specialists:registerEventHandler( "interrupted_keyframe", f42_arg0.clipInterrupted ) --[[ @ 0]]
				f42_arg0.specialists:registerEventHandler( "transition_complete_keyframe", f51_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f42_arg0.specialists:completeAnimation() --[[ @ 0]]
			f42_arg0.specialists:setAlpha( 0 ) --[[ @ 0]]
			f42_local5( f42_arg0.specialists ) --[[ @ 0]]
			local f42_local6 = function ( f53_arg0 )
				f42_arg0.SpecialistCornerTR:beginAnimation( 150 ) --[[ @ 0]]
				f42_arg0.SpecialistCornerTR:setAlpha( 0.2 ) --[[ @ 0]]
				f42_arg0.SpecialistCornerTR:registerEventHandler( "interrupted_keyframe", f42_arg0.clipInterrupted ) --[[ @ 0]]
				f42_arg0.SpecialistCornerTR:registerEventHandler( "transition_complete_keyframe", f42_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f42_arg0.SpecialistCornerTR:completeAnimation() --[[ @ 0]]
			f42_arg0.SpecialistCornerTR:setAlpha( 0 ) --[[ @ 0]]
			f42_local6( f42_arg0.SpecialistCornerTR ) --[[ @ 0]]
			local f42_local7 = function ( f54_arg0 )
				f42_arg0.SpecialistCornerTL:beginAnimation( 150 ) --[[ @ 0]]
				f42_arg0.SpecialistCornerTL:setAlpha( 0.2 ) --[[ @ 0]]
				f42_arg0.SpecialistCornerTL:registerEventHandler( "interrupted_keyframe", f42_arg0.clipInterrupted ) --[[ @ 0]]
				f42_arg0.SpecialistCornerTL:registerEventHandler( "transition_complete_keyframe", f42_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f42_arg0.SpecialistCornerTL:completeAnimation() --[[ @ 0]]
			f42_arg0.SpecialistCornerTL:setAlpha( 0 ) --[[ @ 0]]
			f42_local7( f42_arg0.SpecialistCornerTL ) --[[ @ 0]]
			local f42_local8 = function ( f55_arg0 )
				f42_arg0.SpecialistCornerBR:beginAnimation( 150 ) --[[ @ 0]]
				f42_arg0.SpecialistCornerBR:setAlpha( 0.2 ) --[[ @ 0]]
				f42_arg0.SpecialistCornerBR:registerEventHandler( "interrupted_keyframe", f42_arg0.clipInterrupted ) --[[ @ 0]]
				f42_arg0.SpecialistCornerBR:registerEventHandler( "transition_complete_keyframe", f42_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f42_arg0.SpecialistCornerBR:completeAnimation() --[[ @ 0]]
			f42_arg0.SpecialistCornerBR:setAlpha( 0 ) --[[ @ 0]]
			f42_local8( f42_arg0.SpecialistCornerBR ) --[[ @ 0]]
			local f42_local9 = function ( f56_arg0 )
				local f56_local0 = function ( f57_arg0 )
					f57_arg0:beginAnimation( 150 ) --[[ @ 0]]
					f57_arg0:setAlpha( 1 ) --[[ @ 0]]
					f57_arg0:registerEventHandler( "transition_complete_keyframe", f42_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f42_arg0.showcaseCheckbox:beginAnimation( 400 ) --[[ @ 0]]
				f42_arg0.showcaseCheckbox:registerEventHandler( "interrupted_keyframe", f42_arg0.clipInterrupted ) --[[ @ 0]]
				f42_arg0.showcaseCheckbox:registerEventHandler( "transition_complete_keyframe", f56_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f42_arg0.showcaseCheckbox:completeAnimation() --[[ @ 0]]
			f42_arg0.showcaseCheckbox:setAlpha( 0 ) --[[ @ 0]]
			f42_local9( f42_arg0.showcaseCheckbox ) --[[ @ 0]]
			local f42_local10 = function ( f58_arg0 )
				f42_arg0.SpecialistCornerBL:beginAnimation( 150 ) --[[ @ 0]]
				f42_arg0.SpecialistCornerBL:setAlpha( 0.2 ) --[[ @ 0]]
				f42_arg0.SpecialistCornerBL:registerEventHandler( "interrupted_keyframe", f42_arg0.clipInterrupted ) --[[ @ 0]]
				f42_arg0.SpecialistCornerBL:registerEventHandler( "transition_complete_keyframe", f42_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f42_arg0.SpecialistCornerBL:completeAnimation() --[[ @ 0]]
			f42_arg0.SpecialistCornerBL:setAlpha( 0 ) --[[ @ 0]]
			f42_local10( f42_arg0.SpecialistCornerBL ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.StartMenu_Personalization_MP.__onClose = function ( f59_arg0 )
	f59_arg0.CommonInformationFrame:close() --[[ @ 0]]
	f59_arg0.equipment:close() --[[ @ 0]]
	f59_arg0.weapon:close() --[[ @ 0]]
	f59_arg0.showcaseCheckbox:close() --[[ @ 0]]
	f59_arg0.RestrictedItemWarningText:close() --[[ @ 0]]
	f59_arg0.CommonBgLayoutLinkLine:close() --[[ @ 0]]
	f59_arg0.CommonBgLayoutLinkLine2:close() --[[ @ 0]]
	f59_arg0.specialists:close() --[[ @ 0]]
	f59_arg0.CommonSearchingBar:close() --[[ @ 0]]
end
 --[[ @ 0]]
