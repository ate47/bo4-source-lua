-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
require( "ui/uieditor/widgets/store/storecommontextbacking" ) --[[ @ 0]]

CoD.SpecialEventProgressPip = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.SpecialEventProgressPip.__defaultWidth = 19 --[[ @ 0]]
CoD.SpecialEventProgressPip.__defaultHeight = 19 --[[ @ 0]]
CoD.SpecialEventProgressPip.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.SpecialEventProgressPip ) --[[ @ 0]]
	self.id = "SpecialEventProgressPip" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local FrameBorder = LUI.UIImage.new( -0.02, 1.02, 0, 0, -0.02, 1.02, 0, 0 ) --[[ @ 0]]
	FrameBorder:setAlpha( 0.15 ) --[[ @ 0]]
	FrameBorder:setImage( RegisterImage( @"uie_ui_menu_store_common_frame" ) ) --[[ @ 0]]
	FrameBorder:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_add" ) ) --[[ @ 0]]
	FrameBorder:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	FrameBorder:setupNineSliceShader( 12, 12 ) --[[ @ 0]]
	self:addElement( FrameBorder ) --[[ @ 0]]
	self.FrameBorder = FrameBorder --[[ @ 0]]
	
	local ImageX = LUI.UIImage.new( 0, 1, 2, -2, 0, 1, 2, -2 ) --[[ @ 0]]
	ImageX:setAlpha( 0 ) --[[ @ 0]]
	ImageX:setImage( RegisterImage( @"uie_t7_menu_frontend_slidex" ) ) --[[ @ 0]]
	ImageX:setMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	self:addElement( ImageX ) --[[ @ 0]]
	self.ImageX = ImageX --[[ @ 0]]
	
	local Glow = LUI.UIImage.new( 0.5, 0.5, -12, 12, 0.5, 0.5, -14, 14 ) --[[ @ 0]]
	Glow:setRGB( ColorSet.T8__OCHRE.r, ColorSet.T8__OCHRE.g, ColorSet.T8__OCHRE.b ) --[[ @ 0]]
	Glow:setAlpha( 0 ) --[[ @ 0]]
	Glow:setImage( RegisterImage( @"uie_ui_hud_core_no_ammo_glow" ) ) --[[ @ 0]]
	Glow:setMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	self:addElement( Glow ) --[[ @ 0]]
	self.Glow = Glow --[[ @ 0]]
	
	local Background = LUI.UIImage.new( 0, 1, 1, -1, 0, 1, 1, -1 ) --[[ @ 0]]
	Background:setRGB( 1, 0.93, 0 ) --[[ @ 0]]
	Background:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( Background ) --[[ @ 0]]
	self.Background = Background --[[ @ 0]]
	
	local DotTiledBacking = CoD.StoreCommonTextBacking.new( f1_arg0, f1_arg1, 0, 1, 1, -1, 0, 1, 1, -1 ) --[[ @ 0]]
	DotTiledBacking:setRGB( ColorSet.PlayerYellow.r, ColorSet.PlayerYellow.g, ColorSet.PlayerYellow.b ) --[[ @ 0]]
	DotTiledBacking:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( DotTiledBacking ) --[[ @ 0]]
	self.DotTiledBacking = DotTiledBacking --[[ @ 0]]
	
	local FocusBorder = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	FocusBorder:setRGB( ColorSet.WarzoneTeammate1.r, ColorSet.WarzoneTeammate1.g, ColorSet.WarzoneTeammate1.b ) --[[ @ 0]]
	FocusBorder:setAlpha( 0 ) --[[ @ 0]]
	FocusBorder:setImage( RegisterImage( @"uie_ui_menu_store_focus_frame" ) ) --[[ @ 0]]
	FocusBorder:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_add" ) ) --[[ @ 0]]
	FocusBorder:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	FocusBorder:setupNineSliceShader( 3, 3 ) --[[ @ 0]]
	self:addElement( FocusBorder ) --[[ @ 0]]
	self.FocusBorder = FocusBorder --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		},
		{
			stateName = "CompletedState",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualToEnum( element, f1_arg1, "stepStatus", CoD.SpecialEventUtility.EventStepStatus.COMPLETED )
			end
		},
		{
			stateName = "IncompleteState",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualToEnum( element, f1_arg1, "stepStatus", CoD.SpecialEventUtility.EventStepStatus.INCOMPLETE )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "stepStatus", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "stepStatus"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.SpecialEventProgressPip.__resetProperties = function ( f6_arg0 )
	f6_arg0.Background:completeAnimation() --[[ @ 0]]
	f6_arg0.FocusBorder:completeAnimation() --[[ @ 0]]
	f6_arg0.DotTiledBacking:completeAnimation() --[[ @ 0]]
	f6_arg0.Glow:completeAnimation() --[[ @ 0]]
	f6_arg0.ImageX:completeAnimation() --[[ @ 0]]
	f6_arg0.FrameBorder:completeAnimation() --[[ @ 0]]
	f6_arg0.Background:setAlpha( 0 ) --[[ @ 0]]
	f6_arg0.FocusBorder:setAlpha( 0 ) --[[ @ 0]]
	f6_arg0.DotTiledBacking:setAlpha( 0 ) --[[ @ 0]]
	f6_arg0.Glow:setAlpha( 0 ) --[[ @ 0]]
	f6_arg0.ImageX:setAlpha( 0 ) --[[ @ 0]]
	f6_arg0.FrameBorder:setAlpha( 0.15 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.SpecialEventProgressPip.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f7_arg0, f7_arg1 )
			f7_arg0:__resetProperties() --[[ @ 0]]
			f7_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f7_arg0.Background:completeAnimation() --[[ @ 0]]
			f7_arg0.Background:setAlpha( 0.05 ) --[[ @ 0]]
			f7_arg0.clipFinished( f7_arg0.Background ) --[[ @ 0]]
		end
	},
	Hidden = {
		DefaultClip = function ( f8_arg0, f8_arg1 )
			f8_arg0:__resetProperties() --[[ @ 0]]
			f8_arg0:setupElementClipCounter( 6 ) --[[ @ 0]]
			f8_arg0.FrameBorder:completeAnimation() --[[ @ 0]]
			f8_arg0.FrameBorder:setAlpha( 0 ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.FrameBorder ) --[[ @ 0]]
			f8_arg0.ImageX:completeAnimation() --[[ @ 0]]
			f8_arg0.ImageX:setAlpha( 0 ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.ImageX ) --[[ @ 0]]
			f8_arg0.Glow:completeAnimation() --[[ @ 0]]
			f8_arg0.Glow:setAlpha( 0 ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.Glow ) --[[ @ 0]]
			f8_arg0.Background:completeAnimation() --[[ @ 0]]
			f8_arg0.Background:setAlpha( 0 ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.Background ) --[[ @ 0]]
			f8_arg0.DotTiledBacking:completeAnimation() --[[ @ 0]]
			f8_arg0.DotTiledBacking:setAlpha( 0 ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.DotTiledBacking ) --[[ @ 0]]
			f8_arg0.FocusBorder:completeAnimation() --[[ @ 0]]
			f8_arg0.FocusBorder:setAlpha( 0 ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.FocusBorder ) --[[ @ 0]]
		end
	},
	CompletedState = {
		DefaultClip = function ( f9_arg0, f9_arg1 )
			f9_arg0:__resetProperties() --[[ @ 0]]
			f9_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f9_arg0.Glow:completeAnimation() --[[ @ 0]]
			f9_arg0.Glow:setAlpha( 0.6 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.Glow ) --[[ @ 0]]
			f9_arg0.Background:completeAnimation() --[[ @ 0]]
			f9_arg0.Background:setAlpha( 0.7 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.Background ) --[[ @ 0]]
			f9_arg0.DotTiledBacking:completeAnimation() --[[ @ 0]]
			f9_arg0.DotTiledBacking:setAlpha( 0.25 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.DotTiledBacking ) --[[ @ 0]]
			f9_arg0.FocusBorder:completeAnimation() --[[ @ 0]]
			f9_arg0.FocusBorder:setAlpha( 1 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.FocusBorder ) --[[ @ 0]]
		end
	},
	IncompleteState = {
		DefaultClip = function ( f10_arg0, f10_arg1 )
			f10_arg0:__resetProperties() --[[ @ 0]]
			f10_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.SpecialEventProgressPip.__onClose = function ( f11_arg0 )
	f11_arg0.DotTiledBacking:close() --[[ @ 0]]
end
 --[[ @ 0]]
