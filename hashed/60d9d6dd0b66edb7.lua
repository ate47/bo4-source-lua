-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:50
require( "ui/uieditor/widgets/startmenu/options/startmenuoptionsmaincorners" ) --[[ @ 0]]
require( "ui/uieditor/widgets/startmenu/options/startmenuoptionsmainframe" ) --[[ @ 0]]

CoD.StartMenuOptionsHeader = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.StartMenuOptionsHeader.__defaultWidth = 1920 --[[ @ 0]]
CoD.StartMenuOptionsHeader.__defaultHeight = 80 --[[ @ 0]]
CoD.StartMenuOptionsHeader.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.StartMenuOptionsHeader ) --[[ @ 0]]
	self.id = "StartMenuOptionsHeader" --[[ @ 0]]
	self.soundSet = "ChooseDecal" --[[ @ 0]]
	
	local Background = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	Background:setRGB( 0.63, 0.57, 0.2 ) --[[ @ 0]]
	Background:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( Background ) --[[ @ 0]]
	self.Background = Background --[[ @ 0]]
	
	local Gradient = LUI.UIImage.new( 0, 0, 0, 1930, 0, 0, 0, 80 ) --[[ @ 0]]
	Gradient:setRGB( 0.63, 0.57, 0.2 ) --[[ @ 0]]
	Gradient:setAlpha( 0 ) --[[ @ 0]]
	Gradient:setImage( RegisterImage( @"hash_61F4A521D2954B6" ) ) --[[ @ 0]]
	self:addElement( Gradient ) --[[ @ 0]]
	self.Gradient = Gradient --[[ @ 0]]
	
	local Underline = LUI.UIImage.new( 0, 1, 0, 0, 1, 1, -4, 0 ) --[[ @ 0]]
	Underline:setRGB( 0.15, 0.15, 0.15 ) --[[ @ 0]]
	self:addElement( Underline ) --[[ @ 0]]
	self.Underline = Underline --[[ @ 0]]
	
	local UnderlineTexture = LUI.UIImage.new( 0, 1, 0, 0, 1, 1, -2, 0 ) --[[ @ 0]]
	UnderlineTexture:setRGB( 0.15, 0.15, 0.15 ) --[[ @ 0]]
	UnderlineTexture:setImage( RegisterImage( @"uie_ui_menu_director_grain_bg01" ) ) --[[ @ 0]]
	UnderlineTexture:setMaterial( LUI.UIImage.GetCachedMaterial( @"ui_multiply" ) ) --[[ @ 0]]
	self:addElement( UnderlineTexture ) --[[ @ 0]]
	self.UnderlineTexture = UnderlineTexture --[[ @ 0]]
	
	local Frame = CoD.StartMenuOptionsMainFrame.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 0, 0, 80 ) --[[ @ 0]]
	Frame:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( Frame ) --[[ @ 0]]
	self.Frame = Frame --[[ @ 0]]
	
	local Divider = CoD.StartMenuOptionsMainFrame.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 0, 0, 41 ) --[[ @ 0]]
	Divider:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( Divider ) --[[ @ 0]]
	self.Divider = Divider --[[ @ 0]]
	
	local Verticle = CoD.StartMenuOptionsMainFrame.new( f1_arg0, f1_arg1, 0, 0, 0, 550, 0, 0, 0, 80 ) --[[ @ 0]]
	Verticle:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( Verticle ) --[[ @ 0]]
	self.Verticle = Verticle --[[ @ 0]]
	
	local StartMenuOptionsMainCorners = CoD.StartMenuOptionsMainCorners.new( f1_arg0, f1_arg1, 0.01, 0.36, 0, 0, 0, 0, 0, 80 ) --[[ @ 0]]
	StartMenuOptionsMainCorners:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( StartMenuOptionsMainCorners ) --[[ @ 0]]
	self.StartMenuOptionsMainCorners = StartMenuOptionsMainCorners --[[ @ 0]]
	
	local Corner = CoD.StartMenuOptionsMainCorners.new( f1_arg0, f1_arg1, 0.55, 0.55, 0, 544, 0, 0, 0, 80 ) --[[ @ 0]]
	Corner:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( Corner ) --[[ @ 0]]
	self.Corner = Corner --[[ @ 0]]
	
	local HeaderText = LUI.UIText.new( 0.5, 0.5, -880, -380, 0, 0, 25, 75 ) --[[ @ 0]]
	HeaderText:setRGB( 0.63, 0.57, 0.2 ) --[[ @ 0]]
	HeaderText:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"menu/new" ) ) --[[ @ 0]]
	HeaderText:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	HeaderText:setLetterSpacing( 10 ) --[[ @ 0]]
	HeaderText:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	self:addElement( HeaderText ) --[[ @ 0]]
	self.HeaderText = HeaderText --[[ @ 0]]
	
	local Image = LUI.UIImage.new( 0.5, 0.5, -958, -890, 0, 0, 29, 71 ) --[[ @ 0]]
	Image:setRGB( 0.63, 0.57, 0.2 ) --[[ @ 0]]
	Image:setAlpha( 0.6 ) --[[ @ 0]]
	Image:setImage( RegisterImage( @"uie_ui_menu_director_top_left_dot_pattern" ) ) --[[ @ 0]]
	self:addElement( Image ) --[[ @ 0]]
	self.Image = Image --[[ @ 0]]
	
	self:registerEventHandler( "menu_loaded", function ( self, event )
		local f2_local0 = nil --[[ @ 0]]
		if self.menuLoaded then
			f2_local0 = self:menuLoaded( event ) --[[ @ 0]]
		elseif self.super.menuLoaded then
			f2_local0 = self.super:menuLoaded( event ) --[[ @ 0]]
		end
		ShowHeaderIconOnly( f1_arg0 ) --[[ @ 0]]
		DataSourceHelperRecreate( f1_arg1, "ButtonLayoutLabels" ) --[[ @ 0]]
		if not f2_local0 then
			f2_local0 = self:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f2_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( self, f1_arg1, Enum[@"luibutton"][@"lui_key_xbb_pscircle"], nil, function ( element, menu, controller, model )
		GoBack( self, controller ) --[[ @ 0]]
		UpdateGamerprofile( self, element, controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xbb_pscircle"], @"menu/back", nil, nil ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( self, f1_arg1, Enum[@"luibutton"][@"lui_key_xbx_pssquare"], nil, function ( element, menu, controller, model )
		CoD.OptionsUtility.ResetPlayerSettingsGroupListToDefault( controller, self.OptionGroups ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xbx_pssquare"], @"menu/all_defaults", Enum[@"luibuttonpromptflags"][@"hash_72919C98A7A845F0"] | 750 << Enum[@"luibuttonpromptflags"][@"hash_176ADD225D738C93"], nil ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	self:subscribeToGlobalModel( f1_arg1, "PerController", "PlayerSettingsUpdate", function ( model )
		local f7_local0 = self --[[ @ 0]]
		if CoD.ModelUtility.IsModelValueEqualTo( f1_arg1, "PlayerSettingsUpdate", "button_layout" ) then
			DataSourceHelperRecreate( f1_arg1, "ButtonLayoutLabels" ) --[[ @ 0]]
		elseif CoD.ModelUtility.IsModelValueEqualTo( f1_arg1, "PlayerSettingsUpdate", "trigger_config" ) then
			DataSourceHelperRecreate( f1_arg1, "ButtonLayoutLabels" ) --[[ @ 0]]
		elseif CoD.ModelUtility.IsModelValueEqualTo( f1_arg1, "PlayerSettingsUpdate", "stick_layout" ) then
			DataSourceHelperRecreate( f1_arg1, "StickLayoutLabels" ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.StartMenuOptionsHeader.__onClose = function ( f8_arg0 )
	f8_arg0.Frame:close() --[[ @ 0]]
	f8_arg0.Divider:close() --[[ @ 0]]
	f8_arg0.Verticle:close() --[[ @ 0]]
	f8_arg0.StartMenuOptionsMainCorners:close() --[[ @ 0]]
	f8_arg0.Corner:close() --[[ @ 0]]
end
 --[[ @ 0]]
