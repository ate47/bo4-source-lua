-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:50
require( "x64:e3afa26bf197ec1" ) --[[ @ 0]]

CoD.DirectorZMTrialsInfoInternal = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.DirectorZMTrialsInfoInternal.__defaultWidth = 1920 --[[ @ 0]]
CoD.DirectorZMTrialsInfoInternal.__defaultHeight = 1080 --[[ @ 0]]
CoD.DirectorZMTrialsInfoInternal.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.DirectorZMTrialsInfoInternal ) --[[ @ 0]]
	self.id = "DirectorZMTrialsInfoInternal" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	
	local Trials = LUI.UIText.new( 0.5, 0.5, -750, -144, 0.5, 0.5, -426, -354 ) --[[ @ 0]]
	Trials:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	Trials:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	Trials:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	Trials:subscribeToGlobalModel( f1_arg1, "ZMLobbyExclusions", "ZMPlaylistTab", function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			Trials:setText( CoD.GameTypeUtility.GameTypeToLocalizeToUpperName( f2_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Trials ) --[[ @ 0]]
	self.Trials = Trials --[[ @ 0]]
	
	local TrialsIcon = LUI.UIFixedAspectRatioImage.new( 0.5, 0.5, -860, -760, 0.5, 0.5, -454, -354 ) --[[ @ 0]]
	TrialsIcon:setStretchedDimension( 4 ) --[[ @ 0]]
	TrialsIcon:subscribeToGlobalModel( f1_arg1, "ZMLobbyExclusions", "ZMPlaylistTab", function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			TrialsIcon:setImage( RegisterImage( CoD.GameTypeUtility.GameTypeToImage( f3_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( TrialsIcon ) --[[ @ 0]]
	self.TrialsIcon = TrialsIcon --[[ @ 0]]
	
	local TrialsDesc = LUI.UIText.new( 0.5, 0.5, -860, -360, 0.5, 0.5, -274, -244 ) --[[ @ 0]]
	TrialsDesc:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	TrialsDesc:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	TrialsDesc:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	TrialsDesc:subscribeToGlobalModel( f1_arg1, "ZMLobbyExclusions", "ZMPlaylistTab", function ( model )
		local f4_local0 = model:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			TrialsDesc:setText( CoD.GameTypeUtility.GameTypeToLocalizeDesc( f4_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( TrialsDesc ) --[[ @ 0]]
	self.TrialsDesc = TrialsDesc --[[ @ 0]]
	
	local Line = LUI.UIImage.new( 0.5, 0.5, -860, -360, 0.5, 0.5, -294, -292 ) --[[ @ 0]]
	Line:setAlpha( 0.25 ) --[[ @ 0]]
	self:addElement( Line ) --[[ @ 0]]
	self.Line = Line --[[ @ 0]]
	
	local TrialsInfo = CoD.DirectorZMTrialsInfoDescriptionTall.new( f1_arg0, f1_arg1, 0.5, 0.5, -300, 890, 0.5, 0.5, -355, 341 ) --[[ @ 0]]
	TrialsInfo:mergeStateConditions( {
		{
			stateName = "Variant1",
			condition = function ( menu, element, event )
				return CoD.ZombieUtility.IsFocusedPlaylistTrialVariant( 1 )
			end
		}
	} ) --[[ @ 0]]
	local f1_local6 = TrialsInfo --[[ @ 0]]
	local f1_local7 = TrialsInfo.subscribeToModel --[[ @ 0]]
	local f1_local8 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local7( f1_local6, f1_local8["ZMLobbyExclusions.focusedPlaylistID"], function ( f6_arg0 )
		f1_arg0:updateElementState( TrialsInfo, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f6_arg0:get(),
			modelName = "ZMLobbyExclusions.focusedPlaylistID"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	TrialsInfo:setScale( 1.1, 1.1 ) --[[ @ 0]]
	self:addElement( TrialsInfo ) --[[ @ 0]]
	self.TrialsInfo = TrialsInfo --[[ @ 0]]
	
	TrialsInfo.id = "TrialsInfo" --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.DirectorZMTrialsInfoInternal.__onClose = function ( f7_arg0 )
	f7_arg0.Trials:close() --[[ @ 0]]
	f7_arg0.TrialsIcon:close() --[[ @ 0]]
	f7_arg0.TrialsDesc:close() --[[ @ 0]]
	f7_arg0.TrialsInfo:close() --[[ @ 0]]
end
 --[[ @ 0]]
