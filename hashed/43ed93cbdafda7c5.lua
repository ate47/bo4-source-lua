-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:49
require( "ui/uieditor/menus/lobby/directorchoosemapandgametype" ) --[[ @ 0]]
require( "ui/uieditor/menus/lobby/directorcustomgamesetup" ) --[[ @ 0]]
require( "x64:320adbc63353ec37" ) --[[ @ 0]]
require( "x64:447c727557c223b9" ) --[[ @ 0]]
require( "ui/uieditor/widgets/common/commonheader" ) --[[ @ 0]]
require( "x64:48830a14f983c4c4" ) --[[ @ 0]]
require( "x64:763f019e9d0f8956" ) --[[ @ 0]]
require( "ui/uieditor/widgets/director/directorleaderactivity" ) --[[ @ 0]]
require( "x64:6260c7a8e3737127" ) --[[ @ 0]]
require( "x64:751ef3a2adbd471e" ) --[[ @ 0]]
require( "x64:6fda45231af81f63" ) --[[ @ 0]]
require( "x64:1ef651f35122631" ) --[[ @ 0]]
require( "ui/uieditor/widgets/director/directorpregamebuttonoption" ) --[[ @ 0]]
require( "x64:746270a4d7cafbc0" ) --[[ @ 0]]
require( "x64:3e18985ca0ef8cf8" ) --[[ @ 0]]
require( "x64:6dbdc73a4a6c0b46" ) --[[ @ 0]]
require( "x64:445928c36e455a1" ) --[[ @ 0]]

CoD.directorCustom = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.directorCustom.__defaultWidth = 1920 --[[ @ 0]]
CoD.directorCustom.__defaultHeight = 1080 --[[ @ 0]]
CoD.directorCustom.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	CoD.BaseUtility.InitGlobalModel( "lobbyRoot.selectedGameType" ) --[[ @ 0]]
	CoD.BaseUtility.InitGlobalModel( "GametypeSettings.Update" ) --[[ @ 0]]
	CoD.BaseUtility.CreateGlobalModel( "localZMDifficulty" ) --[[ @ 0]]
	CoD.BaseUtility.InitGlobalModel( "lobbyRoot.selectedMapId" ) --[[ @ 0]]
	CoD.BaseUtility.InitGlobalModel( "lobbyRoot.lobbyList.playerCount" ) --[[ @ 0]]
	CoD.BaseUtility.CreateGlobalModel( "localZMTrialVariant" ) --[[ @ 0]]
	self:setClass( CoD.directorCustom ) --[[ @ 0]]
	self.id = "directorCustom" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local CustomGamePlayers = CoD.DirectorVerticalPartyListCustom.new( f1_arg0, f1_arg1, 0.5, 0.5, 397, 917, 0, 0, 90, 614 ) --[[ @ 0]]
	self:addElement( CustomGamePlayers ) --[[ @ 0]]
	self.CustomGamePlayers = CustomGamePlayers --[[ @ 0]]
	
	local DirectorMapGameTypeAndDifficulty = CoD.DirectorMapGameTypeAndDifficulty.new( f1_arg0, f1_arg1, 0.5, 0.5, 514, 896, 1, 1, -368, -188 ) --[[ @ 0]]
	DirectorMapGameTypeAndDifficulty:mergeStateConditions( {
		{
			stateName = "Unselectable",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalModelValueGreaterThan( "lobbyRoot.lobbyTimeRemaining", 0 )
			end
		}
	} ) --[[ @ 0]]
	local f1_local3 = DirectorMapGameTypeAndDifficulty --[[ @ 0]]
	local LeaderActivity = DirectorMapGameTypeAndDifficulty.subscribeToModel --[[ @ 0]]
	local HomeOrPlayListFullPC = Engine[@"getglobalmodel"]() --[[ @ 0]]
	LeaderActivity( f1_local3, HomeOrPlayListFullPC["lobbyRoot.lobbyTimeRemaining"], function ( f3_arg0 )
		f1_arg0:updateElementState( DirectorMapGameTypeAndDifficulty, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f3_arg0:get(),
			modelName = "lobbyRoot.lobbyTimeRemaining"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	DirectorMapGameTypeAndDifficulty:setAlpha( 0 ) --[[ @ 0]]
	DirectorMapGameTypeAndDifficulty.DirectorMapAndGameInternal.PlaylistHeader.GameModeText:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_2BC441E8EF98063C" ) ) --[[ @ 0]]
	DirectorMapGameTypeAndDifficulty.DirectorMapAndGameInternal.PlaylistHeaderNonHost.GameModeText:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_1C95DCE378B96DFF" ) ) --[[ @ 0]]
	DirectorMapGameTypeAndDifficulty:subscribeToGlobalModel( f1_arg1, "MapVote", "mapVoteMapNext", function ( model )
		local f4_local0 = model:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			DirectorMapGameTypeAndDifficulty.DirectorMapAndGameInternal.MapImage:setImage( RegisterImage( MapNameToMapImage( f4_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	DirectorMapGameTypeAndDifficulty.DirectorMapAndGameInternal.GamemodeIcon.__GamemodeIcon_Image = function ( f5_arg0 )
		local f5_local0 = f5_arg0:get() --[[ @ 0]]
		if f5_local0 ~= nil then
			DirectorMapGameTypeAndDifficulty.DirectorMapAndGameInternal.GamemodeIcon:setImage( RegisterImage( CoD.ZombieUtility.GetLocalZMDifficultyImage( f5_local0 ) ) ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	DirectorMapGameTypeAndDifficulty:subscribeToGlobalModel( f1_arg1, "MapVote", "mapVoteGameModeNext", DirectorMapGameTypeAndDifficulty.DirectorMapAndGameInternal.GamemodeIcon.__GamemodeIcon_Image ) --[[ @ 0]]
	DirectorMapGameTypeAndDifficulty.DirectorMapAndGameInternal.GamemodeIcon.__GamemodeIcon_Image_FullPath = function ()
		local f6_local0 = DataSources.MapVote.getModel( f1_arg1 ) --[[ @ 0]]
		f6_local0 = f6_local0.mapVoteGameModeNext --[[ @ 0]]
		if f6_local0 then
			DirectorMapGameTypeAndDifficulty.DirectorMapAndGameInternal.GamemodeIcon.__GamemodeIcon_Image( f6_local0 ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	DirectorMapGameTypeAndDifficulty.DirectorMapAndGameInternal.DirectorMapAndGameTypeInternalTitles.Label.__Label_Desc = function ( f7_arg0 )
		local f7_local0 = f7_arg0:get() --[[ @ 0]]
		if f7_local0 ~= nil then
			DirectorMapGameTypeAndDifficulty.DirectorMapAndGameInternal.DirectorMapAndGameTypeInternalTitles.Label:setText( CoD.ZombieUtility.MapNameToZMOfflineLocalizedMapName( f7_local0 ) ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	DirectorMapGameTypeAndDifficulty:subscribeToGlobalModel( f1_arg1, "MapVote", "mapVoteMapNext", DirectorMapGameTypeAndDifficulty.DirectorMapAndGameInternal.DirectorMapAndGameTypeInternalTitles.Label.__Label_Desc ) --[[ @ 0]]
	DirectorMapGameTypeAndDifficulty.DirectorMapAndGameInternal.DirectorMapAndGameTypeInternalTitles.Label.__Label_Desc_FullPath = function ()
		local f8_local0 = DataSources.MapVote.getModel( f1_arg1 ) --[[ @ 0]]
		f8_local0 = f8_local0.mapVoteMapNext --[[ @ 0]]
		if f8_local0 then
			DirectorMapGameTypeAndDifficulty.DirectorMapAndGameInternal.DirectorMapAndGameTypeInternalTitles.Label.__Label_Desc( f8_local0 ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	DirectorMapGameTypeAndDifficulty:subscribeToGlobalModel( f1_arg1, "MapVote", "mapVoteGameModeNext", function ( model )
		local f9_local0 = model:get() --[[ @ 0]]
		if f9_local0 ~= nil then
			DirectorMapGameTypeAndDifficulty.DirectorMapAndGameInternal.DirectorMapAndGameTypeInternalTitles.SubTitle:setText( CoD.GameTypeUtility.GameTypeToLocalizeToUpperName( f9_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	DirectorMapGameTypeAndDifficulty:appendEventHandler( "on_session_start", function ( f10_arg0, f10_arg1 )
		f10_arg1.menu = f10_arg1.menu or f1_arg0 --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f10_arg0, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	DirectorMapGameTypeAndDifficulty:appendEventHandler( "on_session_end", function ( f11_arg0, f11_arg1 )
		f11_arg1.menu = f11_arg1.menu or f1_arg0 --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f11_arg0, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	f1_local3 = DirectorMapGameTypeAndDifficulty --[[ @ 0]]
	LeaderActivity = DirectorMapGameTypeAndDifficulty.subscribeToModel --[[ @ 0]]
	HomeOrPlayListFullPC = Engine[@"getglobalmodel"]() --[[ @ 0]]
	LeaderActivity( f1_local3, HomeOrPlayListFullPC["lobbyRoot.lobbyNav"], function ( f12_arg0, f12_arg1 )
		CoD.Menu.UpdateButtonShownState( f12_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local3 = DirectorMapGameTypeAndDifficulty --[[ @ 0]]
	LeaderActivity = DirectorMapGameTypeAndDifficulty.subscribeToModel --[[ @ 0]]
	HomeOrPlayListFullPC = Engine[@"getglobalmodel"]() --[[ @ 0]]
	LeaderActivity( f1_local3, HomeOrPlayListFullPC["lobbyRoot.gameClient.update"], function ( f13_arg0, f13_arg1 )
		CoD.Menu.UpdateButtonShownState( f13_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local3 = DirectorMapGameTypeAndDifficulty --[[ @ 0]]
	LeaderActivity = DirectorMapGameTypeAndDifficulty.subscribeToModel --[[ @ 0]]
	HomeOrPlayListFullPC = Engine[@"getglobalmodel"]() --[[ @ 0]]
	LeaderActivity( f1_local3, HomeOrPlayListFullPC["lobbyRoot.privateClient.update"], function ( f14_arg0, f14_arg1 )
		CoD.Menu.UpdateButtonShownState( f14_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local3 = DirectorMapGameTypeAndDifficulty --[[ @ 0]]
	LeaderActivity = DirectorMapGameTypeAndDifficulty.subscribeToModel --[[ @ 0]]
	HomeOrPlayListFullPC = Engine[@"getglobalmodel"]() --[[ @ 0]]
	LeaderActivity( f1_local3, HomeOrPlayListFullPC["lobbyRoot.lobbyTimeRemaining"], function ( f15_arg0, f15_arg1 )
		CoD.Menu.UpdateButtonShownState( f15_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	DirectorMapGameTypeAndDifficulty:registerEventHandler( "gain_focus", function ( element, event )
		local f16_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f16_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f16_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		return f16_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( DirectorMapGameTypeAndDifficulty, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"], "ui_confirm", function ( element, menu, controller, model )
		if IsLobbyHostOfCurrentMenu() and not CoD.BaseUtility.IsSelfInState( self, "ZMOfflinePrivate" ) and not CoD.ModelUtility.IsGlobalModelValueGreaterThan( "lobbyRoot.lobbyTimeRemaining", 0 ) then
			CoD.LobbyUtility.SetLeaderActivityAndOpenOverlay( self, controller, CoD.LobbyUtility.LeaderActivity.CHOOSING_MAP, "DirectorChooseMapAndGameType" ) --[[ @ 0]]
			PlaySoundAlias( "uin_toggle_generic" ) --[[ @ 0]]
			return true
		elseif IsLobbyHostOfCurrentMenu() and CoD.BaseUtility.IsSelfInState( self, "ZMOfflinePrivate" ) and not CoD.ModelUtility.IsGlobalModelValueGreaterThan( "lobbyRoot.lobbyTimeRemaining", 0 ) then
			CoD.LobbyUtility.SetLeaderActivityAndOpenOverlay( self, controller, CoD.LobbyUtility.LeaderActivity.CHOOSING_MAP, "DirectorGamemodeSelectionZMOffline" ) --[[ @ 0]]
			PlaySoundAlias( "uin_toggle_generic" ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsLobbyHostOfCurrentMenu() and not CoD.BaseUtility.IsSelfInState( self, "ZMOfflinePrivate" ) and not CoD.ModelUtility.IsGlobalModelValueGreaterThan( "lobbyRoot.lobbyTimeRemaining", 0 ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"menu/select", nil, "ui_confirm" ) --[[ @ 0]]
			return true
		elseif IsLobbyHostOfCurrentMenu() and CoD.BaseUtility.IsSelfInState( self, "ZMOfflinePrivate" ) and not CoD.ModelUtility.IsGlobalModelValueGreaterThan( "lobbyRoot.lobbyTimeRemaining", 0 ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"menu/select", nil, "ui_confirm" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( DirectorMapGameTypeAndDifficulty ) --[[ @ 0]]
	self.DirectorMapGameTypeAndDifficulty = DirectorMapGameTypeAndDifficulty --[[ @ 0]]
	
	LeaderActivity = CoD.DirectorLeaderActivity.new( f1_arg0, f1_arg1, 0.5, 0.5, -896, -429, 1, 1, -247, -216 ) --[[ @ 0]]
	LeaderActivity:mergeStateConditions( {
		{
			stateName = "Visible",
			condition = function ( menu, element, event )
				return not CoD.DirectorUtility.IsOfflineOnlyDemo()
			end
		}
	} ) --[[ @ 0]]
	LeaderActivity:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( LeaderActivity ) --[[ @ 0]]
	self.LeaderActivity = LeaderActivity --[[ @ 0]]
	
	f1_local3 = nil --[[ @ 0]]
	f1_local3 = LUI.UIElement.createFake() --[[ @ 0]]
	self.HomeOrPlayListFull = f1_local3 --[[ @ 0]]
	HomeOrPlayListFullPC = nil --[[ @ 0]]
	
	HomeOrPlayListFullPC = CoD.DirectorPreGameButtonContainer.new( f1_arg0, f1_arg1, 0.5, 0.5, -505, 478, 1, 1, -178, -108 ) --[[ @ 0]]
	HomeOrPlayListFullPC.LobbyButtons:setDataSource( "DirectorPregameButtons" ) --[[ @ 0]]
	self:addElement( HomeOrPlayListFullPC ) --[[ @ 0]]
	self.HomeOrPlayListFullPC = HomeOrPlayListFullPC --[[ @ 0]]
	
	local CommonHeader = CoD.CommonHeader.new( f1_arg0, f1_arg1, 0, 0, 0, 1920, 0, 0, 0, 67 ) --[[ @ 0]]
	CommonHeader:subscribeToGlobalModel( f1_arg1, "LobbyRoot", "lobbyMainMode", function ( model )
		local f20_local0 = model:get() --[[ @ 0]]
		if f20_local0 ~= nil then
			CommonHeader.subtitle.StageTitle:setText( LocalizeToUpperString( CoD.DirectorUtility.ConvertLobbyMainModeToModeString( f20_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	CommonHeader.subtitle.subtitle.__subtitle_SubtitleText = function ( f21_arg0 )
		local f21_local0 = f21_arg0:get() --[[ @ 0]]
		if f21_local0 ~= nil then
			CommonHeader.subtitle.subtitle:setText( LocalizeToUpperString( CoD.ZombieUtility.GetLocalZMLobbyTitle( f21_local0 ) ) ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	CommonHeader:subscribeToGlobalModel( f1_arg1, "LobbyRoot", "lobbyTitle", CommonHeader.subtitle.subtitle.__subtitle_SubtitleText ) --[[ @ 0]]
	CommonHeader.subtitle.subtitle.__subtitle_SubtitleText_FullPath = function ()
		local f22_local0 = DataSources.LobbyRoot.getModel( f1_arg1 ) --[[ @ 0]]
		f22_local0 = f22_local0.lobbyTitle --[[ @ 0]]
		if f22_local0 then
			CommonHeader.subtitle.subtitle.__subtitle_SubtitleText( f22_local0 ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	self:addElement( CommonHeader ) --[[ @ 0]]
	self.CommonHeader = CommonHeader --[[ @ 0]]
	
	local DirectorLobbyPoseMembers = CoD.DirectorLobbyPoseMembers.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	self:addElement( DirectorLobbyPoseMembers ) --[[ @ 0]]
	self.DirectorLobbyPoseMembers = DirectorLobbyPoseMembers --[[ @ 0]]
	
	local SetUpMatchButton = CoD.DirectorPreGameSetUpMatch.new( f1_arg0, f1_arg1, 0.5, 0.5, 514, 896, 1, 1, -368, -188 ) --[[ @ 0]]
	SetUpMatchButton:mergeStateConditions( {
		{
			stateName = "Unselectable",
			condition = function ( menu, element, event )
				return not IsLobbyHostOfCurrentMenu()
			end
		},
		{
			stateName = "Visible",
			condition = function ( menu, element, event )
				return true
			end
		}
	} ) --[[ @ 0]]
	SetUpMatchButton:appendEventHandler( "on_session_start", function ( f25_arg0, f25_arg1 )
		f25_arg1.menu = f25_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( SetUpMatchButton, f25_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	SetUpMatchButton:appendEventHandler( "on_session_end", function ( f26_arg0, f26_arg1 )
		f26_arg1.menu = f26_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( SetUpMatchButton, f26_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local ZMLoadoutPreviewInfo = SetUpMatchButton --[[ @ 0]]
	local StartButton = SetUpMatchButton.subscribeToModel --[[ @ 0]]
	local DirectorLobbyPoseMembersZM = Engine[@"getglobalmodel"]() --[[ @ 0]]
	StartButton( ZMLoadoutPreviewInfo, DirectorLobbyPoseMembersZM["lobbyRoot.lobbyNav"], function ( f27_arg0 )
		f1_arg0:updateElementState( SetUpMatchButton, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f27_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ZMLoadoutPreviewInfo = SetUpMatchButton --[[ @ 0]]
	StartButton = SetUpMatchButton.subscribeToModel --[[ @ 0]]
	DirectorLobbyPoseMembersZM = Engine[@"getglobalmodel"]() --[[ @ 0]]
	StartButton( ZMLoadoutPreviewInfo, DirectorLobbyPoseMembersZM["lobbyRoot.gameClient.update"], function ( f28_arg0 )
		f1_arg0:updateElementState( SetUpMatchButton, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f28_arg0:get(),
			modelName = "lobbyRoot.gameClient.update"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ZMLoadoutPreviewInfo = SetUpMatchButton --[[ @ 0]]
	StartButton = SetUpMatchButton.subscribeToModel --[[ @ 0]]
	DirectorLobbyPoseMembersZM = Engine[@"getglobalmodel"]() --[[ @ 0]]
	StartButton( ZMLoadoutPreviewInfo, DirectorLobbyPoseMembersZM["lobbyRoot.privateClient.update"], function ( f29_arg0 )
		f1_arg0:updateElementState( SetUpMatchButton, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f29_arg0:get(),
			modelName = "lobbyRoot.privateClient.update"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	SetUpMatchButton.MapImage.PlaylistHeader.GameModeText:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_2FA47140D97F89D" ) ) --[[ @ 0]]
	SetUpMatchButton.MapImage.PlaylistHeader.GameModeText:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	ZMLoadoutPreviewInfo = SetUpMatchButton --[[ @ 0]]
	StartButton = SetUpMatchButton.subscribeToModel --[[ @ 0]]
	DirectorLobbyPoseMembersZM = Engine[@"getglobalmodel"]() --[[ @ 0]]
	StartButton( ZMLoadoutPreviewInfo, DirectorLobbyPoseMembersZM["lobbyRoot.lobbyNav"], function ( f30_arg0, f30_arg1 )
		CoD.Menu.UpdateButtonShownState( f30_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ZMLoadoutPreviewInfo = SetUpMatchButton --[[ @ 0]]
	StartButton = SetUpMatchButton.subscribeToModel --[[ @ 0]]
	DirectorLobbyPoseMembersZM = Engine[@"getglobalmodel"]() --[[ @ 0]]
	StartButton( ZMLoadoutPreviewInfo, DirectorLobbyPoseMembersZM["lobbyRoot.lobbyTimeRemaining"], function ( f31_arg0, f31_arg1 )
		CoD.Menu.UpdateButtonShownState( f31_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	SetUpMatchButton:appendEventHandler( "on_session_start", function ( f32_arg0, f32_arg1 )
		f32_arg1.menu = f32_arg1.menu or f1_arg0 --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f32_arg0, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	SetUpMatchButton:appendEventHandler( "on_session_end", function ( f33_arg0, f33_arg1 )
		f33_arg1.menu = f33_arg1.menu or f1_arg0 --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f33_arg0, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	ZMLoadoutPreviewInfo = SetUpMatchButton --[[ @ 0]]
	StartButton = SetUpMatchButton.subscribeToModel --[[ @ 0]]
	DirectorLobbyPoseMembersZM = Engine[@"getglobalmodel"]() --[[ @ 0]]
	StartButton( ZMLoadoutPreviewInfo, DirectorLobbyPoseMembersZM["lobbyRoot.gameClient.update"], function ( f34_arg0, f34_arg1 )
		CoD.Menu.UpdateButtonShownState( f34_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ZMLoadoutPreviewInfo = SetUpMatchButton --[[ @ 0]]
	StartButton = SetUpMatchButton.subscribeToModel --[[ @ 0]]
	DirectorLobbyPoseMembersZM = Engine[@"getglobalmodel"]() --[[ @ 0]]
	StartButton( ZMLoadoutPreviewInfo, DirectorLobbyPoseMembersZM["lobbyRoot.privateClient.update"], function ( f35_arg0, f35_arg1 )
		CoD.Menu.UpdateButtonShownState( f35_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	SetUpMatchButton:registerEventHandler( "gain_focus", function ( element, event )
		local f36_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f36_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f36_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		return f36_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( SetUpMatchButton, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"], "ui_confirm", function ( element, menu, controller, model )
		if IsWarzone() and not CoD.ModelUtility.IsGlobalModelValueGreaterThan( "lobbyRoot.lobbyTimeRemaining", 0 ) and IsLobbyHostOfCurrentMenu() then
			SetFocusToElement( self, "StartButton", controller ) --[[ @ 0]]
			SetLoseFocusToElement( self, "SetUpMatchButton", controller ) --[[ @ 0]]
			CoD.DirectorUtility.DirectorOpenOverlayWithCurrentMenuMode( menu, controller, "DirectorCustomGameSetUpWZ" ) --[[ @ 0]]
			PlaySoundAlias( "uin_toggle_generic" ) --[[ @ 0]]
			return true
		elseif not CoD.ModelUtility.IsGlobalModelValueGreaterThan( "lobbyRoot.lobbyTimeRemaining", 0 ) and IsLobbyHostOfCurrentMenu() then
			SetFocusToElement( self, "StartButton", controller ) --[[ @ 0]]
			SetLoseFocusToElement( self, "SetUpMatchButton", controller ) --[[ @ 0]]
			CoD.DirectorUtility.DirectorOpenOverlayWithCurrentMenuMode( menu, controller, "DirectorCustomGameSetUp" ) --[[ @ 0]]
			PlaySoundAlias( "uin_toggle_generic" ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsWarzone() and not CoD.ModelUtility.IsGlobalModelValueGreaterThan( "lobbyRoot.lobbyTimeRemaining", 0 ) and IsLobbyHostOfCurrentMenu() then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"menu/select", nil, "ui_confirm" ) --[[ @ 0]]
			return true
		elseif not CoD.ModelUtility.IsGlobalModelValueGreaterThan( "lobbyRoot.lobbyTimeRemaining", 0 ) and IsLobbyHostOfCurrentMenu() then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"menu/select", nil, "ui_confirm" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( SetUpMatchButton ) --[[ @ 0]]
	self.SetUpMatchButton = SetUpMatchButton --[[ @ 0]]
	
	StartButton = CoD.DirectorCustomStartButton.new( f1_arg0, f1_arg1, 0.5, 0.5, 514, 896, 1, 1, -178, -108 ) --[[ @ 0]]
	StartButton:mergeStateConditions( {
		{
			stateName = "Disabled",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		},
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				local f40_local0 --[[ @ 0]]
				if not IsLobbyHostOfCurrentMenu() then
					f40_local0 = not CoD.ModelUtility.IsGlobalModelValueGreaterThan( "lobbyRoot.lobbyTimeRemaining", 0 ) --[[ @ 0]]
				else
					f40_local0 = false --[[ @ 0]]
				end
				return f40_local0
			end
		}
	} ) --[[ @ 0]]
	DirectorLobbyPoseMembersZM = StartButton --[[ @ 0]]
	ZMLoadoutPreviewInfo = StartButton.subscribeToModel --[[ @ 0]]
	local CustomGamesButton = DataSources.LobbyRoot.getModel( f1_arg1 ) --[[ @ 0]]
	ZMLoadoutPreviewInfo( DirectorLobbyPoseMembersZM, CustomGamesButton.hideMenusForGameStart, function ( f41_arg0 )
		f1_arg0:updateElementState( StartButton, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f41_arg0:get(),
			modelName = "hideMenusForGameStart"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	DirectorLobbyPoseMembersZM = StartButton --[[ @ 0]]
	ZMLoadoutPreviewInfo = StartButton.subscribeToModel --[[ @ 0]]
	CustomGamesButton = Engine[@"getglobalmodel"]() --[[ @ 0]]
	ZMLoadoutPreviewInfo( DirectorLobbyPoseMembersZM, CustomGamesButton["lobbyRoot.lobbyTimeRemaining"], function ( f42_arg0 )
		f1_arg0:updateElementState( StartButton, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f42_arg0:get(),
			modelName = "lobbyRoot.lobbyTimeRemaining"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	DirectorLobbyPoseMembersZM = StartButton --[[ @ 0]]
	ZMLoadoutPreviewInfo = StartButton.subscribeToModel --[[ @ 0]]
	CustomGamesButton = Engine[@"getglobalmodel"]() --[[ @ 0]]
	ZMLoadoutPreviewInfo( DirectorLobbyPoseMembersZM, CustomGamesButton["lobbyRoot.theaterDownloadPercent"], function ( f43_arg0 )
		f1_arg0:updateElementState( StartButton, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f43_arg0:get(),
			modelName = "lobbyRoot.theaterDownloadPercent"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	DirectorLobbyPoseMembersZM = StartButton --[[ @ 0]]
	ZMLoadoutPreviewInfo = StartButton.subscribeToModel --[[ @ 0]]
	CustomGamesButton = Engine[@"getglobalmodel"]() --[[ @ 0]]
	ZMLoadoutPreviewInfo( DirectorLobbyPoseMembersZM, CustomGamesButton["lobbyRoot.theaterDataDownloaded"], function ( f44_arg0 )
		f1_arg0:updateElementState( StartButton, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f44_arg0:get(),
			modelName = "lobbyRoot.theaterDataDownloaded"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	DirectorLobbyPoseMembersZM = StartButton --[[ @ 0]]
	ZMLoadoutPreviewInfo = StartButton.subscribeToModel --[[ @ 0]]
	CustomGamesButton = Engine[@"getglobalmodel"]() --[[ @ 0]]
	ZMLoadoutPreviewInfo( DirectorLobbyPoseMembersZM, CustomGamesButton["lobbyRoot.lobbyNav"], function ( f45_arg0 )
		f1_arg0:updateElementState( StartButton, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f45_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	DirectorLobbyPoseMembersZM = StartButton --[[ @ 0]]
	ZMLoadoutPreviewInfo = StartButton.subscribeToModel --[[ @ 0]]
	CustomGamesButton = Engine[@"getglobalmodel"]() --[[ @ 0]]
	ZMLoadoutPreviewInfo( DirectorLobbyPoseMembersZM, CustomGamesButton["lobbyRoot.privateClient.isHost"], function ( f46_arg0 )
		f1_arg0:updateElementState( StartButton, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f46_arg0:get(),
			modelName = "lobbyRoot.privateClient.isHost"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	DirectorLobbyPoseMembersZM = StartButton --[[ @ 0]]
	ZMLoadoutPreviewInfo = StartButton.subscribeToModel --[[ @ 0]]
	CustomGamesButton = Engine[@"getglobalmodel"]() --[[ @ 0]]
	ZMLoadoutPreviewInfo( DirectorLobbyPoseMembersZM, CustomGamesButton["lobbyRoot.gameClient.isHost"], function ( f47_arg0 )
		f1_arg0:updateElementState( StartButton, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f47_arg0:get(),
			modelName = "lobbyRoot.gameClient.isHost"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	StartButton:appendEventHandler( "on_session_start", function ( f48_arg0, f48_arg1 )
		f48_arg1.menu = f48_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( StartButton, f48_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	StartButton:appendEventHandler( "on_session_end", function ( f49_arg0, f49_arg1 )
		f49_arg1.menu = f49_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( StartButton, f49_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	DirectorLobbyPoseMembersZM = StartButton --[[ @ 0]]
	ZMLoadoutPreviewInfo = StartButton.subscribeToModel --[[ @ 0]]
	CustomGamesButton = Engine[@"getglobalmodel"]() --[[ @ 0]]
	ZMLoadoutPreviewInfo( DirectorLobbyPoseMembersZM, CustomGamesButton["lobbyRoot.gameClient.update"], function ( f50_arg0 )
		f1_arg0:updateElementState( StartButton, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f50_arg0:get(),
			modelName = "lobbyRoot.gameClient.update"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	DirectorLobbyPoseMembersZM = StartButton --[[ @ 0]]
	ZMLoadoutPreviewInfo = StartButton.subscribeToModel --[[ @ 0]]
	CustomGamesButton = Engine[@"getglobalmodel"]() --[[ @ 0]]
	ZMLoadoutPreviewInfo( DirectorLobbyPoseMembersZM, CustomGamesButton["lobbyRoot.privateClient.update"], function ( f51_arg0 )
		f1_arg0:updateElementState( StartButton, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f51_arg0:get(),
			modelName = "lobbyRoot.privateClient.update"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	StartButton.DirectorCustomStartButton.MiddleText:setText( LocalizeToUpperString( @"hash_0" ) ) --[[ @ 0]]
	StartButton.DirectorCustomStartButton.MiddleTextFocus:setText( LocalizeToUpperString( @"hash_0" ) ) --[[ @ 0]]
	StartButton.PlayText:setText( LocalizeToUpperString( @"menu/play" ) ) --[[ @ 0]]
	StartButton.PlayTextFocus:setText( LocalizeToUpperString( @"menu/play" ) ) --[[ @ 0]]
	StartButton:appendEventHandler( "on_session_start", function ( f52_arg0, f52_arg1 )
		f52_arg1.menu = f52_arg1.menu or f1_arg0 --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f52_arg0, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	StartButton:appendEventHandler( "on_session_end", function ( f53_arg0, f53_arg1 )
		f53_arg1.menu = f53_arg1.menu or f1_arg0 --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f53_arg0, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	DirectorLobbyPoseMembersZM = StartButton --[[ @ 0]]
	ZMLoadoutPreviewInfo = StartButton.subscribeToModel --[[ @ 0]]
	CustomGamesButton = Engine[@"getglobalmodel"]() --[[ @ 0]]
	ZMLoadoutPreviewInfo( DirectorLobbyPoseMembersZM, CustomGamesButton["lobbyRoot.lobbyNav"], function ( f54_arg0, f54_arg1 )
		CoD.Menu.UpdateButtonShownState( f54_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	DirectorLobbyPoseMembersZM = StartButton --[[ @ 0]]
	ZMLoadoutPreviewInfo = StartButton.subscribeToModel --[[ @ 0]]
	CustomGamesButton = Engine[@"getglobalmodel"]() --[[ @ 0]]
	ZMLoadoutPreviewInfo( DirectorLobbyPoseMembersZM, CustomGamesButton["lobbyRoot.gameClient.update"], function ( f55_arg0, f55_arg1 )
		CoD.Menu.UpdateButtonShownState( f55_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	DirectorLobbyPoseMembersZM = StartButton --[[ @ 0]]
	ZMLoadoutPreviewInfo = StartButton.subscribeToModel --[[ @ 0]]
	CustomGamesButton = Engine[@"getglobalmodel"]() --[[ @ 0]]
	ZMLoadoutPreviewInfo( DirectorLobbyPoseMembersZM, CustomGamesButton["lobbyRoot.privateClient.update"], function ( f56_arg0, f56_arg1 )
		CoD.Menu.UpdateButtonShownState( f56_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	DirectorLobbyPoseMembersZM = StartButton --[[ @ 0]]
	ZMLoadoutPreviewInfo = StartButton.subscribeToModel --[[ @ 0]]
	CustomGamesButton = Engine[@"getglobalmodel"]() --[[ @ 0]]
	ZMLoadoutPreviewInfo( DirectorLobbyPoseMembersZM, CustomGamesButton["lobbyRoot.selectedMapId"], function ( f57_arg0, f57_arg1 )
		CoD.Menu.UpdateButtonShownState( f57_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	DirectorLobbyPoseMembersZM = StartButton --[[ @ 0]]
	ZMLoadoutPreviewInfo = StartButton.subscribeToModel --[[ @ 0]]
	CustomGamesButton = Engine[@"getglobalmodel"]() --[[ @ 0]]
	ZMLoadoutPreviewInfo( DirectorLobbyPoseMembersZM, CustomGamesButton["lobbyRoot.lobbyList.playerCount"], function ( f58_arg0, f58_arg1 )
		CoD.Menu.UpdateButtonShownState( f58_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	StartButton:registerEventHandler( "gain_focus", function ( element, event )
		local f59_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f59_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f59_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		return f59_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( StartButton, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"], "ui_confirm", function ( element, menu, controller, model )
		if IsLobbyHostOfCurrentMenu() and CoD.DirectorUtility.AllClientsOwnDLCForMap( controller ) then
			LaunchGamePrototype( self, element, controller ) --[[ @ 0]]
			PlaySoundAlias( "cac_open_wpn_cust" ) --[[ @ 0]]
			return true
		elseif IsLobbyHostOfCurrentMenu() and not CoD.DirectorUtility.AllClientsOwnDLCForMap( controller ) then
			CoD.DirectorUtility.OpenMapsNotEnabledPopup( self, controller ) --[[ @ 0]]
			PlaySoundAlias( "cac_open_wpn_cust" ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsLobbyHostOfCurrentMenu() and CoD.DirectorUtility.AllClientsOwnDLCForMap( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"hash_0", nil, "ui_confirm" ) --[[ @ 0]]
			return false
		elseif IsLobbyHostOfCurrentMenu() and not CoD.DirectorUtility.AllClientsOwnDLCForMap( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"hash_0", nil, "ui_confirm" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( StartButton ) --[[ @ 0]]
	self.StartButton = StartButton --[[ @ 0]]
	
	ZMLoadoutPreviewInfo = CoD.ZMLoadoutPreviewInfo.new( f1_arg0, f1_arg1, 0.5, 0.5, -506, 428, 1, 1, -333, -207 ) --[[ @ 0]]
	ZMLoadoutPreviewInfo:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( ZMLoadoutPreviewInfo ) --[[ @ 0]]
	self.ZMLoadoutPreviewInfo = ZMLoadoutPreviewInfo --[[ @ 0]]
	
	DirectorLobbyPoseMembersZM = CoD.DirectorLobbyPoseMembersZM.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 1, 30, 30 ) --[[ @ 0]]
	DirectorLobbyPoseMembersZM:mergeStateConditions( {
		{
			stateName = "BotsAllowed",
			condition = function ( menu, element, event )
				return AlwaysTrue()
			end
		}
	} ) --[[ @ 0]]
	DirectorLobbyPoseMembersZM:setAlpha( 0 ) --[[ @ 0]]
	DirectorLobbyPoseMembersZM:subscribeToGlobalModel( f1_arg1, "DirectorZMLoadoutPreview", "ZMLoadoutPreviewWidgetCustom", function ( model )
		local f63_local0 = model:get() --[[ @ 0]]
		if f63_local0 ~= nil then
			DirectorLobbyPoseMembersZM.ZMLoadoutPreviewFrame.ZMLoadoutPreviewFrame:changeFrameWidget( f63_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( DirectorLobbyPoseMembersZM ) --[[ @ 0]]
	self.DirectorLobbyPoseMembersZM = DirectorLobbyPoseMembersZM --[[ @ 0]]
	
	CustomGamesButton = CoD.DirectorPreGameButtonOption.new( f1_arg0, f1_arg1, 0.5, 0.5, 514, 896, 1, 1, -434, -388 ) --[[ @ 0]]
	CustomGamesButton:mergeStateConditions( {
		{
			stateName = "VisibleZmOffline",
			condition = function ( menu, element, event )
				local f64_local0 = IsLobbyHostOfCurrentMenu() --[[ @ 0]]
				if f64_local0 then
					if not IsPublicOrLeagueGame( f1_arg1 ) then
						f64_local0 = IsZombies() --[[ @ 0]]
						if f64_local0 then
							f64_local0 = IsLobbyNetworkModeLAN() --[[ @ 0]]
							if f64_local0 then
								f64_local0 = not CoD.DirectorUtility.IsOfflineScreenStateCustomGame() --[[ @ 0]]
							end
						end
					else
						f64_local0 = false --[[ @ 0]]
					end
				end
				return f64_local0
			end
		},
		{
			stateName = "Visible",
			condition = function ( menu, element, event )
				local f65_local0 = IsLobbyHostOfCurrentMenu() --[[ @ 0]]
				if f65_local0 then
					if not IsPublicOrLeagueGame( f1_arg1 ) then
						f65_local0 = CoD.DirectorUtility.ShowCustomGameButtonForCurrentLobby( f1_arg1 ) --[[ @ 0]]
					else
						f65_local0 = false --[[ @ 0]]
					end
				end
				return f65_local0
			end
		}
	} ) --[[ @ 0]]
	CustomGamesButton:appendEventHandler( "on_session_start", function ( f66_arg0, f66_arg1 )
		f66_arg1.menu = f66_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( CustomGamesButton, f66_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	CustomGamesButton:appendEventHandler( "on_session_end", function ( f67_arg0, f67_arg1 )
		f67_arg1.menu = f67_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( CustomGamesButton, f67_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local DirectorLaboratoryButton = CustomGamesButton --[[ @ 0]]
	local DirectorLobbySettingList = CustomGamesButton.subscribeToModel --[[ @ 0]]
	local f1_local15 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	DirectorLobbySettingList( DirectorLaboratoryButton, f1_local15["lobbyRoot.lobbyNav"], function ( f68_arg0 )
		f1_arg0:updateElementState( CustomGamesButton, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f68_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	DirectorLaboratoryButton = CustomGamesButton --[[ @ 0]]
	DirectorLobbySettingList = CustomGamesButton.subscribeToModel --[[ @ 0]]
	f1_local15 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	DirectorLobbySettingList( DirectorLaboratoryButton, f1_local15["lobbyRoot.gameClient.update"], function ( f69_arg0 )
		f1_arg0:updateElementState( CustomGamesButton, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f69_arg0:get(),
			modelName = "lobbyRoot.gameClient.update"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	DirectorLaboratoryButton = CustomGamesButton --[[ @ 0]]
	DirectorLobbySettingList = CustomGamesButton.subscribeToModel --[[ @ 0]]
	f1_local15 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	DirectorLobbySettingList( DirectorLaboratoryButton, f1_local15["lobbyRoot.privateClient.update"], function ( f70_arg0 )
		f1_arg0:updateElementState( CustomGamesButton, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f70_arg0:get(),
			modelName = "lobbyRoot.privateClient.update"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	DirectorLaboratoryButton = CustomGamesButton --[[ @ 0]]
	DirectorLobbySettingList = CustomGamesButton.subscribeToModel --[[ @ 0]]
	f1_local15 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	DirectorLobbySettingList( DirectorLaboratoryButton, f1_local15.offlineScreenState, function ( f71_arg0 )
		f1_arg0:updateElementState( CustomGamesButton, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f71_arg0:get(),
			modelName = "offlineScreenState"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	CustomGamesButton:setAlpha( 0 ) --[[ @ 0]]
	CustomGamesButton.DirectorSelectButtonMiniInternal.MiddleText.__MiddleText_StringReference = function ()
		CustomGamesButton.DirectorSelectButtonMiniInternal.MiddleText:setText( LocalizeToUpperString( CoD.DirectorUtility.GetCustomGamesName( @"menu/custom_games" ) ) ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	CustomGamesButton.DirectorSelectButtonMiniInternal.MiddleText.__MiddleText_StringReference() --[[ @ 0]]
	CustomGamesButton.DirectorSelectButtonMiniInternal.MiddleText:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	CustomGamesButton.DirectorSelectButtonMiniInternal.MiddleTextFocus.__MiddleTextFocus_String = function ()
		CustomGamesButton.DirectorSelectButtonMiniInternal.MiddleTextFocus:setText( LocalizeToUpperString( CoD.DirectorUtility.GetCustomGamesName( @"menu/custom_games" ) ) ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	CustomGamesButton.DirectorSelectButtonMiniInternal.MiddleTextFocus.__MiddleTextFocus_String() --[[ @ 0]]
	CustomGamesButton.DirectorSelectButtonMiniInternal.MiddleTextFocus:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	DirectorLaboratoryButton = CustomGamesButton --[[ @ 0]]
	DirectorLobbySettingList = CustomGamesButton.subscribeToModel --[[ @ 0]]
	f1_local15 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	DirectorLobbySettingList( DirectorLaboratoryButton, f1_local15["lobbyRoot.lobbyNav"], function ( f74_arg0, f74_arg1 )
		CoD.Menu.UpdateButtonShownState( f74_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	CustomGamesButton:registerEventHandler( "gain_focus", function ( element, event )
		local f75_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f75_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f75_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		return f75_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( CustomGamesButton, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"], "ui_confirm", function ( element, menu, controller, model )
		if IsZombies() then
			PlaySoundAlias( "uin_press_generic" ) --[[ @ 0]]
			OpenSystemOverlay( self, menu, controller, "CustomMutationsNotification" ) --[[ @ 0]]
			SetLoseFocusToSelf( self, controller ) --[[ @ 0]]
			return true
		elseif not IsZombies() then
			PlaySoundAlias( "uin_press_generic" ) --[[ @ 0]]
			OpenSystemOverlay( self, menu, controller, "CustomGamesNotification" ) --[[ @ 0]]
			SetLoseFocusToSelf( self, controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsZombies() then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"menu/select", nil, "ui_confirm" ) --[[ @ 0]]
			return true
		elseif not IsZombies() then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"menu/select", nil, "ui_confirm" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( CustomGamesButton ) --[[ @ 0]]
	self.CustomGamesButton = CustomGamesButton --[[ @ 0]]
	
	DirectorLobbySettingList = CoD.DirectorZMLobbySettingList.new( f1_arg0, f1_arg1, 0.5, 0.5, 514, 896, 1, 1, -508, -388 ) --[[ @ 0]]
	DirectorLobbySettingList:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( DirectorLobbySettingList ) --[[ @ 0]]
	self.DirectorLobbySettingList = DirectorLobbySettingList --[[ @ 0]]
	
	DirectorLaboratoryButton = CoD.DirectorLaboratoryButton.new( f1_arg0, f1_arg1, 0.5, 0.5, -896, -542, 1, 1, -218, -108 ) --[[ @ 0]]
	DirectorLaboratoryButton:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( DirectorLaboratoryButton ) --[[ @ 0]]
	self.DirectorLaboratoryButton = DirectorLaboratoryButton --[[ @ 0]]
	
	local f1_local16 = DirectorMapGameTypeAndDifficulty --[[ @ 0]]
	f1_local15 = DirectorMapGameTypeAndDifficulty.subscribeToModel --[[ @ 0]]
	local f1_local17 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local15( f1_local16, f1_local17.localZMDifficulty, DirectorMapGameTypeAndDifficulty.DirectorMapAndGameInternal.GamemodeIcon.__GamemodeIcon_Image_FullPath ) --[[ @ 0]]
	f1_local16 = DirectorMapGameTypeAndDifficulty --[[ @ 0]]
	f1_local15 = DirectorMapGameTypeAndDifficulty.subscribeToModel --[[ @ 0]]
	f1_local17 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local15( f1_local16, f1_local17.offlineScreenState, DirectorMapGameTypeAndDifficulty.DirectorMapAndGameInternal.GamemodeIcon.__GamemodeIcon_Image_FullPath ) --[[ @ 0]]
	f1_local16 = DirectorMapGameTypeAndDifficulty --[[ @ 0]]
	f1_local15 = DirectorMapGameTypeAndDifficulty.subscribeToModel --[[ @ 0]]
	f1_local17 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local15( f1_local16, f1_local17.localZMDifficulty, DirectorMapGameTypeAndDifficulty.DirectorMapAndGameInternal.DirectorMapAndGameTypeInternalTitles.Label.__Label_Desc_FullPath ) --[[ @ 0]]
	f1_local16 = DirectorMapGameTypeAndDifficulty --[[ @ 0]]
	f1_local15 = DirectorMapGameTypeAndDifficulty.subscribeToModel --[[ @ 0]]
	f1_local17 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local15( f1_local16, f1_local17.localZMTrialVariant, DirectorMapGameTypeAndDifficulty.DirectorMapAndGameInternal.DirectorMapAndGameTypeInternalTitles.Label.__Label_Desc_FullPath ) --[[ @ 0]]
	f1_local16 = DirectorMapGameTypeAndDifficulty --[[ @ 0]]
	f1_local15 = DirectorMapGameTypeAndDifficulty.subscribeToModel --[[ @ 0]]
	f1_local17 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local15( f1_local16, f1_local17["MapVote.mapVoteGameModeNext"], DirectorMapGameTypeAndDifficulty.DirectorMapAndGameInternal.DirectorMapAndGameTypeInternalTitles.Label.__Label_Desc_FullPath ) --[[ @ 0]]
	CommonHeader:appendEventHandler( "on_session_start", CommonHeader.subtitle.subtitle.__subtitle_SubtitleText_FullPath ) --[[ @ 0]]
	CommonHeader:appendEventHandler( "on_session_end", CommonHeader.subtitle.subtitle.__subtitle_SubtitleText_FullPath ) --[[ @ 0]]
	f1_local16 = CommonHeader --[[ @ 0]]
	f1_local15 = CommonHeader.subscribeToModel --[[ @ 0]]
	f1_local17 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local15( f1_local16, f1_local17["lobbyRoot.lobbyNav"], CommonHeader.subtitle.subtitle.__subtitle_SubtitleText_FullPath ) --[[ @ 0]]
	f1_local16 = CommonHeader --[[ @ 0]]
	f1_local15 = CommonHeader.subscribeToModel --[[ @ 0]]
	f1_local17 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local15( f1_local16, f1_local17["lobbyRoot.gameClient.update"], CommonHeader.subtitle.subtitle.__subtitle_SubtitleText_FullPath ) --[[ @ 0]]
	f1_local16 = CommonHeader --[[ @ 0]]
	f1_local15 = CommonHeader.subscribeToModel --[[ @ 0]]
	f1_local17 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local15( f1_local16, f1_local17["lobbyRoot.privateClient.update"], CommonHeader.subtitle.subtitle.__subtitle_SubtitleText_FullPath ) --[[ @ 0]]
	f1_local16 = CommonHeader --[[ @ 0]]
	f1_local15 = CommonHeader.subscribeToModel --[[ @ 0]]
	f1_local17 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local15( f1_local16, f1_local17.offlineScreenState, CommonHeader.subtitle.subtitle.__subtitle_SubtitleText_FullPath ) --[[ @ 0]]
	f1_local16 = CustomGamesButton --[[ @ 0]]
	f1_local15 = CustomGamesButton.subscribeToModel --[[ @ 0]]
	f1_local17 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local15( f1_local16, f1_local17["lobbyRoot.lobbyNav"], CustomGamesButton.DirectorSelectButtonMiniInternal.MiddleText.__MiddleText_StringReference ) --[[ @ 0]]
	f1_local16 = CustomGamesButton --[[ @ 0]]
	f1_local15 = CustomGamesButton.subscribeToModel --[[ @ 0]]
	f1_local17 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local15( f1_local16, f1_local17["lobbyRoot.lobbyNav"], CustomGamesButton.DirectorSelectButtonMiniInternal.MiddleTextFocus.__MiddleTextFocus_String ) --[[ @ 0]]
	self:mergeStateConditions( {
		{
			stateName = "ZMOnline_isPC",
			condition = function ( menu, element, event )
				local f78_local0 = IsZombies() --[[ @ 0]]
				if f78_local0 then
					f78_local0 = IsLobbyNetworkModeLive() --[[ @ 0]]
					if f78_local0 then
						f78_local0 = IsPC() --[[ @ 0]]
					end
				end
				return f78_local0
			end
		},
		{
			stateName = "ZMOnline",
			condition = function ( menu, element, event )
				return IsZombies() and IsLobbyNetworkModeLive()
			end
		},
		{
			stateName = "ZMOfflinePrivate",
			condition = function ( menu, element, event )
				local f80_local0 = IsZombies() --[[ @ 0]]
				if f80_local0 then
					f80_local0 = IsLobbyNetworkModeLAN() --[[ @ 0]]
					if f80_local0 then
						f80_local0 = IsLobbyHostOfCurrentMenu() --[[ @ 0]]
						if f80_local0 then
							f80_local0 = not CoD.DirectorUtility.IsOfflineScreenStateCustomGame() --[[ @ 0]]
						end
					end
				end
				return f80_local0
			end
		},
		{
			stateName = "ZM_isPC",
			condition = function ( menu, element, event )
				return IsZombies() and IsPC()
			end
		},
		{
			stateName = "ZM",
			condition = function ( menu, element, event )
				return IsZombies()
			end
		},
		{
			stateName = "WZ",
			condition = function ( menu, element, event )
				return IsWarzone()
			end
		},
		{
			stateName = "DefaultState_isPC",
			condition = function ( menu, element, event )
				return IsPC()
			end
		}
	} ) --[[ @ 0]]
	f1_local16 = self --[[ @ 0]]
	f1_local15 = self.subscribeToModel --[[ @ 0]]
	f1_local17 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local15( f1_local16, f1_local17["lobbyRoot.lobbyNav"], function ( f85_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f85_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:appendEventHandler( "on_session_start", function ( f86_arg0, f86_arg1 )
		f86_arg1.menu = f86_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( self, f86_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:appendEventHandler( "on_session_end", function ( f87_arg0, f87_arg1 )
		f87_arg1.menu = f87_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( self, f87_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	f1_local16 = self --[[ @ 0]]
	f1_local15 = self.subscribeToModel --[[ @ 0]]
	f1_local17 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local15( f1_local16, f1_local17["lobbyRoot.gameClient.update"], function ( f88_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f88_arg0:get(),
			modelName = "lobbyRoot.gameClient.update"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local16 = self --[[ @ 0]]
	f1_local15 = self.subscribeToModel --[[ @ 0]]
	f1_local17 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local15( f1_local16, f1_local17["lobbyRoot.privateClient.update"], function ( f89_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f89_arg0:get(),
			modelName = "lobbyRoot.privateClient.update"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local16 = self --[[ @ 0]]
	f1_local15 = self.subscribeToModel --[[ @ 0]]
	f1_local17 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local15( f1_local16, f1_local17.offlineScreenState, function ( f90_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f90_arg0:get(),
			modelName = "offlineScreenState"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:subscribeToGlobalModel( f1_arg1, "LobbyRoot", "gameClientDataUpdate", function ( model )
		local f91_local0 = self --[[ @ 0]]
		if CoD.DirectorUtility.ShowDirectorCustom( f91_local0, f1_arg1 ) then
			CoD.PlayerRoleUtility.UpdatePositionDraftModels( f1_arg1 ) --[[ @ 0]]
		elseif CoD.DirectorUtility.ShowDirectorCustom( f91_local0, f1_arg1 ) then
			CoD.PlayerRoleUtility.UpdatePositionDraftModels( f1_arg1 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:subscribeToGlobalModel( f1_arg1, "CharacterSelection", "clientUpdated", function ( model )
		if CoD.DirectorUtility.ShowDirectorCustom( self, f1_arg1 ) then
			CoD.PlayerRoleUtility.UpdatePositionDraftModels( f1_arg1 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:subscribeToGlobalModel( f1_arg1, "GlobalModel", "lobbyRoot.lobbyNav", function ( model )
		local f93_local0 = self --[[ @ 0]]
		if IsZombies() and IsCustomLobby() and IsLobbyHost() then
			CoD.BaseUtility.SetDefaultFocusToElement( self, self.StartButton ) --[[ @ 0]]
			CoD.FTUEUtility.ShowFTUESequenceIfNotSeen( self, f1_arg1, "ZMCustomGameIntroduction" ) --[[ @ 0]]
		elseif IsCustomLobby() and IsLobbyHost() then
			CoD.BaseUtility.SetDefaultFocusToElement( self, self.StartButton ) --[[ @ 0]]
		elseif IsZombies() and IsCustomLobby() and not IsLobbyHost() then
			CoD.BaseUtility.SetDefaultFocusToElement( self, self.HomeOrPlayListFull ) --[[ @ 0]]
			CoD.FTUEUtility.ShowFTUESequenceIfNotSeen( self, f1_arg1, "ZMCustomGameIntroduction" ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	CustomGamePlayers.id = "CustomGamePlayers" --[[ @ 0]]
	DirectorMapGameTypeAndDifficulty.id = "DirectorMapGameTypeAndDifficulty" --[[ @ 0]]
	f1_local3.id = "HomeOrPlayListFull" --[[ @ 0]]
	if CoD.isPC then
		HomeOrPlayListFullPC.id = "HomeOrPlayListFullPC" --[[ @ 0]]
	end
	SetUpMatchButton.id = "SetUpMatchButton" --[[ @ 0]]
	StartButton.id = "StartButton" --[[ @ 0]]
	DirectorLobbyPoseMembersZM.id = "DirectorLobbyPoseMembersZM" --[[ @ 0]]
	CustomGamesButton.id = "CustomGamesButton" --[[ @ 0]]
	DirectorLobbySettingList.id = "DirectorLobbySettingList" --[[ @ 0]]
	DirectorLaboratoryButton.id = "DirectorLaboratoryButton" --[[ @ 0]]
	self.__defaultFocus = f1_local3 --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	f1_local15 = self --[[ @ 0]]
	if IsPC() then
		SetElementProperty( self.HomeOrPlayListFullPC, "_preGameType", "custom" ) --[[ @ 0]]
		ChangeDefaultFocus( self, self.StartButton ) --[[ @ 0]]
	else
		SetElementProperty( self.HomeOrPlayListFull, "_preGameType", "custom" ) --[[ @ 0]]
	end
	return self
end
 --[[ @ 0]]
CoD.directorCustom.__resetProperties = function ( f94_arg0 )
	f94_arg0.HomeOrPlayListFullPC:completeAnimation() --[[ @ 0]]
	f94_arg0.HomeOrPlayListFull:completeAnimation() --[[ @ 0]]
	f94_arg0.DirectorLobbyPoseMembers:completeAnimation() --[[ @ 0]]
	f94_arg0.ZMLoadoutPreviewInfo:completeAnimation() --[[ @ 0]]
	f94_arg0.DirectorLobbyPoseMembersZM:completeAnimation() --[[ @ 0]]
	f94_arg0.DirectorMapGameTypeAndDifficulty:completeAnimation() --[[ @ 0]]
	f94_arg0.SetUpMatchButton:completeAnimation() --[[ @ 0]]
	f94_arg0.DirectorLobbySettingList:completeAnimation() --[[ @ 0]]
	f94_arg0.LeaderActivity:completeAnimation() --[[ @ 0]]
	f94_arg0.DirectorLaboratoryButton:completeAnimation() --[[ @ 0]]
	f94_arg0.CustomGamesButton:completeAnimation() --[[ @ 0]]
	f94_arg0.StartButton:completeAnimation() --[[ @ 0]]
	f94_arg0.HomeOrPlayListFullPC:setLeftRight( 0.5, 0.5, -505, 478 ) --[[ @ 0]]
	f94_arg0.HomeOrPlayListFull:setLeftRight( 0.5, 0.5, -505, 478 ) --[[ @ 0]]
	f94_arg0.DirectorLobbyPoseMembers:setAlpha( 1 ) --[[ @ 0]]
	f94_arg0.ZMLoadoutPreviewInfo:setLeftRight( 0.5, 0.5, -506, 428 ) --[[ @ 0]]
	f94_arg0.ZMLoadoutPreviewInfo:setAlpha( 0 ) --[[ @ 0]]
	f94_arg0.DirectorLobbyPoseMembersZM:setAlpha( 0 ) --[[ @ 0]]
	f94_arg0.DirectorMapGameTypeAndDifficulty:setLeftRight( 0.5, 0.5, 514, 896 ) --[[ @ 0]]
	f94_arg0.DirectorMapGameTypeAndDifficulty:setTopBottom( 1, 1, -368, -188 ) --[[ @ 0]]
	f94_arg0.DirectorMapGameTypeAndDifficulty:setAlpha( 0 ) --[[ @ 0]]
	f94_arg0.SetUpMatchButton:setLeftRight( 0.5, 0.5, 514, 896 ) --[[ @ 0]]
	f94_arg0.SetUpMatchButton:setTopBottom( 1, 1, -368, -188 ) --[[ @ 0]]
	f94_arg0.SetUpMatchButton:setAlpha( 1 ) --[[ @ 0]]
	f94_arg0.DirectorLobbySettingList:setLeftRight( 0.5, 0.5, 514, 896 ) --[[ @ 0]]
	f94_arg0.DirectorLobbySettingList:setTopBottom( 1, 1, -508, -388 ) --[[ @ 0]]
	f94_arg0.DirectorLobbySettingList:setAlpha( 0 ) --[[ @ 0]]
	f94_arg0.LeaderActivity:setLeftRight( 0.5, 0.5, -896, -429 ) --[[ @ 0]]
	f94_arg0.LeaderActivity:setTopBottom( 1, 1, -247, -216 ) --[[ @ 0]]
	f94_arg0.DirectorLaboratoryButton:setLeftRight( 0.5, 0.5, -896, -542 ) --[[ @ 0]]
	f94_arg0.DirectorLaboratoryButton:setAlpha( 0 ) --[[ @ 0]]
	f94_arg0.CustomGamesButton:setAlpha( 0 ) --[[ @ 0]]
	f94_arg0.StartButton:setLeftRight( 0.5, 0.5, 514, 896 ) --[[ @ 0]]
	f94_arg0.StartButton:setTopBottom( 1, 1, -178, -108 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.directorCustom.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f95_arg0, f95_arg1 )
			f95_arg0:__resetProperties() --[[ @ 0]]
			f95_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f95_arg0.HomeOrPlayListFull:completeAnimation() --[[ @ 0]]
			f95_arg0.HomeOrPlayListFull:setLeftRight( 0.5, 0.5, -505, 478 ) --[[ @ 0]]
			f95_arg0.clipFinished( f95_arg0.HomeOrPlayListFull ) --[[ @ 0]]
			f95_arg0.HomeOrPlayListFullPC:completeAnimation() --[[ @ 0]]
			f95_arg0.HomeOrPlayListFullPC:setLeftRight( 0.5, 0.5, -505, 478 ) --[[ @ 0]]
			f95_arg0.clipFinished( f95_arg0.HomeOrPlayListFullPC ) --[[ @ 0]]
			f95_arg0.CommonHeader:completeAnimation() --[[ @ 0]]
			f95_arg0.clipFinished( f95_arg0.CommonHeader ) --[[ @ 0]]
		end
	},
	ZMOnline_isPC = {
		DefaultClip = function ( f96_arg0, f96_arg1 )
			f96_arg0:__resetProperties() --[[ @ 0]]
			f96_arg0:setupElementClipCounter( 9 ) --[[ @ 0]]
			f96_arg0.DirectorMapGameTypeAndDifficulty:completeAnimation() --[[ @ 0]]
			f96_arg0.DirectorMapGameTypeAndDifficulty:setTopBottom( 1, 1, -368, -188 ) --[[ @ 0]]
			f96_arg0.DirectorMapGameTypeAndDifficulty:setAlpha( 1 ) --[[ @ 0]]
			f96_arg0.clipFinished( f96_arg0.DirectorMapGameTypeAndDifficulty ) --[[ @ 0]]
			f96_arg0.LeaderActivity:completeAnimation() --[[ @ 0]]
			f96_arg0.LeaderActivity:setTopBottom( 1, 1, -559, -528 ) --[[ @ 0]]
			f96_arg0.clipFinished( f96_arg0.LeaderActivity ) --[[ @ 0]]
			f96_arg0.CommonHeader:completeAnimation() --[[ @ 0]]
			f96_arg0.clipFinished( f96_arg0.CommonHeader ) --[[ @ 0]]
			f96_arg0.DirectorLobbyPoseMembers:completeAnimation() --[[ @ 0]]
			f96_arg0.DirectorLobbyPoseMembers:setAlpha( 0 ) --[[ @ 0]]
			f96_arg0.clipFinished( f96_arg0.DirectorLobbyPoseMembers ) --[[ @ 0]]
			f96_arg0.SetUpMatchButton:completeAnimation() --[[ @ 0]]
			f96_arg0.SetUpMatchButton:setAlpha( 0 ) --[[ @ 0]]
			f96_arg0.clipFinished( f96_arg0.SetUpMatchButton ) --[[ @ 0]]
			f96_arg0.ZMLoadoutPreviewInfo:completeAnimation() --[[ @ 0]]
			f96_arg0.ZMLoadoutPreviewInfo:setLeftRight( 0.5, 0.5, -891, 369 ) --[[ @ 0]]
			f96_arg0.ZMLoadoutPreviewInfo:setAlpha( 1 ) --[[ @ 0]]
			f96_arg0.clipFinished( f96_arg0.ZMLoadoutPreviewInfo ) --[[ @ 0]]
			f96_arg0.DirectorLobbyPoseMembersZM:completeAnimation() --[[ @ 0]]
			f96_arg0.DirectorLobbyPoseMembersZM.ZMLoadoutPreviewFrame.ZMLoadoutPreviewFrame:completeAnimation() --[[ @ 0]]
			f96_arg0.DirectorLobbyPoseMembersZM:setAlpha( 1 ) --[[ @ 0]]
			f96_arg0.clipFinished( f96_arg0.DirectorLobbyPoseMembersZM ) --[[ @ 0]]
			f96_arg0.DirectorLobbySettingList:completeAnimation() --[[ @ 0]]
			f96_arg0.DirectorLobbySettingList:setAlpha( 1 ) --[[ @ 0]]
			f96_arg0.clipFinished( f96_arg0.DirectorLobbySettingList ) --[[ @ 0]]
			f96_arg0.DirectorLaboratoryButton:completeAnimation() --[[ @ 0]]
			f96_arg0.DirectorLaboratoryButton:setLeftRight( 0.5, 0.5, -891, -537 ) --[[ @ 0]]
			f96_arg0.DirectorLaboratoryButton:setAlpha( 1 ) --[[ @ 0]]
			f96_arg0.clipFinished( f96_arg0.DirectorLaboratoryButton ) --[[ @ 0]]
		end
	},
	ZMOnline = {
		DefaultClip = function ( f97_arg0, f97_arg1 )
			f97_arg0:__resetProperties() --[[ @ 0]]
			f97_arg0:setupElementClipCounter( 9 ) --[[ @ 0]]
			f97_arg0.DirectorMapGameTypeAndDifficulty:completeAnimation() --[[ @ 0]]
			f97_arg0.DirectorMapGameTypeAndDifficulty:setTopBottom( 1, 1, -368, -188 ) --[[ @ 0]]
			f97_arg0.DirectorMapGameTypeAndDifficulty:setAlpha( 1 ) --[[ @ 0]]
			f97_arg0.clipFinished( f97_arg0.DirectorMapGameTypeAndDifficulty ) --[[ @ 0]]
			f97_arg0.LeaderActivity:completeAnimation() --[[ @ 0]]
			f97_arg0.LeaderActivity:setTopBottom( 1, 1, -559, -528 ) --[[ @ 0]]
			f97_arg0.clipFinished( f97_arg0.LeaderActivity ) --[[ @ 0]]
			f97_arg0.CommonHeader:completeAnimation() --[[ @ 0]]
			f97_arg0.clipFinished( f97_arg0.CommonHeader ) --[[ @ 0]]
			f97_arg0.DirectorLobbyPoseMembers:completeAnimation() --[[ @ 0]]
			f97_arg0.DirectorLobbyPoseMembers:setAlpha( 0 ) --[[ @ 0]]
			f97_arg0.clipFinished( f97_arg0.DirectorLobbyPoseMembers ) --[[ @ 0]]
			f97_arg0.SetUpMatchButton:completeAnimation() --[[ @ 0]]
			f97_arg0.SetUpMatchButton:setAlpha( 0 ) --[[ @ 0]]
			f97_arg0.clipFinished( f97_arg0.SetUpMatchButton ) --[[ @ 0]]
			f97_arg0.ZMLoadoutPreviewInfo:completeAnimation() --[[ @ 0]]
			f97_arg0.ZMLoadoutPreviewInfo:setAlpha( 1 ) --[[ @ 0]]
			f97_arg0.clipFinished( f97_arg0.ZMLoadoutPreviewInfo ) --[[ @ 0]]
			f97_arg0.DirectorLobbyPoseMembersZM:completeAnimation() --[[ @ 0]]
			f97_arg0.DirectorLobbyPoseMembersZM.ZMLoadoutPreviewFrame.ZMLoadoutPreviewFrame:completeAnimation() --[[ @ 0]]
			f97_arg0.DirectorLobbyPoseMembersZM:setAlpha( 1 ) --[[ @ 0]]
			f97_arg0.clipFinished( f97_arg0.DirectorLobbyPoseMembersZM ) --[[ @ 0]]
			f97_arg0.DirectorLobbySettingList:completeAnimation() --[[ @ 0]]
			f97_arg0.DirectorLobbySettingList:setAlpha( 1 ) --[[ @ 0]]
			f97_arg0.clipFinished( f97_arg0.DirectorLobbySettingList ) --[[ @ 0]]
			f97_arg0.DirectorLaboratoryButton:completeAnimation() --[[ @ 0]]
			f97_arg0.DirectorLaboratoryButton:setAlpha( 1 ) --[[ @ 0]]
			f97_arg0.clipFinished( f97_arg0.DirectorLaboratoryButton ) --[[ @ 0]]
		end
	},
	ZMOfflinePrivate = {
		DefaultClip = function ( f98_arg0, f98_arg1 )
			f98_arg0:__resetProperties() --[[ @ 0]]
			f98_arg0:setupElementClipCounter( 9 ) --[[ @ 0]]
			f98_arg0.DirectorMapGameTypeAndDifficulty:completeAnimation() --[[ @ 0]]
			f98_arg0.DirectorMapGameTypeAndDifficulty:setAlpha( 1 ) --[[ @ 0]]
			f98_arg0.clipFinished( f98_arg0.DirectorMapGameTypeAndDifficulty ) --[[ @ 0]]
			f98_arg0.LeaderActivity:completeAnimation() --[[ @ 0]]
			f98_arg0.LeaderActivity:setTopBottom( 1, 1, -449, -418 ) --[[ @ 0]]
			f98_arg0.clipFinished( f98_arg0.LeaderActivity ) --[[ @ 0]]
			f98_arg0.CommonHeader:completeAnimation() --[[ @ 0]]
			f98_arg0.clipFinished( f98_arg0.CommonHeader ) --[[ @ 0]]
			f98_arg0.DirectorLobbyPoseMembers:completeAnimation() --[[ @ 0]]
			f98_arg0.DirectorLobbyPoseMembers:setAlpha( 0 ) --[[ @ 0]]
			f98_arg0.clipFinished( f98_arg0.DirectorLobbyPoseMembers ) --[[ @ 0]]
			f98_arg0.SetUpMatchButton:completeAnimation() --[[ @ 0]]
			f98_arg0.SetUpMatchButton:setAlpha( 0 ) --[[ @ 0]]
			f98_arg0.clipFinished( f98_arg0.SetUpMatchButton ) --[[ @ 0]]
			f98_arg0.ZMLoadoutPreviewInfo:completeAnimation() --[[ @ 0]]
			f98_arg0.ZMLoadoutPreviewInfo:setAlpha( 1 ) --[[ @ 0]]
			f98_arg0.clipFinished( f98_arg0.ZMLoadoutPreviewInfo ) --[[ @ 0]]
			f98_arg0.DirectorLobbyPoseMembersZM:completeAnimation() --[[ @ 0]]
			f98_arg0.DirectorLobbyPoseMembersZM.ZMLoadoutPreviewFrame.ZMLoadoutPreviewFrame:completeAnimation() --[[ @ 0]]
			f98_arg0.DirectorLobbyPoseMembersZM:setAlpha( 1 ) --[[ @ 0]]
			f98_arg0.clipFinished( f98_arg0.DirectorLobbyPoseMembersZM ) --[[ @ 0]]
			f98_arg0.CustomGamesButton:completeAnimation() --[[ @ 0]]
			f98_arg0.CustomGamesButton:setAlpha( 1 ) --[[ @ 0]]
			f98_arg0.clipFinished( f98_arg0.CustomGamesButton ) --[[ @ 0]]
			f98_arg0.DirectorLobbySettingList:completeAnimation() --[[ @ 0]]
			f98_arg0.DirectorLobbySettingList:setAlpha( 0 ) --[[ @ 0]]
			f98_arg0.clipFinished( f98_arg0.DirectorLobbySettingList ) --[[ @ 0]]
		end
	},
	ZM_isPC = {
		DefaultClip = function ( f99_arg0, f99_arg1 )
			f99_arg0:__resetProperties() --[[ @ 0]]
			f99_arg0:setupElementClipCounter( 9 ) --[[ @ 0]]
			f99_arg0.DirectorMapGameTypeAndDifficulty:completeAnimation() --[[ @ 0]]
			f99_arg0.DirectorMapGameTypeAndDifficulty:setLeftRight( 0.5, 0.5, 514, 896 ) --[[ @ 0]]
			f99_arg0.DirectorMapGameTypeAndDifficulty:setTopBottom( 1, 1, -495, -315 ) --[[ @ 0]]
			f99_arg0.DirectorMapGameTypeAndDifficulty:setAlpha( 1 ) --[[ @ 0]]
			f99_arg0.clipFinished( f99_arg0.DirectorMapGameTypeAndDifficulty ) --[[ @ 0]]
			f99_arg0.LeaderActivity:completeAnimation() --[[ @ 0]]
			f99_arg0.LeaderActivity:setLeftRight( 0.5, 0.5, 400, 867 ) --[[ @ 0]]
			f99_arg0.LeaderActivity:setTopBottom( 1, 1, -532, -501 ) --[[ @ 0]]
			f99_arg0.clipFinished( f99_arg0.LeaderActivity ) --[[ @ 0]]
			f99_arg0.CommonHeader:completeAnimation() --[[ @ 0]]
			f99_arg0.clipFinished( f99_arg0.CommonHeader ) --[[ @ 0]]
			f99_arg0.DirectorLobbyPoseMembers:completeAnimation() --[[ @ 0]]
			f99_arg0.DirectorLobbyPoseMembers:setAlpha( 0 ) --[[ @ 0]]
			f99_arg0.clipFinished( f99_arg0.DirectorLobbyPoseMembers ) --[[ @ 0]]
			f99_arg0.SetUpMatchButton:completeAnimation() --[[ @ 0]]
			f99_arg0.SetUpMatchButton:setLeftRight( 0.5, 0.5, 429, 896 ) --[[ @ 0]]
			f99_arg0.SetUpMatchButton:setTopBottom( 1, 1, -369, -189 ) --[[ @ 0]]
			f99_arg0.SetUpMatchButton:setAlpha( 0 ) --[[ @ 0]]
			f99_arg0.clipFinished( f99_arg0.SetUpMatchButton ) --[[ @ 0]]
			f99_arg0.StartButton:completeAnimation() --[[ @ 0]]
			f99_arg0.StartButton:setLeftRight( 0.5, 0.5, 514, 896 ) --[[ @ 0]]
			f99_arg0.StartButton:setTopBottom( 1, 1, -180, -110 ) --[[ @ 0]]
			f99_arg0.clipFinished( f99_arg0.StartButton ) --[[ @ 0]]
			f99_arg0.ZMLoadoutPreviewInfo:completeAnimation() --[[ @ 0]]
			f99_arg0.ZMLoadoutPreviewInfo:setLeftRight( 0.5, 0.5, -891, 369 ) --[[ @ 0]]
			f99_arg0.ZMLoadoutPreviewInfo:setAlpha( 1 ) --[[ @ 0]]
			f99_arg0.clipFinished( f99_arg0.ZMLoadoutPreviewInfo ) --[[ @ 0]]
			f99_arg0.DirectorLobbyPoseMembersZM:completeAnimation() --[[ @ 0]]
			f99_arg0.DirectorLobbyPoseMembersZM.ZMLoadoutPreviewFrame.ZMLoadoutPreviewFrame:completeAnimation() --[[ @ 0]]
			f99_arg0.DirectorLobbyPoseMembersZM:setAlpha( 1 ) --[[ @ 0]]
			f99_arg0.clipFinished( f99_arg0.DirectorLobbyPoseMembersZM ) --[[ @ 0]]
			f99_arg0.DirectorLobbySettingList:completeAnimation() --[[ @ 0]]
			f99_arg0.DirectorLobbySettingList:setLeftRight( 0.5, 0.5, 514, 896 ) --[[ @ 0]]
			f99_arg0.DirectorLobbySettingList:setTopBottom( 1, 1, -307, -187 ) --[[ @ 0]]
			f99_arg0.DirectorLobbySettingList:setAlpha( 1 ) --[[ @ 0]]
			f99_arg0.clipFinished( f99_arg0.DirectorLobbySettingList ) --[[ @ 0]]
		end
	},
	ZM = {
		DefaultClip = function ( f100_arg0, f100_arg1 )
			f100_arg0:__resetProperties() --[[ @ 0]]
			f100_arg0:setupElementClipCounter( 8 ) --[[ @ 0]]
			f100_arg0.DirectorMapGameTypeAndDifficulty:completeAnimation() --[[ @ 0]]
			f100_arg0.DirectorMapGameTypeAndDifficulty:setAlpha( 1 ) --[[ @ 0]]
			f100_arg0.clipFinished( f100_arg0.DirectorMapGameTypeAndDifficulty ) --[[ @ 0]]
			f100_arg0.LeaderActivity:completeAnimation() --[[ @ 0]]
			f100_arg0.LeaderActivity:setTopBottom( 1, 1, -559, -528 ) --[[ @ 0]]
			f100_arg0.clipFinished( f100_arg0.LeaderActivity ) --[[ @ 0]]
			f100_arg0.CommonHeader:completeAnimation() --[[ @ 0]]
			f100_arg0.clipFinished( f100_arg0.CommonHeader ) --[[ @ 0]]
			f100_arg0.DirectorLobbyPoseMembers:completeAnimation() --[[ @ 0]]
			f100_arg0.DirectorLobbyPoseMembers:setAlpha( 0 ) --[[ @ 0]]
			f100_arg0.clipFinished( f100_arg0.DirectorLobbyPoseMembers ) --[[ @ 0]]
			f100_arg0.SetUpMatchButton:completeAnimation() --[[ @ 0]]
			f100_arg0.SetUpMatchButton:setAlpha( 0 ) --[[ @ 0]]
			f100_arg0.clipFinished( f100_arg0.SetUpMatchButton ) --[[ @ 0]]
			f100_arg0.ZMLoadoutPreviewInfo:completeAnimation() --[[ @ 0]]
			f100_arg0.ZMLoadoutPreviewInfo:setAlpha( 1 ) --[[ @ 0]]
			f100_arg0.clipFinished( f100_arg0.ZMLoadoutPreviewInfo ) --[[ @ 0]]
			f100_arg0.DirectorLobbyPoseMembersZM:completeAnimation() --[[ @ 0]]
			f100_arg0.DirectorLobbyPoseMembersZM.ZMLoadoutPreviewFrame.ZMLoadoutPreviewFrame:completeAnimation() --[[ @ 0]]
			f100_arg0.DirectorLobbyPoseMembersZM:setAlpha( 1 ) --[[ @ 0]]
			f100_arg0.clipFinished( f100_arg0.DirectorLobbyPoseMembersZM ) --[[ @ 0]]
			f100_arg0.DirectorLobbySettingList:completeAnimation() --[[ @ 0]]
			f100_arg0.DirectorLobbySettingList:setAlpha( 1 ) --[[ @ 0]]
			f100_arg0.clipFinished( f100_arg0.DirectorLobbySettingList ) --[[ @ 0]]
		end
	},
	WZ = {
		DefaultClip = function ( f101_arg0, f101_arg1 )
			f101_arg0:__resetProperties() --[[ @ 0]]
			f101_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	DefaultState_isPC = {
		DefaultClip = function ( f102_arg0, f102_arg1 )
			f102_arg0:__resetProperties() --[[ @ 0]]
			f102_arg0:setupElementClipCounter( 7 ) --[[ @ 0]]
			f102_arg0.DirectorMapGameTypeAndDifficulty:completeAnimation() --[[ @ 0]]
			f102_arg0.DirectorMapGameTypeAndDifficulty:setLeftRight( 0.5, 0.5, 514, 896 ) --[[ @ 0]]
			f102_arg0.DirectorMapGameTypeAndDifficulty:setTopBottom( 1, 1, -368, -188 ) --[[ @ 0]]
			f102_arg0.clipFinished( f102_arg0.DirectorMapGameTypeAndDifficulty ) --[[ @ 0]]
			f102_arg0.LeaderActivity:completeAnimation() --[[ @ 0]]
			f102_arg0.LeaderActivity:setLeftRight( 0.5, 0.5, 400, 867 ) --[[ @ 0]]
			f102_arg0.LeaderActivity:setTopBottom( 1, 1, -429, -398 ) --[[ @ 0]]
			f102_arg0.clipFinished( f102_arg0.LeaderActivity ) --[[ @ 0]]
			f102_arg0.HomeOrPlayListFullPC:completeAnimation() --[[ @ 0]]
			f102_arg0.HomeOrPlayListFullPC:setLeftRight( 0.5, 0.5, -505, 478 ) --[[ @ 0]]
			f102_arg0.clipFinished( f102_arg0.HomeOrPlayListFullPC ) --[[ @ 0]]
			f102_arg0.CommonHeader:completeAnimation() --[[ @ 0]]
			f102_arg0.clipFinished( f102_arg0.CommonHeader ) --[[ @ 0]]
			f102_arg0.SetUpMatchButton:completeAnimation() --[[ @ 0]]
			f102_arg0.SetUpMatchButton:setLeftRight( 0.5, 0.5, 514, 896 ) --[[ @ 0]]
			f102_arg0.SetUpMatchButton:setTopBottom( 1, 1, -368, -188 ) --[[ @ 0]]
			f102_arg0.clipFinished( f102_arg0.SetUpMatchButton ) --[[ @ 0]]
			f102_arg0.StartButton:completeAnimation() --[[ @ 0]]
			f102_arg0.StartButton:setLeftRight( 0.5, 0.5, 514, 896 ) --[[ @ 0]]
			f102_arg0.StartButton:setTopBottom( 1, 1, -178, -108 ) --[[ @ 0]]
			f102_arg0.clipFinished( f102_arg0.StartButton ) --[[ @ 0]]
			f102_arg0.DirectorLobbySettingList:completeAnimation() --[[ @ 0]]
			f102_arg0.DirectorLobbySettingList:setLeftRight( 0.5, 0.5, 429, 896 ) --[[ @ 0]]
			f102_arg0.DirectorLobbySettingList:setTopBottom( 1, 1, -308, -188 ) --[[ @ 0]]
			f102_arg0.clipFinished( f102_arg0.DirectorLobbySettingList ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.directorCustom.__onClose = function ( f103_arg0 )
	f103_arg0.CustomGamePlayers:close() --[[ @ 0]]
	f103_arg0.DirectorMapGameTypeAndDifficulty:close() --[[ @ 0]]
	f103_arg0.LeaderActivity:close() --[[ @ 0]]
	f103_arg0.HomeOrPlayListFull:close() --[[ @ 0]]
	f103_arg0.HomeOrPlayListFullPC:close() --[[ @ 0]]
	f103_arg0.CommonHeader:close() --[[ @ 0]]
	f103_arg0.DirectorLobbyPoseMembers:close() --[[ @ 0]]
	f103_arg0.SetUpMatchButton:close() --[[ @ 0]]
	f103_arg0.StartButton:close() --[[ @ 0]]
	f103_arg0.ZMLoadoutPreviewInfo:close() --[[ @ 0]]
	f103_arg0.DirectorLobbyPoseMembersZM:close() --[[ @ 0]]
	f103_arg0.CustomGamesButton:close() --[[ @ 0]]
	f103_arg0.DirectorLobbySettingList:close() --[[ @ 0]]
	f103_arg0.DirectorLaboratoryButton:close() --[[ @ 0]]
end
 --[[ @ 0]]
