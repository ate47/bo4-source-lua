-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:50
CoD.KillcamPlayerRank = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.KillcamPlayerRank.__defaultWidth = 147 --[[ @ 0]]
CoD.KillcamPlayerRank.__defaultHeight = 40 --[[ @ 0]]
CoD.KillcamPlayerRank.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.KillcamPlayerRank ) --[[ @ 0]]
	self.id = "KillcamPlayerRank" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local Backing = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	Backing:setRGB( 0.06, 0.06, 0.06 ) --[[ @ 0]]
	Backing:setAlpha( 0.8 ) --[[ @ 0]]
	self:addElement( Backing ) --[[ @ 0]]
	self.Backing = Backing --[[ @ 0]]
	
	local Rank = LUI.UIText.new( 0.5, 0.5, 0, 74, 0.5, 0.5, -16, 20 ) --[[ @ 0]]
	Rank:setText( 88 ) --[[ @ 0]]
	Rank:setTTF( "0arame_mono_stencil" ) --[[ @ 0]]
	Rank:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	self:addElement( Rank ) --[[ @ 0]]
	self.Rank = Rank --[[ @ 0]]
	
	local RankIcon = LUI.UIImage.new( 0.5, 0.5, -45, -5, 0.5, 0.5, -20, 20 ) --[[ @ 0]]
	self:addElement( RankIcon ) --[[ @ 0]]
	self.RankIcon = RankIcon --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Visible",
			condition = function ( menu, element, event )
				return not IsLAN()
			end
		}
	} ) --[[ @ 0]]
	local f1_local4 = self --[[ @ 0]]
	local f1_local5 = self.subscribeToModel --[[ @ 0]]
	local f1_local6 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local5( f1_local4, f1_local6["lobbyRoot.lobbyNetworkMode"], function ( f3_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f3_arg0:get(),
			modelName = "lobbyRoot.lobbyNetworkMode"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local4 = self --[[ @ 0]]
	f1_local5 = self.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local5( f1_local4, f1_local6["lobbyRoot.lobbyNav"], function ( f4_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f4_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.KillcamPlayerRank.__resetProperties = function ( f5_arg0 )
	f5_arg0.RankIcon:completeAnimation() --[[ @ 0]]
	f5_arg0.Rank:completeAnimation() --[[ @ 0]]
	f5_arg0.Backing:completeAnimation() --[[ @ 0]]
	f5_arg0.RankIcon:setAlpha( 1 ) --[[ @ 0]]
	f5_arg0.Rank:setAlpha( 1 ) --[[ @ 0]]
	f5_arg0.Backing:setAlpha( 0.8 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.KillcamPlayerRank.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f6_arg0, f6_arg1 )
			f6_arg0:__resetProperties() --[[ @ 0]]
			f6_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f6_arg0.Backing:completeAnimation() --[[ @ 0]]
			f6_arg0.Backing:setAlpha( 0 ) --[[ @ 0]]
			f6_arg0.clipFinished( f6_arg0.Backing ) --[[ @ 0]]
			f6_arg0.Rank:completeAnimation() --[[ @ 0]]
			f6_arg0.Rank:setAlpha( 0 ) --[[ @ 0]]
			f6_arg0.clipFinished( f6_arg0.Rank ) --[[ @ 0]]
			f6_arg0.RankIcon:completeAnimation() --[[ @ 0]]
			f6_arg0.RankIcon:setAlpha( 0 ) --[[ @ 0]]
			f6_arg0.clipFinished( f6_arg0.RankIcon ) --[[ @ 0]]
		end
	},
	Visible = {
		DefaultClip = function ( f7_arg0, f7_arg1 )
			f7_arg0:__resetProperties() --[[ @ 0]]
			f7_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
