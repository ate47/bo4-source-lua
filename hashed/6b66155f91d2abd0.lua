-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:50
CoD.PC_TooltipsPromptsBackground = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.PC_TooltipsPromptsBackground.__defaultWidth = 100 --[[ @ 0]]
CoD.PC_TooltipsPromptsBackground.__defaultHeight = 100 --[[ @ 0]]
CoD.PC_TooltipsPromptsBackground.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.PC_TooltipsPromptsBackground ) --[[ @ 0]]
	self.id = "PC_TooltipsPromptsBackground" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local DropShadow = LUI.UIImage.new( 0, 1, -10, 30, 0, 1, -12, 28 ) --[[ @ 0]]
	DropShadow:setRGB( 0, 0, 0 ) --[[ @ 0]]
	DropShadow:setAlpha( 0.6 ) --[[ @ 0]]
	DropShadow:setImage( RegisterImage( @"uie_dropshadow_9s" ) ) --[[ @ 0]]
	DropShadow:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_normal" ) ) --[[ @ 0]]
	DropShadow:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	DropShadow:setupNineSliceShader( 60, 60 ) --[[ @ 0]]
	self:addElement( DropShadow ) --[[ @ 0]]
	self.DropShadow = DropShadow --[[ @ 0]]
	
	local BG = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	BG:setRGB( 0.3, 0.3, 0.3 ) --[[ @ 0]]
	BG:setZRot( 180 ) --[[ @ 0]]
	self:addElement( BG ) --[[ @ 0]]
	self.BG = BG --[[ @ 0]]
	
	local BG2 = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	BG2:setRGB( 0.86, 0.74, 0.25 ) --[[ @ 0]]
	BG2:setAlpha( 0 ) --[[ @ 0]]
	BG2:setZRot( 180 ) --[[ @ 0]]
	self:addElement( BG2 ) --[[ @ 0]]
	self.BG2 = BG2 --[[ @ 0]]
	
	local Outline = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	Outline:setAlpha( 0.05 ) --[[ @ 0]]
	Outline:setImage( RegisterImage( @"uie_highlight_border_line" ) ) --[[ @ 0]]
	Outline:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_normal" ) ) --[[ @ 0]]
	Outline:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	Outline:setupNineSliceShader( 6, 6 ) --[[ @ 0]]
	self:addElement( Outline ) --[[ @ 0]]
	self.Outline = Outline --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return not CoD.ModelUtility.IsModelValueTrue( f1_arg1, "FreeCursor.contextualInfo.hasContextualPrompts" )
			end
		}
	} ) --[[ @ 0]]
	local f1_local5 = self --[[ @ 0]]
	local f1_local6 = self.subscribeToModel --[[ @ 0]]
	local f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local6( f1_local5, f1_local7["FreeCursor.contextualInfo.hasContextualPrompts"], function ( f3_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f3_arg0:get(),
			modelName = "FreeCursor.contextualInfo.hasContextualPrompts"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	f1_local6 = self --[[ @ 0]]
	CoD.FreeCursorUtility.UseMaxVisibleChildHeight( self ) --[[ @ 0]]
	return self
end
 --[[ @ 0]]
CoD.PC_TooltipsPromptsBackground.__resetProperties = function ( f4_arg0 )
	f4_arg0.Outline:completeAnimation() --[[ @ 0]]
	f4_arg0.BG2:completeAnimation() --[[ @ 0]]
	f4_arg0.BG:completeAnimation() --[[ @ 0]]
	f4_arg0.DropShadow:completeAnimation() --[[ @ 0]]
	f4_arg0.Outline:setAlpha( 0.05 ) --[[ @ 0]]
	f4_arg0.BG2:setAlpha( 0 ) --[[ @ 0]]
	f4_arg0.BG:setAlpha( 1 ) --[[ @ 0]]
	f4_arg0.DropShadow:setAlpha( 0.6 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.PC_TooltipsPromptsBackground.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f5_arg0, f5_arg1 )
			f5_arg0:__resetProperties() --[[ @ 0]]
			f5_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	Hidden = {
		DefaultClip = function ( f6_arg0, f6_arg1 )
			f6_arg0:__resetProperties() --[[ @ 0]]
			f6_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f6_arg0.DropShadow:completeAnimation() --[[ @ 0]]
			f6_arg0.DropShadow:setAlpha( 0 ) --[[ @ 0]]
			f6_arg0.clipFinished( f6_arg0.DropShadow ) --[[ @ 0]]
			f6_arg0.BG:completeAnimation() --[[ @ 0]]
			f6_arg0.BG:setAlpha( 0 ) --[[ @ 0]]
			f6_arg0.clipFinished( f6_arg0.BG ) --[[ @ 0]]
			f6_arg0.BG2:completeAnimation() --[[ @ 0]]
			f6_arg0.BG2:setAlpha( 0 ) --[[ @ 0]]
			f6_arg0.clipFinished( f6_arg0.BG2 ) --[[ @ 0]]
			f6_arg0.Outline:completeAnimation() --[[ @ 0]]
			f6_arg0.Outline:setAlpha( 0 ) --[[ @ 0]]
			f6_arg0.clipFinished( f6_arg0.Outline ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
