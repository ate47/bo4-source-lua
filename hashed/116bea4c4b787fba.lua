-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:32
CoD.RestrictedItemWarning = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.RestrictedItemWarning.__defaultWidth = 60 --[[ @ 0]]
CoD.RestrictedItemWarning.__defaultHeight = 50 --[[ @ 0]]
CoD.RestrictedItemWarning.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.RestrictedItemWarning ) --[[ @ 0]]
	self.id = "RestrictedItemWarning" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local RestrictedWarning = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	RestrictedWarning:setRGB( 0.82, 0.08, 0.17 ) --[[ @ 0]]
	RestrictedWarning:setAlpha( 0 ) --[[ @ 0]]
	RestrictedWarning:setImage( RegisterImage( @"uie_ui_icon_frontend_exclamation" ) ) --[[ @ 0]]
	self:addElement( RestrictedWarning ) --[[ @ 0]]
	self.RestrictedWarning = RestrictedWarning --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "CharacterRestricted",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		},
		{
			stateName = "Visible",
			condition = function ( menu, element, event )
				local f3_local0 --[[ @ 0]]
				if not CoD.DirectorUtility.ShowDirectorPregame( f1_arg1 ) and not IsPublicWZLobby() then
					f3_local0 = CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg1, "isRestricted" ) --[[ @ 0]]
				else
					f3_local0 = false --[[ @ 0]]
				end
				return f3_local0
			end
		},
		{
			stateName = "OneAbilityVisible",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		}
	} ) --[[ @ 0]]
	local f1_local2 = self --[[ @ 0]]
	local f1_local3 = self.subscribeToModel --[[ @ 0]]
	local f1_local4 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local3( f1_local2, f1_local4["lobbyRoot.lobbyNav"], function ( f5_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f5_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:linkToElementModel( self, "isRestricted", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "isRestricted"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.RestrictedItemWarning.__resetProperties = function ( f7_arg0 )
	f7_arg0.RestrictedWarning:completeAnimation() --[[ @ 0]]
	f7_arg0.RestrictedWarning:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	f7_arg0.RestrictedWarning:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	f7_arg0.RestrictedWarning:setRGB( 0.82, 0.08, 0.17 ) --[[ @ 0]]
	f7_arg0.RestrictedWarning:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.RestrictedItemWarning.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f8_arg0, f8_arg1 )
			f8_arg0:__resetProperties() --[[ @ 0]]
			f8_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	CharacterRestricted = {
		DefaultClip = function ( f9_arg0, f9_arg1 )
			f9_arg0:__resetProperties() --[[ @ 0]]
			f9_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f9_arg0.RestrictedWarning:completeAnimation() --[[ @ 0]]
			f9_arg0.RestrictedWarning:setAlpha( 1 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.RestrictedWarning ) --[[ @ 0]]
		end
	},
	Visible = {
		DefaultClip = function ( f10_arg0, f10_arg1 )
			f10_arg0:__resetProperties() --[[ @ 0]]
			f10_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f10_arg0.RestrictedWarning:completeAnimation() --[[ @ 0]]
			f10_arg0.RestrictedWarning:setRGB( 1, 0, 0 ) --[[ @ 0]]
			f10_arg0.RestrictedWarning:setAlpha( 1 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.RestrictedWarning ) --[[ @ 0]]
		end
	},
	OneAbilityVisible = {
		DefaultClip = function ( f11_arg0, f11_arg1 )
			f11_arg0:__resetProperties() --[[ @ 0]]
			f11_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f11_arg0.RestrictedWarning:completeAnimation() --[[ @ 0]]
			f11_arg0.RestrictedWarning:setLeftRight( 0, 0, -45, -25 ) --[[ @ 0]]
			f11_arg0.RestrictedWarning:setTopBottom( 0, 0, 79, 96 ) --[[ @ 0]]
			f11_arg0.RestrictedWarning:setRGB( ColorSet.EnemyOrange_Base.r, ColorSet.EnemyOrange_Base.g, ColorSet.EnemyOrange_Base.b ) --[[ @ 0]]
			f11_arg0.RestrictedWarning:setAlpha( 1 ) --[[ @ 0]]
			f11_arg0.clipFinished( f11_arg0.RestrictedWarning ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
