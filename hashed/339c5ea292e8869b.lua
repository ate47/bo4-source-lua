-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:33
CoD.JobFeedItemBattleCommand = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.JobFeedItemBattleCommand.__defaultWidth = 128 --[[ @ 0]]
CoD.JobFeedItemBattleCommand.__defaultHeight = 128 --[[ @ 0]]
CoD.JobFeedItemBattleCommand.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.JobFeedItemBattleCommand ) --[[ @ 0]]
	self.id = "JobFeedItemBattleCommand" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local BattleCommandGlow = LUI.UIImage.new( 0, 0, 0, 128, 0, 0, 0, 128 ) --[[ @ 0]]
	BattleCommandGlow:setRGB( 0.15, 0.97, 1 ) --[[ @ 0]]
	BattleCommandGlow:setAlpha( 0 ) --[[ @ 0]]
	BattleCommandGlow:setScale( 0.65, 0.9 ) --[[ @ 0]]
	BattleCommandGlow:setImage( RegisterImage( @"uie_ui_hud_core_hero_widget_glow_hero" ) ) --[[ @ 0]]
	BattleCommandGlow:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_31CC85D0A86303B0" ) ) --[[ @ 0]]
	BattleCommandGlow:setShaderVector( 0, 3, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( BattleCommandGlow ) --[[ @ 0]]
	self.BattleCommandGlow = BattleCommandGlow --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "BattleCommandActive",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsModelValueEqualTo( f1_arg1, "hudItems.combatEfficiencyActive", 1 )
			end
		}
	} ) --[[ @ 0]]
	local f1_local2 = self --[[ @ 0]]
	local f1_local3 = self.subscribeToModel --[[ @ 0]]
	local f1_local4 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local3( f1_local2, f1_local4["hudItems.combatEfficiencyActive"], function ( f3_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f3_arg0:get(),
			modelName = "hudItems.combatEfficiencyActive"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.JobFeedItemBattleCommand.__resetProperties = function ( f4_arg0 )
	f4_arg0.BattleCommandGlow:completeAnimation() --[[ @ 0]]
	f4_arg0.BattleCommandGlow:setAlpha( 0 ) --[[ @ 0]]
	f4_arg0.BattleCommandGlow:setScale( 0.65, 0.9 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.JobFeedItemBattleCommand.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f5_arg0, f5_arg1 )
			f5_arg0:__resetProperties() --[[ @ 0]]
			f5_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	BattleCommandActive = {
		DefaultClip = function ( f6_arg0, f6_arg1 )
			f6_arg0:__resetProperties() --[[ @ 0]]
			f6_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f6_local0 = function ( f7_arg0 )
				local f7_local0 = function ( f8_arg0 )
					f8_arg0:beginAnimation( 500 ) --[[ @ 0]]
					f8_arg0:setScale( 0.65, 0.9 ) --[[ @ 0]]
					f8_arg0:registerEventHandler( "transition_complete_keyframe", f6_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f6_arg0.BattleCommandGlow:beginAnimation( 500 ) --[[ @ 0]]
				f6_arg0.BattleCommandGlow:setScale( 0.7, 0.95 ) --[[ @ 0]]
				f6_arg0.BattleCommandGlow:registerEventHandler( "interrupted_keyframe", f6_arg0.clipInterrupted ) --[[ @ 0]]
				f6_arg0.BattleCommandGlow:registerEventHandler( "transition_complete_keyframe", f7_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f6_arg0.BattleCommandGlow:completeAnimation() --[[ @ 0]]
			f6_arg0.BattleCommandGlow:setAlpha( 0.5 ) --[[ @ 0]]
			f6_arg0.BattleCommandGlow:setScale( 0.65, 0.9 ) --[[ @ 0]]
			f6_local0( f6_arg0.BattleCommandGlow ) --[[ @ 0]]
			f6_arg0.nextClip = "DefaultClip" --[[ @ 0]]
		end
	}
} --[[ @ 0]]
