-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:33
require( "ui/uieditor/widgets/director/directordividerwithgradient" ) --[[ @ 0]]

CoD.BountyHunterPreviewItem = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.BountyHunterPreviewItem.__defaultWidth = 330 --[[ @ 0]]
CoD.BountyHunterPreviewItem.__defaultHeight = 100 --[[ @ 0]]
CoD.BountyHunterPreviewItem.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIVerticalList.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9, 0, true ) --[[ @ 0]]
	self:setAlignment( LUI.Alignment.Top ) --[[ @ 0]]
	self:setClass( CoD.BountyHunterPreviewItem ) --[[ @ 0]]
	self.id = "BountyHunterPreviewItem" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local ItemImage = LUI.UIFixedAspectRatioImage.new( 0, 0, 0, 100, 0, 0, 0, 100 ) --[[ @ 0]]
	ItemImage:setStretchedDimension( 4 ) --[[ @ 0]]
	ItemImage:linkToElementModel( self, "imageLarge", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			ItemImage:setImage( CoD.BaseUtility.AlreadyRegisteredIfUserData( f2_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( ItemImage ) --[[ @ 0]]
	self.ItemImage = ItemImage --[[ @ 0]]
	
	local ItemName = LUI.UIText.new( 0, 0, 100, 330, 0, 0, 0, 30 ) --[[ @ 0]]
	ItemName:setRGB( 0.78, 0.78, 0.78 ) --[[ @ 0]]
	ItemName:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	ItemName:setLetterSpacing( 4 ) --[[ @ 0]]
	ItemName:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	ItemName:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	ItemName:linkToElementModel( self, "displayName", true, function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			ItemName:setText( Engine[@"hash_4F9F1239CFD921FE"]( f3_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( ItemName ) --[[ @ 0]]
	self.ItemName = ItemName --[[ @ 0]]
	
	local DirectorDividerWithGradient = CoD.DirectorDividerWithGradient.new( f1_arg0, f1_arg1, 0, 0, 100, 322, 0, 0, 33, 40 ) --[[ @ 0]]
	DirectorDividerWithGradient:setRGB( 0.5, 0.5, 0.5 ) --[[ @ 0]]
	self:addElement( DirectorDividerWithGradient ) --[[ @ 0]]
	self.DirectorDividerWithGradient = DirectorDividerWithGradient --[[ @ 0]]
	
	local ItemDescription = LUI.UIText.new( 0, 0, 100, 330, 0, 0, 39, 59 ) --[[ @ 0]]
	ItemDescription:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	ItemDescription:setTTF( "dinnext_regular" ) --[[ @ 0]]
	ItemDescription:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	ItemDescription:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	ItemDescription:linkToElementModel( self, "description", true, function ( model )
		local f4_local0 = model:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			ItemDescription:setText( Engine[@"hash_4F9F1239CFD921FE"]( f4_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( ItemDescription ) --[[ @ 0]]
	self.ItemDescription = ItemDescription --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Visible",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueGreaterThan( element, f1_arg1, "trackTier", 0 )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "trackTier", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "trackTier"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.BountyHunterPreviewItem.__resetProperties = function ( f7_arg0 )
	f7_arg0.ItemImage:completeAnimation() --[[ @ 0]]
	f7_arg0.ItemDescription:completeAnimation() --[[ @ 0]]
	f7_arg0.ItemName:completeAnimation() --[[ @ 0]]
	f7_arg0.DirectorDividerWithGradient:completeAnimation() --[[ @ 0]]
	f7_arg0.ItemImage:setAlpha( 1 ) --[[ @ 0]]
	f7_arg0.ItemDescription:setAlpha( 1 ) --[[ @ 0]]
	f7_arg0.ItemName:setAlpha( 1 ) --[[ @ 0]]
	f7_arg0.DirectorDividerWithGradient:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.BountyHunterPreviewItem.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f8_arg0, f8_arg1 )
			f8_arg0:__resetProperties() --[[ @ 0]]
			f8_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f8_arg0.ItemImage:completeAnimation() --[[ @ 0]]
			f8_arg0.ItemImage:setAlpha( 0 ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.ItemImage ) --[[ @ 0]]
			f8_arg0.ItemName:completeAnimation() --[[ @ 0]]
			f8_arg0.ItemName:setAlpha( 0 ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.ItemName ) --[[ @ 0]]
			f8_arg0.DirectorDividerWithGradient:completeAnimation() --[[ @ 0]]
			f8_arg0.DirectorDividerWithGradient:setAlpha( 0 ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.DirectorDividerWithGradient ) --[[ @ 0]]
			f8_arg0.ItemDescription:completeAnimation() --[[ @ 0]]
			f8_arg0.ItemDescription:setAlpha( 0 ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.ItemDescription ) --[[ @ 0]]
		end
	},
	Visible = {
		DefaultClip = function ( f9_arg0, f9_arg1 )
			f9_arg0:__resetProperties() --[[ @ 0]]
			f9_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.BountyHunterPreviewItem.__onClose = function ( f10_arg0 )
	f10_arg0.ItemImage:close() --[[ @ 0]]
	f10_arg0.ItemName:close() --[[ @ 0]]
	f10_arg0.DirectorDividerWithGradient:close() --[[ @ 0]]
	f10_arg0.ItemDescription:close() --[[ @ 0]]
end
 --[[ @ 0]]
