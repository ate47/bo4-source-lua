-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
CoD.PositionDraft_CasterControls = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.PositionDraft_CasterControls.__defaultWidth = 361 --[[ @ 0]]
CoD.PositionDraft_CasterControls.__defaultHeight = 38 --[[ @ 0]]
CoD.PositionDraft_CasterControls.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.PositionDraft_CasterControls ) --[[ @ 0]]
	self.id = "PositionDraft_CasterControls" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local Background = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	Background:setRGB( 0, 0, 0 ) --[[ @ 0]]
	Background:setAlpha( 0.4 ) --[[ @ 0]]
	self:addElement( Background ) --[[ @ 0]]
	self.Background = Background --[[ @ 0]]
	
	local LBButton = LUI.UIImage.new( 0, 0.15, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	LBButton:subscribeToGlobalModel( f1_arg1, "Controller", "left_shoulder_button_image", function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			LBButton:setImage( RegisterImage( f2_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( LBButton ) --[[ @ 0]]
	self.LBButton = LBButton --[[ @ 0]]
	
	local RBButton = LUI.UIImage.new( 0.85, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	RBButton:subscribeToGlobalModel( f1_arg1, "Controller", "right_shoulder_button_image", function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			RBButton:setImage( RegisterImage( f3_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( RBButton ) --[[ @ 0]]
	self.RBButton = RBButton --[[ @ 0]]
	
	local Text = LUI.UIText.new( 0.15, 0.85, 0, 0, 0.01, 0.98, 0, 0 ) --[[ @ 0]]
	Text:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_717F100F5B75E648" ) ) --[[ @ 0]]
	Text:setTTF( "default" ) --[[ @ 0]]
	Text:setAlignment( Enum[@"LUIAlignment"][@"hash_1FEEB12BCB0D7041"] ) --[[ @ 0]]
	Text:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	self:addElement( Text ) --[[ @ 0]]
	self.Text = Text --[[ @ 0]]
	
	local rightButton = nil --[[ @ 0]]
	
	rightButton = LUI.UIImage.new( 0.5, 0.5, 134.5, 172.5, 0.5, 0.5, -22, 18 ) --[[ @ 0]]
	rightButton:setAlpha( 0 ) --[[ @ 0]]
	rightButton:subscribeToGlobalModel( f1_arg1, "Controller", "mouse_right_button_image", function ( model )
		local f4_local0 = model:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			rightButton:setImage( RegisterImage( f4_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( rightButton ) --[[ @ 0]]
	self.rightButton = rightButton --[[ @ 0]]
	
	local leftButton = nil --[[ @ 0]]
	
	leftButton = LUI.UIImage.new( 0.5, 0.5, -172.5, -134.5, 0.5, 0.5, -22, 18 ) --[[ @ 0]]
	leftButton:setAlpha( 0 ) --[[ @ 0]]
	leftButton:subscribeToGlobalModel( f1_arg1, "Controller", "mouse_left_button_image", function ( model )
		local f5_local0 = model:get() --[[ @ 0]]
		if f5_local0 ~= nil then
			leftButton:setImage( RegisterImage( f5_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( leftButton ) --[[ @ 0]]
	self.leftButton = leftButton --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "CodCasterPC",
			condition = function ( menu, element, event )
				local f6_local0 = IsCodCaster( f1_arg1 ) --[[ @ 0]]
				if f6_local0 then
					f6_local0 = IsPC() --[[ @ 0]]
					if f6_local0 then
						f6_local0 = IsMouseOrKeyboard( f1_arg1 ) --[[ @ 0]]
					end
				end
				return f6_local0
			end
		},
		{
			stateName = "CodCaster",
			condition = function ( menu, element, event )
				return IsCodCaster( f1_arg1 )
			end
		}
	} ) --[[ @ 0]]
	local f1_local7 = self --[[ @ 0]]
	local f1_local8 = self.subscribeToModel --[[ @ 0]]
	local f1_local9 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local8( f1_local7, f1_local9["factions.isCoDCaster"], function ( f8_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f8_arg0:get(),
			modelName = "factions.isCoDCaster"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:appendEventHandler( "input_source_changed", function ( f9_arg0, f9_arg1 )
		f9_arg1.menu = f9_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( self, f9_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	f1_local7 = self --[[ @ 0]]
	f1_local8 = self.subscribeToModel --[[ @ 0]]
	f1_local9 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local8( f1_local7, f1_local9.LastInput, function ( f10_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f10_arg0:get(),
			modelName = "LastInput"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.PositionDraft_CasterControls.__resetProperties = function ( f11_arg0 )
	f11_arg0.Background:completeAnimation() --[[ @ 0]]
	f11_arg0.LBButton:completeAnimation() --[[ @ 0]]
	f11_arg0.RBButton:completeAnimation() --[[ @ 0]]
	f11_arg0.Text:completeAnimation() --[[ @ 0]]
	f11_arg0.rightButton:completeAnimation() --[[ @ 0]]
	f11_arg0.leftButton:completeAnimation() --[[ @ 0]]
	f11_arg0.Background:setAlpha( 0.4 ) --[[ @ 0]]
	f11_arg0.LBButton:setAlpha( 1 ) --[[ @ 0]]
	f11_arg0.RBButton:setLeftRight( 0.85, 1, 0, 0 ) --[[ @ 0]]
	f11_arg0.RBButton:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	f11_arg0.RBButton:setAlpha( 1 ) --[[ @ 0]]
	f11_arg0.Text:setAlpha( 1 ) --[[ @ 0]]
	f11_arg0.rightButton:setLeftRight( 0.5, 0.5, 134.5, 172.5 ) --[[ @ 0]]
	f11_arg0.rightButton:setTopBottom( 0.5, 0.5, -22, 18 ) --[[ @ 0]]
	f11_arg0.rightButton:setAlpha( 0 ) --[[ @ 0]]
	f11_arg0.leftButton:setLeftRight( 0.5, 0.5, -172.5, -134.5 ) --[[ @ 0]]
	f11_arg0.leftButton:setTopBottom( 0.5, 0.5, -22, 18 ) --[[ @ 0]]
	f11_arg0.leftButton:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.PositionDraft_CasterControls.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f12_arg0, f12_arg1 )
			f12_arg0:__resetProperties() --[[ @ 0]]
			f12_arg0:setupElementClipCounter( 6 ) --[[ @ 0]]
			f12_arg0.Background:completeAnimation() --[[ @ 0]]
			f12_arg0.Background:setAlpha( 0 ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.Background ) --[[ @ 0]]
			f12_arg0.LBButton:completeAnimation() --[[ @ 0]]
			f12_arg0.LBButton:setAlpha( 0 ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.LBButton ) --[[ @ 0]]
			f12_arg0.RBButton:completeAnimation() --[[ @ 0]]
			f12_arg0.RBButton:setAlpha( 0 ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.RBButton ) --[[ @ 0]]
			f12_arg0.Text:completeAnimation() --[[ @ 0]]
			f12_arg0.Text:setAlpha( 0 ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.Text ) --[[ @ 0]]
			f12_arg0.rightButton:completeAnimation() --[[ @ 0]]
			f12_arg0.rightButton:setAlpha( 0 ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.rightButton ) --[[ @ 0]]
			f12_arg0.leftButton:completeAnimation() --[[ @ 0]]
			f12_arg0.leftButton:setLeftRight( 0.5, 0.5, -172.5, -134.5 ) --[[ @ 0]]
			f12_arg0.leftButton:setTopBottom( 0.5, 0.5, -22, 18 ) --[[ @ 0]]
			f12_arg0.leftButton:setAlpha( 0 ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.leftButton ) --[[ @ 0]]
		end
	},
	CodCasterPC = {
		DefaultClip = function ( f13_arg0, f13_arg1 )
			f13_arg0:__resetProperties() --[[ @ 0]]
			f13_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f13_arg0.LBButton:completeAnimation() --[[ @ 0]]
			f13_arg0.LBButton:setAlpha( 0 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.LBButton ) --[[ @ 0]]
			f13_arg0.RBButton:completeAnimation() --[[ @ 0]]
			f13_arg0.RBButton:setLeftRight( 0.85, 1, 0, 0 ) --[[ @ 0]]
			f13_arg0.RBButton:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
			f13_arg0.RBButton:setAlpha( 0 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.RBButton ) --[[ @ 0]]
			f13_arg0.rightButton:completeAnimation() --[[ @ 0]]
			f13_arg0.rightButton:setLeftRight( 0.5, 0.5, 134.5, 172.5 ) --[[ @ 0]]
			f13_arg0.rightButton:setTopBottom( 0.5, 0.5, -22, 18 ) --[[ @ 0]]
			f13_arg0.rightButton:setAlpha( 1 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.rightButton ) --[[ @ 0]]
			f13_arg0.leftButton:completeAnimation() --[[ @ 0]]
			f13_arg0.leftButton:setAlpha( 1 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.leftButton ) --[[ @ 0]]
		end
	},
	CodCaster = {
		DefaultClip = function ( f14_arg0, f14_arg1 )
			f14_arg0:__resetProperties() --[[ @ 0]]
			f14_arg0:setupElementClipCounter( 6 ) --[[ @ 0]]
			f14_arg0.Background:completeAnimation() --[[ @ 0]]
			f14_arg0.Background:setAlpha( 0.4 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.Background ) --[[ @ 0]]
			f14_arg0.LBButton:completeAnimation() --[[ @ 0]]
			f14_arg0.LBButton:setAlpha( 1 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.LBButton ) --[[ @ 0]]
			f14_arg0.RBButton:completeAnimation() --[[ @ 0]]
			f14_arg0.RBButton:setAlpha( 1 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.RBButton ) --[[ @ 0]]
			f14_arg0.Text:completeAnimation() --[[ @ 0]]
			f14_arg0.Text:setAlpha( 1 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.Text ) --[[ @ 0]]
			f14_arg0.rightButton:completeAnimation() --[[ @ 0]]
			f14_arg0.rightButton:setLeftRight( 0.5, 0.5, 134.5, 172.5 ) --[[ @ 0]]
			f14_arg0.rightButton:setTopBottom( 0.5, 0.5, -22, 18 ) --[[ @ 0]]
			f14_arg0.rightButton:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.rightButton ) --[[ @ 0]]
			f14_arg0.leftButton:completeAnimation() --[[ @ 0]]
			f14_arg0.leftButton:setLeftRight( 0.5, 0.5, -172.5, -134.5 ) --[[ @ 0]]
			f14_arg0.leftButton:setTopBottom( 0.5, 0.5, -22, 18 ) --[[ @ 0]]
			f14_arg0.leftButton:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.leftButton ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.PositionDraft_CasterControls.__onClose = function ( f15_arg0 )
	f15_arg0.LBButton:close() --[[ @ 0]]
	f15_arg0.RBButton:close() --[[ @ 0]]
	f15_arg0.rightButton:close() --[[ @ 0]]
	f15_arg0.leftButton:close() --[[ @ 0]]
end
 --[[ @ 0]]
