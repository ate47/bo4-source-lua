-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
require( "x64:133a3fbb064063e0" ) --[[ @ 0]]
require( "ui/uieditor/menus/lobby/common/popups/vodviewer" ) --[[ @ 0]]
require( "x64:2b25db840a191172" ) --[[ @ 0]]
require( "x64:479a2abecba85306" ) --[[ @ 0]]
require( "x64:7c8666fff462a645" ) --[[ @ 0]]
require( "x64:6f654a80d1f9e86" ) --[[ @ 0]]
require( "x64:c9b3f8f20c93f63" ) --[[ @ 0]]
require( "x64:474643552a822614" ) --[[ @ 0]]
require( "x64:477c0b4247e6330a" ) --[[ @ 0]]
require( "x64:35653ef4ad2299d" ) --[[ @ 0]]
require( "ui/uieditor/widgets/director/directorpregamebutton" ) --[[ @ 0]]

CoD.BlackJacksShopFrameSunset = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.BlackJacksShopFrameSunset.__defaultWidth = 1920 --[[ @ 0]]
CoD.BlackJacksShopFrameSunset.__defaultHeight = 1080 --[[ @ 0]]
CoD.BlackJacksShopFrameSunset.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	CoD.FTUEUtility.ShowFTUESequenceIfNotSeen( self, f1_arg1, "BlackMarketSunsetIntroduction" ) --[[ @ 0]]
	CoD.BaseUtility.InitControllerModel( f1_arg1, "itemShopSunsetFocus", "none" ) --[[ @ 0]]
	self:setClass( CoD.BlackJacksShopFrameSunset ) --[[ @ 0]]
	self.id = "BlackJacksShopFrameSunset" --[[ @ 0]]
	self.soundSet = "ItemShop" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	local TransactionDeepLinkButton = nil --[[ @ 0]]
	
	TransactionDeepLinkButton = CoD.DirectorPreGameButton.new( f1_arg0, f1_arg1, 0.5, 0.5, -840, -610, 0, 0, 748, 818 ) --[[ @ 0]]
	TransactionDeepLinkButton.DirectorCustomStartButton.MiddleText:setText( LocalizeToUpperString( @"hash_44031C820A02E7BA" ) ) --[[ @ 0]]
	TransactionDeepLinkButton.DirectorCustomStartButton.MiddleTextFocus:setText( LocalizeToUpperString( @"hash_44031C820A02E7BA" ) ) --[[ @ 0]]
	TransactionDeepLinkButton:registerEventHandler( "gain_focus", function ( element, event )
		local f2_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f2_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f2_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"] ) --[[ @ 0]]
		return f2_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( TransactionDeepLinkButton, f1_arg1, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], "ui_confirm", function ( element, menu, controller, model )
		if IsPC() and CoD.PCKoreaUtility.IsInKorea() then
			CoD.PCKoreaUtility.OpenTransactionsDeepLinkBlackmarket( controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsPC() and CoD.PCKoreaUtility.IsInKorea() then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], @"hash_0", nil, "ui_confirm" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( TransactionDeepLinkButton, f1_arg1, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], "MOUSE1", function ( element, menu, controller, model )
		if IsPC() and CoD.PCKoreaUtility.IsInKorea() then
			CoD.PCKoreaUtility.OpenTransactionsDeepLinkBlackmarket( controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsPC() and CoD.PCKoreaUtility.IsInKorea() then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], @"hash_0", nil, "MOUSE1" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( TransactionDeepLinkButton ) --[[ @ 0]]
	self.TransactionDeepLinkButton = TransactionDeepLinkButton --[[ @ 0]]
	
	local RNGItemSlot = LUI.UIList.new( f1_arg0, f1_arg1, 30, 0, nil, true, false, false, false ) --[[ @ 0]]
	RNGItemSlot:setLeftRight( 0.5, 0.5, -272, -32 ) --[[ @ 0]]
	RNGItemSlot:setTopBottom( 0.5, 0.5, -319, 191 ) --[[ @ 0]]
	RNGItemSlot:setWidgetType( CoD.BMTallItemContainer ) --[[ @ 0]]
	RNGItemSlot:setSpacing( 30 ) --[[ @ 0]]
	RNGItemSlot:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	RNGItemSlot:setHorizontalCounter( CoD.horizontalCounterTriggerPrompts ) --[[ @ 0]]
	RNGItemSlot:setDataSource( "RNGSlotList" ) --[[ @ 0]]
	RNGItemSlot:linkToElementModel( RNGItemSlot, "emptyItem", true, function ( model, f7_arg1 )
		CoD.Menu.UpdateButtonShownState( f7_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f7_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f7_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_6A86619565BE54DB"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	RNGItemSlot:linkToElementModel( RNGItemSlot, "revealed", true, function ( model, f8_arg1 )
		CoD.Menu.UpdateButtonShownState( f8_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f8_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f8_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_6A86619565BE54DB"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	RNGItemSlot:linkToElementModel( RNGItemSlot, "movieName", true, function ( model, f9_arg1 )
		CoD.Menu.UpdateButtonShownState( f9_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f9_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_6A86619565BE54DB"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	RNGItemSlot:appendEventHandler( "input_source_changed", function ( f10_arg0, f10_arg1 )
		f10_arg1.menu = f10_arg1.menu or f1_arg0 --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f10_arg0, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f10_arg0, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_6A86619565BE54DB"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local DeterministicItemSlot1 = RNGItemSlot --[[ @ 0]]
	local DeterministicItemSlot2 = RNGItemSlot.subscribeToModel --[[ @ 0]]
	local RNGItemSlotTimer = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	DeterministicItemSlot2( DeterministicItemSlot1, RNGItemSlotTimer.LastInput, function ( f11_arg0, f11_arg1 )
		CoD.Menu.UpdateButtonShownState( f11_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f11_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_6A86619565BE54DB"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	RNGItemSlot:registerEventHandler( "list_item_gain_focus", function ( element, event )
		local f12_local0 = nil --[[ @ 0]]
		CoD.BlackMarketUtility.ChangeSupplyChainCameraBySelection( f1_arg0, f1_arg1, element ) --[[ @ 0]]
		SetElementModelToFocusedElementModel( f1_arg1, self, element, "SupplyChainDetails" ) --[[ @ 0]]
		CoD.BlackMarketUtility.AutoPlayGestureIfApplicable( f1_arg0, element, f1_arg1 ) --[[ @ 0]]
		return f12_local0
	end ) --[[ @ 0]]
	RNGItemSlot:registerEventHandler( "occlusion_change", function ( element, event )
		local f13_local0 = nil --[[ @ 0]]
		if element.OcclusionChange then
			f13_local0 = element:OcclusionChange( event ) --[[ @ 0]]
		elseif element.super.OcclusionChange then
			f13_local0 = element.super:OcclusionChange( event ) --[[ @ 0]]
		end
		if IsEventPropertyEqualTo( event, "occluded", false ) then
			CoD.BlackMarketUtility.TriggerItemShopRevealAnimation( f1_arg1, element ) --[[ @ 0]]
		end
		if not f13_local0 then
			f13_local0 = element:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f13_local0
	end ) --[[ @ 0]]
	RNGItemSlot:registerEventHandler( "lose_list_focus", function ( element, event )
		local f14_local0 = nil --[[ @ 0]]
		CoD.BlackMarketUtility.ChangeSupplyChainCameraBySelection( f1_arg0, f1_arg1, f1_arg0 ) --[[ @ 0]]
		return f14_local0
	end ) --[[ @ 0]]
	RNGItemSlot:registerEventHandler( "gain_focus", function ( element, event )
		local f15_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f15_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f15_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_6A86619565BE54DB"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3820DDD869ABBFAA"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3D2F467A6C6DA1AC"] ) --[[ @ 0]]
		return f15_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( RNGItemSlot, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], nil, function ( element, menu, controller, model )
		if not CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "emptyItem" ) and CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "revealed" ) then
			CoD.BlackMarketUtility.PlayItemShopSelectSound( element, controller ) --[[ @ 0]]
			OpenOverlay( self, "ItemShopDetailsSunset", controller, {
				_model = element:getModel()
			} ) --[[ @ 0]]
			SetControllerModelValue( controller, "LootStreamProgress.playAnimation", false ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "emptyItem" ) and CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "revealed" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, nil ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( RNGItemSlot, f1_arg1, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"], nil, function ( element, menu, controller, model )
		if CoD.ModelUtility.IsSelfModelValueNonEmptyString( element, controller, "movieName" ) and IsGamepad( controller ) and not CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "emptyItem" ) and CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "revealed" ) then
			SetControllerModelValue( controller, "LootStreamProgress.playAnimation", false ) --[[ @ 0]]
			CoD.VideoStreamingUtility.SetupVoDMovie( controller, element, "" ) --[[ @ 0]]
			DelayOpenOverlay( menu, "VoDViewer", controller, {
				fullscreen = true
			} ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if CoD.ModelUtility.IsSelfModelValueNonEmptyString( element, controller, "movieName" ) and IsGamepad( controller ) and not CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "emptyItem" ) and CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "revealed" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"], @"hash_52FB29ED3A3CA79", nil, nil ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( RNGItemSlot, f1_arg1, Enum[@"LUIButton"][@"hash_6A86619565BE54DB"], "ui_remove", function ( element, menu, controller, model )
		if CoD.ModelUtility.IsSelfModelValueNonEmptyString( element, controller, "movieName" ) and IsMouseOrKeyboard( controller ) and not CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "emptyItem" ) and CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "revealed" ) then
			SetControllerModelValue( controller, "LootStreamProgress.playAnimation", false ) --[[ @ 0]]
			CoD.VideoStreamingUtility.SetupVoDMovie( controller, element, "" ) --[[ @ 0]]
			DelayOpenOverlay( menu, "VoDViewer", controller, {
				fullscreen = true
			} ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if CoD.ModelUtility.IsSelfModelValueNonEmptyString( element, controller, "movieName" ) and IsMouseOrKeyboard( controller ) and not CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "emptyItem" ) and CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "revealed" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_6A86619565BE54DB"], @"hash_52FB29ED3A3CA79", Enum[@"hash_3BEBDBAEEB3ECCCA"][@"hash_4B6372335C630AD3"], "ui_remove" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( RNGItemSlot, f1_arg1, Enum[@"LUIButton"][@"hash_3820DDD869ABBFAA"], "MWHEELDOWN", function ( element, menu, controller, model )
		if not IsRepeatButtonPress( model ) then
			CoD.GridAndListUtility.NavigateGridItemOnParentGridOrList( element, controller, true ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsRepeatButtonPress( nil ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3820DDD869ABBFAA"], @"hash_0", nil, "MWHEELDOWN" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( RNGItemSlot, f1_arg1, Enum[@"LUIButton"][@"hash_3D2F467A6C6DA1AC"], "MWHEELUP", function ( element, menu, controller, model )
		if not IsRepeatButtonPress( model ) then
			CoD.GridAndListUtility.NavigateGridItemOnParentGridOrList( element, controller, false ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsRepeatButtonPress( nil ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3D2F467A6C6DA1AC"], @"hash_0", nil, "MWHEELUP" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( RNGItemSlot, "updateDataSource", function ( element, controller, f26_arg2, f26_arg3 )
		if CoD.BlackMarketUtility.IsShopListInFocus( f1_arg1, element ) then
			CoD.BlackMarketUtility.ChangeSupplyChainCameraBySelection( f1_arg0, f1_arg1, element ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( RNGItemSlot, "childFocusGained", function ( element )
		SetControllerModelValue( f1_arg1, "itemShopSunsetFocus", "slot" ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( RNGItemSlot, "childFocusLost", function ( element )
		SetControllerModelValue( f1_arg1, "itemShopSunsetFocus", "none" ) --[[ @ 0]]
	end ) --[[ @ 0]]
	RNGItemSlot:subscribeToGlobalModel( f1_arg1, "GlobalModel", "ItemshopRotation.cycled", function ( model )
		local f29_local0 = RNGItemSlot --[[ @ 0]]
		if CoD.ModelUtility.IsGlobalModelValueTrue( "ItemshopRotation.cycled" ) then
			CoD.GridAndListUtility.UpdateDataSource( f29_local0, true, true, true ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	RNGItemSlot:AddContextualMenuAction( f1_arg0, f1_arg1, @"hash_52FB29ED3A3CA79", function ( f30_arg0, f30_arg1, f30_arg2, f30_arg3 )
		if CoD.ModelUtility.IsSelfModelValueNonEmptyString( f30_arg0, f30_arg2, "movieName" ) then
			return function ( f31_arg0, f31_arg1, f31_arg2, f31_arg3 )
				SetControllerModelValue( f31_arg2, "LootStreamProgress.playAnimation", false ) --[[ @ 0]]
				CoD.VideoStreamingUtility.SetupVoDMovie( f31_arg2, f31_arg0, "" ) --[[ @ 0]]
				DelayOpenOverlay( f31_arg1, "VoDViewer", f31_arg2, {
					fullscreen = true
				} ) --[[ @ 0]]
			end
			
		else
			
		end
	end ) --[[ @ 0]]
	self:addElement( RNGItemSlot ) --[[ @ 0]]
	self.RNGItemSlot = RNGItemSlot --[[ @ 0]]
	
	DeterministicItemSlot2 = LUI.UIList.new( f1_arg0, f1_arg1, 30, 0, nil, true, false, false, false ) --[[ @ 0]]
	DeterministicItemSlot2:setLeftRight( 0.5, 0.5, -556, -316 ) --[[ @ 0]]
	DeterministicItemSlot2:setTopBottom( 0.5, 0.5, -319, 191 ) --[[ @ 0]]
	DeterministicItemSlot2:setWidgetType( CoD.BMTallItemContainer ) --[[ @ 0]]
	DeterministicItemSlot2:setSpacing( 30 ) --[[ @ 0]]
	DeterministicItemSlot2:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	DeterministicItemSlot2:setHorizontalCounter( CoD.horizontalCounterTriggerPrompts ) --[[ @ 0]]
	DeterministicItemSlot2:setDataSource( "DeterministicSlot2List" ) --[[ @ 0]]
	DeterministicItemSlot2:linkToElementModel( DeterministicItemSlot2, "lootType", true, function ( model, f32_arg1 )
		CoD.Menu.UpdateButtonShownState( f32_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	DeterministicItemSlot2:linkToElementModel( DeterministicItemSlot2, "emptyItem", true, function ( model, f33_arg1 )
		CoD.Menu.UpdateButtonShownState( f33_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f33_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f33_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_6A86619565BE54DB"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	DeterministicItemSlot2:linkToElementModel( DeterministicItemSlot2, "revealed", true, function ( model, f34_arg1 )
		CoD.Menu.UpdateButtonShownState( f34_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f34_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f34_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_6A86619565BE54DB"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	DeterministicItemSlot2:linkToElementModel( DeterministicItemSlot2, "movieName", true, function ( model, f35_arg1 )
		CoD.Menu.UpdateButtonShownState( f35_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f35_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_6A86619565BE54DB"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	DeterministicItemSlot2:appendEventHandler( "input_source_changed", function ( f36_arg0, f36_arg1 )
		f36_arg1.menu = f36_arg1.menu or f1_arg0 --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f36_arg0, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f36_arg0, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_6A86619565BE54DB"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	RNGItemSlotTimer = DeterministicItemSlot2 --[[ @ 0]]
	DeterministicItemSlot1 = DeterministicItemSlot2.subscribeToModel --[[ @ 0]]
	local DeterministicItemSlot2Timer = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	DeterministicItemSlot1( RNGItemSlotTimer, DeterministicItemSlot2Timer.LastInput, function ( f37_arg0, f37_arg1 )
		CoD.Menu.UpdateButtonShownState( f37_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f37_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_6A86619565BE54DB"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	DeterministicItemSlot2:registerEventHandler( "list_item_gain_focus", function ( element, event )
		local f38_local0 = nil --[[ @ 0]]
		CoD.BlackMarketUtility.ChangeSupplyChainCameraBySelection( f1_arg0, f1_arg1, element ) --[[ @ 0]]
		SetElementModelToFocusedElementModel( f1_arg1, self, element, "SupplyChainDetails" ) --[[ @ 0]]
		CoD.BlackMarketUtility.AutoPlayGestureIfApplicable( f1_arg0, element, f1_arg1 ) --[[ @ 0]]
		return f38_local0
	end ) --[[ @ 0]]
	DeterministicItemSlot2:registerEventHandler( "occlusion_change", function ( element, event )
		local f39_local0 = nil --[[ @ 0]]
		if element.OcclusionChange then
			f39_local0 = element:OcclusionChange( event ) --[[ @ 0]]
		elseif element.super.OcclusionChange then
			f39_local0 = element.super:OcclusionChange( event ) --[[ @ 0]]
		end
		if IsEventPropertyEqualTo( event, "occluded", false ) then
			CoD.BlackMarketUtility.TriggerItemShopRevealAnimation( f1_arg1, element ) --[[ @ 0]]
		end
		if not f39_local0 then
			f39_local0 = element:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f39_local0
	end ) --[[ @ 0]]
	DeterministicItemSlot2:registerEventHandler( "lose_list_focus", function ( element, event )
		local f40_local0 = nil --[[ @ 0]]
		CoD.BlackMarketUtility.ChangeSupplyChainCameraBySelection( f1_arg0, f1_arg1, f1_arg0 ) --[[ @ 0]]
		return f40_local0
	end ) --[[ @ 0]]
	DeterministicItemSlot2:registerEventHandler( "gain_focus", function ( element, event )
		local f41_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f41_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f41_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_6A86619565BE54DB"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3820DDD869ABBFAA"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3D2F467A6C6DA1AC"] ) --[[ @ 0]]
		return f41_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( DeterministicItemSlot2, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], nil, function ( element, menu, controller, model )
		if CoD.ModelUtility.IsSelfModelValueEqualToEnum( element, controller, "lootType", LuaEnum.LOOT_TYPE.CONTRACT ) and not CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "emptyItem" ) and CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "revealed" ) then
			PlaySoundAlias( "uin_toggle_generic" ) --[[ @ 0]]
			SetControllerModelValue( controller, "LootStreamProgress.playAnimation", false ) --[[ @ 0]]
			CoD.ContractUtility.OpenContractDetailsSunset( self, element, controller ) --[[ @ 0]]
			return true
		elseif not CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "emptyItem" ) and CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "revealed" ) then
			CoD.BlackMarketUtility.PlayItemShopSelectSound( element, controller ) --[[ @ 0]]
			OpenOverlay( self, "ItemShopDetailsSunset", controller, {
				_model = element:getModel()
			} ) --[[ @ 0]]
			SetControllerModelValue( controller, "LootStreamProgress.playAnimation", false ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if CoD.ModelUtility.IsSelfModelValueEqualToEnum( element, controller, "lootType", LuaEnum.LOOT_TYPE.CONTRACT ) and not CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "emptyItem" ) and CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "revealed" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, nil ) --[[ @ 0]]
			return true
		elseif not CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "emptyItem" ) and CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "revealed" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, nil ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( DeterministicItemSlot2, f1_arg1, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"], nil, function ( element, menu, controller, model )
		if CoD.ModelUtility.IsSelfModelValueNonEmptyString( element, controller, "movieName" ) and IsGamepad( controller ) and not CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "emptyItem" ) and CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "revealed" ) then
			SetControllerModelValue( controller, "LootStreamProgress.playAnimation", false ) --[[ @ 0]]
			CoD.VideoStreamingUtility.SetupVoDMovie( controller, element, "" ) --[[ @ 0]]
			DelayOpenOverlay( menu, "VoDViewer", controller, {
				fullscreen = true
			} ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if CoD.ModelUtility.IsSelfModelValueNonEmptyString( element, controller, "movieName" ) and IsGamepad( controller ) and not CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "emptyItem" ) and CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "revealed" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"], @"hash_52FB29ED3A3CA79", nil, nil ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( DeterministicItemSlot2, f1_arg1, Enum[@"LUIButton"][@"hash_6A86619565BE54DB"], "ui_remove", function ( element, menu, controller, model )
		if CoD.ModelUtility.IsSelfModelValueNonEmptyString( element, controller, "movieName" ) and IsMouseOrKeyboard( controller ) and not CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "emptyItem" ) and CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "revealed" ) then
			SetControllerModelValue( controller, "LootStreamProgress.playAnimation", false ) --[[ @ 0]]
			CoD.VideoStreamingUtility.SetupVoDMovie( controller, element, "" ) --[[ @ 0]]
			DelayOpenOverlay( menu, "VoDViewer", controller, {
				fullscreen = true
			} ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if CoD.ModelUtility.IsSelfModelValueNonEmptyString( element, controller, "movieName" ) and IsMouseOrKeyboard( controller ) and not CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "emptyItem" ) and CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "revealed" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_6A86619565BE54DB"], @"hash_52FB29ED3A3CA79", Enum[@"hash_3BEBDBAEEB3ECCCA"][@"hash_4B6372335C630AD3"], "ui_remove" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( DeterministicItemSlot2, f1_arg1, Enum[@"LUIButton"][@"hash_3820DDD869ABBFAA"], "MWHEELDOWN", function ( element, menu, controller, model )
		if not IsRepeatButtonPress( model ) then
			CoD.GridAndListUtility.NavigateGridItemOnParentGridOrList( element, controller, true ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsRepeatButtonPress( nil ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3820DDD869ABBFAA"], @"hash_0", nil, "MWHEELDOWN" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( DeterministicItemSlot2, f1_arg1, Enum[@"LUIButton"][@"hash_3D2F467A6C6DA1AC"], "MWHEELUP", function ( element, menu, controller, model )
		if not IsRepeatButtonPress( model ) then
			CoD.GridAndListUtility.NavigateGridItemOnParentGridOrList( element, controller, false ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsRepeatButtonPress( nil ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3D2F467A6C6DA1AC"], @"hash_0", nil, "MWHEELUP" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( DeterministicItemSlot2, "updateDataSource", function ( element, controller, f52_arg2, f52_arg3 )
		if CoD.BlackMarketUtility.IsShopListInFocus( f1_arg1, element ) then
			CoD.BlackMarketUtility.ChangeSupplyChainCameraBySelection( f1_arg0, f1_arg1, element ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( DeterministicItemSlot2, "childFocusGained", function ( element )
		SetControllerModelValue( f1_arg1, "itemShopSunsetFocus", "slot" ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( DeterministicItemSlot2, "childFocusLost", function ( element )
		SetControllerModelValue( f1_arg1, "itemShopSunsetFocus", "none" ) --[[ @ 0]]
	end ) --[[ @ 0]]
	DeterministicItemSlot2:subscribeToGlobalModel( f1_arg1, "GlobalModel", "ItemshopRotation.cycled", function ( model )
		local f55_local0 = DeterministicItemSlot2 --[[ @ 0]]
		if CoD.ModelUtility.IsGlobalModelValueTrue( "ItemshopRotation.cycled" ) then
			CoD.GridAndListUtility.UpdateDataSource( f55_local0, true, true, true ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	DeterministicItemSlot2:AddContextualMenuAction( f1_arg0, f1_arg1, @"hash_52FB29ED3A3CA79", function ( f56_arg0, f56_arg1, f56_arg2, f56_arg3 )
		if CoD.ModelUtility.IsSelfModelValueNonEmptyString( f56_arg0, f56_arg2, "movieName" ) then
			return function ( f57_arg0, f57_arg1, f57_arg2, f57_arg3 )
				SetControllerModelValue( f57_arg2, "LootStreamProgress.playAnimation", false ) --[[ @ 0]]
				CoD.VideoStreamingUtility.SetupVoDMovie( f57_arg2, f57_arg0, "" ) --[[ @ 0]]
				DelayOpenOverlay( f57_arg1, "VoDViewer", f57_arg2, {
					fullscreen = true
				} ) --[[ @ 0]]
			end
			
		else
			
		end
	end ) --[[ @ 0]]
	self:addElement( DeterministicItemSlot2 ) --[[ @ 0]]
	self.DeterministicItemSlot2 = DeterministicItemSlot2 --[[ @ 0]]
	
	DeterministicItemSlot1 = LUI.UIList.new( f1_arg0, f1_arg1, 30, 0, nil, true, false, false, false ) --[[ @ 0]]
	DeterministicItemSlot1:setLeftRight( 0.5, 0.5, -840, -600 ) --[[ @ 0]]
	DeterministicItemSlot1:setTopBottom( 0.5, 0.5, -319, 191 ) --[[ @ 0]]
	DeterministicItemSlot1:setWidgetType( CoD.BMTallItemContainer ) --[[ @ 0]]
	DeterministicItemSlot1:setSpacing( 30 ) --[[ @ 0]]
	DeterministicItemSlot1:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	DeterministicItemSlot1:setHorizontalCounter( CoD.horizontalCounterTriggerPrompts ) --[[ @ 0]]
	DeterministicItemSlot1:setDataSource( "DeterministicSlot1List" ) --[[ @ 0]]
	DeterministicItemSlot1:linkToElementModel( DeterministicItemSlot1, "lootType", true, function ( model, f58_arg1 )
		CoD.Menu.UpdateButtonShownState( f58_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	DeterministicItemSlot1:linkToElementModel( DeterministicItemSlot1, "emptyItem", true, function ( model, f59_arg1 )
		CoD.Menu.UpdateButtonShownState( f59_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f59_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f59_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_6A86619565BE54DB"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	DeterministicItemSlot1:linkToElementModel( DeterministicItemSlot1, "revealed", true, function ( model, f60_arg1 )
		CoD.Menu.UpdateButtonShownState( f60_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f60_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f60_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_6A86619565BE54DB"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	DeterministicItemSlot1:linkToElementModel( DeterministicItemSlot1, "movieName", true, function ( model, f61_arg1 )
		CoD.Menu.UpdateButtonShownState( f61_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f61_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_6A86619565BE54DB"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	DeterministicItemSlot1:appendEventHandler( "input_source_changed", function ( f62_arg0, f62_arg1 )
		f62_arg1.menu = f62_arg1.menu or f1_arg0 --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f62_arg0, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f62_arg0, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_6A86619565BE54DB"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	DeterministicItemSlot2Timer = DeterministicItemSlot1 --[[ @ 0]]
	RNGItemSlotTimer = DeterministicItemSlot1.subscribeToModel --[[ @ 0]]
	local DeterministicItemSlot1Timer = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	RNGItemSlotTimer( DeterministicItemSlot2Timer, DeterministicItemSlot1Timer.LastInput, function ( f63_arg0, f63_arg1 )
		CoD.Menu.UpdateButtonShownState( f63_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f63_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_6A86619565BE54DB"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	DeterministicItemSlot1:registerEventHandler( "list_item_gain_focus", function ( element, event )
		local f64_local0 = nil --[[ @ 0]]
		CoD.BlackMarketUtility.ChangeSupplyChainCameraBySelection( f1_arg0, f1_arg1, element ) --[[ @ 0]]
		SetElementModelToFocusedElementModel( f1_arg1, self, element, "SupplyChainDetails" ) --[[ @ 0]]
		CoD.BlackMarketUtility.AutoPlayGestureIfApplicable( f1_arg0, element, f1_arg1 ) --[[ @ 0]]
		return f64_local0
	end ) --[[ @ 0]]
	DeterministicItemSlot1:registerEventHandler( "occlusion_change", function ( element, event )
		local f65_local0 = nil --[[ @ 0]]
		if element.OcclusionChange then
			f65_local0 = element:OcclusionChange( event ) --[[ @ 0]]
		elseif element.super.OcclusionChange then
			f65_local0 = element.super:OcclusionChange( event ) --[[ @ 0]]
		end
		if IsEventPropertyEqualTo( event, "occluded", false ) then
			CoD.BlackMarketUtility.TriggerItemShopRevealAnimation( f1_arg1, element ) --[[ @ 0]]
		end
		if not f65_local0 then
			f65_local0 = element:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f65_local0
	end ) --[[ @ 0]]
	DeterministicItemSlot1:registerEventHandler( "lose_list_focus", function ( element, event )
		local f66_local0 = nil --[[ @ 0]]
		CoD.BlackMarketUtility.ChangeSupplyChainCameraBySelection( f1_arg0, f1_arg1, f1_arg0 ) --[[ @ 0]]
		return f66_local0
	end ) --[[ @ 0]]
	DeterministicItemSlot1:registerEventHandler( "gain_focus", function ( element, event )
		local f67_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f67_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f67_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_6A86619565BE54DB"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3820DDD869ABBFAA"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3D2F467A6C6DA1AC"] ) --[[ @ 0]]
		return f67_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( DeterministicItemSlot1, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], nil, function ( element, menu, controller, model )
		if CoD.ModelUtility.IsSelfModelValueEqualToEnum( element, controller, "lootType", LuaEnum.LOOT_TYPE.CONTRACT ) and not CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "emptyItem" ) and CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "revealed" ) then
			PlaySoundAlias( "uin_toggle_generic" ) --[[ @ 0]]
			SetControllerModelValue( controller, "LootStreamProgress.playAnimation", false ) --[[ @ 0]]
			CoD.ContractUtility.OpenContractDetailsSunset( self, element, controller ) --[[ @ 0]]
			return true
		elseif not CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "emptyItem" ) and CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "revealed" ) then
			CoD.BlackMarketUtility.PlayItemShopSelectSound( element, controller ) --[[ @ 0]]
			OpenOverlay( self, "ItemShopDetailsSunset", controller, {
				_model = element:getModel()
			} ) --[[ @ 0]]
			SetControllerModelValue( controller, "LootStreamProgress.playAnimation", false ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if CoD.ModelUtility.IsSelfModelValueEqualToEnum( element, controller, "lootType", LuaEnum.LOOT_TYPE.CONTRACT ) and not CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "emptyItem" ) and CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "revealed" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, nil ) --[[ @ 0]]
			return true
		elseif not CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "emptyItem" ) and CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "revealed" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, nil ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( DeterministicItemSlot1, f1_arg1, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"], nil, function ( element, menu, controller, model )
		if CoD.ModelUtility.IsSelfModelValueNonEmptyString( element, controller, "movieName" ) and IsGamepad( controller ) and not CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "emptyItem" ) and CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "revealed" ) then
			SetControllerModelValue( controller, "LootStreamProgress.playAnimation", false ) --[[ @ 0]]
			CoD.VideoStreamingUtility.SetupVoDMovie( controller, element, "" ) --[[ @ 0]]
			DelayOpenOverlay( menu, "VoDViewer", controller, {
				fullscreen = true
			} ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if CoD.ModelUtility.IsSelfModelValueNonEmptyString( element, controller, "movieName" ) and IsGamepad( controller ) and not CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "emptyItem" ) and CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "revealed" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"], @"hash_52FB29ED3A3CA79", nil, nil ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( DeterministicItemSlot1, f1_arg1, Enum[@"LUIButton"][@"hash_6A86619565BE54DB"], "ui_remove", function ( element, menu, controller, model )
		if CoD.ModelUtility.IsSelfModelValueNonEmptyString( element, controller, "movieName" ) and IsMouseOrKeyboard( controller ) and not CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "emptyItem" ) and CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "revealed" ) then
			SetControllerModelValue( controller, "LootStreamProgress.playAnimation", false ) --[[ @ 0]]
			CoD.VideoStreamingUtility.SetupVoDMovie( controller, element, "" ) --[[ @ 0]]
			DelayOpenOverlay( menu, "VoDViewer", controller, {
				fullscreen = true
			} ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if CoD.ModelUtility.IsSelfModelValueNonEmptyString( element, controller, "movieName" ) and IsMouseOrKeyboard( controller ) and not CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "emptyItem" ) and CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "revealed" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_6A86619565BE54DB"], @"hash_52FB29ED3A3CA79", Enum[@"hash_3BEBDBAEEB3ECCCA"][@"hash_4B6372335C630AD3"], "ui_remove" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( DeterministicItemSlot1, f1_arg1, Enum[@"LUIButton"][@"hash_3820DDD869ABBFAA"], "MWHEELDOWN", function ( element, menu, controller, model )
		if not IsRepeatButtonPress( model ) then
			CoD.GridAndListUtility.NavigateGridItemOnParentGridOrList( element, controller, true ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsRepeatButtonPress( nil ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3820DDD869ABBFAA"], @"hash_0", nil, "MWHEELDOWN" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( DeterministicItemSlot1, f1_arg1, Enum[@"LUIButton"][@"hash_3D2F467A6C6DA1AC"], "MWHEELUP", function ( element, menu, controller, model )
		if not IsRepeatButtonPress( model ) then
			CoD.GridAndListUtility.NavigateGridItemOnParentGridOrList( element, controller, false ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsRepeatButtonPress( nil ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3D2F467A6C6DA1AC"], @"hash_0", nil, "MWHEELUP" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( DeterministicItemSlot1, "updateDataSource", function ( element, controller, f78_arg2, f78_arg3 )
		if CoD.BlackMarketUtility.IsShopListInFocus( f1_arg1, element ) then
			CoD.BlackMarketUtility.ChangeSupplyChainCameraBySelection( f1_arg0, f1_arg1, element ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( DeterministicItemSlot1, "childFocusGained", function ( element )
		SetControllerModelValue( f1_arg1, "itemShopSunsetFocus", "slot" ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( DeterministicItemSlot1, "childFocusLost", function ( element )
		SetControllerModelValue( f1_arg1, "itemShopSunsetFocus", "none" ) --[[ @ 0]]
	end ) --[[ @ 0]]
	DeterministicItemSlot1:subscribeToGlobalModel( f1_arg1, "GlobalModel", "ItemshopRotation.cycled", function ( model )
		local f81_local0 = DeterministicItemSlot1 --[[ @ 0]]
		if CoD.ModelUtility.IsGlobalModelValueTrue( "ItemshopRotation.cycled" ) then
			CoD.GridAndListUtility.UpdateDataSource( f81_local0, true, true, true ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	DeterministicItemSlot1:AddContextualMenuAction( f1_arg0, f1_arg1, @"hash_52FB29ED3A3CA79", function ( f82_arg0, f82_arg1, f82_arg2, f82_arg3 )
		if CoD.ModelUtility.IsSelfModelValueNonEmptyString( f82_arg0, f82_arg2, "movieName" ) then
			return function ( f83_arg0, f83_arg1, f83_arg2, f83_arg3 )
				SetControllerModelValue( f83_arg2, "LootStreamProgress.playAnimation", false ) --[[ @ 0]]
				CoD.VideoStreamingUtility.SetupVoDMovie( f83_arg2, f83_arg0, "" ) --[[ @ 0]]
				DelayOpenOverlay( f83_arg1, "VoDViewer", f83_arg2, {
					fullscreen = true
				} ) --[[ @ 0]]
			end
			
		else
			
		end
	end ) --[[ @ 0]]
	self:addElement( DeterministicItemSlot1 ) --[[ @ 0]]
	self.DeterministicItemSlot1 = DeterministicItemSlot1 --[[ @ 0]]
	
	RNGItemSlotTimer = CoD.ItemShopSlotTimer.new( f1_arg0, f1_arg1, 0.5, 0.5, -273, -33, 0.5, 0.5, -369, -319 ) --[[ @ 0]]
	RNGItemSlotTimer:mergeStateConditions( {
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return not CoD.ModelUtility.IsGlobalDataSourceModelValueTrue( f1_arg1, "ItemshopRotation", "loot_itemshop_slot3_timer_active" )
			end
		}
	} ) --[[ @ 0]]
	DeterministicItemSlot1Timer = RNGItemSlotTimer --[[ @ 0]]
	DeterministicItemSlot2Timer = RNGItemSlotTimer.subscribeToModel --[[ @ 0]]
	local SpecialOrdersBracket = DataSources.ItemshopRotation.getModel( f1_arg1 ) --[[ @ 0]]
	DeterministicItemSlot2Timer( DeterministicItemSlot1Timer, SpecialOrdersBracket.loot_itemshop_slot3_timer_active, function ( f85_arg0 )
		f1_arg0:updateElementState( RNGItemSlotTimer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f85_arg0:get(),
			modelName = "loot_itemshop_slot3_timer_active"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	RNGItemSlotTimer:subscribeToGlobalModel( f1_arg1, "ItemshopRotation", "loot_itemshop_slot3_timer", function ( model )
		local f86_local0 = model:get() --[[ @ 0]]
		if f86_local0 ~= nil then
			RNGItemSlotTimer.TextBox:setText( f86_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( RNGItemSlotTimer ) --[[ @ 0]]
	self.RNGItemSlotTimer = RNGItemSlotTimer --[[ @ 0]]
	
	DeterministicItemSlot2Timer = CoD.ItemShopSlotTimer.new( f1_arg0, f1_arg1, 0.5, 0.5, -557, -316, 0.5, 0.5, -369, -319 ) --[[ @ 0]]
	DeterministicItemSlot2Timer:mergeStateConditions( {
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return not CoD.ModelUtility.IsGlobalDataSourceModelValueTrue( f1_arg1, "ItemshopRotation", "loot_itemshop_slot2_timer_active" )
			end
		}
	} ) --[[ @ 0]]
	SpecialOrdersBracket = DeterministicItemSlot2Timer --[[ @ 0]]
	DeterministicItemSlot1Timer = DeterministicItemSlot2Timer.subscribeToModel --[[ @ 0]]
	local FeaturedItemsBracket = DataSources.ItemshopRotation.getModel( f1_arg1 ) --[[ @ 0]]
	DeterministicItemSlot1Timer( SpecialOrdersBracket, FeaturedItemsBracket.loot_itemshop_slot2_timer_active, function ( f88_arg0 )
		f1_arg0:updateElementState( DeterministicItemSlot2Timer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f88_arg0:get(),
			modelName = "loot_itemshop_slot2_timer_active"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	DeterministicItemSlot2Timer:subscribeToGlobalModel( f1_arg1, "ItemshopRotation", "loot_itemshop_slot2_timer", function ( model )
		local f89_local0 = model:get() --[[ @ 0]]
		if f89_local0 ~= nil then
			DeterministicItemSlot2Timer.TextBox:setText( f89_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( DeterministicItemSlot2Timer ) --[[ @ 0]]
	self.DeterministicItemSlot2Timer = DeterministicItemSlot2Timer --[[ @ 0]]
	
	DeterministicItemSlot1Timer = CoD.ItemShopSlotTimer.new( f1_arg0, f1_arg1, 0.5, 0.5, -841, -599, 0.5, 0.5, -369, -319 ) --[[ @ 0]]
	DeterministicItemSlot1Timer:mergeStateConditions( {
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return not CoD.ModelUtility.IsGlobalDataSourceModelValueTrue( f1_arg1, "ItemshopRotation", "loot_itemshop_slot1_timer_active" )
			end
		}
	} ) --[[ @ 0]]
	FeaturedItemsBracket = DeterministicItemSlot1Timer --[[ @ 0]]
	SpecialOrdersBracket = DeterministicItemSlot1Timer.subscribeToModel --[[ @ 0]]
	local TiledwhiteNoiseBacking = DataSources.ItemshopRotation.getModel( f1_arg1 ) --[[ @ 0]]
	SpecialOrdersBracket( FeaturedItemsBracket, TiledwhiteNoiseBacking.loot_itemshop_slot1_timer_active, function ( f91_arg0 )
		f1_arg0:updateElementState( DeterministicItemSlot1Timer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f91_arg0:get(),
			modelName = "loot_itemshop_slot1_timer_active"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	DeterministicItemSlot1Timer:subscribeToGlobalModel( f1_arg1, "ItemshopRotation", "loot_itemshop_slot1_timer", function ( model )
		local f92_local0 = model:get() --[[ @ 0]]
		if f92_local0 ~= nil then
			DeterministicItemSlot1Timer.TextBox:setText( f92_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( DeterministicItemSlot1Timer ) --[[ @ 0]]
	self.DeterministicItemSlot1Timer = DeterministicItemSlot1Timer --[[ @ 0]]
	
	SpecialOrdersBracket = LUI.UIImage.new( 0.5, 0.5, -277, -27, 0.5, 0.5, -373, -365 ) --[[ @ 0]]
	SpecialOrdersBracket:setRGB( 0.98, 1, 0.89 ) --[[ @ 0]]
	SpecialOrdersBracket:setAlpha( 0.5 ) --[[ @ 0]]
	SpecialOrdersBracket:setImage( RegisterImage( @"hash_4C325BED3F226657" ) ) --[[ @ 0]]
	SpecialOrdersBracket:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_add" ) ) --[[ @ 0]]
	SpecialOrdersBracket:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	SpecialOrdersBracket:setupNineSliceShader( 16, 4 ) --[[ @ 0]]
	self:addElement( SpecialOrdersBracket ) --[[ @ 0]]
	self.SpecialOrdersBracket = SpecialOrdersBracket --[[ @ 0]]
	
	FeaturedItemsBracket = LUI.UIImage.new( 0.5, 0.5, -846, -311, 0.5, 0.5, -373, -365 ) --[[ @ 0]]
	FeaturedItemsBracket:setAlpha( 0.5 ) --[[ @ 0]]
	FeaturedItemsBracket:setImage( RegisterImage( @"hash_4C325BED3F226657" ) ) --[[ @ 0]]
	FeaturedItemsBracket:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_add" ) ) --[[ @ 0]]
	FeaturedItemsBracket:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	FeaturedItemsBracket:setupNineSliceShader( 16, 4 ) --[[ @ 0]]
	self:addElement( FeaturedItemsBracket ) --[[ @ 0]]
	self.FeaturedItemsBracket = FeaturedItemsBracket --[[ @ 0]]
	
	TiledwhiteNoiseBacking = LUI.UIImage.new( 0, 0, 115, 649, 0, 0, 148, 174 ) --[[ @ 0]]
	TiledwhiteNoiseBacking:setRGB( 0.81, 0.89, 0.93 ) --[[ @ 0]]
	TiledwhiteNoiseBacking:setAlpha( 0.04 ) --[[ @ 0]]
	TiledwhiteNoiseBacking:setImage( RegisterImage( @"uie_ui_menu_aar_repeat_white_bg" ) ) --[[ @ 0]]
	TiledwhiteNoiseBacking:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_16CBE95C250C6D15" ) ) --[[ @ 0]]
	TiledwhiteNoiseBacking:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	TiledwhiteNoiseBacking:setupNineSliceShader( 64, 64 ) --[[ @ 0]]
	self:addElement( TiledwhiteNoiseBacking ) --[[ @ 0]]
	self.TiledwhiteNoiseBacking = TiledwhiteNoiseBacking --[[ @ 0]]
	
	local TiledwhiteNoiseBacking2 = LUI.UIImage.new( 0, 0, 684, 933, 0, 0, 148, 174 ) --[[ @ 0]]
	TiledwhiteNoiseBacking2:setRGB( 0.81, 0.89, 0.93 ) --[[ @ 0]]
	TiledwhiteNoiseBacking2:setAlpha( 0.04 ) --[[ @ 0]]
	TiledwhiteNoiseBacking2:setImage( RegisterImage( @"uie_ui_menu_aar_repeat_white_bg" ) ) --[[ @ 0]]
	TiledwhiteNoiseBacking2:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_16CBE95C250C6D15" ) ) --[[ @ 0]]
	TiledwhiteNoiseBacking2:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	TiledwhiteNoiseBacking2:setupNineSliceShader( 64, 64 ) --[[ @ 0]]
	self:addElement( TiledwhiteNoiseBacking2 ) --[[ @ 0]]
	self.TiledwhiteNoiseBacking2 = TiledwhiteNoiseBacking2 --[[ @ 0]]
	
	local TiledwhiteNoiseBacking3 = LUI.UIImage.new( 0, 0, 968, 1217, 0, 0, 148, 174 ) --[[ @ 0]]
	TiledwhiteNoiseBacking3:setRGB( 0.81, 0.89, 0.93 ) --[[ @ 0]]
	TiledwhiteNoiseBacking3:setAlpha( 0.04 ) --[[ @ 0]]
	TiledwhiteNoiseBacking3:setImage( RegisterImage( @"uie_ui_menu_aar_repeat_white_bg" ) ) --[[ @ 0]]
	TiledwhiteNoiseBacking3:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_16CBE95C250C6D15" ) ) --[[ @ 0]]
	TiledwhiteNoiseBacking3:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	TiledwhiteNoiseBacking3:setupNineSliceShader( 64, 64 ) --[[ @ 0]]
	self:addElement( TiledwhiteNoiseBacking3 ) --[[ @ 0]]
	self.TiledwhiteNoiseBacking3 = TiledwhiteNoiseBacking3 --[[ @ 0]]
	
	local RNGItemSlotLabel = LUI.UIText.new( 0.5, 0.5, -270, -32, 0.5, 0.5, -388, -370 ) --[[ @ 0]]
	RNGItemSlotLabel:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	RNGItemSlotLabel:setText( LocalizeToUpperString( @"hash_6DD64FB205312314" ) ) --[[ @ 0]]
	RNGItemSlotLabel:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	RNGItemSlotLabel:setLetterSpacing( 4 ) --[[ @ 0]]
	RNGItemSlotLabel:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	RNGItemSlotLabel:setAlignment( Enum[@"LUIAlignment"][@"hash_E821F0ECFF8D1C7"] ) --[[ @ 0]]
	self:addElement( RNGItemSlotLabel ) --[[ @ 0]]
	self.RNGItemSlotLabel = RNGItemSlotLabel --[[ @ 0]]
	
	local DeterministicItemLabel = LUI.UIText.new( 0.5, 0.5, -840, -316, 0.5, 0.5, -388, -370 ) --[[ @ 0]]
	DeterministicItemLabel:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	DeterministicItemLabel:setText( LocalizeToUpperString( @"hash_25DAEFC4C9B0A8FA" ) ) --[[ @ 0]]
	DeterministicItemLabel:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	DeterministicItemLabel:setLetterSpacing( 4 ) --[[ @ 0]]
	DeterministicItemLabel:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	DeterministicItemLabel:setAlignment( Enum[@"LUIAlignment"][@"hash_E821F0ECFF8D1C7"] ) --[[ @ 0]]
	self:addElement( DeterministicItemLabel ) --[[ @ 0]]
	self.DeterministicItemLabel = DeterministicItemLabel --[[ @ 0]]
	
	local MyShopTimer = CoD.ListLabelHideable.new( f1_arg0, f1_arg1, 0.5, 0.5, 11, 253, 0.5, 0.5, -369, -319 ) --[[ @ 0]]
	MyShopTimer:mergeStateConditions( {
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return IsBooleanDvarSet( "loot_weaponBribeMultiPurchaseActive" )
			end
		}
	} ) --[[ @ 0]]
	MyShopTimer:subscribeToGlobalModel( f1_arg1, "BribeMenuTimer", "bribe_menu_timer", function ( model )
		local f94_local0 = model:get() --[[ @ 0]]
		if f94_local0 ~= nil then
			MyShopTimer.TextBox2:setText( f94_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	MyShopTimer:subscribeToGlobalModel( f1_arg1, "BribeMenuTimer", "cycled", function ( model )
		local f95_local0 = MyShopTimer --[[ @ 0]]
		if CoD.ModelUtility.IsGlobalDataSourceModelValueTrue( f1_arg1, "BribeMenuTimer", "cycled" ) then
			UpdateSelfElementState( f1_arg0, f95_local0, f1_arg1 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( MyShopTimer ) --[[ @ 0]]
	self.MyShopTimer = MyShopTimer --[[ @ 0]]
	
	local ReservesBribeStackCarouselTall = CoD.ReservesBribeStackCarouselTall.new( f1_arg0, f1_arg1, 0.5, 0.5, 12, 252, 0.5, 0.5, -319, 191 ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( ReservesBribeStackCarouselTall, "childFocusGained", function ( element )
		SetControllerModelValue( f1_arg1, "itemShopSunsetFocus", "bribe" ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( ReservesBribeStackCarouselTall, "childFocusLost", function ( element )
		SetControllerModelValue( f1_arg1, "itemShopSunsetFocus", "none" ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( ReservesBribeStackCarouselTall ) --[[ @ 0]]
	self.ReservesBribeStackCarouselTall = ReservesBribeStackCarouselTall --[[ @ 0]]
	
	local MyShopLabel = LUI.UIText.new( 0.5, 0.5, 14, 252, 0.5, 0.5, -388, -370 ) --[[ @ 0]]
	MyShopLabel:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	MyShopLabel:setText( LocalizeToUpperString( @"hash_FCC6C603186E74" ) ) --[[ @ 0]]
	MyShopLabel:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	MyShopLabel:setLetterSpacing( 4 ) --[[ @ 0]]
	MyShopLabel:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	MyShopLabel:setAlignment( Enum[@"LUIAlignment"][@"hash_E821F0ECFF8D1C7"] ) --[[ @ 0]]
	self:addElement( MyShopLabel ) --[[ @ 0]]
	self.MyShopLabel = MyShopLabel --[[ @ 0]]
	
	local MyShopBracket = LUI.UIImage.new( 0.5, 0.5, 7, 257, 0.5, 0.5, -373, -365 ) --[[ @ 0]]
	MyShopBracket:setAlpha( 0.5 ) --[[ @ 0]]
	MyShopBracket:setImage( RegisterImage( @"hash_4C325BED3F226657" ) ) --[[ @ 0]]
	MyShopBracket:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_add" ) ) --[[ @ 0]]
	MyShopBracket:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	MyShopBracket:setupNineSliceShader( 16, 4 ) --[[ @ 0]]
	self:addElement( MyShopBracket ) --[[ @ 0]]
	self.MyShopBracket = MyShopBracket --[[ @ 0]]
	
	local SupplyChainDetails = CoD.ContractSupplyChainDetails.new( f1_arg0, f1_arg1, 0.5, 0.5, 310, 910, 0.5, 0.5, -619, 461 ) --[[ @ 0]]
	SupplyChainDetails:mergeStateConditions( {
		{
			stateName = "NoInfoPanel",
			condition = function ( menu, element, event )
				local f98_local0 --[[ @ 0]]
				if not IsMouseOrKeyboard( f1_arg1 ) then
					f98_local0 = AlwaysTrue() --[[ @ 0]]
				else
					f98_local0 = false --[[ @ 0]]
				end
				return f98_local0
			end
		}
	} ) --[[ @ 0]]
	SupplyChainDetails:linkToElementModel( SupplyChainDetails, "name", true, function ( model )
		f1_arg0:updateElementState( SupplyChainDetails, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "name"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	SupplyChainDetails:appendEventHandler( "input_source_changed", function ( f100_arg0, f100_arg1 )
		f100_arg1.menu = f100_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( SupplyChainDetails, f100_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local WeaponBribePreviewWidget = SupplyChainDetails --[[ @ 0]]
	local DiscountTiersWidget = SupplyChainDetails.subscribeToModel --[[ @ 0]]
	local f1_local22 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	DiscountTiersWidget( WeaponBribePreviewWidget, f1_local22.LastInput, function ( f101_arg0 )
		f1_arg0:updateElementState( SupplyChainDetails, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f101_arg0:get(),
			modelName = "LastInput"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	SupplyChainDetails:linkToElementModel( SupplyChainDetails, "character", true, function ( model )
		f1_arg0:updateElementState( SupplyChainDetails, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "character"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	SupplyChainDetails:linkToElementModel( SupplyChainDetails, "weaponRef", true, function ( model )
		f1_arg0:updateElementState( SupplyChainDetails, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "weaponRef"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( SupplyChainDetails ) --[[ @ 0]]
	self.SupplyChainDetails = SupplyChainDetails --[[ @ 0]]
	
	DiscountTiersWidget = CoD.DiscountTiersContainer.new( f1_arg0, f1_arg1, 0.5, 0.5, -960, 960, 0.5, 0.5, -540, 540 ) --[[ @ 0]]
	DiscountTiersWidget:registerEventHandler( "gain_list_focus", function ( element, event )
		local f104_local0 = nil --[[ @ 0]]
		SetElementState( self, self.SupplyChainDetails, f1_arg1, "Hidden" ) --[[ @ 0]]
		SetElementState( self, self.DiscountTiersWidget, f1_arg1, "DefaultState" ) --[[ @ 0]]
		return f104_local0
	end ) --[[ @ 0]]
	DiscountTiersWidget:registerEventHandler( "lose_list_focus", function ( element, event )
		local f105_local0 = nil --[[ @ 0]]
		UpdateElementState( self, "SupplyChainDetails", f1_arg1 ) --[[ @ 0]]
		UpdateElementState( self, "DiscountTiersWidget", f1_arg1 ) --[[ @ 0]]
		return f105_local0
	end ) --[[ @ 0]]
	DiscountTiersWidget:registerEventHandler( "list_item_gain_focus", function ( element, event )
		local f106_local0 = nil --[[ @ 0]]
		CoD.BlackMarketUtility.ChangeSupplyChainCameraBySelection( f1_arg0, f1_arg1, element ) --[[ @ 0]]
		return f106_local0
	end ) --[[ @ 0]]
	self:addElement( DiscountTiersWidget ) --[[ @ 0]]
	self.DiscountTiersWidget = DiscountTiersWidget --[[ @ 0]]
	
	WeaponBribePreviewWidget = CoD.ItemShopWeaponBribePreviewWidget.new( f1_arg0, f1_arg1, 0.5, 0.5, 393, 843, 0.5, 0.5, -330, 170 ) --[[ @ 0]]
	self:addElement( WeaponBribePreviewWidget ) --[[ @ 0]]
	self.WeaponBribePreviewWidget = WeaponBribePreviewWidget --[[ @ 0]]
	
	self.ReservesBribeStackCarouselTall:linkToElementModel( self, nil, false, function ( model )
		ReservesBribeStackCarouselTall:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:mergeStateConditions( {
		{
			stateName = "SlotFocus",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsModelValueEqualTo( f1_arg1, "itemShopSunsetFocus", "slot" )
			end
		},
		{
			stateName = "BribeFocus",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsModelValueEqualTo( f1_arg1, "itemShopSunsetFocus", "bribe" )
			end
		}
	} ) --[[ @ 0]]
	local f1_local23 = self --[[ @ 0]]
	f1_local22 = self.subscribeToModel --[[ @ 0]]
	local f1_local24 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local22( f1_local23, f1_local24.itemShopSunsetFocus, function ( f110_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f110_arg0:get(),
			modelName = "itemShopSunsetFocus"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:subscribeToGlobalModel( f1_arg1, "GlobalModel", "RefreshDWInventoryMenu", function ( model )
		local f111_local0 = self --[[ @ 0]]
		if not CoD.BlackMarketUtility.IsMenuOccluded( f1_arg0 ) then
			UpdateDataSource( self, self.DeterministicItemSlot1, f1_arg1 ) --[[ @ 0]]
			UpdateDataSource( self, self.RNGItemSlot, f1_arg1 ) --[[ @ 0]]
			UpdateDataSource( self, self.DeterministicItemSlot2, f1_arg1 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	if CoD.isPC then
		TransactionDeepLinkButton.id = "TransactionDeepLinkButton" --[[ @ 0]]
	end
	RNGItemSlot.id = "RNGItemSlot" --[[ @ 0]]
	DeterministicItemSlot2.id = "DeterministicItemSlot2" --[[ @ 0]]
	DeterministicItemSlot1.id = "DeterministicItemSlot1" --[[ @ 0]]
	ReservesBribeStackCarouselTall.id = "ReservesBribeStackCarouselTall" --[[ @ 0]]
	if CoD.isPC then
		SupplyChainDetails.id = "SupplyChainDetails" --[[ @ 0]]
	end
	DiscountTiersWidget.id = "DiscountTiersWidget" --[[ @ 0]]
	self.__defaultFocus = DeterministicItemSlot1 --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	f1_local22 = self --[[ @ 0]]
	SendClientScriptMenuChangeNotifyWithState( f1_arg1, f1_arg0, true, "character" ) --[[ @ 0]]
	SetMenuProperty( f1_arg0, "__hideSupplyChainDetailsButtons", true ) --[[ @ 0]]
	CoD.BlackMarketUtility.ForceStreamStoreImagesSunset( f1_arg1, f1_arg0 ) --[[ @ 0]]
	CoD.BlackMarketUtility.TriggerGreetingVO( self, f1_arg1 ) --[[ @ 0]]
	CoD.BlackMarketUtility.SetupBlackJackFrameContextualMenus( self, f1_arg1 ) --[[ @ 0]]
	f1_local22 = TransactionDeepLinkButton --[[ @ 0]]
	if IsPC() and not CoD.PCKoreaUtility.ShowTransactionHistoryButton() then
		ReplaceElementWithFake( self, "TransactionDeepLinkButton" ) --[[ @ 0]]
	end
	f1_local22 = RNGItemSlot --[[ @ 0]]
	CoD.BaseUtility.DisableNavigation( f1_local22 ) --[[ @ 0]]
	CoD.BlackMarketUtility.InitialHideScrollPrompts( self, f1_arg1, f1_local22 ) --[[ @ 0]]
	CoD.GridAndListUtility.DisableAutoScrolling( f1_arg1, self.DeterministicItemSlot2 ) --[[ @ 0]]
	f1_local22 = DeterministicItemSlot2 --[[ @ 0]]
	CoD.BaseUtility.DisableNavigation( f1_local22 ) --[[ @ 0]]
	CoD.BlackMarketUtility.InitialHideScrollPrompts( self, f1_arg1, f1_local22 ) --[[ @ 0]]
	CoD.GridAndListUtility.DisableAutoScrolling( f1_arg1, self.DeterministicItemSlot2 ) --[[ @ 0]]
	f1_local22 = DeterministicItemSlot1 --[[ @ 0]]
	CoD.BaseUtility.DisableNavigation( f1_local22 ) --[[ @ 0]]
	CoD.BlackMarketUtility.InitialHideScrollPrompts( self, f1_arg1, f1_local22 ) --[[ @ 0]]
	CoD.GridAndListUtility.DisableAutoScrolling( f1_arg1, self.DeterministicItemSlot2 ) --[[ @ 0]]
	return self
end
 --[[ @ 0]]
CoD.BlackJacksShopFrameSunset.__resetProperties = function ( f112_arg0 )
	f112_arg0.WeaponBribePreviewWidget:completeAnimation() --[[ @ 0]]
	f112_arg0.SupplyChainDetails:completeAnimation() --[[ @ 0]]
	f112_arg0.WeaponBribePreviewWidget:setAlpha( 1 ) --[[ @ 0]]
	f112_arg0.SupplyChainDetails:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.BlackJacksShopFrameSunset.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f113_arg0, f113_arg1 )
			f113_arg0:__resetProperties() --[[ @ 0]]
			f113_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f113_arg0.SupplyChainDetails:completeAnimation() --[[ @ 0]]
			f113_arg0.SupplyChainDetails:setAlpha( 0 ) --[[ @ 0]]
			f113_arg0.clipFinished( f113_arg0.SupplyChainDetails ) --[[ @ 0]]
			f113_arg0.WeaponBribePreviewWidget:completeAnimation() --[[ @ 0]]
			f113_arg0.WeaponBribePreviewWidget:setAlpha( 0 ) --[[ @ 0]]
			f113_arg0.clipFinished( f113_arg0.WeaponBribePreviewWidget ) --[[ @ 0]]
		end
	},
	SlotFocus = {
		DefaultClip = function ( f114_arg0, f114_arg1 )
			f114_arg0:__resetProperties() --[[ @ 0]]
			f114_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f114_arg0.WeaponBribePreviewWidget:completeAnimation() --[[ @ 0]]
			f114_arg0.WeaponBribePreviewWidget:setAlpha( 0 ) --[[ @ 0]]
			f114_arg0.clipFinished( f114_arg0.WeaponBribePreviewWidget ) --[[ @ 0]]
		end
	},
	BribeFocus = {
		DefaultClip = function ( f115_arg0, f115_arg1 )
			f115_arg0:__resetProperties() --[[ @ 0]]
			f115_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f115_arg0.SupplyChainDetails:completeAnimation() --[[ @ 0]]
			f115_arg0.SupplyChainDetails:setAlpha( 0 ) --[[ @ 0]]
			f115_arg0.clipFinished( f115_arg0.SupplyChainDetails ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.BlackJacksShopFrameSunset.__onClose = function ( f116_arg0 )
	f116_arg0.TransactionDeepLinkButton:close() --[[ @ 0]]
	f116_arg0.RNGItemSlot:close() --[[ @ 0]]
	f116_arg0.DeterministicItemSlot2:close() --[[ @ 0]]
	f116_arg0.DeterministicItemSlot1:close() --[[ @ 0]]
	f116_arg0.RNGItemSlotTimer:close() --[[ @ 0]]
	f116_arg0.DeterministicItemSlot2Timer:close() --[[ @ 0]]
	f116_arg0.DeterministicItemSlot1Timer:close() --[[ @ 0]]
	f116_arg0.MyShopTimer:close() --[[ @ 0]]
	f116_arg0.ReservesBribeStackCarouselTall:close() --[[ @ 0]]
	f116_arg0.SupplyChainDetails:close() --[[ @ 0]]
	f116_arg0.DiscountTiersWidget:close() --[[ @ 0]]
	f116_arg0.WeaponBribePreviewWidget:close() --[[ @ 0]]
end
 --[[ @ 0]]
