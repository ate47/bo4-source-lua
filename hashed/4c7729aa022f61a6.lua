-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
CoD.WarzoneQuickInventoryVignette = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.WarzoneQuickInventoryVignette.__defaultWidth = 1920 --[[ @ 0]]
CoD.WarzoneQuickInventoryVignette.__defaultHeight = 128 --[[ @ 0]]
CoD.WarzoneQuickInventoryVignette.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.WarzoneQuickInventoryVignette ) --[[ @ 0]]
	self.id = "WarzoneQuickInventoryVignette" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local GridTiled = LUI.UIImage.new( 0.2, 0.2, -979.5, 2272.5, 0.19, 0.19, -32, 34 ) --[[ @ 0]]
	GridTiled:setAlpha( 0 ) --[[ @ 0]]
	GridTiled:setScale( 0.7, 0.7 ) --[[ @ 0]]
	GridTiled:setImage( RegisterImage( @"uie_ui_hud_wz_hud_core_qe_grid" ) ) --[[ @ 0]]
	GridTiled:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_16CBE95C250C6D15" ) ) --[[ @ 0]]
	GridTiled:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	GridTiled:setupNineSliceShader( 64, 64 ) --[[ @ 0]]
	self:addElement( GridTiled ) --[[ @ 0]]
	self.GridTiled = GridTiled --[[ @ 0]]
	
	local Image = LUI.UIImage.new( 0, 0, -107, 2027, 0, 0, -269, 479 ) --[[ @ 0]]
	Image:setRGB( 0, 0, 0 ) --[[ @ 0]]
	Image:setAlpha( 0.9 ) --[[ @ 0]]
	Image:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_feather_edges" ) ) --[[ @ 0]]
	Image:setShaderVector( 0, 0.2, 0.5, 0.2, 0.01 ) --[[ @ 0]]
	self:addElement( Image ) --[[ @ 0]]
	self.Image = Image --[[ @ 0]]
	
	local GridBaked = LUI.UIImage.new( 0, 0, 480, 1440, 0, 0, 46, 150 ) --[[ @ 0]]
	GridBaked:setAlpha( 0.1 ) --[[ @ 0]]
	GridBaked:setScale( 2, 2 ) --[[ @ 0]]
	GridBaked:setImage( RegisterImage( @"uie_ui_hud_wz_hud_core_qe_grid_baked" ) ) --[[ @ 0]]
	GridBaked:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_wipe_delta_normal" ) ) --[[ @ 0]]
	GridBaked:setShaderVector( 0, 0.03, 0.97, 0, 0 ) --[[ @ 0]]
	GridBaked:setShaderVector( 1, 0.05, 0.07, 0, 0 ) --[[ @ 0]]
	GridBaked:setShaderVector( 2, 0, 0.7, 0, 0 ) --[[ @ 0]]
	GridBaked:setShaderVector( 3, 0, 0.26, 0, 0 ) --[[ @ 0]]
	GridBaked:setShaderVector( 4, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( GridBaked ) --[[ @ 0]]
	self.GridBaked = GridBaked --[[ @ 0]]
	
	local GridBakedEMP = LUI.UIImage.new( 0, 0, 480, 1440, 0, 0, 46, 150 ) --[[ @ 0]]
	GridBakedEMP:setAlpha( 0 ) --[[ @ 0]]
	GridBakedEMP:setScale( 2, 2 ) --[[ @ 0]]
	GridBakedEMP:setImage( RegisterImage( @"uie_ui_hud_wz_hud_core_qe_grid_baked" ) ) --[[ @ 0]]
	GridBakedEMP:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_emp" ) ) --[[ @ 0]]
	GridBakedEMP:setShaderVector( 0, 35.93, 0, 0, 0 ) --[[ @ 0]]
	GridBakedEMP:setShaderVector( 1, 0.83, 0, 0, 0 ) --[[ @ 0]]
	GridBakedEMP:setShaderVector( 2, 0.49, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( GridBakedEMP ) --[[ @ 0]]
	self.GridBakedEMP = GridBakedEMP --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return not CoD.WZUtility.IsQuickInventoryOpen( f1_arg1 )
			end
		},
		{
			stateName = "HealthAndEquipmentEMP",
			condition = function ( menu, element, event )
				local f3_local0 = CoD.ModelUtility.IsGlobalDataSourceModelValueGreaterThan( f1_arg1, "WarzoneInventory", "availableHealthCount", 0 ) --[[ @ 0]]
				if f3_local0 then
					f3_local0 = CoD.ModelUtility.IsGlobalDataSourceModelValueGreaterThan( f1_arg1, "WarzoneInventory", "availableEquipmentCount", 0 ) --[[ @ 0]]
					if f3_local0 then
						if not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_4B8E9B69F4B87954"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_5D3ABF9A2753CE40"] ) and Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_59333FC97F7870"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_669C28E2FCA82769"] ) and Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_7ADC477DDE486DD7"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_523CD9BAB9B9F4C8"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_68A5E996D4528DA2"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_47B52A87BC9AA4C7"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_1999FA50941A83B"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) then
							f3_local0 = not CoD.CodCasterUtility.CodCasterEnabledAndProfileVarEqualTo( f1_arg1, "shoutcaster_ds_inventory", false ) --[[ @ 0]]
						else
							f3_local0 = false --[[ @ 0]]
						end
					end
				end
				return f3_local0
			end
		},
		{
			stateName = "HealthAndEquipment",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalDataSourceModelValueGreaterThan( f1_arg1, "WarzoneInventory", "availableHealthCount", 0 ) and CoD.ModelUtility.IsGlobalDataSourceModelValueGreaterThan( f1_arg1, "WarzoneInventory", "availableEquipmentCount", 0 )
			end
		},
		{
			stateName = "HealthEMP",
			condition = function ( menu, element, event )
				local f5_local0 = CoD.ModelUtility.IsGlobalDataSourceModelValueGreaterThan( f1_arg1, "WarzoneInventory", "availableHealthCount", 0 ) --[[ @ 0]]
				if f5_local0 then
					if not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_4B8E9B69F4B87954"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_5D3ABF9A2753CE40"] ) and Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_59333FC97F7870"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_669C28E2FCA82769"] ) and Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_7ADC477DDE486DD7"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_523CD9BAB9B9F4C8"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_68A5E996D4528DA2"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_47B52A87BC9AA4C7"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_1999FA50941A83B"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) then
						f5_local0 = not CoD.CodCasterUtility.CodCasterEnabledAndProfileVarEqualTo( f1_arg1, "shoutcaster_ds_inventory", false ) --[[ @ 0]]
					else
						f5_local0 = false --[[ @ 0]]
					end
				end
				return f5_local0
			end
		},
		{
			stateName = "Health",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalDataSourceModelValueGreaterThan( f1_arg1, "WarzoneInventory", "availableHealthCount", 0 )
			end
		},
		{
			stateName = "EquipmentEMP",
			condition = function ( menu, element, event )
				local f7_local0 = CoD.ModelUtility.IsGlobalDataSourceModelValueGreaterThan( f1_arg1, "WarzoneInventory", "availableEquipmentCount", 0 ) --[[ @ 0]]
				if f7_local0 then
					if not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_4B8E9B69F4B87954"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_5D3ABF9A2753CE40"] ) and Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_59333FC97F7870"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_669C28E2FCA82769"] ) and Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_7ADC477DDE486DD7"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_523CD9BAB9B9F4C8"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_68A5E996D4528DA2"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_47B52A87BC9AA4C7"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_1999FA50941A83B"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) then
						f7_local0 = not CoD.CodCasterUtility.CodCasterEnabledAndProfileVarEqualTo( f1_arg1, "shoutcaster_ds_inventory", false ) --[[ @ 0]]
					else
						f7_local0 = false --[[ @ 0]]
					end
				end
				return f7_local0
			end
		},
		{
			stateName = "Equipment",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalDataSourceModelValueGreaterThan( f1_arg1, "WarzoneInventory", "availableEquipmentCount", 0 )
			end
		}
	} ) --[[ @ 0]]
	local f1_local5 = self --[[ @ 0]]
	local f1_local6 = self.subscribeToModel --[[ @ 0]]
	local f1_local7 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local6( f1_local5, f1_local7["hudItems.inventory.open"], function ( f9_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f9_arg0:get(),
			modelName = "hudItems.inventory.open"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local5 = self --[[ @ 0]]
	f1_local6 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = DataSources.WarzoneInventory.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local6( f1_local5, f1_local7.availableHealthCount, function ( f10_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f10_arg0:get(),
			modelName = "availableHealthCount"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local5 = self --[[ @ 0]]
	f1_local6 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = DataSources.WarzoneInventory.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local6( f1_local5, f1_local7.availableEquipmentCount, function ( f11_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f11_arg0:get(),
			modelName = "availableEquipmentCount"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local5 = self --[[ @ 0]]
	f1_local6 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local6( f1_local5, f1_local7["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_4B8E9B69F4B87954"]], function ( f12_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f12_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_4B8E9B69F4B87954"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local5 = self --[[ @ 0]]
	f1_local6 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local6( f1_local5, f1_local7["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5D3ABF9A2753CE40"]], function ( f13_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f13_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5D3ABF9A2753CE40"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local5 = self --[[ @ 0]]
	f1_local6 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local6( f1_local5, f1_local7["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_59333FC97F7870"]], function ( f14_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f14_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_59333FC97F7870"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local5 = self --[[ @ 0]]
	f1_local6 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local6( f1_local5, f1_local7["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"]], function ( f15_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f15_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local5 = self --[[ @ 0]]
	f1_local6 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local6( f1_local5, f1_local7["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_669C28E2FCA82769"]], function ( f16_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f16_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_669C28E2FCA82769"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local5 = self --[[ @ 0]]
	f1_local6 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local6( f1_local5, f1_local7["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_7ADC477DDE486DD7"]], function ( f17_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f17_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_7ADC477DDE486DD7"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local5 = self --[[ @ 0]]
	f1_local6 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local6( f1_local5, f1_local7["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_523CD9BAB9B9F4C8"]], function ( f18_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f18_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_523CD9BAB9B9F4C8"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local5 = self --[[ @ 0]]
	f1_local6 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local6( f1_local5, f1_local7["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_68A5E996D4528DA2"]], function ( f19_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f19_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_68A5E996D4528DA2"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local5 = self --[[ @ 0]]
	f1_local6 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local6( f1_local5, f1_local7["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_47B52A87BC9AA4C7"]], function ( f20_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f20_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_47B52A87BC9AA4C7"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local5 = self --[[ @ 0]]
	f1_local6 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local6( f1_local5, f1_local7["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"]], function ( f21_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f21_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local5 = self --[[ @ 0]]
	f1_local6 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local6( f1_local5, f1_local7["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_1999FA50941A83B"]], function ( f22_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f22_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_1999FA50941A83B"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local5 = self --[[ @ 0]]
	f1_local6 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local6( f1_local5, f1_local7["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"]], function ( f23_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f23_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.WarzoneQuickInventoryVignette.__resetProperties = function ( f24_arg0 )
	f24_arg0.Image:completeAnimation() --[[ @ 0]]
	f24_arg0.GridTiled:completeAnimation() --[[ @ 0]]
	f24_arg0.GridBaked:completeAnimation() --[[ @ 0]]
	f24_arg0.GridBakedEMP:completeAnimation() --[[ @ 0]]
	f24_arg0.Image:setAlpha( 0.9 ) --[[ @ 0]]
	f24_arg0.GridTiled:setAlpha( 0 ) --[[ @ 0]]
	f24_arg0.GridBaked:setAlpha( 0.1 ) --[[ @ 0]]
	f24_arg0.GridBaked:setShaderVector( 0, 0.03, 0.97, 0, 0 ) --[[ @ 0]]
	f24_arg0.GridBaked:setShaderVector( 1, 0.05, 0.07, 0, 0 ) --[[ @ 0]]
	f24_arg0.GridBaked:setShaderVector( 2, 0, 0.7, 0, 0 ) --[[ @ 0]]
	f24_arg0.GridBaked:setShaderVector( 3, 0, 0.26, 0, 0 ) --[[ @ 0]]
	f24_arg0.GridBaked:setShaderVector( 4, 0, 0, 0, 0 ) --[[ @ 0]]
	f24_arg0.GridBakedEMP:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.WarzoneQuickInventoryVignette.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f25_arg0, f25_arg1 )
			f25_arg0:__resetProperties() --[[ @ 0]]
			f25_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	Hidden = {
		DefaultClip = function ( f26_arg0, f26_arg1 )
			f26_arg0:__resetProperties() --[[ @ 0]]
			f26_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f26_arg0.GridTiled:completeAnimation() --[[ @ 0]]
			f26_arg0.GridTiled:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.GridTiled ) --[[ @ 0]]
			f26_arg0.Image:completeAnimation() --[[ @ 0]]
			f26_arg0.Image:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.Image ) --[[ @ 0]]
			f26_arg0.GridBaked:completeAnimation() --[[ @ 0]]
			f26_arg0.GridBaked:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.GridBaked ) --[[ @ 0]]
		end
	},
	HealthAndEquipmentEMP = {
		DefaultClip = function ( f27_arg0, f27_arg1 )
			f27_arg0:__resetProperties() --[[ @ 0]]
			f27_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			local f27_local0 = function ( f28_arg0 )
				f27_arg0.Image:beginAnimation( 140 ) --[[ @ 0]]
				f27_arg0.Image:setAlpha( 0.9 ) --[[ @ 0]]
				f27_arg0.Image:registerEventHandler( "interrupted_keyframe", f27_arg0.clipInterrupted ) --[[ @ 0]]
				f27_arg0.Image:registerEventHandler( "transition_complete_keyframe", f27_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f27_arg0.Image:completeAnimation() --[[ @ 0]]
			f27_arg0.Image:setAlpha( 0 ) --[[ @ 0]]
			f27_local0( f27_arg0.Image ) --[[ @ 0]]
			local f27_local1 = function ( f29_arg0 )
				f27_arg0.GridBaked:beginAnimation( 210, Enum[@"hash_1F50FFF429AB1890"][@"hash_15193EA7825DC097"] ) --[[ @ 0]]
				f27_arg0.GridBaked:setShaderVector( 0, 0.03, 0.97, 0, 0 ) --[[ @ 0]]
				f27_arg0.GridBaked:registerEventHandler( "interrupted_keyframe", f27_arg0.clipInterrupted ) --[[ @ 0]]
				f27_arg0.GridBaked:registerEventHandler( "transition_complete_keyframe", f27_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f27_arg0.GridBaked:completeAnimation() --[[ @ 0]]
			f27_arg0.GridBaked:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.GridBaked:setShaderVector( 0, 0.5, 0.5, 0, 0 ) --[[ @ 0]]
			f27_arg0.GridBaked:setShaderVector( 1, 0.05, 0.07, 0, 0 ) --[[ @ 0]]
			f27_arg0.GridBaked:setShaderVector( 2, 0, 0.7, 0, 0 ) --[[ @ 0]]
			f27_arg0.GridBaked:setShaderVector( 3, 0, 0, 0, 0 ) --[[ @ 0]]
			f27_arg0.GridBaked:setShaderVector( 4, 0, 0, 0, 0 ) --[[ @ 0]]
			f27_local1( f27_arg0.GridBaked ) --[[ @ 0]]
			f27_arg0.GridBakedEMP:completeAnimation() --[[ @ 0]]
			f27_arg0.GridBakedEMP:setAlpha( 0.22 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.GridBakedEMP ) --[[ @ 0]]
		end
	},
	HealthAndEquipment = {
		DefaultClip = function ( f30_arg0, f30_arg1 )
			f30_arg0:__resetProperties() --[[ @ 0]]
			f30_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			local f30_local0 = function ( f31_arg0 )
				f30_arg0.Image:beginAnimation( 140 ) --[[ @ 0]]
				f30_arg0.Image:setAlpha( 0.9 ) --[[ @ 0]]
				f30_arg0.Image:registerEventHandler( "interrupted_keyframe", f30_arg0.clipInterrupted ) --[[ @ 0]]
				f30_arg0.Image:registerEventHandler( "transition_complete_keyframe", f30_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f30_arg0.Image:completeAnimation() --[[ @ 0]]
			f30_arg0.Image:setAlpha( 0 ) --[[ @ 0]]
			f30_local0( f30_arg0.Image ) --[[ @ 0]]
			local f30_local1 = function ( f32_arg0 )
				f30_arg0.GridBaked:beginAnimation( 210, Enum[@"hash_1F50FFF429AB1890"][@"hash_15193EA7825DC097"] ) --[[ @ 0]]
				f30_arg0.GridBaked:setShaderVector( 0, 0.03, 0.97, 0, 0 ) --[[ @ 0]]
				f30_arg0.GridBaked:registerEventHandler( "interrupted_keyframe", f30_arg0.clipInterrupted ) --[[ @ 0]]
				f30_arg0.GridBaked:registerEventHandler( "transition_complete_keyframe", f30_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f30_arg0.GridBaked:completeAnimation() --[[ @ 0]]
			f30_arg0.GridBaked:setShaderVector( 0, 0.5, 0.5, 0, 0 ) --[[ @ 0]]
			f30_arg0.GridBaked:setShaderVector( 1, 0.05, 0.07, 0, 0 ) --[[ @ 0]]
			f30_arg0.GridBaked:setShaderVector( 2, 0, 0.7, 0, 0 ) --[[ @ 0]]
			f30_arg0.GridBaked:setShaderVector( 3, 0, 0, 0, 0 ) --[[ @ 0]]
			f30_arg0.GridBaked:setShaderVector( 4, 0, 0, 0, 0 ) --[[ @ 0]]
			f30_local1( f30_arg0.GridBaked ) --[[ @ 0]]
		end
	},
	HealthEMP = {
		DefaultClip = function ( f33_arg0, f33_arg1 )
			f33_arg0:__resetProperties() --[[ @ 0]]
			f33_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			local f33_local0 = function ( f34_arg0 )
				f33_arg0.Image:beginAnimation( 140 ) --[[ @ 0]]
				f33_arg0.Image:setAlpha( 0.9 ) --[[ @ 0]]
				f33_arg0.Image:registerEventHandler( "interrupted_keyframe", f33_arg0.clipInterrupted ) --[[ @ 0]]
				f33_arg0.Image:registerEventHandler( "transition_complete_keyframe", f33_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f33_arg0.Image:completeAnimation() --[[ @ 0]]
			f33_arg0.Image:setAlpha( 0 ) --[[ @ 0]]
			f33_local0( f33_arg0.Image ) --[[ @ 0]]
			local f33_local1 = function ( f35_arg0 )
				f33_arg0.GridBaked:beginAnimation( 200 ) --[[ @ 0]]
				f33_arg0.GridBaked:setShaderVector( 0, 0.03, 0.97, 0, 0 ) --[[ @ 0]]
				f33_arg0.GridBaked:registerEventHandler( "interrupted_keyframe", f33_arg0.clipInterrupted ) --[[ @ 0]]
				f33_arg0.GridBaked:registerEventHandler( "transition_complete_keyframe", f33_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f33_arg0.GridBaked:completeAnimation() --[[ @ 0]]
			f33_arg0.GridBaked:setAlpha( 0 ) --[[ @ 0]]
			f33_arg0.GridBaked:setShaderVector( 0, 0.5, 0.5, 0, 0 ) --[[ @ 0]]
			f33_arg0.GridBaked:setShaderVector( 1, 0.05, 0.07, 0, 0 ) --[[ @ 0]]
			f33_arg0.GridBaked:setShaderVector( 2, 0, 0.7, 0, 0 ) --[[ @ 0]]
			f33_arg0.GridBaked:setShaderVector( 3, 0, 0.26, 0, 0 ) --[[ @ 0]]
			f33_arg0.GridBaked:setShaderVector( 4, 0, 0, 0, 0 ) --[[ @ 0]]
			f33_local1( f33_arg0.GridBaked ) --[[ @ 0]]
			f33_arg0.GridBakedEMP:completeAnimation() --[[ @ 0]]
			f33_arg0.GridBakedEMP:setAlpha( 0.22 ) --[[ @ 0]]
			f33_arg0.clipFinished( f33_arg0.GridBakedEMP ) --[[ @ 0]]
		end
	},
	Health = {
		DefaultClip = function ( f36_arg0, f36_arg1 )
			f36_arg0:__resetProperties() --[[ @ 0]]
			f36_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			local f36_local0 = function ( f37_arg0 )
				f36_arg0.Image:beginAnimation( 140 ) --[[ @ 0]]
				f36_arg0.Image:setAlpha( 0.9 ) --[[ @ 0]]
				f36_arg0.Image:registerEventHandler( "interrupted_keyframe", f36_arg0.clipInterrupted ) --[[ @ 0]]
				f36_arg0.Image:registerEventHandler( "transition_complete_keyframe", f36_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f36_arg0.Image:completeAnimation() --[[ @ 0]]
			f36_arg0.Image:setAlpha( 0 ) --[[ @ 0]]
			f36_local0( f36_arg0.Image ) --[[ @ 0]]
			local f36_local1 = function ( f38_arg0 )
				f36_arg0.GridBaked:beginAnimation( 200 ) --[[ @ 0]]
				f36_arg0.GridBaked:setShaderVector( 0, 0.03, 0.97, 0, 0 ) --[[ @ 0]]
				f36_arg0.GridBaked:registerEventHandler( "interrupted_keyframe", f36_arg0.clipInterrupted ) --[[ @ 0]]
				f36_arg0.GridBaked:registerEventHandler( "transition_complete_keyframe", f36_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f36_arg0.GridBaked:completeAnimation() --[[ @ 0]]
			f36_arg0.GridBaked:setShaderVector( 0, 0.5, 0.5, 0, 0 ) --[[ @ 0]]
			f36_arg0.GridBaked:setShaderVector( 1, 0.05, 0.07, 0, 0 ) --[[ @ 0]]
			f36_arg0.GridBaked:setShaderVector( 2, 0, 0.7, 0, 0 ) --[[ @ 0]]
			f36_arg0.GridBaked:setShaderVector( 3, 0, 0.26, 0, 0 ) --[[ @ 0]]
			f36_arg0.GridBaked:setShaderVector( 4, 0, 0, 0, 0 ) --[[ @ 0]]
			f36_local1( f36_arg0.GridBaked ) --[[ @ 0]]
		end
	},
	EquipmentEMP = {
		DefaultClip = function ( f39_arg0, f39_arg1 )
			f39_arg0:__resetProperties() --[[ @ 0]]
			f39_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			local f39_local0 = function ( f40_arg0 )
				f39_arg0.Image:beginAnimation( 140 ) --[[ @ 0]]
				f39_arg0.Image:setAlpha( 0.9 ) --[[ @ 0]]
				f39_arg0.Image:registerEventHandler( "interrupted_keyframe", f39_arg0.clipInterrupted ) --[[ @ 0]]
				f39_arg0.Image:registerEventHandler( "transition_complete_keyframe", f39_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f39_arg0.Image:completeAnimation() --[[ @ 0]]
			f39_arg0.Image:setAlpha( 0 ) --[[ @ 0]]
			f39_local0( f39_arg0.Image ) --[[ @ 0]]
			local f39_local1 = function ( f41_arg0 )
				f39_arg0.GridBaked:beginAnimation( 200 ) --[[ @ 0]]
				f39_arg0.GridBaked:setShaderVector( 0, 0.03, 0.97, 0, 0 ) --[[ @ 0]]
				f39_arg0.GridBaked:registerEventHandler( "interrupted_keyframe", f39_arg0.clipInterrupted ) --[[ @ 0]]
				f39_arg0.GridBaked:registerEventHandler( "transition_complete_keyframe", f39_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f39_arg0.GridBaked:completeAnimation() --[[ @ 0]]
			f39_arg0.GridBaked:setAlpha( 0 ) --[[ @ 0]]
			f39_arg0.GridBaked:setShaderVector( 0, 0.5, 0.5, 0, 0 ) --[[ @ 0]]
			f39_arg0.GridBaked:setShaderVector( 1, 0.05, 0.07, 0, 0 ) --[[ @ 0]]
			f39_arg0.GridBaked:setShaderVector( 2, 0, 0.7, 0, 0 ) --[[ @ 0]]
			f39_arg0.GridBaked:setShaderVector( 3, 0, 0.26, 0, 0 ) --[[ @ 0]]
			f39_arg0.GridBaked:setShaderVector( 4, 0, 0, 0, 0 ) --[[ @ 0]]
			f39_local1( f39_arg0.GridBaked ) --[[ @ 0]]
			f39_arg0.GridBakedEMP:completeAnimation() --[[ @ 0]]
			f39_arg0.GridBakedEMP:setAlpha( 0.22 ) --[[ @ 0]]
			f39_arg0.clipFinished( f39_arg0.GridBakedEMP ) --[[ @ 0]]
		end
	},
	Equipment = {
		DefaultClip = function ( f42_arg0, f42_arg1 )
			f42_arg0:__resetProperties() --[[ @ 0]]
			f42_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			local f42_local0 = function ( f43_arg0 )
				f42_arg0.Image:beginAnimation( 140 ) --[[ @ 0]]
				f42_arg0.Image:setAlpha( 0.9 ) --[[ @ 0]]
				f42_arg0.Image:registerEventHandler( "interrupted_keyframe", f42_arg0.clipInterrupted ) --[[ @ 0]]
				f42_arg0.Image:registerEventHandler( "transition_complete_keyframe", f42_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f42_arg0.Image:completeAnimation() --[[ @ 0]]
			f42_arg0.Image:setAlpha( 0 ) --[[ @ 0]]
			f42_local0( f42_arg0.Image ) --[[ @ 0]]
			local f42_local1 = function ( f44_arg0 )
				f42_arg0.GridBaked:beginAnimation( 200 ) --[[ @ 0]]
				f42_arg0.GridBaked:setShaderVector( 0, 0.03, 0.97, 0, 0 ) --[[ @ 0]]
				f42_arg0.GridBaked:registerEventHandler( "interrupted_keyframe", f42_arg0.clipInterrupted ) --[[ @ 0]]
				f42_arg0.GridBaked:registerEventHandler( "transition_complete_keyframe", f42_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f42_arg0.GridBaked:completeAnimation() --[[ @ 0]]
			f42_arg0.GridBaked:setShaderVector( 0, 0.5, 0.5, 0, 0 ) --[[ @ 0]]
			f42_arg0.GridBaked:setShaderVector( 1, 0.05, 0.07, 0, 0 ) --[[ @ 0]]
			f42_arg0.GridBaked:setShaderVector( 2, 0, 0.7, 0, 0 ) --[[ @ 0]]
			f42_arg0.GridBaked:setShaderVector( 3, 0, 0.26, 0, 0 ) --[[ @ 0]]
			f42_arg0.GridBaked:setShaderVector( 4, 0, 0, 0, 0 ) --[[ @ 0]]
			f42_local1( f42_arg0.GridBaked ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
