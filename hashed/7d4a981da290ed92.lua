-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:51
require( "ui/uieditor/widgets/hud/zm_roundwidget/zmrndcontainer" ) --[[ @ 0]]
require( "x64:55677da2fba4b1c9" ) --[[ @ 0]]

CoD.ZM_Trials_Title_Splash = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.ZM_Trials_Title_Splash.__defaultWidth = 1920 --[[ @ 0]]
CoD.ZM_Trials_Title_Splash.__defaultHeight = 230 --[[ @ 0]]
CoD.ZM_Trials_Title_Splash.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.ZM_Trials_Title_Splash ) --[[ @ 0]]
	self.id = "ZM_Trials_Title_Splash" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local DescriptionDivider = LUI.UIImage.new( 0, 0, 672, 1248, 0, 0, 181, 183 ) --[[ @ 0]]
	DescriptionDivider:setRGB( 0.96, 0.67, 0 ) --[[ @ 0]]
	self:addElement( DescriptionDivider ) --[[ @ 0]]
	self.DescriptionDivider = DescriptionDivider --[[ @ 0]]
	
	local RoundDescriptionText = LUI.UIText.new( 0, 0, 0, 1920, 0, 0, 195, 228 ) --[[ @ 0]]
	RoundDescriptionText:setTTF( "dinnext_regular" ) --[[ @ 0]]
	RoundDescriptionText:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	RoundDescriptionText:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	RoundDescriptionText:subscribeToGlobalModel( f1_arg1, "ZMHudGlobal", "trials.roundDescription", function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			RoundDescriptionText:setText( Engine[@"hash_4F9F1239CFD921FE"]( f2_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( RoundDescriptionText ) --[[ @ 0]]
	self.RoundDescriptionText = RoundDescriptionText --[[ @ 0]]
	
	local RoundTitleText = LUI.UIText.new( 0, 0, 0, 1920, 0, 0, 112, 179 ) --[[ @ 0]]
	RoundTitleText:setRGB( 0.96, 0.67, 0 ) --[[ @ 0]]
	RoundTitleText:setTTF( "skorzhen" ) --[[ @ 0]]
	RoundTitleText:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_90D57B1E92D39D7" ) ) --[[ @ 0]]
	RoundTitleText:setShaderVector( 0, 0.02, 0, 0, 0 ) --[[ @ 0]]
	RoundTitleText:setShaderVector( 1, 0.04, 0, 0, 0 ) --[[ @ 0]]
	RoundTitleText:setShaderVector( 2, 0, 0, 0, 1 ) --[[ @ 0]]
	RoundTitleText:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	RoundTitleText:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	RoundTitleText:subscribeToGlobalModel( f1_arg1, "ZMHudGlobal", "trials.roundTitle", function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			RoundTitleText:setText( Engine[@"hash_4F9F1239CFD921FE"]( f3_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( RoundTitleText ) --[[ @ 0]]
	self.RoundTitleText = RoundTitleText --[[ @ 0]]
	
	local ZmRndContainer = CoD.ZmRndContainer.new( f1_arg0, f1_arg1, 0, 0, 820.5, 1156.5, 0, 0, -85.5, 141.5 ) --[[ @ 0]]
	ZmRndContainer:mergeStateConditions( {
		{
			stateName = "TrialsShow",
			condition = function ( menu, element, event )
				return CoD.HUDUtility.IsAnyGameType( f1_arg1, "ztrials" )
			end
		}
	} ) --[[ @ 0]]
	local f1_local5 = ZmRndContainer --[[ @ 0]]
	local ZMTitleFog = ZmRndContainer.subscribeToModel --[[ @ 0]]
	local f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	ZMTitleFog( f1_local5, f1_local7["hudItems.playerSpawned"], function ( f5_arg0 )
		f1_arg0:updateElementState( ZmRndContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f5_arg0:get(),
			modelName = "hudItems.playerSpawned"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local5 = ZmRndContainer --[[ @ 0]]
	ZMTitleFog = ZmRndContainer.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	ZMTitleFog( f1_local5, f1_local7["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_demo_all_game_hud_hidden"]], function ( f6_arg0 )
		f1_arg0:updateElementState( ZmRndContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f6_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_demo_all_game_hud_hidden"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local5 = ZmRndContainer --[[ @ 0]]
	ZMTitleFog = ZmRndContainer.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	ZMTitleFog( f1_local5, f1_local7["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_demo_camera_mode_moviecam"]], function ( f7_arg0 )
		f1_arg0:updateElementState( ZmRndContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f7_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_demo_camera_mode_moviecam"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local5 = ZmRndContainer --[[ @ 0]]
	ZMTitleFog = ZmRndContainer.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	ZMTitleFog( f1_local5, f1_local7["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_emp_active"]], function ( f8_arg0 )
		f1_arg0:updateElementState( ZmRndContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f8_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_emp_active"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local5 = ZmRndContainer --[[ @ 0]]
	ZMTitleFog = ZmRndContainer.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	ZMTitleFog( f1_local5, f1_local7["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_hud_hardcore"]], function ( f9_arg0 )
		f1_arg0:updateElementState( ZmRndContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f9_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_hud_hardcore"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local5 = ZmRndContainer --[[ @ 0]]
	ZMTitleFog = ZmRndContainer.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	ZMTitleFog( f1_local5, f1_local7["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_hud_visible"]], function ( f10_arg0 )
		f1_arg0:updateElementState( ZmRndContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f10_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_hud_visible"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local5 = ZmRndContainer --[[ @ 0]]
	ZMTitleFog = ZmRndContainer.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	ZMTitleFog( f1_local5, f1_local7["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_guided_missile"]], function ( f11_arg0 )
		f1_arg0:updateElementState( ZmRndContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f11_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_guided_missile"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local5 = ZmRndContainer --[[ @ 0]]
	ZMTitleFog = ZmRndContainer.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	ZMTitleFog( f1_local5, f1_local7["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_killcam"]], function ( f12_arg0 )
		f1_arg0:updateElementState( ZmRndContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f12_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_killcam"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local5 = ZmRndContainer --[[ @ 0]]
	ZMTitleFog = ZmRndContainer.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	ZMTitleFog( f1_local5, f1_local7["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_remote_killstreak_static"]], function ( f13_arg0 )
		f1_arg0:updateElementState( ZmRndContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f13_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_remote_killstreak_static"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local5 = ZmRndContainer --[[ @ 0]]
	ZMTitleFog = ZmRndContainer.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	ZMTitleFog( f1_local5, f1_local7["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"hash_29BF57CE75A8755E"]], function ( f14_arg0 )
		f1_arg0:updateElementState( ZmRndContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f14_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"hash_29BF57CE75A8755E"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local5 = ZmRndContainer --[[ @ 0]]
	ZMTitleFog = ZmRndContainer.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	ZMTitleFog( f1_local5, f1_local7["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_vehicle"]], function ( f15_arg0 )
		f1_arg0:updateElementState( ZmRndContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f15_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_vehicle"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local5 = ZmRndContainer --[[ @ 0]]
	ZMTitleFog = ZmRndContainer.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	ZMTitleFog( f1_local5, f1_local7["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_flash_banged"]], function ( f16_arg0 )
		f1_arg0:updateElementState( ZmRndContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f16_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_flash_banged"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local5 = ZmRndContainer --[[ @ 0]]
	ZMTitleFog = ZmRndContainer.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	ZMTitleFog( f1_local5, f1_local7["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_scoped"]], function ( f17_arg0 )
		f1_arg0:updateElementState( ZmRndContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f17_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_scoped"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local5 = ZmRndContainer --[[ @ 0]]
	ZMTitleFog = ZmRndContainer.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	ZMTitleFog( f1_local5, f1_local7["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_play_of_the_match"]], function ( f18_arg0 )
		f1_arg0:updateElementState( ZmRndContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f18_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_play_of_the_match"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local5 = ZmRndContainer --[[ @ 0]]
	ZMTitleFog = ZmRndContainer.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	ZMTitleFog( f1_local5, f1_local7["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_scoreboard_open"]], function ( f19_arg0 )
		f1_arg0:updateElementState( ZmRndContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f19_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_scoreboard_open"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local5 = ZmRndContainer --[[ @ 0]]
	ZMTitleFog = ZmRndContainer.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	ZMTitleFog( f1_local5, f1_local7["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_ui_active"]], function ( f20_arg0 )
		f1_arg0:updateElementState( ZmRndContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f20_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_ui_active"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local5 = ZmRndContainer --[[ @ 0]]
	ZMTitleFog = ZmRndContainer.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	ZMTitleFog( f1_local5, f1_local7["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_weapon_hud_visible"]], function ( f21_arg0 )
		f1_arg0:updateElementState( ZmRndContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f21_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_weapon_hud_visible"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local5 = ZmRndContainer --[[ @ 0]]
	ZMTitleFog = ZmRndContainer.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	ZMTitleFog( f1_local5, f1_local7["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_game_ended"]], function ( f22_arg0 )
		f1_arg0:updateElementState( ZmRndContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f22_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_game_ended"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:addElement( ZmRndContainer ) --[[ @ 0]]
	self.ZmRndContainer = ZmRndContainer --[[ @ 0]]
	
	ZMTitleFog = CoD.ZM_Title_Fog.new( f1_arg0, f1_arg1, 0, 0, 691, 1203, 0, 0, -166, 346 ) --[[ @ 0]]
	ZMTitleFog:setAlpha( 0 ) --[[ @ 0]]
	ZMTitleFog:setScale( 1.5, 0.8 ) --[[ @ 0]]
	self:addElement( ZMTitleFog ) --[[ @ 0]]
	self.ZMTitleFog = ZMTitleFog --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Show",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalModelValueTrue( "ZMHudGlobal.trials.roundSplashPlay" )
			end
		}
	} ) --[[ @ 0]]
	f1_local7 = self --[[ @ 0]]
	f1_local5 = self.subscribeToModel --[[ @ 0]]
	local f1_local8 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local5( f1_local7, f1_local8["ZMHudGlobal.trials.roundSplashPlay"], function ( f24_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f24_arg0:get(),
			modelName = "ZMHudGlobal.trials.roundSplashPlay"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:subscribeToGlobalModel( f1_arg1, "ZMHudGlobal", "trials.roundSplashPlay", function ( model )
		local f25_local0 = self --[[ @ 0]]
		if CoD.ModelUtility.IsGlobalModelValueTrue( "ZMHudGlobal.trials.roundSplashPlay" ) then
			SetState( self, "Show", f1_arg1 ) --[[ @ 0]]
			PlayClip( self, "DefaultClip", f1_arg1 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.ZM_Trials_Title_Splash.__resetProperties = function ( f26_arg0 )
	f26_arg0.RoundTitleText:completeAnimation() --[[ @ 0]]
	f26_arg0.RoundDescriptionText:completeAnimation() --[[ @ 0]]
	f26_arg0.DescriptionDivider:completeAnimation() --[[ @ 0]]
	f26_arg0.ZmRndContainer:completeAnimation() --[[ @ 0]]
	f26_arg0.ZMTitleFog:completeAnimation() --[[ @ 0]]
	f26_arg0.RoundTitleText:setLeftRight( 0, 0, 0, 1920 ) --[[ @ 0]]
	f26_arg0.RoundTitleText:setTopBottom( 0, 0, 112, 179 ) --[[ @ 0]]
	f26_arg0.RoundTitleText:setAlpha( 1 ) --[[ @ 0]]
	f26_arg0.RoundTitleText:setScale( 1, 1 ) --[[ @ 0]]
	f26_arg0.RoundDescriptionText:setLeftRight( 0, 0, 0, 1920 ) --[[ @ 0]]
	f26_arg0.RoundDescriptionText:setTopBottom( 0, 0, 195, 228 ) --[[ @ 0]]
	f26_arg0.RoundDescriptionText:setAlpha( 1 ) --[[ @ 0]]
	f26_arg0.RoundDescriptionText:setScale( 1, 1 ) --[[ @ 0]]
	f26_arg0.DescriptionDivider:setAlpha( 1 ) --[[ @ 0]]
	f26_arg0.ZmRndContainer:setLeftRight( 0, 0, 820.5, 1156.5 ) --[[ @ 0]]
	f26_arg0.ZmRndContainer:setAlpha( 1 ) --[[ @ 0]]
	f26_arg0.ZmRndContainer:setScale( 1, 1 ) --[[ @ 0]]
	f26_arg0.ZMTitleFog:setTopBottom( 0, 0, -166, 346 ) --[[ @ 0]]
	f26_arg0.ZMTitleFog:setAlpha( 0 ) --[[ @ 0]]
	f26_arg0.ZMTitleFog:setScale( 1.5, 0.8 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ZM_Trials_Title_Splash.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f27_arg0, f27_arg1 )
			f27_arg0:__resetProperties() --[[ @ 0]]
			f27_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f27_arg0.DescriptionDivider:completeAnimation() --[[ @ 0]]
			f27_arg0.DescriptionDivider:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.DescriptionDivider ) --[[ @ 0]]
			f27_arg0.RoundDescriptionText:completeAnimation() --[[ @ 0]]
			f27_arg0.RoundDescriptionText:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.RoundDescriptionText ) --[[ @ 0]]
			f27_arg0.RoundTitleText:completeAnimation() --[[ @ 0]]
			f27_arg0.RoundTitleText:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.RoundTitleText ) --[[ @ 0]]
			f27_arg0.ZmRndContainer:completeAnimation() --[[ @ 0]]
			f27_arg0.ZmRndContainer:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.ZmRndContainer ) --[[ @ 0]]
		end
	},
	Show = {
		DefaultClip = function ( f28_arg0, f28_arg1 )
			f28_arg0:__resetProperties() --[[ @ 0]]
			f28_arg0:setupElementClipCounter( 5 ) --[[ @ 0]]
			local f28_local0 = function ( f29_arg0 )
				local f29_local0 = function ( f30_arg0 )
					local f30_local0 = function ( f31_arg0 )
						local f31_local0 = function ( f32_arg0 )
							local f32_local0 = function ( f33_arg0 )
								local f33_local0 = function ( f34_arg0 )
									f34_arg0:beginAnimation( 439 ) --[[ @ 0]]
									f34_arg0:setAlpha( 0 ) --[[ @ 0]]
									f34_arg0:registerEventHandler( "transition_complete_keyframe", f28_arg0.clipFinished ) --[[ @ 0]]
								end
								 --[[ @ 0]]
								f33_arg0:beginAnimation( 510 ) --[[ @ 0]]
								f33_arg0:registerEventHandler( "transition_complete_keyframe", f33_local0 ) --[[ @ 0]]
							end
							 --[[ @ 0]]
							f32_arg0:beginAnimation( 2110 ) --[[ @ 0]]
							f32_arg0:registerEventHandler( "transition_complete_keyframe", f32_local0 ) --[[ @ 0]]
						end
						 --[[ @ 0]]
						f31_arg0:beginAnimation( 3639 ) --[[ @ 0]]
						f31_arg0:registerEventHandler( "transition_complete_keyframe", f31_local0 ) --[[ @ 0]]
					end
					 --[[ @ 0]]
					f30_arg0:beginAnimation( 1040 ) --[[ @ 0]]
					f30_arg0:setAlpha( 1 ) --[[ @ 0]]
					f30_arg0:registerEventHandler( "transition_complete_keyframe", f30_local0 ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f28_arg0.DescriptionDivider:beginAnimation( 1960 ) --[[ @ 0]]
				f28_arg0.DescriptionDivider:registerEventHandler( "interrupted_keyframe", f28_arg0.clipInterrupted ) --[[ @ 0]]
				f28_arg0.DescriptionDivider:registerEventHandler( "transition_complete_keyframe", f29_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f28_arg0.DescriptionDivider:completeAnimation() --[[ @ 0]]
			f28_arg0.DescriptionDivider:setAlpha( 0 ) --[[ @ 0]]
			f28_local0( f28_arg0.DescriptionDivider ) --[[ @ 0]]
			local f28_local1 = function ( f35_arg0 )
				local f35_local0 = function ( f36_arg0 )
					local f36_local0 = function ( f37_arg0 )
						local f37_local0 = function ( f38_arg0 )
							local f38_local0 = function ( f39_arg0 )
								f39_arg0:beginAnimation( 439 ) --[[ @ 0]]
								f39_arg0:setAlpha( 0 ) --[[ @ 0]]
								f39_arg0:registerEventHandler( "transition_complete_keyframe", f28_arg0.clipFinished ) --[[ @ 0]]
							end
							 --[[ @ 0]]
							f38_arg0:beginAnimation( 510 ) --[[ @ 0]]
							f38_arg0:registerEventHandler( "transition_complete_keyframe", f38_local0 ) --[[ @ 0]]
						end
						 --[[ @ 0]]
						f37_arg0:beginAnimation( 5750 ) --[[ @ 0]]
						f37_arg0:registerEventHandler( "transition_complete_keyframe", f37_local0 ) --[[ @ 0]]
					end
					 --[[ @ 0]]
					f36_arg0:beginAnimation( 1040, Enum[@"luitween"][@"luitween_ease_in"] ) --[[ @ 0]]
					f36_arg0:setAlpha( 1 ) --[[ @ 0]]
					f36_arg0:registerEventHandler( "transition_complete_keyframe", f36_local0 ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f28_arg0.RoundDescriptionText:beginAnimation( 1960 ) --[[ @ 0]]
				f28_arg0.RoundDescriptionText:registerEventHandler( "interrupted_keyframe", f28_arg0.clipInterrupted ) --[[ @ 0]]
				f28_arg0.RoundDescriptionText:registerEventHandler( "transition_complete_keyframe", f35_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f28_arg0.RoundDescriptionText:completeAnimation() --[[ @ 0]]
			f28_arg0.RoundDescriptionText:setLeftRight( 0, 0, 0, 1920 ) --[[ @ 0]]
			f28_arg0.RoundDescriptionText:setTopBottom( 0, 0, 197, 230 ) --[[ @ 0]]
			f28_arg0.RoundDescriptionText:setAlpha( 0 ) --[[ @ 0]]
			f28_arg0.RoundDescriptionText:setScale( 1, 1 ) --[[ @ 0]]
			f28_local1( f28_arg0.RoundDescriptionText ) --[[ @ 0]]
			local f28_local2 = function ( f40_arg0 )
				local f40_local0 = function ( f41_arg0 )
					local f41_local0 = function ( f42_arg0 )
						local f42_local0 = function ( f43_arg0 )
							local f43_local0 = function ( f44_arg0 )
								f44_arg0:beginAnimation( 439 ) --[[ @ 0]]
								f44_arg0:setAlpha( 0 ) --[[ @ 0]]
								f44_arg0:registerEventHandler( "transition_complete_keyframe", f28_arg0.clipFinished ) --[[ @ 0]]
							end
							 --[[ @ 0]]
							f43_arg0:beginAnimation( 510 ) --[[ @ 0]]
							f43_arg0:registerEventHandler( "transition_complete_keyframe", f43_local0 ) --[[ @ 0]]
						end
						 --[[ @ 0]]
						f42_arg0:beginAnimation( 5750 ) --[[ @ 0]]
						f42_arg0:registerEventHandler( "transition_complete_keyframe", f42_local0 ) --[[ @ 0]]
					end
					 --[[ @ 0]]
					f41_arg0:beginAnimation( 1040 ) --[[ @ 0]]
					f41_arg0:setAlpha( 1 ) --[[ @ 0]]
					f41_arg0:registerEventHandler( "transition_complete_keyframe", f41_local0 ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f28_arg0.RoundTitleText:beginAnimation( 1960 ) --[[ @ 0]]
				f28_arg0.RoundTitleText:registerEventHandler( "interrupted_keyframe", f28_arg0.clipInterrupted ) --[[ @ 0]]
				f28_arg0.RoundTitleText:registerEventHandler( "transition_complete_keyframe", f40_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f28_arg0.RoundTitleText:completeAnimation() --[[ @ 0]]
			f28_arg0.RoundTitleText:setLeftRight( 0, 0, 0, 1920 ) --[[ @ 0]]
			f28_arg0.RoundTitleText:setTopBottom( 0, 0, 114, 181 ) --[[ @ 0]]
			f28_arg0.RoundTitleText:setAlpha( 0 ) --[[ @ 0]]
			f28_arg0.RoundTitleText:setScale( 1, 1 ) --[[ @ 0]]
			f28_local2( f28_arg0.RoundTitleText ) --[[ @ 0]]
			local f28_local3 = function ( f45_arg0 )
				local f45_local0 = function ( f46_arg0 )
					local f46_local0 = function ( f47_arg0 )
						local f47_local0 = function ( f48_arg0 )
							f48_arg0:beginAnimation( 819 ) --[[ @ 0]]
							f48_arg0:setAlpha( 0 ) --[[ @ 0]]
							f48_arg0:registerEventHandler( "transition_complete_keyframe", f28_arg0.clipFinished ) --[[ @ 0]]
						end
						 --[[ @ 0]]
						f47_arg0:beginAnimation( 6250 ) --[[ @ 0]]
						f47_arg0:registerEventHandler( "transition_complete_keyframe", f47_local0 ) --[[ @ 0]]
					end
					 --[[ @ 0]]
					f46_arg0:beginAnimation( 1310 ) --[[ @ 0]]
					f46_arg0:setAlpha( 1 ) --[[ @ 0]]
					f46_arg0:registerEventHandler( "transition_complete_keyframe", f46_local0 ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f28_arg0.ZmRndContainer:beginAnimation( 1190 ) --[[ @ 0]]
				f28_arg0.ZmRndContainer:registerEventHandler( "interrupted_keyframe", f28_arg0.clipInterrupted ) --[[ @ 0]]
				f28_arg0.ZmRndContainer:registerEventHandler( "transition_complete_keyframe", f45_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f28_arg0.ZmRndContainer:completeAnimation() --[[ @ 0]]
			f28_arg0.ZmRndContainer:setLeftRight( 0, 0, 820.5, 1156.5 ) --[[ @ 0]]
			f28_arg0.ZmRndContainer:setAlpha( 0 ) --[[ @ 0]]
			f28_arg0.ZmRndContainer:setScale( 1, 1 ) --[[ @ 0]]
			f28_local3( f28_arg0.ZmRndContainer ) --[[ @ 0]]
			local f28_local4 = function ( f49_arg0 )
				local f49_local0 = function ( f50_arg0 )
					local f50_local0 = function ( f51_arg0 )
						local f51_local0 = function ( f52_arg0 )
							local f52_local0 = function ( f53_arg0 )
								f53_arg0:beginAnimation( 1619 ) --[[ @ 0]]
								f53_arg0:setAlpha( 0 ) --[[ @ 0]]
								f53_arg0:setScale( 1.8, 0.6 ) --[[ @ 0]]
								f53_arg0:registerEventHandler( "transition_complete_keyframe", f28_arg0.clipFinished ) --[[ @ 0]]
							end
							 --[[ @ 0]]
							f52_arg0:beginAnimation( 920 ) --[[ @ 0]]
							f52_arg0:setAlpha( 1 ) --[[ @ 0]]
							f52_arg0:setScale( 1.6, 0.9 ) --[[ @ 0]]
							f52_arg0:registerEventHandler( "transition_complete_keyframe", f52_local0 ) --[[ @ 0]]
						end
						 --[[ @ 0]]
						f51_arg0:beginAnimation( 5460 ) --[[ @ 0]]
						f51_arg0:setAlpha( 0.2 ) --[[ @ 0]]
						f51_arg0:setScale( 1.59, 0.8 ) --[[ @ 0]]
						f51_arg0:registerEventHandler( "transition_complete_keyframe", f51_local0 ) --[[ @ 0]]
					end
					 --[[ @ 0]]
					f50_arg0:beginAnimation( 1730 ) --[[ @ 0]]
					f50_arg0:setAlpha( 0 ) --[[ @ 0]]
					f50_arg0:setScale( 1.52, 0.8 ) --[[ @ 0]]
					f50_arg0:registerEventHandler( "transition_complete_keyframe", f50_local0 ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f28_arg0.ZMTitleFog:beginAnimation( 1270 ) --[[ @ 0]]
				f28_arg0.ZMTitleFog:setAlpha( 1 ) --[[ @ 0]]
				f28_arg0.ZMTitleFog:setScale( 1.5, 0.8 ) --[[ @ 0]]
				f28_arg0.ZMTitleFog:registerEventHandler( "interrupted_keyframe", f28_arg0.clipInterrupted ) --[[ @ 0]]
				f28_arg0.ZMTitleFog:registerEventHandler( "transition_complete_keyframe", f49_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f28_arg0.ZMTitleFog:completeAnimation() --[[ @ 0]]
			f28_arg0.ZMTitleFog:setTopBottom( 0, 0, -103, 321 ) --[[ @ 0]]
			f28_arg0.ZMTitleFog:setAlpha( 0 ) --[[ @ 0]]
			f28_arg0.ZMTitleFog:setScale( 1.5, 0.6 ) --[[ @ 0]]
			f28_local4( f28_arg0.ZMTitleFog ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.ZM_Trials_Title_Splash.__onClose = function ( f54_arg0 )
	f54_arg0.RoundDescriptionText:close() --[[ @ 0]]
	f54_arg0.RoundTitleText:close() --[[ @ 0]]
	f54_arg0.ZmRndContainer:close() --[[ @ 0]]
	f54_arg0.ZMTitleFog:close() --[[ @ 0]]
end
 --[[ @ 0]]
