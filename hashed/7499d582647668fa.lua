-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:50
require( "ui/uieditor/widgets/pc/categoryexpendablebutton" ) --[[ @ 0]]
require( "ui/uieditor/widgets/pc/separationline_vertical" ) --[[ @ 0]]
require( "ui/uieditor/widgets/pc/startmenu/pc_startmenu_options_description" ) --[[ @ 0]]
require( "ui/uieditor/widgets/pc/startmenu/pc_startmenu_options_list" ) --[[ @ 0]]

CoD.PC_StartMenu_Options_TabContent = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.PC_StartMenu_Options_TabContent.__defaultWidth = 1920 --[[ @ 0]]
CoD.PC_StartMenu_Options_TabContent.__defaultHeight = 802 --[[ @ 0]]
CoD.PC_StartMenu_Options_TabContent.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	CoD.PCUtility.InitCurrentCategoryModel( f1_arg1 ) --[[ @ 0]]
	self:setClass( CoD.PC_StartMenu_Options_TabContent ) --[[ @ 0]]
	self.id = "PC_StartMenu_Options_TabContent" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local SideButtons = LUI.UIList.new( f1_arg0, f1_arg1, 10, 0, nil, false, false, false, false ) --[[ @ 0]]
	SideButtons:mergeStateConditions( {
		{
			stateName = "Expanded",
			condition = function ( menu, element, event )
				return IsInDefaultState( self )
			end
		},
		{
			stateName = "Collapsed",
			condition = function ( menu, element, event )
				return AlwaysFalse() and IsSelfInState( self, "Collapsed" )
			end
		}
	} ) --[[ @ 0]]
	local Description = SideButtons --[[ @ 0]]
	local OptionsList = SideButtons.subscribeToModel --[[ @ 0]]
	local SeparationLineVertical = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	OptionsList( Description, SeparationLineVertical["PC.CurrentCategory"], function ( f4_arg0 )
		f1_arg0:updateElementState( SideButtons, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f4_arg0:get(),
			modelName = "PC.CurrentCategory"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	SideButtons:linkToElementModel( SideButtons, "categoryId", true, function ( model )
		f1_arg0:updateElementState( SideButtons, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "categoryId"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	SideButtons:setLeftRight( 0.5, 0.62, -893, -893 ) --[[ @ 0]]
	SideButtons:setTopBottom( 0.5, 0.5, -180, 180 ) --[[ @ 0]]
	SideButtons:setAutoScaleContent( true ) --[[ @ 0]]
	SideButtons:setWidgetType( CoD.CategoryExpendableButton ) --[[ @ 0]]
	SideButtons:setVerticalCount( 5 ) --[[ @ 0]]
	SideButtons:setSpacing( 10 ) --[[ @ 0]]
	SideButtons:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	SideButtons:setStaggeredIntroTime( -1 ) --[[ @ 0]]
	SideButtons:setDataSource( "OptionGameplayCategories" ) --[[ @ 0]]
	self:addElement( SideButtons ) --[[ @ 0]]
	self.SideButtons = SideButtons --[[ @ 0]]
	
	OptionsList = CoD.PC_StartMenu_Options_List.new( f1_arg0, f1_arg1, 0.5, 0.5, -663, 147, 0, 1, 0, 0 ) --[[ @ 0]]
	OptionsList.ScrollList.ScrollView.View:setVerticalCount( AddWithoutPreview( 500, 3 ) ) --[[ @ 0]]
	self:addElement( OptionsList ) --[[ @ 0]]
	self.OptionsList = OptionsList --[[ @ 0]]
	
	Description = CoD.PC_StartMenu_Options_Description.new( f1_arg0, f1_arg1, 0.5, 0.5, 205, 880, 0.5, 0.5, -300, 300 ) --[[ @ 0]]
	Description:mergeStateConditions( {
		{
			stateName = "Empty",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelPathNil( self.Description, f1_arg1, "" )
			end
		},
		{
			stateName = "TextOnly",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelPathNil( self.Description, f1_arg1, "image" )
			end
		},
		{
			stateName = "Gamepad",
			condition = function ( menu, element, event )
				return IsElementInState( self, "InGamepadTab" )
			end
		}
	} ) --[[ @ 0]]
	Description:linkToElementModel( Description, nil, true, function ( model )
		f1_arg0:updateElementState( Description, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = nil
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	Description:linkToElementModel( Description, "image", true, function ( model )
		f1_arg0:updateElementState( Description, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "image"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( Description ) --[[ @ 0]]
	self.Description = Description --[[ @ 0]]
	
	SeparationLineVertical = CoD.SeparationLine_Vertical.new( f1_arg0, f1_arg1, 0.5, 0.5, -663, -662, 0.5, 0.5, -285, 285 ) --[[ @ 0]]
	SeparationLineVertical:setAlpha( 0.75 ) --[[ @ 0]]
	self:addElement( SeparationLineVertical ) --[[ @ 0]]
	self.SeparationLineVertical = SeparationLineVertical --[[ @ 0]]
	
	Description:linkToElementModel( OptionsList.ScrollList.ScrollView.View, nil, false, function ( model )
		Description:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	Description:linkToElementModel( OptionsList.ScrollList.ScrollView.View, "desc", true, function ( model )
		local f12_local0 = model:get() --[[ @ 0]]
		if f12_local0 ~= nil then
			Description.DescriptionTextBox.detailedDescription:setText( Engine[@"hash_4F9F1239CFD921FE"]( f12_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	Description:linkToElementModel( OptionsList.ScrollList.ScrollView.View, "name", true, function ( model )
		local f13_local0 = model:get() --[[ @ 0]]
		if f13_local0 ~= nil then
			Description.DescriptionTextBox.OptionName:setText( LocalizeToUpperString( f13_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	Description:linkToElementModel( OptionsList.ScrollList.ScrollView.View, "image", true, function ( model )
		local f14_local0 = model:get() --[[ @ 0]]
		if f14_local0 ~= nil then
			Description.DescriptionImage.PlaceHolderImage:setImage( RegisterImage( CoD.PCUtility.PlayOptionDescriptionIntroClip( self.Description, f14_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:mergeStateConditions( {
		{
			stateName = "Collapsed",
			condition = function ( menu, element, event )
				return IsWidgetInFocus( self, "OptionsList", event ) and IsWidgetInFocus( self, "Description", event )
			end
		},
		{
			stateName = "InGamepadTab",
			condition = function ( menu, element, event )
				return true
			end
		}
	} ) --[[ @ 0]]
	self:appendEventHandler( "record_curr_focused_elem_id", function ( f17_arg0, f17_arg1 )
		f17_arg1.menu = f17_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( self, f17_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( self, "setState", function ( element, controller, f18_arg2, f18_arg3, f18_arg4 )
		if IsSelfInState( self, "InGamepadTab" ) then
			SetElementState( self, self.Description, controller, "Gamepad" ) --[[ @ 0]]
		else
			UpdateElementState( self, "GlobalDropdown", controller ) --[[ @ 0]]
			SetElementState( self, self.Description, controller, "DefaultState" ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	SideButtons.id = "SideButtons" --[[ @ 0]]
	OptionsList.id = "OptionsList" --[[ @ 0]]
	Description.id = "Description" --[[ @ 0]]
	self.__defaultFocus = OptionsList --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.PC_StartMenu_Options_TabContent.__resetProperties = function ( f19_arg0 )
	f19_arg0.OptionsList:completeAnimation() --[[ @ 0]]
	f19_arg0.SideButtons:completeAnimation() --[[ @ 0]]
	f19_arg0.Description:completeAnimation() --[[ @ 0]]
	f19_arg0.SeparationLineVertical:completeAnimation() --[[ @ 0]]
	f19_arg0.OptionsList:setLeftRight( 0.5, 0.5, -663, 147 ) --[[ @ 0]]
	f19_arg0.OptionsList:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	f19_arg0.SideButtons:setLeftRight( 0.5, 0.62, -893, -893 ) --[[ @ 0]]
	f19_arg0.SideButtons:setTopBottom( 0.5, 0.5, -180, 180 ) --[[ @ 0]]
	f19_arg0.SideButtons:setAlpha( 1 ) --[[ @ 0]]
	f19_arg0.Description:setAlpha( 1 ) --[[ @ 0]]
	f19_arg0.SeparationLineVertical:setAlpha( 0.75 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.PC_StartMenu_Options_TabContent.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f20_arg0, f20_arg1 )
			f20_arg0:__resetProperties() --[[ @ 0]]
			f20_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end,
		Collapsed = function ( f21_arg0, f21_arg1 )
			f21_arg0:__resetProperties() --[[ @ 0]]
			f21_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			local f21_local0 = function ( f22_arg0 )
				f21_arg0.SideButtons:beginAnimation( 200 ) --[[ @ 0]]
				f21_arg0.SideButtons:setLeftRight( 0, 0, 346, 736 ) --[[ @ 0]]
				f21_arg0.SideButtons:registerEventHandler( "interrupted_keyframe", f21_arg0.clipInterrupted ) --[[ @ 0]]
				f21_arg0.SideButtons:registerEventHandler( "transition_complete_keyframe", f21_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f21_arg0.SideButtons:completeAnimation() --[[ @ 0]]
			f21_arg0.SideButtons:setLeftRight( 0, 0, 196, 586 ) --[[ @ 0]]
			f21_arg0.SideButtons:setTopBottom( 0, 0, 92, 368 ) --[[ @ 0]]
			f21_local0( f21_arg0.SideButtons ) --[[ @ 0]]
			local f21_local1 = function ( f23_arg0 )
				f21_arg0.OptionsList:beginAnimation( 200 ) --[[ @ 0]]
				f21_arg0.OptionsList:setLeftRight( 0.5, 0.5, -479, 215 ) --[[ @ 0]]
				f21_arg0.OptionsList:registerEventHandler( "interrupted_keyframe", f21_arg0.clipInterrupted ) --[[ @ 0]]
				f21_arg0.OptionsList:registerEventHandler( "transition_complete_keyframe", f21_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f21_arg0.OptionsList:completeAnimation() --[[ @ 0]]
			f21_arg0.OptionsList:setLeftRight( 0.5, 0.5, -347, 347 ) --[[ @ 0]]
			f21_arg0.OptionsList:setTopBottom( 0, 0, 92, 725 ) --[[ @ 0]]
			f21_local1( f21_arg0.OptionsList ) --[[ @ 0]]
		end
	},
	Collapsed = {
		DefaultClip = function ( f24_arg0, f24_arg1 )
			f24_arg0:__resetProperties() --[[ @ 0]]
			f24_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			local f24_local0 = function ( f25_arg0 )
				f24_arg0.SideButtons:beginAnimation( 150 ) --[[ @ 0]]
				f24_arg0.SideButtons:registerEventHandler( "interrupted_keyframe", f24_arg0.clipInterrupted ) --[[ @ 0]]
				f24_arg0.SideButtons:registerEventHandler( "transition_complete_keyframe", f24_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f24_arg0.SideButtons:completeAnimation() --[[ @ 0]]
			f24_arg0.SideButtons:setLeftRight( 0, 0, 346, 736 ) --[[ @ 0]]
			f24_arg0.SideButtons:setTopBottom( 0, 0, 92, 368 ) --[[ @ 0]]
			f24_local0( f24_arg0.SideButtons ) --[[ @ 0]]
			local f24_local1 = function ( f26_arg0 )
				f24_arg0.OptionsList:beginAnimation( 150 ) --[[ @ 0]]
				f24_arg0.OptionsList:registerEventHandler( "interrupted_keyframe", f24_arg0.clipInterrupted ) --[[ @ 0]]
				f24_arg0.OptionsList:registerEventHandler( "transition_complete_keyframe", f24_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f24_arg0.OptionsList:completeAnimation() --[[ @ 0]]
			f24_arg0.OptionsList:setLeftRight( 0.5, 0.5, -479, 215 ) --[[ @ 0]]
			f24_arg0.OptionsList:setTopBottom( 0, 0, 92, 725 ) --[[ @ 0]]
			f24_local1( f24_arg0.OptionsList ) --[[ @ 0]]
		end,
		DefaultState = function ( f27_arg0, f27_arg1 )
			f27_arg0:__resetProperties() --[[ @ 0]]
			f27_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			local f27_local0 = function ( f28_arg0 )
				f27_arg0.SideButtons:beginAnimation( 200, Enum[@"luitween"][@"luitween_ease_out"] ) --[[ @ 0]]
				f27_arg0.SideButtons:setLeftRight( 0, 0, 196, 586 ) --[[ @ 0]]
				f27_arg0.SideButtons:registerEventHandler( "interrupted_keyframe", f27_arg0.clipInterrupted ) --[[ @ 0]]
				f27_arg0.SideButtons:registerEventHandler( "transition_complete_keyframe", f27_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f27_arg0.SideButtons:completeAnimation() --[[ @ 0]]
			f27_arg0.SideButtons:setLeftRight( 0, 0, 346, 736 ) --[[ @ 0]]
			f27_arg0.SideButtons:setTopBottom( 0, 0, 92, 368 ) --[[ @ 0]]
			f27_local0( f27_arg0.SideButtons ) --[[ @ 0]]
			local f27_local1 = function ( f29_arg0 )
				f27_arg0.OptionsList:beginAnimation( 200, Enum[@"luitween"][@"luitween_ease_out"] ) --[[ @ 0]]
				f27_arg0.OptionsList:setLeftRight( 0.5, 0.5, -347, 347 ) --[[ @ 0]]
				f27_arg0.OptionsList:registerEventHandler( "interrupted_keyframe", f27_arg0.clipInterrupted ) --[[ @ 0]]
				f27_arg0.OptionsList:registerEventHandler( "transition_complete_keyframe", f27_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f27_arg0.OptionsList:completeAnimation() --[[ @ 0]]
			f27_arg0.OptionsList:setLeftRight( 0.5, 0.5, -479, 215 ) --[[ @ 0]]
			f27_arg0.OptionsList:setTopBottom( 0, 0, 92, 725 ) --[[ @ 0]]
			f27_local1( f27_arg0.OptionsList ) --[[ @ 0]]
		end
	},
	InGamepadTab = {
		DefaultClip = function ( f30_arg0, f30_arg1 )
			f30_arg0:__resetProperties() --[[ @ 0]]
			f30_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f30_arg0.SideButtons:completeAnimation() --[[ @ 0]]
			f30_arg0.SideButtons:setAlpha( 0 ) --[[ @ 0]]
			f30_arg0.clipFinished( f30_arg0.SideButtons ) --[[ @ 0]]
			f30_arg0.OptionsList:completeAnimation() --[[ @ 0]]
			f30_arg0.OptionsList:setLeftRight( 0, 0, 129, 939 ) --[[ @ 0]]
			f30_arg0.clipFinished( f30_arg0.OptionsList ) --[[ @ 0]]
			f30_arg0.Description:completeAnimation() --[[ @ 0]]
			f30_arg0.Description:setAlpha( 1 ) --[[ @ 0]]
			f30_arg0.clipFinished( f30_arg0.Description ) --[[ @ 0]]
			f30_arg0.SeparationLineVertical:completeAnimation() --[[ @ 0]]
			f30_arg0.SeparationLineVertical:setAlpha( 0 ) --[[ @ 0]]
			f30_arg0.clipFinished( f30_arg0.SeparationLineVertical ) --[[ @ 0]]
		end,
		Collapsed = function ( f31_arg0, f31_arg1 )
			f31_arg0:__resetProperties() --[[ @ 0]]
			f31_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			local f31_local0 = function ( f32_arg0 )
				f31_arg0.SideButtons:beginAnimation( 200 ) --[[ @ 0]]
				f31_arg0.SideButtons:setLeftRight( 0, 0, 346, 736 ) --[[ @ 0]]
				f31_arg0.SideButtons:registerEventHandler( "interrupted_keyframe", f31_arg0.clipInterrupted ) --[[ @ 0]]
				f31_arg0.SideButtons:registerEventHandler( "transition_complete_keyframe", f31_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f31_arg0.SideButtons:completeAnimation() --[[ @ 0]]
			f31_arg0.SideButtons:setLeftRight( 0, 0, 196, 586 ) --[[ @ 0]]
			f31_arg0.SideButtons:setTopBottom( 0, 0, 92, 368 ) --[[ @ 0]]
			f31_local0( f31_arg0.SideButtons ) --[[ @ 0]]
			local f31_local1 = function ( f33_arg0 )
				f31_arg0.OptionsList:beginAnimation( 200 ) --[[ @ 0]]
				f31_arg0.OptionsList:setLeftRight( 0.5, 0.5, -479, 215 ) --[[ @ 0]]
				f31_arg0.OptionsList:registerEventHandler( "interrupted_keyframe", f31_arg0.clipInterrupted ) --[[ @ 0]]
				f31_arg0.OptionsList:registerEventHandler( "transition_complete_keyframe", f31_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f31_arg0.OptionsList:completeAnimation() --[[ @ 0]]
			f31_arg0.OptionsList:setLeftRight( 0.5, 0.5, -347, 347 ) --[[ @ 0]]
			f31_arg0.OptionsList:setTopBottom( 0, 0, 92, 725 ) --[[ @ 0]]
			f31_local1( f31_arg0.OptionsList ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.PC_StartMenu_Options_TabContent.__onClose = function ( f34_arg0 )
	f34_arg0.Description:close() --[[ @ 0]]
	f34_arg0.SideButtons:close() --[[ @ 0]]
	f34_arg0.OptionsList:close() --[[ @ 0]]
	f34_arg0.SeparationLineVertical:close() --[[ @ 0]]
end
 --[[ @ 0]]
