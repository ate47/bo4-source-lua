-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:51
require( "x64:16bffb9001264254" ) --[[ @ 0]]
require( "x64:493a575a7ca17e04" ) --[[ @ 0]]
require( "x64:8d675186365db0e" ) --[[ @ 0]]
require( "x64:1bf664385ad802d2" ) --[[ @ 0]]
require( "x64:68ad2c5f2a781472" ) --[[ @ 0]]
require( "x64:32824ac3e38d1e18" ) --[[ @ 0]]
require( "x64:7ee88ebccb2271bc" ) --[[ @ 0]]

CoD.WZTeamListItem = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.WZTeamListItem.__defaultWidth = 385 --[[ @ 0]]
CoD.WZTeamListItem.__defaultHeight = 50 --[[ @ 0]]
CoD.WZTeamListItem.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.WZTeamListItem ) --[[ @ 0]]
	self.id = "WZTeamListItem" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local Blur = LUI.UIImage.new( 0, 0, 0, 274, 0, 0, 1, 49 ) --[[ @ 0]]
	Blur:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_E2354BE557C4C7A" ) ) --[[ @ 0]]
	Blur:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( Blur ) --[[ @ 0]]
	self.Blur = Blur --[[ @ 0]]
	
	local Backer = LUI.UIImage.new( 0, 0, -4, 296, 0, 0, -1, 51 ) --[[ @ 0]]
	Backer:setRGB( 0, 0, 0 ) --[[ @ 0]]
	Backer:setImage( RegisterImage( @"uie_ui_hud_wz_hud_core_team_widget_backer" ) ) --[[ @ 0]]
	self:addElement( Backer ) --[[ @ 0]]
	self.Backer = Backer --[[ @ 0]]
	
	local ArmorBar = CoD.ArmorBarWZ.new( f1_arg0, f1_arg1, 0, 0, 43, 169, 0, 0, 26, 34 ) --[[ @ 0]]
	ArmorBar:mergeStateConditions( {
		{
			stateName = "Visible",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		}
	} ) --[[ @ 0]]
	ArmorBar:linkToElementModel( ArmorBar, "armor", true, function ( model )
		f1_arg0:updateElementState( ArmorBar, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "armor"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	ArmorBar.Border:setAlpha( 0 ) --[[ @ 0]]
	ArmorBar.Frame:setAlpha( 0 ) --[[ @ 0]]
	ArmorBar:linkToElementModel( self, nil, false, function ( model )
		ArmorBar:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( ArmorBar ) --[[ @ 0]]
	self.ArmorBar = ArmorBar --[[ @ 0]]
	
	local HealthBar = CoD.HealthBar.new( f1_arg0, f1_arg1, 0, 0, 41, 169, 0, 0, 33, 50 ) --[[ @ 0]]
	HealthBar:setRGB( ColorSet.FriendlyHealthBar.r, ColorSet.FriendlyHealthBar.g, ColorSet.FriendlyHealthBar.b ) --[[ @ 0]]
	HealthBar.Backer:setAlpha( 0.01 ) --[[ @ 0]]
	HealthBar:linkToElementModel( self, "health", false, function ( model )
		HealthBar:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( HealthBar ) --[[ @ 0]]
	self.HealthBar = HealthBar --[[ @ 0]]
	
	local BleedoutBar = CoD.WZBleedoutBar.new( f1_arg0, f1_arg1, 0, 0, 40.5, 168.5, 0, 0, 35, 49 ) --[[ @ 0]]
	BleedoutBar:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( BleedoutBar ) --[[ @ 0]]
	self.BleedoutBar = BleedoutBar --[[ @ 0]]
	
	local StatusIcon = CoD.WZStatusIcon.new( f1_arg0, f1_arg1, 0, 0, 0, 40, 0, 0, 4, 44 ) --[[ @ 0]]
	StatusIcon:setScale( 0.8, 0.8 ) --[[ @ 0]]
	StatusIcon:linkToElementModel( self, nil, false, function ( model )
		StatusIcon:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( StatusIcon ) --[[ @ 0]]
	self.StatusIcon = StatusIcon --[[ @ 0]]
	
	local PlayerInfoContainer = CoD.WZTeamListItemContainer.new( f1_arg0, f1_arg1, 0, 0, 39.5, 423.5, 0, 0, 1, 28 ) --[[ @ 0]]
	PlayerInfoContainer:linkToElementModel( self, nil, false, function ( model )
		PlayerInfoContainer:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( PlayerInfoContainer ) --[[ @ 0]]
	self.PlayerInfoContainer = PlayerInfoContainer --[[ @ 0]]
	
	local IsTarget = CoD.WZTeamPlayerIsTarget.new( f1_arg0, f1_arg1, 0, 0, 168, 198, 0, 0, 21, 51 ) --[[ @ 0]]
	IsTarget:setScale( 0.85, 0.85 ) --[[ @ 0]]
	IsTarget:linkToElementModel( self, nil, false, function ( model )
		IsTarget:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( IsTarget ) --[[ @ 0]]
	self.IsTarget = IsTarget --[[ @ 0]]
	
	local EMP = CoD.Warzone_EMP_Team.new( f1_arg0, f1_arg1, 0, 0, -21, 295, 0, 0, -19, 69 ) --[[ @ 0]]
	self:addElement( EMP ) --[[ @ 0]]
	self.EMP = EMP --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "DeadDisconnected",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualToEnumEitherValue( element, f1_arg1, "inGamePlayerStatus", Enum[@"hash_14A07561A78E340B"][@"hash_3C233F1FA9F35C02"], Enum[@"hash_14A07561A78E340B"][@"hash_358F9A363F8FBB07"] )
			end
		},
		{
			stateName = "LastStand",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualToEnum( element, f1_arg1, "inGamePlayerStatus", Enum[@"hash_14A07561A78E340B"][@"hash_9BD8FECA6158847"] )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "inGamePlayerStatus", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "inGamePlayerStatus"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( self, "setModel", function ( element, controller )
		CoD.WZUtility.SetupLastStandBleedoutBar( f1_arg0, self, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	local f1_local10 = self --[[ @ 0]]
	CoD.HUDUtility.UpdateClientHealth( self, f1_arg1 ) --[[ @ 0]]
	return self
end
 --[[ @ 0]]
CoD.WZTeamListItem.__resetProperties = function ( f13_arg0 )
	f13_arg0.HealthBar:completeAnimation() --[[ @ 0]]
	f13_arg0.BleedoutBar:completeAnimation() --[[ @ 0]]
	f13_arg0.PlayerInfoContainer:completeAnimation() --[[ @ 0]]
	f13_arg0.HealthBar:setAlpha( 1 ) --[[ @ 0]]
	f13_arg0.BleedoutBar:setAlpha( 0 ) --[[ @ 0]]
	f13_arg0.PlayerInfoContainer:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.WZTeamListItem.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f14_arg0, f14_arg1 )
			f14_arg0:__resetProperties() --[[ @ 0]]
			f14_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f14_arg0.HealthBar:completeAnimation() --[[ @ 0]]
			f14_arg0.HealthBar:setAlpha( 1 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.HealthBar ) --[[ @ 0]]
			f14_arg0.BleedoutBar:completeAnimation() --[[ @ 0]]
			f14_arg0.BleedoutBar:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.BleedoutBar ) --[[ @ 0]]
		end
	},
	DeadDisconnected = {
		DefaultClip = function ( f15_arg0, f15_arg1 )
			f15_arg0:__resetProperties() --[[ @ 0]]
			f15_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f15_arg0.HealthBar:completeAnimation() --[[ @ 0]]
			f15_arg0.HealthBar:setAlpha( 0.02 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.HealthBar ) --[[ @ 0]]
			f15_arg0.BleedoutBar:completeAnimation() --[[ @ 0]]
			f15_arg0.BleedoutBar:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.BleedoutBar ) --[[ @ 0]]
			f15_arg0.PlayerInfoContainer:completeAnimation() --[[ @ 0]]
			f15_arg0.PlayerInfoContainer:setAlpha( 0.35 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.PlayerInfoContainer ) --[[ @ 0]]
		end
	},
	LastStand = {
		DefaultClip = function ( f16_arg0, f16_arg1 )
			f16_arg0:__resetProperties() --[[ @ 0]]
			f16_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f16_arg0.HealthBar:completeAnimation() --[[ @ 0]]
			f16_arg0.HealthBar:setAlpha( 0 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.HealthBar ) --[[ @ 0]]
			f16_arg0.BleedoutBar:completeAnimation() --[[ @ 0]]
			f16_arg0.BleedoutBar:setAlpha( 1 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.BleedoutBar ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.WZTeamListItem.__onClose = function ( f17_arg0 )
	f17_arg0.ArmorBar:close() --[[ @ 0]]
	f17_arg0.HealthBar:close() --[[ @ 0]]
	f17_arg0.BleedoutBar:close() --[[ @ 0]]
	f17_arg0.StatusIcon:close() --[[ @ 0]]
	f17_arg0.PlayerInfoContainer:close() --[[ @ 0]]
	f17_arg0.IsTarget:close() --[[ @ 0]]
	f17_arg0.EMP:close() --[[ @ 0]]
end
 --[[ @ 0]]
