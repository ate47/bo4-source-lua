-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
require( "x64:3744d266335aa242" ) --[[ @ 0]]

CoD.PositionDraft_FriendlyTeamStatusBar = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.PositionDraft_FriendlyTeamStatusBar.__defaultWidth = 150 --[[ @ 0]]
CoD.PositionDraft_FriendlyTeamStatusBar.__defaultHeight = 20 --[[ @ 0]]
CoD.PositionDraft_FriendlyTeamStatusBar.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.PositionDraft_FriendlyTeamStatusBar ) --[[ @ 0]]
	self.id = "PositionDraft_FriendlyTeamStatusBar" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	
	local Slot1 = CoD.PositionDraft_ViewTeams_Slots.new( f1_arg0, f1_arg1, 0, 0, 132, 148, 0, 0, 2, 18 ) --[[ @ 0]]
	Slot1:mergeStateConditions( {
		{
			stateName = "Filled",
			condition = function ( menu, element, event )
				return CoD.PlayerRoleUtility.IsFriendlyTeamStatusSlotActive( self, f1_arg1, 1 )
			end
		},
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return CoD.PlayerRoleUtility.IsFriendlyTeamStatusSlotHidden( self, f1_arg1, 1 )
			end
		}
	} ) --[[ @ 0]]
	local Slot3 = Slot1 --[[ @ 0]]
	local Slot2 = Slot1.subscribeToModel --[[ @ 0]]
	local Slot4 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	Slot2( Slot3, Slot4["Clients.clientCount"], function ( f4_arg0 )
		f1_arg0:updateElementState( Slot1, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f4_arg0:get(),
			modelName = "Clients.clientCount"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	Slot3 = Slot1 --[[ @ 0]]
	Slot2 = Slot1.subscribeToModel --[[ @ 0]]
	Slot4 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	Slot2( Slot3, Slot4["Clients.clientReadyCount"], function ( f5_arg0 )
		f1_arg0:updateElementState( Slot1, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f5_arg0:get(),
			modelName = "Clients.clientReadyCount"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	Slot3 = Slot1 --[[ @ 0]]
	Slot2 = Slot1.subscribeToModel --[[ @ 0]]
	Slot4 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	Slot2( Slot3, Slot4["Clients.enemyCount"], function ( f6_arg0 )
		f1_arg0:updateElementState( Slot1, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f6_arg0:get(),
			modelName = "Clients.enemyCount"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	Slot3 = Slot1 --[[ @ 0]]
	Slot2 = Slot1.subscribeToModel --[[ @ 0]]
	Slot4 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	Slot2( Slot3, Slot4["Clients.enemiesReady"], function ( f7_arg0 )
		f1_arg0:updateElementState( Slot1, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f7_arg0:get(),
			modelName = "Clients.enemiesReady"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	Slot1.fill:setRGB( ColorSet.FriendlyBlue.r, ColorSet.FriendlyBlue.g, ColorSet.FriendlyBlue.b ) --[[ @ 0]]
	self:addElement( Slot1 ) --[[ @ 0]]
	self.Slot1 = Slot1 --[[ @ 0]]
	
	Slot2 = CoD.PositionDraft_ViewTeams_Slots.new( f1_arg0, f1_arg1, 0, 0, 111, 127, 0, 0, 2, 18 ) --[[ @ 0]]
	Slot2:mergeStateConditions( {
		{
			stateName = "Filled",
			condition = function ( menu, element, event )
				return CoD.PlayerRoleUtility.IsFriendlyTeamStatusSlotActive( self, f1_arg1, 2 )
			end
		},
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return CoD.PlayerRoleUtility.IsFriendlyTeamStatusSlotHidden( self, f1_arg1, 2 )
			end
		}
	} ) --[[ @ 0]]
	Slot4 = Slot2 --[[ @ 0]]
	Slot3 = Slot2.subscribeToModel --[[ @ 0]]
	local Slot5 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	Slot3( Slot4, Slot5["Clients.clientCount"], function ( f10_arg0 )
		f1_arg0:updateElementState( Slot2, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f10_arg0:get(),
			modelName = "Clients.clientCount"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	Slot4 = Slot2 --[[ @ 0]]
	Slot3 = Slot2.subscribeToModel --[[ @ 0]]
	Slot5 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	Slot3( Slot4, Slot5["Clients.clientReadyCount"], function ( f11_arg0 )
		f1_arg0:updateElementState( Slot2, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f11_arg0:get(),
			modelName = "Clients.clientReadyCount"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	Slot4 = Slot2 --[[ @ 0]]
	Slot3 = Slot2.subscribeToModel --[[ @ 0]]
	Slot5 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	Slot3( Slot4, Slot5["Clients.enemyCount"], function ( f12_arg0 )
		f1_arg0:updateElementState( Slot2, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f12_arg0:get(),
			modelName = "Clients.enemyCount"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	Slot4 = Slot2 --[[ @ 0]]
	Slot3 = Slot2.subscribeToModel --[[ @ 0]]
	Slot5 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	Slot3( Slot4, Slot5["Clients.enemiesReady"], function ( f13_arg0 )
		f1_arg0:updateElementState( Slot2, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f13_arg0:get(),
			modelName = "Clients.enemiesReady"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	Slot2.fill:setRGB( ColorSet.FriendlyBlue.r, ColorSet.FriendlyBlue.g, ColorSet.FriendlyBlue.b ) --[[ @ 0]]
	self:addElement( Slot2 ) --[[ @ 0]]
	self.Slot2 = Slot2 --[[ @ 0]]
	
	Slot3 = CoD.PositionDraft_ViewTeams_Slots.new( f1_arg0, f1_arg1, 0, 0, 90, 106, 0, 0, 2, 18 ) --[[ @ 0]]
	Slot3:mergeStateConditions( {
		{
			stateName = "Filled",
			condition = function ( menu, element, event )
				return CoD.PlayerRoleUtility.IsFriendlyTeamStatusSlotActive( self, f1_arg1, 3 )
			end
		},
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return CoD.PlayerRoleUtility.IsFriendlyTeamStatusSlotHidden( self, f1_arg1, 3 )
			end
		}
	} ) --[[ @ 0]]
	Slot5 = Slot3 --[[ @ 0]]
	Slot4 = Slot3.subscribeToModel --[[ @ 0]]
	local f1_local6 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	Slot4( Slot5, f1_local6["Clients.clientCount"], function ( f16_arg0 )
		f1_arg0:updateElementState( Slot3, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f16_arg0:get(),
			modelName = "Clients.clientCount"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	Slot5 = Slot3 --[[ @ 0]]
	Slot4 = Slot3.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	Slot4( Slot5, f1_local6["Clients.clientReadyCount"], function ( f17_arg0 )
		f1_arg0:updateElementState( Slot3, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f17_arg0:get(),
			modelName = "Clients.clientReadyCount"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	Slot5 = Slot3 --[[ @ 0]]
	Slot4 = Slot3.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	Slot4( Slot5, f1_local6["Clients.enemyCount"], function ( f18_arg0 )
		f1_arg0:updateElementState( Slot3, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f18_arg0:get(),
			modelName = "Clients.enemyCount"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	Slot5 = Slot3 --[[ @ 0]]
	Slot4 = Slot3.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	Slot4( Slot5, f1_local6["Clients.enemiesReady"], function ( f19_arg0 )
		f1_arg0:updateElementState( Slot3, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f19_arg0:get(),
			modelName = "Clients.enemiesReady"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	Slot3.fill:setRGB( ColorSet.FriendlyBlue.r, ColorSet.FriendlyBlue.g, ColorSet.FriendlyBlue.b ) --[[ @ 0]]
	self:addElement( Slot3 ) --[[ @ 0]]
	self.Slot3 = Slot3 --[[ @ 0]]
	
	Slot4 = CoD.PositionDraft_ViewTeams_Slots.new( f1_arg0, f1_arg1, 0, 0, 69, 85, 0, 0, 2, 18 ) --[[ @ 0]]
	Slot4:mergeStateConditions( {
		{
			stateName = "Filled",
			condition = function ( menu, element, event )
				return CoD.PlayerRoleUtility.IsFriendlyTeamStatusSlotActive( self, f1_arg1, 4 )
			end
		},
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return CoD.PlayerRoleUtility.IsFriendlyTeamStatusSlotHidden( self, f1_arg1, 4 )
			end
		}
	} ) --[[ @ 0]]
	f1_local6 = Slot4 --[[ @ 0]]
	Slot5 = Slot4.subscribeToModel --[[ @ 0]]
	local f1_local7 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	Slot5( f1_local6, f1_local7["Clients.clientCount"], function ( f22_arg0 )
		f1_arg0:updateElementState( Slot4, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f22_arg0:get(),
			modelName = "Clients.clientCount"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local6 = Slot4 --[[ @ 0]]
	Slot5 = Slot4.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	Slot5( f1_local6, f1_local7["Clients.clientReadyCount"], function ( f23_arg0 )
		f1_arg0:updateElementState( Slot4, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f23_arg0:get(),
			modelName = "Clients.clientReadyCount"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local6 = Slot4 --[[ @ 0]]
	Slot5 = Slot4.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	Slot5( f1_local6, f1_local7["Clients.enemyCount"], function ( f24_arg0 )
		f1_arg0:updateElementState( Slot4, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f24_arg0:get(),
			modelName = "Clients.enemyCount"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local6 = Slot4 --[[ @ 0]]
	Slot5 = Slot4.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	Slot5( f1_local6, f1_local7["Clients.enemiesReady"], function ( f25_arg0 )
		f1_arg0:updateElementState( Slot4, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f25_arg0:get(),
			modelName = "Clients.enemiesReady"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	Slot4.fill:setRGB( ColorSet.FriendlyBlue.r, ColorSet.FriendlyBlue.g, ColorSet.FriendlyBlue.b ) --[[ @ 0]]
	self:addElement( Slot4 ) --[[ @ 0]]
	self.Slot4 = Slot4 --[[ @ 0]]
	
	Slot5 = CoD.PositionDraft_ViewTeams_Slots.new( f1_arg0, f1_arg1, 0, 0, 48, 64, 0, 0, 2, 18 ) --[[ @ 0]]
	Slot5:mergeStateConditions( {
		{
			stateName = "Filled",
			condition = function ( menu, element, event )
				return CoD.PlayerRoleUtility.IsFriendlyTeamStatusSlotActive( self, f1_arg1, 5 )
			end
		},
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return CoD.PlayerRoleUtility.IsFriendlyTeamStatusSlotHidden( self, f1_arg1, 5 )
			end
		}
	} ) --[[ @ 0]]
	f1_local7 = Slot5 --[[ @ 0]]
	f1_local6 = Slot5.subscribeToModel --[[ @ 0]]
	local f1_local8 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local6( f1_local7, f1_local8["Clients.clientCount"], function ( f28_arg0 )
		f1_arg0:updateElementState( Slot5, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f28_arg0:get(),
			modelName = "Clients.clientCount"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = Slot5 --[[ @ 0]]
	f1_local6 = Slot5.subscribeToModel --[[ @ 0]]
	f1_local8 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local6( f1_local7, f1_local8["Clients.clientReadyCount"], function ( f29_arg0 )
		f1_arg0:updateElementState( Slot5, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f29_arg0:get(),
			modelName = "Clients.clientReadyCount"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = Slot5 --[[ @ 0]]
	f1_local6 = Slot5.subscribeToModel --[[ @ 0]]
	f1_local8 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local6( f1_local7, f1_local8["Clients.enemyCount"], function ( f30_arg0 )
		f1_arg0:updateElementState( Slot5, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f30_arg0:get(),
			modelName = "Clients.enemyCount"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = Slot5 --[[ @ 0]]
	f1_local6 = Slot5.subscribeToModel --[[ @ 0]]
	f1_local8 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local6( f1_local7, f1_local8["Clients.enemiesReady"], function ( f31_arg0 )
		f1_arg0:updateElementState( Slot5, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f31_arg0:get(),
			modelName = "Clients.enemiesReady"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	Slot5.fill:setRGB( ColorSet.FriendlyBlue.r, ColorSet.FriendlyBlue.g, ColorSet.FriendlyBlue.b ) --[[ @ 0]]
	self:addElement( Slot5 ) --[[ @ 0]]
	self.Slot5 = Slot5 --[[ @ 0]]
	
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.PositionDraft_FriendlyTeamStatusBar.__onClose = function ( f32_arg0 )
	f32_arg0.Slot1:close() --[[ @ 0]]
	f32_arg0.Slot2:close() --[[ @ 0]]
	f32_arg0.Slot3:close() --[[ @ 0]]
	f32_arg0.Slot4:close() --[[ @ 0]]
	f32_arg0.Slot5:close() --[[ @ 0]]
end
 --[[ @ 0]]
