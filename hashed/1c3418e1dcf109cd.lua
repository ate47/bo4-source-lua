-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:33
require( "x64:40c7e896ee4bc3f8" ) --[[ @ 0]]

CoD.BlackMarketTrialInfoBannerWidget = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.BlackMarketTrialInfoBannerWidget.__defaultWidth = 547 --[[ @ 0]]
CoD.BlackMarketTrialInfoBannerWidget.__defaultHeight = 35 --[[ @ 0]]
CoD.BlackMarketTrialInfoBannerWidget.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.BlackMarketTrialInfoBannerWidget ) --[[ @ 0]]
	self.id = "BlackMarketTrialInfoBannerWidget" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local TrialWidget = CoD.TrialInfoBannerWidget.new( f1_arg0, f1_arg1, 0, 0, 0, 547, 0, 0, 0, 35 ) --[[ @ 0]]
	TrialWidget:mergeStateConditions( {
		{
			stateName = "Shown",
			condition = function ( menu, element, event )
				return IsGameTrial() and AlwaysFalse()
			end
		},
		{
			stateName = "ShownWrap",
			condition = function ( menu, element, event )
				return IsGameTrial()
			end
		}
	} ) --[[ @ 0]]
	TrialWidget:linkToElementModel( self, nil, false, function ( model )
		TrialWidget:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( TrialWidget ) --[[ @ 0]]
	self.TrialWidget = TrialWidget --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Unlocked",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg1, "unlocked" )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "unlocked", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "unlocked"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.BlackMarketTrialInfoBannerWidget.__resetProperties = function ( f7_arg0 )
	f7_arg0.TrialWidget:completeAnimation() --[[ @ 0]]
	f7_arg0.TrialWidget.InfoText:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_262486486346EC3F" ) ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.BlackMarketTrialInfoBannerWidget.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f8_arg0, f8_arg1 )
			f8_arg0:__resetProperties() --[[ @ 0]]
			f8_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f8_arg0.TrialWidget:completeAnimation() --[[ @ 0]]
			f8_arg0.TrialWidget.InfoText:completeAnimation() --[[ @ 0]]
			f8_arg0.TrialWidget.InfoText:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_48C8E3A75045BE50" ) ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.TrialWidget ) --[[ @ 0]]
		end
	},
	Unlocked = {
		DefaultClip = function ( f9_arg0, f9_arg1 )
			f9_arg0:__resetProperties() --[[ @ 0]]
			f9_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.BlackMarketTrialInfoBannerWidget.__onClose = function ( f10_arg0 )
	f10_arg0.TrialWidget:close() --[[ @ 0]]
end
 --[[ @ 0]]
