-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:50
require( "x64:244642a9b881531" ) --[[ @ 0]]

CoD.ZMInvPhasedItemsContainer = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.ZMInvPhasedItemsContainer.__defaultWidth = 248 --[[ @ 0]]
CoD.ZMInvPhasedItemsContainer.__defaultHeight = 80 --[[ @ 0]]
CoD.ZMInvPhasedItemsContainer.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIHorizontalList.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9, 0, false ) --[[ @ 0]]
	self:setAlignment( LUI.Alignment.Center ) --[[ @ 0]]
	self:setClass( CoD.ZMInvPhasedItemsContainer ) --[[ @ 0]]
	self.id = "ZMInvPhasedItemsContainer" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local ItemsPhase0 = LUI.GridLayout.new( f1_arg0, f1_arg1, false, 0, 0, 2, 0, nil, nil, false, false, false, false ) --[[ @ 0]]
	ItemsPhase0:setLeftRight( 0.5, 0.5, -652, -326 ) --[[ @ 0]]
	ItemsPhase0:setTopBottom( 0, 0, 0, 80 ) --[[ @ 0]]
	ItemsPhase0:setWidgetType( CoD.ZMInvWonderWeaponComponent ) --[[ @ 0]]
	ItemsPhase0:setHorizontalCount( 4 ) --[[ @ 0]]
	ItemsPhase0:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	ItemsPhase0:setFilter( function ( f2_arg0 )
		return f2_arg0.displayedInPhase:get() == 0
	end ) --[[ @ 0]]
	ItemsPhase0:setDataSource( "ZMInventoryPhasedItemsInfo" ) --[[ @ 0]]
	self:addElement( ItemsPhase0 ) --[[ @ 0]]
	self.ItemsPhase0 = ItemsPhase0 --[[ @ 0]]
	
	local ItemsPhase1 = LUI.GridLayout.new( f1_arg0, f1_arg1, false, 0, 0, 2, 0, nil, nil, false, false, false, false ) --[[ @ 0]]
	ItemsPhase1:setLeftRight( 0.5, 0.5, -326, 0 ) --[[ @ 0]]
	ItemsPhase1:setTopBottom( 0, 0, 0, 80 ) --[[ @ 0]]
	ItemsPhase1:setAlpha( 0 ) --[[ @ 0]]
	ItemsPhase1:setWidgetType( CoD.ZMInvWonderWeaponComponent ) --[[ @ 0]]
	ItemsPhase1:setHorizontalCount( 4 ) --[[ @ 0]]
	ItemsPhase1:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	ItemsPhase1:setFilter( function ( f3_arg0 )
		return f3_arg0.displayedInPhase:get() == 1
	end ) --[[ @ 0]]
	ItemsPhase1:setDataSource( "ZMInventoryPhasedItemsInfo" ) --[[ @ 0]]
	self:addElement( ItemsPhase1 ) --[[ @ 0]]
	self.ItemsPhase1 = ItemsPhase1 --[[ @ 0]]
	
	local ItemsPhase2 = LUI.GridLayout.new( f1_arg0, f1_arg1, false, 0, 0, 2, 0, nil, nil, false, false, false, false ) --[[ @ 0]]
	ItemsPhase2:setLeftRight( 0.5, 0.5, 0, 326 ) --[[ @ 0]]
	ItemsPhase2:setTopBottom( 0, 0, 0, 80 ) --[[ @ 0]]
	ItemsPhase2:setAlpha( 0 ) --[[ @ 0]]
	ItemsPhase2:setWidgetType( CoD.ZMInvWonderWeaponComponent ) --[[ @ 0]]
	ItemsPhase2:setHorizontalCount( 4 ) --[[ @ 0]]
	ItemsPhase2:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	ItemsPhase2:setFilter( function ( f4_arg0 )
		return f4_arg0.displayedInPhase:get() == 2
	end ) --[[ @ 0]]
	ItemsPhase2:setDataSource( "ZMInventoryPhasedItemsInfo" ) --[[ @ 0]]
	self:addElement( ItemsPhase2 ) --[[ @ 0]]
	self.ItemsPhase2 = ItemsPhase2 --[[ @ 0]]
	
	local ItemsPhase3 = LUI.GridLayout.new( f1_arg0, f1_arg1, false, 0, 0, 2, 0, nil, nil, false, false, false, false ) --[[ @ 0]]
	ItemsPhase3:setLeftRight( 0.5, 0.5, 326, 652 ) --[[ @ 0]]
	ItemsPhase3:setTopBottom( 0, 0, 0, 80 ) --[[ @ 0]]
	ItemsPhase3:setAlpha( 0 ) --[[ @ 0]]
	ItemsPhase3:setWidgetType( CoD.ZMInvWonderWeaponComponent ) --[[ @ 0]]
	ItemsPhase3:setHorizontalCount( 4 ) --[[ @ 0]]
	ItemsPhase3:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	ItemsPhase3:setFilter( function ( f5_arg0 )
		return f5_arg0.displayedInPhase:get() == 3
	end ) --[[ @ 0]]
	ItemsPhase3:setDataSource( "ZMInventoryPhasedItemsInfo" ) --[[ @ 0]]
	self:addElement( ItemsPhase3 ) --[[ @ 0]]
	self.ItemsPhase3 = ItemsPhase3 --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Phase0",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualTo( self, f1_arg1, "phase", 0 )
			end
		},
		{
			stateName = "Phase1",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualTo( self, f1_arg1, "phase", 1 )
			end
		},
		{
			stateName = "Phase2",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualTo( self, f1_arg1, "phase", 2 )
			end
		},
		{
			stateName = "Phase3",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualTo( self, f1_arg1, "phase", 3 )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "phase", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "phase"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	ItemsPhase0.id = "ItemsPhase0" --[[ @ 0]]
	ItemsPhase1.id = "ItemsPhase1" --[[ @ 0]]
	ItemsPhase2.id = "ItemsPhase2" --[[ @ 0]]
	ItemsPhase3.id = "ItemsPhase3" --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.ZMInvPhasedItemsContainer.__resetProperties = function ( f11_arg0 )
	f11_arg0.ItemsPhase1:completeAnimation() --[[ @ 0]]
	f11_arg0.ItemsPhase0:completeAnimation() --[[ @ 0]]
	f11_arg0.ItemsPhase2:completeAnimation() --[[ @ 0]]
	f11_arg0.ItemsPhase3:completeAnimation() --[[ @ 0]]
	f11_arg0.ItemsPhase1:setAlpha( 0 ) --[[ @ 0]]
	f11_arg0.ItemsPhase0:setAlpha( 1 ) --[[ @ 0]]
	f11_arg0.ItemsPhase2:setAlpha( 0 ) --[[ @ 0]]
	f11_arg0.ItemsPhase3:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ZMInvPhasedItemsContainer.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f12_arg0, f12_arg1 )
			f12_arg0:__resetProperties() --[[ @ 0]]
			f12_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	Phase0 = {
		DefaultClip = function ( f13_arg0, f13_arg1 )
			f13_arg0:__resetProperties() --[[ @ 0]]
			f13_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	Phase1 = {
		DefaultClip = function ( f14_arg0, f14_arg1 )
			f14_arg0:__resetProperties() --[[ @ 0]]
			f14_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f14_arg0.ItemsPhase0:completeAnimation() --[[ @ 0]]
			f14_arg0.ItemsPhase0:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.ItemsPhase0 ) --[[ @ 0]]
			f14_arg0.ItemsPhase1:completeAnimation() --[[ @ 0]]
			f14_arg0.ItemsPhase1:setAlpha( 1 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.ItemsPhase1 ) --[[ @ 0]]
			f14_arg0.ItemsPhase2:completeAnimation() --[[ @ 0]]
			f14_arg0.ItemsPhase2:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.ItemsPhase2 ) --[[ @ 0]]
			f14_arg0.ItemsPhase3:completeAnimation() --[[ @ 0]]
			f14_arg0.ItemsPhase3:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.ItemsPhase3 ) --[[ @ 0]]
		end
	},
	Phase2 = {
		DefaultClip = function ( f15_arg0, f15_arg1 )
			f15_arg0:__resetProperties() --[[ @ 0]]
			f15_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f15_arg0.ItemsPhase0:completeAnimation() --[[ @ 0]]
			f15_arg0.ItemsPhase0:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.ItemsPhase0 ) --[[ @ 0]]
			f15_arg0.ItemsPhase1:completeAnimation() --[[ @ 0]]
			f15_arg0.ItemsPhase1:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.ItemsPhase1 ) --[[ @ 0]]
			f15_arg0.ItemsPhase2:completeAnimation() --[[ @ 0]]
			f15_arg0.ItemsPhase2:setAlpha( 1 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.ItemsPhase2 ) --[[ @ 0]]
			f15_arg0.ItemsPhase3:completeAnimation() --[[ @ 0]]
			f15_arg0.ItemsPhase3:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.ItemsPhase3 ) --[[ @ 0]]
		end
	},
	Phase3 = {
		DefaultClip = function ( f16_arg0, f16_arg1 )
			f16_arg0:__resetProperties() --[[ @ 0]]
			f16_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f16_arg0.ItemsPhase0:completeAnimation() --[[ @ 0]]
			f16_arg0.ItemsPhase0:setAlpha( 0 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.ItemsPhase0 ) --[[ @ 0]]
			f16_arg0.ItemsPhase1:completeAnimation() --[[ @ 0]]
			f16_arg0.ItemsPhase1:setAlpha( 0 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.ItemsPhase1 ) --[[ @ 0]]
			f16_arg0.ItemsPhase2:completeAnimation() --[[ @ 0]]
			f16_arg0.ItemsPhase2:setAlpha( 0 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.ItemsPhase2 ) --[[ @ 0]]
			f16_arg0.ItemsPhase3:completeAnimation() --[[ @ 0]]
			f16_arg0.ItemsPhase3:setAlpha( 1 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.ItemsPhase3 ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.ZMInvPhasedItemsContainer.__onClose = function ( f17_arg0 )
	f17_arg0.ItemsPhase0:close() --[[ @ 0]]
	f17_arg0.ItemsPhase1:close() --[[ @ 0]]
	f17_arg0.ItemsPhase2:close() --[[ @ 0]]
	f17_arg0.ItemsPhase3:close() --[[ @ 0]]
end
 --[[ @ 0]]
