-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:50
CoD.ZMAARTrialTabRoundListInternal = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.ZMAARTrialTabRoundListInternal.__defaultWidth = 388 --[[ @ 0]]
CoD.ZMAARTrialTabRoundListInternal.__defaultHeight = 635 --[[ @ 0]]
CoD.ZMAARTrialTabRoundListInternal.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.ZMAARTrialTabRoundListInternal ) --[[ @ 0]]
	self.id = "ZMAARTrialTabRoundListInternal" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local ListBg = LUI.UIImage.new( 0, 0, 0, 388, 0, 0, 68, 764 ) --[[ @ 0]]
	ListBg:setImage( RegisterImage( @"uie_trial_rules_gold_normal" ) ) --[[ @ 0]]
	self:addElement( ListBg ) --[[ @ 0]]
	self.ListBg = ListBg --[[ @ 0]]
	
	local Medal = LUI.UIImage.new( 0, 0, 148, 240, 0, 0, 64, 156 ) --[[ @ 0]]
	Medal:setAlpha( 0.9 ) --[[ @ 0]]
	Medal:setImage( RegisterImage( @"uie_trial_medal_gold" ) ) --[[ @ 0]]
	self:addElement( Medal ) --[[ @ 0]]
	self.Medal = Medal --[[ @ 0]]
	
	local MedalText = LUI.UIText.new( 0, 0, 4.5, 370.5, 0, 0, 47, 65 ) --[[ @ 0]]
	MedalText:setText( LocalizeToUpperString( @"hash_4F2A2FD2DB27D84" ) ) --[[ @ 0]]
	MedalText:setTTF( "skorzhen" ) --[[ @ 0]]
	MedalText:setLetterSpacing( 2 ) --[[ @ 0]]
	MedalText:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	MedalText:setAlignment( Enum[@"luialignment"][@"lui_alignment_bottom"] ) --[[ @ 0]]
	self:addElement( MedalText ) --[[ @ 0]]
	self.MedalText = MedalText --[[ @ 0]]
	
	local MedalAchievedText = LUI.UIText.new( 0, 0, 4.5, 370.5, 0, 0, 47, 65 ) --[[ @ 0]]
	MedalAchievedText:setAlpha( 0 ) --[[ @ 0]]
	MedalAchievedText:setText( LocalizeToUpperString( @"hash_677E29E95B5D6719" ) ) --[[ @ 0]]
	MedalAchievedText:setTTF( "skorzhen" ) --[[ @ 0]]
	MedalAchievedText:setLetterSpacing( 2 ) --[[ @ 0]]
	MedalAchievedText:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	MedalAchievedText:setAlignment( Enum[@"luialignment"][@"lui_alignment_bottom"] ) --[[ @ 0]]
	self:addElement( MedalAchievedText ) --[[ @ 0]]
	self.MedalAchievedText = MedalAchievedText --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "MedalAlreadyComplete",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsControllerModelValueGreaterThanOrEqualToSelfModelValue( element, f1_arg1, "AAR.trialStats.prevHighestRoundCompleted", "roundCompleteRequirement" )
			end
		},
		{
			stateName = "MedalReward",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsControllerModelValueGreaterThanOrEqualToSelfModelValue( element, f1_arg1, "AAR.trialStats.roundsCompleted", "roundCompleteRequirement" ) and not CoD.ModelUtility.IsControllerModelValueGreaterThanOrEqualToSelfModelValue( element, f1_arg1, "AAR.trialStats.prevHighestRoundCompleted", "roundCompleteRequirement" )
			end
		},
		{
			stateName = "MedalEmpty",
			condition = function ( menu, element, event )
				local f4_local0 --[[ @ 0]]
				if not CoD.ModelUtility.IsControllerModelValueGreaterThanOrEqualToSelfModelValue( element, f1_arg1, "AAR.trialStats.roundsCompleted", "roundCompleteRequirement" ) then
					f4_local0 = not CoD.ModelUtility.IsControllerModelValueGreaterThanOrEqualToSelfModelValue( element, f1_arg1, "AAR.trialStats.prevHighestRoundCompleted", "roundCompleteRequirement" ) --[[ @ 0]]
				else
					f4_local0 = false --[[ @ 0]]
				end
				return f4_local0
			end
		}
	} ) --[[ @ 0]]
	local f1_local5 = self --[[ @ 0]]
	local f1_local6 = self.subscribeToModel --[[ @ 0]]
	local f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local6( f1_local5, f1_local7["AAR.trialStats.prevHighestRoundCompleted"], function ( f5_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f5_arg0:get(),
			modelName = "AAR.trialStats.prevHighestRoundCompleted"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:linkToElementModel( self, "roundCompleteRequirement", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "roundCompleteRequirement"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	f1_local5 = self --[[ @ 0]]
	f1_local6 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local6( f1_local5, f1_local7["AAR.trialStats.roundsCompleted"], function ( f7_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f7_arg0:get(),
			modelName = "AAR.trialStats.roundsCompleted"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.ZMAARTrialTabRoundListInternal.__resetProperties = function ( f8_arg0 )
	f8_arg0.ListBg:completeAnimation() --[[ @ 0]]
	f8_arg0.Medal:completeAnimation() --[[ @ 0]]
	f8_arg0.MedalText:completeAnimation() --[[ @ 0]]
	f8_arg0.MedalAchievedText:completeAnimation() --[[ @ 0]]
	f8_arg0.ListBg:setTopBottom( 0, 0, 68, 764 ) --[[ @ 0]]
	f8_arg0.Medal:setAlpha( 0.9 ) --[[ @ 0]]
	f8_arg0.MedalText:setAlpha( 1 ) --[[ @ 0]]
	f8_arg0.MedalAchievedText:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ZMAARTrialTabRoundListInternal.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f9_arg0, f9_arg1 )
			f9_arg0:__resetProperties() --[[ @ 0]]
			f9_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f9_arg0.ListBg:completeAnimation() --[[ @ 0]]
			f9_arg0.ListBg:setTopBottom( 0, 0, 68, 754 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.ListBg ) --[[ @ 0]]
		end
	},
	MedalAlreadyComplete = {
		DefaultClip = function ( f10_arg0, f10_arg1 )
			f10_arg0:__resetProperties() --[[ @ 0]]
			f10_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			local f10_local0 = function ( f11_arg0 )
				f10_arg0.Medal:beginAnimation( 200, Enum[@"luitween"][@"luitween_ease_in"] ) --[[ @ 0]]
				f10_arg0.Medal:setAlpha( 1 ) --[[ @ 0]]
				f10_arg0.Medal:registerEventHandler( "interrupted_keyframe", f10_arg0.clipInterrupted ) --[[ @ 0]]
				f10_arg0.Medal:registerEventHandler( "transition_complete_keyframe", f10_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f10_arg0.Medal:completeAnimation() --[[ @ 0]]
			f10_arg0.Medal:setAlpha( 0 ) --[[ @ 0]]
			f10_local0( f10_arg0.Medal ) --[[ @ 0]]
			local f10_local1 = function ( f12_arg0 )
				local f12_local0 = function ( f13_arg0 )
					f13_arg0:beginAnimation( 200 ) --[[ @ 0]]
					f13_arg0:setAlpha( 1 ) --[[ @ 0]]
					f13_arg0:registerEventHandler( "transition_complete_keyframe", f10_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f10_arg0.MedalText:beginAnimation( 200 ) --[[ @ 0]]
				f10_arg0.MedalText:registerEventHandler( "interrupted_keyframe", f10_arg0.clipInterrupted ) --[[ @ 0]]
				f10_arg0.MedalText:registerEventHandler( "transition_complete_keyframe", f12_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f10_arg0.MedalText:completeAnimation() --[[ @ 0]]
			f10_arg0.MedalText:setAlpha( 0 ) --[[ @ 0]]
			f10_local1( f10_arg0.MedalText ) --[[ @ 0]]
		end
	},
	MedalReward = {
		DefaultClip = function ( f14_arg0, f14_arg1 )
			f14_arg0:__resetProperties() --[[ @ 0]]
			f14_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			local f14_local0 = function ( f15_arg0 )
				f14_arg0.Medal:beginAnimation( 200, Enum[@"luitween"][@"luitween_ease_in"] ) --[[ @ 0]]
				f14_arg0.Medal:setAlpha( 1 ) --[[ @ 0]]
				f14_arg0.Medal:registerEventHandler( "interrupted_keyframe", f14_arg0.clipInterrupted ) --[[ @ 0]]
				f14_arg0.Medal:registerEventHandler( "transition_complete_keyframe", f14_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f14_arg0.Medal:completeAnimation() --[[ @ 0]]
			f14_arg0.Medal:setAlpha( 0 ) --[[ @ 0]]
			f14_local0( f14_arg0.Medal ) --[[ @ 0]]
			f14_arg0.MedalText:completeAnimation() --[[ @ 0]]
			f14_arg0.MedalText:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.MedalText ) --[[ @ 0]]
			local f14_local1 = function ( f16_arg0 )
				local f16_local0 = function ( f17_arg0 )
					f17_arg0:beginAnimation( 200 ) --[[ @ 0]]
					f17_arg0:setAlpha( 1 ) --[[ @ 0]]
					f17_arg0:registerEventHandler( "transition_complete_keyframe", f14_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f14_arg0.MedalAchievedText:beginAnimation( 200 ) --[[ @ 0]]
				f14_arg0.MedalAchievedText:registerEventHandler( "interrupted_keyframe", f14_arg0.clipInterrupted ) --[[ @ 0]]
				f14_arg0.MedalAchievedText:registerEventHandler( "transition_complete_keyframe", f16_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f14_arg0.MedalAchievedText:completeAnimation() --[[ @ 0]]
			f14_arg0.MedalAchievedText:setAlpha( 0 ) --[[ @ 0]]
			f14_local1( f14_arg0.MedalAchievedText ) --[[ @ 0]]
		end
	},
	MedalEmpty = {
		DefaultClip = function ( f18_arg0, f18_arg1 )
			f18_arg0:__resetProperties() --[[ @ 0]]
			f18_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			local f18_local0 = function ( f19_arg0 )
				f18_arg0.Medal:beginAnimation( 200, Enum[@"luitween"][@"luitween_bounce"] | Enum[@"luitween"][@"luitween_ease_in"] ) --[[ @ 0]]
				f18_arg0.Medal:setAlpha( 0.5 ) --[[ @ 0]]
				f18_arg0.Medal:registerEventHandler( "interrupted_keyframe", f18_arg0.clipInterrupted ) --[[ @ 0]]
				f18_arg0.Medal:registerEventHandler( "transition_complete_keyframe", f18_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f18_arg0.Medal:completeAnimation() --[[ @ 0]]
			f18_arg0.Medal:setAlpha( 0 ) --[[ @ 0]]
			f18_local0( f18_arg0.Medal ) --[[ @ 0]]
			local f18_local1 = function ( f20_arg0 )
				local f20_local0 = function ( f21_arg0 )
					f21_arg0:beginAnimation( 200 ) --[[ @ 0]]
					f21_arg0:setAlpha( 0.3 ) --[[ @ 0]]
					f21_arg0:registerEventHandler( "transition_complete_keyframe", f18_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f18_arg0.MedalText:beginAnimation( 200 ) --[[ @ 0]]
				f18_arg0.MedalText:registerEventHandler( "interrupted_keyframe", f18_arg0.clipInterrupted ) --[[ @ 0]]
				f18_arg0.MedalText:registerEventHandler( "transition_complete_keyframe", f20_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f18_arg0.MedalText:completeAnimation() --[[ @ 0]]
			f18_arg0.MedalText:setAlpha( 0 ) --[[ @ 0]]
			f18_local1( f18_arg0.MedalText ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
