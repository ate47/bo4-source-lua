-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:50
require( "ui/uieditor/widgets/onoffvoip" ) --[[ @ 0]]
require( "ui/uieditor/widgets/scoreboard/tabbedscoreboardrank" ) --[[ @ 0]]
require( "x64:5491097212c15f08" ) --[[ @ 0]]
require( "x64:ecec7cd2267c681" ) --[[ @ 0]]
require( "x64:61ef3663f11c21fa" ) --[[ @ 0]]

CoD.ScoreboardRowZM = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.ScoreboardRowZM.__defaultWidth = 888 --[[ @ 0]]
CoD.ScoreboardRowZM.__defaultHeight = 68 --[[ @ 0]]
CoD.ScoreboardRowZM.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.ScoreboardRowZM ) --[[ @ 0]]
	self.id = "ScoreboardRowZM" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local Base = CoD.ScoreboardRowBackgroundZM.new( f1_arg0, f1_arg1, 0.5, 0.5, -444, 444, 0.5, 0.5, -30, 30 ) --[[ @ 0]]
	Base.Base:setAlpha( 0.5 ) --[[ @ 0]]
	Base.TextureMid:setAlpha( 0.8 ) --[[ @ 0]]
	self:addElement( Base ) --[[ @ 0]]
	self.Base = Base --[[ @ 0]]
	
	local SelectorOverlay = CoD.ScoreboardRowBackgroundZM.new( f1_arg0, f1_arg1, 0.5, 0.5, -444, 444, 0.5, 0.5, -30, 30 ) --[[ @ 0]]
	SelectorOverlay:setRFTMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	SelectorOverlay.Base:setRGB( 1, 1, 1 ) --[[ @ 0]]
	SelectorOverlay.Base:setAlpha( 0 ) --[[ @ 0]]
	SelectorOverlay.TextureMid:setAlpha( 0 ) --[[ @ 0]]
	SelectorOverlay.TextureTip:setAlpha( 0 ) --[[ @ 0]]
	SelectorOverlay.TextureEnd:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( SelectorOverlay ) --[[ @ 0]]
	self.SelectorOverlay = SelectorOverlay --[[ @ 0]]
	
	local InformationList = CoD.ScoreboardRowInformationList.new( f1_arg0, f1_arg1, 0.5, 0.5, -382, 418, 0.5, 0.5, -30, 30 ) --[[ @ 0]]
	InformationList:linkToElementModel( self, nil, false, function ( model )
		InformationList:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( InformationList ) --[[ @ 0]]
	self.InformationList = InformationList --[[ @ 0]]
	
	local FrameTip = LUI.UIImage.new( 0, 0, -85, 55, 0.5, 0.5, -46.5, 46.5 ) --[[ @ 0]]
	FrameTip:setImage( RegisterImage( @"uie_zm_hud_scoreboard_frame_tip" ) ) --[[ @ 0]]
	self:addElement( FrameTip ) --[[ @ 0]]
	self.FrameTip = FrameTip --[[ @ 0]]
	
	local FrameEnd = LUI.UIImage.new( 0, 0, 830.5, 936.5, 0.5, 0.5, -46.5, 46.5 ) --[[ @ 0]]
	FrameEnd:setImage( RegisterImage( @"uie_zm_hud_scoreboard_frame_end" ) ) --[[ @ 0]]
	self:addElement( FrameEnd ) --[[ @ 0]]
	self.FrameEnd = FrameEnd --[[ @ 0]]
	
	local playerPing = nil --[[ @ 0]]
	
	playerPing = LUI.UIText.new( 0, 0, 62, 140, 0, 0, 42, 57 ) --[[ @ 0]]
	playerPing:setAlpha( 0.75 ) --[[ @ 0]]
	playerPing:setTTF( "skorzhen" ) --[[ @ 0]]
	playerPing:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	playerPing:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	playerPing:linkToElementModel( self, "ping", true, function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			playerPing:setText( CoD.ScoreboardUtility.UpdatePingValue( self, 0.5, self:getModel(), f3_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( playerPing ) --[[ @ 0]]
	self.playerPing = playerPing --[[ @ 0]]
	
	local Rank = CoD.TabbedScoreboardRank.new( f1_arg0, f1_arg1, 0, 0, 7.5, 53.5, 0.5, 0.5, -26, 34 ) --[[ @ 0]]
	Rank:linkToElementModel( self, nil, false, function ( model )
		Rank:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( Rank ) --[[ @ 0]]
	self.Rank = Rank --[[ @ 0]]
	
	local VoipWaves = CoD.OnOffVoip.new( f1_arg0, f1_arg1, 0, 0, -128, -67, 0, 0, 23, 45 ) --[[ @ 0]]
	VoipWaves:setZRot( 90 ) --[[ @ 0]]
	VoipWaves:linkToElementModel( self, nil, false, function ( model )
		VoipWaves:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( VoipWaves ) --[[ @ 0]]
	self.VoipWaves = VoipWaves --[[ @ 0]]
	
	local ZombiesPortrait = CoD.ZombiesPortrait.new( f1_arg0, f1_arg1, 0, 0, -80, 0, 0, 0, -6, 74 ) --[[ @ 0]]
	ZombiesPortrait:setRFTMaterial( LUI.UIImage.GetCachedMaterial( @"hash_2D79DB5C45AD6024" ) ) --[[ @ 0]]
	ZombiesPortrait:setShaderVector( 0, 34, 6, 0, 0 ) --[[ @ 0]]
	ZombiesPortrait:setShaderVector( 1, 80, 80, 0, 0 ) --[[ @ 0]]
	ZombiesPortrait:setShaderVector( 2, 0, 0.05, 0, 0 ) --[[ @ 0]]
	ZombiesPortrait.Portrait:setShaderVector( 0, 0.4, 0, 0, 0 ) --[[ @ 0]]
	ZombiesPortrait:linkToElementModel( self, nil, false, function ( model )
		ZombiesPortrait:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	ZombiesPortrait:linkToElementModel( self, "scoreboard.characterIndex", true, function ( model )
		local f7_local0 = model:get() --[[ @ 0]]
		if f7_local0 ~= nil then
			ZombiesPortrait.Portrait:setImage( RegisterImage( GetPositionDraftIconByIndex( f7_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( ZombiesPortrait ) --[[ @ 0]]
	self.ZombiesPortrait = ZombiesPortrait --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Self_KoreanZHT",
			condition = function ( menu, element, event )
				local f8_local0 = IsSelfClient( f1_arg1, element ) --[[ @ 0]]
				if f8_local0 then
					f8_local0 = IsCurrentLanguageKoreanOrTraditionalChinese() --[[ @ 0]]
					if f8_local0 then
						f8_local0 = IsPC() --[[ @ 0]]
					end
				end
				return f8_local0
			end
		},
		{
			stateName = "DefaultState_KoreanZHT",
			condition = function ( menu, element, event )
				return IsCurrentLanguageKoreanOrTraditionalChinese() and IsPC()
			end
		},
		{
			stateName = "Self",
			condition = function ( menu, element, event )
				return IsScoreboardPlayerSelf( element, f1_arg1 )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "clientNum", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "clientNum"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local f1_local10 = self --[[ @ 0]]
	local f1_local11 = self.subscribeToModel --[[ @ 0]]
	local f1_local12 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local11( f1_local10, f1_local12["deadSpectator.playerIndex"], function ( f12_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f12_arg0:get(),
			modelName = "deadSpectator.playerIndex"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local10 = self --[[ @ 0]]
	f1_local11 = self.subscribeToModel --[[ @ 0]]
	f1_local12 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local11( f1_local10, f1_local12["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_game_ended"]], function ( f13_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f13_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_game_ended"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:linkToElementModel( self, nil, true, function ( model )
		CoD.DirectorUtility.UpdateVOIPStatusForModel( self, model, "clientNum" ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PreLoadFunc then
		PreLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	f1_local11 = self --[[ @ 0]]
	if IsPC() then
		CoD.PCWidgetUtility.SetupRightClickableContextualPlayerMenuScoreboard( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	return self
end
 --[[ @ 0]]
CoD.ScoreboardRowZM.__resetProperties = function ( f15_arg0 )
	f15_arg0.SelectorOverlay:completeAnimation() --[[ @ 0]]
	f15_arg0.playerPing:completeAnimation() --[[ @ 0]]
	f15_arg0.InformationList:completeAnimation() --[[ @ 0]]
	f15_arg0.SelectorOverlay.Base:setAlpha( 0 ) --[[ @ 0]]
	f15_arg0.playerPing:setTopBottom( 0, 0, 42, 57 ) --[[ @ 0]]
	f15_arg0.playerPing:setRGB( 1, 1, 1 ) --[[ @ 0]]
	f15_arg0.InformationList:setTopBottom( 0.5, 0.5, -30, 30 ) --[[ @ 0]]
	f15_arg0.InformationList.ClanAndGamerName:setRGB( 0.92, 0.92, 0.92 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ScoreboardRowZM.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f16_arg0, f16_arg1 )
			f16_arg0:__resetProperties() --[[ @ 0]]
			f16_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end,
		Focus = function ( f17_arg0, f17_arg1 )
			f17_arg0:__resetProperties() --[[ @ 0]]
			f17_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f17_arg0.SelectorOverlay:completeAnimation() --[[ @ 0]]
			f17_arg0.SelectorOverlay.Base:completeAnimation() --[[ @ 0]]
			f17_arg0.SelectorOverlay.Base:setAlpha( 0.02 ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.SelectorOverlay ) --[[ @ 0]]
		end,
		GainFocus = function ( f18_arg0, f18_arg1 )
			f18_arg0:__resetProperties() --[[ @ 0]]
			f18_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f18_local0 = function ( f19_arg0 )
				f18_arg0.SelectorOverlay:beginAnimation( 150 ) --[[ @ 0]]
				f18_arg0.SelectorOverlay.Base:beginAnimation( 150 ) --[[ @ 0]]
				f18_arg0.SelectorOverlay.Base:setAlpha( 0.02 ) --[[ @ 0]]
				f18_arg0.SelectorOverlay:registerEventHandler( "interrupted_keyframe", f18_arg0.clipInterrupted ) --[[ @ 0]]
				f18_arg0.SelectorOverlay:registerEventHandler( "transition_complete_keyframe", f18_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f18_arg0.SelectorOverlay:completeAnimation() --[[ @ 0]]
			f18_arg0.SelectorOverlay.Base:completeAnimation() --[[ @ 0]]
			f18_arg0.SelectorOverlay.Base:setAlpha( 0 ) --[[ @ 0]]
			f18_local0( f18_arg0.SelectorOverlay ) --[[ @ 0]]
		end,
		LoseFocus = function ( f20_arg0, f20_arg1 )
			f20_arg0:__resetProperties() --[[ @ 0]]
			f20_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f20_local0 = function ( f21_arg0 )
				f20_arg0.SelectorOverlay:beginAnimation( 150 ) --[[ @ 0]]
				f20_arg0.SelectorOverlay.Base:beginAnimation( 150 ) --[[ @ 0]]
				f20_arg0.SelectorOverlay.Base:setAlpha( 0 ) --[[ @ 0]]
				f20_arg0.SelectorOverlay:registerEventHandler( "interrupted_keyframe", f20_arg0.clipInterrupted ) --[[ @ 0]]
				f20_arg0.SelectorOverlay:registerEventHandler( "transition_complete_keyframe", f20_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f20_arg0.SelectorOverlay:completeAnimation() --[[ @ 0]]
			f20_arg0.SelectorOverlay.Base:completeAnimation() --[[ @ 0]]
			f20_arg0.SelectorOverlay.Base:setAlpha( 0.02 ) --[[ @ 0]]
			f20_local0( f20_arg0.SelectorOverlay ) --[[ @ 0]]
		end
	},
	Self_KoreanZHT = {
		DefaultClip = function ( f22_arg0, f22_arg1 )
			f22_arg0:__resetProperties() --[[ @ 0]]
			f22_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f22_arg0.InformationList:completeAnimation() --[[ @ 0]]
			f22_arg0.InformationList.ClanAndGamerName:completeAnimation() --[[ @ 0]]
			f22_arg0.InformationList:setTopBottom( 0.5, 0.5, -38, 22 ) --[[ @ 0]]
			f22_arg0.InformationList.ClanAndGamerName:setRGB( ColorSet.T8__OCHRE.r, ColorSet.T8__OCHRE.g, ColorSet.T8__OCHRE.b ) --[[ @ 0]]
			f22_arg0.clipFinished( f22_arg0.InformationList ) --[[ @ 0]]
			f22_arg0.playerPing:completeAnimation() --[[ @ 0]]
			f22_arg0.playerPing:setTopBottom( 0.5, 0.5, 9, 24 ) --[[ @ 0]]
			f22_arg0.playerPing:setRGB( 0.89, 0.64, 0 ) --[[ @ 0]]
			f22_arg0.clipFinished( f22_arg0.playerPing ) --[[ @ 0]]
		end,
		Focus = function ( f23_arg0, f23_arg1 )
			f23_arg0:__resetProperties() --[[ @ 0]]
			f23_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f23_arg0.SelectorOverlay:completeAnimation() --[[ @ 0]]
			f23_arg0.SelectorOverlay.Base:completeAnimation() --[[ @ 0]]
			f23_arg0.SelectorOverlay.Base:setAlpha( 0.02 ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.SelectorOverlay ) --[[ @ 0]]
			f23_arg0.InformationList:completeAnimation() --[[ @ 0]]
			f23_arg0.InformationList.ClanAndGamerName:completeAnimation() --[[ @ 0]]
			f23_arg0.InformationList:setTopBottom( 0.5, 0.5, -38, 22 ) --[[ @ 0]]
			f23_arg0.InformationList.ClanAndGamerName:setRGB( ColorSet.T8__OCHRE.r, ColorSet.T8__OCHRE.g, ColorSet.T8__OCHRE.b ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.InformationList ) --[[ @ 0]]
			f23_arg0.playerPing:completeAnimation() --[[ @ 0]]
			f23_arg0.playerPing:setTopBottom( 0.5, 0.5, 9, 24 ) --[[ @ 0]]
			f23_arg0.playerPing:setRGB( ColorSet.T8_FactionTier_InProgress.r, ColorSet.T8_FactionTier_InProgress.g, ColorSet.T8_FactionTier_InProgress.b ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.playerPing ) --[[ @ 0]]
		end,
		GainFocus = function ( f24_arg0, f24_arg1 )
			f24_arg0:__resetProperties() --[[ @ 0]]
			f24_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			local f24_local0 = function ( f25_arg0 )
				f24_arg0.SelectorOverlay:beginAnimation( 150 ) --[[ @ 0]]
				f24_arg0.SelectorOverlay.Base:beginAnimation( 150 ) --[[ @ 0]]
				f24_arg0.SelectorOverlay.Base:setAlpha( 0.02 ) --[[ @ 0]]
				f24_arg0.SelectorOverlay:registerEventHandler( "interrupted_keyframe", f24_arg0.clipInterrupted ) --[[ @ 0]]
				f24_arg0.SelectorOverlay:registerEventHandler( "transition_complete_keyframe", f24_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f24_arg0.SelectorOverlay:completeAnimation() --[[ @ 0]]
			f24_arg0.SelectorOverlay.Base:completeAnimation() --[[ @ 0]]
			f24_arg0.SelectorOverlay.Base:setAlpha( 0 ) --[[ @ 0]]
			f24_local0( f24_arg0.SelectorOverlay ) --[[ @ 0]]
			f24_arg0.InformationList:completeAnimation() --[[ @ 0]]
			f24_arg0.InformationList.ClanAndGamerName:completeAnimation() --[[ @ 0]]
			f24_arg0.InformationList:setTopBottom( 0.5, 0.5, -38, 22 ) --[[ @ 0]]
			f24_arg0.InformationList.ClanAndGamerName:setRGB( ColorSet.T8__OCHRE.r, ColorSet.T8__OCHRE.g, ColorSet.T8__OCHRE.b ) --[[ @ 0]]
			f24_arg0.clipFinished( f24_arg0.InformationList ) --[[ @ 0]]
			f24_arg0.playerPing:completeAnimation() --[[ @ 0]]
			f24_arg0.playerPing:setTopBottom( 0.5, 0.5, 9, 24 ) --[[ @ 0]]
			f24_arg0.playerPing:setRGB( ColorSet.T8_FactionTier_InProgress.r, ColorSet.T8_FactionTier_InProgress.g, ColorSet.T8_FactionTier_InProgress.b ) --[[ @ 0]]
			f24_arg0.clipFinished( f24_arg0.playerPing ) --[[ @ 0]]
		end,
		LoseFocus = function ( f26_arg0, f26_arg1 )
			f26_arg0:__resetProperties() --[[ @ 0]]
			f26_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			local f26_local0 = function ( f27_arg0 )
				f26_arg0.SelectorOverlay:beginAnimation( 150 ) --[[ @ 0]]
				f26_arg0.SelectorOverlay.Base:beginAnimation( 150 ) --[[ @ 0]]
				f26_arg0.SelectorOverlay.Base:setAlpha( 0 ) --[[ @ 0]]
				f26_arg0.SelectorOverlay:registerEventHandler( "interrupted_keyframe", f26_arg0.clipInterrupted ) --[[ @ 0]]
				f26_arg0.SelectorOverlay:registerEventHandler( "transition_complete_keyframe", f26_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f26_arg0.SelectorOverlay:completeAnimation() --[[ @ 0]]
			f26_arg0.SelectorOverlay.Base:completeAnimation() --[[ @ 0]]
			f26_arg0.SelectorOverlay.Base:setAlpha( 0.02 ) --[[ @ 0]]
			f26_local0( f26_arg0.SelectorOverlay ) --[[ @ 0]]
			f26_arg0.InformationList:completeAnimation() --[[ @ 0]]
			f26_arg0.InformationList.ClanAndGamerName:completeAnimation() --[[ @ 0]]
			f26_arg0.InformationList:setTopBottom( 0.5, 0.5, -38, 22 ) --[[ @ 0]]
			f26_arg0.InformationList.ClanAndGamerName:setRGB( ColorSet.T8__OCHRE.r, ColorSet.T8__OCHRE.g, ColorSet.T8__OCHRE.b ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.InformationList ) --[[ @ 0]]
			f26_arg0.playerPing:completeAnimation() --[[ @ 0]]
			f26_arg0.playerPing:setTopBottom( 0.5, 0.5, 9, 24 ) --[[ @ 0]]
			f26_arg0.playerPing:setRGB( ColorSet.T8_FactionTier_InProgress.r, ColorSet.T8_FactionTier_InProgress.g, ColorSet.T8_FactionTier_InProgress.b ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.playerPing ) --[[ @ 0]]
		end
	},
	DefaultState_KoreanZHT = {
		DefaultClip = function ( f28_arg0, f28_arg1 )
			f28_arg0:__resetProperties() --[[ @ 0]]
			f28_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f28_arg0.InformationList:completeAnimation() --[[ @ 0]]
			f28_arg0.InformationList:setTopBottom( 0.5, 0.5, -38, 22 ) --[[ @ 0]]
			f28_arg0.clipFinished( f28_arg0.InformationList ) --[[ @ 0]]
			f28_arg0.playerPing:completeAnimation() --[[ @ 0]]
			f28_arg0.playerPing:setTopBottom( 0.5, 0.5, 9, 24 ) --[[ @ 0]]
			f28_arg0.clipFinished( f28_arg0.playerPing ) --[[ @ 0]]
		end,
		Focus = function ( f29_arg0, f29_arg1 )
			f29_arg0:__resetProperties() --[[ @ 0]]
			f29_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f29_arg0.SelectorOverlay:completeAnimation() --[[ @ 0]]
			f29_arg0.SelectorOverlay.Base:completeAnimation() --[[ @ 0]]
			f29_arg0.SelectorOverlay.Base:setAlpha( 0.02 ) --[[ @ 0]]
			f29_arg0.clipFinished( f29_arg0.SelectorOverlay ) --[[ @ 0]]
			f29_arg0.InformationList:completeAnimation() --[[ @ 0]]
			f29_arg0.InformationList:setTopBottom( 0.5, 0.5, -38, 22 ) --[[ @ 0]]
			f29_arg0.clipFinished( f29_arg0.InformationList ) --[[ @ 0]]
			f29_arg0.playerPing:completeAnimation() --[[ @ 0]]
			f29_arg0.playerPing:setTopBottom( 0.5, 0.5, 9, 24 ) --[[ @ 0]]
			f29_arg0.clipFinished( f29_arg0.playerPing ) --[[ @ 0]]
		end,
		GainFocus = function ( f30_arg0, f30_arg1 )
			f30_arg0:__resetProperties() --[[ @ 0]]
			f30_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			local f30_local0 = function ( f31_arg0 )
				f30_arg0.SelectorOverlay:beginAnimation( 150 ) --[[ @ 0]]
				f30_arg0.SelectorOverlay.Base:beginAnimation( 150 ) --[[ @ 0]]
				f30_arg0.SelectorOverlay.Base:setAlpha( 0.02 ) --[[ @ 0]]
				f30_arg0.SelectorOverlay:registerEventHandler( "interrupted_keyframe", f30_arg0.clipInterrupted ) --[[ @ 0]]
				f30_arg0.SelectorOverlay:registerEventHandler( "transition_complete_keyframe", f30_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f30_arg0.SelectorOverlay:completeAnimation() --[[ @ 0]]
			f30_arg0.SelectorOverlay.Base:completeAnimation() --[[ @ 0]]
			f30_arg0.SelectorOverlay.Base:setAlpha( 0 ) --[[ @ 0]]
			f30_local0( f30_arg0.SelectorOverlay ) --[[ @ 0]]
			f30_arg0.InformationList:completeAnimation() --[[ @ 0]]
			f30_arg0.InformationList:setTopBottom( 0.5, 0.5, -38, 22 ) --[[ @ 0]]
			f30_arg0.clipFinished( f30_arg0.InformationList ) --[[ @ 0]]
			f30_arg0.playerPing:completeAnimation() --[[ @ 0]]
			f30_arg0.playerPing:setTopBottom( 0.5, 0.5, 9, 24 ) --[[ @ 0]]
			f30_arg0.clipFinished( f30_arg0.playerPing ) --[[ @ 0]]
		end,
		LoseFocus = function ( f32_arg0, f32_arg1 )
			f32_arg0:__resetProperties() --[[ @ 0]]
			f32_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			local f32_local0 = function ( f33_arg0 )
				f32_arg0.SelectorOverlay:beginAnimation( 150 ) --[[ @ 0]]
				f32_arg0.SelectorOverlay.Base:beginAnimation( 150 ) --[[ @ 0]]
				f32_arg0.SelectorOverlay.Base:setAlpha( 0 ) --[[ @ 0]]
				f32_arg0.SelectorOverlay:registerEventHandler( "interrupted_keyframe", f32_arg0.clipInterrupted ) --[[ @ 0]]
				f32_arg0.SelectorOverlay:registerEventHandler( "transition_complete_keyframe", f32_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f32_arg0.SelectorOverlay:completeAnimation() --[[ @ 0]]
			f32_arg0.SelectorOverlay.Base:completeAnimation() --[[ @ 0]]
			f32_arg0.SelectorOverlay.Base:setAlpha( 0.02 ) --[[ @ 0]]
			f32_local0( f32_arg0.SelectorOverlay ) --[[ @ 0]]
			f32_arg0.InformationList:completeAnimation() --[[ @ 0]]
			f32_arg0.InformationList:setTopBottom( 0.5, 0.5, -38, 22 ) --[[ @ 0]]
			f32_arg0.clipFinished( f32_arg0.InformationList ) --[[ @ 0]]
			f32_arg0.playerPing:completeAnimation() --[[ @ 0]]
			f32_arg0.playerPing:setTopBottom( 0.5, 0.5, 9, 24 ) --[[ @ 0]]
			f32_arg0.clipFinished( f32_arg0.playerPing ) --[[ @ 0]]
		end
	},
	Self = {
		DefaultClip = function ( f34_arg0, f34_arg1 )
			f34_arg0:__resetProperties() --[[ @ 0]]
			f34_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f34_arg0.InformationList:completeAnimation() --[[ @ 0]]
			f34_arg0.InformationList.ClanAndGamerName:completeAnimation() --[[ @ 0]]
			f34_arg0.InformationList.ClanAndGamerName:setRGB( ColorSet.T8__OCHRE.r, ColorSet.T8__OCHRE.g, ColorSet.T8__OCHRE.b ) --[[ @ 0]]
			f34_arg0.clipFinished( f34_arg0.InformationList ) --[[ @ 0]]
			f34_arg0.playerPing:completeAnimation() --[[ @ 0]]
			f34_arg0.playerPing:setRGB( 0.89, 0.64, 0 ) --[[ @ 0]]
			f34_arg0.clipFinished( f34_arg0.playerPing ) --[[ @ 0]]
		end,
		Focus = function ( f35_arg0, f35_arg1 )
			f35_arg0:__resetProperties() --[[ @ 0]]
			f35_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f35_arg0.SelectorOverlay:completeAnimation() --[[ @ 0]]
			f35_arg0.SelectorOverlay.Base:completeAnimation() --[[ @ 0]]
			f35_arg0.SelectorOverlay.Base:setAlpha( 0.02 ) --[[ @ 0]]
			f35_arg0.clipFinished( f35_arg0.SelectorOverlay ) --[[ @ 0]]
			f35_arg0.InformationList:completeAnimation() --[[ @ 0]]
			f35_arg0.InformationList.ClanAndGamerName:completeAnimation() --[[ @ 0]]
			f35_arg0.InformationList.ClanAndGamerName:setRGB( ColorSet.T8__OCHRE.r, ColorSet.T8__OCHRE.g, ColorSet.T8__OCHRE.b ) --[[ @ 0]]
			f35_arg0.clipFinished( f35_arg0.InformationList ) --[[ @ 0]]
			f35_arg0.playerPing:completeAnimation() --[[ @ 0]]
			f35_arg0.playerPing:setRGB( ColorSet.T8_FactionTier_InProgress.r, ColorSet.T8_FactionTier_InProgress.g, ColorSet.T8_FactionTier_InProgress.b ) --[[ @ 0]]
			f35_arg0.clipFinished( f35_arg0.playerPing ) --[[ @ 0]]
		end,
		GainFocus = function ( f36_arg0, f36_arg1 )
			f36_arg0:__resetProperties() --[[ @ 0]]
			f36_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			local f36_local0 = function ( f37_arg0 )
				f36_arg0.SelectorOverlay:beginAnimation( 150 ) --[[ @ 0]]
				f36_arg0.SelectorOverlay.Base:beginAnimation( 150 ) --[[ @ 0]]
				f36_arg0.SelectorOverlay.Base:setAlpha( 0.02 ) --[[ @ 0]]
				f36_arg0.SelectorOverlay:registerEventHandler( "interrupted_keyframe", f36_arg0.clipInterrupted ) --[[ @ 0]]
				f36_arg0.SelectorOverlay:registerEventHandler( "transition_complete_keyframe", f36_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f36_arg0.SelectorOverlay:completeAnimation() --[[ @ 0]]
			f36_arg0.SelectorOverlay.Base:completeAnimation() --[[ @ 0]]
			f36_arg0.SelectorOverlay.Base:setAlpha( 0 ) --[[ @ 0]]
			f36_local0( f36_arg0.SelectorOverlay ) --[[ @ 0]]
			f36_arg0.InformationList:completeAnimation() --[[ @ 0]]
			f36_arg0.InformationList.ClanAndGamerName:completeAnimation() --[[ @ 0]]
			f36_arg0.InformationList.ClanAndGamerName:setRGB( ColorSet.T8__OCHRE.r, ColorSet.T8__OCHRE.g, ColorSet.T8__OCHRE.b ) --[[ @ 0]]
			f36_arg0.clipFinished( f36_arg0.InformationList ) --[[ @ 0]]
			f36_arg0.playerPing:completeAnimation() --[[ @ 0]]
			f36_arg0.playerPing:setRGB( ColorSet.T8_FactionTier_InProgress.r, ColorSet.T8_FactionTier_InProgress.g, ColorSet.T8_FactionTier_InProgress.b ) --[[ @ 0]]
			f36_arg0.clipFinished( f36_arg0.playerPing ) --[[ @ 0]]
		end,
		LoseFocus = function ( f38_arg0, f38_arg1 )
			f38_arg0:__resetProperties() --[[ @ 0]]
			f38_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			local f38_local0 = function ( f39_arg0 )
				f38_arg0.SelectorOverlay:beginAnimation( 150 ) --[[ @ 0]]
				f38_arg0.SelectorOverlay.Base:beginAnimation( 150 ) --[[ @ 0]]
				f38_arg0.SelectorOverlay.Base:setAlpha( 0 ) --[[ @ 0]]
				f38_arg0.SelectorOverlay:registerEventHandler( "interrupted_keyframe", f38_arg0.clipInterrupted ) --[[ @ 0]]
				f38_arg0.SelectorOverlay:registerEventHandler( "transition_complete_keyframe", f38_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f38_arg0.SelectorOverlay:completeAnimation() --[[ @ 0]]
			f38_arg0.SelectorOverlay.Base:completeAnimation() --[[ @ 0]]
			f38_arg0.SelectorOverlay.Base:setAlpha( 0.02 ) --[[ @ 0]]
			f38_local0( f38_arg0.SelectorOverlay ) --[[ @ 0]]
			f38_arg0.InformationList:completeAnimation() --[[ @ 0]]
			f38_arg0.InformationList.ClanAndGamerName:completeAnimation() --[[ @ 0]]
			f38_arg0.InformationList.ClanAndGamerName:setRGB( ColorSet.T8__OCHRE.r, ColorSet.T8__OCHRE.g, ColorSet.T8__OCHRE.b ) --[[ @ 0]]
			f38_arg0.clipFinished( f38_arg0.InformationList ) --[[ @ 0]]
			f38_arg0.playerPing:completeAnimation() --[[ @ 0]]
			f38_arg0.playerPing:setRGB( ColorSet.T8_FactionTier_InProgress.r, ColorSet.T8_FactionTier_InProgress.g, ColorSet.T8_FactionTier_InProgress.b ) --[[ @ 0]]
			f38_arg0.clipFinished( f38_arg0.playerPing ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.ScoreboardRowZM.__onClose = function ( f40_arg0 )
	f40_arg0.Base:close() --[[ @ 0]]
	f40_arg0.SelectorOverlay:close() --[[ @ 0]]
	f40_arg0.InformationList:close() --[[ @ 0]]
	f40_arg0.playerPing:close() --[[ @ 0]]
	f40_arg0.Rank:close() --[[ @ 0]]
	f40_arg0.VoipWaves:close() --[[ @ 0]]
	f40_arg0.ZombiesPortrait:close() --[[ @ 0]]
end
 --[[ @ 0]]
