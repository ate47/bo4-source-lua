-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:49
require( "x64:186addcd8b941876" ) --[[ @ 0]]
require( "x64:7b850fac3ef8b863" ) --[[ @ 0]]
require( "x64:314da682871bc56e" ) --[[ @ 0]]
require( "x64:76dfdc4f59440b7c" ) --[[ @ 0]]

CoD.ClassMiniPreview = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.ClassMiniPreview.__defaultWidth = 1400 --[[ @ 0]]
CoD.ClassMiniPreview.__defaultHeight = 80 --[[ @ 0]]
CoD.ClassMiniPreview.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIHorizontalList.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9, 0, false ) --[[ @ 0]]
	self:setAlignment( LUI.Alignment.Center ) --[[ @ 0]]
	self:setClass( CoD.ClassMiniPreview ) --[[ @ 0]]
	self.id = "ClassMiniPreview" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	
	local inventoryline4 = LUI.UIImage.new( 0.5, 0.5, -542, -538, 1, 1, -64, -16 ) --[[ @ 0]]
	inventoryline4:setAlpha( 0.1 ) --[[ @ 0]]
	inventoryline4:setImage( RegisterImage( @"hash_40E8461C131060A" ) ) --[[ @ 0]]
	self:addElement( inventoryline4 ) --[[ @ 0]]
	self.inventoryline4 = inventoryline4 --[[ @ 0]]
	
	local Primary = CoD.ClassMiniPreviewWeaponItem.new( f1_arg0, f1_arg1, 0, 0, 162, 402, 0.5, 0.5, -35, 35 ) --[[ @ 0]]
	Primary:mergeStateConditions( {
		{
			stateName = "Unavailable",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualTo( element, f1_arg1, "itemIndex", CoDShared.EmptyItemIndex )
			end
		}
	} ) --[[ @ 0]]
	Primary:linkToElementModel( Primary, "itemIndex", true, function ( model )
		f1_arg0:updateElementState( Primary, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "itemIndex"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	Primary:linkToElementModel( self, "primary", false, function ( model )
		Primary:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	Primary:linkToElementModel( self, "primaryattachments", true, function ( model )
		local f5_local0 = model:get() --[[ @ 0]]
		if f5_local0 ~= nil then
			Primary.PrimaryAttachments:setDataSource( f5_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Primary ) --[[ @ 0]]
	self.Primary = Primary --[[ @ 0]]
	
	local inventoryline6 = LUI.UIImage.new( 0.5, 0.5, -298, -294, 1, 1, -64, -16 ) --[[ @ 0]]
	inventoryline6:setAlpha( 0.1 ) --[[ @ 0]]
	inventoryline6:setImage( RegisterImage( @"hash_40E8461C131060A" ) ) --[[ @ 0]]
	self:addElement( inventoryline6 ) --[[ @ 0]]
	self.inventoryline6 = inventoryline6 --[[ @ 0]]
	
	local Secondary = CoD.ClassMiniPreviewWeaponItem.new( f1_arg0, f1_arg1, 0, 0, 406, 646, 0.5, 0.5, -35, 35 ) --[[ @ 0]]
	Secondary:mergeStateConditions( {
		{
			stateName = "Unavailable",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualTo( element, f1_arg1, "itemIndex", CoDShared.EmptyItemIndex )
			end
		}
	} ) --[[ @ 0]]
	Secondary:linkToElementModel( Secondary, "itemIndex", true, function ( model )
		f1_arg0:updateElementState( Secondary, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "itemIndex"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	Secondary:linkToElementModel( self, "secondary", false, function ( model )
		Secondary:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	Secondary:linkToElementModel( self, "secondaryattachments", true, function ( model )
		local f9_local0 = model:get() --[[ @ 0]]
		if f9_local0 ~= nil then
			Secondary.PrimaryAttachments:setDataSource( f9_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Secondary ) --[[ @ 0]]
	self.Secondary = Secondary --[[ @ 0]]
	
	local inventoryline7 = LUI.UIImage.new( 0.5, 0.5, -54, -50, 1, 1, -64, -16 ) --[[ @ 0]]
	inventoryline7:setAlpha( 0.1 ) --[[ @ 0]]
	inventoryline7:setImage( RegisterImage( @"hash_40E8461C131060A" ) ) --[[ @ 0]]
	self:addElement( inventoryline7 ) --[[ @ 0]]
	self.inventoryline7 = inventoryline7 --[[ @ 0]]
	
	local Gear = CoD.ClassMiniPreviewGearItem.new( f1_arg0, f1_arg1, 0, 0, 650, 730, 0.5, 0.5, -35, 35 ) --[[ @ 0]]
	Gear:mergeStateConditions( {
		{
			stateName = "Unavailable",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualTo( element, f1_arg1, "itemIndex", CoDShared.EmptyItemIndex )
			end
		}
	} ) --[[ @ 0]]
	Gear:linkToElementModel( Gear, "itemIndex", true, function ( model )
		f1_arg0:updateElementState( Gear, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "itemIndex"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	Gear:linkToElementModel( self, "tacticalgear", false, function ( model )
		Gear:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( Gear ) --[[ @ 0]]
	self.Gear = Gear --[[ @ 0]]
	
	local inventoryline5 = LUI.UIImage.new( 0.5, 0.5, 30, 34, 1, 1, -64, -16 ) --[[ @ 0]]
	inventoryline5:setAlpha( 0.1 ) --[[ @ 0]]
	inventoryline5:setImage( RegisterImage( @"hash_40E8461C131060A" ) ) --[[ @ 0]]
	self:addElement( inventoryline5 ) --[[ @ 0]]
	self.inventoryline5 = inventoryline5 --[[ @ 0]]
	
	local Equipment = CoD.ClassMiniPreviewEquipmentItem.new( f1_arg0, f1_arg1, 0, 0, 734, 814, 0, 0, 5, 75 ) --[[ @ 0]]
	Equipment:mergeStateConditions( {
		{
			stateName = "Unavailable_Dual",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueTrue( self, f1_arg1, "canTakeTwo" ) and CoD.ModelUtility.IsSelfModelPathValueEqualTo( element, f1_arg1, "primarygrenade.itemIndex", CoDShared.EmptyItemIndex )
			end
		},
		{
			stateName = "UnavailableSingle",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelPathValueEqualTo( element, f1_arg1, "primarygrenade.itemIndex", CoDShared.EmptyItemIndex )
			end
		},
		{
			stateName = "TakeTwo",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueTrue( self, f1_arg1, "canTakeTwo" )
			end
		}
	} ) --[[ @ 0]]
	Equipment:linkToElementModel( Equipment, "canTakeTwo", true, function ( model )
		f1_arg0:updateElementState( Equipment, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "canTakeTwo"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	Equipment:linkToElementModel( Equipment, "primarygrenade.itemIndex", true, function ( model )
		f1_arg0:updateElementState( Equipment, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "primarygrenade.itemIndex"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	Equipment:linkToElementModel( self, nil, false, function ( model )
		Equipment:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( Equipment ) --[[ @ 0]]
	self.Equipment = Equipment --[[ @ 0]]
	
	local inventoryline2 = LUI.UIImage.new( 0.5, 0.5, 114, 118, 1, 1, -64, -16 ) --[[ @ 0]]
	inventoryline2:setAlpha( 0.1 ) --[[ @ 0]]
	inventoryline2:setImage( RegisterImage( @"hash_40E8461C131060A" ) ) --[[ @ 0]]
	self:addElement( inventoryline2 ) --[[ @ 0]]
	self.inventoryline2 = inventoryline2 --[[ @ 0]]
	
	local Talents = LUI.GridLayout.new( f1_arg0, f1_arg1, false, 0, 0, 0, 0, nil, nil, false, false, false, false ) --[[ @ 0]]
	Talents:setLeftRight( 0, 0, 818, 1238 ) --[[ @ 0]]
	Talents:setTopBottom( 0.5, 0.5, -35, 35 ) --[[ @ 0]]
	Talents:setWidgetType( CoD.ClassMiniPreviewTalentItem ) --[[ @ 0]]
	Talents:setHorizontalCount( 6 ) --[[ @ 0]]
	Talents:setSpacing( 0 ) --[[ @ 0]]
	Talents:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	Talents:linkToElementModel( self, "talentsMiniPreview", true, function ( model )
		local f19_local0 = model:get() --[[ @ 0]]
		if f19_local0 ~= nil then
			Talents:setDataSource( f19_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Talents ) --[[ @ 0]]
	self.Talents = Talents --[[ @ 0]]
	
	local inventoryline3 = LUI.UIImage.new( 0.5, 0.5, 538, 542, 1, 1, -64, -16 ) --[[ @ 0]]
	inventoryline3:setAlpha( 0.1 ) --[[ @ 0]]
	inventoryline3:setImage( RegisterImage( @"hash_40E8461C131060A" ) ) --[[ @ 0]]
	self:addElement( inventoryline3 ) --[[ @ 0]]
	self.inventoryline3 = inventoryline3 --[[ @ 0]]
	
	Primary.id = "Primary" --[[ @ 0]]
	Secondary.id = "Secondary" --[[ @ 0]]
	Talents.id = "Talents" --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	local f1_local12 = self --[[ @ 0]]
	SetElementProperty( Talents, "_ignoreEmptyPerks", true ) --[[ @ 0]]
	return self
end
 --[[ @ 0]]
CoD.ClassMiniPreview.__onClose = function ( f20_arg0 )
	f20_arg0.Primary:close() --[[ @ 0]]
	f20_arg0.Secondary:close() --[[ @ 0]]
	f20_arg0.Gear:close() --[[ @ 0]]
	f20_arg0.Equipment:close() --[[ @ 0]]
	f20_arg0.Talents:close() --[[ @ 0]]
end
 --[[ @ 0]]
