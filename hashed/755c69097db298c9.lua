-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:35
require( "x64:49ec2ded26f14fc8" ) --[[ @ 0]]
require( "ui/uieditor/widgets/craft/emblemeditor/craftlayernumber" ) --[[ @ 0]]
require( "ui/uieditor/widgets/craft/emblemeditor/craftlayersavailable" ) --[[ @ 0]]
require( "ui/uieditor/widgets/craft/emblemeditor/decalgroupsavailable" ) --[[ @ 0]]
require( "x64:1c4873e75b9cce20" ) --[[ @ 0]]
require( "x64:5959b3179a015708" ) --[[ @ 0]]
require( "ui/uieditor/widgets/craft/emblemeditor/emblemgroupnew" ) --[[ @ 0]]
require( "x64:396b29a3176ada0f" ) --[[ @ 0]]
require( "ui/uieditor/widgets/scrollbars/verticalcounter" ) --[[ @ 0]]

CoD.DecalGroupsListFrame = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.DecalGroupsListFrame.__defaultWidth = 1820 --[[ @ 0]]
CoD.DecalGroupsListFrame.__defaultHeight = 965 --[[ @ 0]]
CoD.DecalGroupsListFrame.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	SetMenuProperty( f1_arg0, "_storageFileType", Enum[@"StorageFileType"][@"hash_15DB8C62CF926911"] ) --[[ @ 0]]
	CoD.CraftUtility.SetSlotCustomizationType( f1_arg1, Enum[@"CustomizationType"][@"hash_1AB847C1A0E71617"] ) --[[ @ 0]]
	self:setClass( CoD.DecalGroupsListFrame ) --[[ @ 0]]
	self.id = "DecalGroupsListFrame" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	
	local GroupsButtonList = LUI.UIList.new( f1_arg0, f1_arg1, 18, 0, nil, false, false, false, false ) --[[ @ 0]]
	GroupsButtonList:setLeftRight( 0, 0, 66, 372 ) --[[ @ 0]]
	GroupsButtonList:setTopBottom( 0, 0, 88, 880 ) --[[ @ 0]]
	GroupsButtonList:setWidgetType( CoD.DecalTypeButton ) --[[ @ 0]]
	GroupsButtonList:setVerticalCount( 10 ) --[[ @ 0]]
	GroupsButtonList:setSpacing( 18 ) --[[ @ 0]]
	GroupsButtonList:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	GroupsButtonList:setDataSource( "GroupDecalButtons" ) --[[ @ 0]]
	GroupsButtonList:registerEventHandler( "list_item_gain_focus", function ( element, event )
		local f2_local0 = nil --[[ @ 0]]
		if CoD.CraftUtility.EmblemChooseIcon_IsDecalTypeChanged( self, element, f1_arg1 ) then
			CoD.CraftUtility.EmblemChooseIcon_DecalTypeChanged( self, element, f1_arg1 ) --[[ @ 0]]
			UpdateElementDataSource( self, "decalGroupList" ) --[[ @ 0]]
			UpdateElementState( self, "decalGroupList", f1_arg1 ) --[[ @ 0]]
		end
		return f2_local0
	end ) --[[ @ 0]]
	self:addElement( GroupsButtonList ) --[[ @ 0]]
	self.GroupsButtonList = GroupsButtonList --[[ @ 0]]
	
	local decalGroupList = LUI.UIList.new( f1_arg0, f1_arg1, 18, 0, nil, true, false, false, false ) --[[ @ 0]]
	decalGroupList:setLeftRight( 0, 0, 390, 1020 ) --[[ @ 0]]
	decalGroupList:setTopBottom( 0, 0, 88, 718 ) --[[ @ 0]]
	decalGroupList:setWidgetType( CoD.EmblemGroupNew ) --[[ @ 0]]
	decalGroupList:setHorizontalCount( 4 ) --[[ @ 0]]
	decalGroupList:setVerticalCount( 4 ) --[[ @ 0]]
	decalGroupList:setSpacing( 18 ) --[[ @ 0]]
	decalGroupList:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	decalGroupList:setVerticalCounter( CoD.verticalCounter ) --[[ @ 0]]
	decalGroupList:setDataSource( "DecalGroupsList" ) --[[ @ 0]]
	decalGroupList:linkToElementModel( decalGroupList, "isBMClassified", true, function ( model, f3_arg1 )
		CoD.Menu.UpdateButtonShownState( f3_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	decalGroupList:appendEventHandler( "record_curr_focused_elem_id", function ( f4_arg0, f4_arg1 )
		f4_arg1.menu = f4_arg1.menu or f1_arg0 --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f4_arg0, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local CraftLayersAvailable = decalGroupList --[[ @ 0]]
	local DecalGroupsAvailable = decalGroupList.subscribeToModel --[[ @ 0]]
	local DecalPreview = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	DecalGroupsAvailable( CraftLayersAvailable, DecalPreview["Emblem.EmblemProperties.layersAvailable"], function ( f5_arg0, f5_arg1 )
		CoD.Menu.UpdateButtonShownState( f5_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	CraftLayersAvailable = decalGroupList --[[ @ 0]]
	DecalGroupsAvailable = decalGroupList.subscribeToModel --[[ @ 0]]
	DecalPreview = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	DecalGroupsAvailable( CraftLayersAvailable, DecalPreview["Emblem.EmblemProperties.groupsUsed"], function ( f6_arg0, f6_arg1 )
		CoD.Menu.UpdateButtonShownState( f6_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	decalGroupList:appendEventHandler( "input_source_changed", function ( f7_arg0, f7_arg1 )
		f7_arg1.menu = f7_arg1.menu or f1_arg0 --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f7_arg0, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_222361E23588705A"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	CraftLayersAvailable = decalGroupList --[[ @ 0]]
	DecalGroupsAvailable = decalGroupList.subscribeToModel --[[ @ 0]]
	DecalPreview = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	DecalGroupsAvailable( CraftLayersAvailable, DecalPreview.LastInput, function ( f8_arg0, f8_arg1 )
		CoD.Menu.UpdateButtonShownState( f8_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_222361E23588705A"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	decalGroupList:registerEventHandler( "list_item_gain_focus", function ( element, event )
		local f9_local0 = nil --[[ @ 0]]
		CoD.CraftUtility.DecalGroup_GainFocus( self, element, f1_arg1 ) --[[ @ 0]]
		CoD.CraftUtility.EmblemChooseIcon_UpdateLayerCount( self, self.CraftLayerNumber, f1_arg1 ) --[[ @ 0]]
		CoD.CraftUtility.EmblemChooseIcon_SelectionChanged( self, element, f1_arg1 ) --[[ @ 0]]
		UpdateElementState( self, "CraftLayersAvailable", f1_arg1 ) --[[ @ 0]]
		UpdateElementState( self, "CraftLayerNumber", f1_arg1 ) --[[ @ 0]]
		return f9_local0
	end ) --[[ @ 0]]
	decalGroupList:registerEventHandler( "gain_focus", function ( element, event )
		local f10_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f10_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f10_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_222361E23588705A"] ) --[[ @ 0]]
		return f10_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( decalGroupList, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], nil, function ( element, menu, controller, model )
		if IsEmblemEditor( controller ) and not CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "isBMClassified" ) and CoD.BaseUtility.DoesElementOrChildHaveFocus( self, "decalGroupList" ) and CoD.CraftUtility.EmblemChooseIcon_CanFitSelectedDecalGroup( self, controller ) and CoD.CraftUtility.EmblemChooseIcon_IsGroupSlotAvailable( self, controller ) then
			CoD.CraftUtility.EmblemChooseIcon_SelectionAccepted( self, element, controller ) --[[ @ 0]]
			CoD.CraftUtility.EmblemEditor_SetEditMode( controller ) --[[ @ 0]]
			GoBack( self, controller ) --[[ @ 0]]
			ClearMenuSavedState( menu ) --[[ @ 0]]
			return true
		elseif IsPaintshop( controller ) and not CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "isBMClassified" ) and CoD.BaseUtility.DoesElementOrChildHaveFocus( self, "decalGroupList" ) and CoD.CraftUtility.EmblemChooseIcon_CanFitSelectedDecalGroup( self, controller ) and CoD.CraftUtility.EmblemChooseIcon_IsGroupSlotAvailable( self, controller ) then
			CoD.CraftUtility.EmblemChooseIcon_SelectionAccepted( self, element, controller ) --[[ @ 0]]
			CoD.CraftUtility.EmblemEditor_SetEditMode( controller ) --[[ @ 0]]
			CoD.CraftUtility.EmblemChooseIcon_RevertPreviewDecalCamera( self, element, controller ) --[[ @ 0]]
			GoBack( self, controller ) --[[ @ 0]]
			ClearMenuSavedState( menu ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsEmblemEditor( controller ) and not CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "isBMClassified" ) and CoD.BaseUtility.DoesElementOrChildHaveFocus( self, "decalGroupList" ) and CoD.CraftUtility.EmblemChooseIcon_CanFitSelectedDecalGroup( self, controller ) and CoD.CraftUtility.EmblemChooseIcon_IsGroupSlotAvailable( self, controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, nil ) --[[ @ 0]]
			return true
		elseif IsPaintshop( controller ) and not CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "isBMClassified" ) and CoD.BaseUtility.DoesElementOrChildHaveFocus( self, "decalGroupList" ) and CoD.CraftUtility.EmblemChooseIcon_CanFitSelectedDecalGroup( self, controller ) and CoD.CraftUtility.EmblemChooseIcon_IsGroupSlotAvailable( self, controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, nil ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( decalGroupList, f1_arg1, Enum[@"LUIButton"][@"hash_222361E23588705A"], "ui_contextual_1", function ( element, menu, controller, model )
		if CoD.CraftUtility.EmblemChooseIcon_IsCustomDecalCategorySelected( self, controller ) and IsGamepad( controller ) then
			OpenPopup( self, "DecalGroupOptions", controller, nil ) --[[ @ 0]]
			return true
		elseif CoD.CraftUtility.EmblemChooseIcon_IsCustomDecalCategorySelected( self, controller ) and IsMouseOrKeyboard( controller ) then
			OpenPopup( self, "DecalGroupOptions", controller, nil ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if CoD.CraftUtility.EmblemChooseIcon_IsCustomDecalCategorySelected( self, controller ) and IsGamepad( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_222361E23588705A"], @"hash_78E7772DFD9BBDEB", nil, "ui_contextual_1" ) --[[ @ 0]]
			return true
		elseif CoD.CraftUtility.EmblemChooseIcon_IsCustomDecalCategorySelected( self, controller ) and IsMouseOrKeyboard( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_222361E23588705A"], @"hash_78E7772DFD9BBDEB", Enum[@"hash_3BEBDBAEEB3ECCCA"][@"hash_4B6372335C630AD3"], "ui_contextual_1" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	decalGroupList:AddContextualMenuAction( f1_arg0, f1_arg1, @"hash_78E7772DFD9BBDEB", function ( f15_arg0, f15_arg1, f15_arg2, f15_arg3 )
		if CoD.CraftUtility.EmblemChooseIcon_IsCustomDecalCategorySelected( self, f15_arg2 ) then
			return function ( f16_arg0, f16_arg1, f16_arg2, f16_arg3 )
				OpenPopup( self, "DecalGroupOptions", f16_arg2, nil ) --[[ @ 0]]
			end
			
		else
			
		end
	end ) --[[ @ 0]]
	self:addElement( decalGroupList ) --[[ @ 0]]
	self.decalGroupList = decalGroupList --[[ @ 0]]
	
	DecalGroupsAvailable = CoD.DecalGroupsAvailable.new( f1_arg0, f1_arg1, 0, 0, 1203, 1738, 0, 0, 744, 764 ) --[[ @ 0]]
	DecalGroupsAvailable:mergeStateConditions( {
		{
			stateName = "GroupsFilled",
			condition = function ( menu, element, event )
				return not IsGroupSlotAvailable( f1_arg1 )
			end
		}
	} ) --[[ @ 0]]
	DecalPreview = DecalGroupsAvailable --[[ @ 0]]
	CraftLayersAvailable = DecalGroupsAvailable.subscribeToModel --[[ @ 0]]
	local SlotsUsedWidget = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	CraftLayersAvailable( DecalPreview, SlotsUsedWidget["Emblem.EmblemProperties.groupsUsed"], function ( f18_arg0 )
		f1_arg0:updateElementState( DecalGroupsAvailable, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f18_arg0:get(),
			modelName = "Emblem.EmblemProperties.groupsUsed"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:addElement( DecalGroupsAvailable ) --[[ @ 0]]
	self.DecalGroupsAvailable = DecalGroupsAvailable --[[ @ 0]]
	
	CraftLayersAvailable = CoD.CraftLayersAvailable.new( f1_arg0, f1_arg1, 0, 0, 1203, 1738, 0, 0, 718, 738 ) --[[ @ 0]]
	self:addElement( CraftLayersAvailable ) --[[ @ 0]]
	self.CraftLayersAvailable = CraftLayersAvailable --[[ @ 0]]
	
	DecalPreview = CoD.DecalPreview.new( f1_arg0, f1_arg1, 0, 0, 1202, 1742, 0, 0, 71, 796 ) --[[ @ 0]]
	DecalPreview:mergeStateConditions( {
		{
			stateName = "HideInfoPanel",
			condition = function ( menu, element, event )
				return AlwaysTrue()
			end
		}
	} ) --[[ @ 0]]
	self:addElement( DecalPreview ) --[[ @ 0]]
	self.DecalPreview = DecalPreview --[[ @ 0]]
	
	SlotsUsedWidget = CoD.SlotsUsedWidget.new( f1_arg0, f1_arg1, 0, 0, 1204.5, 1734.5, 0, 0, 620, 713 ) --[[ @ 0]]
	SlotsUsedWidget.Title.__alertText2_String_Reference = function ()
		SlotsUsedWidget.Title:setText( LocalizeToUpperString( CoD.CraftUtility.GetSlotsUsedHeader( f1_arg1 ) ) ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	SlotsUsedWidget.Title.__alertText2_String_Reference() --[[ @ 0]]
	SlotsUsedWidget:subscribeToGlobalModel( f1_arg1, "CraftSlots", "totalSlots", function ( model )
		local f21_local0 = model:get() --[[ @ 0]]
		if f21_local0 ~= nil then
			SlotsUsedWidget.Total:setText( f21_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	SlotsUsedWidget:subscribeToGlobalModel( f1_arg1, "CraftSlots", "usedSlots", function ( model )
		local f22_local0 = model:get() --[[ @ 0]]
		if f22_local0 ~= nil then
			SlotsUsedWidget.Used:setText( f22_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	SlotsUsedWidget:subscribeToGlobalModel( f1_arg1, "CraftSlots", "totalSlots", function ( model )
		local f23_local0 = model:get() --[[ @ 0]]
		if f23_local0 ~= nil then
			SlotsUsedWidget.totalBar:setShaderVector( 1, SetVectorComponent( 2, 1, CoD.GetVectorComponentFromString( f23_local0, 1 ), CoD.GetVectorComponentFromString( f23_local0, 2 ), CoD.GetVectorComponentFromString( f23_local0, 3 ), CoD.GetVectorComponentFromString( f23_local0, 4 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	SlotsUsedWidget:subscribeToGlobalModel( f1_arg1, "CraftSlots", "totalSlots", function ( model )
		local f24_local0 = model:get() --[[ @ 0]]
		if f24_local0 ~= nil then
			SlotsUsedWidget.usedBar:setShaderVector( 1, SetVectorComponent( 2, 1, CoD.GetVectorComponentFromString( f24_local0, 1 ), CoD.GetVectorComponentFromString( f24_local0, 2 ), CoD.GetVectorComponentFromString( f24_local0, 3 ), CoD.GetVectorComponentFromString( f24_local0, 4 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	SlotsUsedWidget:subscribeToGlobalModel( f1_arg1, "CraftSlots", "percent", function ( model )
		local f25_local0 = model:get() --[[ @ 0]]
		if f25_local0 ~= nil then
			SlotsUsedWidget.usedBar:setShaderVector( 2, SetVectorComponent( 4, 1, SetVectorComponent( 3, 0, SetVectorComponent( 1, 0, SwapVectorComponents( 1, 2, CoD.GetVectorComponentFromString( f25_local0, 1 ), CoD.GetVectorComponentFromString( f25_local0, 2 ), CoD.GetVectorComponentFromString( f25_local0, 3 ), CoD.GetVectorComponentFromString( f25_local0, 4 ) ) ) ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( SlotsUsedWidget ) --[[ @ 0]]
	self.SlotsUsedWidget = SlotsUsedWidget --[[ @ 0]]
	
	local CraftLayerNumber = CoD.CraftLayerNumber.new( f1_arg0, f1_arg1, 0, 0, 1217, 1328, 0, 0, 102, 124 ) --[[ @ 0]]
	self:addElement( CraftLayerNumber ) --[[ @ 0]]
	self.CraftLayerNumber = CraftLayerNumber --[[ @ 0]]
	
	DecalPreview:linkToElementModel( decalGroupList, nil, false, function ( model )
		DecalPreview:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local f1_local8 = SlotsUsedWidget --[[ @ 0]]
	local f1_local9 = SlotsUsedWidget.subscribeToModel --[[ @ 0]]
	local f1_local10 = DataSources.SlotCustomization.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local9( f1_local8, f1_local10.type, SlotsUsedWidget.Title.__alertText2_String_Reference ) --[[ @ 0]]
	self:subscribeToGlobalModel( f1_arg1, "PerController", "DecalGroups.UpdateDataSource", function ( model )
		local f27_local0 = self --[[ @ 0]]
		UpdateElementDataSource( self, "decalGroupList" ) --[[ @ 0]]
	end ) --[[ @ 0]]
	GroupsButtonList.id = "GroupsButtonList" --[[ @ 0]]
	decalGroupList.id = "decalGroupList" --[[ @ 0]]
	if CoD.isPC then
		DecalPreview.id = "DecalPreview" --[[ @ 0]]
	end
	self.__defaultFocus = GroupsButtonList --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	f1_local9 = self --[[ @ 0]]
	CoD.CraftUtility.EmblemChooseIcon_InitLayerCount( self, self.CraftLayerNumber, f1_arg1 ) --[[ @ 0]]
	f1_local9 = decalGroupList --[[ @ 0]]
	if IsPC() then
		CoD.GridAndListUtility.SetVerticalScrollbar( f1_local9, "verticalScrollbar" ) --[[ @ 0]]
		CoD.GridAndListUtility.SetFocusableBackingWidgetOnPC( f1_local9 ) --[[ @ 0]]
		CoD.PCWidgetUtility.SetupContextualMenu( f1_local9, f1_arg1, "name", "", "" ) --[[ @ 0]]
	end
	return self
end
 --[[ @ 0]]
CoD.DecalGroupsListFrame.__onClose = function ( f28_arg0 )
	f28_arg0.DecalPreview:close() --[[ @ 0]]
	f28_arg0.GroupsButtonList:close() --[[ @ 0]]
	f28_arg0.decalGroupList:close() --[[ @ 0]]
	f28_arg0.DecalGroupsAvailable:close() --[[ @ 0]]
	f28_arg0.CraftLayersAvailable:close() --[[ @ 0]]
	f28_arg0.SlotsUsedWidget:close() --[[ @ 0]]
	f28_arg0.CraftLayerNumber:close() --[[ @ 0]]
end
 --[[ @ 0]]
