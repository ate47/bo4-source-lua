-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
CoD.hud_speedometer_widget = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.hud_speedometer_widget.__defaultWidth = 252 --[[ @ 0]]
CoD.hud_speedometer_widget.__defaultHeight = 132 --[[ @ 0]]
CoD.hud_speedometer_widget.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.hud_speedometer_widget ) --[[ @ 0]]
	self.id = "hud_speedometer_widget" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	
	local frameblur = LUI.UIImage.new( 0, 0, 0, 252, 0, 0, 0, 132 ) --[[ @ 0]]
	frameblur:setImage( RegisterImage( @"hash_29D3ABB870D7F2CD" ) ) --[[ @ 0]]
	frameblur:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_E2354BE557C4C7A" ) ) --[[ @ 0]]
	frameblur:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( frameblur ) --[[ @ 0]]
	self.frameblur = frameblur --[[ @ 0]]
	
	local redzone = LUI.UIImage.new( 0, 0, 198, 262, 0, 0, 38.5, 106.5 ) --[[ @ 0]]
	redzone:setRGB( 1, 0, 0 ) --[[ @ 0]]
	redzone:setImage( RegisterImage( @"hash_67D606C43E14EEDF" ) ) --[[ @ 0]]
	self:addElement( redzone ) --[[ @ 0]]
	self.redzone = redzone --[[ @ 0]]
	
	local redzone2 = LUI.UIImage.new( 0, 0, 198, 262, 0, 0, 38.5, 106.5 ) --[[ @ 0]]
	redzone2:setRGB( 1, 0, 0 ) --[[ @ 0]]
	redzone2:setImage( RegisterImage( @"hash_67D606C43E14EEDF" ) ) --[[ @ 0]]
	self:addElement( redzone2 ) --[[ @ 0]]
	self.redzone2 = redzone2 --[[ @ 0]]
	
	local frame = LUI.UIImage.new( 0, 0, 0, 252, 0, 0, 0, 132 ) --[[ @ 0]]
	frame:setImage( RegisterImage( @"hash_2FF7C4C17D5AB27E" ) ) --[[ @ 0]]
	frame:setMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	self:addElement( frame ) --[[ @ 0]]
	self.frame = frame --[[ @ 0]]
	
	local fill = LUI.UIImage.new( 0.5, 0.5, -126, 126, 0, 0, 4, 136 ) --[[ @ 0]]
	fill:setImage( RegisterImage( @"hash_4C003D8EC72486C5" ) ) --[[ @ 0]]
	fill:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_clock_normal" ) ) --[[ @ 0]]
	fill:setShaderVector( 1, 0.5, 0, 0, 0 ) --[[ @ 0]]
	fill:setShaderVector( 2, 1, 0, 0, 0 ) --[[ @ 0]]
	fill:setShaderVector( 3, 0, 0, 0, 0 ) --[[ @ 0]]
	fill:setShaderVector( 4, 0, 0, 0, 0 ) --[[ @ 0]]
	fill:subscribeToGlobalModel( f1_arg1, "PerController", "vehicle.speed", function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			fill:setShaderVector( 0, CoD.VehicleUtility.ScaleClockVectorWithSpeed( 0, 15.5, 0, 0.3, 0.15, CoD.GetVectorComponentFromString( f2_local0, 1 ), CoD.GetVectorComponentFromString( f2_local0, 2 ), CoD.GetVectorComponentFromString( f2_local0, 3 ), CoD.GetVectorComponentFromString( f2_local0, 4 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( fill ) --[[ @ 0]]
	self.fill = fill --[[ @ 0]]
	
	local arrow = LUI.UIImage.new( 0.5, 0.5, -6, 6, 0, 0, 76, 197 ) --[[ @ 0]]
	arrow:setImage( RegisterImage( @"hash_2BA297CB535037BE" ) ) --[[ @ 0]]
	arrow:setMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	arrow:subscribeToGlobalModel( f1_arg1, "PerController", "vehicle.speed", function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			arrow:setZRot( CoD.VehicleUtility.ScaleWithSpeed( 0, 15.5, 68, -68, f3_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( arrow ) --[[ @ 0]]
	self.arrow = arrow --[[ @ 0]]
	
	local line = LUI.UIImage.new( 0.5, 0.5, -6, 6, 0, 0, 32.5, 249.5 ) --[[ @ 0]]
	line:setImage( RegisterImage( @"hash_63847D97169AAAAF" ) ) --[[ @ 0]]
	line:setMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	line:subscribeToGlobalModel( f1_arg1, "PerController", "vehicle.speed", function ( model )
		local f4_local0 = model:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			line:setZRot( CoD.VehicleUtility.ScaleWithSpeed( 0, 15.5, 68, -68, f4_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( line ) --[[ @ 0]]
	self.line = line --[[ @ 0]]
	
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.hud_speedometer_widget.__onClose = function ( f5_arg0 )
	f5_arg0.fill:close() --[[ @ 0]]
	f5_arg0.arrow:close() --[[ @ 0]]
	f5_arg0.line:close() --[[ @ 0]]
end
 --[[ @ 0]]
