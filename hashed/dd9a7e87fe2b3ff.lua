-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:51
require( "ui/uieditor/widgets/onoffimage" ) --[[ @ 0]]
require( "x64:63b67ce93166e913" ) --[[ @ 0]]

CoD.Armory_UberAttachmentSlot = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.Armory_UberAttachmentSlot.__defaultWidth = 325 --[[ @ 0]]
CoD.Armory_UberAttachmentSlot.__defaultHeight = 112 --[[ @ 0]]
CoD.Armory_UberAttachmentSlot.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.Armory_UberAttachmentSlot ) --[[ @ 0]]
	self.id = "Armory_UberAttachmentSlot" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local ZMItemSlotWide = CoD.ZMItemSlotWide.new( f1_arg0, f1_arg1, 1, 1, -300, 0, 0, 0, 0, 112 ) --[[ @ 0]]
	ZMItemSlotWide:mergeStateConditions( {
		{
			stateName = "Equipped",
			condition = function ( menu, element, event )
				return CoD.ZMLoadoutUtility.IsArmoryElementAttachmentEquipped( element, f1_arg1, menu )
			end
		},
		{
			stateName = "Locked",
			condition = function ( menu, element, event )
				return CoD.ZMLoadoutUtility.IsArmoryAttachmentItemLocked( menu, element, f1_arg1 )
			end
		}
	} ) --[[ @ 0]]
	ZMItemSlotWide:linkToElementModel( ZMItemSlotWide, "itemIndex", true, function ( model )
		f1_arg0:updateElementState( ZMItemSlotWide, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "itemIndex"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local f1_local2 = ZMItemSlotWide --[[ @ 0]]
	local MutuallyExclusiveIcon = ZMItemSlotWide.subscribeToModel --[[ @ 0]]
	local f1_local4 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	MutuallyExclusiveIcon( f1_local2, f1_local4.armoryAttachmentUpdated, function ( f5_arg0 )
		f1_arg0:updateElementState( ZMItemSlotWide, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f5_arg0:get(),
			modelName = "armoryAttachmentUpdated"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ZMItemSlotWide:linkToElementModel( self, nil, false, function ( model )
		ZMItemSlotWide:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	ZMItemSlotWide:linkToElementModel( self, "image", true, function ( model )
		local f7_local0 = model:get() --[[ @ 0]]
		if f7_local0 ~= nil then
			ZMItemSlotWide.AttachmentImage:setImage( RegisterImage( f7_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	ZMItemSlotWide:linkToElementModel( self, "displayName", true, function ( model )
		local f8_local0 = model:get() --[[ @ 0]]
		if f8_local0 ~= nil then
			ZMItemSlotWide.AttachmentName:setText( Engine[@"hash_4F9F1239CFD921FE"]( f8_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( ZMItemSlotWide ) --[[ @ 0]]
	self.ZMItemSlotWide = ZMItemSlotWide --[[ @ 0]]
	
	MutuallyExclusiveIcon = CoD.onOffImage.new( f1_arg0, f1_arg1, 1, 1, -41, -27, 0, 0, 15, 29 ) --[[ @ 0]]
	MutuallyExclusiveIcon:mergeStateConditions( {
		{
			stateName = "On",
			condition = function ( menu, element, event )
				return CoD.ZMLoadoutUtility.IsAttachmentMutuallyExclusiveWithSelection( menu, element, f1_arg1 )
			end
		}
	} ) --[[ @ 0]]
	f1_local4 = MutuallyExclusiveIcon --[[ @ 0]]
	f1_local2 = MutuallyExclusiveIcon.subscribeToModel --[[ @ 0]]
	local f1_local5 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local2( f1_local4, f1_local5.armoryAttachmentUpdated, function ( f10_arg0 )
		f1_arg0:updateElementState( MutuallyExclusiveIcon, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f10_arg0:get(),
			modelName = "armoryAttachmentUpdated"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	MutuallyExclusiveIcon:setRGB( 1, 0.41, 0 ) --[[ @ 0]]
	MutuallyExclusiveIcon.image:setImage( RegisterImage( @"hash_111D4E13C821CCE3" ) ) --[[ @ 0]]
	MutuallyExclusiveIcon:linkToElementModel( self, nil, false, function ( model )
		MutuallyExclusiveIcon:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( MutuallyExclusiveIcon ) --[[ @ 0]]
	self.MutuallyExclusiveIcon = MutuallyExclusiveIcon --[[ @ 0]]
	
	LUI.OverrideFunction_CallOriginalFirst( self, "childFocusGained", function ( element )
		SetElementModelValue( element, "attachmentInFocus", true ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( self, "childFocusLost", function ( element )
		if CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg1, "attachmentInFocus" ) then
			SetElementModelValue( element, "attachmentInFocus", false ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	ZMItemSlotWide.id = "ZMItemSlotWide" --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.Armory_UberAttachmentSlot.__resetProperties = function ( f14_arg0 )
	f14_arg0.ZMItemSlotWide:completeAnimation() --[[ @ 0]]
	f14_arg0.ZMItemSlotWide:setScale( 1, 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.Armory_UberAttachmentSlot.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f15_arg0, f15_arg1 )
			f15_arg0:__resetProperties() --[[ @ 0]]
			f15_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end,
		ChildFocus = function ( f16_arg0, f16_arg1 )
			f16_arg0:__resetProperties() --[[ @ 0]]
			f16_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f16_arg0.ZMItemSlotWide:completeAnimation() --[[ @ 0]]
			f16_arg0.ZMItemSlotWide:setScale( 1.05, 1.05 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.ZMItemSlotWide ) --[[ @ 0]]
		end,
		GainChildFocus = function ( f17_arg0, f17_arg1 )
			f17_arg0:__resetProperties() --[[ @ 0]]
			f17_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f17_local0 = function ( f18_arg0 )
				f17_arg0.ZMItemSlotWide:beginAnimation( 200, Enum[@"luitween"][@"luitween_ease_both"] ) --[[ @ 0]]
				f17_arg0.ZMItemSlotWide:setScale( 1.05, 1.05 ) --[[ @ 0]]
				f17_arg0.ZMItemSlotWide:registerEventHandler( "interrupted_keyframe", f17_arg0.clipInterrupted ) --[[ @ 0]]
				f17_arg0.ZMItemSlotWide:registerEventHandler( "transition_complete_keyframe", f17_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f17_arg0.ZMItemSlotWide:completeAnimation() --[[ @ 0]]
			f17_arg0.ZMItemSlotWide:setScale( 1, 1 ) --[[ @ 0]]
			f17_local0( f17_arg0.ZMItemSlotWide ) --[[ @ 0]]
		end,
		LoseChildFocus = function ( f19_arg0, f19_arg1 )
			f19_arg0:__resetProperties() --[[ @ 0]]
			f19_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f19_local0 = function ( f20_arg0 )
				f19_arg0.ZMItemSlotWide:beginAnimation( 200, Enum[@"luitween"][@"luitween_ease_both"] ) --[[ @ 0]]
				f19_arg0.ZMItemSlotWide:setScale( 1, 1 ) --[[ @ 0]]
				f19_arg0.ZMItemSlotWide:registerEventHandler( "interrupted_keyframe", f19_arg0.clipInterrupted ) --[[ @ 0]]
				f19_arg0.ZMItemSlotWide:registerEventHandler( "transition_complete_keyframe", f19_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f19_arg0.ZMItemSlotWide:completeAnimation() --[[ @ 0]]
			f19_arg0.ZMItemSlotWide:setScale( 1.05, 1.05 ) --[[ @ 0]]
			f19_local0( f19_arg0.ZMItemSlotWide ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.Armory_UberAttachmentSlot.__onClose = function ( f21_arg0 )
	f21_arg0.ZMItemSlotWide:close() --[[ @ 0]]
	f21_arg0.MutuallyExclusiveIcon:close() --[[ @ 0]]
end
 --[[ @ 0]]
