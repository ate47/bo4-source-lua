-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:33
CoD.ZMInvTalisman = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.ZMInvTalisman.__defaultWidth = 128 --[[ @ 0]]
CoD.ZMInvTalisman.__defaultHeight = 128 --[[ @ 0]]
CoD.ZMInvTalisman.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.ZMInvTalisman ) --[[ @ 0]]
	self.id = "ZMInvTalisman" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local Image = LUI.UIImage.new( 0, 0, 0, 128, 0, 0, 0, 128 ) --[[ @ 0]]
	self:addElement( Image ) --[[ @ 0]]
	self.Image = Image --[[ @ 0]]
	
	local Name = LUI.UIText.new( 0, 0, -211, -11, 0, 0, 44.5, 65.5 ) --[[ @ 0]]
	Name:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_393E719493E9E18F" ) ) --[[ @ 0]]
	Name:setTTF( "skorzhen" ) --[[ @ 0]]
	Name:setLetterSpacing( 1 ) --[[ @ 0]]
	Name:setAlignment( Enum[@"LUIAlignment"][@"hash_3830CFD395E6AA0A"] ) --[[ @ 0]]
	Name:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	self:addElement( Name ) --[[ @ 0]]
	self.Name = Name --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Show",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalDataSourceModelValueEqualTo( f1_arg1, "ZMInvTalisman", "show", 1 )
			end
		}
	} ) --[[ @ 0]]
	local f1_local3 = self --[[ @ 0]]
	local f1_local4 = self.subscribeToModel --[[ @ 0]]
	local f1_local5 = DataSources.ZMInvTalisman.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local4( f1_local3, f1_local5.show, function ( f3_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f3_arg0:get(),
			modelName = "show"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:subscribeToGlobalModel( f1_arg1, "PerController", "selectedCustomClass", function ( model )
		local f4_local0 = self --[[ @ 0]]
		CoD.ZMInventoryUtility.SetupInventoryTalisman( f1_arg1, model, self.Name, self.Image ) --[[ @ 0]]
	end ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.ZMInvTalisman.__resetProperties = function ( f5_arg0 )
	f5_arg0.Name:completeAnimation() --[[ @ 0]]
	f5_arg0.Image:completeAnimation() --[[ @ 0]]
	f5_arg0.Name:setAlpha( 1 ) --[[ @ 0]]
	f5_arg0.Image:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ZMInvTalisman.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f6_arg0, f6_arg1 )
			f6_arg0:__resetProperties() --[[ @ 0]]
			f6_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f6_arg0.Image:completeAnimation() --[[ @ 0]]
			f6_arg0.Image:setAlpha( 0 ) --[[ @ 0]]
			f6_arg0.clipFinished( f6_arg0.Image ) --[[ @ 0]]
			f6_arg0.Name:completeAnimation() --[[ @ 0]]
			f6_arg0.Name:setAlpha( 0 ) --[[ @ 0]]
			f6_arg0.clipFinished( f6_arg0.Name ) --[[ @ 0]]
		end
	},
	Show = {
		DefaultClip = function ( f7_arg0, f7_arg1 )
			f7_arg0:__resetProperties() --[[ @ 0]]
			f7_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
