-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:35
require( "ui/uieditor/widgets/emptyfocusable" ) --[[ @ 0]]
require( "x64:3cef42fd3249a6be" ) --[[ @ 0]]
require( "x64:1edfe9269a474224" ) --[[ @ 0]]
require( "ui/uieditor/widgets/startmenu/options/startmenuoptionsmaincorners" ) --[[ @ 0]]

CoD.StartMenu_Options_PC_Voice_VoiceBar = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.StartMenu_Options_PC_Voice_VoiceBar.__defaultWidth = 675 --[[ @ 0]]
CoD.StartMenu_Options_PC_Voice_VoiceBar.__defaultHeight = 70 --[[ @ 0]]
CoD.StartMenu_Options_PC_Voice_VoiceBar.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	InitDataSourceModel( f1_arg1, "SpeakingEnergy" ) --[[ @ 0]]
	CoD.PCOptionsUtility.SetVoiceDvars() --[[ @ 0]]
	self:setClass( CoD.StartMenu_Options_PC_Voice_VoiceBar ) --[[ @ 0]]
	self.id = "StartMenu_Options_PC_Voice_VoiceBar" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local Maximum = LUI.UIText.new( 0.5, 0.5, 211.5, 336.5, 0.5, 0.5, 12.5, 27.5 ) --[[ @ 0]]
	Maximum:setRGB( 0.76, 0.76, 0.76 ) --[[ @ 0]]
	Maximum:setAlpha( 0.44 ) --[[ @ 0]]
	Maximum:setText( LocalizeToUpperString( @"hash_404EF66575DDB929" ) ) --[[ @ 0]]
	Maximum:setTTF( "dinnext_regular" ) --[[ @ 0]]
	Maximum:setLetterSpacing( 1 ) --[[ @ 0]]
	Maximum:setAlignment( Enum[@"LUIAlignment"][@"hash_3830CFD395E6AA0A"] ) --[[ @ 0]]
	self:addElement( Maximum ) --[[ @ 0]]
	self.Maximum = Maximum --[[ @ 0]]
	
	local OverflowIndicator1 = LUI.UIImage.new( 0.5, 0.5, 342.5, 347.5, 0.5, 0.5, -3, 5 ) --[[ @ 0]]
	OverflowIndicator1:setRGB( 0.68, 0.14, 0.1 ) --[[ @ 0]]
	self:addElement( OverflowIndicator1 ) --[[ @ 0]]
	self.OverflowIndicator1 = OverflowIndicator1 --[[ @ 0]]
	
	local OverflowIndicator2 = LUI.UIImage.new( 0.5, 0.5, 351.5, 356.5, 0.5, 0.5, -3, 5 ) --[[ @ 0]]
	OverflowIndicator2:setRGB( 0.68, 0.14, 0.1 ) --[[ @ 0]]
	self:addElement( OverflowIndicator2 ) --[[ @ 0]]
	self.OverflowIndicator2 = OverflowIndicator2 --[[ @ 0]]
	
	local OverflowIndicator3 = LUI.UIImage.new( 0.5, 0.5, 360.5, 365.5, 0.5, 0.5, -3, 5 ) --[[ @ 0]]
	OverflowIndicator3:setRGB( 0.68, 0.14, 0.1 ) --[[ @ 0]]
	self:addElement( OverflowIndicator3 ) --[[ @ 0]]
	self.OverflowIndicator3 = OverflowIndicator3 --[[ @ 0]]
	
	local OverflowIndicator4 = LUI.UIImage.new( 0.5, 0.5, 337.5, 367.5, 0.5, 0.5, -34, -4 ) --[[ @ 0]]
	OverflowIndicator4:setRGB( 0.76, 0.76, 0.76 ) --[[ @ 0]]
	OverflowIndicator4:setAlpha( 0.44 ) --[[ @ 0]]
	OverflowIndicator4:setImage( RegisterImage( @"uie_warning_small" ) ) --[[ @ 0]]
	self:addElement( OverflowIndicator4 ) --[[ @ 0]]
	self.OverflowIndicator4 = OverflowIndicator4 --[[ @ 0]]
	
	local TextBox = LUI.UIText.new( 0.5, 0.5, -252.5, 171.5, 0.5, 0.5, -23.5, -6.5 ) --[[ @ 0]]
	TextBox:setRGB( 0.76, 0.76, 0.76 ) --[[ @ 0]]
	TextBox:setAlpha( 0.6 ) --[[ @ 0]]
	TextBox:setText( LocalizeToUpperString( @"hash_554E2339D1B444AD" ) ) --[[ @ 0]]
	TextBox:setTTF( "dinnext_regular" ) --[[ @ 0]]
	TextBox:setLetterSpacing( 1 ) --[[ @ 0]]
	TextBox:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	TextBox:setAlignment( Enum[@"LUIAlignment"][@"hash_E821F0ECFF8D1C7"] ) --[[ @ 0]]
	self:addElement( TextBox ) --[[ @ 0]]
	self.TextBox = TextBox --[[ @ 0]]
	
	local TooltipFocus = CoD.emptyFocusable.new( f1_arg0, f1_arg1, 0, 0, 0, 366, 0, 0, 0, 62 ) --[[ @ 0]]
	TooltipFocus:subscribeToGlobalModel( f1_arg1, "PerController", "CurrentOptionTab", function ( model )
		local f2_local0 = TooltipFocus --[[ @ 0]]
		if not CoD.PCOptionsUtility.IsGraphicsOptions( f1_arg1 ) then
			MakeNotFocusable( f2_local0, f1_arg1 ) --[[ @ 0]]
		elseif CoD.PCOptionsUtility.IsGraphicsOptions( f1_arg1 ) then
			MakeFocusable( f2_local0, f1_arg1 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( TooltipFocus ) --[[ @ 0]]
	self.TooltipFocus = TooltipFocus --[[ @ 0]]
	
	local DynamicBar = CoD.StartMenu_Options_PC_Voice_VoiceBar_Bar.new( f1_arg0, f1_arg1, 0.5, 0.5, -250.5, 336.5, 0.5, 0.5, -3, 5 ) --[[ @ 0]]
	self:addElement( DynamicBar ) --[[ @ 0]]
	self.DynamicBar = DynamicBar --[[ @ 0]]
	
	local Corners = CoD.StartMenuOptionsMainCorners.new( f1_arg0, f1_arg1, 0.5, 0.5, -250.5, 336.5, 0.5, 0.5, -3, 5 ) --[[ @ 0]]
	Corners:setAlpha( 0.5 ) --[[ @ 0]]
	self:addElement( Corners ) --[[ @ 0]]
	self.Corners = Corners --[[ @ 0]]
	
	local MicImage = LUI.UIImage.new( 0.5, 0.5, -299, -247, 0.5, 0.5, -26, 26 ) --[[ @ 0]]
	MicImage:setRGB( 0.76, 0.76, 0.76 ) --[[ @ 0]]
	MicImage:setAlpha( 0.8 ) --[[ @ 0]]
	MicImage:setImage( RegisterImage( @"uie_mic" ) ) --[[ @ 0]]
	self:addElement( MicImage ) --[[ @ 0]]
	self.MicImage = MicImage --[[ @ 0]]
	
	local GenericSimpleButton = CoD.StartMenu_Options_PC_Voice_VoiceBar_RecordButton.new( f1_arg0, f1_arg1, 0.5, 0.5, -337.5, -295.5, 0.5, 0.5, -21, 21 ) --[[ @ 0]]
	local f1_local12 = GenericSimpleButton --[[ @ 0]]
	local f1_local13 = GenericSimpleButton.subscribeToModel --[[ @ 0]]
	local f1_local14 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local13( f1_local12, f1_local14["SpeakingEnergy.isRecording"], function ( f3_arg0, f3_arg1 )
		CoD.Menu.UpdateButtonShownState( f3_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	GenericSimpleButton:registerEventHandler( "gain_focus", function ( element, event )
		local f4_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f4_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f4_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f4_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( GenericSimpleButton, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		if not CoD.PCOptionsUtility.IsRecordingLoopBack( controller ) then
			CoD.PCOptionsUtility.StartLoopBackCalibrationRecording( controller ) --[[ @ 0]]
			return true
		else
			CoD.PCOptionsUtility.StopLoopBackCalibrationRecording( controller ) --[[ @ 0]]
			return true
		end
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_0", nil, "ui_confirm" ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	self:addElement( GenericSimpleButton ) --[[ @ 0]]
	self.GenericSimpleButton = GenericSimpleButton --[[ @ 0]]
	
	self:subscribeToGlobalModel( f1_arg1, "GlobalModel", "SpeakingEnergy.displayText", function ( model )
		local f7_local0 = self --[[ @ 0]]
		CoD.PCOptionsUtility.UpdateVoiceBar( f1_arg1, self, model ) --[[ @ 0]]
	end ) --[[ @ 0]]
	TooltipFocus.id = "TooltipFocus" --[[ @ 0]]
	GenericSimpleButton.id = "GenericSimpleButton" --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	f1_local13 = self --[[ @ 0]]
	f1_local13 = TooltipFocus --[[ @ 0]]
	CoD.PCWidgetUtility.SetupEmptyFocusableTooltip( f1_local13, f1_arg1, @"hash_5CCC02F6B5D8DCE1", @"hash_10A669610927190D" ) --[[ @ 0]]
	DisableKeyboardNavigationByElement( f1_local13 ) --[[ @ 0]]
	return self
end
 --[[ @ 0]]
CoD.StartMenu_Options_PC_Voice_VoiceBar.__resetProperties = function ( f8_arg0 )
	f8_arg0.OverflowIndicator4:completeAnimation() --[[ @ 0]]
	f8_arg0.OverflowIndicator3:completeAnimation() --[[ @ 0]]
	f8_arg0.OverflowIndicator2:completeAnimation() --[[ @ 0]]
	f8_arg0.OverflowIndicator1:completeAnimation() --[[ @ 0]]
	f8_arg0.DynamicBar:completeAnimation() --[[ @ 0]]
	f8_arg0.Maximum:completeAnimation() --[[ @ 0]]
	f8_arg0.TextBox:completeAnimation() --[[ @ 0]]
	f8_arg0.Corners:completeAnimation() --[[ @ 0]]
	f8_arg0.GenericSimpleButton:completeAnimation() --[[ @ 0]]
	f8_arg0.MicImage:completeAnimation() --[[ @ 0]]
	f8_arg0.OverflowIndicator4:setRGB( 0.76, 0.76, 0.76 ) --[[ @ 0]]
	f8_arg0.OverflowIndicator4:setAlpha( 0.44 ) --[[ @ 0]]
	f8_arg0.OverflowIndicator3:setAlpha( 1 ) --[[ @ 0]]
	f8_arg0.OverflowIndicator2:setAlpha( 1 ) --[[ @ 0]]
	f8_arg0.OverflowIndicator1:setAlpha( 1 ) --[[ @ 0]]
	f8_arg0.DynamicBar:setRGB( 1, 1, 1 ) --[[ @ 0]]
	f8_arg0.DynamicBar:setAlpha( 1 ) --[[ @ 0]]
	f8_arg0.Maximum:setAlpha( 0.44 ) --[[ @ 0]]
	f8_arg0.TextBox:setAlpha( 0.6 ) --[[ @ 0]]
	f8_arg0.Corners:setAlpha( 0.5 ) --[[ @ 0]]
	f8_arg0.GenericSimpleButton:setAlpha( 1 ) --[[ @ 0]]
	f8_arg0.MicImage:setAlpha( 0.8 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.StartMenu_Options_PC_Voice_VoiceBar.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f9_arg0, f9_arg1 )
			f9_arg0:__resetProperties() --[[ @ 0]]
			f9_arg0:setupElementClipCounter( 5 ) --[[ @ 0]]
			f9_arg0.OverflowIndicator1:completeAnimation() --[[ @ 0]]
			f9_arg0.OverflowIndicator1:setAlpha( 0 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.OverflowIndicator1 ) --[[ @ 0]]
			f9_arg0.OverflowIndicator2:completeAnimation() --[[ @ 0]]
			f9_arg0.OverflowIndicator2:setAlpha( 0 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.OverflowIndicator2 ) --[[ @ 0]]
			f9_arg0.OverflowIndicator3:completeAnimation() --[[ @ 0]]
			f9_arg0.OverflowIndicator3:setAlpha( 0 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.OverflowIndicator3 ) --[[ @ 0]]
			f9_arg0.OverflowIndicator4:completeAnimation() --[[ @ 0]]
			f9_arg0.OverflowIndicator4:setAlpha( 0 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.OverflowIndicator4 ) --[[ @ 0]]
			f9_arg0.DynamicBar:completeAnimation() --[[ @ 0]]
			f9_arg0.DynamicBar:setRGB( 1, 1, 1 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.DynamicBar ) --[[ @ 0]]
		end
	},
	Hidden = {
		DefaultClip = function ( f10_arg0, f10_arg1 )
			f10_arg0:__resetProperties() --[[ @ 0]]
			f10_arg0:setupElementClipCounter( 10 ) --[[ @ 0]]
			f10_arg0.Maximum:completeAnimation() --[[ @ 0]]
			f10_arg0.Maximum:setAlpha( 0 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.Maximum ) --[[ @ 0]]
			f10_arg0.OverflowIndicator1:completeAnimation() --[[ @ 0]]
			f10_arg0.OverflowIndicator1:setAlpha( 0 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.OverflowIndicator1 ) --[[ @ 0]]
			f10_arg0.OverflowIndicator2:completeAnimation() --[[ @ 0]]
			f10_arg0.OverflowIndicator2:setAlpha( 0 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.OverflowIndicator2 ) --[[ @ 0]]
			f10_arg0.OverflowIndicator3:completeAnimation() --[[ @ 0]]
			f10_arg0.OverflowIndicator3:setAlpha( 0 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.OverflowIndicator3 ) --[[ @ 0]]
			f10_arg0.OverflowIndicator4:completeAnimation() --[[ @ 0]]
			f10_arg0.OverflowIndicator4:setAlpha( 0 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.OverflowIndicator4 ) --[[ @ 0]]
			f10_arg0.TextBox:completeAnimation() --[[ @ 0]]
			f10_arg0.TextBox:setAlpha( 0 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.TextBox ) --[[ @ 0]]
			f10_arg0.DynamicBar:completeAnimation() --[[ @ 0]]
			f10_arg0.DynamicBar:setAlpha( 0 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.DynamicBar ) --[[ @ 0]]
			f10_arg0.Corners:completeAnimation() --[[ @ 0]]
			f10_arg0.Corners:setAlpha( 0 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.Corners ) --[[ @ 0]]
			f10_arg0.MicImage:completeAnimation() --[[ @ 0]]
			f10_arg0.MicImage:setAlpha( 0 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.MicImage ) --[[ @ 0]]
			f10_arg0.GenericSimpleButton:completeAnimation() --[[ @ 0]]
			f10_arg0.GenericSimpleButton:setAlpha( 0 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.GenericSimpleButton ) --[[ @ 0]]
		end
	},
	Overflow = {
		DefaultClip = function ( f11_arg0, f11_arg1 )
			f11_arg0:__resetProperties() --[[ @ 0]]
			f11_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			local f11_local0 = function ( f12_arg0 )
				local f12_local0 = function ( f13_arg0 )
					f13_arg0:beginAnimation( 280 ) --[[ @ 0]]
					f13_arg0:setRGB( 0.76, 0.76, 0.76 ) --[[ @ 0]]
					f13_arg0:registerEventHandler( "transition_complete_keyframe", f11_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f11_arg0.OverflowIndicator4:beginAnimation( 220 ) --[[ @ 0]]
				f11_arg0.OverflowIndicator4:setRGB( 1, 0, 0 ) --[[ @ 0]]
				f11_arg0.OverflowIndicator4:registerEventHandler( "interrupted_keyframe", f11_arg0.clipInterrupted ) --[[ @ 0]]
				f11_arg0.OverflowIndicator4:registerEventHandler( "transition_complete_keyframe", f12_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f11_arg0.OverflowIndicator4:completeAnimation() --[[ @ 0]]
			f11_arg0.OverflowIndicator4:setRGB( 0.76, 0.76, 0.76 ) --[[ @ 0]]
			f11_local0( f11_arg0.OverflowIndicator4 ) --[[ @ 0]]
			f11_arg0.DynamicBar:completeAnimation() --[[ @ 0]]
			f11_arg0.DynamicBar:setRGB( 1, 0, 0 ) --[[ @ 0]]
			f11_arg0.clipFinished( f11_arg0.DynamicBar ) --[[ @ 0]]
			f11_arg0.nextClip = "DefaultClip" --[[ @ 0]]
		end
	},
	OverRecommended = {
		DefaultClip = function ( f14_arg0, f14_arg1 )
			f14_arg0:__resetProperties() --[[ @ 0]]
			f14_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f14_arg0.OverflowIndicator1:completeAnimation() --[[ @ 0]]
			f14_arg0.OverflowIndicator1:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.OverflowIndicator1 ) --[[ @ 0]]
			f14_arg0.OverflowIndicator2:completeAnimation() --[[ @ 0]]
			f14_arg0.OverflowIndicator2:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.OverflowIndicator2 ) --[[ @ 0]]
			f14_arg0.OverflowIndicator3:completeAnimation() --[[ @ 0]]
			f14_arg0.OverflowIndicator3:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.OverflowIndicator3 ) --[[ @ 0]]
			f14_arg0.OverflowIndicator4:completeAnimation() --[[ @ 0]]
			f14_arg0.OverflowIndicator4:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.OverflowIndicator4 ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.StartMenu_Options_PC_Voice_VoiceBar.__onClose = function ( f15_arg0 )
	f15_arg0.TooltipFocus:close() --[[ @ 0]]
	f15_arg0.DynamicBar:close() --[[ @ 0]]
	f15_arg0.Corners:close() --[[ @ 0]]
	f15_arg0.GenericSimpleButton:close() --[[ @ 0]]
end
 --[[ @ 0]]
