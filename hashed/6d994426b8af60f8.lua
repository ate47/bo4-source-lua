-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:35
require( "x64:2c2f840fd2528321" ) --[[ @ 0]]
require( "ui/uieditor/widgets/fileshare/fullscreenpopup/fullscreenpopuptemplate" ) --[[ @ 0]]
require( "ui/uieditor/widgets/footer/fe_leftcontainer_notlobby" ) --[[ @ 0]]
require( "x64:25498fd235ed9285" ) --[[ @ 0]]
require( "x64:48a2bfd7fd77a149" ) --[[ @ 0]]

CoD.DemoSaveSegmentPopup = InheritFrom( CoD.Menu ) --[[ @ 0]]
LUI.createMenu.DemoSaveSegmentPopup = function ( f1_arg0, f1_arg1 )
	local self = CoD.Menu.NewForUIEditor( "DemoSaveSegmentPopup", f1_arg0 ) --[[ @ 0]]
	local f1_local1 = self --[[ @ 0]]
	if IsPC() then
		CoD.BaseUtility.InitControllerModel( f1_arg0, "DemoTitleText" ) --[[ @ 0]]
	end
	self:setClass( CoD.DemoSaveSegmentPopup ) --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self:setOwner( f1_arg0 ) --[[ @ 0]]
	self:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	self:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	self:playSound( "menu_open", f1_arg0 ) --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	local emptyFocusableNoCursorUpdate = nil --[[ @ 0]]
	
	emptyFocusableNoCursorUpdate = CoD.emptyFocusableNoCursorUpdate.new( f1_local1, f1_arg0, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	self:addElement( emptyFocusableNoCursorUpdate ) --[[ @ 0]]
	self.emptyFocusableNoCursorUpdate = emptyFocusableNoCursorUpdate --[[ @ 0]]
	
	local FullscreenPopupTemplate = CoD.FullscreenPopupTemplate.new( f1_local1, f1_arg0, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	FullscreenPopupTemplate.Subtitle:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_57BDC7223FDD20A0" ) ) --[[ @ 0]]
	FullscreenPopupTemplate.ErrorSubtitle:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_39C62D3C1C35DC01" ) ) --[[ @ 0]]
	FullscreenPopupTemplate.WorkingTitle:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_5C76223999D97EC9" ) ) --[[ @ 0]]
	FullscreenPopupTemplate.Title:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_2471098B0579A24C" ) ) --[[ @ 0]]
	FullscreenPopupTemplate.DoneTitle:setText( LocalizeToUpperString( @"hash_393E719493E9E18F" ) ) --[[ @ 0]]
	self:addElement( FullscreenPopupTemplate ) --[[ @ 0]]
	self.FullscreenPopupTemplate = FullscreenPopupTemplate --[[ @ 0]]
	
	local TitleText = LUI.UIText.new( 0.5, 0.5, -267, 835, 0.5, 0.5, -93, -72 ) --[[ @ 0]]
	TitleText:setRGB( ColorSet.T8__OFF__GRAY.r, ColorSet.T8__OFF__GRAY.g, ColorSet.T8__OFF__GRAY.b ) --[[ @ 0]]
	TitleText:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_26C2F065A6AA8DA7" ) ) --[[ @ 0]]
	TitleText:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	TitleText:setLetterSpacing( 2 ) --[[ @ 0]]
	TitleText:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	TitleText:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	self:addElement( TitleText ) --[[ @ 0]]
	self.TitleText = TitleText --[[ @ 0]]
	
	local TitlePreview = LUI.UIText.new( 0.5, 0.5, -267, 835, 0.5, 0.5, 0, 21 ) --[[ @ 0]]
	TitlePreview:setRGB( ColorSet.T8__OFF__GRAY.r, ColorSet.T8__OFF__GRAY.g, ColorSet.T8__OFF__GRAY.b ) --[[ @ 0]]
	TitlePreview:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_9E22C6CE275ABC3" ) ) --[[ @ 0]]
	TitlePreview:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	TitlePreview:setLetterSpacing( 2 ) --[[ @ 0]]
	TitlePreview:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	TitlePreview:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	self:addElement( TitlePreview ) --[[ @ 0]]
	self.TitlePreview = TitlePreview --[[ @ 0]]
	
	local LblPermissions = LUI.UIText.new( 0.5, 0.5, -267, -217, 0.5, 0.5, 88, 126 ) --[[ @ 0]]
	LblPermissions:setAlpha( 0 ) --[[ @ 0]]
	LblPermissions:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_4843FACDBE21C207" ) ) --[[ @ 0]]
	LblPermissions:setTTF( "default" ) --[[ @ 0]]
	LblPermissions:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	LblPermissions:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	self:addElement( LblPermissions ) --[[ @ 0]]
	self.LblPermissions = LblPermissions --[[ @ 0]]
	
	local leftButtonBar = CoD.fe_LeftContainer_NOTLobby.new( f1_local1, f1_arg0, 0.5, 0.5, -350, 298, 0.5, 0.5, 188, 236 ) --[[ @ 0]]
	self:addElement( leftButtonBar ) --[[ @ 0]]
	self.leftButtonBar = leftButtonBar --[[ @ 0]]
	
	local ButtonSave = CoD.EmblemOptionsButton.new( f1_local1, f1_arg0, 0.5, 0.5, -267, 133, 0.5, 0.5, 114, 174 ) --[[ @ 0]]
	ButtonSave.Button.Title:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_43B7168B75575032" ) ) --[[ @ 0]]
	ButtonSave:registerEventHandler( "gain_focus", function ( element, event )
		local f2_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f2_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f2_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f2_local0
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( ButtonSave, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ENTER", function ( element, menu, controller, model )
		CoD.DemoUtility.SaveSegment( menu, controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, "ENTER" ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	self:addElement( ButtonSave ) --[[ @ 0]]
	self.ButtonSave = ButtonSave --[[ @ 0]]
	
	local ButtonPreview = CoD.EmblemOptionsButton.new( f1_local1, f1_arg0, 0.5, 0.5, -267, 133, 0.5, 0.5, 24, 84 ) --[[ @ 0]]
	ButtonPreview.Button.Title:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_9E22C6CE275ABC3" ) ) --[[ @ 0]]
	ButtonPreview:registerEventHandler( "gain_focus", function ( element, event )
		local f5_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f5_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f5_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f5_local0
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( ButtonPreview, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], nil, function ( element, menu, controller, model )
		CoD.DemoUtility.PreviewSegment( menu, controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, nil ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	self:addElement( ButtonPreview ) --[[ @ 0]]
	self.ButtonPreview = ButtonPreview --[[ @ 0]]
	
	local f1_local10 = nil --[[ @ 0]]
	f1_local10 = LUI.UIElement.createFake() --[[ @ 0]]
	self.ButtonTitle = f1_local10 --[[ @ 0]]
	local TitleTextBox = nil --[[ @ 0]]
	
	TitleTextBox = CoD.DemoRenameTextBox.new( f1_local1, f1_arg0, 0.5, 0.5, -274, 138, 0.5, 0.5, -67, -7 ) --[[ @ 0]]
	TitleTextBox:mergeStateConditions( {
		{
			stateName = "InputState",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsControllerModelValueNonEmptyString( f1_arg0, "DemoTitleText" )
			end
		}
	} ) --[[ @ 0]]
	local f1_local12 = TitleTextBox --[[ @ 0]]
	local f1_local13 = TitleTextBox.subscribeToModel --[[ @ 0]]
	local f1_local14 = Engine[@"GetModelForController"]( f1_arg0 ) --[[ @ 0]]
	f1_local13( f1_local12, f1_local14.DemoTitleText, function ( f9_arg0 )
		f1_local1:updateElementState( TitleTextBox, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f9_arg0:get(),
			modelName = "DemoTitleText"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	TitleTextBox:subscribeToGlobalModel( f1_arg0, "Demo", "segmentName", function ( model )
		local f10_local0 = model:get() --[[ @ 0]]
		if f10_local0 ~= nil then
			TitleTextBox.RenameText:setText( CoD.BaseUtility.LocalizeIfXHash( f10_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( TitleTextBox, "childFocusLost", function ( element )
		if CoD.ModelUtility.IsControllerModelValueNonEmptyString( f1_arg0, "DemoTitleText" ) then
			SetElementState( self, element, f1_arg0, "DefaultState" ) --[[ @ 0]]
			CoD.DemoUtility.SaveFileProperty( element, Enum[@"hash_EAFC1D0E771FFBD"][@"hash_5107B30313EA4156"] ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( TitleTextBox, "close", function ( element )
		if IsPC() then
			SetControllerModelValue( f1_arg0, "DemoTitleText", "" ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( TitleTextBox ) --[[ @ 0]]
	self.TitleTextBox = TitleTextBox --[[ @ 0]]
	
	if CoD.isPC then
		emptyFocusableNoCursorUpdate.id = "emptyFocusableNoCursorUpdate" --[[ @ 0]]
	end
	FullscreenPopupTemplate.id = "FullscreenPopupTemplate" --[[ @ 0]]
	leftButtonBar:setModel( self.buttonModel, f1_arg0 ) --[[ @ 0]]
	if CoD.isPC then
		leftButtonBar.id = "leftButtonBar" --[[ @ 0]]
	end
	ButtonSave.id = "ButtonSave" --[[ @ 0]]
	ButtonPreview.id = "ButtonPreview" --[[ @ 0]]
	f1_local10.id = "ButtonTitle" --[[ @ 0]]
	if CoD.isPC then
		TitleTextBox.id = "TitleTextBox" --[[ @ 0]]
	end
	self:processEvent( {
		name = "menu_loaded",
		controller = f1_arg0
	} ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg0 ) --[[ @ 0]]
	end
	f1_local13 = self --[[ @ 0]]
	f1_local13 = TitleTextBox --[[ @ 0]]
	if IsPC() then
		CoD.PCUtility.SetElementEditBoxMaxChar( f1_local13, 16 ) --[[ @ 0]]
		CoD.PCUtility.MakeElementEditBoxRealtime( f1_local13, "DemoTitleText" ) --[[ @ 0]]
		CoD.PCUtility.SetupElementEditControlWithControllerModel( f1_local13, f1_arg0, f1_local1, "DemoTitleText" ) --[[ @ 0]]
	end
	return self
end
 --[[ @ 0]]
CoD.DemoSaveSegmentPopup.__onClose = function ( f13_arg0 )
	f13_arg0.emptyFocusableNoCursorUpdate:close() --[[ @ 0]]
	f13_arg0.FullscreenPopupTemplate:close() --[[ @ 0]]
	f13_arg0.leftButtonBar:close() --[[ @ 0]]
	f13_arg0.ButtonSave:close() --[[ @ 0]]
	f13_arg0.ButtonPreview:close() --[[ @ 0]]
	f13_arg0.ButtonTitle:close() --[[ @ 0]]
	f13_arg0.TitleTextBox:close() --[[ @ 0]]
end
 --[[ @ 0]]
