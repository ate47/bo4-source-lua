-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
CoD.AmmoWidgetMP_Ultimate_Progress_FillPulse = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.AmmoWidgetMP_Ultimate_Progress_FillPulse.__defaultWidth = 110 --[[ @ 0]]
CoD.AmmoWidgetMP_Ultimate_Progress_FillPulse.__defaultHeight = 112 --[[ @ 0]]
CoD.AmmoWidgetMP_Ultimate_Progress_FillPulse.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.AmmoWidgetMP_Ultimate_Progress_FillPulse ) --[[ @ 0]]
	self.id = "AmmoWidgetMP_Ultimate_Progress_FillPulse" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local UltimateRadialMeterFillPulse = LUI.UIImage.new( 0, 0, 0, 110, 0, 0, 0, 112 ) --[[ @ 0]]
	UltimateRadialMeterFillPulse:setImage( RegisterImage( @"uie_ui_hud_core_hero_widget_meter_fill" ) ) --[[ @ 0]]
	UltimateRadialMeterFillPulse:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_clock_add" ) ) --[[ @ 0]]
	UltimateRadialMeterFillPulse:setShaderVector( 1, 0.5, 0, 0, 0 ) --[[ @ 0]]
	UltimateRadialMeterFillPulse:setShaderVector( 2, 0.5, 0, 0, 0 ) --[[ @ 0]]
	UltimateRadialMeterFillPulse:setShaderVector( 3, 0.2, 0, 0, 0 ) --[[ @ 0]]
	UltimateRadialMeterFillPulse:setShaderVector( 4, 0, 0, 0, 0 ) --[[ @ 0]]
	UltimateRadialMeterFillPulse:linkToElementModel( self, "powerRatio", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			UltimateRadialMeterFillPulse:beginAnimation( 500 ) --[[ @ 0]]
			UltimateRadialMeterFillPulse:setShaderVector( 0, CoD.BaseUtility.AnimateWidgetOnChangeVector( 500, CoD.GetVectorComponentFromString( f2_local0, 1 ), CoD.GetVectorComponentFromString( f2_local0, 2 ), CoD.GetVectorComponentFromString( f2_local0, 3 ), CoD.GetVectorComponentFromString( f2_local0, 4 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( UltimateRadialMeterFillPulse ) --[[ @ 0]]
	self.UltimateRadialMeterFillPulse = UltimateRadialMeterFillPulse --[[ @ 0]]
	
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	local f1_local2 = self --[[ @ 0]]
	CoD.HUDUtility.RegisterUltimatePulseFinished( self, "ProgressPulseFinished" ) --[[ @ 0]]
	return self
end
 --[[ @ 0]]
CoD.AmmoWidgetMP_Ultimate_Progress_FillPulse.__resetProperties = function ( f3_arg0 )
	f3_arg0.UltimateRadialMeterFillPulse:completeAnimation() --[[ @ 0]]
	f3_arg0.UltimateRadialMeterFillPulse:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.AmmoWidgetMP_Ultimate_Progress_FillPulse.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f4_arg0, f4_arg1 )
			f4_arg0:__resetProperties() --[[ @ 0]]
			f4_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f4_arg0.UltimateRadialMeterFillPulse:completeAnimation() --[[ @ 0]]
			f4_arg0.UltimateRadialMeterFillPulse:setAlpha( 0 ) --[[ @ 0]]
			f4_arg0.clipFinished( f4_arg0.UltimateRadialMeterFillPulse ) --[[ @ 0]]
		end,
		ProgressPulseFinished = function ( f5_arg0, f5_arg1 )
			f5_arg0:__resetProperties() --[[ @ 0]]
			f5_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f5_local0 = function ( f6_arg0 )
				local f6_local0 = function ( f7_arg0 )
					f7_arg0:beginAnimation( 210 ) --[[ @ 0]]
					f7_arg0:setAlpha( 0 ) --[[ @ 0]]
					f7_arg0:registerEventHandler( "transition_complete_keyframe", f5_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f5_arg0.UltimateRadialMeterFillPulse:beginAnimation( 120 ) --[[ @ 0]]
				f5_arg0.UltimateRadialMeterFillPulse:setAlpha( 1 ) --[[ @ 0]]
				f5_arg0.UltimateRadialMeterFillPulse:registerEventHandler( "interrupted_keyframe", f5_arg0.clipInterrupted ) --[[ @ 0]]
				f5_arg0.UltimateRadialMeterFillPulse:registerEventHandler( "transition_complete_keyframe", f6_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f5_arg0.UltimateRadialMeterFillPulse:completeAnimation() --[[ @ 0]]
			f5_arg0.UltimateRadialMeterFillPulse:setAlpha( 0 ) --[[ @ 0]]
			f5_local0( f5_arg0.UltimateRadialMeterFillPulse ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.AmmoWidgetMP_Ultimate_Progress_FillPulse.__onClose = function ( f8_arg0 )
	f8_arg0.UltimateRadialMeterFillPulse:close() --[[ @ 0]]
end
 --[[ @ 0]]
