-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
require( "x64:6ff936e9bc4df392" ) --[[ @ 0]]

CoD.DirectorZMTutorialMapSelectItem = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.DirectorZMTutorialMapSelectItem.__defaultWidth = 246 --[[ @ 0]]
CoD.DirectorZMTutorialMapSelectItem.__defaultHeight = 104 --[[ @ 0]]
CoD.DirectorZMTutorialMapSelectItem.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.DirectorZMTutorialMapSelectItem ) --[[ @ 0]]
	self.id = "DirectorZMTutorialMapSelectItem" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local Botton = CoD.DirectorTutorialMapSelectItem_Internal.new( f1_arg0, f1_arg1, 0, 0, 0, 246, 0, 0, 0, 104 ) --[[ @ 0]]
	Botton:linkToElementModel( self, nil, false, function ( model )
		Botton:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	Botton:linkToElementModel( self, "id", true, function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			Botton.MapImage:setImage( RegisterImage( MapNameToMapImage( f3_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	Botton:linkToElementModel( self, "name", true, function ( model )
		local f4_local0 = model:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			Botton.MapName:setText( Engine[@"hash_4F9F1239CFD921FE"]( f4_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	Botton:linkToElementModel( self, "icon", true, function ( model )
		local f5_local0 = model:get() --[[ @ 0]]
		if f5_local0 ~= nil then
			Botton.GamemodeIcon:setImage( RegisterImage( f5_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Botton ) --[[ @ 0]]
	self.Botton = Botton --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Selected",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalModelValueEqualToSelfModelValue( element, "MapVote.mapVoteMapNext", "id" ) and CoD.ModelUtility.IsGlobalModelValueEqualToSelfModelValue( element, "localZMDifficulty", "difficulty" )
			end
		}
	} ) --[[ @ 0]]
	local f1_local2 = self --[[ @ 0]]
	local f1_local3 = self.subscribeToModel --[[ @ 0]]
	local f1_local4 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local3( f1_local2, f1_local4["MapVote.mapVoteMapNext"], function ( f7_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f7_arg0:get(),
			modelName = "MapVote.mapVoteMapNext"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:linkToElementModel( self, "id", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "id"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	f1_local2 = self --[[ @ 0]]
	f1_local3 = self.subscribeToModel --[[ @ 0]]
	f1_local4 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local3( f1_local2, f1_local4.localZMDifficulty, function ( f9_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f9_arg0:get(),
			modelName = "localZMDifficulty"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:linkToElementModel( self, "difficulty", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "difficulty"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	Botton.id = "Botton" --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.DirectorZMTutorialMapSelectItem.__resetProperties = function ( f11_arg0 )
	f11_arg0.Botton:completeAnimation() --[[ @ 0]]
	f11_arg0.Botton:setScale( 1, 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorZMTutorialMapSelectItem.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f12_arg0, f12_arg1 )
			f12_arg0:__resetProperties() --[[ @ 0]]
			f12_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end,
		ChildFocus = function ( f13_arg0, f13_arg1 )
			f13_arg0:__resetProperties() --[[ @ 0]]
			f13_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f13_arg0.Botton:completeAnimation() --[[ @ 0]]
			f13_arg0.Botton:setScale( 1.05, 1.05 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.Botton ) --[[ @ 0]]
		end,
		GainChildFocus = function ( f14_arg0, f14_arg1 )
			f14_arg0:__resetProperties() --[[ @ 0]]
			f14_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f14_local0 = function ( f15_arg0 )
				f14_arg0.Botton:beginAnimation( 200 ) --[[ @ 0]]
				f14_arg0.Botton:setScale( 1.05, 1.05 ) --[[ @ 0]]
				f14_arg0.Botton:registerEventHandler( "interrupted_keyframe", f14_arg0.clipInterrupted ) --[[ @ 0]]
				f14_arg0.Botton:registerEventHandler( "transition_complete_keyframe", f14_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f14_arg0.Botton:completeAnimation() --[[ @ 0]]
			f14_arg0.Botton:setScale( 1, 1 ) --[[ @ 0]]
			f14_local0( f14_arg0.Botton ) --[[ @ 0]]
		end,
		LoseChildFocus = function ( f16_arg0, f16_arg1 )
			f16_arg0:__resetProperties() --[[ @ 0]]
			f16_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f16_local0 = function ( f17_arg0 )
				f16_arg0.Botton:beginAnimation( 200 ) --[[ @ 0]]
				f16_arg0.Botton:setScale( 1, 1 ) --[[ @ 0]]
				f16_arg0.Botton:registerEventHandler( "interrupted_keyframe", f16_arg0.clipInterrupted ) --[[ @ 0]]
				f16_arg0.Botton:registerEventHandler( "transition_complete_keyframe", f16_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f16_arg0.Botton:completeAnimation() --[[ @ 0]]
			f16_arg0.Botton:setScale( 1.05, 1.05 ) --[[ @ 0]]
			f16_local0( f16_arg0.Botton ) --[[ @ 0]]
		end
	},
	Selected = {
		DefaultClip = function ( f18_arg0, f18_arg1 )
			f18_arg0:__resetProperties() --[[ @ 0]]
			f18_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end,
		ChildFocus = function ( f19_arg0, f19_arg1 )
			f19_arg0:__resetProperties() --[[ @ 0]]
			f19_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f19_arg0.Botton:completeAnimation() --[[ @ 0]]
			f19_arg0.Botton:setScale( 1.05, 1.05 ) --[[ @ 0]]
			f19_arg0.clipFinished( f19_arg0.Botton ) --[[ @ 0]]
		end,
		GainChildFocus = function ( f20_arg0, f20_arg1 )
			f20_arg0:__resetProperties() --[[ @ 0]]
			f20_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f20_local0 = function ( f21_arg0 )
				f20_arg0.Botton:beginAnimation( 200 ) --[[ @ 0]]
				f20_arg0.Botton:setScale( 1.05, 1.05 ) --[[ @ 0]]
				f20_arg0.Botton:registerEventHandler( "interrupted_keyframe", f20_arg0.clipInterrupted ) --[[ @ 0]]
				f20_arg0.Botton:registerEventHandler( "transition_complete_keyframe", f20_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f20_arg0.Botton:completeAnimation() --[[ @ 0]]
			f20_arg0.Botton:setScale( 1, 1 ) --[[ @ 0]]
			f20_local0( f20_arg0.Botton ) --[[ @ 0]]
		end,
		LoseChildFocus = function ( f22_arg0, f22_arg1 )
			f22_arg0:__resetProperties() --[[ @ 0]]
			f22_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f22_local0 = function ( f23_arg0 )
				f22_arg0.Botton:beginAnimation( 200 ) --[[ @ 0]]
				f22_arg0.Botton:setScale( 1, 1 ) --[[ @ 0]]
				f22_arg0.Botton:registerEventHandler( "interrupted_keyframe", f22_arg0.clipInterrupted ) --[[ @ 0]]
				f22_arg0.Botton:registerEventHandler( "transition_complete_keyframe", f22_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f22_arg0.Botton:completeAnimation() --[[ @ 0]]
			f22_arg0.Botton:setScale( 1.05, 1.05 ) --[[ @ 0]]
			f22_local0( f22_arg0.Botton ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.DirectorZMTutorialMapSelectItem.__onClose = function ( f24_arg0 )
	f24_arg0.Botton:close() --[[ @ 0]]
end
 --[[ @ 0]]
