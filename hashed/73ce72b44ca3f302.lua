-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:35
CoD.ItemDetailsCasePrice = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.ItemDetailsCasePrice.__defaultWidth = 200 --[[ @ 0]]
CoD.ItemDetailsCasePrice.__defaultHeight = 28 --[[ @ 0]]
CoD.ItemDetailsCasePrice.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.ItemDetailsCasePrice ) --[[ @ 0]]
	self.id = "ItemDetailsCasePrice" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local CasePriceText = LUI.UIText.new( 0, 1, 0, 0, 0, 0, 0, 28 ) --[[ @ 0]]
	CasePriceText:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	CasePriceText:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	CasePriceText:setLetterSpacing( 2 ) --[[ @ 0]]
	CasePriceText:setAlignment( Enum[@"LUIAlignment"][@"hash_1FEEB12BCB0D7041"] ) --[[ @ 0]]
	CasePriceText:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	CasePriceText:linkToElementModel( self, "casePrice", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			CasePriceText:setText( LocalizeIntoString( @"hash_79CBD79D3C8A2BED", f2_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( CasePriceText ) --[[ @ 0]]
	self.CasePriceText = CasePriceText --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "InsufficientFunds",
			condition = function ( menu, element, event )
				return not CoD.BlackMarketUtility.CanExchangeLootCases( f1_arg1, element )
			end
		}
	} ) --[[ @ 0]]
	local f1_local2 = self --[[ @ 0]]
	local f1_local3 = self.subscribeToModel --[[ @ 0]]
	local f1_local4 = DataSources.ReservesItemCounts.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local3( f1_local2, f1_local4.lootCaseCount, function ( f4_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f4_arg0:get(),
			modelName = "lootCaseCount"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:linkToElementModel( self, "casePrice", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "casePrice"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.ItemDetailsCasePrice.__resetProperties = function ( f6_arg0 )
	f6_arg0.CasePriceText:completeAnimation() --[[ @ 0]]
	f6_arg0.CasePriceText:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ItemDetailsCasePrice.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f7_arg0, f7_arg1 )
			f7_arg0:__resetProperties() --[[ @ 0]]
			f7_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	InsufficientFunds = {
		DefaultClip = function ( f8_arg0, f8_arg1 )
			f8_arg0:__resetProperties() --[[ @ 0]]
			f8_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f8_arg0.CasePriceText:completeAnimation() --[[ @ 0]]
			f8_arg0.CasePriceText:setRGB( ColorSet.InsufficientFunds.r, ColorSet.InsufficientFunds.g, ColorSet.InsufficientFunds.b ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.CasePriceText ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.ItemDetailsCasePrice.__onClose = function ( f9_arg0 )
	f9_arg0.CasePriceText:close() --[[ @ 0]]
end
 --[[ @ 0]]
