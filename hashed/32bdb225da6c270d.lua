-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:49
require( "ui/uieditor/widgets/fileshare/selectedfilmsummarygameresult" ) --[[ @ 0]]
require( "ui/uieditor/widgets/fileshare/selectedfilmsummaryscorecolumn" ) --[[ @ 0]]

CoD.SelectedFilmSummaryInformation = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.SelectedFilmSummaryInformation.__defaultWidth = 515 --[[ @ 0]]
CoD.SelectedFilmSummaryInformation.__defaultHeight = 105 --[[ @ 0]]
CoD.SelectedFilmSummaryInformation.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.SelectedFilmSummaryInformation ) --[[ @ 0]]
	self.id = "SelectedFilmSummaryInformation" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local SelectedFilmSummaryGameResult = CoD.SelectedFilmSummaryGameResult.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 0, 0, 36 ) --[[ @ 0]]
	SelectedFilmSummaryGameResult:linkToElementModel( self, nil, false, function ( model )
		SelectedFilmSummaryGameResult:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( SelectedFilmSummaryGameResult ) --[[ @ 0]]
	self.SelectedFilmSummaryGameResult = SelectedFilmSummaryGameResult --[[ @ 0]]
	
	local ScoreColumn1 = CoD.SelectedFilmSummaryScoreColumn.new( f1_arg0, f1_arg1, 0, 0, 384, 515, 0, 0, 39.5, 104.5 ) --[[ @ 0]]
	ScoreColumn1:linkToElementModel( self, "column1Header", true, function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			ScoreColumn1.HeaderText:setText( Engine[@"hash_4F9F1239CFD921FE"]( f3_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	ScoreColumn1:linkToElementModel( self, "column1Value", true, function ( model )
		local f4_local0 = model:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			ScoreColumn1.ValueText:setText( f4_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( ScoreColumn1 ) --[[ @ 0]]
	self.ScoreColumn1 = ScoreColumn1 --[[ @ 0]]
	
	local ScoreColumn2 = CoD.SelectedFilmSummaryScoreColumn.new( f1_arg0, f1_arg1, 0, 0, 192, 323, 0, 0, 39.5, 104.5 ) --[[ @ 0]]
	ScoreColumn2:linkToElementModel( self, "column2Header", true, function ( model )
		local f5_local0 = model:get() --[[ @ 0]]
		if f5_local0 ~= nil then
			ScoreColumn2.HeaderText:setText( Engine[@"hash_4F9F1239CFD921FE"]( f5_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	ScoreColumn2:linkToElementModel( self, "column2Value", true, function ( model )
		local f6_local0 = model:get() --[[ @ 0]]
		if f6_local0 ~= nil then
			ScoreColumn2.ValueText:setText( f6_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( ScoreColumn2 ) --[[ @ 0]]
	self.ScoreColumn2 = ScoreColumn2 --[[ @ 0]]
	
	local ScoreColumn3 = CoD.SelectedFilmSummaryScoreColumn.new( f1_arg0, f1_arg1, 0, 0, 0, 131, 0, 0, 39.5, 104.5 ) --[[ @ 0]]
	ScoreColumn3:linkToElementModel( self, "column3Header", true, function ( model )
		local f7_local0 = model:get() --[[ @ 0]]
		if f7_local0 ~= nil then
			ScoreColumn3.HeaderText:setText( Engine[@"hash_4F9F1239CFD921FE"]( f7_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	ScoreColumn3:linkToElementModel( self, "column3Value", true, function ( model )
		local f8_local0 = model:get() --[[ @ 0]]
		if f8_local0 ~= nil then
			ScoreColumn3.ValueText:setText( f8_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( ScoreColumn3 ) --[[ @ 0]]
	self.ScoreColumn3 = ScoreColumn3 --[[ @ 0]]
	
	local ScoreColumn4 = CoD.SelectedFilmSummaryScoreColumn.new( f1_arg0, f1_arg1, 0, 0, 525, 656, 0, 0, 37, 102 ) --[[ @ 0]]
	ScoreColumn4:setAlpha( 0 ) --[[ @ 0]]
	ScoreColumn4:linkToElementModel( self, "column4Header", true, function ( model )
		local f9_local0 = model:get() --[[ @ 0]]
		if f9_local0 ~= nil then
			ScoreColumn4.HeaderText:setText( Engine[@"hash_4F9F1239CFD921FE"]( f9_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	ScoreColumn4:linkToElementModel( self, "column4Value", true, function ( model )
		local f10_local0 = model:get() --[[ @ 0]]
		if f10_local0 ~= nil then
			ScoreColumn4.ValueText:setText( f10_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( ScoreColumn4 ) --[[ @ 0]]
	self.ScoreColumn4 = ScoreColumn4 --[[ @ 0]]
	
	local Divider1 = LUI.UIImage.new( 0, 0, 161, 162, 1, 1, -65, 0 ) --[[ @ 0]]
	Divider1:setRGB( ColorSet.T8__OFF__GRAY.r, ColorSet.T8__OFF__GRAY.g, ColorSet.T8__OFF__GRAY.b ) --[[ @ 0]]
	Divider1:setAlpha( 0.15 ) --[[ @ 0]]
	self:addElement( Divider1 ) --[[ @ 0]]
	self.Divider1 = Divider1 --[[ @ 0]]
	
	local Divider2 = LUI.UIImage.new( 0, 0, 360, 361, 1, 1, -65, 0 ) --[[ @ 0]]
	Divider2:setRGB( ColorSet.T8__OFF__GRAY.r, ColorSet.T8__OFF__GRAY.g, ColorSet.T8__OFF__GRAY.b ) --[[ @ 0]]
	Divider2:setAlpha( 0.15 ) --[[ @ 0]]
	self:addElement( Divider2 ) --[[ @ 0]]
	self.Divider2 = Divider2 --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return not CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg1, "isValid" )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "isValid", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "isValid"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.SelectedFilmSummaryInformation.__resetProperties = function ( f13_arg0 )
	f13_arg0.SelectedFilmSummaryGameResult:completeAnimation() --[[ @ 0]]
	f13_arg0.Divider2:completeAnimation() --[[ @ 0]]
	f13_arg0.Divider1:completeAnimation() --[[ @ 0]]
	f13_arg0.ScoreColumn4:completeAnimation() --[[ @ 0]]
	f13_arg0.ScoreColumn3:completeAnimation() --[[ @ 0]]
	f13_arg0.ScoreColumn2:completeAnimation() --[[ @ 0]]
	f13_arg0.ScoreColumn1:completeAnimation() --[[ @ 0]]
	f13_arg0.SelectedFilmSummaryGameResult:setAlpha( 1 ) --[[ @ 0]]
	f13_arg0.Divider2:setAlpha( 0.15 ) --[[ @ 0]]
	f13_arg0.Divider1:setAlpha( 0.15 ) --[[ @ 0]]
	f13_arg0.ScoreColumn4:setAlpha( 0 ) --[[ @ 0]]
	f13_arg0.ScoreColumn3:setAlpha( 1 ) --[[ @ 0]]
	f13_arg0.ScoreColumn2:setAlpha( 1 ) --[[ @ 0]]
	f13_arg0.ScoreColumn1:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.SelectedFilmSummaryInformation.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f14_arg0, f14_arg1 )
			f14_arg0:__resetProperties() --[[ @ 0]]
			f14_arg0:setupElementClipCounter( 7 ) --[[ @ 0]]
			f14_arg0.SelectedFilmSummaryGameResult:completeAnimation() --[[ @ 0]]
			f14_arg0.SelectedFilmSummaryGameResult:setAlpha( 1 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.SelectedFilmSummaryGameResult ) --[[ @ 0]]
			f14_arg0.ScoreColumn1:completeAnimation() --[[ @ 0]]
			f14_arg0.ScoreColumn1:setAlpha( 1 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.ScoreColumn1 ) --[[ @ 0]]
			f14_arg0.ScoreColumn2:completeAnimation() --[[ @ 0]]
			f14_arg0.ScoreColumn2:setAlpha( 1 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.ScoreColumn2 ) --[[ @ 0]]
			f14_arg0.ScoreColumn3:completeAnimation() --[[ @ 0]]
			f14_arg0.ScoreColumn3:setAlpha( 1 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.ScoreColumn3 ) --[[ @ 0]]
			f14_arg0.ScoreColumn4:completeAnimation() --[[ @ 0]]
			f14_arg0.ScoreColumn4:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.ScoreColumn4 ) --[[ @ 0]]
			f14_arg0.Divider1:completeAnimation() --[[ @ 0]]
			f14_arg0.Divider1:setAlpha( 0.15 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.Divider1 ) --[[ @ 0]]
			f14_arg0.Divider2:completeAnimation() --[[ @ 0]]
			f14_arg0.Divider2:setAlpha( 0.15 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.Divider2 ) --[[ @ 0]]
		end
	},
	Hidden = {
		DefaultClip = function ( f15_arg0, f15_arg1 )
			f15_arg0:__resetProperties() --[[ @ 0]]
			f15_arg0:setupElementClipCounter( 7 ) --[[ @ 0]]
			f15_arg0.SelectedFilmSummaryGameResult:completeAnimation() --[[ @ 0]]
			f15_arg0.SelectedFilmSummaryGameResult:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.SelectedFilmSummaryGameResult ) --[[ @ 0]]
			f15_arg0.ScoreColumn1:completeAnimation() --[[ @ 0]]
			f15_arg0.ScoreColumn1:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.ScoreColumn1 ) --[[ @ 0]]
			f15_arg0.ScoreColumn2:completeAnimation() --[[ @ 0]]
			f15_arg0.ScoreColumn2:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.ScoreColumn2 ) --[[ @ 0]]
			f15_arg0.ScoreColumn3:completeAnimation() --[[ @ 0]]
			f15_arg0.ScoreColumn3:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.ScoreColumn3 ) --[[ @ 0]]
			f15_arg0.ScoreColumn4:completeAnimation() --[[ @ 0]]
			f15_arg0.ScoreColumn4:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.ScoreColumn4 ) --[[ @ 0]]
			f15_arg0.Divider1:completeAnimation() --[[ @ 0]]
			f15_arg0.Divider1:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.Divider1 ) --[[ @ 0]]
			f15_arg0.Divider2:completeAnimation() --[[ @ 0]]
			f15_arg0.Divider2:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.Divider2 ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.SelectedFilmSummaryInformation.__onClose = function ( f16_arg0 )
	f16_arg0.SelectedFilmSummaryGameResult:close() --[[ @ 0]]
	f16_arg0.ScoreColumn1:close() --[[ @ 0]]
	f16_arg0.ScoreColumn2:close() --[[ @ 0]]
	f16_arg0.ScoreColumn3:close() --[[ @ 0]]
	f16_arg0.ScoreColumn4:close() --[[ @ 0]]
end
 --[[ @ 0]]
