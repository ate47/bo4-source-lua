-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:48
require( "x64:510239005cc36b68" ) --[[ @ 0]]
require( "x64:8a3543a913958f1" ) --[[ @ 0]]
require( "x64:c08a2aab18ca343" ) --[[ @ 0]]

CoD.BM_DailyContract = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.BM_DailyContract.__defaultWidth = 550 --[[ @ 0]]
CoD.BM_DailyContract.__defaultHeight = 1080 --[[ @ 0]]
CoD.BM_DailyContract.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.BM_DailyContract ) --[[ @ 0]]
	self.id = "BM_DailyContract" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local TiledBacking = LUI.UIImage.new( -0, 1, 0, 0, 0, 0, 190, 826 ) --[[ @ 0]]
	TiledBacking:setRGB( ColorSet.T8__BIEGE.r, ColorSet.T8__BIEGE.g, ColorSet.T8__BIEGE.b ) --[[ @ 0]]
	TiledBacking:setAlpha( 0.8 ) --[[ @ 0]]
	TiledBacking:setImage( RegisterImage( @"uie_ui_menu_specialist_hub_repeat_bg" ) ) --[[ @ 0]]
	TiledBacking:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_16CBE95C250C6D15" ) ) --[[ @ 0]]
	TiledBacking:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	TiledBacking:setupNineSliceShader( 196, 88 ) --[[ @ 0]]
	self:addElement( TiledBacking ) --[[ @ 0]]
	self.TiledBacking = TiledBacking --[[ @ 0]]
	
	local BottomDarkening = LUI.UIImage.new( -0, 0.99, 3, 3, 1, 1, -396.5, -254.5 ) --[[ @ 0]]
	BottomDarkening:setRGB( 0.09, 0.08, 0.06 ) --[[ @ 0]]
	BottomDarkening:setAlpha( 0.41 ) --[[ @ 0]]
	self:addElement( BottomDarkening ) --[[ @ 0]]
	self.BottomDarkening = BottomDarkening --[[ @ 0]]
	
	local CompletedBox = LUI.UIImage.new( 0.5, 0.5, -261, 262, 0.5, 0.5, -326.5, 131.5 ) --[[ @ 0]]
	CompletedBox:setRGB( 0.4, 0.55, 0.22 ) --[[ @ 0]]
	CompletedBox:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( CompletedBox ) --[[ @ 0]]
	self.CompletedBox = CompletedBox --[[ @ 0]]
	
	local GridTiled = LUI.UIImage.new( 0.04, 0.04, -20, 528, 1, 1, -887, -254 ) --[[ @ 0]]
	GridTiled:setAlpha( 0.05 ) --[[ @ 0]]
	GridTiled:setScale( 1.01, 1.01 ) --[[ @ 0]]
	GridTiled:setImage( RegisterImage( @"uie_ui_menu_store_bg_grid" ) ) --[[ @ 0]]
	GridTiled:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_16CBE95C250C6D15" ) ) --[[ @ 0]]
	GridTiled:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	GridTiled:setupNineSliceShader( 64, 64 ) --[[ @ 0]]
	self:addElement( GridTiled ) --[[ @ 0]]
	self.GridTiled = GridTiled --[[ @ 0]]
	
	local Backer = LUI.UIImage.new( 0.5, 0.5, -58.5, 59.5, 0, 0, 285, 403 ) --[[ @ 0]]
	Backer:setRGB( 0.09, 0.09, 0.09 ) --[[ @ 0]]
	Backer:setScale( 2.5, 2.5 ) --[[ @ 0]]
	Backer:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_elliptical_ring_normal" ) ) --[[ @ 0]]
	Backer:setShaderVector( 0, 40, 10, 0, 0 ) --[[ @ 0]]
	Backer:setShaderVector( 1, 100, 100, 0, 0 ) --[[ @ 0]]
	Backer:setShaderVector( 2, 0.1, 0.05, 0, 0 ) --[[ @ 0]]
	self:addElement( Backer ) --[[ @ 0]]
	self.Backer = Backer --[[ @ 0]]
	
	local Backer2 = LUI.UIImage.new( 0.5, 0.5, -58.5, 59.5, 0, 0, 285, 403 ) --[[ @ 0]]
	Backer2:setRGB( 0, 0, 0 ) --[[ @ 0]]
	Backer2:setAlpha( 0.98 ) --[[ @ 0]]
	Backer2:setScale( 2.5, 2.5 ) --[[ @ 0]]
	Backer2:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_elliptical_ring_normal" ) ) --[[ @ 0]]
	Backer2:setShaderVector( 0, 40, 10, 0, 0 ) --[[ @ 0]]
	Backer2:setShaderVector( 1, 100, 100, 0, 0 ) --[[ @ 0]]
	Backer2:setShaderVector( 2, 0.1, 0.05, 0, 0 ) --[[ @ 0]]
	self:addElement( Backer2 ) --[[ @ 0]]
	self.Backer2 = Backer2 --[[ @ 0]]
	
	local Art = LUI.UIImage.new( 0.5, 0.5, -228, 228, 0, 0, 194, 690 ) --[[ @ 0]]
	Art:setImage( RegisterImage( @"uie_ui_menu_contracts_bg_art_daily" ) ) --[[ @ 0]]
	Art:setMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	self:addElement( Art ) --[[ @ 0]]
	self.Art = Art --[[ @ 0]]
	
	local DescriptionTint2 = LUI.UIImage.new( 0, 1, 0, 0, 0, 0, 190, 684 ) --[[ @ 0]]
	DescriptionTint2:setRGB( 0.39, 0.39, 0.39 ) --[[ @ 0]]
	DescriptionTint2:setAlpha( 0.04 ) --[[ @ 0]]
	self:addElement( DescriptionTint2 ) --[[ @ 0]]
	self.DescriptionTint2 = DescriptionTint2 --[[ @ 0]]
	
	local BMContractProgress = CoD.BM_ContractProgress.new( f1_arg0, f1_arg1, 0.5, 0.5, -200, 200, 0, 0, 190, 590 ) --[[ @ 0]]
	BMContractProgress:mergeStateConditions( {
		{
			stateName = "Completed",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg1, "completed" )
			end
		}
	} ) --[[ @ 0]]
	BMContractProgress:linkToElementModel( BMContractProgress, "completed", true, function ( model )
		f1_arg0:updateElementState( BMContractProgress, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "completed"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	BMContractProgress:linkToElementModel( self, nil, false, function ( model )
		BMContractProgress:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( BMContractProgress ) --[[ @ 0]]
	self.BMContractProgress = BMContractProgress --[[ @ 0]]
	
	local BMActiveContractItemRewardsContainer = CoD.BM_ActiveContractItemRewardsContainer.new( f1_arg0, f1_arg1, 0.5, 0.5, -250, 250, 0, 0, 684, 812 ) --[[ @ 0]]
	BMActiveContractItemRewardsContainer:linkToElementModel( self, nil, false, function ( model )
		BMActiveContractItemRewardsContainer:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( BMActiveContractItemRewardsContainer ) --[[ @ 0]]
	self.BMActiveContractItemRewardsContainer = BMActiveContractItemRewardsContainer --[[ @ 0]]
	
	local Name = LUI.UIText.new( 0.14, 0.86, 6, -6, 0, 0, 568, 600 ) --[[ @ 0]]
	Name:setRGB( ColorSet.T8__OCHRE.r, ColorSet.T8__OCHRE.g, ColorSet.T8__OCHRE.b ) --[[ @ 0]]
	Name:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	Name:setLetterSpacing( 2 ) --[[ @ 0]]
	Name:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	Name:setAlignment( Enum[@"luialignment"][@"lui_alignment_bottom"] ) --[[ @ 0]]
	Name:linkToElementModel( self, "displayName", true, function ( model )
		local f6_local0 = model:get() --[[ @ 0]]
		if f6_local0 ~= nil then
			Name:setText( LocalizeToUpperString( f6_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Name ) --[[ @ 0]]
	self.Name = Name --[[ @ 0]]
	
	local Description = LUI.UIText.new( 0.05, 0.95, 42, -42, 0, 0, 604, 620 ) --[[ @ 0]]
	Description:setTTF( "dinnext_regular" ) --[[ @ 0]]
	Description:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	Description:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	Description:linkToElementModel( self, "description", true, function ( model )
		local f7_local0 = model:get() --[[ @ 0]]
		if f7_local0 ~= nil then
			Description:setText( f7_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Description ) --[[ @ 0]]
	self.Description = Description --[[ @ 0]]
	
	local ButtonTopLine9Slice = LUI.UIImage.new( 0, 1, -6, 6, 0, 0, 677, 697 ) --[[ @ 0]]
	ButtonTopLine9Slice:setAlpha( 0.11 ) --[[ @ 0]]
	ButtonTopLine9Slice:setImage( RegisterImage( @"uie_ui_menu_cac_secondary_button_top_line" ) ) --[[ @ 0]]
	ButtonTopLine9Slice:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_add" ) ) --[[ @ 0]]
	ButtonTopLine9Slice:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	ButtonTopLine9Slice:setupNineSliceShader( 120, 10 ) --[[ @ 0]]
	self:addElement( ButtonTopLine9Slice ) --[[ @ 0]]
	self.ButtonTopLine9Slice = ButtonTopLine9Slice --[[ @ 0]]
	
	local TextBox2 = LUI.UIText.new( 0, 0, 57, 600, 0, 0, 164, 182 ) --[[ @ 0]]
	TextBox2:setRGB( ColorSet.StoreAvailabilityTimer.r, ColorSet.StoreAvailabilityTimer.g, ColorSet.StoreAvailabilityTimer.b ) --[[ @ 0]]
	TextBox2:setAlpha( 0 ) --[[ @ 0]]
	TextBox2:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	TextBox2:setLetterSpacing( 2 ) --[[ @ 0]]
	TextBox2:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	TextBox2:subscribeToGlobalModel( f1_arg1, "Contracts", "dailyExpirationTime", function ( model )
		local f8_local0 = model:get() --[[ @ 0]]
		if f8_local0 ~= nil then
			TextBox2:setText( LocalizeIntoStringIfNotEmpty( @"hash_669797CFAD4CAB0C", f8_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( TextBox2 ) --[[ @ 0]]
	self.TextBox2 = TextBox2 --[[ @ 0]]
	
	local TopStripeWipe = LUI.UIImage.new( 0, 0, 0, 696, 0, 0, 188, 204 ) --[[ @ 0]]
	TopStripeWipe:setImage( RegisterImage( @"uie_ui_menu_inspection_window_loading_stripe" ) ) --[[ @ 0]]
	TopStripeWipe:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_wipe_delta" ) ) --[[ @ 0]]
	TopStripeWipe:setShaderVector( 0, 0, 0.79, 0, 0 ) --[[ @ 0]]
	TopStripeWipe:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	TopStripeWipe:setShaderVector( 2, 0, 1, 0, 0 ) --[[ @ 0]]
	TopStripeWipe:setShaderVector( 3, 0, 0, 0, 0 ) --[[ @ 0]]
	TopStripeWipe:setShaderVector( 4, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( TopStripeWipe ) --[[ @ 0]]
	self.TopStripeWipe = TopStripeWipe --[[ @ 0]]
	
	local TopStripeWipe4 = LUI.UIImage.new( 0, 0, 0, 696, 0, 0, 188, 204 ) --[[ @ 0]]
	TopStripeWipe4:setImage( RegisterImage( @"uie_ui_menu_inspection_window_loading_stripe" ) ) --[[ @ 0]]
	TopStripeWipe4:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_wipe_delta" ) ) --[[ @ 0]]
	TopStripeWipe4:setShaderVector( 0, 0, 0.79, 0, 0 ) --[[ @ 0]]
	TopStripeWipe4:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	TopStripeWipe4:setShaderVector( 2, 0, 1, 0, 0 ) --[[ @ 0]]
	TopStripeWipe4:setShaderVector( 3, 0, 0, 0, 0 ) --[[ @ 0]]
	TopStripeWipe4:setShaderVector( 4, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( TopStripeWipe4 ) --[[ @ 0]]
	self.TopStripeWipe4 = TopStripeWipe4 --[[ @ 0]]
	
	local TopStripeWipe2 = LUI.UIImage.new( 0, 0, 0, 696, 0, 0, 812, 828 ) --[[ @ 0]]
	TopStripeWipe2:setImage( RegisterImage( @"uie_ui_menu_inspection_window_loading_stripe" ) ) --[[ @ 0]]
	TopStripeWipe2:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_wipe_delta" ) ) --[[ @ 0]]
	TopStripeWipe2:setShaderVector( 0, 0, 0.79, 0, 0 ) --[[ @ 0]]
	TopStripeWipe2:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	TopStripeWipe2:setShaderVector( 2, 0, 1, 0, 0 ) --[[ @ 0]]
	TopStripeWipe2:setShaderVector( 3, 0, 0, 0, 0 ) --[[ @ 0]]
	TopStripeWipe2:setShaderVector( 4, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( TopStripeWipe2 ) --[[ @ 0]]
	self.TopStripeWipe2 = TopStripeWipe2 --[[ @ 0]]
	
	local TopStripeWipe3 = LUI.UIImage.new( 0, 0, 0, 696, 0, 0, 812, 828 ) --[[ @ 0]]
	TopStripeWipe3:setImage( RegisterImage( @"uie_ui_menu_inspection_window_loading_stripe" ) ) --[[ @ 0]]
	TopStripeWipe3:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_wipe_delta" ) ) --[[ @ 0]]
	TopStripeWipe3:setShaderVector( 0, 0, 0.79, 0, 0 ) --[[ @ 0]]
	TopStripeWipe3:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	TopStripeWipe3:setShaderVector( 2, 0, 1, 0, 0 ) --[[ @ 0]]
	TopStripeWipe3:setShaderVector( 3, 0, 0, 0, 0 ) --[[ @ 0]]
	TopStripeWipe3:setShaderVector( 4, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( TopStripeWipe3 ) --[[ @ 0]]
	self.TopStripeWipe3 = TopStripeWipe3 --[[ @ 0]]
	
	local BMContractReveal = CoD.BM_ContractReveal.new( f1_arg0, f1_arg1, 0, 0, 1, 550, 0, 0, 190, 826 ) --[[ @ 0]]
	self:addElement( BMContractReveal ) --[[ @ 0]]
	self.BMContractReveal = BMContractReveal --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Empty",
			condition = function ( menu, element, event )
				return true
			end
		},
		{
			stateName = "Completed",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg1, "completed" )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "completed", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "completed"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:subscribeToGlobalModel( f1_arg1, "PerController", "Contracts.dailyContractsExpired", function ( model )
		local f12_local0 = self --[[ @ 0]]
		if CoD.ModelUtility.IsModelValueTrue( f1_arg1, "Contracts.dailyContractsExpired" ) then
			PlayClipOnElement( self, {
				elementName = "BMContractReveal",
				clipName = "New"
			}, f1_arg1 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.BM_DailyContract.__resetProperties = function ( f13_arg0 )
	f13_arg0.Description:completeAnimation() --[[ @ 0]]
	f13_arg0.Name:completeAnimation() --[[ @ 0]]
	f13_arg0.BMActiveContractItemRewardsContainer:completeAnimation() --[[ @ 0]]
	f13_arg0.BMContractProgress:completeAnimation() --[[ @ 0]]
	f13_arg0.TextBox2:completeAnimation() --[[ @ 0]]
	f13_arg0.Backer2:completeAnimation() --[[ @ 0]]
	f13_arg0.Backer:completeAnimation() --[[ @ 0]]
	f13_arg0.CompletedBox:completeAnimation() --[[ @ 0]]
	f13_arg0.Description:setAlpha( 1 ) --[[ @ 0]]
	f13_arg0.Name:setAlpha( 1 ) --[[ @ 0]]
	f13_arg0.BMActiveContractItemRewardsContainer:setAlpha( 1 ) --[[ @ 0]]
	f13_arg0.BMContractProgress:setAlpha( 1 ) --[[ @ 0]]
	f13_arg0.TextBox2:setAlpha( 0 ) --[[ @ 0]]
	f13_arg0.Backer2:setAlpha( 0.98 ) --[[ @ 0]]
	f13_arg0.Backer:setAlpha( 1 ) --[[ @ 0]]
	f13_arg0.CompletedBox:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.BM_DailyContract.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f14_arg0, f14_arg1 )
			f14_arg0:__resetProperties() --[[ @ 0]]
			f14_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	Empty = {
		DefaultClip = function ( f15_arg0, f15_arg1 )
			f15_arg0:__resetProperties() --[[ @ 0]]
			f15_arg0:setupElementClipCounter( 7 ) --[[ @ 0]]
			f15_arg0.Backer:completeAnimation() --[[ @ 0]]
			f15_arg0.Backer:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.Backer ) --[[ @ 0]]
			f15_arg0.Backer2:completeAnimation() --[[ @ 0]]
			f15_arg0.Backer2:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.Backer2 ) --[[ @ 0]]
			f15_arg0.BMContractProgress:completeAnimation() --[[ @ 0]]
			f15_arg0.BMContractProgress:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.BMContractProgress ) --[[ @ 0]]
			f15_arg0.BMActiveContractItemRewardsContainer:completeAnimation() --[[ @ 0]]
			f15_arg0.BMActiveContractItemRewardsContainer:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.BMActiveContractItemRewardsContainer ) --[[ @ 0]]
			f15_arg0.Name:completeAnimation() --[[ @ 0]]
			f15_arg0.Name:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.Name ) --[[ @ 0]]
			f15_arg0.Description:completeAnimation() --[[ @ 0]]
			f15_arg0.Description:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.Description ) --[[ @ 0]]
			f15_arg0.TextBox2:completeAnimation() --[[ @ 0]]
			f15_arg0.TextBox2:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.TextBox2 ) --[[ @ 0]]
		end
	},
	Completed = {
		DefaultClip = function ( f16_arg0, f16_arg1 )
			f16_arg0:__resetProperties() --[[ @ 0]]
			f16_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f16_arg0.CompletedBox:completeAnimation() --[[ @ 0]]
			f16_arg0.CompletedBox:setAlpha( 0.02 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.CompletedBox ) --[[ @ 0]]
			f16_arg0.TextBox2:completeAnimation() --[[ @ 0]]
			f16_arg0.TextBox2:setAlpha( 0 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.TextBox2 ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.BM_DailyContract.__onClose = function ( f17_arg0 )
	f17_arg0.BMContractProgress:close() --[[ @ 0]]
	f17_arg0.BMActiveContractItemRewardsContainer:close() --[[ @ 0]]
	f17_arg0.Name:close() --[[ @ 0]]
	f17_arg0.Description:close() --[[ @ 0]]
	f17_arg0.TextBox2:close() --[[ @ 0]]
	f17_arg0.BMContractReveal:close() --[[ @ 0]]
end
 --[[ @ 0]]
