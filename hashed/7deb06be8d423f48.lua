-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:51
require( "x64:25ec5b3e9479f805" ) --[[ @ 0]]
require( "ui/uieditor/widgets/hud/movieplayback/moviesubtitles" ) --[[ @ 0]]
require( "ui/uieditor/widgets/lobby/common/vodviewermovieandbackground" ) --[[ @ 0]]

CoD.SkippableVoDViewer = InheritFrom( CoD.Menu ) --[[ @ 0]]
LUI.createMenu.SkippableVoDViewer = function ( f1_arg0, f1_arg1 )
	local self = CoD.Menu.NewForUIEditor( "SkippableVoDViewer", f1_arg0 ) --[[ @ 0]]
	local f1_local1 = self --[[ @ 0]]
	CoD.VideoStreamingUtility.VoDViewerPreLoadFunc( self, f1_arg0, f1_arg1 ) --[[ @ 0]]
	CoD.BaseUtility.InitGlobalModel( "cutsceneSkippable", false ) --[[ @ 0]]
	self:setClass( CoD.SkippableVoDViewer ) --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self:setOwner( f1_arg0 ) --[[ @ 0]]
	self:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	self:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	self:playSound( "menu_open", f1_arg0 ) --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	
	local LiveEventViewerMovieAndBackground = CoD.VoDViewerMovieAndBackground.new( f1_local1, f1_arg0, 0.5, 0.5, -960, 960, 0.5, 0.5, -540, 540 ) --[[ @ 0]]
	LiveEventViewerMovieAndBackground:mergeStateConditions( {
		{
			stateName = "Windowed",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		}
	} ) --[[ @ 0]]
	self:addElement( LiveEventViewerMovieAndBackground ) --[[ @ 0]]
	self.LiveEventViewerMovieAndBackground = LiveEventViewerMovieAndBackground --[[ @ 0]]
	
	local VoDViewerSkipPrompt = CoD.VoDViewerSkipPrompt.new( f1_local1, f1_arg0, 0.5, 0.5, -960, 960, 0.5, 0.5, -540, 540 ) --[[ @ 0]]
	self:addElement( VoDViewerSkipPrompt ) --[[ @ 0]]
	self.VoDViewerSkipPrompt = VoDViewerSkipPrompt --[[ @ 0]]
	
	local MovieSubtitles = CoD.MovieSubtitles.new( f1_local1, f1_arg0, 0.5, 0.5, -960, 960, 0.5, 0.5, -540, 540 ) --[[ @ 0]]
	self:addElement( MovieSubtitles ) --[[ @ 0]]
	self.MovieSubtitles = MovieSubtitles --[[ @ 0]]
	
	local f1_local5 = self --[[ @ 0]]
	local f1_local6 = self.subscribeToModel --[[ @ 0]]
	local f1_local7 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local6( f1_local5, f1_local7.cutsceneSkippable, function ( f3_arg0, f3_arg1 )
		CoD.Menu.UpdateButtonShownState( f3_arg1, f1_local1, f1_arg0, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"luibutton"][@"lui_key_xba_pscross"], "ui_confirm", function ( element, menu, controller, model )
		if CoD.ModelUtility.IsGlobalModelValueTrue( "cutsceneSkippable" ) then
			CoD.VideoStreamingUtility.SkipVoDViewer( menu, controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if CoD.ModelUtility.IsGlobalModelValueTrue( "cutsceneSkippable" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"hash_0", nil, "ui_confirm" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self.__on_menuOpened_self = function ( f6_arg0, f6_arg1, f6_arg2, f6_arg3 )
		local f6_local0 = self --[[ @ 0]]
		SetElementStateByElementName( self, "LiveEventViewerMovieAndBackground", f6_arg1, "DefaultState" ) --[[ @ 0]]
		MenuHidesFreeCursor( f6_arg2, f6_arg1 ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	f1_local1:addMenuOpenedCallback( self.__on_menuOpened_self ) --[[ @ 0]]
	self:subscribeToGlobalModel( f1_arg0, "LiveEventViewer", "currentQuality", function ( model )
		UpdateButtonPromptState( f1_local1, self, f1_arg0, Enum[@"luibutton"][@"lui_key_xbx_pssquare"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	if CoD.isPC then
		LiveEventViewerMovieAndBackground.id = "LiveEventViewerMovieAndBackground" --[[ @ 0]]
	end
	VoDViewerSkipPrompt:setModel( self.buttonModel, f1_arg0 ) --[[ @ 0]]
	self:processEvent( {
		name = "menu_loaded",
		controller = f1_arg0
	} ) --[[ @ 0]]
	self.__defaultFocus = LiveEventViewerMovieAndBackground --[[ @ 0]]
	if CoD.isPC and (IsKeyboard( f1_arg0 ) or self.ignoreCursor) then
		self:restoreState( f1_arg0 ) --[[ @ 0]]
	end
	self.__on_close_removeOverrides = function ()
		f1_local1:removeMenuOpenedCallback( self.__on_menuOpened_self ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg0 ) --[[ @ 0]]
	end
	f1_local6 = self --[[ @ 0]]
	if IsPC() then
		CoD.VideoStreamingUtility.VoDViewerPostLoadFunc( self, f1_arg0, f1_arg1 ) --[[ @ 0]]
		CoD.PCUtility.LockUIShortcutInput( f1_local1, f1_arg0 ) --[[ @ 0]]
		CoD.CTUtility.StartSkipTimer( f1_local1, 5000 ) --[[ @ 0]]
	else
		CoD.VideoStreamingUtility.VoDViewerPostLoadFunc( self, f1_arg0, f1_arg1 ) --[[ @ 0]]
		CoD.CTUtility.StartSkipTimer( f1_local1, 5000 ) --[[ @ 0]]
	end
	return self
end
 --[[ @ 0]]
CoD.SkippableVoDViewer.__onClose = function ( f9_arg0 )
	f9_arg0.__on_close_removeOverrides() --[[ @ 0]]
	f9_arg0.LiveEventViewerMovieAndBackground:close() --[[ @ 0]]
	f9_arg0.VoDViewerSkipPrompt:close() --[[ @ 0]]
	f9_arg0.MovieSubtitles:close() --[[ @ 0]]
end
 --[[ @ 0]]
