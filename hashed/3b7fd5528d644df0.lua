-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:49
require( "x64:350ce70a16679544" ) --[[ @ 0]]
require( "x64:62085c7508126617" ) --[[ @ 0]]
require( "x64:4929df020ef5e09" ) --[[ @ 0]]

CoD.vhud_hcdx_hud = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.vhud_hcdx_hud.__defaultWidth = 1920 --[[ @ 0]]
CoD.vhud_hcdx_hud.__defaultHeight = 1080 --[[ @ 0]]
CoD.vhud_hcdx_hud.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.vhud_hcdx_hud ) --[[ @ 0]]
	self.id = "vhud_hcdx_hud" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	local f1_local1 = nil --[[ @ 0]]
	self.vignette02 = LUI.UIElement.createFake() --[[ @ 0]]
	local f1_local2 = nil --[[ @ 0]]
	self.TiledShaderImage = LUI.UIElement.createFake() --[[ @ 0]]
	
	local CompassGroupMPContainer = CoD.CompassGroupMPContainer.new( f1_arg0, f1_arg1, 0, 0, 77, 427, 0, 0, 68, 418 ) --[[ @ 0]]
	CompassGroupMPContainer:mergeStateConditions( {
		{
			stateName = "InvisibleVehicle",
			condition = function ( menu, element, event )
				local f2_local0 --[[ @ 0]]
				if not IsWarzone() then
					f2_local0 = AlwaysFalse() --[[ @ 0]]
				else
					f2_local0 = false --[[ @ 0]]
				end
				return f2_local0
			end
		}
	} ) --[[ @ 0]]
	local vhudhcxdtimebar = CompassGroupMPContainer --[[ @ 0]]
	local HUDPCVehicle = CompassGroupMPContainer.subscribeToModel --[[ @ 0]]
	local f1_local6 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	HUDPCVehicle( vhudhcxdtimebar, f1_local6["hudItems.playerSpawned"], function ( f3_arg0 )
		f1_arg0:updateElementState( CompassGroupMPContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f3_arg0:get(),
			modelName = "hudItems.playerSpawned"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	vhudhcxdtimebar = CompassGroupMPContainer --[[ @ 0]]
	HUDPCVehicle = CompassGroupMPContainer.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	HUDPCVehicle( vhudhcxdtimebar, f1_local6["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_compass_visible"]], function ( f4_arg0 )
		f1_arg0:updateElementState( CompassGroupMPContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f4_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_compass_visible"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	vhudhcxdtimebar = CompassGroupMPContainer --[[ @ 0]]
	HUDPCVehicle = CompassGroupMPContainer.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	HUDPCVehicle( vhudhcxdtimebar, f1_local6["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_demo_all_game_hud_hidden"]], function ( f5_arg0 )
		f1_arg0:updateElementState( CompassGroupMPContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f5_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_demo_all_game_hud_hidden"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	vhudhcxdtimebar = CompassGroupMPContainer --[[ @ 0]]
	HUDPCVehicle = CompassGroupMPContainer.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	HUDPCVehicle( vhudhcxdtimebar, f1_local6["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_demo_camera_mode_moviecam"]], function ( f6_arg0 )
		f1_arg0:updateElementState( CompassGroupMPContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f6_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_demo_camera_mode_moviecam"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	vhudhcxdtimebar = CompassGroupMPContainer --[[ @ 0]]
	HUDPCVehicle = CompassGroupMPContainer.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	HUDPCVehicle( vhudhcxdtimebar, f1_local6["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_game_ended"]], function ( f7_arg0 )
		f1_arg0:updateElementState( CompassGroupMPContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f7_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_game_ended"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	vhudhcxdtimebar = CompassGroupMPContainer --[[ @ 0]]
	HUDPCVehicle = CompassGroupMPContainer.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	HUDPCVehicle( vhudhcxdtimebar, f1_local6["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_hud_visible"]], function ( f8_arg0 )
		f1_arg0:updateElementState( CompassGroupMPContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f8_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_hud_visible"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	vhudhcxdtimebar = CompassGroupMPContainer --[[ @ 0]]
	HUDPCVehicle = CompassGroupMPContainer.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	HUDPCVehicle( vhudhcxdtimebar, f1_local6["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_guided_missile"]], function ( f9_arg0 )
		f1_arg0:updateElementState( CompassGroupMPContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f9_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_guided_missile"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	vhudhcxdtimebar = CompassGroupMPContainer --[[ @ 0]]
	HUDPCVehicle = CompassGroupMPContainer.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	HUDPCVehicle( vhudhcxdtimebar, f1_local6["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_killcam"]], function ( f10_arg0 )
		f1_arg0:updateElementState( CompassGroupMPContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f10_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_killcam"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	vhudhcxdtimebar = CompassGroupMPContainer --[[ @ 0]]
	HUDPCVehicle = CompassGroupMPContainer.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	HUDPCVehicle( vhudhcxdtimebar, f1_local6["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_remote_killstreak_static"]], function ( f11_arg0 )
		f1_arg0:updateElementState( CompassGroupMPContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f11_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_remote_killstreak_static"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	vhudhcxdtimebar = CompassGroupMPContainer --[[ @ 0]]
	HUDPCVehicle = CompassGroupMPContainer.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	HUDPCVehicle( vhudhcxdtimebar, f1_local6["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_flash_banged"]], function ( f12_arg0 )
		f1_arg0:updateElementState( CompassGroupMPContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f12_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_flash_banged"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	vhudhcxdtimebar = CompassGroupMPContainer --[[ @ 0]]
	HUDPCVehicle = CompassGroupMPContainer.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	HUDPCVehicle( vhudhcxdtimebar, f1_local6["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_scoped"]], function ( f13_arg0 )
		f1_arg0:updateElementState( CompassGroupMPContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f13_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_scoped"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	vhudhcxdtimebar = CompassGroupMPContainer --[[ @ 0]]
	HUDPCVehicle = CompassGroupMPContainer.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	HUDPCVehicle( vhudhcxdtimebar, f1_local6["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_play_of_the_match"]], function ( f14_arg0 )
		f1_arg0:updateElementState( CompassGroupMPContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f14_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_play_of_the_match"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	vhudhcxdtimebar = CompassGroupMPContainer --[[ @ 0]]
	HUDPCVehicle = CompassGroupMPContainer.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	HUDPCVehicle( vhudhcxdtimebar, f1_local6["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_scoreboard_open"]], function ( f15_arg0 )
		f1_arg0:updateElementState( CompassGroupMPContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f15_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_scoreboard_open"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	vhudhcxdtimebar = CompassGroupMPContainer --[[ @ 0]]
	HUDPCVehicle = CompassGroupMPContainer.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	HUDPCVehicle( vhudhcxdtimebar, f1_local6["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_selecting_locational_killstreak"]], function ( f16_arg0 )
		f1_arg0:updateElementState( CompassGroupMPContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f16_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_selecting_locational_killstreak"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	vhudhcxdtimebar = CompassGroupMPContainer --[[ @ 0]]
	HUDPCVehicle = CompassGroupMPContainer.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	HUDPCVehicle( vhudhcxdtimebar, f1_local6["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_ui_active"]], function ( f17_arg0 )
		f1_arg0:updateElementState( CompassGroupMPContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f17_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_ui_active"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	vhudhcxdtimebar = CompassGroupMPContainer --[[ @ 0]]
	HUDPCVehicle = CompassGroupMPContainer.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	HUDPCVehicle( vhudhcxdtimebar, f1_local6["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_team_spectator"]], function ( f18_arg0 )
		f1_arg0:updateElementState( CompassGroupMPContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f18_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_team_spectator"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	vhudhcxdtimebar = CompassGroupMPContainer --[[ @ 0]]
	HUDPCVehicle = CompassGroupMPContainer.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	HUDPCVehicle( vhudhcxdtimebar, f1_local6["lobbyRoot.lobbyNav"], function ( f19_arg0 )
		f1_arg0:updateElementState( CompassGroupMPContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f19_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	vhudhcxdtimebar = CompassGroupMPContainer --[[ @ 0]]
	HUDPCVehicle = CompassGroupMPContainer.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	HUDPCVehicle( vhudhcxdtimebar, f1_local6.PlayerSettingsUpdate, function ( f20_arg0 )
		f1_arg0:updateElementState( CompassGroupMPContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f20_arg0:get(),
			modelName = "PlayerSettingsUpdate"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	vhudhcxdtimebar = CompassGroupMPContainer --[[ @ 0]]
	HUDPCVehicle = CompassGroupMPContainer.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	HUDPCVehicle( vhudhcxdtimebar, f1_local6["factions.isCoDCaster"], function ( f21_arg0 )
		f1_arg0:updateElementState( CompassGroupMPContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f21_arg0:get(),
			modelName = "factions.isCoDCaster"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	vhudhcxdtimebar = CompassGroupMPContainer --[[ @ 0]]
	HUDPCVehicle = CompassGroupMPContainer.subscribeToModel --[[ @ 0]]
	f1_local6 = DataSources.CodCaster.getModel( f1_arg1 ) --[[ @ 0]]
	HUDPCVehicle( vhudhcxdtimebar, f1_local6.profileSettingsUpdated, function ( f22_arg0 )
		f1_arg0:updateElementState( CompassGroupMPContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f22_arg0:get(),
			modelName = "profileSettingsUpdated"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	vhudhcxdtimebar = CompassGroupMPContainer --[[ @ 0]]
	HUDPCVehicle = CompassGroupMPContainer.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	HUDPCVehicle( vhudhcxdtimebar, f1_local6["CodCaster.showFullScreenMap"], function ( f23_arg0 )
		f1_arg0:updateElementState( CompassGroupMPContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f23_arg0:get(),
			modelName = "CodCaster.showFullScreenMap"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	vhudhcxdtimebar = CompassGroupMPContainer --[[ @ 0]]
	HUDPCVehicle = CompassGroupMPContainer.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	HUDPCVehicle( vhudhcxdtimebar, f1_local6.forceScoreboard, function ( f24_arg0 )
		f1_arg0:updateElementState( CompassGroupMPContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f24_arg0:get(),
			modelName = "forceScoreboard"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	vhudhcxdtimebar = CompassGroupMPContainer --[[ @ 0]]
	HUDPCVehicle = CompassGroupMPContainer.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	HUDPCVehicle( vhudhcxdtimebar, f1_local6["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_emp_active"]], function ( f25_arg0 )
		f1_arg0:updateElementState( CompassGroupMPContainer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f25_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_emp_active"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:addElement( CompassGroupMPContainer ) --[[ @ 0]]
	self.CompassGroupMPContainer = CompassGroupMPContainer --[[ @ 0]]
	
	HUDPCVehicle = nil --[[ @ 0]]
	
	HUDPCVehicle = CoD.HUD_PC_Vehicle.new( f1_arg0, f1_arg1, 0.5, 0.5, -325, 325, 1, 1, -275, -210 ) --[[ @ 0]]
	HUDPCVehicle:linkToElementModel( self, nil, false, function ( model )
		HUDPCVehicle:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( HUDPCVehicle ) --[[ @ 0]]
	self.HUDPCVehicle = HUDPCVehicle --[[ @ 0]]
	
	vhudhcxdtimebar = CoD.vhud_hcxd_timebar.new( f1_arg0, f1_arg1, 1, 1, -362, 0, 1, 1, -94, 0 ) --[[ @ 0]]
	vhudhcxdtimebar:linkToElementModel( self, nil, false, function ( model )
		vhudhcxdtimebar:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( vhudhcxdtimebar ) --[[ @ 0]]
	self.vhudhcxdtimebar = vhudhcxdtimebar --[[ @ 0]]
	
	f1_local6 = nil --[[ @ 0]]
	self.ButtonLayout = LUI.UIElement.createFake() --[[ @ 0]]
	
	local FuiLayoutTL = LUI.UIImage.new( 0, 0, 120, 40, 0, 0, 120, 24 ) --[[ @ 0]]
	FuiLayoutTL:setAlpha( 0.15 ) --[[ @ 0]]
	FuiLayoutTL:setXRot( 180 ) --[[ @ 0]]
	FuiLayoutTL:setYRot( 180 ) --[[ @ 0]]
	FuiLayoutTL:setImage( RegisterImage( @"uie_ui_hud_vehicle_ac130_frame_engine" ) ) --[[ @ 0]]
	FuiLayoutTL:setMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	self:addElement( FuiLayoutTL ) --[[ @ 0]]
	self.FuiLayoutTL = FuiLayoutTL --[[ @ 0]]
	
	local StripeL = LUI.UIImage.new( 0, 0, 134, 354, 0, 0, 34.5, 44.5 ) --[[ @ 0]]
	StripeL:setAlpha( 0.05 ) --[[ @ 0]]
	StripeL:setImage( RegisterImage( @"uie_ui_hud_vehicle_ac130_message_layout_stripe" ) ) --[[ @ 0]]
	StripeL:setMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	self:addElement( StripeL ) --[[ @ 0]]
	self.StripeL = StripeL --[[ @ 0]]
	
	local StripeR = LUI.UIImage.new( 1, 1, -353, -133, 0, 0, 34.5, 44.5 ) --[[ @ 0]]
	StripeR:setAlpha( 0.05 ) --[[ @ 0]]
	StripeR:setImage( RegisterImage( @"uie_ui_hud_vehicle_ac130_message_layout_stripe" ) ) --[[ @ 0]]
	StripeR:setMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	self:addElement( StripeR ) --[[ @ 0]]
	self.StripeR = StripeR --[[ @ 0]]
	
	local FuiLayoutTR = LUI.UIImage.new( 1, 1, -120, -40, 0, 0, 120, 24 ) --[[ @ 0]]
	FuiLayoutTR:setAlpha( 0.15 ) --[[ @ 0]]
	FuiLayoutTR:setXRot( 180 ) --[[ @ 0]]
	FuiLayoutTR:setYRot( 180 ) --[[ @ 0]]
	FuiLayoutTR:setImage( RegisterImage( @"uie_ui_hud_vehicle_ac130_frame_engine" ) ) --[[ @ 0]]
	FuiLayoutTR:setMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	self:addElement( FuiLayoutTR ) --[[ @ 0]]
	self.FuiLayoutTR = FuiLayoutTR --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "CodCasterHidden",
			condition = function ( menu, element, event )
				return IsCodCaster( f1_arg1 )
			end
		},
		{
			stateName = "TheaterMode",
			condition = function ( menu, element, event )
				return IsPC() and IsInTheaterMode()
			end
		}
	} ) --[[ @ 0]]
	local f1_local11 = self --[[ @ 0]]
	local f1_local12 = self.subscribeToModel --[[ @ 0]]
	local f1_local13 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local12( f1_local11, f1_local13["factions.isCoDCaster"], function ( f30_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f30_arg0:get(),
			modelName = "factions.isCoDCaster"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local11 = self --[[ @ 0]]
	f1_local12 = self.subscribeToModel --[[ @ 0]]
	f1_local13 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local12( f1_local11, f1_local13["lobbyRoot.lobbyNav"], function ( f31_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f31_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PreLoadFunc then
		PreLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	f1_local12 = self --[[ @ 0]]
	if IsMouseOrKeyboard( f1_arg1 ) then
		ReplaceElementWithFake( self, "ButtonLayout" ) --[[ @ 0]]
	end
	return self
end
 --[[ @ 0]]
CoD.vhud_hcdx_hud.__resetProperties = function ( f32_arg0 )
	f32_arg0.CompassGroupMPContainer:completeAnimation() --[[ @ 0]]
	f32_arg0.HUDPCVehicle:completeAnimation() --[[ @ 0]]
	f32_arg0.ButtonLayout:completeAnimation() --[[ @ 0]]
	f32_arg0.CompassGroupMPContainer:setAlpha( 1 ) --[[ @ 0]]
	f32_arg0.HUDPCVehicle:setAlpha( 1 ) --[[ @ 0]]
	f32_arg0.ButtonLayout:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.vhud_hcdx_hud.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f33_arg0, f33_arg1 )
			f33_arg0:__resetProperties() --[[ @ 0]]
			f33_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	CodCasterHidden = {
		DefaultClip = function ( f34_arg0, f34_arg1 )
			f34_arg0:__resetProperties() --[[ @ 0]]
			f34_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f34_arg0.CompassGroupMPContainer:completeAnimation() --[[ @ 0]]
			f34_arg0.CompassGroupMPContainer:setAlpha( 0 ) --[[ @ 0]]
			f34_arg0.clipFinished( f34_arg0.CompassGroupMPContainer ) --[[ @ 0]]
			f34_arg0.HUDPCVehicle:completeAnimation() --[[ @ 0]]
			f34_arg0.HUDPCVehicle:setAlpha( 0 ) --[[ @ 0]]
			f34_arg0.clipFinished( f34_arg0.HUDPCVehicle ) --[[ @ 0]]
			f34_arg0.ButtonLayout:completeAnimation() --[[ @ 0]]
			f34_arg0.ButtonLayout:setAlpha( 0 ) --[[ @ 0]]
			f34_arg0.clipFinished( f34_arg0.ButtonLayout ) --[[ @ 0]]
		end
	},
	TheaterMode = {
		DefaultClip = function ( f35_arg0, f35_arg1 )
			f35_arg0:__resetProperties() --[[ @ 0]]
			f35_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f35_arg0.CompassGroupMPContainer:completeAnimation() --[[ @ 0]]
			f35_arg0.CompassGroupMPContainer:setAlpha( 0 ) --[[ @ 0]]
			f35_arg0.clipFinished( f35_arg0.CompassGroupMPContainer ) --[[ @ 0]]
			f35_arg0.HUDPCVehicle:completeAnimation() --[[ @ 0]]
			f35_arg0.HUDPCVehicle:setAlpha( 0 ) --[[ @ 0]]
			f35_arg0.clipFinished( f35_arg0.HUDPCVehicle ) --[[ @ 0]]
			f35_arg0.ButtonLayout:completeAnimation() --[[ @ 0]]
			f35_arg0.ButtonLayout:setAlpha( 0 ) --[[ @ 0]]
			f35_arg0.clipFinished( f35_arg0.ButtonLayout ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.vhud_hcdx_hud.__onClose = function ( f36_arg0 )
	f36_arg0.CompassGroupMPContainer:close() --[[ @ 0]]
	f36_arg0.HUDPCVehicle:close() --[[ @ 0]]
	f36_arg0.vhudhcxdtimebar:close() --[[ @ 0]]
	f36_arg0.ButtonLayout:close() --[[ @ 0]]
end
 --[[ @ 0]]
