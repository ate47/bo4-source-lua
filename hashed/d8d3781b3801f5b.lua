-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:35
CoD.Codcaster_AnnouncementHighlight = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.Codcaster_AnnouncementHighlight.__defaultWidth = 63 --[[ @ 0]]
CoD.Codcaster_AnnouncementHighlight.__defaultHeight = 28 --[[ @ 0]]
CoD.Codcaster_AnnouncementHighlight.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.Codcaster_AnnouncementHighlight ) --[[ @ 0]]
	self.id = "Codcaster_AnnouncementHighlight" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local ledBL = LUI.UIImage.new( 0, 0, 0, 56, 0, 0, 0, 28 ) --[[ @ 0]]
	ledBL:setAlpha( 0 ) --[[ @ 0]]
	ledBL:setImage( RegisterImage( @"uie_codcaster_announcement_blackled" ) ) --[[ @ 0]]
	self:addElement( ledBL ) --[[ @ 0]]
	self.ledBL = ledBL --[[ @ 0]]
	
	local ledBL2 = LUI.UIImage.new( 0, 0, -1, 59, 0, 0, 0, 28 ) --[[ @ 0]]
	ledBL2:setImage( RegisterImage( @"uie_codcaster_announcement_teamcolorled_01" ) ) --[[ @ 0]]
	self:addElement( ledBL2 ) --[[ @ 0]]
	self.ledBL2 = ledBL2 --[[ @ 0]]
	
	local separator = LUI.UIImage.new( 0, 0, 55, 63, 0, 0, 2, 26 ) --[[ @ 0]]
	separator:setImage( RegisterImage( @"hash_1941AB093A82A1F7" ) ) --[[ @ 0]]
	self:addElement( separator ) --[[ @ 0]]
	self.separator = separator --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "HiddenDueToScoreboard",
			condition = function ( menu, element, event )
				return true
			end
		},
		{
			stateName = "NoRoundAndLives",
			condition = function ( menu, element, event )
				local f3_local0 --[[ @ 0]]
				if not CoD.HUDUtility.ShouldShowTeamLives( f1_arg1 ) and not IsGametypeSettingsValue( "roundLimit", 3 ) then
					f3_local0 = not CoD.HUDUtility.IsGameTypeEqualToString( "ctf" ) --[[ @ 0]]
				else
					f3_local0 = false --[[ @ 0]]
				end
				return f3_local0
			end
		},
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return true
			end
		}
	} ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
