-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:33
require( "ui/uieditor/widgets/vehiclehuds/mothership/vhud_ms_notificationbox" ) --[[ @ 0]]
require( "ui/uieditor/widgets/vehiclehuds/wasp/vhud_sentinel_notificationline" ) --[[ @ 0]]

CoD.vhud_ms_StatusWidgetGunnerRight = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.vhud_ms_StatusWidgetGunnerRight.__defaultWidth = 124 --[[ @ 0]]
CoD.vhud_ms_StatusWidgetGunnerRight.__defaultHeight = 243 --[[ @ 0]]
CoD.vhud_ms_StatusWidgetGunnerRight.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.vhud_ms_StatusWidgetGunnerRight ) --[[ @ 0]]
	self.id = "vhud_ms_StatusWidgetGunnerRight" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local SpeedNumbers = LUI.UIText.new( 0, 1, 0, 0, 0.5, 0.5, -84, -60 ) --[[ @ 0]]
	SpeedNumbers:setTTF( "default" ) --[[ @ 0]]
	SpeedNumbers:setRFTMaterial( LUI.UIImage.GetCachedMaterial( @"uie_aberration_cheap_blur" ) ) --[[ @ 0]]
	SpeedNumbers:setShaderVector( 0, 0, 1, 0, 0 ) --[[ @ 0]]
	SpeedNumbers:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	SpeedNumbers:setShaderVector( 2, 0, 0, 0, 0 ) --[[ @ 0]]
	SpeedNumbers:setShaderVector( 3, 0, 0, 0, 0 ) --[[ @ 0]]
	SpeedNumbers:setShaderVector( 4, 0, 0, 0, 0 ) --[[ @ 0]]
	SpeedNumbers:setAlignment( Enum[@"LUIAlignment"][@"hash_1FEEB12BCB0D7041"] ) --[[ @ 0]]
	SpeedNumbers:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	SpeedNumbers:linkToElementModel( self, "speed", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			SpeedNumbers:setText( f2_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( SpeedNumbers ) --[[ @ 0]]
	self.SpeedNumbers = SpeedNumbers --[[ @ 0]]
	
	local vhudsentinelNotificationLine = CoD.vhud_sentinel_NotificationLine.new( f1_arg0, f1_arg1, 0, 0, 3, 121, 0, 0, 61, 73 ) --[[ @ 0]]
	vhudsentinelNotificationLine:setRGB( 0.74, 0.94, 0.99 ) --[[ @ 0]]
	vhudsentinelNotificationLine:setAlpha( 0.7 ) --[[ @ 0]]
	self:addElement( vhudsentinelNotificationLine ) --[[ @ 0]]
	self.vhudsentinelNotificationLine = vhudsentinelNotificationLine --[[ @ 0]]
	
	local vhudmsNotificationBox = CoD.vhud_ms_NotificationBox.new( f1_arg0, f1_arg1, 0, 0, 0, 122, 0, 0, -0.5, 44.5 ) --[[ @ 0]]
	vhudmsNotificationBox.ALTtext:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_43755C926654C027" ) ) --[[ @ 0]]
	self:addElement( vhudmsNotificationBox ) --[[ @ 0]]
	self.vhudmsNotificationBox = vhudmsNotificationBox --[[ @ 0]]
	
	local vhudsentinelNotificationLine0 = CoD.vhud_sentinel_NotificationLine.new( f1_arg0, f1_arg1, 0, 0, 3, 121, 0, 0, 208, 220 ) --[[ @ 0]]
	vhudsentinelNotificationLine0:setRGB( 0.74, 0.94, 0.99 ) --[[ @ 0]]
	vhudsentinelNotificationLine0:setAlpha( 0.7 ) --[[ @ 0]]
	self:addElement( vhudsentinelNotificationLine0 ) --[[ @ 0]]
	self.vhudsentinelNotificationLine0 = vhudsentinelNotificationLine0 --[[ @ 0]]
	
	local statusText = LUI.UIText.new( 0, 1, 0, 0, 0, 0, 221, 243 ) --[[ @ 0]]
	statusText:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_5E20BF67125A4903" ) ) --[[ @ 0]]
	statusText:setTTF( "default" ) --[[ @ 0]]
	statusText:setRFTMaterial( LUI.UIImage.GetCachedMaterial( @"uie_aberration_cheap_blur" ) ) --[[ @ 0]]
	statusText:setShaderVector( 0, 0, 1, 0, 0 ) --[[ @ 0]]
	statusText:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	statusText:setShaderVector( 2, 0, 0, 0, 0 ) --[[ @ 0]]
	statusText:setShaderVector( 3, 0, 0, 0, 0 ) --[[ @ 0]]
	statusText:setShaderVector( 4, 0, 0, 0, 0 ) --[[ @ 0]]
	statusText:setLetterSpacing( 0.5 ) --[[ @ 0]]
	statusText:setAlignment( Enum[@"LUIAlignment"][@"hash_1FEEB12BCB0D7041"] ) --[[ @ 0]]
	statusText:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	self:addElement( statusText ) --[[ @ 0]]
	self.statusText = statusText --[[ @ 0]]
	
	local Bar0 = LUI.UIImage.new( 0, 0, -7, 128, 0, 0, 126, 154 ) --[[ @ 0]]
	Bar0:setRGB( 0.74, 0.94, 0.99 ) --[[ @ 0]]
	Bar0:setAlpha( 0.15 ) --[[ @ 0]]
	Bar0:setZRot( 90 ) --[[ @ 0]]
	Bar0:setZoom( -15 ) --[[ @ 0]]
	Bar0:setImage( RegisterImage( @"uie_t7_cp_hud_vehicle_mothership_timebar" ) ) --[[ @ 0]]
	Bar0:setMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	self:addElement( Bar0 ) --[[ @ 0]]
	self.Bar0 = Bar0 --[[ @ 0]]
	
	local Bar = LUI.UIImage.new( 0, 0, -7, 128, 0, 0, 126, 154 ) --[[ @ 0]]
	Bar:setRGB( 0.74, 0.94, 0.99 ) --[[ @ 0]]
	Bar:setZRot( 90 ) --[[ @ 0]]
	Bar:setImage( RegisterImage( @"uie_t7_cp_hud_vehicle_mothership_timebar" ) ) --[[ @ 0]]
	Bar:setMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	self:addElement( Bar ) --[[ @ 0]]
	self.Bar = Bar --[[ @ 0]]
	
	local solidbar = LUI.UIImage.new( 0, 0, -7, 128, 0, 0, 126, 154 ) --[[ @ 0]]
	solidbar:setRGB( 0.74, 0.94, 0.99 ) --[[ @ 0]]
	solidbar:setZRot( 90 ) --[[ @ 0]]
	solidbar:setImage( RegisterImage( @"uie_t7_cp_hud_vehicle_mothership_timebarsolid" ) ) --[[ @ 0]]
	solidbar:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_wipe" ) ) --[[ @ 0]]
	solidbar:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	solidbar:setShaderVector( 2, 1, 0, 0, 0 ) --[[ @ 0]]
	solidbar:setShaderVector( 3, 0, 0, 0, 0 ) --[[ @ 0]]
	solidbar:setShaderVector( 4, 0, 0, 0, 0 ) --[[ @ 0]]
	solidbar:linkToElementModel( self, "weaponHeat", true, function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			solidbar:setShaderVector( 0, CoD.GetVectorComponentFromString( f3_local0, 1 ), CoD.GetVectorComponentFromString( f3_local0, 2 ), CoD.GetVectorComponentFromString( f3_local0, 3 ), CoD.GetVectorComponentFromString( f3_local0, 4 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( solidbar ) --[[ @ 0]]
	self.solidbar = solidbar --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Overheating",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg1, "weaponOverheating" )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "weaponOverheating", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "weaponOverheating"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.vhud_ms_StatusWidgetGunnerRight.__resetProperties = function ( f6_arg0 )
	f6_arg0.solidbar:completeAnimation() --[[ @ 0]]
	f6_arg0.solidbar:setRGB( 0.74, 0.94, 0.99 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.vhud_ms_StatusWidgetGunnerRight.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f7_arg0, f7_arg1 )
			f7_arg0:__resetProperties() --[[ @ 0]]
			f7_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	Overheating = {
		DefaultClip = function ( f8_arg0, f8_arg1 )
			f8_arg0:__resetProperties() --[[ @ 0]]
			f8_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f8_arg0.solidbar:completeAnimation() --[[ @ 0]]
			f8_arg0.solidbar:setRGB( 0.99, 0.2, 0.27 ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.solidbar ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.vhud_ms_StatusWidgetGunnerRight.__onClose = function ( f9_arg0 )
	f9_arg0.SpeedNumbers:close() --[[ @ 0]]
	f9_arg0.vhudsentinelNotificationLine:close() --[[ @ 0]]
	f9_arg0.vhudmsNotificationBox:close() --[[ @ 0]]
	f9_arg0.vhudsentinelNotificationLine0:close() --[[ @ 0]]
	f9_arg0.solidbar:close() --[[ @ 0]]
end
 --[[ @ 0]]
