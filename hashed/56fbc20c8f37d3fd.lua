-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
require( "ui/uieditor/widgets/bumperbuttonwithkeymousetext" ) --[[ @ 0]]
require( "ui/uieditor/widgets/director/directorselecttexttab" ) --[[ @ 0]]
require( "x64:2736f83e92990ede" ) --[[ @ 0]]

CoD.PC_StartMenu_OptionsTabs = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.PC_StartMenu_OptionsTabs.__defaultWidth = 1920 --[[ @ 0]]
CoD.PC_StartMenu_OptionsTabs.__defaultHeight = 98 --[[ @ 0]]
CoD.PC_StartMenu_OptionsTabs.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIHorizontalList.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9, 0, true ) --[[ @ 0]]
	self:setAlignment( LUI.Alignment.Center ) --[[ @ 0]]
	self:setClass( CoD.PC_StartMenu_OptionsTabs ) --[[ @ 0]]
	self.id = "PC_StartMenu_OptionsTabs" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	
	local Background = CoD.PC_StartMenu_OptionsTabs_Background.new( f1_arg0, f1_arg1, 0, 0, 0, 1920, 0, 0, 52, 90 ) --[[ @ 0]]
	Background:registerEventHandler( "menu_loaded", function ( element, event )
		local f2_local0 = nil --[[ @ 0]]
		if element.menuLoaded then
			f2_local0 = element:menuLoaded( event ) --[[ @ 0]]
		elseif element.super.menuLoaded then
			f2_local0 = element.super:menuLoaded( event ) --[[ @ 0]]
		end
		SizeToWidthOfScreen( element, f1_arg1 ) --[[ @ 0]]
		if not f2_local0 then
			f2_local0 = element:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f2_local0
	end ) --[[ @ 0]]
	self:addElement( Background ) --[[ @ 0]]
	self.Background = Background --[[ @ 0]]
	
	local LB = CoD.BumperButtonWithKeyMouseText.new( f1_arg0, f1_arg1, 0, 0, 58, 258, 0, 0, 53, 87 ) --[[ @ 0]]
	LB.GamepadPrompt:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_5BDCD5292604F434" ) ) --[[ @ 0]]
	LB.GamepadPrompt:setAlignment( Enum[@"LUIAlignment"][@"hash_3830CFD395E6AA0A"] ) --[[ @ 0]]
	self:addElement( LB ) --[[ @ 0]]
	self.LB = LB --[[ @ 0]]
	
	local OptionsTabList = LUI.GridLayout.new( f1_arg0, f1_arg1, false, 0, 0, 0, 0, nil, nil, false, false, false, false ) --[[ @ 0]]
	OptionsTabList:setLeftRight( 0, 0, 258, 1662 ) --[[ @ 0]]
	OptionsTabList:setTopBottom( 0, 0, 53, 87 ) --[[ @ 0]]
	OptionsTabList:setWidgetType( CoD.DirectorSelectTextTab ) --[[ @ 0]]
	OptionsTabList:setHorizontalCount( 6 ) --[[ @ 0]]
	OptionsTabList:setSpacing( 0 ) --[[ @ 0]]
	OptionsTabList:setAlignment( Enum[@"LUIAlignment"][@"hash_1FEEB12BCB0D7041"] ) --[[ @ 0]]
	OptionsTabList:setStaggeredIntroTime( 50 ) --[[ @ 0]]
	OptionsTabList:setDataSource( "OptionTabs" ) --[[ @ 0]]
	OptionsTabList:registerEventHandler( "gain_focus", function ( element, event )
		local f3_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f3_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f3_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f3_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( OptionsTabList, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		SelectItemIfPossible( self, element, controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_0", nil, "ui_confirm" ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( OptionsTabList, "setModel", function ( element, controller )
		if not CoD.ModelUtility.IsSelfModelNil( element, f1_arg1 ) then
			UpdateAllMenuButtonPrompts( f1_arg0, f1_arg1 ) --[[ @ 0]]
			CoD.PCOptionsUtility.UpdateCurrentOptionTabModel( controller, f1_arg1 ) --[[ @ 0]]
		else
			CoD.PCOptionsUtility.UpdateCurrentOptionTabModel( controller, f1_arg1 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( OptionsTabList ) --[[ @ 0]]
	self.OptionsTabList = OptionsTabList --[[ @ 0]]
	
	local RB = CoD.BumperButtonWithKeyMouseText.new( f1_arg0, f1_arg1, 0, 0, 1662, 1862, 0, 0, 53, 87 ) --[[ @ 0]]
	RB.GamepadPrompt:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_5BFED5292621DA9A" ) ) --[[ @ 0]]
	self:addElement( RB ) --[[ @ 0]]
	self.RB = RB --[[ @ 0]]
	
	OptionsTabList.id = "OptionsTabList" --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	local f1_local5 = self --[[ @ 0]]
	CoD.PCUtility.ActivateListPCSelectionBehavior( self.OptionsTabList ) --[[ @ 0]]
	CoD.GridAndListUtility.AddOptionsBumperNavigation( f1_arg0, OptionsTabList, f1_arg1 ) --[[ @ 0]]
	return self
end
 --[[ @ 0]]
CoD.PC_StartMenu_OptionsTabs.__onClose = function ( f7_arg0 )
	f7_arg0.Background:close() --[[ @ 0]]
	f7_arg0.LB:close() --[[ @ 0]]
	f7_arg0.OptionsTabList:close() --[[ @ 0]]
	f7_arg0.RB:close() --[[ @ 0]]
end
 --[[ @ 0]]
