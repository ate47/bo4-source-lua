-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:49
require( "ui/uieditor/widgets/common/commondetailpanel" ) --[[ @ 0]]
require( "x64:5110e986e11c842b" ) --[[ @ 0]]
require( "ui/uieditor/widgets/startmenu/startmenu_options_simplecheckoption" ) --[[ @ 0]]
require( "x64:437c2d1d7ea091ae" ) --[[ @ 0]]
require( "ui/uieditor/widgets/verticalscrollingtextbox" ) --[[ @ 0]]

CoD.StartMenu_Options_SignInForm = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.StartMenu_Options_SignInForm.__defaultWidth = 1920 --[[ @ 0]]
CoD.StartMenu_Options_SignInForm.__defaultHeight = 1080 --[[ @ 0]]
CoD.StartMenu_Options_SignInForm.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.StartMenu_Options_SignInForm ) --[[ @ 0]]
	self.id = "StartMenu_Options_SignInForm" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	
	local CommonDetailPanel = CoD.CommonDetailPanel.new( f1_arg0, f1_arg1, 0.5, 0.5, -400, 400, 0.5, 0.5, -190, 190 ) --[[ @ 0]]
	self:addElement( CommonDetailPanel ) --[[ @ 0]]
	self.CommonDetailPanel = CommonDetailPanel --[[ @ 0]]
	
	local registrationFormStrings = LUI.UIList.new( f1_arg0, f1_arg1, 12, 0, nil, false, false, false, false ) --[[ @ 0]]
	registrationFormStrings:setLeftRight( 0.5, 0.5, -380, 380 ) --[[ @ 0]]
	registrationFormStrings:setTopBottom( 0, 0, 376, 508 ) --[[ @ 0]]
	registrationFormStrings:setWidgetType( CoD.StartMenu_Options_TextBoxOption ) --[[ @ 0]]
	registrationFormStrings:setVerticalCount( 2 ) --[[ @ 0]]
	registrationFormStrings:setSpacing( 12 ) --[[ @ 0]]
	registrationFormStrings:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	registrationFormStrings:setDataSource( "CODAccountSignInInfoBasic" ) --[[ @ 0]]
	registrationFormStrings:registerEventHandler( "gain_focus", function ( element, event )
		local f2_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f2_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f2_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		return f2_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( registrationFormStrings, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"], "ui_confirm", function ( element, menu, controller, model )
		ProcessListAction( self, element, controller, menu ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"hash_0", nil, "ui_confirm" ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	self:addElement( registrationFormStrings ) --[[ @ 0]]
	self.registrationFormStrings = registrationFormStrings --[[ @ 0]]
	
	local registrationFormOptions = LUI.UIList.new( f1_arg0, f1_arg1, 2, 0, nil, false, false, false, false ) --[[ @ 0]]
	registrationFormOptions:setLeftRight( 0.5, 0.5, -380, 380 ) --[[ @ 0]]
	registrationFormOptions:setTopBottom( 0, 0, 548, 608 ) --[[ @ 0]]
	registrationFormOptions:setWidgetType( CoD.StartMenu_Options_SimpleCheckOption ) --[[ @ 0]]
	registrationFormOptions:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	registrationFormOptions:setDataSource( "CODAccountSignInInfoOptions" ) --[[ @ 0]]
	registrationFormOptions:registerEventHandler( "gain_focus", function ( element, event )
		local f5_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f5_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f5_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		return f5_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( registrationFormOptions, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"], nil, function ( element, menu, controller, model )
		ProcessListAction( self, element, controller, menu ) --[[ @ 0]]
		PlaySoundAlias( "uin_paint_image_flip_toggle" ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"hash_0", nil, nil ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	self:addElement( registrationFormOptions ) --[[ @ 0]]
	self.registrationFormOptions = registrationFormOptions --[[ @ 0]]
	
	local registerButton = LUI.UIList.new( f1_arg0, f1_arg1, 2, 0, nil, false, false, false, false ) --[[ @ 0]]
	registerButton:setLeftRight( 0.5, 0.5, -380, 380 ) --[[ @ 0]]
	registerButton:setTopBottom( 0, 0, 648, 708 ) --[[ @ 0]]
	registerButton:setWidgetType( CoD.StartMenu_Options_ButtonAction ) --[[ @ 0]]
	registerButton:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	registerButton:setDataSource( "CODAccountSignInConfirmation" ) --[[ @ 0]]
	registerButton:registerEventHandler( "gain_focus", function ( element, event )
		local f8_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f8_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f8_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		return f8_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( registerButton, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"], nil, function ( element, menu, controller, model )
		ProcessListAction( self, element, controller, menu ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"hash_0", nil, nil ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	self:addElement( registerButton ) --[[ @ 0]]
	self.registerButton = registerButton --[[ @ 0]]
	
	local DescriptionTextScrolling = CoD.verticalScrollingTextBox.new( f1_arg0, f1_arg1, 0, 0, 1375, 1758, 0, 0, 376, 708 ) --[[ @ 0]]
	DescriptionTextScrolling:setRGB( 0.63, 0.62, 0.59 ) --[[ @ 0]]
	DescriptionTextScrolling.textBox.text:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	DescriptionTextScrolling.textBox.text:setLetterSpacing( -1 ) --[[ @ 0]]
	DescriptionTextScrolling:linkToElementModel( self, "hintText", true, function ( model )
		local f11_local0 = model:get() --[[ @ 0]]
		if f11_local0 ~= nil then
			DescriptionTextScrolling.textBox.text:setText( Engine[@"hash_4F9F1239CFD921FE"]( f11_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( DescriptionTextScrolling ) --[[ @ 0]]
	self.DescriptionTextScrolling = DescriptionTextScrolling --[[ @ 0]]
	
	registrationFormStrings.id = "registrationFormStrings" --[[ @ 0]]
	registrationFormOptions.id = "registrationFormOptions" --[[ @ 0]]
	registerButton.id = "registerButton" --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.StartMenu_Options_SignInForm.__onClose = function ( f12_arg0 )
	f12_arg0.CommonDetailPanel:close() --[[ @ 0]]
	f12_arg0.registrationFormStrings:close() --[[ @ 0]]
	f12_arg0.registrationFormOptions:close() --[[ @ 0]]
	f12_arg0.registerButton:close() --[[ @ 0]]
	f12_arg0.DescriptionTextScrolling:close() --[[ @ 0]]
end
 --[[ @ 0]]
