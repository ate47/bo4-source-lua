-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:51
require( "ui/uieditor/widgets/common/commonheader" ) --[[ @ 0]]
require( "x64:46fee26b35f63189" ) --[[ @ 0]]
require( "x64:4a18635bdb515a39" ) --[[ @ 0]]

CoD.DirectorTheater = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.DirectorTheater.__defaultWidth = 1920 --[[ @ 0]]
CoD.DirectorTheater.__defaultHeight = 1080 --[[ @ 0]]
CoD.DirectorTheater.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	CoD.FileshareUtility.InitModels() --[[ @ 0]]
	self:setClass( CoD.DirectorTheater ) --[[ @ 0]]
	self.id = "DirectorTheater" --[[ @ 0]]
	self.soundSet = "FrontendMain" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	
	local BGBlur = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	BGBlur:setRGB( 0.08, 0.08, 0.08 ) --[[ @ 0]]
	BGBlur:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_E2354BE557C4C7A" ) ) --[[ @ 0]]
	BGBlur:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( BGBlur ) --[[ @ 0]]
	self.BGBlur = BGBlur --[[ @ 0]]
	
	local BGBlack = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	BGBlack:setAlpha( 0.9 ) --[[ @ 0]]
	BGBlack:setImage( RegisterImage( @"uie_fe_cp_background" ) ) --[[ @ 0]]
	self:addElement( BGBlack ) --[[ @ 0]]
	self.BGBlack = BGBlack --[[ @ 0]]
	
	local CommonHeader = CoD.CommonHeader.new( f1_arg0, f1_arg1, 0.5, 0.5, -960, 960, 0, 0, 0, 67 ) --[[ @ 0]]
	CommonHeader.subtitle.StageTitle:setText( LocalizeToUpperString( @"menu/theater" ) ) --[[ @ 0]]
	CommonHeader.subtitle.subtitle:setAlpha( 0 ) --[[ @ 0]]
	CommonHeader:subscribeToGlobalModel( f1_arg1, "LobbyRoot", "lobbyTitle", function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			CommonHeader.subtitle.subtitle:setText( Engine[@"hash_4F9F1239CFD921FE"]( f2_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	CommonHeader:registerEventHandler( "menu_loaded", function ( element, event )
		local f3_local0 = nil --[[ @ 0]]
		if element.menuLoaded then
			f3_local0 = element:menuLoaded( event ) --[[ @ 0]]
		elseif element.super.menuLoaded then
			f3_local0 = element.super:menuLoaded( event ) --[[ @ 0]]
		end
		if not IsPC() then
			SizeToSafeArea( element, f1_arg1 ) --[[ @ 0]]
		end
		if not f3_local0 then
			f3_local0 = element:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f3_local0
	end ) --[[ @ 0]]
	self:addElement( CommonHeader ) --[[ @ 0]]
	self.CommonHeader = CommonHeader --[[ @ 0]]
	
	local ButtonModes = LUI.UIList.new( f1_arg0, f1_arg1, 25, 0, nil, false, false, false, false ) --[[ @ 0]]
	ButtonModes:setLeftRight( 0.5, 0.5, -717.5, 917.5 ) --[[ @ 0]]
	ButtonModes:setTopBottom( 0.5, 0.5, -378.5, -98.5 ) --[[ @ 0]]
	ButtonModes:setWidgetType( CoD.DirectorTheaterModeSelectButton ) --[[ @ 0]]
	ButtonModes:setHorizontalCount( 4 ) --[[ @ 0]]
	ButtonModes:setSpacing( 25 ) --[[ @ 0]]
	ButtonModes:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	ButtonModes:setDataSource( "DirectorTheaterLandingPageModes" ) --[[ @ 0]]
	ButtonModes:linkToElementModel( ButtonModes, "locked", true, function ( model, f4_arg1 )
		CoD.Menu.UpdateButtonShownState( f4_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	ButtonModes:registerEventHandler( "gain_focus", function ( element, event )
		local f5_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f5_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f5_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		return f5_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( ButtonModes, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"], "ui_confirm", function ( element, menu, controller, model )
		if not CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "locked" ) then
			ProcessListAction( self, element, controller, menu ) --[[ @ 0]]
			PlaySoundAlias( "uin_press_generic" ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "locked" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"menu/select", nil, "ui_confirm" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( ButtonModes ) --[[ @ 0]]
	self.ButtonModes = ButtonModes --[[ @ 0]]
	
	local RecentGames = CoD.FileshareCategoryContentListMini.new( f1_arg0, f1_arg1, 0.5, 0.5, -717.5, -39.5, 0.5, 0.5, -52.5, 377.5 ) --[[ @ 0]]
	RecentGames.MiddleText:setText( LocalizeToUpperString( @"menu/recent_games" ) ) --[[ @ 0]]
	self:addElement( RecentGames ) --[[ @ 0]]
	self.RecentGames = RecentGames --[[ @ 0]]
	
	local BookmarkedGames = CoD.FileshareCategoryContentListMini.new( f1_arg0, f1_arg1, 0.5, 0.5, 40, 718, 0.5, 0.5, -52.5, 377.5 ) --[[ @ 0]]
	BookmarkedGames.MiddleText:setText( LocalizeToUpperString( @"hash_1770599226B0553A" ) ) --[[ @ 0]]
	BookmarkedGames.contentList:setDataSource( "FilesharePublishedList" ) --[[ @ 0]]
	self:addElement( BookmarkedGames ) --[[ @ 0]]
	self.BookmarkedGames = BookmarkedGames --[[ @ 0]]
	
	ButtonModes.id = "ButtonModes" --[[ @ 0]]
	RecentGames.id = "RecentGames" --[[ @ 0]]
	BookmarkedGames.id = "BookmarkedGames" --[[ @ 0]]
	self.__defaultFocus = ButtonModes --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PreLoadFunc then
		PreLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	local f1_local7 = self --[[ @ 0]]
	if IsInTheaterMode() then
		CoD.FileshareUtility.SetupFileshareForTheater( f1_arg1 ) --[[ @ 0]]
		CoD.FileshareUtility.SetFilterOnFileshareContentList( self.BookmarkedGames, Enum[@"fileshareprimarytags_e"][@"hash_309DD15D8811C2E4"], 1 ) --[[ @ 0]]
	else
		CoD.FileshareUtility.SetFilterOnFileshareContentList( self.BookmarkedGames, Enum[@"fileshareprimarytags_e"][@"hash_309DD15D8811C2E4"], 1 ) --[[ @ 0]]
	end
	return self
end
 --[[ @ 0]]
CoD.DirectorTheater.__onClose = function ( f8_arg0 )
	f8_arg0.CommonHeader:close() --[[ @ 0]]
	f8_arg0.ButtonModes:close() --[[ @ 0]]
	f8_arg0.RecentGames:close() --[[ @ 0]]
	f8_arg0.BookmarkedGames:close() --[[ @ 0]]
end
 --[[ @ 0]]
