-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:35
CoD.MinimapDetected = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.MinimapDetected.__defaultWidth = 56 --[[ @ 0]]
CoD.MinimapDetected.__defaultHeight = 56 --[[ @ 0]]
CoD.MinimapDetected.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	CoD.BaseUtility.InitControllerModelIfNotSet( f1_arg1, "huditems.isExposedOnMinimap", 0 ) --[[ @ 0]]
	self:setClass( CoD.MinimapDetected ) --[[ @ 0]]
	self.id = "MinimapDetected" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local IconDetected = LUI.UIImage.new( 0.5, 0.5, -28, 28, 0.5, 0.5, -28, 28 ) --[[ @ 0]]
	IconDetected:setImage( RegisterImage( @"uie_icon_minimap_detected" ) ) --[[ @ 0]]
	self:addElement( IconDetected ) --[[ @ 0]]
	self.IconDetected = IconDetected --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Detected",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsModelValueEqualTo( f1_arg1, "huditems.isExposedOnMinimap", 1 )
			end
		}
	} ) --[[ @ 0]]
	local f1_local2 = self --[[ @ 0]]
	local f1_local3 = self.subscribeToModel --[[ @ 0]]
	local f1_local4 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local3( f1_local2, f1_local4["huditems.isExposedOnMinimap"], function ( f3_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f3_arg0:get(),
			modelName = "huditems.isExposedOnMinimap"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.MinimapDetected.__resetProperties = function ( f4_arg0 )
	f4_arg0.IconDetected:completeAnimation() --[[ @ 0]]
	f4_arg0.IconDetected:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.MinimapDetected.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f5_arg0, f5_arg1 )
			f5_arg0:__resetProperties() --[[ @ 0]]
			f5_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f5_arg0.IconDetected:completeAnimation() --[[ @ 0]]
			f5_arg0.IconDetected:setAlpha( 0 ) --[[ @ 0]]
			f5_arg0.clipFinished( f5_arg0.IconDetected ) --[[ @ 0]]
		end
	},
	Detected = {
		DefaultClip = function ( f6_arg0, f6_arg1 )
			f6_arg0:__resetProperties() --[[ @ 0]]
			f6_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
