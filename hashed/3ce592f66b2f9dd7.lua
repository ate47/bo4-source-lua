-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:49
require( "x64:6128cefcb7517aee" ) --[[ @ 0]]

CoD.ThemeOptionGrid = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.ThemeOptionGrid.__defaultWidth = 1239 --[[ @ 0]]
CoD.ThemeOptionGrid.__defaultHeight = 350 --[[ @ 0]]
CoD.ThemeOptionGrid.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.ThemeOptionGrid ) --[[ @ 0]]
	self.id = "ThemeOptionGrid" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local Label = LUI.UIText.new( 0, 0, 0, 162, 0, 0, 11, 27 ) --[[ @ 0]]
	Label:setRGB( ColorSet.T8__OFF__GRAY.r, ColorSet.T8__OFF__GRAY.g, ColorSet.T8__OFF__GRAY.b ) --[[ @ 0]]
	Label:setText( LocalizeToUpperString( @"hash_7081782ED786B4A3" ) ) --[[ @ 0]]
	Label:setTTF( "default" ) --[[ @ 0]]
	Label:setLetterSpacing( 4 ) --[[ @ 0]]
	Label:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	self:addElement( Label ) --[[ @ 0]]
	self.Label = Label --[[ @ 0]]
	
	local BottomBracket9Slice = LUI.UIImage.new( 0, 0, 0, 1239, 0, 0, 28, 37 ) --[[ @ 0]]
	BottomBracket9Slice:setAlpha( 0.5 ) --[[ @ 0]]
	BottomBracket9Slice:setZRot( 180 ) --[[ @ 0]]
	BottomBracket9Slice:setImage( RegisterImage( @"hash_4C325BED3F226657" ) ) --[[ @ 0]]
	BottomBracket9Slice:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_add" ) ) --[[ @ 0]]
	BottomBracket9Slice:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	BottomBracket9Slice:setupNineSliceShader( 16, 4 ) --[[ @ 0]]
	self:addElement( BottomBracket9Slice ) --[[ @ 0]]
	self.BottomBracket9Slice = BottomBracket9Slice --[[ @ 0]]
	
	local MasteryGrid = LUI.UIList.new( f1_arg0, f1_arg1, 10, 0, nil, false, false, false, false ) --[[ @ 0]]
	MasteryGrid:setLeftRight( 0, 0, 12, 1227 ) --[[ @ 0]]
	MasteryGrid:setTopBottom( 0, 0, 40, 300 ) --[[ @ 0]]
	MasteryGrid:setWidgetType( CoD.ThemeSlot ) --[[ @ 0]]
	MasteryGrid:setHorizontalCount( 7 ) --[[ @ 0]]
	MasteryGrid:setSpacing( 10 ) --[[ @ 0]]
	MasteryGrid:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	MasteryGrid:setDataSource( "WeaponOptions" ) --[[ @ 0]]
	MasteryGrid:appendEventHandler( "input_source_changed", function ( f2_arg0, f2_arg1 )
		f2_arg1.menu = f2_arg1.menu or f1_arg0 --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f2_arg0, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xbx_pssquare"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f2_arg0, f1_arg0, f1_arg1, Enum[@"luibutton"][@"hash_64D2505E19049444"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f2_arg0, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xby_pstriangle"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f2_arg0, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_pckey_2"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local f1_local4 = MasteryGrid --[[ @ 0]]
	local CamosWillAppearHereText = MasteryGrid.subscribeToModel --[[ @ 0]]
	local f1_local6 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	CamosWillAppearHereText( f1_local4, f1_local6.LastInput, function ( f3_arg0, f3_arg1 )
		CoD.Menu.UpdateButtonShownState( f3_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xbx_pssquare"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f3_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"hash_64D2505E19049444"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f3_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xby_pstriangle"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f3_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_pckey_2"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	MasteryGrid:registerEventHandler( "list_item_gain_focus", function ( element, event )
		local f4_local0 = nil --[[ @ 0]]
		CoD.WeaponOptionsUtility.SetFocusedWeaponOptionModel( element, f1_arg1, f1_arg0 ) --[[ @ 0]]
		CoD.WeaponOptionsUtility.PreviewSignatureWeaponTheme( element, f1_arg0, f1_arg1 ) --[[ @ 0]]
		return f4_local0
	end ) --[[ @ 0]]
	MasteryGrid:registerEventHandler( "list_item_lose_focus", function ( element, event )
		local f5_local0 = nil --[[ @ 0]]
		CoD.WeaponOptionsUtility.SetBaseWeaponOptions( element, f1_arg0, f1_arg1 ) --[[ @ 0]]
		CoD.WeaponOptionsUtility.ClearWeaponOptionInfoModel( f1_arg0, f1_arg1, element ) --[[ @ 0]]
		return f5_local0
	end ) --[[ @ 0]]
	MasteryGrid:registerEventHandler( "gain_focus", function ( element, event )
		local f6_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f6_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f6_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xbx_pssquare"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"hash_64D2505E19049444"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xby_pstriangle"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_pckey_2"] ) --[[ @ 0]]
		return f6_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( MasteryGrid, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"], nil, function ( element, menu, controller, model )
		if CoD.WeaponOptionsUtility.IsWeaponSignatureThemeUnlocked( menu, element, controller ) and not CoD.WeaponOptionsUtility.IsWeaponOptionEquipped( menu, element, controller, "camoIndex" ) then
			PlaySoundAlias( "cac_equipment_add" ) --[[ @ 0]]
			CoD.WeaponOptionsUtility.SetSignatureWeaponThemeHelper( self, element, controller, menu ) --[[ @ 0]]
			UpdateSelfState( self, controller ) --[[ @ 0]]
			UpdateAllMenuButtonPrompts( menu, controller ) --[[ @ 0]]
			return true
		elseif CoD.WeaponOptionsUtility.IsWeaponOptionEquipped( menu, element, controller, "camoIndex" ) then
			PlaySoundAlias( "cac_equipment_add" ) --[[ @ 0]]
			CoD.WeaponOptionsUtility.ClearWeaponOptionsHelper( self, element, menu, controller ) --[[ @ 0]]
			UpdateSelfState( self, controller ) --[[ @ 0]]
			UpdateAllMenuButtonPrompts( menu, controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if CoD.WeaponOptionsUtility.IsWeaponSignatureThemeUnlocked( menu, element, controller ) and not CoD.WeaponOptionsUtility.IsWeaponOptionEquipped( menu, element, controller, "camoIndex" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"menu/select", nil, nil ) --[[ @ 0]]
			return true
		elseif CoD.WeaponOptionsUtility.IsWeaponOptionEquipped( menu, element, controller, "camoIndex" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"menu/select", nil, nil ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( MasteryGrid, f1_arg1, Enum[@"luibutton"][@"lui_key_xbx_pssquare"], nil, function ( element, menu, controller, model )
		if CoD.WeaponOptionsUtility.IsWeaponOptionEquipped( menu, element, controller, "camoIndex" ) and IsGamepad( controller ) then
			PlaySoundAlias( "cac_equipment_add" ) --[[ @ 0]]
			CoD.WeaponOptionsUtility.ClearWeaponOptionsHelper( self, element, menu, controller ) --[[ @ 0]]
			UpdateSelfState( self, controller ) --[[ @ 0]]
			UpdateAllMenuButtonPrompts( menu, controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if CoD.WeaponOptionsUtility.IsWeaponOptionEquipped( menu, element, controller, "camoIndex" ) and IsGamepad( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xbx_pssquare"], @"menu/remove", nil, nil ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( MasteryGrid, f1_arg1, Enum[@"luibutton"][@"hash_64D2505E19049444"], "ui_remove", function ( element, menu, controller, model )
		if CoD.WeaponOptionsUtility.IsWeaponOptionEquipped( menu, element, controller, "camoIndex" ) and IsMouseOrKeyboard( controller ) then
			PlaySoundAlias( "cac_equipment_add" ) --[[ @ 0]]
			CoD.WeaponOptionsUtility.ClearWeaponOptionsHelper( self, element, menu, controller ) --[[ @ 0]]
			UpdateSelfState( self, controller ) --[[ @ 0]]
			UpdateAllMenuButtonPrompts( menu, controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if CoD.WeaponOptionsUtility.IsWeaponOptionEquipped( menu, element, controller, "camoIndex" ) and IsMouseOrKeyboard( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"hash_64D2505E19049444"], @"menu/remove", Enum[@"luibuttonpromptflags"][@"bpf_contextual"], "ui_remove" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( MasteryGrid, f1_arg1, Enum[@"luibutton"][@"lui_key_xby_pstriangle"], nil, function ( element, menu, controller, model )
		if CoD.WeaponOptionsUtility.IsWeaponSignatureThemeUnlocked( menu, element, controller ) and IsGamepad( controller ) then
			CoD.WeaponOptionsUtility.OpenActiveCamoStageDetailsOverlay( menu, controller, "CamoPersonalizationDetails", element, false ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if CoD.WeaponOptionsUtility.IsWeaponSignatureThemeUnlocked( menu, element, controller ) and IsGamepad( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xby_pstriangle"], @"menu/details", nil, nil ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( MasteryGrid, f1_arg1, Enum[@"luibutton"][@"lui_key_pckey_2"], "ui_contextual_1", function ( element, menu, controller, model )
		if CoD.WeaponOptionsUtility.IsWeaponSignatureThemeUnlocked( menu, element, controller ) and IsMouseOrKeyboard( controller ) then
			CoD.WeaponOptionsUtility.OpenActiveCamoStageDetailsOverlay( menu, controller, "CamoPersonalizationDetails", element, false ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if CoD.WeaponOptionsUtility.IsWeaponSignatureThemeUnlocked( menu, element, controller ) and IsMouseOrKeyboard( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_pckey_2"], @"menu/details", Enum[@"luibuttonpromptflags"][@"bpf_contextual"], "ui_contextual_1" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	MasteryGrid:subscribeToGlobalModel( f1_arg1, "PerController", "WeaponPersonalization.listUpdate", function ( model )
		CoD.GridAndListUtility.UpdateDataSource( MasteryGrid, true, false, true ) --[[ @ 0]]
		UpdateSelfState( self, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	MasteryGrid:AddContextualMenuAction( f1_arg0, f1_arg1, @"menu/remove", function ( f18_arg0, f18_arg1, f18_arg2, f18_arg3 )
		if CoD.WeaponOptionsUtility.IsWeaponOptionEquipped( f18_arg1, f18_arg0, f18_arg2, "camoIndex" ) then
			return function ( f19_arg0, f19_arg1, f19_arg2, f19_arg3 )
				PlaySoundAlias( "cac_equipment_add" ) --[[ @ 0]]
				CoD.WeaponOptionsUtility.ClearWeaponOptionsHelper( self, f19_arg0, f19_arg1, f19_arg2 ) --[[ @ 0]]
				UpdateSelfState( self, f19_arg2 ) --[[ @ 0]]
				UpdateAllMenuButtonPrompts( f19_arg1, f19_arg2 ) --[[ @ 0]]
			end
			
		else
			
		end
	end ) --[[ @ 0]]
	MasteryGrid:AddContextualMenuAction( f1_arg0, f1_arg1, @"menu/details", function ( f20_arg0, f20_arg1, f20_arg2, f20_arg3 )
		if CoD.WeaponOptionsUtility.IsWeaponSignatureThemeUnlocked( f20_arg1, f20_arg0, f20_arg2 ) then
			return function ( f21_arg0, f21_arg1, f21_arg2, f21_arg3 )
				CoD.WeaponOptionsUtility.OpenActiveCamoStageDetailsOverlay( f21_arg1, f21_arg2, "CamoPersonalizationDetails", f21_arg0, false ) --[[ @ 0]]
			end
			
		else
			
		end
	end ) --[[ @ 0]]
	self:addElement( MasteryGrid ) --[[ @ 0]]
	self.MasteryGrid = MasteryGrid --[[ @ 0]]
	
	CamosWillAppearHereText = LUI.UIText.new( 0, 0, 12, 1242, 0, 0, 150, 180 ) --[[ @ 0]]
	CamosWillAppearHereText:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_5D6E6182D71F2921" ) ) --[[ @ 0]]
	CamosWillAppearHereText:setTTF( "dinnext_regular" ) --[[ @ 0]]
	CamosWillAppearHereText:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	CamosWillAppearHereText:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	self:addElement( CamosWillAppearHereText ) --[[ @ 0]]
	self.CamosWillAppearHereText = CamosWillAppearHereText --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "ListEmpty",
			condition = function ( menu, element, event )
				return not ListElementHasElements( self.MasteryGrid )
			end
		}
	} ) --[[ @ 0]]
	self:appendEventHandler( "grid_updated", function ( f23_arg0, f23_arg1 )
		f23_arg1.menu = f23_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( self, f23_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	MasteryGrid.id = "MasteryGrid" --[[ @ 0]]
	self.__defaultFocus = MasteryGrid --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PreLoadFunc then
		PreLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	f1_local4 = self --[[ @ 0]]
	f1_local4 = MasteryGrid --[[ @ 0]]
	if IsPC() then
		SetElementProperty( f1_local4, "_category", "theme" ) --[[ @ 0]]
		UpdateSelfState( self, f1_arg1 ) --[[ @ 0]]
		CoD.PCWidgetUtility.SetupContextualMenu( f1_local4, f1_arg1, "name", "", "" ) --[[ @ 0]]
	else
		SetElementProperty( f1_local4, "_category", "theme" ) --[[ @ 0]]
		UpdateSelfState( self, f1_arg1 ) --[[ @ 0]]
	end
	return self
end
 --[[ @ 0]]
CoD.ThemeOptionGrid.__resetProperties = function ( f24_arg0 )
	f24_arg0.CamosWillAppearHereText:completeAnimation() --[[ @ 0]]
	f24_arg0.CamosWillAppearHereText:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ThemeOptionGrid.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f25_arg0, f25_arg1 )
			f25_arg0:__resetProperties() --[[ @ 0]]
			f25_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f25_arg0.CamosWillAppearHereText:completeAnimation() --[[ @ 0]]
			f25_arg0.CamosWillAppearHereText:setAlpha( 0 ) --[[ @ 0]]
			f25_arg0.clipFinished( f25_arg0.CamosWillAppearHereText ) --[[ @ 0]]
		end
	},
	ListEmpty = {
		DefaultClip = function ( f26_arg0, f26_arg1 )
			f26_arg0:__resetProperties() --[[ @ 0]]
			f26_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.ThemeOptionGrid.__onClose = function ( f27_arg0 )
	f27_arg0.MasteryGrid:close() --[[ @ 0]]
end
 --[[ @ 0]]
