-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:50
require( "x64:7b0be0a63bb0a5b0" ) --[[ @ 0]]
require( "x64:697f890129ee9bb3" ) --[[ @ 0]]
require( "x64:7f1ec649151bc0b8" ) --[[ @ 0]]

CoD.ScoreInfo_Timer = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.ScoreInfo_Timer.__defaultWidth = 205 --[[ @ 0]]
CoD.ScoreInfo_Timer.__defaultHeight = 40 --[[ @ 0]]
CoD.ScoreInfo_Timer.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	CoD.BaseUtility.InitGlobalModel( "hudItems.hardpointObj", nil ) --[[ @ 0]]
	self:setClass( CoD.ScoreInfo_Timer ) --[[ @ 0]]
	self.id = "ScoreInfo_Timer" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local BlurBacking = CoD.ScoreInfo_TimerBlur.new( f1_arg0, f1_arg1, 0, 0, 4.5, 200.5, 0, 0, 3, 36 ) --[[ @ 0]]
	self:addElement( BlurBacking ) --[[ @ 0]]
	self.BlurBacking = BlurBacking --[[ @ 0]]
	
	local PanelDark = LUI.UIImage.new( 0.5, 0.5, -98, 98, 0.5, 0.5, -17, 16 ) --[[ @ 0]]
	PanelDark:setRGB( 0.09, 0.09, 0.09 ) --[[ @ 0]]
	PanelDark:setAlpha( 0.94 ) --[[ @ 0]]
	self:addElement( PanelDark ) --[[ @ 0]]
	self.PanelDark = PanelDark --[[ @ 0]]
	
	local TiledShaderImage = LUI.UIImage.new( 0.5, 0.5, -110.5, 98.5, 0.5, 0.5, -28.5, 16.5 ) --[[ @ 0]]
	TiledShaderImage:setRGB( 0, 0, 0 ) --[[ @ 0]]
	TiledShaderImage:setAlpha( 0.2 ) --[[ @ 0]]
	TiledShaderImage:setImage( RegisterImage( @"hash_5322AF9BC49B4F3E" ) ) --[[ @ 0]]
	TiledShaderImage:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_16CBE95C250C6D15" ) ) --[[ @ 0]]
	TiledShaderImage:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	TiledShaderImage:setupNineSliceShader( 220, 60 ) --[[ @ 0]]
	self:addElement( TiledShaderImage ) --[[ @ 0]]
	self.TiledShaderImage = TiledShaderImage --[[ @ 0]]
	
	local StretchableFrameThin = LUI.UIImage.new( 0.5, 0.5, -102.5, 102.5, 0.5, 0.5, -20, 20 ) --[[ @ 0]]
	StretchableFrameThin:setImage( RegisterImage( @"hash_3EC350D142BA7153" ) ) --[[ @ 0]]
	StretchableFrameThin:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_normal" ) ) --[[ @ 0]]
	StretchableFrameThin:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	StretchableFrameThin:setupNineSliceShader( 22, 22 ) --[[ @ 0]]
	self:addElement( StretchableFrameThin ) --[[ @ 0]]
	self.StretchableFrameThin = StretchableFrameThin --[[ @ 0]]
	
	local Color = LUI.UIImage.new( 0.5, 0.5, -48, 32, 0.5, 0.5, -9, 11 ) --[[ @ 0]]
	Color:setRGB( 1, 0, 0 ) --[[ @ 0]]
	Color:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( Color ) --[[ @ 0]]
	self.Color = Color --[[ @ 0]]
	
	local ring3 = LUI.UIImage.new( 0, 0, 98, 101, 0, 0, 20, 23 ) --[[ @ 0]]
	ring3:setAlpha( 0 ) --[[ @ 0]]
	ring3:setImage( RegisterImage( @"hash_1C64E99F5F757CB" ) ) --[[ @ 0]]
	ring3:setMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	self:addElement( ring3 ) --[[ @ 0]]
	self.ring3 = ring3 --[[ @ 0]]
	
	local line = LUI.UIImage.new( 0, 0, 92, 100, 0, 0, 21.5, 29.5 ) --[[ @ 0]]
	line:setRGB( 0.73, 0.71, 0.64 ) --[[ @ 0]]
	line:setImage( RegisterImage( @"hash_7F6441D07FEB8A0C" ) ) --[[ @ 0]]
	line:setMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	self:addElement( line ) --[[ @ 0]]
	self.line = line --[[ @ 0]]
	
	local line2 = LUI.UIImage.new( 0, 0, 92, 100, 0, 0, 12.5, 20.5 ) --[[ @ 0]]
	line2:setRGB( 0.73, 0.71, 0.64 ) --[[ @ 0]]
	line2:setAlpha( 0.8 ) --[[ @ 0]]
	line2:setImage( RegisterImage( @"hash_7F6441D07FEB8A0C" ) ) --[[ @ 0]]
	line2:setMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	self:addElement( line2 ) --[[ @ 0]]
	self.line2 = line2 --[[ @ 0]]
	
	local line3 = LUI.UIImage.new( 0, 0, 41, 49, 0, 0, 22.5, 30.5 ) --[[ @ 0]]
	line3:setRGB( 0.73, 0.71, 0.64 ) --[[ @ 0]]
	line3:setAlpha( 0 ) --[[ @ 0]]
	line3:setImage( RegisterImage( @"hash_7F6441D07FEB8A0C" ) ) --[[ @ 0]]
	line3:setMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	self:addElement( line3 ) --[[ @ 0]]
	self.line3 = line3 --[[ @ 0]]
	
	local line4 = LUI.UIImage.new( 0, 0, 41, 49, 0, 0, 13.5, 21.5 ) --[[ @ 0]]
	line4:setRGB( 0.73, 0.71, 0.64 ) --[[ @ 0]]
	line4:setAlpha( 0 ) --[[ @ 0]]
	line4:setImage( RegisterImage( @"hash_7F6441D07FEB8A0C" ) ) --[[ @ 0]]
	line4:setMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	self:addElement( line4 ) --[[ @ 0]]
	self.line4 = line4 --[[ @ 0]]
	
	local WhistleTime = LUI.UIText.new( 0, 0, 57, 148, 0, 0, 9, 35 ) --[[ @ 0]]
	WhistleTime:setRGB( 0.73, 0.71, 0.64 ) --[[ @ 0]]
	WhistleTime:setAlpha( 0 ) --[[ @ 0]]
	WhistleTime:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	WhistleTime:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_90D57B1E92D39D7" ) ) --[[ @ 0]]
	WhistleTime:setShaderVector( 0, 0.5, 0, 0, 0 ) --[[ @ 0]]
	WhistleTime:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	WhistleTime:setShaderVector( 2, 0.73, 0.71, 0.64, 0.3 ) --[[ @ 0]]
	WhistleTime:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	WhistleTime:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	WhistleTime:subscribeToGlobalModel( f1_arg1, "BombTimer", "bomb0.timeRemainingMilliSec", function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			WhistleTime:setText( MillisecondsAsSeconds( f2_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( WhistleTime ) --[[ @ 0]]
	self.WhistleTime = WhistleTime --[[ @ 0]]
	
	local GameTimerSeconds = LUI.UIText.new( 0, 0, 103, 194, 0, 0, 7, 33 ) --[[ @ 0]]
	GameTimerSeconds:setRGB( 0.73, 0.71, 0.64 ) --[[ @ 0]]
	GameTimerSeconds:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	GameTimerSeconds:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_90D57B1E92D39D7" ) ) --[[ @ 0]]
	GameTimerSeconds:setShaderVector( 0, 0.5, 0, 0, 0 ) --[[ @ 0]]
	GameTimerSeconds:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	GameTimerSeconds:setShaderVector( 2, 0.73, 0.71, 0.64, 0.3 ) --[[ @ 0]]
	GameTimerSeconds:setLetterSpacing( 1 ) --[[ @ 0]]
	GameTimerSeconds:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	GameTimerSeconds:setupGameTimerSeconds() --[[ @ 0]]
	GameTimerSeconds:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	self:addElement( GameTimerSeconds ) --[[ @ 0]]
	self.GameTimerSeconds = GameTimerSeconds --[[ @ 0]]
	
	local GameTimerMinutes = LUI.UIText.new( 0, 0, 58, 89, 0, 0, 7, 33 ) --[[ @ 0]]
	GameTimerMinutes:setRGB( 0.73, 0.71, 0.64 ) --[[ @ 0]]
	GameTimerMinutes:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	GameTimerMinutes:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_90D57B1E92D39D7" ) ) --[[ @ 0]]
	GameTimerMinutes:setShaderVector( 0, 0.5, 0, 0, 0 ) --[[ @ 0]]
	GameTimerMinutes:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	GameTimerMinutes:setShaderVector( 2, 0.4, 0.71, 0.64, 0.3 ) --[[ @ 0]]
	GameTimerMinutes:setLetterSpacing( 1 ) --[[ @ 0]]
	GameTimerMinutes:setAlignment( Enum[@"luialignment"][@"lui_alignment_right"] ) --[[ @ 0]]
	GameTimerMinutes:setupGameTimerMinutes() --[[ @ 0]]
	GameTimerMinutes:setAlignment( Enum[@"luialignment"][@"lui_alignment_right"] ) --[[ @ 0]]
	self:addElement( GameTimerMinutes ) --[[ @ 0]]
	self.GameTimerMinutes = GameTimerMinutes --[[ @ 0]]
	
	local OvertimeText = LUI.UIText.new( 0, 0, 2.5, 202.5, 0, 0, 8.5, 29.5 ) --[[ @ 0]]
	OvertimeText:setRGB( 1, 0, 0 ) --[[ @ 0]]
	OvertimeText:setAlpha( 0 ) --[[ @ 0]]
	OvertimeText:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_19D325D8D1BFD3DE" ) ) --[[ @ 0]]
	OvertimeText:setTTF( "notosans_light" ) --[[ @ 0]]
	OvertimeText:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	OvertimeText:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	self:addElement( OvertimeText ) --[[ @ 0]]
	self.OvertimeText = OvertimeText --[[ @ 0]]
	
	local BombTimer = CoD.WaypointHardpoint_Timer.new( f1_arg0, f1_arg1, 0.5, 0.5, -54, 30, 0.5, 0.5, -13, 13 ) --[[ @ 0]]
	BombTimer:mergeStateConditions( {
		{
			stateName = "Active",
			condition = function ( menu, element, event )
				local f3_local0 --[[ @ 0]]
				if not IsGametypeSettingsValue( "autoDestroyTime", 0 ) then
					f3_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_bomb_timer_a"] ) --[[ @ 0]]
				else
					f3_local0 = false --[[ @ 0]]
				end
				return f3_local0
			end
		}
	} ) --[[ @ 0]]
	local HardpointObjective = BombTimer --[[ @ 0]]
	local GameTimer2 = BombTimer.subscribeToModel --[[ @ 0]]
	local WhistleImage = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	GameTimer2( HardpointObjective, WhistleImage["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_bomb_timer_a"]], function ( f4_arg0 )
		f1_arg0:updateElementState( BombTimer, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f4_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_bomb_timer_a"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	BombTimer:setRGB( 0.73, 0.71, 0.64 ) --[[ @ 0]]
	BombTimer:setAlpha( 0 ) --[[ @ 0]]
	BombTimer.TimerText:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	BombTimer.TimerText:setShaderVector( 0, 0.5, 0, 0, 0 ) --[[ @ 0]]
	BombTimer.TimerText:setShaderVector( 2, 0.73, 0.71, 0.64, 0.3 ) --[[ @ 0]]
	BombTimer.TimerText:setLetterSpacing( 2 ) --[[ @ 0]]
	BombTimer.TimerText:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	BombTimer:linkToElementModel( self, nil, false, function ( model )
		BombTimer:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( BombTimer ) --[[ @ 0]]
	self.BombTimer = BombTimer --[[ @ 0]]
	
	GameTimer2 = LUI.UIText.new( 0.71, 1.19, -7, -7, 0.5, 0.5, -13, 13 ) --[[ @ 0]]
	GameTimer2:setRGB( 0.73, 0.71, 0.64 ) --[[ @ 0]]
	GameTimer2:setAlpha( 0 ) --[[ @ 0]]
	GameTimer2:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	GameTimer2:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_90D57B1E92D39D7" ) ) --[[ @ 0]]
	GameTimer2:setShaderVector( 0, 0.8, 0, 0, 0 ) --[[ @ 0]]
	GameTimer2:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	GameTimer2:setShaderVector( 2, 1, 0, 0, 0.6 ) --[[ @ 0]]
	GameTimer2:setLetterSpacing( 2 ) --[[ @ 0]]
	GameTimer2:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	GameTimer2:setupGameTimer() --[[ @ 0]]
	GameTimer2:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	self:addElement( GameTimer2 ) --[[ @ 0]]
	self.GameTimer2 = GameTimer2 --[[ @ 0]]
	
	HardpointObjective = CoD.ScoreInfoHardpointObjective.new( f1_arg0, f1_arg1, 0, 0, 18.5, 44.5, 0, 0, 7.5, 33.5 ) --[[ @ 0]]
	HardpointObjective:mergeStateConditions( {
		{
			stateName = "visible",
			condition = function ( menu, element, event )
				return Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_bomb_timer_a"] ) and CoD.ModelUtility.IsSelfModelValueEqualToEnum( element, f1_arg1, "state", Enum[@"objectivestate_t"][@"objst_active"] )
			end
		}
	} ) --[[ @ 0]]
	local PropHuntDivider = HardpointObjective --[[ @ 0]]
	WhistleImage = HardpointObjective.subscribeToModel --[[ @ 0]]
	local f1_local20 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	WhistleImage( PropHuntDivider, f1_local20["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_bomb_timer_a"]], function ( f7_arg0 )
		f1_arg0:updateElementState( HardpointObjective, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f7_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_bomb_timer_a"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	HardpointObjective:linkToElementModel( HardpointObjective, "state", true, function ( model )
		f1_arg0:updateElementState( HardpointObjective, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "state"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	HardpointObjective:setAlpha( 0 ) --[[ @ 0]]
	HardpointObjective:setScale( 0.5, 0.5 ) --[[ @ 0]]
	self:addElement( HardpointObjective ) --[[ @ 0]]
	self.HardpointObjective = HardpointObjective --[[ @ 0]]
	
	WhistleImage = LUI.UIImage.new( 0, 0, 11, 41, 0, 0, 5, 35 ) --[[ @ 0]]
	WhistleImage:setAlpha( 0 ) --[[ @ 0]]
	WhistleImage:setImage( RegisterImage( @"uie_ui_hud_prophunt_match_widget_megaphone" ) ) --[[ @ 0]]
	self:addElement( WhistleImage ) --[[ @ 0]]
	self.WhistleImage = WhistleImage --[[ @ 0]]
	
	PropHuntDivider = LUI.UIImage.new( 0, 0, 91.5, 107.5, 0, 0, -2.5, 41.5 ) --[[ @ 0]]
	PropHuntDivider:setAlpha( 0 ) --[[ @ 0]]
	PropHuntDivider:setImage( RegisterImage( @"uie_ui_hud_prophunt_match_widget_time_panel_divider" ) ) --[[ @ 0]]
	self:addElement( PropHuntDivider ) --[[ @ 0]]
	self.PropHuntDivider = PropHuntDivider --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "HardpointActive",
			condition = function ( menu, element, event )
				return CoD.HUDUtility.IsGameTypeEqualToString( "koth" )
			end
		},
		{
			stateName = "HardpointTimeLow",
			condition = function ( menu, element, event )
				return CoD.HUDUtility.IsGameTypeEqualToString( "koth" )
			end
		},
		{
			stateName = "DepositActive",
			condition = function ( menu, element, event )
				return CoD.HUDUtility.IsGameTypeEqualToString( "clean" )
			end
		},
		{
			stateName = "DepositTimeLow",
			condition = function ( menu, element, event )
				return CoD.HUDUtility.IsGameTypeEqualToString( "clean" )
			end
		},
		{
			stateName = "PropHunt",
			condition = function ( menu, element, event )
				return CoD.HUDUtility.IsGameTypeEqualToString( "prop" )
			end
		},
		{
			stateName = "PropHuntTimeLow",
			condition = function ( menu, element, event )
				return CoD.HUDUtility.IsGameTypeEqualToString( "prop" )
			end
		},
		{
			stateName = "Active",
			condition = function ( menu, element, event )
				return true
			end
		},
		{
			stateName = "Overtime",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		},
		{
			stateName = "TimeLow",
			condition = function ( menu, element, event )
				return true
			end
		}
	} ) --[[ @ 0]]
	self:subscribeToGlobalModel( f1_arg1, "GlobalModel", "hudItems.hardpointObj", function ( model )
		local f18_local0 = self --[[ @ 0]]
		CoD.HUDUtility.SetScoreInfoHardpointObjective( self.HardpointObjective, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.ScoreInfo_Timer.__resetProperties = function ( f19_arg0 )
	f19_arg0.Color:completeAnimation() --[[ @ 0]]
	f19_arg0.line2:completeAnimation() --[[ @ 0]]
	f19_arg0.line:completeAnimation() --[[ @ 0]]
	f19_arg0.ring3:completeAnimation() --[[ @ 0]]
	f19_arg0.GameTimerSeconds:completeAnimation() --[[ @ 0]]
	f19_arg0.GameTimerMinutes:completeAnimation() --[[ @ 0]]
	f19_arg0.StretchableFrameThin:completeAnimation() --[[ @ 0]]
	f19_arg0.TiledShaderImage:completeAnimation() --[[ @ 0]]
	f19_arg0.PanelDark:completeAnimation() --[[ @ 0]]
	f19_arg0.BlurBacking:completeAnimation() --[[ @ 0]]
	f19_arg0.OvertimeText:completeAnimation() --[[ @ 0]]
	f19_arg0.GameTimer2:completeAnimation() --[[ @ 0]]
	f19_arg0.BombTimer:completeAnimation() --[[ @ 0]]
	f19_arg0.HardpointObjective:completeAnimation() --[[ @ 0]]
	f19_arg0.line3:completeAnimation() --[[ @ 0]]
	f19_arg0.line4:completeAnimation() --[[ @ 0]]
	f19_arg0.WhistleTime:completeAnimation() --[[ @ 0]]
	f19_arg0.WhistleImage:completeAnimation() --[[ @ 0]]
	f19_arg0.PropHuntDivider:completeAnimation() --[[ @ 0]]
	f19_arg0.Color:setLeftRight( 0.5, 0.5, -48, 32 ) --[[ @ 0]]
	f19_arg0.Color:setTopBottom( 0.5, 0.5, -9, 11 ) --[[ @ 0]]
	f19_arg0.Color:setRGB( 1, 0, 0 ) --[[ @ 0]]
	f19_arg0.Color:setAlpha( 0 ) --[[ @ 0]]
	f19_arg0.line2:setLeftRight( 0, 0, 92, 100 ) --[[ @ 0]]
	f19_arg0.line2:setTopBottom( 0, 0, 12.5, 20.5 ) --[[ @ 0]]
	f19_arg0.line2:setAlpha( 0.8 ) --[[ @ 0]]
	f19_arg0.line:setLeftRight( 0, 0, 92, 100 ) --[[ @ 0]]
	f19_arg0.line:setTopBottom( 0, 0, 21.5, 29.5 ) --[[ @ 0]]
	f19_arg0.line:setAlpha( 1 ) --[[ @ 0]]
	f19_arg0.ring3:setAlpha( 0 ) --[[ @ 0]]
	f19_arg0.GameTimerSeconds:setLeftRight( 0, 0, 103, 194 ) --[[ @ 0]]
	f19_arg0.GameTimerSeconds:setTopBottom( 0, 0, 7, 33 ) --[[ @ 0]]
	f19_arg0.GameTimerSeconds:setRGB( 0.73, 0.71, 0.64 ) --[[ @ 0]]
	f19_arg0.GameTimerSeconds:setAlpha( 1 ) --[[ @ 0]]
	f19_arg0.GameTimerSeconds:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_90D57B1E92D39D7" ) ) --[[ @ 0]]
	f19_arg0.GameTimerSeconds:setShaderVector( 0, 0.5, 0, 0, 0 ) --[[ @ 0]]
	f19_arg0.GameTimerSeconds:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	f19_arg0.GameTimerSeconds:setShaderVector( 2, 0.73, 0.71, 0.64, 0.3 ) --[[ @ 0]]
	f19_arg0.GameTimerSeconds:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	f19_arg0.GameTimerMinutes:setLeftRight( 0, 0, 58, 89 ) --[[ @ 0]]
	f19_arg0.GameTimerMinutes:setTopBottom( 0, 0, 7, 33 ) --[[ @ 0]]
	f19_arg0.GameTimerMinutes:setRGB( 0.73, 0.71, 0.64 ) --[[ @ 0]]
	f19_arg0.GameTimerMinutes:setAlpha( 1 ) --[[ @ 0]]
	f19_arg0.GameTimerMinutes:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_90D57B1E92D39D7" ) ) --[[ @ 0]]
	f19_arg0.GameTimerMinutes:setShaderVector( 0, 0.5, 0, 0, 0 ) --[[ @ 0]]
	f19_arg0.GameTimerMinutes:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	f19_arg0.GameTimerMinutes:setShaderVector( 2, 0.4, 0.71, 0.64, 0.3 ) --[[ @ 0]]
	f19_arg0.StretchableFrameThin:setAlpha( 1 ) --[[ @ 0]]
	f19_arg0.TiledShaderImage:setAlpha( 0.2 ) --[[ @ 0]]
	f19_arg0.PanelDark:setAlpha( 0.94 ) --[[ @ 0]]
	f19_arg0.BlurBacking:setAlpha( 1 ) --[[ @ 0]]
	f19_arg0.OvertimeText:setTopBottom( 0, 0, 8.5, 29.5 ) --[[ @ 0]]
	f19_arg0.OvertimeText:setAlpha( 0 ) --[[ @ 0]]
	f19_arg0.GameTimer2:setLeftRight( 0.71, 1.19, -7, -7 ) --[[ @ 0]]
	f19_arg0.GameTimer2:setRGB( 0.73, 0.71, 0.64 ) --[[ @ 0]]
	f19_arg0.GameTimer2:setAlpha( 0 ) --[[ @ 0]]
	f19_arg0.GameTimer2:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	f19_arg0.BombTimer:setAlpha( 0 ) --[[ @ 0]]
	f19_arg0.HardpointObjective:setLeftRight( 0, 0, 18.5, 44.5 ) --[[ @ 0]]
	f19_arg0.HardpointObjective:setAlpha( 0 ) --[[ @ 0]]
	f19_arg0.line3:setLeftRight( 0, 0, 41, 49 ) --[[ @ 0]]
	f19_arg0.line3:setTopBottom( 0, 0, 22.5, 30.5 ) --[[ @ 0]]
	f19_arg0.line3:setAlpha( 0 ) --[[ @ 0]]
	f19_arg0.line4:setLeftRight( 0, 0, 41, 49 ) --[[ @ 0]]
	f19_arg0.line4:setTopBottom( 0, 0, 13.5, 21.5 ) --[[ @ 0]]
	f19_arg0.line4:setAlpha( 0 ) --[[ @ 0]]
	f19_arg0.WhistleTime:setTopBottom( 0, 0, 9, 35 ) --[[ @ 0]]
	f19_arg0.WhistleTime:setAlpha( 0 ) --[[ @ 0]]
	f19_arg0.WhistleImage:setLeftRight( 0, 0, 11, 41 ) --[[ @ 0]]
	f19_arg0.WhistleImage:setTopBottom( 0, 0, 5, 35 ) --[[ @ 0]]
	f19_arg0.WhistleImage:setRGB( 1, 1, 1 ) --[[ @ 0]]
	f19_arg0.WhistleImage:setAlpha( 0 ) --[[ @ 0]]
	f19_arg0.PropHuntDivider:setRGB( 1, 1, 1 ) --[[ @ 0]]
	f19_arg0.PropHuntDivider:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ScoreInfo_Timer.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f20_arg0, f20_arg1 )
			f20_arg0:__resetProperties() --[[ @ 0]]
			f20_arg0:setupElementClipCounter( 11 ) --[[ @ 0]]
			f20_arg0.BlurBacking:completeAnimation() --[[ @ 0]]
			f20_arg0.BlurBacking:setAlpha( 0 ) --[[ @ 0]]
			f20_arg0.clipFinished( f20_arg0.BlurBacking ) --[[ @ 0]]
			f20_arg0.PanelDark:completeAnimation() --[[ @ 0]]
			f20_arg0.PanelDark:setAlpha( 0 ) --[[ @ 0]]
			f20_arg0.clipFinished( f20_arg0.PanelDark ) --[[ @ 0]]
			f20_arg0.TiledShaderImage:completeAnimation() --[[ @ 0]]
			f20_arg0.TiledShaderImage:setAlpha( 0 ) --[[ @ 0]]
			f20_arg0.clipFinished( f20_arg0.TiledShaderImage ) --[[ @ 0]]
			f20_arg0.StretchableFrameThin:completeAnimation() --[[ @ 0]]
			f20_arg0.StretchableFrameThin:setAlpha( 0 ) --[[ @ 0]]
			f20_arg0.clipFinished( f20_arg0.StretchableFrameThin ) --[[ @ 0]]
			f20_arg0.Color:completeAnimation() --[[ @ 0]]
			f20_arg0.Color:setLeftRight( 0, 0, 0, 114 ) --[[ @ 0]]
			f20_arg0.Color:setTopBottom( 0, 0, 3, 34 ) --[[ @ 0]]
			f20_arg0.Color:setAlpha( 0 ) --[[ @ 0]]
			f20_arg0.clipFinished( f20_arg0.Color ) --[[ @ 0]]
			f20_arg0.ring3:completeAnimation() --[[ @ 0]]
			f20_arg0.ring3:setAlpha( 0 ) --[[ @ 0]]
			f20_arg0.clipFinished( f20_arg0.ring3 ) --[[ @ 0]]
			f20_arg0.line:completeAnimation() --[[ @ 0]]
			f20_arg0.line:setAlpha( 0 ) --[[ @ 0]]
			f20_arg0.clipFinished( f20_arg0.line ) --[[ @ 0]]
			f20_arg0.line2:completeAnimation() --[[ @ 0]]
			f20_arg0.line2:setAlpha( 0 ) --[[ @ 0]]
			f20_arg0.clipFinished( f20_arg0.line2 ) --[[ @ 0]]
			f20_arg0.GameTimerSeconds:completeAnimation() --[[ @ 0]]
			f20_arg0.GameTimerSeconds:setLeftRight( 0, 0, 59, 163 ) --[[ @ 0]]
			f20_arg0.GameTimerSeconds:setTopBottom( 0, 0, 8, 34 ) --[[ @ 0]]
			f20_arg0.GameTimerSeconds:setAlpha( 0 ) --[[ @ 0]]
			f20_arg0.clipFinished( f20_arg0.GameTimerSeconds ) --[[ @ 0]]
			f20_arg0.GameTimerMinutes:completeAnimation() --[[ @ 0]]
			f20_arg0.GameTimerMinutes:setAlpha( 0 ) --[[ @ 0]]
			f20_arg0.clipFinished( f20_arg0.GameTimerMinutes ) --[[ @ 0]]
			f20_arg0.OvertimeText:completeAnimation() --[[ @ 0]]
			f20_arg0.OvertimeText:setAlpha( 0 ) --[[ @ 0]]
			f20_arg0.clipFinished( f20_arg0.OvertimeText ) --[[ @ 0]]
		end,
		Active = function ( f21_arg0, f21_arg1 )
			f21_arg0:__resetProperties() --[[ @ 0]]
			f21_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f21_arg0.Color:completeAnimation() --[[ @ 0]]
			f21_arg0.Color:setLeftRight( 0, 0, 0, 114 ) --[[ @ 0]]
			f21_arg0.Color:setTopBottom( 0, 0, 3, 34 ) --[[ @ 0]]
			f21_arg0.Color:setRGB( 1, 0, 0 ) --[[ @ 0]]
			f21_arg0.Color:setAlpha( 0 ) --[[ @ 0]]
			f21_arg0.clipFinished( f21_arg0.Color ) --[[ @ 0]]
		end,
		TimeLow = function ( f22_arg0, f22_arg1 )
			f22_arg0:__resetProperties() --[[ @ 0]]
			f22_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f22_local0 = function ( f23_arg0 )
				f22_arg0.Color:beginAnimation( 100 ) --[[ @ 0]]
				f22_arg0.Color:setAlpha( 0.5 ) --[[ @ 0]]
				f22_arg0.Color:registerEventHandler( "interrupted_keyframe", f22_arg0.clipInterrupted ) --[[ @ 0]]
				f22_arg0.Color:registerEventHandler( "transition_complete_keyframe", f22_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f22_arg0.Color:completeAnimation() --[[ @ 0]]
			f22_arg0.Color:setLeftRight( 0, 0, 0, 114 ) --[[ @ 0]]
			f22_arg0.Color:setTopBottom( 0, 0, 3, 34 ) --[[ @ 0]]
			f22_arg0.Color:setAlpha( 0 ) --[[ @ 0]]
			f22_local0( f22_arg0.Color ) --[[ @ 0]]
		end
	},
	HardpointActive = {
		DefaultClip = function ( f24_arg0, f24_arg1 )
			f24_arg0:__resetProperties() --[[ @ 0]]
			f24_arg0:setupElementClipCounter( 7 ) --[[ @ 0]]
			f24_arg0.line:completeAnimation() --[[ @ 0]]
			f24_arg0.line:setLeftRight( 0, 0, 152, 160 ) --[[ @ 0]]
			f24_arg0.line:setTopBottom( 0, 0, 22, 30 ) --[[ @ 0]]
			f24_arg0.line:setAlpha( 1 ) --[[ @ 0]]
			f24_arg0.clipFinished( f24_arg0.line ) --[[ @ 0]]
			f24_arg0.line2:completeAnimation() --[[ @ 0]]
			f24_arg0.line2:setLeftRight( 0, 0, 152, 160 ) --[[ @ 0]]
			f24_arg0.line2:setTopBottom( 0, 0, 13, 21 ) --[[ @ 0]]
			f24_arg0.line2:setAlpha( 1 ) --[[ @ 0]]
			f24_arg0.clipFinished( f24_arg0.line2 ) --[[ @ 0]]
			f24_arg0.GameTimerSeconds:completeAnimation() --[[ @ 0]]
			f24_arg0.GameTimerSeconds:setLeftRight( 0, 0, 161, 252 ) --[[ @ 0]]
			f24_arg0.GameTimerSeconds:setTopBottom( 0, 0, 7.5, 33.5 ) --[[ @ 0]]
			f24_arg0.GameTimerSeconds:setAlpha( 1 ) --[[ @ 0]]
			f24_arg0.clipFinished( f24_arg0.GameTimerSeconds ) --[[ @ 0]]
			f24_arg0.GameTimerMinutes:completeAnimation() --[[ @ 0]]
			f24_arg0.GameTimerMinutes:setLeftRight( 0, 0, 119, 150 ) --[[ @ 0]]
			f24_arg0.GameTimerMinutes:setTopBottom( 0, 0, 7.5, 33.5 ) --[[ @ 0]]
			f24_arg0.GameTimerMinutes:setAlpha( 1 ) --[[ @ 0]]
			f24_arg0.clipFinished( f24_arg0.GameTimerMinutes ) --[[ @ 0]]
			f24_arg0.BombTimer:completeAnimation() --[[ @ 0]]
			f24_arg0.BombTimer:setAlpha( 1 ) --[[ @ 0]]
			f24_arg0.clipFinished( f24_arg0.BombTimer ) --[[ @ 0]]
			f24_arg0.GameTimer2:completeAnimation() --[[ @ 0]]
			f24_arg0.GameTimer2:setRGB( 0.73, 0.71, 0.64 ) --[[ @ 0]]
			f24_arg0.GameTimer2:setAlpha( 0 ) --[[ @ 0]]
			f24_arg0.clipFinished( f24_arg0.GameTimer2 ) --[[ @ 0]]
			local f24_local0 = function ( f25_arg0 )
				f24_arg0.HardpointObjective:beginAnimation( 100 ) --[[ @ 0]]
				f24_arg0.HardpointObjective:setAlpha( 1 ) --[[ @ 0]]
				f24_arg0.HardpointObjective:registerEventHandler( "interrupted_keyframe", f24_arg0.clipInterrupted ) --[[ @ 0]]
				f24_arg0.HardpointObjective:registerEventHandler( "transition_complete_keyframe", f24_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f24_arg0.HardpointObjective:completeAnimation() --[[ @ 0]]
			f24_arg0.HardpointObjective:setLeftRight( 0, 0, 13.5, 39.5 ) --[[ @ 0]]
			f24_arg0.HardpointObjective:setAlpha( 0 ) --[[ @ 0]]
			f24_local0( f24_arg0.HardpointObjective ) --[[ @ 0]]
		end
	},
	HardpointTimeLow = {
		DefaultClip = function ( f26_arg0, f26_arg1 )
			f26_arg0:__resetProperties() --[[ @ 0]]
			f26_arg0:setupElementClipCounter( 7 ) --[[ @ 0]]
			f26_arg0.line:completeAnimation() --[[ @ 0]]
			f26_arg0.line:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.line ) --[[ @ 0]]
			f26_arg0.line2:completeAnimation() --[[ @ 0]]
			f26_arg0.line2:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.line2 ) --[[ @ 0]]
			f26_arg0.GameTimerSeconds:completeAnimation() --[[ @ 0]]
			f26_arg0.GameTimerSeconds:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.GameTimerSeconds ) --[[ @ 0]]
			f26_arg0.GameTimerMinutes:completeAnimation() --[[ @ 0]]
			f26_arg0.GameTimerMinutes:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.GameTimerMinutes ) --[[ @ 0]]
			f26_arg0.BombTimer:completeAnimation() --[[ @ 0]]
			f26_arg0.BombTimer:setAlpha( 1 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.BombTimer ) --[[ @ 0]]
			local f26_local0 = function ( f27_arg0 )
				local f27_local0 = function ( f28_arg0 )
					f28_arg0:beginAnimation( 500 ) --[[ @ 0]]
					f28_arg0:setRGB( 1, 1, 1 ) --[[ @ 0]]
					f28_arg0:registerEventHandler( "transition_complete_keyframe", f26_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f26_arg0.GameTimer2:beginAnimation( 500 ) --[[ @ 0]]
				f26_arg0.GameTimer2:setRGB( 1, 0, 0 ) --[[ @ 0]]
				f26_arg0.GameTimer2:registerEventHandler( "interrupted_keyframe", f26_arg0.clipInterrupted ) --[[ @ 0]]
				f26_arg0.GameTimer2:registerEventHandler( "transition_complete_keyframe", f27_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f26_arg0.GameTimer2:completeAnimation() --[[ @ 0]]
			f26_arg0.GameTimer2:setLeftRight( 0.55, 1.02, 7, 7 ) --[[ @ 0]]
			f26_arg0.GameTimer2:setRGB( 1, 1, 1 ) --[[ @ 0]]
			f26_arg0.GameTimer2:setAlpha( 1 ) --[[ @ 0]]
			f26_arg0.GameTimer2:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
			f26_local0( f26_arg0.GameTimer2 ) --[[ @ 0]]
			f26_arg0.HardpointObjective:completeAnimation() --[[ @ 0]]
			f26_arg0.HardpointObjective:setLeftRight( 0, 0, 13.5, 39.5 ) --[[ @ 0]]
			f26_arg0.HardpointObjective:setAlpha( 1 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.HardpointObjective ) --[[ @ 0]]
			f26_arg0.nextClip = "DefaultClip" --[[ @ 0]]
		end
	},
	DepositActive = {
		DefaultClip = function ( f29_arg0, f29_arg1 )
			f29_arg0:__resetProperties() --[[ @ 0]]
			f29_arg0:setupElementClipCounter( 7 ) --[[ @ 0]]
			f29_arg0.line:completeAnimation() --[[ @ 0]]
			f29_arg0.line:setLeftRight( 0, 0, 152, 160 ) --[[ @ 0]]
			f29_arg0.line:setTopBottom( 0, 0, 22, 30 ) --[[ @ 0]]
			f29_arg0.line:setAlpha( 1 ) --[[ @ 0]]
			f29_arg0.clipFinished( f29_arg0.line ) --[[ @ 0]]
			f29_arg0.line2:completeAnimation() --[[ @ 0]]
			f29_arg0.line2:setLeftRight( 0, 0, 152, 160 ) --[[ @ 0]]
			f29_arg0.line2:setTopBottom( 0, 0, 13, 21 ) --[[ @ 0]]
			f29_arg0.line2:setAlpha( 1 ) --[[ @ 0]]
			f29_arg0.clipFinished( f29_arg0.line2 ) --[[ @ 0]]
			f29_arg0.GameTimerSeconds:completeAnimation() --[[ @ 0]]
			f29_arg0.GameTimerSeconds:setLeftRight( 0, 0, 161, 252 ) --[[ @ 0]]
			f29_arg0.GameTimerSeconds:setTopBottom( 0, 0, 7.5, 33.5 ) --[[ @ 0]]
			f29_arg0.GameTimerSeconds:setAlpha( 1 ) --[[ @ 0]]
			f29_arg0.clipFinished( f29_arg0.GameTimerSeconds ) --[[ @ 0]]
			f29_arg0.GameTimerMinutes:completeAnimation() --[[ @ 0]]
			f29_arg0.GameTimerMinutes:setLeftRight( 0, 0, 119, 150 ) --[[ @ 0]]
			f29_arg0.GameTimerMinutes:setTopBottom( 0, 0, 7.5, 33.5 ) --[[ @ 0]]
			f29_arg0.GameTimerMinutes:setAlpha( 1 ) --[[ @ 0]]
			f29_arg0.clipFinished( f29_arg0.GameTimerMinutes ) --[[ @ 0]]
			f29_arg0.BombTimer:completeAnimation() --[[ @ 0]]
			f29_arg0.BombTimer:setAlpha( 1 ) --[[ @ 0]]
			f29_arg0.clipFinished( f29_arg0.BombTimer ) --[[ @ 0]]
			f29_arg0.GameTimer2:completeAnimation() --[[ @ 0]]
			f29_arg0.GameTimer2:setRGB( 0.73, 0.71, 0.64 ) --[[ @ 0]]
			f29_arg0.GameTimer2:setAlpha( 0 ) --[[ @ 0]]
			f29_arg0.clipFinished( f29_arg0.GameTimer2 ) --[[ @ 0]]
			local f29_local0 = function ( f30_arg0 )
				f29_arg0.HardpointObjective:beginAnimation( 100 ) --[[ @ 0]]
				f29_arg0.HardpointObjective:setAlpha( 1 ) --[[ @ 0]]
				f29_arg0.HardpointObjective:registerEventHandler( "interrupted_keyframe", f29_arg0.clipInterrupted ) --[[ @ 0]]
				f29_arg0.HardpointObjective:registerEventHandler( "transition_complete_keyframe", f29_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f29_arg0.HardpointObjective:completeAnimation() --[[ @ 0]]
			f29_arg0.HardpointObjective:setLeftRight( 0, 0, 13.5, 39.5 ) --[[ @ 0]]
			f29_arg0.HardpointObjective:setAlpha( 0 ) --[[ @ 0]]
			f29_local0( f29_arg0.HardpointObjective ) --[[ @ 0]]
		end
	},
	DepositTimeLow = {
		DefaultClip = function ( f31_arg0, f31_arg1 )
			f31_arg0:__resetProperties() --[[ @ 0]]
			f31_arg0:setupElementClipCounter( 7 ) --[[ @ 0]]
			f31_arg0.line:completeAnimation() --[[ @ 0]]
			f31_arg0.line:setAlpha( 0 ) --[[ @ 0]]
			f31_arg0.clipFinished( f31_arg0.line ) --[[ @ 0]]
			f31_arg0.line2:completeAnimation() --[[ @ 0]]
			f31_arg0.line2:setAlpha( 0 ) --[[ @ 0]]
			f31_arg0.clipFinished( f31_arg0.line2 ) --[[ @ 0]]
			f31_arg0.GameTimerSeconds:completeAnimation() --[[ @ 0]]
			f31_arg0.GameTimerSeconds:setAlpha( 0 ) --[[ @ 0]]
			f31_arg0.clipFinished( f31_arg0.GameTimerSeconds ) --[[ @ 0]]
			f31_arg0.GameTimerMinutes:completeAnimation() --[[ @ 0]]
			f31_arg0.GameTimerMinutes:setAlpha( 0 ) --[[ @ 0]]
			f31_arg0.clipFinished( f31_arg0.GameTimerMinutes ) --[[ @ 0]]
			f31_arg0.BombTimer:completeAnimation() --[[ @ 0]]
			f31_arg0.BombTimer:setAlpha( 1 ) --[[ @ 0]]
			f31_arg0.clipFinished( f31_arg0.BombTimer ) --[[ @ 0]]
			local f31_local0 = function ( f32_arg0 )
				local f32_local0 = function ( f33_arg0 )
					f33_arg0:beginAnimation( 500 ) --[[ @ 0]]
					f33_arg0:setRGB( 1, 1, 1 ) --[[ @ 0]]
					f33_arg0:registerEventHandler( "transition_complete_keyframe", f31_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f31_arg0.GameTimer2:beginAnimation( 500 ) --[[ @ 0]]
				f31_arg0.GameTimer2:setRGB( 1, 0, 0 ) --[[ @ 0]]
				f31_arg0.GameTimer2:registerEventHandler( "interrupted_keyframe", f31_arg0.clipInterrupted ) --[[ @ 0]]
				f31_arg0.GameTimer2:registerEventHandler( "transition_complete_keyframe", f32_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f31_arg0.GameTimer2:completeAnimation() --[[ @ 0]]
			f31_arg0.GameTimer2:setLeftRight( 0.55, 1.02, 7, 7 ) --[[ @ 0]]
			f31_arg0.GameTimer2:setRGB( 1, 1, 1 ) --[[ @ 0]]
			f31_arg0.GameTimer2:setAlpha( 1 ) --[[ @ 0]]
			f31_arg0.GameTimer2:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
			f31_local0( f31_arg0.GameTimer2 ) --[[ @ 0]]
			f31_arg0.HardpointObjective:completeAnimation() --[[ @ 0]]
			f31_arg0.HardpointObjective:setLeftRight( 0, 0, 13.5, 39.5 ) --[[ @ 0]]
			f31_arg0.HardpointObjective:setAlpha( 1 ) --[[ @ 0]]
			f31_arg0.clipFinished( f31_arg0.HardpointObjective ) --[[ @ 0]]
			f31_arg0.nextClip = "DefaultClip" --[[ @ 0]]
		end
	},
	PropHunt = {
		DefaultClip = function ( f34_arg0, f34_arg1 )
			f34_arg0:__resetProperties() --[[ @ 0]]
			f34_arg0:setupElementClipCounter( 12 ) --[[ @ 0]]
			f34_arg0.line:completeAnimation() --[[ @ 0]]
			f34_arg0.line:setLeftRight( 0, 0, 152, 160 ) --[[ @ 0]]
			f34_arg0.line:setTopBottom( 0, 0, 22, 30 ) --[[ @ 0]]
			f34_arg0.line:setAlpha( 1 ) --[[ @ 0]]
			f34_arg0.clipFinished( f34_arg0.line ) --[[ @ 0]]
			f34_arg0.line2:completeAnimation() --[[ @ 0]]
			f34_arg0.line2:setLeftRight( 0, 0, 152, 160 ) --[[ @ 0]]
			f34_arg0.line2:setTopBottom( 0, 0, 13, 21 ) --[[ @ 0]]
			f34_arg0.line2:setAlpha( 1 ) --[[ @ 0]]
			f34_arg0.clipFinished( f34_arg0.line2 ) --[[ @ 0]]
			f34_arg0.line3:completeAnimation() --[[ @ 0]]
			f34_arg0.line3:setLeftRight( 0, 0, 49, 57 ) --[[ @ 0]]
			f34_arg0.line3:setTopBottom( 0, 0, 22, 30 ) --[[ @ 0]]
			f34_arg0.line3:setAlpha( 1 ) --[[ @ 0]]
			f34_arg0.clipFinished( f34_arg0.line3 ) --[[ @ 0]]
			f34_arg0.line4:completeAnimation() --[[ @ 0]]
			f34_arg0.line4:setLeftRight( 0, 0, 49, 57 ) --[[ @ 0]]
			f34_arg0.line4:setTopBottom( 0, 0, 13, 21 ) --[[ @ 0]]
			f34_arg0.line4:setAlpha( 1 ) --[[ @ 0]]
			f34_arg0.clipFinished( f34_arg0.line4 ) --[[ @ 0]]
			f34_arg0.WhistleTime:completeAnimation() --[[ @ 0]]
			f34_arg0.WhistleTime:setTopBottom( 0, 0, 7, 33 ) --[[ @ 0]]
			f34_arg0.WhistleTime:setAlpha( 1 ) --[[ @ 0]]
			f34_arg0.clipFinished( f34_arg0.WhistleTime ) --[[ @ 0]]
			f34_arg0.GameTimerSeconds:completeAnimation() --[[ @ 0]]
			f34_arg0.GameTimerSeconds:setLeftRight( 0, 0, 161, 252 ) --[[ @ 0]]
			f34_arg0.GameTimerSeconds:setTopBottom( 0, 0, 7.5, 33.5 ) --[[ @ 0]]
			f34_arg0.GameTimerSeconds:setAlpha( 1 ) --[[ @ 0]]
			f34_arg0.clipFinished( f34_arg0.GameTimerSeconds ) --[[ @ 0]]
			f34_arg0.GameTimerMinutes:completeAnimation() --[[ @ 0]]
			f34_arg0.GameTimerMinutes:setLeftRight( 0, 0, 119, 150 ) --[[ @ 0]]
			f34_arg0.GameTimerMinutes:setTopBottom( 0, 0, 7.5, 33.5 ) --[[ @ 0]]
			f34_arg0.GameTimerMinutes:setAlpha( 1 ) --[[ @ 0]]
			f34_arg0.clipFinished( f34_arg0.GameTimerMinutes ) --[[ @ 0]]
			f34_arg0.BombTimer:completeAnimation() --[[ @ 0]]
			f34_arg0.BombTimer:setAlpha( 0 ) --[[ @ 0]]
			f34_arg0.clipFinished( f34_arg0.BombTimer ) --[[ @ 0]]
			f34_arg0.GameTimer2:completeAnimation() --[[ @ 0]]
			f34_arg0.GameTimer2:setRGB( 0.73, 0.71, 0.64 ) --[[ @ 0]]
			f34_arg0.GameTimer2:setAlpha( 0 ) --[[ @ 0]]
			f34_arg0.clipFinished( f34_arg0.GameTimer2 ) --[[ @ 0]]
			local f34_local0 = function ( f35_arg0 )
				f34_arg0.HardpointObjective:beginAnimation( 100 ) --[[ @ 0]]
				f34_arg0.HardpointObjective:setAlpha( 1 ) --[[ @ 0]]
				f34_arg0.HardpointObjective:registerEventHandler( "interrupted_keyframe", f34_arg0.clipInterrupted ) --[[ @ 0]]
				f34_arg0.HardpointObjective:registerEventHandler( "transition_complete_keyframe", f34_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f34_arg0.HardpointObjective:completeAnimation() --[[ @ 0]]
			f34_arg0.HardpointObjective:setLeftRight( 0, 0, 13.5, 39.5 ) --[[ @ 0]]
			f34_arg0.HardpointObjective:setAlpha( 0 ) --[[ @ 0]]
			f34_local0( f34_arg0.HardpointObjective ) --[[ @ 0]]
			f34_arg0.WhistleImage:completeAnimation() --[[ @ 0]]
			f34_arg0.WhistleImage:setLeftRight( 0, 0, 11, 36 ) --[[ @ 0]]
			f34_arg0.WhistleImage:setTopBottom( 0, 0, 7, 32 ) --[[ @ 0]]
			f34_arg0.WhistleImage:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
			f34_arg0.WhistleImage:setAlpha( 1 ) --[[ @ 0]]
			f34_arg0.clipFinished( f34_arg0.WhistleImage ) --[[ @ 0]]
			f34_arg0.PropHuntDivider:completeAnimation() --[[ @ 0]]
			f34_arg0.PropHuntDivider:setAlpha( 1 ) --[[ @ 0]]
			f34_arg0.clipFinished( f34_arg0.PropHuntDivider ) --[[ @ 0]]
		end
	},
	PropHuntTimeLow = {
		DefaultClip = function ( f36_arg0, f36_arg1 )
			f36_arg0:__resetProperties() --[[ @ 0]]
			f36_arg0:setupElementClipCounter( 12 ) --[[ @ 0]]
			f36_arg0.line:completeAnimation() --[[ @ 0]]
			f36_arg0.line:setLeftRight( 0, 0, 152, 160 ) --[[ @ 0]]
			f36_arg0.line:setTopBottom( 0, 0, 22, 30 ) --[[ @ 0]]
			f36_arg0.line:setAlpha( 0 ) --[[ @ 0]]
			f36_arg0.clipFinished( f36_arg0.line ) --[[ @ 0]]
			f36_arg0.line2:completeAnimation() --[[ @ 0]]
			f36_arg0.line2:setLeftRight( 0, 0, 152, 160 ) --[[ @ 0]]
			f36_arg0.line2:setTopBottom( 0, 0, 13, 21 ) --[[ @ 0]]
			f36_arg0.line2:setAlpha( 0 ) --[[ @ 0]]
			f36_arg0.clipFinished( f36_arg0.line2 ) --[[ @ 0]]
			f36_arg0.line3:completeAnimation() --[[ @ 0]]
			f36_arg0.line3:setLeftRight( 0, 0, 49, 57 ) --[[ @ 0]]
			f36_arg0.line3:setTopBottom( 0, 0, 22, 30 ) --[[ @ 0]]
			f36_arg0.line3:setAlpha( 1 ) --[[ @ 0]]
			f36_arg0.clipFinished( f36_arg0.line3 ) --[[ @ 0]]
			f36_arg0.line4:completeAnimation() --[[ @ 0]]
			f36_arg0.line4:setLeftRight( 0, 0, 49, 57 ) --[[ @ 0]]
			f36_arg0.line4:setTopBottom( 0, 0, 13, 21 ) --[[ @ 0]]
			f36_arg0.line4:setAlpha( 1 ) --[[ @ 0]]
			f36_arg0.clipFinished( f36_arg0.line4 ) --[[ @ 0]]
			f36_arg0.WhistleTime:completeAnimation() --[[ @ 0]]
			f36_arg0.WhistleTime:setTopBottom( 0, 0, 7, 33 ) --[[ @ 0]]
			f36_arg0.WhistleTime:setAlpha( 1 ) --[[ @ 0]]
			f36_arg0.clipFinished( f36_arg0.WhistleTime ) --[[ @ 0]]
			f36_arg0.GameTimerSeconds:completeAnimation() --[[ @ 0]]
			f36_arg0.GameTimerSeconds:setLeftRight( 0, 0, 161, 252 ) --[[ @ 0]]
			f36_arg0.GameTimerSeconds:setTopBottom( 0, 0, 7.5, 33.5 ) --[[ @ 0]]
			f36_arg0.GameTimerSeconds:setAlpha( 0 ) --[[ @ 0]]
			f36_arg0.clipFinished( f36_arg0.GameTimerSeconds ) --[[ @ 0]]
			f36_arg0.GameTimerMinutes:completeAnimation() --[[ @ 0]]
			f36_arg0.GameTimerMinutes:setLeftRight( 0, 0, 119, 150 ) --[[ @ 0]]
			f36_arg0.GameTimerMinutes:setTopBottom( 0, 0, 7.5, 33.5 ) --[[ @ 0]]
			f36_arg0.GameTimerMinutes:setAlpha( 0 ) --[[ @ 0]]
			f36_arg0.clipFinished( f36_arg0.GameTimerMinutes ) --[[ @ 0]]
			f36_arg0.BombTimer:completeAnimation() --[[ @ 0]]
			f36_arg0.BombTimer:setAlpha( 0 ) --[[ @ 0]]
			f36_arg0.clipFinished( f36_arg0.BombTimer ) --[[ @ 0]]
			local f36_local0 = function ( f37_arg0 )
				local f37_local0 = function ( f38_arg0 )
					f38_arg0:beginAnimation( 500 ) --[[ @ 0]]
					f38_arg0:setRGB( 1, 1, 1 ) --[[ @ 0]]
					f38_arg0:registerEventHandler( "transition_complete_keyframe", f36_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f36_arg0.GameTimer2:beginAnimation( 500 ) --[[ @ 0]]
				f36_arg0.GameTimer2:setRGB( 1, 0, 0 ) --[[ @ 0]]
				f36_arg0.GameTimer2:registerEventHandler( "interrupted_keyframe", f36_arg0.clipInterrupted ) --[[ @ 0]]
				f36_arg0.GameTimer2:registerEventHandler( "transition_complete_keyframe", f37_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f36_arg0.GameTimer2:completeAnimation() --[[ @ 0]]
			f36_arg0.GameTimer2:setRGB( 0.73, 0.71, 0.64 ) --[[ @ 0]]
			f36_arg0.GameTimer2:setAlpha( 1 ) --[[ @ 0]]
			f36_local0( f36_arg0.GameTimer2 ) --[[ @ 0]]
			f36_arg0.HardpointObjective:completeAnimation() --[[ @ 0]]
			f36_arg0.HardpointObjective:setLeftRight( 0, 0, 13.5, 39.5 ) --[[ @ 0]]
			f36_arg0.HardpointObjective:setAlpha( 1 ) --[[ @ 0]]
			f36_arg0.clipFinished( f36_arg0.HardpointObjective ) --[[ @ 0]]
			f36_arg0.WhistleImage:completeAnimation() --[[ @ 0]]
			f36_arg0.WhistleImage:setLeftRight( 0, 0, 11, 36 ) --[[ @ 0]]
			f36_arg0.WhistleImage:setTopBottom( 0, 0, 7, 32 ) --[[ @ 0]]
			f36_arg0.WhistleImage:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
			f36_arg0.WhistleImage:setAlpha( 1 ) --[[ @ 0]]
			f36_arg0.clipFinished( f36_arg0.WhistleImage ) --[[ @ 0]]
			f36_arg0.PropHuntDivider:completeAnimation() --[[ @ 0]]
			f36_arg0.PropHuntDivider:setRGB( 1, 1, 1 ) --[[ @ 0]]
			f36_arg0.PropHuntDivider:setAlpha( 1 ) --[[ @ 0]]
			f36_arg0.clipFinished( f36_arg0.PropHuntDivider ) --[[ @ 0]]
		end
	},
	Active = {
		DefaultClip = function ( f39_arg0, f39_arg1 )
			f39_arg0:__resetProperties() --[[ @ 0]]
			f39_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f39_arg0.Color:completeAnimation() --[[ @ 0]]
			f39_arg0.Color:setLeftRight( 0, 0, 0, 114 ) --[[ @ 0]]
			f39_arg0.Color:setTopBottom( 0, 0, 3, 34 ) --[[ @ 0]]
			f39_arg0.clipFinished( f39_arg0.Color ) --[[ @ 0]]
		end,
		DefaultState = function ( f40_arg0, f40_arg1 )
			f40_arg0:__resetProperties() --[[ @ 0]]
			f40_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f40_arg0.Color:completeAnimation() --[[ @ 0]]
			f40_arg0.Color:setLeftRight( 0, 0, 0, 114 ) --[[ @ 0]]
			f40_arg0.Color:setTopBottom( 0, 0, 3, 34 ) --[[ @ 0]]
			f40_arg0.Color:setAlpha( 0 ) --[[ @ 0]]
			f40_arg0.clipFinished( f40_arg0.Color ) --[[ @ 0]]
		end
	},
	Overtime = {
		DefaultClip = function ( f41_arg0, f41_arg1 )
			f41_arg0:__resetProperties() --[[ @ 0]]
			f41_arg0:setupElementClipCounter( 5 ) --[[ @ 0]]
			f41_arg0.line:completeAnimation() --[[ @ 0]]
			f41_arg0.line:setAlpha( 0 ) --[[ @ 0]]
			f41_arg0.clipFinished( f41_arg0.line ) --[[ @ 0]]
			f41_arg0.line2:completeAnimation() --[[ @ 0]]
			f41_arg0.line2:setAlpha( 0 ) --[[ @ 0]]
			f41_arg0.clipFinished( f41_arg0.line2 ) --[[ @ 0]]
			f41_arg0.GameTimerSeconds:completeAnimation() --[[ @ 0]]
			f41_arg0.GameTimerSeconds:setAlpha( 0 ) --[[ @ 0]]
			f41_arg0.clipFinished( f41_arg0.GameTimerSeconds ) --[[ @ 0]]
			f41_arg0.GameTimerMinutes:completeAnimation() --[[ @ 0]]
			f41_arg0.GameTimerMinutes:setAlpha( 0 ) --[[ @ 0]]
			f41_arg0.clipFinished( f41_arg0.GameTimerMinutes ) --[[ @ 0]]
			f41_arg0.OvertimeText:completeAnimation() --[[ @ 0]]
			f41_arg0.OvertimeText:setTopBottom( 0, 0, 6, 34 ) --[[ @ 0]]
			f41_arg0.OvertimeText:setAlpha( 1 ) --[[ @ 0]]
			f41_arg0.clipFinished( f41_arg0.OvertimeText ) --[[ @ 0]]
		end
	},
	TimeLow = {
		DefaultClip = function ( f42_arg0, f42_arg1 )
			f42_arg0:__resetProperties() --[[ @ 0]]
			f42_arg0:setupElementClipCounter( 6 ) --[[ @ 0]]
			f42_arg0.Color:completeAnimation() --[[ @ 0]]
			f42_arg0.Color:setLeftRight( 0, 0, 0, 114 ) --[[ @ 0]]
			f42_arg0.Color:setTopBottom( 0, 0, 3, 34 ) --[[ @ 0]]
			f42_arg0.Color:setAlpha( 0 ) --[[ @ 0]]
			f42_arg0.clipFinished( f42_arg0.Color ) --[[ @ 0]]
			f42_arg0.ring3:completeAnimation() --[[ @ 0]]
			f42_arg0.ring3:setAlpha( 0 ) --[[ @ 0]]
			f42_arg0.clipFinished( f42_arg0.ring3 ) --[[ @ 0]]
			f42_arg0.line:completeAnimation() --[[ @ 0]]
			f42_arg0.line:setAlpha( 0 ) --[[ @ 0]]
			f42_arg0.clipFinished( f42_arg0.line ) --[[ @ 0]]
			f42_arg0.line2:completeAnimation() --[[ @ 0]]
			f42_arg0.line2:setAlpha( 0 ) --[[ @ 0]]
			f42_arg0.clipFinished( f42_arg0.line2 ) --[[ @ 0]]
			local f42_local0 = function ( f43_arg0 )
				local f43_local0 = function ( f44_arg0 )
					f44_arg0:beginAnimation( 500 ) --[[ @ 0]]
					f44_arg0:setRGB( 1, 1, 1 ) --[[ @ 0]]
					f44_arg0:registerEventHandler( "transition_complete_keyframe", f42_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f42_arg0.GameTimerSeconds:beginAnimation( 500 ) --[[ @ 0]]
				f42_arg0.GameTimerSeconds:setRGB( 1, 0, 0 ) --[[ @ 0]]
				f42_arg0.GameTimerSeconds:registerEventHandler( "interrupted_keyframe", f42_arg0.clipInterrupted ) --[[ @ 0]]
				f42_arg0.GameTimerSeconds:registerEventHandler( "transition_complete_keyframe", f43_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f42_arg0.GameTimerSeconds:completeAnimation() --[[ @ 0]]
			f42_arg0.GameTimerSeconds:setLeftRight( 0, 0, 59.5, 150.5 ) --[[ @ 0]]
			f42_arg0.GameTimerSeconds:setRGB( 1, 1, 1 ) --[[ @ 0]]
			f42_arg0.GameTimerSeconds:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_90D57B1E92D39D7" ) ) --[[ @ 0]]
			f42_arg0.GameTimerSeconds:setShaderVector( 0, 0.8, 0, 0, 0 ) --[[ @ 0]]
			f42_arg0.GameTimerSeconds:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
			f42_arg0.GameTimerSeconds:setShaderVector( 2, 1, 0, 0, 0.6 ) --[[ @ 0]]
			f42_arg0.GameTimerSeconds:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
			f42_local0( f42_arg0.GameTimerSeconds ) --[[ @ 0]]
			local f42_local1 = function ( f45_arg0 )
				local f45_local0 = function ( f46_arg0 )
					f46_arg0:beginAnimation( 500 ) --[[ @ 0]]
					f46_arg0:setRGB( 1, 1, 1 ) --[[ @ 0]]
					f46_arg0:registerEventHandler( "transition_complete_keyframe", f42_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f42_arg0.GameTimerMinutes:beginAnimation( 500 ) --[[ @ 0]]
				f42_arg0.GameTimerMinutes:setRGB( 1, 0, 0 ) --[[ @ 0]]
				f42_arg0.GameTimerMinutes:registerEventHandler( "interrupted_keyframe", f42_arg0.clipInterrupted ) --[[ @ 0]]
				f42_arg0.GameTimerMinutes:registerEventHandler( "transition_complete_keyframe", f45_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f42_arg0.GameTimerMinutes:completeAnimation() --[[ @ 0]]
			f42_arg0.GameTimerMinutes:setLeftRight( 0, 0, 106, 137 ) --[[ @ 0]]
			f42_arg0.GameTimerMinutes:setRGB( 1, 1, 1 ) --[[ @ 0]]
			f42_arg0.GameTimerMinutes:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_90D57B1E92D39D7" ) ) --[[ @ 0]]
			f42_arg0.GameTimerMinutes:setShaderVector( 0, 0.8, 0, 0, 0 ) --[[ @ 0]]
			f42_arg0.GameTimerMinutes:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
			f42_arg0.GameTimerMinutes:setShaderVector( 2, 1, 0, 0, 0.6 ) --[[ @ 0]]
			f42_local1( f42_arg0.GameTimerMinutes ) --[[ @ 0]]
			f42_arg0.nextClip = "DefaultClip" --[[ @ 0]]
		end,
		DefaultState = function ( f47_arg0, f47_arg1 )
			f47_arg0:__resetProperties() --[[ @ 0]]
			f47_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f47_arg0.Color:completeAnimation() --[[ @ 0]]
			f47_arg0.Color:setLeftRight( 0, 0, 0, 114 ) --[[ @ 0]]
			f47_arg0.Color:setTopBottom( 0, 0, 3, 34 ) --[[ @ 0]]
			f47_arg0.Color:setAlpha( 0 ) --[[ @ 0]]
			f47_arg0.clipFinished( f47_arg0.Color ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.ScoreInfo_Timer.__onClose = function ( f48_arg0 )
	f48_arg0.BlurBacking:close() --[[ @ 0]]
	f48_arg0.WhistleTime:close() --[[ @ 0]]
	f48_arg0.BombTimer:close() --[[ @ 0]]
	f48_arg0.HardpointObjective:close() --[[ @ 0]]
end
 --[[ @ 0]]
