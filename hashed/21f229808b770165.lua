-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:33
require( "x64:39bfecaffe48d881" ) --[[ @ 0]]

CoD.StartMenu_Quit = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.StartMenu_Quit.__defaultWidth = 1920 --[[ @ 0]]
CoD.StartMenu_Quit.__defaultHeight = 1080 --[[ @ 0]]
CoD.StartMenu_Quit.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.StartMenu_Quit ) --[[ @ 0]]
	self.id = "StartMenu_Quit" --[[ @ 0]]
	self.soundSet = "ChooseDecal" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local StrokeL = LUI.UIImage.new( 0, 0, -450, 250, 0.5, 0.5, 0, 1 ) --[[ @ 0]]
	StrokeL:setAlpha( 0.02 ) --[[ @ 0]]
	self:addElement( StrokeL ) --[[ @ 0]]
	self.StrokeL = StrokeL --[[ @ 0]]
	
	local StrokeR = LUI.UIImage.new( 0, 0, 1480, 2180, 0.5, 0.5, 0, 1 ) --[[ @ 0]]
	StrokeR:setAlpha( 0.02 ) --[[ @ 0]]
	self:addElement( StrokeR ) --[[ @ 0]]
	self.StrokeR = StrokeR --[[ @ 0]]
	
	local QuitButton = CoD.StartMenu_QuitButton.new( f1_arg0, f1_arg1, 1, 1, -283, -33, 1, 1, -186, -94 ) --[[ @ 0]]
	QuitButton:appendEventHandler( "input_source_changed", function ( f2_arg0, f2_arg1 )
		f2_arg1.menu = f2_arg1.menu or f1_arg0 --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f2_arg0, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local f1_local4 = QuitButton --[[ @ 0]]
	local f1_local5 = QuitButton.subscribeToModel --[[ @ 0]]
	local f1_local6 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local5( f1_local4, f1_local6.LastInput, function ( f3_arg0, f3_arg1 )
		CoD.Menu.UpdateButtonShownState( f3_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	QuitButton:registerEventHandler( "gain_focus", function ( element, event )
		local f4_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f4_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f4_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f4_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( QuitButton, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "MOUSE1", function ( element, menu, controller, model )
		if IsMouseOrKeyboard( controller ) and IsPC() and not CoD.BaseUtility.IsButtonHoldFinished( model ) then
			QuitPCGame_MP( self, controller, true ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsMouseOrKeyboard( controller ) and IsPC() then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_0", Enum[@"hash_3BEBDBAEEB3ECCCA"][@"hash_771B04FAC5BE0E35"] | 1500 << Enum[@"hash_3BEBDBAEEB3ECCCA"][@"hash_176ADD225D738C93"], "MOUSE1" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( QuitButton, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], nil, function ( element, menu, controller, model )
		if IsGamepad( controller ) and CoD.BaseUtility.IsButtonHoldFinished( model ) then
			CoD.StartMenuUtility.QuitGameWZ( self, element, controller, "", menu ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsGamepad( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", Enum[@"hash_3BEBDBAEEB3ECCCA"][@"hash_771B04FAC5BE0E35"] | 1500 << Enum[@"hash_3BEBDBAEEB3ECCCA"][@"hash_176ADD225D738C93"], nil ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( QuitButton ) --[[ @ 0]]
	self.QuitButton = QuitButton --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "codcaster",
			condition = function ( menu, element, event )
				return IsCodCaster( f1_arg1 ) and IsMultiplayer()
			end
		},
		{
			stateName = "Warzone",
			condition = function ( menu, element, event )
				return IsWarzone()
			end
		}
	} ) --[[ @ 0]]
	f1_local4 = self --[[ @ 0]]
	f1_local5 = self.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local5( f1_local4, f1_local6["factions.isCoDCaster"], function ( f11_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f11_arg0:get(),
			modelName = "factions.isCoDCaster"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local4 = self --[[ @ 0]]
	f1_local5 = self.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local5( f1_local4, f1_local6["lobbyRoot.lobbyNav"], function ( f12_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f12_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	QuitButton:appendEventHandler( "menu_loaded", function ()
		QuitButton:setModel( f1_arg0.buttonModel, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	QuitButton.id = "QuitButton" --[[ @ 0]]
	self.__defaultFocus = QuitButton --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.StartMenu_Quit.__resetProperties = function ( f14_arg0 )
	f14_arg0.QuitButton:completeAnimation() --[[ @ 0]]
	f14_arg0.QuitButton:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.StartMenu_Quit.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f15_arg0, f15_arg1 )
			f15_arg0:__resetProperties() --[[ @ 0]]
			f15_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f15_arg0.QuitButton:completeAnimation() --[[ @ 0]]
			f15_arg0.QuitButton:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.QuitButton ) --[[ @ 0]]
		end
	},
	codcaster = {
		DefaultClip = function ( f16_arg0, f16_arg1 )
			f16_arg0:__resetProperties() --[[ @ 0]]
			f16_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f16_arg0.QuitButton:completeAnimation() --[[ @ 0]]
			f16_arg0.QuitButton:setAlpha( 0 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.QuitButton ) --[[ @ 0]]
		end
	},
	Warzone = {
		DefaultClip = function ( f17_arg0, f17_arg1 )
			f17_arg0:__resetProperties() --[[ @ 0]]
			f17_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f17_arg0.QuitButton:completeAnimation() --[[ @ 0]]
			f17_arg0.QuitButton:setAlpha( 1 ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.QuitButton ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.StartMenu_Quit.__onClose = function ( f18_arg0 )
	f18_arg0.QuitButton:close() --[[ @ 0]]
end
 --[[ @ 0]]
