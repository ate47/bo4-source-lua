-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
require( "ui/uieditor/widgets/loadinganimation/animationloadingwidget" ) --[[ @ 0]]

CoD.Spinner = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.Spinner.__defaultWidth = 1920 --[[ @ 0]]
CoD.Spinner.__defaultHeight = 1080 --[[ @ 0]]
CoD.Spinner.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.Spinner ) --[[ @ 0]]
	self.id = "Spinner" --[[ @ 0]]
	self.soundSet = "HUD" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local AnimationLoadingWidget0 = CoD.AnimationLoadingWidget.new( f1_arg0, f1_arg1, 1, 1, -282, -66, 1, 1, -270, -54 ) --[[ @ 0]]
	AnimationLoadingWidget0:setScale( 0.65, 0.65 ) --[[ @ 0]]
	self:addElement( AnimationLoadingWidget0 ) --[[ @ 0]]
	self.AnimationLoadingWidget0 = AnimationLoadingWidget0 --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Visible",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalModelValueTrue( "lobbyRoot.spinnerActive" )
			end
		}
	} ) --[[ @ 0]]
	local f1_local2 = self --[[ @ 0]]
	local f1_local3 = self.subscribeToModel --[[ @ 0]]
	local f1_local4 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local3( f1_local2, f1_local4["lobbyRoot.spinnerActive"], function ( f3_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f3_arg0:get(),
			modelName = "lobbyRoot.spinnerActive"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( self, "setState", function ( element, controller, f4_arg2, f4_arg3, f4_arg4 )
		if IsSelfInState( self, "Visible" ) then
			CoD.LobbyUtility.SetSpinnerActive( true ) --[[ @ 0]]
		else
			CoD.LobbyUtility.SetSpinnerActive( false ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.Spinner.__resetProperties = function ( f5_arg0 )
	f5_arg0.AnimationLoadingWidget0:completeAnimation() --[[ @ 0]]
	f5_arg0.AnimationLoadingWidget0:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.Spinner.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f6_arg0, f6_arg1 )
			f6_arg0:__resetProperties() --[[ @ 0]]
			f6_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f6_arg0.AnimationLoadingWidget0:completeAnimation() --[[ @ 0]]
			f6_arg0.AnimationLoadingWidget0:setAlpha( 0 ) --[[ @ 0]]
			f6_arg0.clipFinished( f6_arg0.AnimationLoadingWidget0 ) --[[ @ 0]]
		end,
		Visible = function ( f7_arg0, f7_arg1 )
			f7_arg0:__resetProperties() --[[ @ 0]]
			f7_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f7_local0 = function ( f8_arg0 )
				f7_arg0.AnimationLoadingWidget0:beginAnimation( 200 ) --[[ @ 0]]
				f7_arg0.AnimationLoadingWidget0:setAlpha( 1 ) --[[ @ 0]]
				f7_arg0.AnimationLoadingWidget0:registerEventHandler( "interrupted_keyframe", f7_arg0.clipInterrupted ) --[[ @ 0]]
				f7_arg0.AnimationLoadingWidget0:registerEventHandler( "transition_complete_keyframe", f7_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f7_arg0.AnimationLoadingWidget0:completeAnimation() --[[ @ 0]]
			f7_arg0.AnimationLoadingWidget0:setAlpha( 0 ) --[[ @ 0]]
			f7_local0( f7_arg0.AnimationLoadingWidget0 ) --[[ @ 0]]
		end
	},
	Visible = {
		DefaultClip = function ( f9_arg0, f9_arg1 )
			f9_arg0:__resetProperties() --[[ @ 0]]
			f9_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end,
		DefaultState = function ( f10_arg0, f10_arg1 )
			f10_arg0:__resetProperties() --[[ @ 0]]
			f10_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f10_local0 = function ( f11_arg0 )
				f10_arg0.AnimationLoadingWidget0:beginAnimation( 200 ) --[[ @ 0]]
				f10_arg0.AnimationLoadingWidget0:setAlpha( 0 ) --[[ @ 0]]
				f10_arg0.AnimationLoadingWidget0:registerEventHandler( "interrupted_keyframe", f10_arg0.clipInterrupted ) --[[ @ 0]]
				f10_arg0.AnimationLoadingWidget0:registerEventHandler( "transition_complete_keyframe", f10_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f10_arg0.AnimationLoadingWidget0:completeAnimation() --[[ @ 0]]
			f10_arg0.AnimationLoadingWidget0:setAlpha( 1 ) --[[ @ 0]]
			f10_local0( f10_arg0.AnimationLoadingWidget0 ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.Spinner.__onClose = function ( f12_arg0 )
	f12_arg0.AnimationLoadingWidget0:close() --[[ @ 0]]
end
 --[[ @ 0]]
