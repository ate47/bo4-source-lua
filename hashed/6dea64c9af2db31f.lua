-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:35
require( "x64:2f0229e4dd8ebd15" ) --[[ @ 0]]

CoD.LeaguePlayLeaderboard_InfoPane = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.LeaguePlayLeaderboard_InfoPane.__defaultWidth = 1920 --[[ @ 0]]
CoD.LeaguePlayLeaderboard_InfoPane.__defaultHeight = 1080 --[[ @ 0]]
CoD.LeaguePlayLeaderboard_InfoPane.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	CoD.ArenaUtility.InitLadderListLoadedModel( f1_arg1 ) --[[ @ 0]]
	self:setClass( CoD.LeaguePlayLeaderboard_InfoPane ) --[[ @ 0]]
	self.id = "LeaguePlayLeaderboard_InfoPane" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local ArenaInfoWidget = CoD.ArenaInfoWidget.new( f1_arg0, f1_arg1, 0, 0, 1287, 1636, 0, 0, 268, 903 ) --[[ @ 0]]
	ArenaInfoWidget:linkToElementModel( self, "xuid", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			ArenaInfoWidget.arenaFlameStreak:setImage( RegisterImage( CoD.ArenaLeaguePlayUtility.GetPlayerFireStreak( f2_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	ArenaInfoWidget:linkToElementModel( self, "xuid", true, function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			ArenaInfoWidget.Icon:setImage( RegisterImage( CoD.ArenaLeaguePlayUtility.GetLeagueLadderPlayerRankIconFromXuid( f3_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	ArenaInfoWidget.SkillIcon.__SkillIcon_Image = function ( f4_arg0 )
		local f4_local0 = f4_arg0:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			ArenaInfoWidget.SkillIcon:setImage( RegisterImage( CoD.ArenaLeaguePlayUtility.GetLeagueLadderPlayerSkillDivisionIconFromXuid( f4_local0 ) ) ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	ArenaInfoWidget:linkToElementModel( self, "xuid", true, ArenaInfoWidget.SkillIcon.__SkillIcon_Image ) --[[ @ 0]]
	ArenaInfoWidget.SkillIcon.__SkillIcon_Image_FullPath = function ()
		local f5_local0 = self:getModel() --[[ @ 0]]
		if f5_local0 then
			f5_local0 = self:getModel() --[[ @ 0]]
			f5_local0 = f5_local0.xuid --[[ @ 0]]
		end
		if f5_local0 then
			ArenaInfoWidget.SkillIcon.__SkillIcon_Image( f5_local0 ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	ArenaInfoWidget.Rank.__xuid = function ( f6_arg0 )
		local f6_local0 = f6_arg0:get() --[[ @ 0]]
		if f6_local0 ~= nil then
			ArenaInfoWidget.Rank:setText( CoD.ArenaLeaguePlayUtility.GetLeagueLadderPlayerRankFromXuid( f6_local0 ) ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	ArenaInfoWidget:linkToElementModel( self, "xuid", true, ArenaInfoWidget.Rank.__xuid ) --[[ @ 0]]
	ArenaInfoWidget.Rank.__xuid_FullPath = function ()
		local f7_local0 = self:getModel() --[[ @ 0]]
		if f7_local0 then
			f7_local0 = self:getModel() --[[ @ 0]]
			f7_local0 = f7_local0.xuid --[[ @ 0]]
		end
		if f7_local0 then
			ArenaInfoWidget.Rank.__xuid( f7_local0 ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	ArenaInfoWidget:linkToElementModel( self, "xuid", true, function ( model )
		local f8_local0 = model:get() --[[ @ 0]]
		if f8_local0 ~= nil then
			ArenaInfoWidget.WinStreak.WinStreak:setText( CoD.ArenaLeaguePlayUtility.GetPlayerBestCurrentEventGameStreakFromXuid( f8_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	ArenaInfoWidget:linkToElementModel( self, "xuid", true, function ( model )
		local f9_local0 = model:get() --[[ @ 0]]
		if f9_local0 ~= nil then
			ArenaInfoWidget.Emblem:setupPlayerEmblemByXUID( f9_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	ArenaInfoWidget:linkToElementModel( self, "identityBadge", false, function ( model )
		ArenaInfoWidget.CallingCard:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	ArenaInfoWidget:linkToElementModel( self, "gamertag", true, function ( model )
		local f11_local0 = model:get() --[[ @ 0]]
		if f11_local0 ~= nil then
			ArenaInfoWidget.Name:setText( f11_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( ArenaInfoWidget ) --[[ @ 0]]
	self.ArenaInfoWidget = ArenaInfoWidget --[[ @ 0]]
	
	local f1_local2 = ArenaInfoWidget --[[ @ 0]]
	local f1_local3 = ArenaInfoWidget.subscribeToModel --[[ @ 0]]
	local f1_local4 = DataSources.LobbyRoot.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local3( f1_local2, f1_local4.lobbyNav, ArenaInfoWidget.SkillIcon.__SkillIcon_Image_FullPath ) --[[ @ 0]]
	f1_local2 = ArenaInfoWidget --[[ @ 0]]
	f1_local3 = ArenaInfoWidget.subscribeToModel --[[ @ 0]]
	f1_local4 = DataSources.LobbyRoot.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local3( f1_local2, f1_local4["privateClient.update"], ArenaInfoWidget.SkillIcon.__SkillIcon_Image_FullPath ) --[[ @ 0]]
	f1_local2 = ArenaInfoWidget --[[ @ 0]]
	f1_local3 = ArenaInfoWidget.subscribeToModel --[[ @ 0]]
	f1_local4 = DataSources.LobbyRoot.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local3( f1_local2, f1_local4["gameClient.update"], ArenaInfoWidget.SkillIcon.__SkillIcon_Image_FullPath ) --[[ @ 0]]
	f1_local2 = ArenaInfoWidget --[[ @ 0]]
	f1_local3 = ArenaInfoWidget.subscribeToModel --[[ @ 0]]
	f1_local4 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local3( f1_local2, f1_local4["PartyPrivacy.privacy"], ArenaInfoWidget.SkillIcon.__SkillIcon_Image_FullPath ) --[[ @ 0]]
	f1_local2 = ArenaInfoWidget --[[ @ 0]]
	f1_local3 = ArenaInfoWidget.subscribeToModel --[[ @ 0]]
	f1_local4 = DataSources.LobbyRoot.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local3( f1_local2, f1_local4.lobbyNav, ArenaInfoWidget.Rank.__xuid_FullPath ) --[[ @ 0]]
	f1_local2 = ArenaInfoWidget --[[ @ 0]]
	f1_local3 = ArenaInfoWidget.subscribeToModel --[[ @ 0]]
	f1_local4 = DataSources.LobbyRoot.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local3( f1_local2, f1_local4["privateClient.update"], ArenaInfoWidget.Rank.__xuid_FullPath ) --[[ @ 0]]
	f1_local2 = ArenaInfoWidget --[[ @ 0]]
	f1_local3 = ArenaInfoWidget.subscribeToModel --[[ @ 0]]
	f1_local4 = DataSources.LobbyRoot.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local3( f1_local2, f1_local4["gameClient.update"], ArenaInfoWidget.Rank.__xuid_FullPath ) --[[ @ 0]]
	f1_local2 = ArenaInfoWidget --[[ @ 0]]
	f1_local3 = ArenaInfoWidget.subscribeToModel --[[ @ 0]]
	f1_local4 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local3( f1_local2, f1_local4["PartyPrivacy.privacy"], ArenaInfoWidget.Rank.__xuid_FullPath ) --[[ @ 0]]
	self:mergeStateConditions( {
		{
			stateName = "Error",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalDataSourceModelValueEqualTo( f1_arg1, "LeaguePlayLadderMemberList", "allXuidInfoLoaded", true ) and CoD.ModelUtility.IsGlobalDataSourceModelValueNil( f1_arg1, "LeaguePlayLadder", "leagueNameCode" )
			end
		}
	} ) --[[ @ 0]]
	f1_local2 = self --[[ @ 0]]
	f1_local3 = self.subscribeToModel --[[ @ 0]]
	f1_local4 = DataSources.LeaguePlayLadderMemberList.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local3( f1_local2, f1_local4.allXuidInfoLoaded, function ( f13_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f13_arg0:get(),
			modelName = "allXuidInfoLoaded"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local2 = self --[[ @ 0]]
	f1_local3 = self.subscribeToModel --[[ @ 0]]
	f1_local4 = DataSources.LeaguePlayLadder.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local3( f1_local2, f1_local4.leagueNameCode, function ( f14_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f14_arg0:get(),
			modelName = "leagueNameCode"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self.__on_menuOpened_self = function ( f15_arg0, f15_arg1, f15_arg2, f15_arg3 )
		local f15_local0 = self --[[ @ 0]]
		CoD.ArenaLeaguePlayUtility.FillRubyList( self, self.RubiesList ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	f1_arg0:addMenuOpenedCallback( self.__on_menuOpened_self ) --[[ @ 0]]
	self:linkToElementModel( self, "identityBadge.xuid", true, function ( model )
		local f16_local0 = self --[[ @ 0]]
		UpdateElementState( self, "RubiesList", f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	ArenaInfoWidget.id = "ArenaInfoWidget" --[[ @ 0]]
	self.__on_close_removeOverrides = function ()
		f1_arg0:removeMenuOpenedCallback( self.__on_menuOpened_self ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.LeaguePlayLeaderboard_InfoPane.__resetProperties = function ( f18_arg0 )
	f18_arg0.ArenaInfoWidget:completeAnimation() --[[ @ 0]]
	f18_arg0.ArenaInfoWidget:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.LeaguePlayLeaderboard_InfoPane.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f19_arg0, f19_arg1 )
			f19_arg0:__resetProperties() --[[ @ 0]]
			f19_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	Error = {
		DefaultClip = function ( f20_arg0, f20_arg1 )
			f20_arg0:__resetProperties() --[[ @ 0]]
			f20_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f20_arg0.ArenaInfoWidget:completeAnimation() --[[ @ 0]]
			f20_arg0.ArenaInfoWidget:setAlpha( 0 ) --[[ @ 0]]
			f20_arg0.clipFinished( f20_arg0.ArenaInfoWidget ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.LeaguePlayLeaderboard_InfoPane.__onClose = function ( f21_arg0 )
	f21_arg0.__on_close_removeOverrides() --[[ @ 0]]
	f21_arg0.ArenaInfoWidget:close() --[[ @ 0]]
end
 --[[ @ 0]]
