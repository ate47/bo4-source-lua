-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:33
require( "x64:7d03017b72a4f0bb" ) --[[ @ 0]]
require( "x64:3413629d25e31f4c" ) --[[ @ 0]]
require( "x64:1d2b07b098532876" ) --[[ @ 0]]

CoD.vhud_gunship_internal = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.vhud_gunship_internal.__defaultWidth = 1920 --[[ @ 0]]
CoD.vhud_gunship_internal.__defaultHeight = 1080 --[[ @ 0]]
CoD.vhud_gunship_internal.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.vhud_gunship_internal ) --[[ @ 0]]
	self.id = "vhud_gunship_internal" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local layoutDotlineGrid = CoD.vhud_layoutDotlineGrid.new( f1_arg0, f1_arg1, 0.5, 0.5, -960, 960, 0.5, 0.5, -580.5, 584.5 ) --[[ @ 0]]
	layoutDotlineGrid:setAlpha( 0.8 ) --[[ @ 0]]
	self:addElement( layoutDotlineGrid ) --[[ @ 0]]
	self.layoutDotlineGrid = layoutDotlineGrid --[[ @ 0]]
	
	local Vignette2 = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	Vignette2:setAlpha( 0.5 ) --[[ @ 0]]
	Vignette2:setImage( RegisterImage( @"uie_ui_hud_vehicle_common_vignette" ) ) --[[ @ 0]]
	self:addElement( Vignette2 ) --[[ @ 0]]
	self.Vignette2 = Vignette2 --[[ @ 0]]
	
	local TiledShaderImage = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	TiledShaderImage:setAlpha( 0.5 ) --[[ @ 0]]
	TiledShaderImage:setImage( RegisterImage( @"uie_ui_hud_vehicle_dart_scanline" ) ) --[[ @ 0]]
	TiledShaderImage:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_16CBE95C250C6D15" ) ) --[[ @ 0]]
	TiledShaderImage:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	TiledShaderImage:setupNineSliceShader( 64, 64 ) --[[ @ 0]]
	self:addElement( TiledShaderImage ) --[[ @ 0]]
	self.TiledShaderImage = TiledShaderImage --[[ @ 0]]
	
	local f1_local4 = nil --[[ @ 0]]
	self.vehicleHudFractal2 = LUI.UIElement.createFake() --[[ @ 0]]
	local vehicleHudFractal3 = nil --[[ @ 0]]
	
	vehicleHudFractal3 = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	vehicleHudFractal3:setAlpha( 0.8 ) --[[ @ 0]]
	vehicleHudFractal3:setImage( RegisterImage( @"uie_ui_hud_vehicle_ac130_layout_grid_fractal" ) ) --[[ @ 0]]
	self:addElement( vehicleHudFractal3 ) --[[ @ 0]]
	self.vehicleHudFractal3 = vehicleHudFractal3 --[[ @ 0]]
	
	local f1_local6 = nil --[[ @ 0]]
	self.Vignette = LUI.UIElement.createFake() --[[ @ 0]]
	local f1_local7 = nil --[[ @ 0]]
	self.vehicleHudFractal = LUI.UIElement.createFake() --[[ @ 0]]
	
	local vhudgunshiprecticle = CoD.vhud_gunship_recticle.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	vhudgunshiprecticle:linkToElementModel( self, nil, false, function ( model )
		vhudgunshiprecticle:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( vhudgunshiprecticle ) --[[ @ 0]]
	self.vhudgunshiprecticle = vhudgunshiprecticle --[[ @ 0]]
	
	local GunshipButtonPrompt = CoD.vhud_gunship_buttonPrompt.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	GunshipButtonPrompt:linkToElementModel( self, nil, false, function ( model )
		GunshipButtonPrompt:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( GunshipButtonPrompt ) --[[ @ 0]]
	self.GunshipButtonPrompt = GunshipButtonPrompt --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "HiddenCodCaster",
			condition = function ( menu, element, event )
				return IsCodCaster( f1_arg1 )
			end
		}
	} ) --[[ @ 0]]
	local f1_local10 = self --[[ @ 0]]
	local f1_local11 = self.subscribeToModel --[[ @ 0]]
	local f1_local12 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local11( f1_local10, f1_local12["factions.isCoDCaster"], function ( f5_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f5_arg0:get(),
			modelName = "factions.isCoDCaster"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PreLoadFunc then
		PreLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	f1_local11 = self --[[ @ 0]]
	f1_local11 = vhudgunshiprecticle --[[ @ 0]]
	if IsPC() then
		SizeToHudArea( f1_local11, f1_arg1 ) --[[ @ 0]]
	end
	f1_local11 = GunshipButtonPrompt --[[ @ 0]]
	if IsPC() then
		SizeToHudArea( f1_local11, f1_arg1 ) --[[ @ 0]]
	end
	return self
end
 --[[ @ 0]]
CoD.vhud_gunship_internal.__resetProperties = function ( f6_arg0 )
	f6_arg0.GunshipButtonPrompt:completeAnimation() --[[ @ 0]]
	f6_arg0.GunshipButtonPrompt:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.vhud_gunship_internal.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f7_arg0, f7_arg1 )
			f7_arg0:__resetProperties() --[[ @ 0]]
			f7_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	HiddenCodCaster = {
		DefaultClip = function ( f8_arg0, f8_arg1 )
			f8_arg0:__resetProperties() --[[ @ 0]]
			f8_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f8_arg0.GunshipButtonPrompt:completeAnimation() --[[ @ 0]]
			f8_arg0.GunshipButtonPrompt:setAlpha( 0 ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.GunshipButtonPrompt ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.vhud_gunship_internal.__onClose = function ( f9_arg0 )
	f9_arg0.layoutDotlineGrid:close() --[[ @ 0]]
	f9_arg0.vhudgunshiprecticle:close() --[[ @ 0]]
	f9_arg0.GunshipButtonPrompt:close() --[[ @ 0]]
end
 --[[ @ 0]]
