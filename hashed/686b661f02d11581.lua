-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:50
require( "ui/uieditor/widgets/cac/restricteditemwarning" ) --[[ @ 0]]
require( "x64:67a75ec1647cc628" ) --[[ @ 0]]
require( "ui/uieditor/widgets/uie_border" ) --[[ @ 0]]

CoD.ZMTalismanSlot = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.ZMTalismanSlot.__defaultWidth = 90 --[[ @ 0]]
CoD.ZMTalismanSlot.__defaultHeight = 90 --[[ @ 0]]
CoD.ZMTalismanSlot.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.ZMTalismanSlot ) --[[ @ 0]]
	self.id = "ZMTalismanSlot" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local Blur = LUI.UIImage.new( 0, 0, -20, 112, 0, 0, -23, 109 ) --[[ @ 0]]
	Blur:setZRot( 45 ) --[[ @ 0]]
	Blur:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_E2354BE557C4C7A" ) ) --[[ @ 0]]
	Blur:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( Blur ) --[[ @ 0]]
	self.Blur = Blur --[[ @ 0]]
	
	local Tint = LUI.UIImage.new( 0, 0, 0, 90, 0, 0, 0, 90 ) --[[ @ 0]]
	Tint:setRGB( 0, 0, 0 ) --[[ @ 0]]
	Tint:setAlpha( 0 ) --[[ @ 0]]
	Tint:setZRot( 45 ) --[[ @ 0]]
	self:addElement( Tint ) --[[ @ 0]]
	self.Tint = Tint --[[ @ 0]]
	
	local Box = LUI.UIImage.new( 0, 0, -63, 153, 0, 0, -63, 153 ) --[[ @ 0]]
	Box:setAlpha( 0.5 ) --[[ @ 0]]
	Box:setImage( RegisterImage( @"hash_3BCBBC8226622A5" ) ) --[[ @ 0]]
	self:addElement( Box ) --[[ @ 0]]
	self.Box = Box --[[ @ 0]]
	
	local PerkPreviewIcon = CoD.TalentPreviewIcon.new( f1_arg0, f1_arg1, 0.1, 0.9, 0, 0, 0.1, 0.9, 0, 0 ) --[[ @ 0]]
	PerkPreviewIcon:mergeStateConditions( {
		{
			stateName = "Preview",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalDataSourceModelValueNonEmptyString( f1_arg1, "TalentSelect", "previewImage" )
			end
		}
	} ) --[[ @ 0]]
	local EmptyText = PerkPreviewIcon --[[ @ 0]]
	local PerkIcon = PerkPreviewIcon.subscribeToModel --[[ @ 0]]
	local EmptyIcon = DataSources.TalentSelect.getModel( f1_arg1 ) --[[ @ 0]]
	PerkIcon( EmptyText, EmptyIcon.previewImage, function ( f3_arg0 )
		f1_arg0:updateElementState( PerkPreviewIcon, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f3_arg0:get(),
			modelName = "previewImage"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	PerkPreviewIcon:setAlpha( 0 ) --[[ @ 0]]
	PerkPreviewIcon:linkToElementModel( self, "image", true, function ( model )
		local f4_local0 = model:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			PerkPreviewIcon.TalentIcon:setImage( RegisterImage( BlackTransparentIfNilOrEmpty( f4_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( PerkPreviewIcon ) --[[ @ 0]]
	self.PerkPreviewIcon = PerkPreviewIcon --[[ @ 0]]
	
	PerkIcon = LUI.UIImage.new( 0.1, 0.9, 0, 0, 0.1, 0.9, -2, -2 ) --[[ @ 0]]
	PerkIcon:linkToElementModel( self, "image", true, function ( model )
		local f5_local0 = model:get() --[[ @ 0]]
		if f5_local0 ~= nil then
			PerkIcon:setImage( RegisterImage( f5_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( PerkIcon ) --[[ @ 0]]
	self.PerkIcon = PerkIcon --[[ @ 0]]
	
	EmptyText = LUI.UIText.new( 0.5, 0.5, -100, 100, 0, 0, 114, 138 ) --[[ @ 0]]
	EmptyText:setRGB( 0.56, 0.56, 0.56 ) --[[ @ 0]]
	EmptyText:setAlpha( 0 ) --[[ @ 0]]
	EmptyText:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"menu/empty" ) ) --[[ @ 0]]
	EmptyText:setTTF( "dinnext_regular" ) --[[ @ 0]]
	EmptyText:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	EmptyText:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	self:addElement( EmptyText ) --[[ @ 0]]
	self.EmptyText = EmptyText --[[ @ 0]]
	
	EmptyIcon = LUI.UIImage.new( 0.5, 0.5, -40, 40, 0.5, 0.5, -43, 37 ) --[[ @ 0]]
	EmptyIcon:setRGB( ColorSet.T8__BEIGE__HEADER.r, ColorSet.T8__BEIGE__HEADER.g, ColorSet.T8__BEIGE__HEADER.b ) --[[ @ 0]]
	EmptyIcon:setAlpha( 0 ) --[[ @ 0]]
	EmptyIcon:setImage( RegisterImage( @"hash_8813AFA41490306" ) ) --[[ @ 0]]
	EmptyIcon:setMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	self:addElement( EmptyIcon ) --[[ @ 0]]
	self.EmptyIcon = EmptyIcon --[[ @ 0]]
	
	local Selected = CoD.uie_Border.new( f1_arg0, f1_arg1, 0, 0, 0, 90, 0, 0, 0, 90 ) --[[ @ 0]]
	Selected:setRGB( 0.93, 0.93, 0 ) --[[ @ 0]]
	Selected:setAlpha( 0 ) --[[ @ 0]]
	Selected:setZRot( 45 ) --[[ @ 0]]
	self:addElement( Selected ) --[[ @ 0]]
	self.Selected = Selected --[[ @ 0]]
	
	local RestrictionIcon = CoD.RestrictedItemWarning.new( f1_arg0, f1_arg1, 0.5, 0.5, -29, 31, 0.5, 0.5, -35, 15 ) --[[ @ 0]]
	RestrictionIcon:linkToElementModel( self, nil, false, function ( model )
		RestrictionIcon:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( RestrictionIcon ) --[[ @ 0]]
	self.RestrictionIcon = RestrictionIcon --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Empty",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualTo( element, f1_arg1, "itemIndex", CoD.CACUtility.EmptyItemIndex )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "itemIndex", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "itemIndex"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.ZMTalismanSlot.__resetProperties = function ( f9_arg0 )
	f9_arg0.EmptyIcon:completeAnimation() --[[ @ 0]]
	f9_arg0.EmptyText:completeAnimation() --[[ @ 0]]
	f9_arg0.PerkIcon:completeAnimation() --[[ @ 0]]
	f9_arg0.EmptyIcon:setAlpha( 0 ) --[[ @ 0]]
	f9_arg0.EmptyText:setAlpha( 0 ) --[[ @ 0]]
	f9_arg0.PerkIcon:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ZMTalismanSlot.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f10_arg0, f10_arg1 )
			f10_arg0:__resetProperties() --[[ @ 0]]
			f10_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	Empty = {
		DefaultClip = function ( f11_arg0, f11_arg1 )
			f11_arg0:__resetProperties() --[[ @ 0]]
			f11_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f11_arg0.PerkIcon:completeAnimation() --[[ @ 0]]
			f11_arg0.PerkIcon:setAlpha( 0 ) --[[ @ 0]]
			f11_arg0.clipFinished( f11_arg0.PerkIcon ) --[[ @ 0]]
			f11_arg0.EmptyText:completeAnimation() --[[ @ 0]]
			f11_arg0.EmptyText:setAlpha( 0 ) --[[ @ 0]]
			f11_arg0.clipFinished( f11_arg0.EmptyText ) --[[ @ 0]]
			f11_arg0.EmptyIcon:completeAnimation() --[[ @ 0]]
			f11_arg0.EmptyIcon:setAlpha( 0.35 ) --[[ @ 0]]
			f11_arg0.clipFinished( f11_arg0.EmptyIcon ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.ZMTalismanSlot.__onClose = function ( f12_arg0 )
	f12_arg0.PerkPreviewIcon:close() --[[ @ 0]]
	f12_arg0.PerkIcon:close() --[[ @ 0]]
	f12_arg0.Selected:close() --[[ @ 0]]
	f12_arg0.RestrictionIcon:close() --[[ @ 0]]
end
 --[[ @ 0]]
