-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:49
LUI = {
	UIWidth = 960,
	UIHeight = 720,
	roots = {},
	createMenu = {},
	hudMenuType = {},
	Alignment = {
		None = 0,
		Left = 1,
		Center = 2,
		Right = 3,
		Top = 4,
		Middle = 5,
		Bottom = 6
	},
	savedMenuStates = {},
	currentMouseFocus = {
		false,
		false,
		false,
		false
	}
} --[[ @ 0]]
if Enum[@"luialignment"] then
	LUI.Alignment = {
		None = Enum[@"luialignment"][@"lui_alignment_none"],
		Left = Enum[@"luialignment"][@"lui_alignment_left"],
		Center = Enum[@"luialignment"][@"lui_alignment_center"],
		Right = Enum[@"luialignment"][@"lui_alignment_right"],
		Top = Enum[@"luialignment"][@"lui_alignment_top"],
		Middle = Enum[@"luialignment"][@"lui_alignment_middle"],
		Bottom = Enum[@"luialignment"][@"lui_alignment_bottom"]
	} --[[ @ 0]]
end
if hpairs ~= nil then
	pairs = hpairs --[[ @ 0]]
end
function InheritFrom( f1_arg0 )
	if not f1_arg0 then
		error( "LUI Error: Did not specify base class in InheritFrom!" ) --[[ @ 0]]
	end
	local f1_local0 = {
		super = f1_arg0
	} --[[ @ 0]]
	setmetatable( f1_local0, {
		__index = f1_arg0
	} ) --[[ @ 0]]
	f1_local0.m_eventHandlers = {} --[[ @ 0]]
	setmetatable( f1_local0.m_eventHandlers, {
		__index = f1_arg0.m_eventHandlers
	} ) --[[ @ 0]]
	return f1_local0
end

LUI.ShallowCopy = function ( f2_arg0 )
	local f2_local0 = {} --[[ @ 0]]
	for f2_local4, f2_local5 in pairs( f2_arg0 ) --[[ @ 0]] do
		f2_local0[f2_local4] = f2_local5 --[[ @ 0]]
	end
	return f2_local0
end
 --[[ @ 0]]
LUI.DeepCopy = function ( f3_arg0 )
	local f3_local0 = {} --[[ @ 0]]
	for f3_local4, f3_local5 in pairs( f3_arg0 ) --[[ @ 0]] do
		if type( f3_local4 ) == "table" then
			f3_local4 = LUI.DeepCopy( f3_local4 ) --[[ @ 0]]
		end
		if type( f3_local5 ) == "table" then
			f3_local5 = LUI.DeepCopy( f3_local5 ) --[[ @ 0]]
		end
		f3_local0[f3_local4] = f3_local5 --[[ @ 0]]
	end
	return f3_local0
end
 --[[ @ 0]]
LUI.ConcatenateToTable = function ( f4_arg0, f4_arg1 )
	if f4_arg1 == nil then
		return 
	end
	for f4_local3, f4_local4 in pairs( f4_arg1 ) --[[ @ 0]] do
		table.insert( f4_arg0, f4_local4 ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
LUI.clamp = function ( f5_arg0, f5_arg1, f5_arg2 )
	if f5_arg0 <= f5_arg1 then
		return f5_arg1
	elseif f5_arg2 <= f5_arg0 then
		return f5_arg2
	else
		return f5_arg0
	end
end
 --[[ @ 0]]
LUI.CountFields = function ( f6_arg0 )
	local f6_local0 = 0 --[[ @ 0]]
	for f6_local4, f6_local5 in pairs( f6_arg0 ) --[[ @ 0]] do
		f6_local0 = f6_local0 + 1 --[[ @ 0]]
	end
	return f6_local0
end
 --[[ @ 0]]
LUI.startswith = function ( f7_arg0, f7_arg1 )
	return string.sub( f7_arg0, 1, string.len( f7_arg1 ) ) == f7_arg1
end
 --[[ @ 0]]
LUI.endswith = function ( f8_arg0, f8_arg1 )
	return string.sub( f8_arg0, -string.len( f8_arg1 ) ) == f8_arg1
end
 --[[ @ 0]]
LUI.splitString = function ( f9_arg0, f9_arg1 )
	local f9_local0 = {} --[[ @ 0]]
	string.gsub( f9_arg0, "([^" .. f9_arg1 .. "]+)", function ( f10_arg0 )
		table.insert( f9_local0, f10_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	return f9_local0
end
 --[[ @ 0]]
LUI.appendStringWithDelimiter = function ( f11_arg0, f11_arg1, f11_arg2 )
	if f11_arg0 ~= "" then
		f11_arg0 = f11_arg0 .. f11_arg2 --[[ @ 0]]
	end
	return f11_arg0 .. f11_arg1
end
 --[[ @ 0]]
LUI.getTableFromPath = function ( f12_arg0, f12_arg1 )
	local f12_local0 = f12_arg1 or _G --[[ @ 0]]
	for f12_local4 in string.gmatch( f12_arg0, "[^.]+" ) --[[ @ 0]] do
		f12_local0 = f12_local0[f12_local4] --[[ @ 0]]
		if f12_local0 == nil then
			return nil
		end
	end
	return f12_local0
end
 --[[ @ 0]]
LUI.getTableFromFieldList = function ( f13_arg0, f13_arg1 )
	local f13_local0 = f13_arg1 or _G --[[ @ 0]]
	for f13_local4, f13_local5 in ipairs( f13_arg0 ) --[[ @ 0]] do
		f13_local0 = f13_local0[f13_local5] --[[ @ 0]]
		if f13_local0 == nil then
			return nil
		end
	end
	return f13_local0
end
 --[[ @ 0]]
LUI.IterateTableBySortedKeys = function ( f14_arg0, f14_arg1, f14_arg2 )
	local f14_local0 = {} --[[ @ 0]]
	for f14_local4, f14_local5 in pairs( f14_arg0 ) --[[ @ 0]] do
		if f14_arg2 == nil or f14_arg2( f14_local4, f14_local5 ) then
			table.insert( f14_local0, f14_local4 ) --[[ @ 0]]
		end
	end
	table.sort( f14_local0, f14_arg1 ) --[[ @ 0]]
	f14_local1 = 0 --[[ @ 0]]
	return function ()
		f14_local1 = f14_local1 + 1 --[[ @ 0]]
		if f14_local0[f14_local1] == nil then
			return nil
		else
			return f14_local0[f14_local1], f14_arg0[f14_local0[f14_local1]]
		end
	end
	
end
 --[[ @ 0]]
LUI.CreateModelsAndInitialize = function ( f16_arg0, f16_arg1 )
	if f16_arg0 then
		for f16_local3, f16_local4 in pairs( f16_arg1 ) --[[ @ 0]] do
			LUI.CreateModelAndInitialize( f16_arg0, f16_local3, f16_local4 ) --[[ @ 0]]
		end
	end
end
 --[[ @ 0]]
LUI.CreateModelAndInitialize = function ( f17_arg0, f17_arg1, f17_arg2 )
	local f17_local0 = Engine[@"createmodel"]( f17_arg0, f17_arg1 ) --[[ @ 0]]
	if f17_local0 and f17_arg2 ~= nil then
		Engine[@"setmodelvalue"]( f17_local0, f17_arg2 ) --[[ @ 0]]
	end
	return f17_local0
end
 --[[ @ 0]]
LUI.OverrideFunction_GetFunctionTable = function ( f18_arg0, f18_arg1 )
	local f18_local0 = "__override_" .. f18_arg1 .. "_table" --[[ @ 0]]
	if not f18_arg0[f18_local0] then
		f18_arg0[f18_local0] = {
			f18_arg0[f18_arg1]
		} --[[ @ 0]]
		f18_arg0[f18_arg1] = function ( ... )
			for f19_local3, f19_local4 in ipairs( f18_arg0[f18_local0] ) --[[ @ 0]] do
				f19_local4( ... ) --[[ @ 0]]
			end
		end
		 --[[ @ 0]]
	end
	return f18_arg0[f18_local0]
end
 --[[ @ 0]]
LUI.OverrideFunction_CallOriginalFirst = function ( f20_arg0, f20_arg1, f20_arg2 )
	table.insert( LUI.OverrideFunction_GetFunctionTable( f20_arg0, f20_arg1 ), f20_arg2 ) --[[ @ 0]]
end
 --[[ @ 0]]
LUI.OverrideFunction_CallOriginalSecond = function ( f21_arg0, f21_arg1, f21_arg2 )
	table.insert( LUI.OverrideFunction_GetFunctionTable( f21_arg0, f21_arg1 ), 1, f21_arg2 ) --[[ @ 0]]
end
 --[[ @ 0]]
LUI.OverrideFunction_Remove = function ( f22_arg0, f22_arg1, f22_arg2 )
	local f22_local0 = LUI.OverrideFunction_GetFunctionTable( f22_arg0, f22_arg1 ) --[[ @ 0]]
	table.remove( f22_local0, LuaUtils.FindItemInArray( f22_local0, f22_arg2 ) ) --[[ @ 0]]
end
 --[[ @ 0]]
require( "x64:77d42cfae6e90891" ) --[[ @ 0]]
require( "x64:54c3a3ee87cd66f3" ) --[[ @ 0]]
require( "ui/lui/luitimer" ) --[[ @ 0]]
require( "x64:31a55ff918c73cd4" ) --[[ @ 0]]
require( "x64:10b7dd1806fb18b7" ) --[[ @ 0]]
require( "x64:22cf17e1911faf98" ) --[[ @ 0]]
require( "ui/lui/luiverticallist" ) --[[ @ 0]]
require( "x64:3c3156467692bf47" ) --[[ @ 0]]
require( "x64:78e9b767aaa6fd74" ) --[[ @ 0]]
require( "ui/lui/luigridlayout" ) --[[ @ 0]]
require( "x64:61845c3416695820" ) --[[ @ 0]]
require( "x64:3280ec61da7bd5a7" ) --[[ @ 0]]
if not debug then
	debug = {} --[[ @ 0]]
end
debug.postdeploymentfunction = function ()
	for f23_local3, f23_local4 in pairs( LUI.roots ) --[[ @ 0]] do
		f23_local4.debugReload = true --[[ @ 0]]
	end
end
 --[[ @ 0]]
LargestElements = {} --[[ @ 0]]
LargestElementsSize = {} --[[ @ 0]]
LargestElementsCount = {} --[[ @ 0]]
function CountFieldsHelper( f24_arg0, f24_arg1 )
	if f24_arg1[f24_arg0] then
		return 
	end
	f24_arg1[f24_arg0] = true --[[ @ 0]]
	local f24_local0 = 0 --[[ @ 0]]
	for f24_local4, f24_local5 in pairs( f24_arg0 ) --[[ @ 0]] do
		if type( f24_local4 ) == "table" then
			f24_local0 = f24_local0 + CountFieldsHelper( f24_local4, f24_arg1 ) --[[ @ 0]]
		end
		f24_local0 = f24_local0 + 1 --[[ @ 0]]
	end
	return f24_local0
end

function CountFields( f25_arg0 )
	return CountFieldsHelper( f25_arg0, {} )
end

function CountReferencesHelper( f26_arg0, f26_arg1 )
	if f26_arg1[f26_arg0] then
		return 
	end
	f26_arg1[f26_arg0] = true --[[ @ 0]]
	if type( f26_arg0 ) == "userdata" then
		local f26_local0 = getmetatable( f26_arg0 ) --[[ @ 0]]
		if not f26_local0 then
			return 
		end
		f26_arg0 = f26_local0.__index --[[ @ 0]]
		if not f26_arg0 then
			return 
		elseif type( f26_arg0 ) == "table" and f26_arg0.id then
			local f26_local1 = CountFields( f26_arg0 ) --[[ @ 0]]
			if not LargestElementsSize[f26_arg0.id] or LargestElementsSize[f26_arg0.id] < f26_local1 then
				LargestElements[f26_arg0.id] = f26_arg0 --[[ @ 0]]
				LargestElementsSize[f26_arg0.id] = f26_local1 --[[ @ 0]]
			end
			if not LargestElementsCount[f26_arg0.id] then
				LargestElementsCount[f26_arg0.id] = 0 --[[ @ 0]]
			end
			LargestElementsCount[f26_arg0.id] = LargestElementsCount[f26_arg0.id] + 1 --[[ @ 0]]
		end
	end
	if type( f26_arg0 ) ~= "table" then
		return 
	end
	for f26_local3, f26_local4 in pairs( f26_arg0 ) --[[ @ 0]] do
		CountReferencesHelper( f26_local4, f26_arg1 ) --[[ @ 0]]
	end
end

function CountReferences( f27_arg0 )
	local f27_local0 = {
		[f27_arg0] = true
	} --[[ @ 0]]
	if type( f27_arg0 ) == "userdata" then
		local f27_local1 = getmetatable( f27_arg0 ) --[[ @ 0]]
		if not f27_local1 then
			return 0
		end
		f27_arg0 = f27_local1.__index --[[ @ 0]]
		if not f27_arg0 then
			return 0
		end
	end
	if type( f27_arg0 ) ~= "table" then
		return 0
	end
	for f27_local4, f27_local5 in pairs( f27_arg0 ) --[[ @ 0]] do
		CountReferencesHelper( f27_local5, f27_local0 ) --[[ @ 0]]
	end
	f27_local1 = 0 --[[ @ 0]]
	for f27_local5, f27_local6 in pairs( f27_local0 ) --[[ @ 0]] do
		f27_local1 = f27_local1 + 1 --[[ @ 0]]
	end
	return f27_local1
end

function DisableGlobals()
	local f28_local0 = getmetatable( _G ) --[[ @ 0]]
	if not f28_local0 then
		f28_local0 = {} --[[ @ 0]]
		setmetatable( _G, f28_local0 ) --[[ @ 0]]
	end
	f28_local0.__newindex = function ( f29_arg0, f29_arg1, f29_arg2 )
		error( "LUI Error: Tried to create global variable " .. f29_arg1, 2 ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	if Engine[@"isdevelopmentbuild"]() then
		f28_local0.__index = function ( f30_arg0, f30_arg1 )
			if f30_arg1 == "PreLoadFunc" or f30_arg1 == "PostLoadFunc" or f30_arg1 == "LobbyVM" then
				return nil
			end
			local f30_local0 = "" --[[ @ 0]]
			if debug and debug.traceback then
				f30_local0 = debug.traceback() --[[ @ 0]]
			end
			if string.find( f30_local0, "debuggerIndexMeta" ) == nil then
				if nil ~= Dvar[@"ui_errorundeflocals"] and Dvar[@"ui_errorundeflocals"]:get() then
					error( "LUI Error: Tried to use undefined variable " .. f30_arg1, 2 ) --[[ @ 0]]
				else
					DebugPrint( "WARNING: Tried to use undefined variable " .. f30_arg1 .. "\n" .. f30_local0 ) --[[ @ 0]]
				end
			end
		end
		 --[[ @ 0]]
	end
end

function EnableGlobals()
	local f31_local0 = getmetatable( _G ) --[[ @ 0]]
	if not f31_local0 then
		f31_local0 = {} --[[ @ 0]]
		setmetatable( _G, f31_local0 ) --[[ @ 0]]
	end
	f31_local0.__newindex = nil --[[ @ 0]]
	if Engine[@"isdevelopmentbuild"]() then
		f31_local0.__index = nil --[[ @ 0]]
	end
end

