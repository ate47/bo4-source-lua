-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:50
CoD.ArenaRubyProgressRedBar = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.ArenaRubyProgressRedBar.__defaultWidth = 480 --[[ @ 0]]
CoD.ArenaRubyProgressRedBar.__defaultHeight = 50 --[[ @ 0]]
CoD.ArenaRubyProgressRedBar.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.ArenaRubyProgressRedBar ) --[[ @ 0]]
	self.id = "ArenaRubyProgressRedBar" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local NoiseTiledBacking = LUI.UIImage.new( 0, 1, 90, -90, 0, 1, 21, -21 ) --[[ @ 0]]
	NoiseTiledBacking:setAlpha( 0.5 ) --[[ @ 0]]
	NoiseTiledBacking:setImage( RegisterImage( @"uie_ui_menu_specialist_hub_repeat_bg" ) ) --[[ @ 0]]
	NoiseTiledBacking:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_16CBE95C250C6D15" ) ) --[[ @ 0]]
	NoiseTiledBacking:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	NoiseTiledBacking:setupNineSliceShader( 196, 88 ) --[[ @ 0]]
	self:addElement( NoiseTiledBacking ) --[[ @ 0]]
	self.NoiseTiledBacking = NoiseTiledBacking --[[ @ 0]]
	
	local BG = LUI.UIImage.new( 0, 1, 90, -90, 0, 1, 21, -21 ) --[[ @ 0]]
	BG:setRGB( 0, 0, 0 ) --[[ @ 0]]
	BG:setAlpha( 0.2 ) --[[ @ 0]]
	self:addElement( BG ) --[[ @ 0]]
	self.BG = BG --[[ @ 0]]
	
	local RedBar01 = LUI.UIImage.new( 0, 1, 90, -90, 0, 1, 21, -21 ) --[[ @ 0]]
	RedBar01:setRGB( 0.44, 0.03, 0.03 ) --[[ @ 0]]
	self:addElement( RedBar01 ) --[[ @ 0]]
	self.RedBar01 = RedBar01 --[[ @ 0]]
	
	local FocusGlow01 = LUI.UIImage.new( 0, 1, 20, -20, 0, 1, 0, 0 ) --[[ @ 0]]
	FocusGlow01:setRGB( 1, 0.35, 0.34 ) --[[ @ 0]]
	FocusGlow01:setAlpha( 0.2 ) --[[ @ 0]]
	FocusGlow01:setImage( RegisterImage( @"uie_ui_menu_common_tab_glow" ) ) --[[ @ 0]]
	FocusGlow01:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_6DAB59B2CAE01851" ) ) --[[ @ 0]]
	FocusGlow01:setShaderVector( 0, 0, 0, 0.21, 0.09 ) --[[ @ 0]]
	FocusGlow01:setShaderVector( 1, 1.36, 0, 0, 0 ) --[[ @ 0]]
	FocusGlow01:setupNineSliceShader( 245, 185 ) --[[ @ 0]]
	self:addElement( FocusGlow01 ) --[[ @ 0]]
	self.FocusGlow01 = FocusGlow01 --[[ @ 0]]
	
	local Dot01 = LUI.UIImage.new( 0, 1, 90, -90, 0, 1, 21, -21 ) --[[ @ 0]]
	Dot01:setImage( RegisterImage( @"uie_ui_menu_store_repeat_dot_pattern" ) ) --[[ @ 0]]
	Dot01:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_67C9C02F608D0A75" ) ) --[[ @ 0]]
	Dot01:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	Dot01:setupNineSliceShader( 24, 24 ) --[[ @ 0]]
	self:addElement( Dot01 ) --[[ @ 0]]
	self.Dot01 = Dot01 --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.ArenaRubyProgressRedBar.__resetProperties = function ( f2_arg0 )
	f2_arg0.FocusGlow01:completeAnimation() --[[ @ 0]]
	f2_arg0.FocusGlow01:setLeftRight( 0, 1, 20, -20 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ArenaRubyProgressRedBar.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f3_arg0, f3_arg1 )
			f3_arg0:__resetProperties() --[[ @ 0]]
			f3_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f3_local0 = function ( f4_arg0 )
				local f4_local0 = function ( f5_arg0 )
					local f5_local0 = function ( f6_arg0 )
						local f6_local0 = function ( f7_arg0 )
							f7_arg0:beginAnimation( 199 ) --[[ @ 0]]
							f7_arg0:registerEventHandler( "transition_complete_keyframe", f3_arg0.clipFinished ) --[[ @ 0]]
						end
						 --[[ @ 0]]
						f6_arg0:beginAnimation( 2800 ) --[[ @ 0]]
						f6_arg0:setLeftRight( 0, 1, 20, -20 ) --[[ @ 0]]
						f6_arg0:registerEventHandler( "transition_complete_keyframe", f6_local0 ) --[[ @ 0]]
					end
					 --[[ @ 0]]
					f5_arg0:beginAnimation( 200 ) --[[ @ 0]]
					f5_arg0:registerEventHandler( "transition_complete_keyframe", f5_local0 ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f3_arg0.FocusGlow01:beginAnimation( 2800 ) --[[ @ 0]]
				f3_arg0.FocusGlow01:setLeftRight( 0, 1, -20, 20 ) --[[ @ 0]]
				f3_arg0.FocusGlow01:registerEventHandler( "interrupted_keyframe", f3_arg0.clipInterrupted ) --[[ @ 0]]
				f3_arg0.FocusGlow01:registerEventHandler( "transition_complete_keyframe", f4_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f3_arg0.FocusGlow01:completeAnimation() --[[ @ 0]]
			f3_arg0.FocusGlow01:setLeftRight( 0, 1, 20, -20 ) --[[ @ 0]]
			f3_local0( f3_arg0.FocusGlow01 ) --[[ @ 0]]
			f3_arg0.nextClip = "DefaultClip" --[[ @ 0]]
		end
	}
} --[[ @ 0]]
