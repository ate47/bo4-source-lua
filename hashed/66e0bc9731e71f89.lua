-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
require( "ui/uieditor/widgets/startmenu/options/startmenuoptionsmainframe" ) --[[ @ 0]]
require( "x64:7494359e7c2de09a" ) --[[ @ 0]]

CoD.ZMInvWonderWeaponComponent = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.ZMInvWonderWeaponComponent.__defaultWidth = 80 --[[ @ 0]]
CoD.ZMInvWonderWeaponComponent.__defaultHeight = 80 --[[ @ 0]]
CoD.ZMInvWonderWeaponComponent.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.ZMInvWonderWeaponComponent ) --[[ @ 0]]
	self.id = "ZMInvWonderWeaponComponent" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local Backing = LUI.UIImage.new( 0.05, 0.05, 7.5, 107.5, 0, 0, 14, 114 ) --[[ @ 0]]
	Backing:setAlpha( 0 ) --[[ @ 0]]
	Backing:setImage( RegisterImage( @"hash_5198E62429893867" ) ) --[[ @ 0]]
	self:addElement( Backing ) --[[ @ 0]]
	self.Backing = Backing --[[ @ 0]]
	
	local Stage7Image = CoD.ZMInvStageImage.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	Stage7Image:setAlpha( 0 ) --[[ @ 0]]
	Stage7Image:linkToElementModel( self, "image7", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			Stage7Image.Stage1Image:setImage( RegisterImage( f2_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	Stage7Image:linkToElementModel( self, "numNeeded7", true, function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			Stage7Image.Stage1Image:setShaderVector( 0, SetVectorComponent( 1, 1, SwapVectorComponents( 1, 2, CoD.GetVectorComponentFromString( f3_local0, 1 ), CoD.GetVectorComponentFromString( f3_local0, 2 ), CoD.GetVectorComponentFromString( f3_local0, 3 ), CoD.GetVectorComponentFromString( f3_local0, 4 ) ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	Stage7Image:linkToElementModel( self, "numAcquired", true, function ( model )
		local f4_local0 = model:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			Stage7Image.Stage1Image:setShaderVector( 1, CoD.ZMInventoryUtility.NumStageItemsAcquiredToWipe( self:getModel(), CoD.GetVectorComponentFromString( f4_local0, 1 ), CoD.GetVectorComponentFromString( f4_local0, 2 ), CoD.GetVectorComponentFromString( f4_local0, 3 ), CoD.GetVectorComponentFromString( f4_local0, 4 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Stage7Image ) --[[ @ 0]]
	self.Stage7Image = Stage7Image --[[ @ 0]]
	
	local Stage6Image = CoD.ZMInvStageImage.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	Stage6Image:setAlpha( 0 ) --[[ @ 0]]
	Stage6Image:linkToElementModel( self, "image6", true, function ( model )
		local f5_local0 = model:get() --[[ @ 0]]
		if f5_local0 ~= nil then
			Stage6Image.Stage1Image:setImage( RegisterImage( f5_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	Stage6Image:linkToElementModel( self, "numNeeded6", true, function ( model )
		local f6_local0 = model:get() --[[ @ 0]]
		if f6_local0 ~= nil then
			Stage6Image.Stage1Image:setShaderVector( 0, SetVectorComponent( 1, 1, SwapVectorComponents( 1, 2, CoD.GetVectorComponentFromString( f6_local0, 1 ), CoD.GetVectorComponentFromString( f6_local0, 2 ), CoD.GetVectorComponentFromString( f6_local0, 3 ), CoD.GetVectorComponentFromString( f6_local0, 4 ) ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	Stage6Image:linkToElementModel( self, "numAcquired", true, function ( model )
		local f7_local0 = model:get() --[[ @ 0]]
		if f7_local0 ~= nil then
			Stage6Image.Stage1Image:setShaderVector( 1, CoD.ZMInventoryUtility.NumStageItemsAcquiredToWipe( self:getModel(), CoD.GetVectorComponentFromString( f7_local0, 1 ), CoD.GetVectorComponentFromString( f7_local0, 2 ), CoD.GetVectorComponentFromString( f7_local0, 3 ), CoD.GetVectorComponentFromString( f7_local0, 4 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Stage6Image ) --[[ @ 0]]
	self.Stage6Image = Stage6Image --[[ @ 0]]
	
	local Stage5Image = CoD.ZMInvStageImage.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	Stage5Image:setAlpha( 0 ) --[[ @ 0]]
	Stage5Image:linkToElementModel( self, "image5", true, function ( model )
		local f8_local0 = model:get() --[[ @ 0]]
		if f8_local0 ~= nil then
			Stage5Image.Stage1Image:setImage( RegisterImage( f8_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	Stage5Image:linkToElementModel( self, "numNeeded5", true, function ( model )
		local f9_local0 = model:get() --[[ @ 0]]
		if f9_local0 ~= nil then
			Stage5Image.Stage1Image:setShaderVector( 0, SetVectorComponent( 1, 1, SwapVectorComponents( 1, 2, CoD.GetVectorComponentFromString( f9_local0, 1 ), CoD.GetVectorComponentFromString( f9_local0, 2 ), CoD.GetVectorComponentFromString( f9_local0, 3 ), CoD.GetVectorComponentFromString( f9_local0, 4 ) ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	Stage5Image:linkToElementModel( self, "numAcquired", true, function ( model )
		local f10_local0 = model:get() --[[ @ 0]]
		if f10_local0 ~= nil then
			Stage5Image.Stage1Image:setShaderVector( 1, CoD.ZMInventoryUtility.NumStageItemsAcquiredToWipe( self:getModel(), CoD.GetVectorComponentFromString( f10_local0, 1 ), CoD.GetVectorComponentFromString( f10_local0, 2 ), CoD.GetVectorComponentFromString( f10_local0, 3 ), CoD.GetVectorComponentFromString( f10_local0, 4 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Stage5Image ) --[[ @ 0]]
	self.Stage5Image = Stage5Image --[[ @ 0]]
	
	local Stage4Image = CoD.ZMInvStageImage.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	Stage4Image:setAlpha( 0 ) --[[ @ 0]]
	Stage4Image:linkToElementModel( self, "image4", true, function ( model )
		local f11_local0 = model:get() --[[ @ 0]]
		if f11_local0 ~= nil then
			Stage4Image.Stage1Image:setImage( RegisterImage( f11_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	Stage4Image:linkToElementModel( self, "numNeeded4", true, function ( model )
		local f12_local0 = model:get() --[[ @ 0]]
		if f12_local0 ~= nil then
			Stage4Image.Stage1Image:setShaderVector( 0, SetVectorComponent( 1, 1, SwapVectorComponents( 1, 2, CoD.GetVectorComponentFromString( f12_local0, 1 ), CoD.GetVectorComponentFromString( f12_local0, 2 ), CoD.GetVectorComponentFromString( f12_local0, 3 ), CoD.GetVectorComponentFromString( f12_local0, 4 ) ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	Stage4Image:linkToElementModel( self, "numAcquired", true, function ( model )
		local f13_local0 = model:get() --[[ @ 0]]
		if f13_local0 ~= nil then
			Stage4Image.Stage1Image:setShaderVector( 1, CoD.ZMInventoryUtility.NumStageItemsAcquiredToWipe( self:getModel(), CoD.GetVectorComponentFromString( f13_local0, 1 ), CoD.GetVectorComponentFromString( f13_local0, 2 ), CoD.GetVectorComponentFromString( f13_local0, 3 ), CoD.GetVectorComponentFromString( f13_local0, 4 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Stage4Image ) --[[ @ 0]]
	self.Stage4Image = Stage4Image --[[ @ 0]]
	
	local Stage3Image = CoD.ZMInvStageImage.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	Stage3Image:setAlpha( 0 ) --[[ @ 0]]
	Stage3Image:linkToElementModel( self, "image3", true, function ( model )
		local f14_local0 = model:get() --[[ @ 0]]
		if f14_local0 ~= nil then
			Stage3Image.Stage1Image:setImage( RegisterImage( f14_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	Stage3Image:linkToElementModel( self, "numNeeded3", true, function ( model )
		local f15_local0 = model:get() --[[ @ 0]]
		if f15_local0 ~= nil then
			Stage3Image.Stage1Image:setShaderVector( 0, SetVectorComponent( 1, 1, SwapVectorComponents( 1, 2, CoD.GetVectorComponentFromString( f15_local0, 1 ), CoD.GetVectorComponentFromString( f15_local0, 2 ), CoD.GetVectorComponentFromString( f15_local0, 3 ), CoD.GetVectorComponentFromString( f15_local0, 4 ) ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	Stage3Image:linkToElementModel( self, "numAcquired", true, function ( model )
		local f16_local0 = model:get() --[[ @ 0]]
		if f16_local0 ~= nil then
			Stage3Image.Stage1Image:setShaderVector( 1, CoD.ZMInventoryUtility.NumStageItemsAcquiredToWipe( self:getModel(), CoD.GetVectorComponentFromString( f16_local0, 1 ), CoD.GetVectorComponentFromString( f16_local0, 2 ), CoD.GetVectorComponentFromString( f16_local0, 3 ), CoD.GetVectorComponentFromString( f16_local0, 4 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Stage3Image ) --[[ @ 0]]
	self.Stage3Image = Stage3Image --[[ @ 0]]
	
	local Stage2Image = CoD.ZMInvStageImage.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	Stage2Image:setAlpha( 0 ) --[[ @ 0]]
	Stage2Image:linkToElementModel( self, "image2", true, function ( model )
		local f17_local0 = model:get() --[[ @ 0]]
		if f17_local0 ~= nil then
			Stage2Image.Stage1Image:setImage( RegisterImage( f17_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	Stage2Image:linkToElementModel( self, "numNeeded2", true, function ( model )
		local f18_local0 = model:get() --[[ @ 0]]
		if f18_local0 ~= nil then
			Stage2Image.Stage1Image:setShaderVector( 0, SetVectorComponent( 1, 1, SwapVectorComponents( 1, 2, CoD.GetVectorComponentFromString( f18_local0, 1 ), CoD.GetVectorComponentFromString( f18_local0, 2 ), CoD.GetVectorComponentFromString( f18_local0, 3 ), CoD.GetVectorComponentFromString( f18_local0, 4 ) ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	Stage2Image:linkToElementModel( self, "numAcquired", true, function ( model )
		local f19_local0 = model:get() --[[ @ 0]]
		if f19_local0 ~= nil then
			Stage2Image.Stage1Image:setShaderVector( 1, CoD.ZMInventoryUtility.NumStageItemsAcquiredToWipe( self:getModel(), CoD.GetVectorComponentFromString( f19_local0, 1 ), CoD.GetVectorComponentFromString( f19_local0, 2 ), CoD.GetVectorComponentFromString( f19_local0, 3 ), CoD.GetVectorComponentFromString( f19_local0, 4 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Stage2Image ) --[[ @ 0]]
	self.Stage2Image = Stage2Image --[[ @ 0]]
	
	local Stage1Image = CoD.ZMInvStageImage.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	Stage1Image:setAlpha( 0 ) --[[ @ 0]]
	Stage1Image:linkToElementModel( self, "image1", true, function ( model )
		local f20_local0 = model:get() --[[ @ 0]]
		if f20_local0 ~= nil then
			Stage1Image.Stage1Image:setImage( RegisterImage( f20_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	Stage1Image:linkToElementModel( self, "numNeeded1", true, function ( model )
		local f21_local0 = model:get() --[[ @ 0]]
		if f21_local0 ~= nil then
			Stage1Image.Stage1Image:setShaderVector( 0, SetVectorComponent( 1, 1, SwapVectorComponents( 1, 2, CoD.GetVectorComponentFromString( f21_local0, 1 ), CoD.GetVectorComponentFromString( f21_local0, 2 ), CoD.GetVectorComponentFromString( f21_local0, 3 ), CoD.GetVectorComponentFromString( f21_local0, 4 ) ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	Stage1Image:linkToElementModel( self, "numAcquired", true, function ( model )
		local f22_local0 = model:get() --[[ @ 0]]
		if f22_local0 ~= nil then
			Stage1Image.Stage1Image:setShaderVector( 1, CoD.ZMInventoryUtility.NumStageItemsAcquiredToWipe( self:getModel(), CoD.GetVectorComponentFromString( f22_local0, 1 ), CoD.GetVectorComponentFromString( f22_local0, 2 ), CoD.GetVectorComponentFromString( f22_local0, 3 ), CoD.GetVectorComponentFromString( f22_local0, 4 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Stage1Image ) --[[ @ 0]]
	self.Stage1Image = Stage1Image --[[ @ 0]]
	
	local MainFrame = CoD.StartMenuOptionsMainFrame.new( f1_arg0, f1_arg1, 0.5, 0.5, -30, 30, 0.5, 0.5, -30, 30 ) --[[ @ 0]]
	MainFrame:setAlpha( 0.1 ) --[[ @ 0]]
	self:addElement( MainFrame ) --[[ @ 0]]
	self.MainFrame = MainFrame --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Stage1",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualTo( self, f1_arg1, "stage", 1 )
			end
		},
		{
			stateName = "Stage2",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualTo( self, f1_arg1, "stage", 2 )
			end
		},
		{
			stateName = "Stage3",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualTo( self, f1_arg1, "stage", 3 )
			end
		},
		{
			stateName = "Stage4",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualTo( self, f1_arg1, "stage", 4 )
			end
		},
		{
			stateName = "Stage5",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualTo( self, f1_arg1, "stage", 5 )
			end
		},
		{
			stateName = "Stage6",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualTo( self, f1_arg1, "stage", 6 )
			end
		},
		{
			stateName = "Stage7",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualTo( self, f1_arg1, "stage", 7 )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "stage", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "stage"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.ZMInvWonderWeaponComponent.__resetProperties = function ( f31_arg0 )
	f31_arg0.Stage1Image:completeAnimation() --[[ @ 0]]
	f31_arg0.Stage2Image:completeAnimation() --[[ @ 0]]
	f31_arg0.Stage3Image:completeAnimation() --[[ @ 0]]
	f31_arg0.Stage4Image:completeAnimation() --[[ @ 0]]
	f31_arg0.Stage5Image:completeAnimation() --[[ @ 0]]
	f31_arg0.Stage6Image:completeAnimation() --[[ @ 0]]
	f31_arg0.Stage7Image:completeAnimation() --[[ @ 0]]
	f31_arg0.Stage1Image:setAlpha( 0 ) --[[ @ 0]]
	f31_arg0.Stage2Image:setAlpha( 0 ) --[[ @ 0]]
	f31_arg0.Stage3Image:setAlpha( 0 ) --[[ @ 0]]
	f31_arg0.Stage4Image:setAlpha( 0 ) --[[ @ 0]]
	f31_arg0.Stage5Image:setAlpha( 0 ) --[[ @ 0]]
	f31_arg0.Stage6Image:setAlpha( 0 ) --[[ @ 0]]
	f31_arg0.Stage7Image:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ZMInvWonderWeaponComponent.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f32_arg0, f32_arg1 )
			f32_arg0:__resetProperties() --[[ @ 0]]
			f32_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	Stage1 = {
		DefaultClip = function ( f33_arg0, f33_arg1 )
			f33_arg0:__resetProperties() --[[ @ 0]]
			f33_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f33_arg0.Stage1Image:completeAnimation() --[[ @ 0]]
			f33_arg0.Stage1Image:setAlpha( 1 ) --[[ @ 0]]
			f33_arg0.clipFinished( f33_arg0.Stage1Image ) --[[ @ 0]]
		end
	},
	Stage2 = {
		DefaultClip = function ( f34_arg0, f34_arg1 )
			f34_arg0:__resetProperties() --[[ @ 0]]
			f34_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f34_arg0.Stage2Image:completeAnimation() --[[ @ 0]]
			f34_arg0.Stage2Image:setAlpha( 1 ) --[[ @ 0]]
			f34_arg0.clipFinished( f34_arg0.Stage2Image ) --[[ @ 0]]
		end
	},
	Stage3 = {
		DefaultClip = function ( f35_arg0, f35_arg1 )
			f35_arg0:__resetProperties() --[[ @ 0]]
			f35_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f35_arg0.Stage3Image:completeAnimation() --[[ @ 0]]
			f35_arg0.Stage3Image:setAlpha( 1 ) --[[ @ 0]]
			f35_arg0.clipFinished( f35_arg0.Stage3Image ) --[[ @ 0]]
		end
	},
	Stage4 = {
		DefaultClip = function ( f36_arg0, f36_arg1 )
			f36_arg0:__resetProperties() --[[ @ 0]]
			f36_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f36_arg0.Stage4Image:completeAnimation() --[[ @ 0]]
			f36_arg0.Stage4Image:setAlpha( 1 ) --[[ @ 0]]
			f36_arg0.clipFinished( f36_arg0.Stage4Image ) --[[ @ 0]]
		end
	},
	Stage5 = {
		DefaultClip = function ( f37_arg0, f37_arg1 )
			f37_arg0:__resetProperties() --[[ @ 0]]
			f37_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f37_arg0.Stage5Image:completeAnimation() --[[ @ 0]]
			f37_arg0.Stage5Image:setAlpha( 1 ) --[[ @ 0]]
			f37_arg0.clipFinished( f37_arg0.Stage5Image ) --[[ @ 0]]
		end
	},
	Stage6 = {
		DefaultClip = function ( f38_arg0, f38_arg1 )
			f38_arg0:__resetProperties() --[[ @ 0]]
			f38_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f38_arg0.Stage6Image:completeAnimation() --[[ @ 0]]
			f38_arg0.Stage6Image:setAlpha( 1 ) --[[ @ 0]]
			f38_arg0.clipFinished( f38_arg0.Stage6Image ) --[[ @ 0]]
		end
	},
	Stage7 = {
		DefaultClip = function ( f39_arg0, f39_arg1 )
			f39_arg0:__resetProperties() --[[ @ 0]]
			f39_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f39_arg0.Stage7Image:completeAnimation() --[[ @ 0]]
			f39_arg0.Stage7Image:setAlpha( 1 ) --[[ @ 0]]
			f39_arg0.clipFinished( f39_arg0.Stage7Image ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.ZMInvWonderWeaponComponent.__onClose = function ( f40_arg0 )
	f40_arg0.Stage7Image:close() --[[ @ 0]]
	f40_arg0.Stage6Image:close() --[[ @ 0]]
	f40_arg0.Stage5Image:close() --[[ @ 0]]
	f40_arg0.Stage4Image:close() --[[ @ 0]]
	f40_arg0.Stage3Image:close() --[[ @ 0]]
	f40_arg0.Stage2Image:close() --[[ @ 0]]
	f40_arg0.Stage1Image:close() --[[ @ 0]]
	f40_arg0.MainFrame:close() --[[ @ 0]]
end
 --[[ @ 0]]
