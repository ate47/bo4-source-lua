-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:33
CoD.Hud_ZM_Trial_RoundInfoText = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.Hud_ZM_Trial_RoundInfoText.__defaultWidth = 600 --[[ @ 0]]
CoD.Hud_ZM_Trial_RoundInfoText.__defaultHeight = 61 --[[ @ 0]]
CoD.Hud_ZM_Trial_RoundInfoText.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.Hud_ZM_Trial_RoundInfoText ) --[[ @ 0]]
	self.id = "Hud_ZM_Trial_RoundInfoText" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local RoundTitleText = LUI.UIText.new( 0, 0, 0, 600, 0, 0, 0, 33 ) --[[ @ 0]]
	RoundTitleText:setRGB( 0.96, 0.66, 0 ) --[[ @ 0]]
	RoundTitleText:setTTF( "skorzhen" ) --[[ @ 0]]
	RoundTitleText:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_90D57B1E92D39D7" ) ) --[[ @ 0]]
	RoundTitleText:setShaderVector( 0, 0.02, 0, 0, 0 ) --[[ @ 0]]
	RoundTitleText:setShaderVector( 1, 0.04, 0, 0, 0 ) --[[ @ 0]]
	RoundTitleText:setShaderVector( 2, 0, 0, 0, 1 ) --[[ @ 0]]
	RoundTitleText:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	RoundTitleText:subscribeToGlobalModel( f1_arg1, "ZMHudGlobal", "trials.roundTitle", function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			RoundTitleText:setText( LocalizeToUpperString( f2_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( RoundTitleText ) --[[ @ 0]]
	self.RoundTitleText = RoundTitleText --[[ @ 0]]
	
	local Divider = LUI.UIImage.new( 0, 0, 0, 220, 0, 0, 32, 34 ) --[[ @ 0]]
	Divider:setRGB( 0.96, 0.66, 0 ) --[[ @ 0]]
	self:addElement( Divider ) --[[ @ 0]]
	self.Divider = Divider --[[ @ 0]]
	
	local RoundDescriptionText = LUI.UIText.new( 0, 0, 0, 235, 0, 0, 43, 61 ) --[[ @ 0]]
	RoundDescriptionText:setTTF( "dinnext_regular" ) --[[ @ 0]]
	RoundDescriptionText:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	RoundDescriptionText:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	RoundDescriptionText:subscribeToGlobalModel( f1_arg1, "ZMHudGlobal", "trials.roundDescription", function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			RoundDescriptionText:setText( Engine[@"hash_4F9F1239CFD921FE"]( f3_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( RoundDescriptionText ) --[[ @ 0]]
	self.RoundDescriptionText = RoundDescriptionText --[[ @ 0]]
	
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.Hud_ZM_Trial_RoundInfoText.__resetProperties = function ( f4_arg0 )
	f4_arg0.Divider:completeAnimation() --[[ @ 0]]
	f4_arg0.Divider:setTopBottom( 0, 0, 32, 34 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.Hud_ZM_Trial_RoundInfoText.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f5_arg0, f5_arg1 )
			f5_arg0:__resetProperties() --[[ @ 0]]
			f5_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f5_arg0.Divider:completeAnimation() --[[ @ 0]]
			f5_arg0.Divider:setTopBottom( 0, 0, 35, 37 ) --[[ @ 0]]
			f5_arg0.clipFinished( f5_arg0.Divider ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.Hud_ZM_Trial_RoundInfoText.__onClose = function ( f6_arg0 )
	f6_arg0.RoundTitleText:close() --[[ @ 0]]
	f6_arg0.RoundDescriptionText:close() --[[ @ 0]]
end
 --[[ @ 0]]
