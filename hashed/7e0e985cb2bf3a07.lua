-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:51
require( "x64:76c0a92e345d6635" ) --[[ @ 0]]
require( "x64:493a575a7ca17e04" ) --[[ @ 0]]
require( "x64:298de092f5b8db48" ) --[[ @ 0]]
require( "x64:89489cdb5ec7fcc" ) --[[ @ 0]]
require( "x64:59f7790271138ea3" ) --[[ @ 0]]
require( "x64:3db399906c2727be" ) --[[ @ 0]]
require( "ui/uieditor/widgets/onoffimage" ) --[[ @ 0]]

CoD.OverheadName_MP = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.OverheadName_MP.__defaultWidth = 200 --[[ @ 0]]
CoD.OverheadName_MP.__defaultHeight = 75 --[[ @ 0]]
CoD.OverheadName_MP.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	InitDataSourceModel( f1_arg1, "GameplayFeedbackSettings" ) --[[ @ 0]]
	CoD.BaseUtility.InitControllerModelIfNotSet( f1_arg1, "luielement.mp_revive_prompt_1.clientnum", 0 ) --[[ @ 0]]
	CoD.BaseUtility.InitControllerModelIfNotSet( f1_arg1, "luielement.mp_revive_prompt_2.clientnum", 0 ) --[[ @ 0]]
	CoD.BaseUtility.InitControllerModelIfNotSet( f1_arg1, "luielement.mp_revive_prompt_3.clientnum", 0 ) --[[ @ 0]]
	CoD.BaseUtility.InitGlobalModel( "demo.cameraMode", Enum[@"democameramode"][@"demo_camera_mode_none"] ) --[[ @ 0]]
	self:setClass( CoD.OverheadName_MP ) --[[ @ 0]]
	self.id = "OverheadName_MP" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local OverheadNamePlayerNameAndClanTagGlow = CoD.OverheadName_PlayerNameAndClanTagGlow.new( f1_arg0, f1_arg1, 0, 0, 42.5, 177.5, 0, 0, 26.5, 63.5 ) --[[ @ 0]]
	OverheadNamePlayerNameAndClanTagGlow:setAlpha( 0.95 ) --[[ @ 0]]
	OverheadNamePlayerNameAndClanTagGlow:linkToElementModel( self, nil, false, function ( model )
		OverheadNamePlayerNameAndClanTagGlow:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( OverheadNamePlayerNameAndClanTagGlow ) --[[ @ 0]]
	self.OverheadNamePlayerNameAndClanTagGlow = OverheadNamePlayerNameAndClanTagGlow --[[ @ 0]]
	
	local PlayerNameAndClanTag = CoD.OverheadName_PlayerNameAndClanTag.new( f1_arg0, f1_arg1, 0, 0, 42.5, 177.5, 0, 0, 26.5, 105.5 ) --[[ @ 0]]
	PlayerNameAndClanTag.__Color = function ( f3_arg0 )
		local f3_local0 = f3_arg0:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			PlayerNameAndClanTag:setRGB( CoD.HUDUtility.GetOverheadNameColorByTeamId( f1_arg1, f3_local0 ) ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	PlayerNameAndClanTag:linkToElementModel( self, "team", true, PlayerNameAndClanTag.__Color ) --[[ @ 0]]
	PlayerNameAndClanTag.__Color_FullPath = function ()
		local f4_local0 = self:getModel() --[[ @ 0]]
		if f4_local0 then
			f4_local0 = self:getModel() --[[ @ 0]]
			f4_local0 = f4_local0.team --[[ @ 0]]
		end
		if f4_local0 then
			PlayerNameAndClanTag.__Color( f4_local0 ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	PlayerNameAndClanTag:linkToElementModel( self, nil, false, function ( model )
		PlayerNameAndClanTag:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( PlayerNameAndClanTag ) --[[ @ 0]]
	self.PlayerNameAndClanTag = PlayerNameAndClanTag --[[ @ 0]]
	
	local ArmorBar = CoD.ArmorBar.new( f1_arg0, f1_arg1, 0.5, 0.5, -55.5, 80.5, 0.5, 0.5, -30.5, -26.5 ) --[[ @ 0]]
	ArmorBar.__Alpha = function ()
		ArmorBar:setAlpha( CoD.HUDUtility.GetOverheadHealthbarAlpha( self, 1 ) ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	ArmorBar.__Alpha() --[[ @ 0]]
	ArmorBar:linkToElementModel( self, nil, false, function ( model )
		ArmorBar:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( ArmorBar ) --[[ @ 0]]
	self.ArmorBar = ArmorBar --[[ @ 0]]
	
	local HealthBar = CoD.HealthBar.new( f1_arg0, f1_arg1, 0, 0, 43.5, 181.5, 0, 0, 12.5, 29.5 ) --[[ @ 0]]
	HealthBar:mergeStateConditions( {
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return IsWarzone() and not CoD.TeamUtility.IsClientSameTeam( self, f1_arg1 )
			end
		}
	} ) --[[ @ 0]]
	local ArmorOverheadName = HealthBar --[[ @ 0]]
	local tagged = HealthBar.subscribeToModel --[[ @ 0]]
	local HealthBoostNotificationContainer = Engine[@"getglobalmodel"]() --[[ @ 0]]
	tagged( ArmorOverheadName, HealthBoostNotificationContainer["lobbyRoot.lobbyNav"], function ( f9_arg0 )
		f1_arg0:updateElementState( HealthBar, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f9_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	HealthBar:linkToElementModel( HealthBar, "team", true, function ( model )
		f1_arg0:updateElementState( HealthBar, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "team"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	ArmorOverheadName = HealthBar --[[ @ 0]]
	tagged = HealthBar.subscribeToModel --[[ @ 0]]
	HealthBoostNotificationContainer = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	tagged( ArmorOverheadName, HealthBoostNotificationContainer["factions.playerFactionTeamEnum"], function ( f11_arg0 )
		f1_arg0:updateElementState( HealthBar, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f11_arg0:get(),
			modelName = "factions.playerFactionTeamEnum"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	HealthBar:setRGB( 0.92, 0.92, 0.92 ) --[[ @ 0]]
	HealthBar.__Alpha = function ()
		HealthBar:setAlpha( CoD.HUDUtility.GetOverheadHealthbarAlpha( self, 1 ) ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	HealthBar.__Alpha() --[[ @ 0]]
	HealthBar:linkToElementModel( self, nil, false, function ( model )
		HealthBar:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	HealthBar.HealthFill.__Health_Bar_Color = function ( f14_arg0 )
		local f14_local0 = f14_arg0:get() --[[ @ 0]]
		if f14_local0 ~= nil then
			HealthBar.HealthFill:setRGB( CoD.HUDUtility.GetFriendlyOrEnemyHealthBarColorByTeamId( f1_arg1, f14_local0 ) ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	HealthBar:linkToElementModel( self, "team", true, HealthBar.HealthFill.__Health_Bar_Color ) --[[ @ 0]]
	HealthBar.HealthFill.__Health_Bar_Color_FullPath = function ()
		local f15_local0 = self:getModel() --[[ @ 0]]
		if f15_local0 then
			f15_local0 = self:getModel() --[[ @ 0]]
			f15_local0 = f15_local0.team --[[ @ 0]]
		end
		if f15_local0 then
			HealthBar.HealthFill.__Health_Bar_Color( f15_local0 ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	self:addElement( HealthBar ) --[[ @ 0]]
	self.HealthBar = HealthBar --[[ @ 0]]
	
	tagged = CoD.onOffImage.new( f1_arg0, f1_arg1, 0, 0, 72.5, 127.5, 0, 0, -32, 0 ) --[[ @ 0]]
	tagged:mergeStateConditions( {
		{
			stateName = "On",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg1, "taggedForCompass" ) and not CoD.ModelUtility.IsSelfModelValueEqualToSelfTeam( element, f1_arg1, "team" )
			end
		}
	} ) --[[ @ 0]]
	tagged:linkToElementModel( tagged, "taggedForCompass", true, function ( model )
		f1_arg0:updateElementState( tagged, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "taggedForCompass"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	tagged:linkToElementModel( tagged, "team", true, function ( model )
		f1_arg0:updateElementState( tagged, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "team"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	tagged:setRGB( ColorSet.EnemyOrange.r, ColorSet.EnemyOrange.g, ColorSet.EnemyOrange.b ) --[[ @ 0]]
	tagged.image:setImage( RegisterImage( @"t7_mp_hud_inventory_icon_inworld_arrow" ) ) --[[ @ 0]]
	tagged:linkToElementModel( self, nil, false, function ( model )
		tagged:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( tagged ) --[[ @ 0]]
	self.tagged = tagged --[[ @ 0]]
	
	ArmorOverheadName = CoD.ArmorOverheadName.new( f1_arg0, f1_arg1, 0, 0, 185, 215, 0, 0, 1, 31 ) --[[ @ 0]]
	ArmorOverheadName.__Alpha = function ()
		ArmorOverheadName:setAlpha( CoD.HUDUtility.GetOverheadHealthbarAlpha( self, 1 ) ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	ArmorOverheadName.__Alpha() --[[ @ 0]]
	ArmorOverheadName:linkToElementModel( self, nil, false, function ( model )
		ArmorOverheadName:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( ArmorOverheadName ) --[[ @ 0]]
	self.ArmorOverheadName = ArmorOverheadName --[[ @ 0]]
	
	HealthBoostNotificationContainer = CoD.HealthBoostNotificationContainer.new( f1_arg0, f1_arg1, 0, 0, 68, 132, 0, 0, 8, 34 ) --[[ @ 0]]
	self:addElement( HealthBoostNotificationContainer ) --[[ @ 0]]
	self.HealthBoostNotificationContainer = HealthBoostNotificationContainer --[[ @ 0]]
	
	local FlashWhite = LUI.UIImage.new( 0.5, 0.5, -56.5, 81.5, 0.5, 0.5, -18, -15 ) --[[ @ 0]]
	FlashWhite:setRGB( 0.66, 0.28, 0.28 ) --[[ @ 0]]
	FlashWhite:setAlpha( 0 ) --[[ @ 0]]
	FlashWhite:setImage( RegisterImage( @"hash_68FEB6143419D031" ) ) --[[ @ 0]]
	FlashWhite:setMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	self:addElement( FlashWhite ) --[[ @ 0]]
	self.FlashWhite = FlashWhite --[[ @ 0]]
	
	local FlashRed = LUI.UIImage.new( 0.5, 0.5, -56.5, 81.5, 0.5, 0.5, -20, -13 ) --[[ @ 0]]
	FlashRed:setRGB( ColorSet.T8__RED.r, ColorSet.T8__RED.g, ColorSet.T8__RED.b ) --[[ @ 0]]
	FlashRed:setAlpha( 0 ) --[[ @ 0]]
	FlashRed:setImage( RegisterImage( @"hash_68FEB6143419D031" ) ) --[[ @ 0]]
	FlashRed:setMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	self:addElement( FlashRed ) --[[ @ 0]]
	self.FlashRed = FlashRed --[[ @ 0]]
	
	local Flash = LUI.UIImage.new( 0.5, 0.5, -56.5, 81.5, 0.5, 0.5, -21.5, -11.5 ) --[[ @ 0]]
	Flash:setRGB( ColorSet.EnemyOrange_Bright.r, ColorSet.EnemyOrange_Bright.g, ColorSet.EnemyOrange_Bright.b ) --[[ @ 0]]
	Flash:setAlpha( 0 ) --[[ @ 0]]
	Flash:setMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	self:addElement( Flash ) --[[ @ 0]]
	self.Flash = Flash --[[ @ 0]]
	
	local GlowBloom = LUI.UIImage.new( 0.5, 0.5, -25, 55, 0.5, 0.5, -56.5, 23.5 ) --[[ @ 0]]
	GlowBloom:setRGB( 0.66, 0.33, 0.33 ) --[[ @ 0]]
	GlowBloom:setAlpha( 0 ) --[[ @ 0]]
	GlowBloom:setScale( 0, 0 ) --[[ @ 0]]
	GlowBloom:setImage( RegisterImage( @"hash_4AEE67767498FE4" ) ) --[[ @ 0]]
	GlowBloom:setMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	self:addElement( GlowBloom ) --[[ @ 0]]
	self.GlowBloom = GlowBloom --[[ @ 0]]
	
	local RankIcon = LUI.UIImage.new( 0, 0, -8.5, 43.5, 0, 0, -1.5, 50.5 ) --[[ @ 0]]
	RankIcon:linkToElementModel( self, "rankIcon", true, function ( model )
		local f22_local0 = model:get() --[[ @ 0]]
		if f22_local0 ~= nil then
			RankIcon:setImage( RegisterImage( f22_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( RankIcon ) --[[ @ 0]]
	self.RankIcon = RankIcon --[[ @ 0]]
	
	local ArenaRankIcon = LUI.UIImage.new( 0, 0, -8.5, 43.5, 0, 0, -1.5, 50.5 ) --[[ @ 0]]
	ArenaRankIcon:setAlpha( 0 ) --[[ @ 0]]
	ArenaRankIcon.__Image = function ( f23_arg0 )
		local f23_local0 = f23_arg0:get() --[[ @ 0]]
		if f23_local0 ~= nil then
			ArenaRankIcon:setImage( RegisterImage( CoD.ArenaLeaguePlayUtility.GetLeagueLadderPlayerSmallRankIconFromXuid( f23_local0 ) ) ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	ArenaRankIcon:linkToElementModel( self, "xuid", true, ArenaRankIcon.__Image ) --[[ @ 0]]
	ArenaRankIcon.__Image_FullPath = function ()
		local f24_local0 = self:getModel() --[[ @ 0]]
		if f24_local0 then
			f24_local0 = self:getModel() --[[ @ 0]]
			f24_local0 = f24_local0.xuid --[[ @ 0]]
		end
		if f24_local0 then
			ArenaRankIcon.__Image( f24_local0 ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	self:addElement( ArenaRankIcon ) --[[ @ 0]]
	self.ArenaRankIcon = ArenaRankIcon --[[ @ 0]]
	
	local f1_local14 = PlayerNameAndClanTag --[[ @ 0]]
	local f1_local15 = PlayerNameAndClanTag.subscribeToModel --[[ @ 0]]
	local f1_local16 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local15( f1_local14, f1_local16["factions.actualTeam"], PlayerNameAndClanTag.__Color_FullPath ) --[[ @ 0]]
	f1_local14 = PlayerNameAndClanTag --[[ @ 0]]
	f1_local15 = PlayerNameAndClanTag.subscribeToModel --[[ @ 0]]
	f1_local16 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local15( f1_local14, f1_local16["profile.colorblindMode"], PlayerNameAndClanTag.__Color_FullPath ) --[[ @ 0]]
	ArmorBar:linkToElementModel( self, "team", true, ArmorBar.__Alpha ) --[[ @ 0]]
	f1_local14 = ArmorBar --[[ @ 0]]
	f1_local15 = ArmorBar.subscribeToModel --[[ @ 0]]
	f1_local16 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local15( f1_local14, f1_local16["factions.playerFactionTeamEnum"], ArmorBar.__Alpha ) --[[ @ 0]]
	f1_local14 = ArmorBar --[[ @ 0]]
	f1_local15 = ArmorBar.subscribeToModel --[[ @ 0]]
	f1_local16 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local15( f1_local14, f1_local16["GameplayFeedbackSettings.healthBarEnemyAlpha"], ArmorBar.__Alpha ) --[[ @ 0]]
	f1_local14 = ArmorBar --[[ @ 0]]
	f1_local15 = ArmorBar.subscribeToModel --[[ @ 0]]
	f1_local16 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local15( f1_local14, f1_local16["GameplayFeedbackSettings.healthBarAllyAlpha"], ArmorBar.__Alpha ) --[[ @ 0]]
	f1_local14 = ArmorBar --[[ @ 0]]
	f1_local15 = ArmorBar.subscribeToModel --[[ @ 0]]
	f1_local16 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local15( f1_local14, f1_local16["demo.cameraMode"], ArmorBar.__Alpha ) --[[ @ 0]]
	HealthBar:linkToElementModel( self, "team", true, HealthBar.__Alpha ) --[[ @ 0]]
	f1_local14 = HealthBar --[[ @ 0]]
	f1_local15 = HealthBar.subscribeToModel --[[ @ 0]]
	f1_local16 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local15( f1_local14, f1_local16["factions.playerFactionTeamEnum"], HealthBar.__Alpha ) --[[ @ 0]]
	f1_local14 = HealthBar --[[ @ 0]]
	f1_local15 = HealthBar.subscribeToModel --[[ @ 0]]
	f1_local16 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local15( f1_local14, f1_local16["GameplayFeedbackSettings.healthBarEnemyAlpha"], HealthBar.__Alpha ) --[[ @ 0]]
	f1_local14 = HealthBar --[[ @ 0]]
	f1_local15 = HealthBar.subscribeToModel --[[ @ 0]]
	f1_local16 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local15( f1_local14, f1_local16["GameplayFeedbackSettings.healthBarAllyAlpha"], HealthBar.__Alpha ) --[[ @ 0]]
	f1_local14 = HealthBar --[[ @ 0]]
	f1_local15 = HealthBar.subscribeToModel --[[ @ 0]]
	f1_local16 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local15( f1_local14, f1_local16["demo.cameraMode"], HealthBar.__Alpha ) --[[ @ 0]]
	f1_local14 = HealthBar --[[ @ 0]]
	f1_local15 = HealthBar.subscribeToModel --[[ @ 0]]
	f1_local16 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local15( f1_local14, f1_local16["factions.playerFactionTeamEnum"], HealthBar.HealthFill.__Health_Bar_Color_FullPath ) --[[ @ 0]]
	f1_local14 = HealthBar --[[ @ 0]]
	f1_local15 = HealthBar.subscribeToModel --[[ @ 0]]
	f1_local16 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local15( f1_local14, f1_local16["profile.colorblindMode"], HealthBar.HealthFill.__Health_Bar_Color_FullPath ) --[[ @ 0]]
	ArmorOverheadName:linkToElementModel( self, "team", true, ArmorOverheadName.__Alpha ) --[[ @ 0]]
	f1_local14 = ArmorOverheadName --[[ @ 0]]
	f1_local15 = ArmorOverheadName.subscribeToModel --[[ @ 0]]
	f1_local16 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local15( f1_local14, f1_local16["factions.playerFactionTeamEnum"], ArmorOverheadName.__Alpha ) --[[ @ 0]]
	f1_local14 = ArmorOverheadName --[[ @ 0]]
	f1_local15 = ArmorOverheadName.subscribeToModel --[[ @ 0]]
	f1_local16 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local15( f1_local14, f1_local16["GameplayFeedbackSettings.healthBarEnemyAlpha"], ArmorOverheadName.__Alpha ) --[[ @ 0]]
	f1_local14 = ArmorOverheadName --[[ @ 0]]
	f1_local15 = ArmorOverheadName.subscribeToModel --[[ @ 0]]
	f1_local16 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local15( f1_local14, f1_local16["GameplayFeedbackSettings.healthBarAllyAlpha"], ArmorOverheadName.__Alpha ) --[[ @ 0]]
	f1_local14 = ArmorOverheadName --[[ @ 0]]
	f1_local15 = ArmorOverheadName.subscribeToModel --[[ @ 0]]
	f1_local16 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local15( f1_local14, f1_local16["demo.cameraMode"], ArmorOverheadName.__Alpha ) --[[ @ 0]]
	f1_local14 = ArenaRankIcon --[[ @ 0]]
	f1_local15 = ArenaRankIcon.subscribeToModel --[[ @ 0]]
	f1_local16 = DataSources.LobbyRoot.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local15( f1_local14, f1_local16.lobbyNav, ArenaRankIcon.__Image_FullPath ) --[[ @ 0]]
	f1_local14 = ArenaRankIcon --[[ @ 0]]
	f1_local15 = ArenaRankIcon.subscribeToModel --[[ @ 0]]
	f1_local16 = DataSources.LobbyRoot.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local15( f1_local14, f1_local16["privateClient.update"], ArenaRankIcon.__Image_FullPath ) --[[ @ 0]]
	f1_local14 = ArenaRankIcon --[[ @ 0]]
	f1_local15 = ArenaRankIcon.subscribeToModel --[[ @ 0]]
	f1_local16 = DataSources.LobbyRoot.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local15( f1_local14, f1_local16["gameClient.update"], ArenaRankIcon.__Image_FullPath ) --[[ @ 0]]
	f1_local14 = ArenaRankIcon --[[ @ 0]]
	f1_local15 = ArenaRankIcon.subscribeToModel --[[ @ 0]]
	f1_local16 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local15( f1_local14, f1_local16["PartyPrivacy.privacy"], ArenaRankIcon.__Image_FullPath ) --[[ @ 0]]
	self:mergeStateConditions( {
		{
			stateName = "CodCasterHideBoth",
			condition = function ( menu, element, event )
				local f25_local0 = IsCodCaster( f1_arg1 ) --[[ @ 0]]
				if f25_local0 then
					if not CoD.CodCasterUtility.ShouldShowOverheadInfo( self, f1_arg1, "shoutcaster_ds_overhead_health" ) then
						f25_local0 = not CoD.CodCasterUtility.ShouldShowOverheadInfo( self, f1_arg1, "shoutcaster_ds_overhead_name" ) --[[ @ 0]]
					else
						f25_local0 = false --[[ @ 0]]
					end
				end
				return f25_local0
			end
		},
		{
			stateName = "CodCasterHideHealth",
			condition = function ( menu, element, event )
				return IsCodCaster( f1_arg1 ) and not CoD.CodCasterUtility.ShouldShowOverheadInfo( self, f1_arg1, "shoutcaster_ds_overhead_health" )
			end
		},
		{
			stateName = "CodCasterHideName",
			condition = function ( menu, element, event )
				return IsCodCaster( f1_arg1 ) and not CoD.CodCasterUtility.ShouldShowOverheadInfo( self, f1_arg1, "shoutcaster_ds_overhead_name" )
			end
		},
		{
			stateName = "BountyLastStand",
			condition = function ( menu, element, event )
				return CoD.BountyHunterUtility.GameTypeIsBounty( f1_arg1 ) and CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg1, "isInLastStand" )
			end
		},
		{
			stateName = "HardcoreVisible",
			condition = function ( menu, element, event )
				local f29_local0 = CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg1, "showHealthBar" ) --[[ @ 0]]
				if f29_local0 then
					if not IsInPrematchPeriod( f1_arg1 ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_is_flash_banged"] ) then
						f29_local0 = IsVisibilityBitSet( f1_arg1, Enum[@"uivisibilitybit"][@"bit_hud_hardcore"] ) --[[ @ 0]]
						if f29_local0 then
							f29_local0 = CoD.HUDUtility.VisibleIfInDemoPlayback() --[[ @ 0]]
							if f29_local0 then
								f29_local0 = CoD.HUDUtility.OverheadNameTeamIsSelfPlayerTeam( self, f1_arg1 ) --[[ @ 0]]
							end
						end
					else
						f29_local0 = false --[[ @ 0]]
					end
				end
				return f29_local0
			end
		},
		{
			stateName = "VisibleArena",
			condition = function ( menu, element, event )
				local f30_local0 = CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg1, "showHealthBar" ) --[[ @ 0]]
				if f30_local0 then
					if not IsInPrematchPeriod( f1_arg1 ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_is_flash_banged"] ) and not IsVisibilityBitSet( f1_arg1, Enum[@"uivisibilitybit"][@"bit_hud_hardcore"] ) then
						f30_local0 = CoD.HUDUtility.VisibleIfInDemoPlayback() --[[ @ 0]]
						if f30_local0 then
							f30_local0 = IsArenaMode() --[[ @ 0]]
						end
					else
						f30_local0 = false --[[ @ 0]]
					end
				end
				return f30_local0
			end
		},
		{
			stateName = "CustomGames",
			condition = function ( menu, element, event )
				local f31_local0 = CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg1, "showHealthBar" ) --[[ @ 0]]
				if f31_local0 then
					if not IsInPrematchPeriod( f1_arg1 ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_is_flash_banged"] ) and not IsVisibilityBitSet( f1_arg1, Enum[@"uivisibilitybit"][@"bit_hud_hardcore"] ) then
						f31_local0 = CoD.HUDUtility.VisibleIfInDemoPlayback() --[[ @ 0]]
						if f31_local0 then
							f31_local0 = not IsPublicOnlineGame() --[[ @ 0]]
						end
					else
						f31_local0 = false --[[ @ 0]]
					end
				end
				return f31_local0
			end
		},
		{
			stateName = "Visible",
			condition = function ( menu, element, event )
				local f32_local0 = CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg1, "showHealthBar" ) --[[ @ 0]]
				if f32_local0 then
					if not IsInPrematchPeriod( f1_arg1 ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_is_flash_banged"] ) and not IsVisibilityBitSet( f1_arg1, Enum[@"uivisibilitybit"][@"bit_hud_hardcore"] ) then
						f32_local0 = CoD.HUDUtility.VisibleIfInDemoPlayback() --[[ @ 0]]
					else
						f32_local0 = false --[[ @ 0]]
					end
				end
				return f32_local0
			end
		}
	} ) --[[ @ 0]]
	f1_local14 = self --[[ @ 0]]
	f1_local15 = self.subscribeToModel --[[ @ 0]]
	f1_local16 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local15( f1_local14, f1_local16["factions.isCoDCaster"], function ( f33_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f33_arg0:get(),
			modelName = "factions.isCoDCaster"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local14 = self --[[ @ 0]]
	f1_local15 = self.subscribeToModel --[[ @ 0]]
	f1_local16 = DataSources.CodCaster.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local15( f1_local14, f1_local16.profileSettingsUpdated, function ( f34_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f34_arg0:get(),
			modelName = "profileSettingsUpdated"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local14 = self --[[ @ 0]]
	f1_local15 = self.subscribeToModel --[[ @ 0]]
	f1_local16 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local15( f1_local14, f1_local16["deadSpectator.playerTeam"], function ( f35_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f35_arg0:get(),
			modelName = "deadSpectator.playerTeam"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:linkToElementModel( self, "isInLastStand", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "isInLastStand"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:linkToElementModel( self, "showHealthBar", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "showHealthBar"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	f1_local14 = self --[[ @ 0]]
	f1_local15 = self.subscribeToModel --[[ @ 0]]
	f1_local16 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local15( f1_local14, f1_local16.isInPrematchPeriod, function ( f38_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f38_arg0:get(),
			modelName = "isInPrematchPeriod"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local14 = self --[[ @ 0]]
	f1_local15 = self.subscribeToModel --[[ @ 0]]
	f1_local16 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local15( f1_local14, f1_local16["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_flash_banged"]], function ( f39_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f39_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_flash_banged"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local14 = self --[[ @ 0]]
	f1_local15 = self.subscribeToModel --[[ @ 0]]
	f1_local16 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local15( f1_local14, f1_local16["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_hud_hardcore"]], function ( f40_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f40_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_hud_hardcore"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:linkToElementModel( self, "team", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "team"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	f1_local14 = self --[[ @ 0]]
	f1_local15 = self.subscribeToModel --[[ @ 0]]
	f1_local16 = DataSources.PerController.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local15( f1_local14, f1_local16.team, function ( f42_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f42_arg0:get(),
			modelName = "team"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local14 = self --[[ @ 0]]
	f1_local15 = self.subscribeToModel --[[ @ 0]]
	f1_local16 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local15( f1_local14, f1_local16["lobbyRoot.lobbyNav"], function ( f43_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f43_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	f1_local15 = self --[[ @ 0]]
	CoD.HUDUtility.UpdateClientHealth( self, f1_arg1 ) --[[ @ 0]]
	CoD.HealthUtility.InitHealthBarLossPulse( self, self.HealthBar, f1_arg1, CoD.HealthBarPulse, f1_arg0 ) --[[ @ 0]]
	CoD.HUDUtility.InitOverheadNameClampWatch( self, f1_arg1 ) --[[ @ 0]]
	SetElementProperty( f1_local15, "isOverheadName", true ) --[[ @ 0]]
	CoD.HUDUtility.InitHealthBoostNotification( self, HealthBoostNotificationContainer, f1_arg1, f1_arg0, CoD.HealthBoostNotification ) --[[ @ 0]]
	return self
end
 --[[ @ 0]]
CoD.OverheadName_MP.__resetProperties = function ( f44_arg0 )
	f44_arg0.PlayerNameAndClanTag:completeAnimation() --[[ @ 0]]
	f44_arg0.tagged:completeAnimation() --[[ @ 0]]
	f44_arg0.OverheadNamePlayerNameAndClanTagGlow:completeAnimation() --[[ @ 0]]
	f44_arg0.HealthBar:completeAnimation() --[[ @ 0]]
	f44_arg0.RankIcon:completeAnimation() --[[ @ 0]]
	f44_arg0.ArmorOverheadName:completeAnimation() --[[ @ 0]]
	f44_arg0.ArmorBar:completeAnimation() --[[ @ 0]]
	f44_arg0.ArenaRankIcon:completeAnimation() --[[ @ 0]]
	f44_arg0.HealthBoostNotificationContainer:completeAnimation() --[[ @ 0]]
	f44_arg0.GlowBloom:completeAnimation() --[[ @ 0]]
	f44_arg0.Flash:completeAnimation() --[[ @ 0]]
	f44_arg0.FlashRed:completeAnimation() --[[ @ 0]]
	f44_arg0.FlashWhite:completeAnimation() --[[ @ 0]]
	f44_arg0.PlayerNameAndClanTag:setAlpha( 1 ) --[[ @ 0]]
	f44_arg0.tagged:setAlpha( 1 ) --[[ @ 0]]
	f44_arg0.OverheadNamePlayerNameAndClanTagGlow:setAlpha( 0.95 ) --[[ @ 0]]
	f44_arg0.HealthBar:setTopBottom( 0, 0, 12.5, 29.5 ) --[[ @ 0]]
	f44_arg0.HealthBar:setAlpha( CoD.HUDUtility.GetOverheadHealthbarAlpha( f44_arg0, 1 ) ) --[[ @ 0]]
	f44_arg0.RankIcon:setAlpha( 1 ) --[[ @ 0]]
	f44_arg0.ArmorOverheadName:setAlpha( CoD.HUDUtility.GetOverheadHealthbarAlpha( f44_arg0, 1 ) ) --[[ @ 0]]
	f44_arg0.ArmorBar:setAlpha( CoD.HUDUtility.GetOverheadHealthbarAlpha( f44_arg0, 1 ) ) --[[ @ 0]]
	f44_arg0.ArenaRankIcon:setAlpha( 0 ) --[[ @ 0]]
	f44_arg0.HealthBoostNotificationContainer:setAlpha( 1 ) --[[ @ 0]]
	f44_arg0.GlowBloom:setAlpha( 0 ) --[[ @ 0]]
	f44_arg0.GlowBloom:setScale( 0, 0 ) --[[ @ 0]]
	f44_arg0.Flash:setAlpha( 0 ) --[[ @ 0]]
	f44_arg0.Flash:setScale( 1, 1 ) --[[ @ 0]]
	f44_arg0.FlashRed:setAlpha( 0 ) --[[ @ 0]]
	f44_arg0.FlashRed:setScale( 1, 1 ) --[[ @ 0]]
	f44_arg0.FlashWhite:setAlpha( 0 ) --[[ @ 0]]
	f44_arg0.FlashWhite:setScale( 1, 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.OverheadName_MP.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f45_arg0, f45_arg1 )
			f45_arg0:__resetProperties() --[[ @ 0]]
			f45_arg0:setupElementClipCounter( 8 ) --[[ @ 0]]
			f45_arg0.OverheadNamePlayerNameAndClanTagGlow:completeAnimation() --[[ @ 0]]
			f45_arg0.OverheadNamePlayerNameAndClanTagGlow:setAlpha( 0 ) --[[ @ 0]]
			f45_arg0.clipFinished( f45_arg0.OverheadNamePlayerNameAndClanTagGlow ) --[[ @ 0]]
			f45_arg0.PlayerNameAndClanTag:completeAnimation() --[[ @ 0]]
			f45_arg0.PlayerNameAndClanTag:setAlpha( 0 ) --[[ @ 0]]
			f45_arg0.clipFinished( f45_arg0.PlayerNameAndClanTag ) --[[ @ 0]]
			f45_arg0.ArmorBar:completeAnimation() --[[ @ 0]]
			f45_arg0.ArmorBar:setAlpha( CoD.HUDUtility.GetOverheadHealthbarAlpha( f45_arg0, 0 ) ) --[[ @ 0]]
			f45_arg0.clipFinished( f45_arg0.ArmorBar ) --[[ @ 0]]
			f45_arg0.HealthBar:completeAnimation() --[[ @ 0]]
			f45_arg0.HealthBar:setAlpha( CoD.HUDUtility.GetOverheadHealthbarAlpha( f45_arg0, 0 ) ) --[[ @ 0]]
			f45_arg0.clipFinished( f45_arg0.HealthBar ) --[[ @ 0]]
			f45_arg0.tagged:completeAnimation() --[[ @ 0]]
			f45_arg0.tagged:setAlpha( 0 ) --[[ @ 0]]
			f45_arg0.clipFinished( f45_arg0.tagged ) --[[ @ 0]]
			f45_arg0.ArmorOverheadName:completeAnimation() --[[ @ 0]]
			f45_arg0.ArmorOverheadName:setAlpha( CoD.HUDUtility.GetOverheadHealthbarAlpha( f45_arg0, 0 ) ) --[[ @ 0]]
			f45_arg0.clipFinished( f45_arg0.ArmorOverheadName ) --[[ @ 0]]
			f45_arg0.RankIcon:completeAnimation() --[[ @ 0]]
			f45_arg0.RankIcon:setAlpha( 0 ) --[[ @ 0]]
			f45_arg0.clipFinished( f45_arg0.RankIcon ) --[[ @ 0]]
			f45_arg0.ArenaRankIcon:completeAnimation() --[[ @ 0]]
			f45_arg0.ArenaRankIcon:setAlpha( 0 ) --[[ @ 0]]
			f45_arg0.clipFinished( f45_arg0.ArenaRankIcon ) --[[ @ 0]]
		end
	},
	CodCasterHideBoth = {
		DefaultClip = function ( f46_arg0, f46_arg1 )
			f46_arg0:__resetProperties() --[[ @ 0]]
			f46_arg0:setupElementClipCounter( 6 ) --[[ @ 0]]
			f46_arg0.OverheadNamePlayerNameAndClanTagGlow:completeAnimation() --[[ @ 0]]
			f46_arg0.OverheadNamePlayerNameAndClanTagGlow:setAlpha( 0 ) --[[ @ 0]]
			f46_arg0.clipFinished( f46_arg0.OverheadNamePlayerNameAndClanTagGlow ) --[[ @ 0]]
			f46_arg0.PlayerNameAndClanTag:completeAnimation() --[[ @ 0]]
			f46_arg0.PlayerNameAndClanTag:setAlpha( 0 ) --[[ @ 0]]
			f46_arg0.clipFinished( f46_arg0.PlayerNameAndClanTag ) --[[ @ 0]]
			f46_arg0.ArmorBar:completeAnimation() --[[ @ 0]]
			f46_arg0.ArmorBar:setAlpha( CoD.HUDUtility.GetOverheadHealthbarAlpha( f46_arg0, 0 ) ) --[[ @ 0]]
			f46_arg0.clipFinished( f46_arg0.ArmorBar ) --[[ @ 0]]
			f46_arg0.HealthBar:completeAnimation() --[[ @ 0]]
			f46_arg0.HealthBar:setAlpha( CoD.HUDUtility.GetOverheadHealthbarAlpha( f46_arg0, 0 ) ) --[[ @ 0]]
			f46_arg0.clipFinished( f46_arg0.HealthBar ) --[[ @ 0]]
			f46_arg0.ArmorOverheadName:completeAnimation() --[[ @ 0]]
			f46_arg0.ArmorOverheadName:setAlpha( CoD.HUDUtility.GetOverheadHealthbarAlpha( f46_arg0, 0 ) ) --[[ @ 0]]
			f46_arg0.clipFinished( f46_arg0.ArmorOverheadName ) --[[ @ 0]]
			f46_arg0.HealthBoostNotificationContainer:completeAnimation() --[[ @ 0]]
			f46_arg0.HealthBoostNotificationContainer:setAlpha( 0 ) --[[ @ 0]]
			f46_arg0.clipFinished( f46_arg0.HealthBoostNotificationContainer ) --[[ @ 0]]
		end
	},
	CodCasterHideHealth = {
		DefaultClip = function ( f47_arg0, f47_arg1 )
			f47_arg0:__resetProperties() --[[ @ 0]]
			f47_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f47_arg0.ArmorBar:completeAnimation() --[[ @ 0]]
			f47_arg0.ArmorBar:setAlpha( CoD.HUDUtility.GetOverheadHealthbarAlpha( f47_arg0, 0 ) ) --[[ @ 0]]
			f47_arg0.clipFinished( f47_arg0.ArmorBar ) --[[ @ 0]]
			f47_arg0.HealthBar:completeAnimation() --[[ @ 0]]
			f47_arg0.HealthBar:setAlpha( CoD.HUDUtility.GetOverheadHealthbarAlpha( f47_arg0, 0 ) ) --[[ @ 0]]
			f47_arg0.clipFinished( f47_arg0.HealthBar ) --[[ @ 0]]
			f47_arg0.ArmorOverheadName:completeAnimation() --[[ @ 0]]
			f47_arg0.ArmorOverheadName:setAlpha( CoD.HUDUtility.GetOverheadHealthbarAlpha( f47_arg0, 0 ) ) --[[ @ 0]]
			f47_arg0.clipFinished( f47_arg0.ArmorOverheadName ) --[[ @ 0]]
			f47_arg0.HealthBoostNotificationContainer:completeAnimation() --[[ @ 0]]
			f47_arg0.HealthBoostNotificationContainer:setAlpha( 0 ) --[[ @ 0]]
			f47_arg0.clipFinished( f47_arg0.HealthBoostNotificationContainer ) --[[ @ 0]]
		end
	},
	CodCasterHideName = {
		DefaultClip = function ( f48_arg0, f48_arg1 )
			f48_arg0:__resetProperties() --[[ @ 0]]
			f48_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f48_arg0.OverheadNamePlayerNameAndClanTagGlow:completeAnimation() --[[ @ 0]]
			f48_arg0.OverheadNamePlayerNameAndClanTagGlow:setAlpha( 0 ) --[[ @ 0]]
			f48_arg0.clipFinished( f48_arg0.OverheadNamePlayerNameAndClanTagGlow ) --[[ @ 0]]
			f48_arg0.PlayerNameAndClanTag:completeAnimation() --[[ @ 0]]
			f48_arg0.PlayerNameAndClanTag:setAlpha( 0 ) --[[ @ 0]]
			f48_arg0.clipFinished( f48_arg0.PlayerNameAndClanTag ) --[[ @ 0]]
		end
	},
	BountyLastStand = {
		DefaultClip = function ( f49_arg0, f49_arg1 )
			f49_arg0:__resetProperties() --[[ @ 0]]
			f49_arg0:setupElementClipCounter( 11 ) --[[ @ 0]]
			f49_arg0.OverheadNamePlayerNameAndClanTagGlow:completeAnimation() --[[ @ 0]]
			f49_arg0.OverheadNamePlayerNameAndClanTagGlow:setAlpha( 0 ) --[[ @ 0]]
			f49_arg0.clipFinished( f49_arg0.OverheadNamePlayerNameAndClanTagGlow ) --[[ @ 0]]
			f49_arg0.PlayerNameAndClanTag:completeAnimation() --[[ @ 0]]
			f49_arg0.PlayerNameAndClanTag:setAlpha( 0 ) --[[ @ 0]]
			f49_arg0.clipFinished( f49_arg0.PlayerNameAndClanTag ) --[[ @ 0]]
			f49_arg0.HealthBar:completeAnimation() --[[ @ 0]]
			f49_arg0.HealthBar:setAlpha( CoD.HUDUtility.GetOverheadHealthbarAlpha( f49_arg0, 0 ) ) --[[ @ 0]]
			f49_arg0.clipFinished( f49_arg0.HealthBar ) --[[ @ 0]]
			f49_arg0.tagged:completeAnimation() --[[ @ 0]]
			f49_arg0.tagged:setAlpha( 0 ) --[[ @ 0]]
			f49_arg0.clipFinished( f49_arg0.tagged ) --[[ @ 0]]
			f49_arg0.ArmorOverheadName:completeAnimation() --[[ @ 0]]
			f49_arg0.ArmorOverheadName:setAlpha( CoD.HUDUtility.GetOverheadHealthbarAlpha( f49_arg0, 0 ) ) --[[ @ 0]]
			f49_arg0.clipFinished( f49_arg0.ArmorOverheadName ) --[[ @ 0]]
			f49_arg0.HealthBoostNotificationContainer:completeAnimation() --[[ @ 0]]
			f49_arg0.HealthBoostNotificationContainer:setAlpha( 0 ) --[[ @ 0]]
			f49_arg0.clipFinished( f49_arg0.HealthBoostNotificationContainer ) --[[ @ 0]]
			f49_arg0.FlashWhite:completeAnimation() --[[ @ 0]]
			f49_arg0.FlashWhite:setAlpha( 0 ) --[[ @ 0]]
			f49_arg0.clipFinished( f49_arg0.FlashWhite ) --[[ @ 0]]
			f49_arg0.FlashRed:completeAnimation() --[[ @ 0]]
			f49_arg0.FlashRed:setAlpha( 0 ) --[[ @ 0]]
			f49_arg0.clipFinished( f49_arg0.FlashRed ) --[[ @ 0]]
			f49_arg0.Flash:completeAnimation() --[[ @ 0]]
			f49_arg0.Flash:setAlpha( 0 ) --[[ @ 0]]
			f49_arg0.clipFinished( f49_arg0.Flash ) --[[ @ 0]]
			f49_arg0.GlowBloom:completeAnimation() --[[ @ 0]]
			f49_arg0.GlowBloom:setAlpha( 0 ) --[[ @ 0]]
			f49_arg0.clipFinished( f49_arg0.GlowBloom ) --[[ @ 0]]
			f49_arg0.RankIcon:completeAnimation() --[[ @ 0]]
			f49_arg0.RankIcon:setAlpha( 0 ) --[[ @ 0]]
			f49_arg0.clipFinished( f49_arg0.RankIcon ) --[[ @ 0]]
		end
	},
	HardcoreVisible = {
		DefaultClip = function ( f50_arg0, f50_arg1 )
			f50_arg0:__resetProperties() --[[ @ 0]]
			f50_arg0:setupElementClipCounter( 6 ) --[[ @ 0]]
			f50_arg0.ArmorBar:completeAnimation() --[[ @ 0]]
			f50_arg0.ArmorBar:setAlpha( CoD.HUDUtility.GetOverheadHealthbarAlpha( f50_arg0, 0 ) ) --[[ @ 0]]
			f50_arg0.clipFinished( f50_arg0.ArmorBar ) --[[ @ 0]]
			f50_arg0.HealthBar:completeAnimation() --[[ @ 0]]
			f50_arg0.HealthBar:setAlpha( CoD.HUDUtility.GetOverheadHealthbarAlpha( f50_arg0, 0 ) ) --[[ @ 0]]
			f50_arg0.clipFinished( f50_arg0.HealthBar ) --[[ @ 0]]
			f50_arg0.tagged:completeAnimation() --[[ @ 0]]
			f50_arg0.tagged:setAlpha( 0 ) --[[ @ 0]]
			f50_arg0.clipFinished( f50_arg0.tagged ) --[[ @ 0]]
			f50_arg0.ArmorOverheadName:completeAnimation() --[[ @ 0]]
			f50_arg0.ArmorOverheadName:setAlpha( CoD.HUDUtility.GetOverheadHealthbarAlpha( f50_arg0, 0 ) ) --[[ @ 0]]
			f50_arg0.clipFinished( f50_arg0.ArmorOverheadName ) --[[ @ 0]]
			f50_arg0.HealthBoostNotificationContainer:completeAnimation() --[[ @ 0]]
			f50_arg0.HealthBoostNotificationContainer:setAlpha( 0 ) --[[ @ 0]]
			f50_arg0.clipFinished( f50_arg0.HealthBoostNotificationContainer ) --[[ @ 0]]
			f50_arg0.RankIcon:completeAnimation() --[[ @ 0]]
			f50_arg0.RankIcon:setAlpha( 0 ) --[[ @ 0]]
			f50_arg0.clipFinished( f50_arg0.RankIcon ) --[[ @ 0]]
		end
	},
	VisibleArena = {
		DefaultClip = function ( f51_arg0, f51_arg1 )
			f51_arg0:__resetProperties() --[[ @ 0]]
			f51_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f51_arg0.RankIcon:completeAnimation() --[[ @ 0]]
			f51_arg0.RankIcon:setAlpha( 0 ) --[[ @ 0]]
			f51_arg0.clipFinished( f51_arg0.RankIcon ) --[[ @ 0]]
			f51_arg0.ArenaRankIcon:completeAnimation() --[[ @ 0]]
			f51_arg0.ArenaRankIcon:setAlpha( 1 ) --[[ @ 0]]
			f51_arg0.clipFinished( f51_arg0.ArenaRankIcon ) --[[ @ 0]]
		end,
		TaggedEnemyNotInCrosshair = function ( f52_arg0, f52_arg1 )
			f52_arg0:__resetProperties() --[[ @ 0]]
			f52_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			local f52_local0 = function ( f53_arg0 )
				f52_arg0.PlayerNameAndClanTag:beginAnimation( 250 ) --[[ @ 0]]
				f52_arg0.PlayerNameAndClanTag:setAlpha( 0 ) --[[ @ 0]]
				f52_arg0.PlayerNameAndClanTag:registerEventHandler( "interrupted_keyframe", f52_arg0.clipInterrupted ) --[[ @ 0]]
				f52_arg0.PlayerNameAndClanTag:registerEventHandler( "transition_complete_keyframe", f52_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f52_arg0.PlayerNameAndClanTag:completeAnimation() --[[ @ 0]]
			f52_arg0.PlayerNameAndClanTag:setAlpha( 1 ) --[[ @ 0]]
			f52_local0( f52_arg0.PlayerNameAndClanTag ) --[[ @ 0]]
			local f52_local1 = function ( f54_arg0 )
				f52_arg0.HealthBar:beginAnimation( 250 ) --[[ @ 0]]
				f52_arg0.HealthBar:setAlpha( CoD.HUDUtility.GetOverheadHealthbarAlpha( f52_arg0, 0 ) ) --[[ @ 0]]
				f52_arg0.HealthBar:registerEventHandler( "interrupted_keyframe", f52_arg0.clipInterrupted ) --[[ @ 0]]
				f52_arg0.HealthBar:registerEventHandler( "transition_complete_keyframe", f52_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f52_arg0.HealthBar:completeAnimation() --[[ @ 0]]
			f52_arg0.HealthBar:setAlpha( CoD.HUDUtility.GetOverheadHealthbarAlpha( f52_arg0, 1 ) ) --[[ @ 0]]
			f52_local1( f52_arg0.HealthBar ) --[[ @ 0]]
			local f52_local2 = function ( f55_arg0 )
				f52_arg0.RankIcon:beginAnimation( 250 ) --[[ @ 0]]
				f52_arg0.RankIcon:setAlpha( 0 ) --[[ @ 0]]
				f52_arg0.RankIcon:registerEventHandler( "interrupted_keyframe", f52_arg0.clipInterrupted ) --[[ @ 0]]
				f52_arg0.RankIcon:registerEventHandler( "transition_complete_keyframe", f52_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f52_arg0.RankIcon:completeAnimation() --[[ @ 0]]
			f52_arg0.RankIcon:setAlpha( 1 ) --[[ @ 0]]
			f52_local2( f52_arg0.RankIcon ) --[[ @ 0]]
		end,
		DefaultState_OldExplode = function ( f56_arg0, f56_arg1 )
			f56_arg0:__resetProperties() --[[ @ 0]]
			f56_arg0:setupElementClipCounter( 9 ) --[[ @ 0]]
			f56_arg0.OverheadNamePlayerNameAndClanTagGlow:completeAnimation() --[[ @ 0]]
			f56_arg0.OverheadNamePlayerNameAndClanTagGlow:setAlpha( 0 ) --[[ @ 0]]
			f56_arg0.clipFinished( f56_arg0.OverheadNamePlayerNameAndClanTagGlow ) --[[ @ 0]]
			f56_arg0.PlayerNameAndClanTag:completeAnimation() --[[ @ 0]]
			f56_arg0.PlayerNameAndClanTag:setAlpha( 0 ) --[[ @ 0]]
			f56_arg0.clipFinished( f56_arg0.PlayerNameAndClanTag ) --[[ @ 0]]
			local f56_local0 = function ( f57_arg0 )
				local f57_local0 = function ( f58_arg0 )
					local f58_local0 = function ( f59_arg0 )
						local f59_local0 = function ( f60_arg0 )
							f60_arg0:beginAnimation( 150 ) --[[ @ 0]]
							f60_arg0:setTopBottom( 0, 0, -12.5, 4.5 ) --[[ @ 0]]
							f60_arg0:registerEventHandler( "transition_complete_keyframe", f56_arg0.clipFinished ) --[[ @ 0]]
						end
						 --[[ @ 0]]
						f59_arg0:beginAnimation( 49 ) --[[ @ 0]]
						f59_arg0:registerEventHandler( "transition_complete_keyframe", f59_local0 ) --[[ @ 0]]
					end
					 --[[ @ 0]]
					f58_arg0:beginAnimation( 19 ) --[[ @ 0]]
					f58_arg0:setAlpha( CoD.HUDUtility.GetOverheadHealthbarAlpha( f56_arg0, 0 ) ) --[[ @ 0]]
					f58_arg0:registerEventHandler( "transition_complete_keyframe", f58_local0 ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f57_arg0:beginAnimation( 20 ) --[[ @ 0]]
				f57_arg0:setAlpha( CoD.HUDUtility.GetOverheadHealthbarAlpha( f56_arg0, 0.9 ) ) --[[ @ 0]]
				f57_arg0:registerEventHandler( "transition_complete_keyframe", f57_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f56_arg0.HealthBar:beginAnimation( 160 ) --[[ @ 0]]
			f56_arg0.HealthBar:setTopBottom( 0, 0, 12.5, 29.5 ) --[[ @ 0]]
			f56_arg0.HealthBar:setAlpha( CoD.HUDUtility.GetOverheadHealthbarAlpha( f56_arg0, 0.1 ) ) --[[ @ 0]]
			f56_arg0.HealthBar:registerEventHandler( "interrupted_keyframe", f56_arg0.clipInterrupted ) --[[ @ 0]]
			f56_arg0.HealthBar:registerEventHandler( "transition_complete_keyframe", f56_local0 ) --[[ @ 0]]
			f56_arg0.tagged:completeAnimation() --[[ @ 0]]
			f56_arg0.tagged:setAlpha( 1 ) --[[ @ 0]]
			f56_arg0.clipFinished( f56_arg0.tagged ) --[[ @ 0]]
			local f56_local1 = function ( f61_arg0 )
				local f61_local0 = function ( f62_arg0 )
					local f62_local0 = function ( f63_arg0 )
						local f63_local0 = function ( f64_arg0 )
							f64_arg0:beginAnimation( 60 ) --[[ @ 0]]
							f64_arg0:setScale( 0, 0 ) --[[ @ 0]]
							f64_arg0:registerEventHandler( "transition_complete_keyframe", f56_arg0.clipFinished ) --[[ @ 0]]
						end
						 --[[ @ 0]]
						f63_arg0:beginAnimation( 170 ) --[[ @ 0]]
						f63_arg0:setAlpha( 0 ) --[[ @ 0]]
						f63_arg0:setScale( 0.63, 0.89 ) --[[ @ 0]]
						f63_arg0:registerEventHandler( "transition_complete_keyframe", f63_local0 ) --[[ @ 0]]
					end
					 --[[ @ 0]]
					f62_arg0:beginAnimation( 29 ) --[[ @ 0]]
					f62_arg0:setAlpha( 0.85 ) --[[ @ 0]]
					f62_arg0:registerEventHandler( "transition_complete_keyframe", f62_local0 ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f56_arg0.FlashWhite:beginAnimation( 100 ) --[[ @ 0]]
				f56_arg0.FlashWhite:setScale( 2.4, 3.4 ) --[[ @ 0]]
				f56_arg0.FlashWhite:registerEventHandler( "interrupted_keyframe", f56_arg0.clipInterrupted ) --[[ @ 0]]
				f56_arg0.FlashWhite:registerEventHandler( "transition_complete_keyframe", f61_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f56_arg0.FlashWhite:completeAnimation() --[[ @ 0]]
			f56_arg0.FlashWhite:setAlpha( 1 ) --[[ @ 0]]
			f56_arg0.FlashWhite:setScale( 0, 0 ) --[[ @ 0]]
			f56_local1( f56_arg0.FlashWhite ) --[[ @ 0]]
			local f56_local2 = function ( f65_arg0 )
				local f65_local0 = function ( f66_arg0 )
					local f66_local0 = function ( f67_arg0 )
						local f67_local0 = function ( f68_arg0 )
							f68_arg0:beginAnimation( 49 ) --[[ @ 0]]
							f68_arg0:setAlpha( 0 ) --[[ @ 0]]
							f68_arg0:setScale( 5, 35 ) --[[ @ 0]]
							f68_arg0:registerEventHandler( "transition_complete_keyframe", f56_arg0.clipFinished ) --[[ @ 0]]
						end
						 --[[ @ 0]]
						f67_arg0:beginAnimation( 110 ) --[[ @ 0]]
						f67_arg0:setAlpha( 0.26 ) --[[ @ 0]]
						f67_arg0:setScale( 4, 10 ) --[[ @ 0]]
						f67_arg0:registerEventHandler( "transition_complete_keyframe", f67_local0 ) --[[ @ 0]]
					end
					 --[[ @ 0]]
					f66_arg0:beginAnimation( 30 ) --[[ @ 0]]
					f66_arg0:setAlpha( 0.84 ) --[[ @ 0]]
					f66_arg0:registerEventHandler( "transition_complete_keyframe", f66_local0 ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f65_arg0:beginAnimation( 99 ) --[[ @ 0]]
				f65_arg0:setScale( 2.4, 3.4 ) --[[ @ 0]]
				f65_arg0:registerEventHandler( "transition_complete_keyframe", f65_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f56_arg0.FlashRed:beginAnimation( 60 ) --[[ @ 0]]
			f56_arg0.FlashRed:setAlpha( 1 ) --[[ @ 0]]
			f56_arg0.FlashRed:setScale( 0, 0 ) --[[ @ 0]]
			f56_arg0.FlashRed:registerEventHandler( "interrupted_keyframe", f56_arg0.clipInterrupted ) --[[ @ 0]]
			f56_arg0.FlashRed:registerEventHandler( "transition_complete_keyframe", f56_local2 ) --[[ @ 0]]
			local f56_local3 = function ( f69_arg0 )
				local f69_local0 = function ( f70_arg0 )
					local f70_local0 = function ( f71_arg0 )
						f71_arg0:beginAnimation( 110 ) --[[ @ 0]]
						f71_arg0:setScale( 2, 1.05 ) --[[ @ 0]]
						f71_arg0:registerEventHandler( "transition_complete_keyframe", f56_arg0.clipFinished ) --[[ @ 0]]
					end
					 --[[ @ 0]]
					f70_arg0:beginAnimation( 49 ) --[[ @ 0]]
					f70_arg0:setAlpha( 0 ) --[[ @ 0]]
					f70_arg0:setScale( 1.45, 1.43 ) --[[ @ 0]]
					f70_arg0:registerEventHandler( "transition_complete_keyframe", f70_local0 ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f69_arg0:beginAnimation( 250 ) --[[ @ 0]]
				f69_arg0:setAlpha( 0.17 ) --[[ @ 0]]
				f69_arg0:setScale( 1.2, 1.6 ) --[[ @ 0]]
				f69_arg0:registerEventHandler( "transition_complete_keyframe", f69_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f56_arg0.Flash:beginAnimation( 50 ) --[[ @ 0]]
			f56_arg0.Flash:setAlpha( 1 ) --[[ @ 0]]
			f56_arg0.Flash:setScale( 0, 0 ) --[[ @ 0]]
			f56_arg0.Flash:setImage( RegisterImage( @"hash_68FEB6143419D031" ) ) --[[ @ 0]]
			f56_arg0.Flash:registerEventHandler( "interrupted_keyframe", f56_arg0.clipInterrupted ) --[[ @ 0]]
			f56_arg0.Flash:registerEventHandler( "transition_complete_keyframe", f56_local3 ) --[[ @ 0]]
			local f56_local4 = function ( f72_arg0 )
				local f72_local0 = function ( f73_arg0 )
					f73_arg0:beginAnimation( 320 ) --[[ @ 0]]
					f73_arg0:setAlpha( 0 ) --[[ @ 0]]
					f73_arg0:registerEventHandler( "transition_complete_keyframe", f56_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f72_arg0:beginAnimation( 100, Enum[@"luitween"][@"luitween_ease_in"] ) --[[ @ 0]]
				f72_arg0:setAlpha( 0.76 ) --[[ @ 0]]
				f72_arg0:setScale( 1.5, 1.5 ) --[[ @ 0]]
				f72_arg0:registerEventHandler( "transition_complete_keyframe", f72_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f56_arg0.GlowBloom:beginAnimation( 80 ) --[[ @ 0]]
			f56_arg0.GlowBloom:setAlpha( 1 ) --[[ @ 0]]
			f56_arg0.GlowBloom:setScale( 0, 0 ) --[[ @ 0]]
			f56_arg0.GlowBloom:registerEventHandler( "interrupted_keyframe", f56_arg0.clipInterrupted ) --[[ @ 0]]
			f56_arg0.GlowBloom:registerEventHandler( "transition_complete_keyframe", f56_local4 ) --[[ @ 0]]
			f56_arg0.RankIcon:completeAnimation() --[[ @ 0]]
			f56_arg0.RankIcon:setAlpha( 0 ) --[[ @ 0]]
			f56_arg0.clipFinished( f56_arg0.RankIcon ) --[[ @ 0]]
		end
	},
	CustomGames = {
		DefaultClip = function ( f74_arg0, f74_arg1 )
			f74_arg0:__resetProperties() --[[ @ 0]]
			f74_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f74_arg0.RankIcon:completeAnimation() --[[ @ 0]]
			f74_arg0.RankIcon:setAlpha( 0 ) --[[ @ 0]]
			f74_arg0.clipFinished( f74_arg0.RankIcon ) --[[ @ 0]]
			f74_arg0.ArenaRankIcon:completeAnimation() --[[ @ 0]]
			f74_arg0.ArenaRankIcon:setAlpha( 0 ) --[[ @ 0]]
			f74_arg0.clipFinished( f74_arg0.ArenaRankIcon ) --[[ @ 0]]
		end,
		TaggedEnemyNotInCrosshair = function ( f75_arg0, f75_arg1 )
			f75_arg0:__resetProperties() --[[ @ 0]]
			f75_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			local f75_local0 = function ( f76_arg0 )
				f75_arg0.PlayerNameAndClanTag:beginAnimation( 250 ) --[[ @ 0]]
				f75_arg0.PlayerNameAndClanTag:setAlpha( 0 ) --[[ @ 0]]
				f75_arg0.PlayerNameAndClanTag:registerEventHandler( "interrupted_keyframe", f75_arg0.clipInterrupted ) --[[ @ 0]]
				f75_arg0.PlayerNameAndClanTag:registerEventHandler( "transition_complete_keyframe", f75_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f75_arg0.PlayerNameAndClanTag:completeAnimation() --[[ @ 0]]
			f75_arg0.PlayerNameAndClanTag:setAlpha( 1 ) --[[ @ 0]]
			f75_local0( f75_arg0.PlayerNameAndClanTag ) --[[ @ 0]]
			local f75_local1 = function ( f77_arg0 )
				f75_arg0.HealthBar:beginAnimation( 250 ) --[[ @ 0]]
				f75_arg0.HealthBar:setAlpha( CoD.HUDUtility.GetOverheadHealthbarAlpha( f75_arg0, 0 ) ) --[[ @ 0]]
				f75_arg0.HealthBar:registerEventHandler( "interrupted_keyframe", f75_arg0.clipInterrupted ) --[[ @ 0]]
				f75_arg0.HealthBar:registerEventHandler( "transition_complete_keyframe", f75_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f75_arg0.HealthBar:completeAnimation() --[[ @ 0]]
			f75_arg0.HealthBar:setAlpha( CoD.HUDUtility.GetOverheadHealthbarAlpha( f75_arg0, 1 ) ) --[[ @ 0]]
			f75_local1( f75_arg0.HealthBar ) --[[ @ 0]]
			local f75_local2 = function ( f78_arg0 )
				f75_arg0.RankIcon:beginAnimation( 250 ) --[[ @ 0]]
				f75_arg0.RankIcon:setAlpha( 0 ) --[[ @ 0]]
				f75_arg0.RankIcon:registerEventHandler( "interrupted_keyframe", f75_arg0.clipInterrupted ) --[[ @ 0]]
				f75_arg0.RankIcon:registerEventHandler( "transition_complete_keyframe", f75_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f75_arg0.RankIcon:completeAnimation() --[[ @ 0]]
			f75_arg0.RankIcon:setAlpha( 1 ) --[[ @ 0]]
			f75_local2( f75_arg0.RankIcon ) --[[ @ 0]]
		end,
		DefaultState_OldExplode = function ( f79_arg0, f79_arg1 )
			f79_arg0:__resetProperties() --[[ @ 0]]
			f79_arg0:setupElementClipCounter( 9 ) --[[ @ 0]]
			f79_arg0.OverheadNamePlayerNameAndClanTagGlow:completeAnimation() --[[ @ 0]]
			f79_arg0.OverheadNamePlayerNameAndClanTagGlow:setAlpha( 0 ) --[[ @ 0]]
			f79_arg0.clipFinished( f79_arg0.OverheadNamePlayerNameAndClanTagGlow ) --[[ @ 0]]
			f79_arg0.PlayerNameAndClanTag:completeAnimation() --[[ @ 0]]
			f79_arg0.PlayerNameAndClanTag:setAlpha( 0 ) --[[ @ 0]]
			f79_arg0.clipFinished( f79_arg0.PlayerNameAndClanTag ) --[[ @ 0]]
			local f79_local0 = function ( f80_arg0 )
				local f80_local0 = function ( f81_arg0 )
					local f81_local0 = function ( f82_arg0 )
						local f82_local0 = function ( f83_arg0 )
							f83_arg0:beginAnimation( 150 ) --[[ @ 0]]
							f83_arg0:setTopBottom( 0, 0, -12.5, 4.5 ) --[[ @ 0]]
							f83_arg0:registerEventHandler( "transition_complete_keyframe", f79_arg0.clipFinished ) --[[ @ 0]]
						end
						 --[[ @ 0]]
						f82_arg0:beginAnimation( 49 ) --[[ @ 0]]
						f82_arg0:registerEventHandler( "transition_complete_keyframe", f82_local0 ) --[[ @ 0]]
					end
					 --[[ @ 0]]
					f81_arg0:beginAnimation( 19 ) --[[ @ 0]]
					f81_arg0:setAlpha( CoD.HUDUtility.GetOverheadHealthbarAlpha( f79_arg0, 0 ) ) --[[ @ 0]]
					f81_arg0:registerEventHandler( "transition_complete_keyframe", f81_local0 ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f80_arg0:beginAnimation( 20 ) --[[ @ 0]]
				f80_arg0:setAlpha( CoD.HUDUtility.GetOverheadHealthbarAlpha( f79_arg0, 0.9 ) ) --[[ @ 0]]
				f80_arg0:registerEventHandler( "transition_complete_keyframe", f80_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f79_arg0.HealthBar:beginAnimation( 160 ) --[[ @ 0]]
			f79_arg0.HealthBar:setTopBottom( 0, 0, 12.5, 29.5 ) --[[ @ 0]]
			f79_arg0.HealthBar:setAlpha( CoD.HUDUtility.GetOverheadHealthbarAlpha( f79_arg0, 0.1 ) ) --[[ @ 0]]
			f79_arg0.HealthBar:registerEventHandler( "interrupted_keyframe", f79_arg0.clipInterrupted ) --[[ @ 0]]
			f79_arg0.HealthBar:registerEventHandler( "transition_complete_keyframe", f79_local0 ) --[[ @ 0]]
			f79_arg0.tagged:completeAnimation() --[[ @ 0]]
			f79_arg0.tagged:setAlpha( 1 ) --[[ @ 0]]
			f79_arg0.clipFinished( f79_arg0.tagged ) --[[ @ 0]]
			local f79_local1 = function ( f84_arg0 )
				local f84_local0 = function ( f85_arg0 )
					local f85_local0 = function ( f86_arg0 )
						local f86_local0 = function ( f87_arg0 )
							f87_arg0:beginAnimation( 60 ) --[[ @ 0]]
							f87_arg0:setScale( 0, 0 ) --[[ @ 0]]
							f87_arg0:registerEventHandler( "transition_complete_keyframe", f79_arg0.clipFinished ) --[[ @ 0]]
						end
						 --[[ @ 0]]
						f86_arg0:beginAnimation( 170 ) --[[ @ 0]]
						f86_arg0:setAlpha( 0 ) --[[ @ 0]]
						f86_arg0:setScale( 0.63, 0.89 ) --[[ @ 0]]
						f86_arg0:registerEventHandler( "transition_complete_keyframe", f86_local0 ) --[[ @ 0]]
					end
					 --[[ @ 0]]
					f85_arg0:beginAnimation( 29 ) --[[ @ 0]]
					f85_arg0:setAlpha( 0.85 ) --[[ @ 0]]
					f85_arg0:registerEventHandler( "transition_complete_keyframe", f85_local0 ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f79_arg0.FlashWhite:beginAnimation( 100 ) --[[ @ 0]]
				f79_arg0.FlashWhite:setScale( 2.4, 3.4 ) --[[ @ 0]]
				f79_arg0.FlashWhite:registerEventHandler( "interrupted_keyframe", f79_arg0.clipInterrupted ) --[[ @ 0]]
				f79_arg0.FlashWhite:registerEventHandler( "transition_complete_keyframe", f84_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f79_arg0.FlashWhite:completeAnimation() --[[ @ 0]]
			f79_arg0.FlashWhite:setAlpha( 1 ) --[[ @ 0]]
			f79_arg0.FlashWhite:setScale( 0, 0 ) --[[ @ 0]]
			f79_local1( f79_arg0.FlashWhite ) --[[ @ 0]]
			local f79_local2 = function ( f88_arg0 )
				local f88_local0 = function ( f89_arg0 )
					local f89_local0 = function ( f90_arg0 )
						local f90_local0 = function ( f91_arg0 )
							f91_arg0:beginAnimation( 49 ) --[[ @ 0]]
							f91_arg0:setAlpha( 0 ) --[[ @ 0]]
							f91_arg0:setScale( 5, 35 ) --[[ @ 0]]
							f91_arg0:registerEventHandler( "transition_complete_keyframe", f79_arg0.clipFinished ) --[[ @ 0]]
						end
						 --[[ @ 0]]
						f90_arg0:beginAnimation( 110 ) --[[ @ 0]]
						f90_arg0:setAlpha( 0.26 ) --[[ @ 0]]
						f90_arg0:setScale( 4, 10 ) --[[ @ 0]]
						f90_arg0:registerEventHandler( "transition_complete_keyframe", f90_local0 ) --[[ @ 0]]
					end
					 --[[ @ 0]]
					f89_arg0:beginAnimation( 30 ) --[[ @ 0]]
					f89_arg0:setAlpha( 0.84 ) --[[ @ 0]]
					f89_arg0:registerEventHandler( "transition_complete_keyframe", f89_local0 ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f88_arg0:beginAnimation( 99 ) --[[ @ 0]]
				f88_arg0:setScale( 2.4, 3.4 ) --[[ @ 0]]
				f88_arg0:registerEventHandler( "transition_complete_keyframe", f88_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f79_arg0.FlashRed:beginAnimation( 60 ) --[[ @ 0]]
			f79_arg0.FlashRed:setAlpha( 1 ) --[[ @ 0]]
			f79_arg0.FlashRed:setScale( 0, 0 ) --[[ @ 0]]
			f79_arg0.FlashRed:registerEventHandler( "interrupted_keyframe", f79_arg0.clipInterrupted ) --[[ @ 0]]
			f79_arg0.FlashRed:registerEventHandler( "transition_complete_keyframe", f79_local2 ) --[[ @ 0]]
			local f79_local3 = function ( f92_arg0 )
				local f92_local0 = function ( f93_arg0 )
					local f93_local0 = function ( f94_arg0 )
						f94_arg0:beginAnimation( 110 ) --[[ @ 0]]
						f94_arg0:setScale( 2, 1.05 ) --[[ @ 0]]
						f94_arg0:registerEventHandler( "transition_complete_keyframe", f79_arg0.clipFinished ) --[[ @ 0]]
					end
					 --[[ @ 0]]
					f93_arg0:beginAnimation( 49 ) --[[ @ 0]]
					f93_arg0:setAlpha( 0 ) --[[ @ 0]]
					f93_arg0:setScale( 1.45, 1.43 ) --[[ @ 0]]
					f93_arg0:registerEventHandler( "transition_complete_keyframe", f93_local0 ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f92_arg0:beginAnimation( 250 ) --[[ @ 0]]
				f92_arg0:setAlpha( 0.17 ) --[[ @ 0]]
				f92_arg0:setScale( 1.2, 1.6 ) --[[ @ 0]]
				f92_arg0:registerEventHandler( "transition_complete_keyframe", f92_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f79_arg0.Flash:beginAnimation( 50 ) --[[ @ 0]]
			f79_arg0.Flash:setAlpha( 1 ) --[[ @ 0]]
			f79_arg0.Flash:setScale( 0, 0 ) --[[ @ 0]]
			f79_arg0.Flash:setImage( RegisterImage( @"hash_68FEB6143419D031" ) ) --[[ @ 0]]
			f79_arg0.Flash:registerEventHandler( "interrupted_keyframe", f79_arg0.clipInterrupted ) --[[ @ 0]]
			f79_arg0.Flash:registerEventHandler( "transition_complete_keyframe", f79_local3 ) --[[ @ 0]]
			local f79_local4 = function ( f95_arg0 )
				local f95_local0 = function ( f96_arg0 )
					f96_arg0:beginAnimation( 320 ) --[[ @ 0]]
					f96_arg0:setAlpha( 0 ) --[[ @ 0]]
					f96_arg0:registerEventHandler( "transition_complete_keyframe", f79_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f95_arg0:beginAnimation( 100, Enum[@"luitween"][@"luitween_ease_in"] ) --[[ @ 0]]
				f95_arg0:setAlpha( 0.76 ) --[[ @ 0]]
				f95_arg0:setScale( 1.5, 1.5 ) --[[ @ 0]]
				f95_arg0:registerEventHandler( "transition_complete_keyframe", f95_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f79_arg0.GlowBloom:beginAnimation( 80 ) --[[ @ 0]]
			f79_arg0.GlowBloom:setAlpha( 1 ) --[[ @ 0]]
			f79_arg0.GlowBloom:setScale( 0, 0 ) --[[ @ 0]]
			f79_arg0.GlowBloom:registerEventHandler( "interrupted_keyframe", f79_arg0.clipInterrupted ) --[[ @ 0]]
			f79_arg0.GlowBloom:registerEventHandler( "transition_complete_keyframe", f79_local4 ) --[[ @ 0]]
			f79_arg0.RankIcon:completeAnimation() --[[ @ 0]]
			f79_arg0.RankIcon:setAlpha( 0 ) --[[ @ 0]]
			f79_arg0.clipFinished( f79_arg0.RankIcon ) --[[ @ 0]]
		end
	},
	Visible = {
		DefaultClip = function ( f97_arg0, f97_arg1 )
			f97_arg0:__resetProperties() --[[ @ 0]]
			f97_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f97_arg0.ArenaRankIcon:completeAnimation() --[[ @ 0]]
			f97_arg0.ArenaRankIcon:setAlpha( 0 ) --[[ @ 0]]
			f97_arg0.clipFinished( f97_arg0.ArenaRankIcon ) --[[ @ 0]]
		end,
		TaggedEnemyNotInCrosshair = function ( f98_arg0, f98_arg1 )
			f98_arg0:__resetProperties() --[[ @ 0]]
			f98_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			local f98_local0 = function ( f99_arg0 )
				f98_arg0.PlayerNameAndClanTag:beginAnimation( 250 ) --[[ @ 0]]
				f98_arg0.PlayerNameAndClanTag:setAlpha( 0 ) --[[ @ 0]]
				f98_arg0.PlayerNameAndClanTag:registerEventHandler( "interrupted_keyframe", f98_arg0.clipInterrupted ) --[[ @ 0]]
				f98_arg0.PlayerNameAndClanTag:registerEventHandler( "transition_complete_keyframe", f98_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f98_arg0.PlayerNameAndClanTag:completeAnimation() --[[ @ 0]]
			f98_arg0.PlayerNameAndClanTag:setAlpha( 1 ) --[[ @ 0]]
			f98_local0( f98_arg0.PlayerNameAndClanTag ) --[[ @ 0]]
			local f98_local1 = function ( f100_arg0 )
				f98_arg0.HealthBar:beginAnimation( 250 ) --[[ @ 0]]
				f98_arg0.HealthBar:setAlpha( CoD.HUDUtility.GetOverheadHealthbarAlpha( f98_arg0, 0 ) ) --[[ @ 0]]
				f98_arg0.HealthBar:registerEventHandler( "interrupted_keyframe", f98_arg0.clipInterrupted ) --[[ @ 0]]
				f98_arg0.HealthBar:registerEventHandler( "transition_complete_keyframe", f98_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f98_arg0.HealthBar:completeAnimation() --[[ @ 0]]
			f98_arg0.HealthBar:setAlpha( CoD.HUDUtility.GetOverheadHealthbarAlpha( f98_arg0, 1 ) ) --[[ @ 0]]
			f98_local1( f98_arg0.HealthBar ) --[[ @ 0]]
			local f98_local2 = function ( f101_arg0 )
				f98_arg0.RankIcon:beginAnimation( 250 ) --[[ @ 0]]
				f98_arg0.RankIcon:setAlpha( 0 ) --[[ @ 0]]
				f98_arg0.RankIcon:registerEventHandler( "interrupted_keyframe", f98_arg0.clipInterrupted ) --[[ @ 0]]
				f98_arg0.RankIcon:registerEventHandler( "transition_complete_keyframe", f98_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f98_arg0.RankIcon:completeAnimation() --[[ @ 0]]
			f98_arg0.RankIcon:setAlpha( 1 ) --[[ @ 0]]
			f98_local2( f98_arg0.RankIcon ) --[[ @ 0]]
		end,
		DefaultState_OldExplode = function ( f102_arg0, f102_arg1 )
			f102_arg0:__resetProperties() --[[ @ 0]]
			f102_arg0:setupElementClipCounter( 9 ) --[[ @ 0]]
			f102_arg0.OverheadNamePlayerNameAndClanTagGlow:completeAnimation() --[[ @ 0]]
			f102_arg0.OverheadNamePlayerNameAndClanTagGlow:setAlpha( 0 ) --[[ @ 0]]
			f102_arg0.clipFinished( f102_arg0.OverheadNamePlayerNameAndClanTagGlow ) --[[ @ 0]]
			f102_arg0.PlayerNameAndClanTag:completeAnimation() --[[ @ 0]]
			f102_arg0.PlayerNameAndClanTag:setAlpha( 0 ) --[[ @ 0]]
			f102_arg0.clipFinished( f102_arg0.PlayerNameAndClanTag ) --[[ @ 0]]
			local f102_local0 = function ( f103_arg0 )
				local f103_local0 = function ( f104_arg0 )
					local f104_local0 = function ( f105_arg0 )
						local f105_local0 = function ( f106_arg0 )
							f106_arg0:beginAnimation( 150 ) --[[ @ 0]]
							f106_arg0:setTopBottom( 0, 0, -12.5, 4.5 ) --[[ @ 0]]
							f106_arg0:registerEventHandler( "transition_complete_keyframe", f102_arg0.clipFinished ) --[[ @ 0]]
						end
						 --[[ @ 0]]
						f105_arg0:beginAnimation( 49 ) --[[ @ 0]]
						f105_arg0:registerEventHandler( "transition_complete_keyframe", f105_local0 ) --[[ @ 0]]
					end
					 --[[ @ 0]]
					f104_arg0:beginAnimation( 19 ) --[[ @ 0]]
					f104_arg0:setAlpha( CoD.HUDUtility.GetOverheadHealthbarAlpha( f102_arg0, 0 ) ) --[[ @ 0]]
					f104_arg0:registerEventHandler( "transition_complete_keyframe", f104_local0 ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f103_arg0:beginAnimation( 20 ) --[[ @ 0]]
				f103_arg0:setAlpha( CoD.HUDUtility.GetOverheadHealthbarAlpha( f102_arg0, 0.9 ) ) --[[ @ 0]]
				f103_arg0:registerEventHandler( "transition_complete_keyframe", f103_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f102_arg0.HealthBar:beginAnimation( 160 ) --[[ @ 0]]
			f102_arg0.HealthBar:setTopBottom( 0, 0, 12.5, 29.5 ) --[[ @ 0]]
			f102_arg0.HealthBar:setAlpha( CoD.HUDUtility.GetOverheadHealthbarAlpha( f102_arg0, 0.1 ) ) --[[ @ 0]]
			f102_arg0.HealthBar:registerEventHandler( "interrupted_keyframe", f102_arg0.clipInterrupted ) --[[ @ 0]]
			f102_arg0.HealthBar:registerEventHandler( "transition_complete_keyframe", f102_local0 ) --[[ @ 0]]
			f102_arg0.tagged:completeAnimation() --[[ @ 0]]
			f102_arg0.tagged:setAlpha( 1 ) --[[ @ 0]]
			f102_arg0.clipFinished( f102_arg0.tagged ) --[[ @ 0]]
			local f102_local1 = function ( f107_arg0 )
				local f107_local0 = function ( f108_arg0 )
					local f108_local0 = function ( f109_arg0 )
						local f109_local0 = function ( f110_arg0 )
							f110_arg0:beginAnimation( 60 ) --[[ @ 0]]
							f110_arg0:setScale( 0, 0 ) --[[ @ 0]]
							f110_arg0:registerEventHandler( "transition_complete_keyframe", f102_arg0.clipFinished ) --[[ @ 0]]
						end
						 --[[ @ 0]]
						f109_arg0:beginAnimation( 170 ) --[[ @ 0]]
						f109_arg0:setAlpha( 0 ) --[[ @ 0]]
						f109_arg0:setScale( 0.63, 0.89 ) --[[ @ 0]]
						f109_arg0:registerEventHandler( "transition_complete_keyframe", f109_local0 ) --[[ @ 0]]
					end
					 --[[ @ 0]]
					f108_arg0:beginAnimation( 29 ) --[[ @ 0]]
					f108_arg0:setAlpha( 0.85 ) --[[ @ 0]]
					f108_arg0:registerEventHandler( "transition_complete_keyframe", f108_local0 ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f102_arg0.FlashWhite:beginAnimation( 100 ) --[[ @ 0]]
				f102_arg0.FlashWhite:setScale( 2.4, 3.4 ) --[[ @ 0]]
				f102_arg0.FlashWhite:registerEventHandler( "interrupted_keyframe", f102_arg0.clipInterrupted ) --[[ @ 0]]
				f102_arg0.FlashWhite:registerEventHandler( "transition_complete_keyframe", f107_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f102_arg0.FlashWhite:completeAnimation() --[[ @ 0]]
			f102_arg0.FlashWhite:setAlpha( 1 ) --[[ @ 0]]
			f102_arg0.FlashWhite:setScale( 0, 0 ) --[[ @ 0]]
			f102_local1( f102_arg0.FlashWhite ) --[[ @ 0]]
			local f102_local2 = function ( f111_arg0 )
				local f111_local0 = function ( f112_arg0 )
					local f112_local0 = function ( f113_arg0 )
						local f113_local0 = function ( f114_arg0 )
							f114_arg0:beginAnimation( 49 ) --[[ @ 0]]
							f114_arg0:setAlpha( 0 ) --[[ @ 0]]
							f114_arg0:setScale( 5, 35 ) --[[ @ 0]]
							f114_arg0:registerEventHandler( "transition_complete_keyframe", f102_arg0.clipFinished ) --[[ @ 0]]
						end
						 --[[ @ 0]]
						f113_arg0:beginAnimation( 110 ) --[[ @ 0]]
						f113_arg0:setAlpha( 0.26 ) --[[ @ 0]]
						f113_arg0:setScale( 4, 10 ) --[[ @ 0]]
						f113_arg0:registerEventHandler( "transition_complete_keyframe", f113_local0 ) --[[ @ 0]]
					end
					 --[[ @ 0]]
					f112_arg0:beginAnimation( 30 ) --[[ @ 0]]
					f112_arg0:setAlpha( 0.84 ) --[[ @ 0]]
					f112_arg0:registerEventHandler( "transition_complete_keyframe", f112_local0 ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f111_arg0:beginAnimation( 99 ) --[[ @ 0]]
				f111_arg0:setScale( 2.4, 3.4 ) --[[ @ 0]]
				f111_arg0:registerEventHandler( "transition_complete_keyframe", f111_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f102_arg0.FlashRed:beginAnimation( 60 ) --[[ @ 0]]
			f102_arg0.FlashRed:setAlpha( 1 ) --[[ @ 0]]
			f102_arg0.FlashRed:setScale( 0, 0 ) --[[ @ 0]]
			f102_arg0.FlashRed:registerEventHandler( "interrupted_keyframe", f102_arg0.clipInterrupted ) --[[ @ 0]]
			f102_arg0.FlashRed:registerEventHandler( "transition_complete_keyframe", f102_local2 ) --[[ @ 0]]
			local f102_local3 = function ( f115_arg0 )
				local f115_local0 = function ( f116_arg0 )
					local f116_local0 = function ( f117_arg0 )
						f117_arg0:beginAnimation( 110 ) --[[ @ 0]]
						f117_arg0:setScale( 2, 1.05 ) --[[ @ 0]]
						f117_arg0:registerEventHandler( "transition_complete_keyframe", f102_arg0.clipFinished ) --[[ @ 0]]
					end
					 --[[ @ 0]]
					f116_arg0:beginAnimation( 49 ) --[[ @ 0]]
					f116_arg0:setAlpha( 0 ) --[[ @ 0]]
					f116_arg0:setScale( 1.45, 1.43 ) --[[ @ 0]]
					f116_arg0:registerEventHandler( "transition_complete_keyframe", f116_local0 ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f115_arg0:beginAnimation( 250 ) --[[ @ 0]]
				f115_arg0:setAlpha( 0.17 ) --[[ @ 0]]
				f115_arg0:setScale( 1.2, 1.6 ) --[[ @ 0]]
				f115_arg0:registerEventHandler( "transition_complete_keyframe", f115_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f102_arg0.Flash:beginAnimation( 50 ) --[[ @ 0]]
			f102_arg0.Flash:setAlpha( 1 ) --[[ @ 0]]
			f102_arg0.Flash:setScale( 0, 0 ) --[[ @ 0]]
			f102_arg0.Flash:setImage( RegisterImage( @"hash_68FEB6143419D031" ) ) --[[ @ 0]]
			f102_arg0.Flash:registerEventHandler( "interrupted_keyframe", f102_arg0.clipInterrupted ) --[[ @ 0]]
			f102_arg0.Flash:registerEventHandler( "transition_complete_keyframe", f102_local3 ) --[[ @ 0]]
			local f102_local4 = function ( f118_arg0 )
				local f118_local0 = function ( f119_arg0 )
					f119_arg0:beginAnimation( 320 ) --[[ @ 0]]
					f119_arg0:setAlpha( 0 ) --[[ @ 0]]
					f119_arg0:registerEventHandler( "transition_complete_keyframe", f102_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f118_arg0:beginAnimation( 100, Enum[@"luitween"][@"luitween_ease_in"] ) --[[ @ 0]]
				f118_arg0:setAlpha( 0.76 ) --[[ @ 0]]
				f118_arg0:setScale( 1.5, 1.5 ) --[[ @ 0]]
				f118_arg0:registerEventHandler( "transition_complete_keyframe", f118_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f102_arg0.GlowBloom:beginAnimation( 80 ) --[[ @ 0]]
			f102_arg0.GlowBloom:setAlpha( 1 ) --[[ @ 0]]
			f102_arg0.GlowBloom:setScale( 0, 0 ) --[[ @ 0]]
			f102_arg0.GlowBloom:registerEventHandler( "interrupted_keyframe", f102_arg0.clipInterrupted ) --[[ @ 0]]
			f102_arg0.GlowBloom:registerEventHandler( "transition_complete_keyframe", f102_local4 ) --[[ @ 0]]
			f102_arg0.RankIcon:completeAnimation() --[[ @ 0]]
			f102_arg0.RankIcon:setAlpha( 0 ) --[[ @ 0]]
			f102_arg0.clipFinished( f102_arg0.RankIcon ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.OverheadName_MP.__onClose = function ( f120_arg0 )
	f120_arg0.OverheadNamePlayerNameAndClanTagGlow:close() --[[ @ 0]]
	f120_arg0.PlayerNameAndClanTag:close() --[[ @ 0]]
	f120_arg0.ArmorBar:close() --[[ @ 0]]
	f120_arg0.HealthBar:close() --[[ @ 0]]
	f120_arg0.tagged:close() --[[ @ 0]]
	f120_arg0.ArmorOverheadName:close() --[[ @ 0]]
	f120_arg0.HealthBoostNotificationContainer:close() --[[ @ 0]]
	f120_arg0.RankIcon:close() --[[ @ 0]]
	f120_arg0.ArenaRankIcon:close() --[[ @ 0]]
end
 --[[ @ 0]]
