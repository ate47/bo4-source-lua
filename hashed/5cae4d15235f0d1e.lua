-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
require( "x64:1f49ccb61b0dc65e" ) --[[ @ 0]]
require( "x64:1419e0f1f4cff492" ) --[[ @ 0]]
require( "x64:493547a1e84ec106" ) --[[ @ 0]]
require( "x64:4e504e72ff32d634" ) --[[ @ 0]]
require( "x64:4929df020ef5e09" ) --[[ @ 0]]

CoD.VehicleGround_AbilitiesAndAmmo = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.VehicleGround_AbilitiesAndAmmo.__defaultWidth = 1920 --[[ @ 0]]
CoD.VehicleGround_AbilitiesAndAmmo.__defaultHeight = 1080 --[[ @ 0]]
CoD.VehicleGround_AbilitiesAndAmmo.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	CoD.BaseUtility.InitControllerModelIfNotSet( f1_arg1, "PlayerSettingsUpdate", "" ) --[[ @ 0]]
	self:setClass( CoD.VehicleGround_AbilitiesAndAmmo ) --[[ @ 0]]
	self.id = "VehicleGround_AbilitiesAndAmmo" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local LeftButtonPrompts = CoD.VehicleGround_ButtonPrompts_Left.new( f1_arg0, f1_arg1, 0.5, 0.5, -600, 800, 1, 1, -50, -2 ) --[[ @ 0]]
	LeftButtonPrompts:linkToElementModel( self, nil, false, function ( model )
		LeftButtonPrompts:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( LeftButtonPrompts ) --[[ @ 0]]
	self.LeftButtonPrompts = LeftButtonPrompts --[[ @ 0]]
	
	local ReloadingText = CoD.genericVHUDReloadPrompt.new( f1_arg0, f1_arg1, 0.5, 0.5, -263, 263, 0.5, 0.5, -100, -63 ) --[[ @ 0]]
	ReloadingText:linkToElementModel( self, nil, false, function ( model )
		ReloadingText:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( ReloadingText ) --[[ @ 0]]
	self.ReloadingText = ReloadingText --[[ @ 0]]
	
	local missileProximityAlert = CoD.missileProximityAlert.new( f1_arg0, f1_arg1, 0.5, 0.5, -150, 170, 0, 0, 225, 266 ) --[[ @ 0]]
	missileProximityAlert:linkToElementModel( self, nil, false, function ( model )
		missileProximityAlert:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( missileProximityAlert ) --[[ @ 0]]
	self.missileProximityAlert = missileProximityAlert --[[ @ 0]]
	
	local HUDPCVehicle = nil --[[ @ 0]]
	
	HUDPCVehicle = CoD.HUD_PC_Vehicle.new( f1_arg0, f1_arg1, 0.5, 0.5, -325, 325, 1, 1, -275, -210 ) --[[ @ 0]]
	HUDPCVehicle:setAlpha( 0 ) --[[ @ 0]]
	HUDPCVehicle:linkToElementModel( self, nil, false, function ( model )
		HUDPCVehicle:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( HUDPCVehicle ) --[[ @ 0]]
	self.HUDPCVehicle = HUDPCVehicle --[[ @ 0]]
	
	local VehicleSeatConfig = CoD.VehicleSeatConfig.new( f1_arg0, f1_arg1, 1, 1, -200, -50, 0.5, 0.5, -150, 150 ) --[[ @ 0]]
	VehicleSeatConfig:linkToElementModel( self, nil, false, function ( model )
		VehicleSeatConfig:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( VehicleSeatConfig ) --[[ @ 0]]
	self.VehicleSeatConfig = VehicleSeatConfig --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "WZHiddenPreference",
			condition = function ( menu, element, event )
				local f7_local0 = IsWarzone() --[[ @ 0]]
				if f7_local0 then
					if not IsPC() and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_68A5E996D4528DA2"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_66FFF566DCC09BBD"] ) then
						f7_local0 = CoD.WZUtility.IsWarzoneUIHidden( f1_arg1, "wzHideOnScreenButtonsUI", "warzoneHideOnScreenButtons" ) --[[ @ 0]]
					else
						f7_local0 = false --[[ @ 0]]
					end
				end
				return f7_local0
			end
		},
		{
			stateName = "WZ",
			condition = function ( menu, element, event )
				local f8_local0 = IsWarzone() --[[ @ 0]]
				if f8_local0 then
					if not IsPC() and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_68A5E996D4528DA2"] ) then
						f8_local0 = not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_66FFF566DCC09BBD"] ) --[[ @ 0]]
					else
						f8_local0 = false --[[ @ 0]]
					end
				end
				return f8_local0
			end
		},
		{
			stateName = "WZPC",
			condition = function ( menu, element, event )
				local f9_local0 = IsWarzone() --[[ @ 0]]
				if f9_local0 then
					f9_local0 = IsPC() --[[ @ 0]]
					if f9_local0 then
						if not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_68A5E996D4528DA2"] ) and not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_66FFF566DCC09BBD"] ) then
							f9_local0 = not IsInTheaterMode() --[[ @ 0]]
						else
							f9_local0 = false --[[ @ 0]]
						end
					end
				end
				return f9_local0
			end
		},
		{
			stateName = "TheaterMode",
			condition = function ( menu, element, event )
				return IsPC() and IsInTheaterMode()
			end
		}
	} ) --[[ @ 0]]
	local f1_local6 = self --[[ @ 0]]
	local f1_local7 = self.subscribeToModel --[[ @ 0]]
	local f1_local8 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local7( f1_local6, f1_local8["lobbyRoot.lobbyNav"], function ( f11_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f11_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local6 = self --[[ @ 0]]
	f1_local7 = self.subscribeToModel --[[ @ 0]]
	f1_local8 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local7( f1_local6, f1_local8["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_68A5E996D4528DA2"]], function ( f12_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f12_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_68A5E996D4528DA2"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local6 = self --[[ @ 0]]
	f1_local7 = self.subscribeToModel --[[ @ 0]]
	f1_local8 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local7( f1_local6, f1_local8["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_66FFF566DCC09BBD"]], function ( f13_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f13_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_66FFF566DCC09BBD"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local6 = self --[[ @ 0]]
	f1_local7 = self.subscribeToModel --[[ @ 0]]
	f1_local8 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local7( f1_local6, f1_local8.PlayerSettingsUpdate, function ( f14_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f14_arg0:get(),
			modelName = "PlayerSettingsUpdate"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	f1_local7 = self --[[ @ 0]]
	DelayedPlayClip( self, 10000, "FadeOut" ) --[[ @ 0]]
	return self
end
 --[[ @ 0]]
CoD.VehicleGround_AbilitiesAndAmmo.__resetProperties = function ( f15_arg0 )
	f15_arg0.VehicleSeatConfig:completeAnimation() --[[ @ 0]]
	f15_arg0.missileProximityAlert:completeAnimation() --[[ @ 0]]
	f15_arg0.ReloadingText:completeAnimation() --[[ @ 0]]
	f15_arg0.LeftButtonPrompts:completeAnimation() --[[ @ 0]]
	f15_arg0.HUDPCVehicle:completeAnimation() --[[ @ 0]]
	f15_arg0.VehicleSeatConfig:setAlpha( 1 ) --[[ @ 0]]
	f15_arg0.missileProximityAlert:setAlpha( 1 ) --[[ @ 0]]
	f15_arg0.ReloadingText:setAlpha( 1 ) --[[ @ 0]]
	f15_arg0.LeftButtonPrompts:setTopBottom( 1, 1, -50, -2 ) --[[ @ 0]]
	f15_arg0.LeftButtonPrompts:setAlpha( 1 ) --[[ @ 0]]
	f15_arg0.HUDPCVehicle:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.VehicleGround_AbilitiesAndAmmo.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f16_arg0, f16_arg1 )
			f16_arg0:__resetProperties() --[[ @ 0]]
			f16_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f16_arg0.LeftButtonPrompts:completeAnimation() --[[ @ 0]]
			f16_arg0.LeftButtonPrompts:setAlpha( 0 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.LeftButtonPrompts ) --[[ @ 0]]
			f16_arg0.ReloadingText:completeAnimation() --[[ @ 0]]
			f16_arg0.ReloadingText:setAlpha( 0 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.ReloadingText ) --[[ @ 0]]
			f16_arg0.missileProximityAlert:completeAnimation() --[[ @ 0]]
			f16_arg0.missileProximityAlert:setAlpha( 0 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.missileProximityAlert ) --[[ @ 0]]
			f16_arg0.VehicleSeatConfig:completeAnimation() --[[ @ 0]]
			f16_arg0.VehicleSeatConfig:setAlpha( 0 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.VehicleSeatConfig ) --[[ @ 0]]
		end
	},
	WZHiddenPreference = {
		DefaultClip = function ( f17_arg0, f17_arg1 )
			f17_arg0:__resetProperties() --[[ @ 0]]
			f17_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f17_arg0.LeftButtonPrompts:completeAnimation() --[[ @ 0]]
			f17_arg0.LeftButtonPrompts:setTopBottom( 1, 1, -300, -252 ) --[[ @ 0]]
			f17_arg0.LeftButtonPrompts:setAlpha( 0 ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.LeftButtonPrompts ) --[[ @ 0]]
		end
	},
	WZ = {
		DefaultClip = function ( f18_arg0, f18_arg1 )
			f18_arg0:__resetProperties() --[[ @ 0]]
			f18_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f18_arg0.LeftButtonPrompts:completeAnimation() --[[ @ 0]]
			f18_arg0.LeftButtonPrompts:setTopBottom( 1, 1, -300, -252 ) --[[ @ 0]]
			f18_arg0.LeftButtonPrompts:setAlpha( 1 ) --[[ @ 0]]
			f18_arg0.clipFinished( f18_arg0.LeftButtonPrompts ) --[[ @ 0]]
		end,
		FadeOut = function ( f19_arg0, f19_arg1 )
			f19_arg0:__resetProperties() --[[ @ 0]]
			f19_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f19_local0 = function ( f20_arg0 )
				f19_arg0.LeftButtonPrompts:beginAnimation( 1000 ) --[[ @ 0]]
				f19_arg0.LeftButtonPrompts:setAlpha( 0 ) --[[ @ 0]]
				f19_arg0.LeftButtonPrompts:registerEventHandler( "interrupted_keyframe", f19_arg0.clipInterrupted ) --[[ @ 0]]
				f19_arg0.LeftButtonPrompts:registerEventHandler( "transition_complete_keyframe", f19_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f19_arg0.LeftButtonPrompts:completeAnimation() --[[ @ 0]]
			f19_arg0.LeftButtonPrompts:setTopBottom( 1, 1, -300, -252 ) --[[ @ 0]]
			f19_arg0.LeftButtonPrompts:setAlpha( 1 ) --[[ @ 0]]
			f19_local0( f19_arg0.LeftButtonPrompts ) --[[ @ 0]]
		end
	},
	WZPC = {
		DefaultClip = function ( f21_arg0, f21_arg1 )
			f21_arg0:__resetProperties() --[[ @ 0]]
			f21_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f21_arg0.LeftButtonPrompts:completeAnimation() --[[ @ 0]]
			f21_arg0.LeftButtonPrompts:setTopBottom( 1, 1, -232, -184 ) --[[ @ 0]]
			f21_arg0.LeftButtonPrompts:setAlpha( 0 ) --[[ @ 0]]
			f21_arg0.clipFinished( f21_arg0.LeftButtonPrompts ) --[[ @ 0]]
			f21_arg0.HUDPCVehicle:completeAnimation() --[[ @ 0]]
			f21_arg0.HUDPCVehicle:setAlpha( 1 ) --[[ @ 0]]
			f21_arg0.clipFinished( f21_arg0.HUDPCVehicle ) --[[ @ 0]]
		end,
		FadeOut = function ( f22_arg0, f22_arg1 )
			f22_arg0:__resetProperties() --[[ @ 0]]
			f22_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f22_arg0.LeftButtonPrompts:completeAnimation() --[[ @ 0]]
			f22_arg0.LeftButtonPrompts:setAlpha( 0 ) --[[ @ 0]]
			f22_arg0.clipFinished( f22_arg0.LeftButtonPrompts ) --[[ @ 0]]
			local f22_local0 = function ( f23_arg0 )
				f22_arg0.HUDPCVehicle:beginAnimation( 1000 ) --[[ @ 0]]
				f22_arg0.HUDPCVehicle:setAlpha( 0 ) --[[ @ 0]]
				f22_arg0.HUDPCVehicle:registerEventHandler( "interrupted_keyframe", f22_arg0.clipInterrupted ) --[[ @ 0]]
				f22_arg0.HUDPCVehicle:registerEventHandler( "transition_complete_keyframe", f22_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f22_arg0.HUDPCVehicle:completeAnimation() --[[ @ 0]]
			f22_arg0.HUDPCVehicle:setAlpha( 1 ) --[[ @ 0]]
			f22_local0( f22_arg0.HUDPCVehicle ) --[[ @ 0]]
		end
	},
	TheaterMode = {
		DefaultClip = function ( f24_arg0, f24_arg1 )
			f24_arg0:__resetProperties() --[[ @ 0]]
			f24_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f24_arg0.LeftButtonPrompts:completeAnimation() --[[ @ 0]]
			f24_arg0.LeftButtonPrompts:setAlpha( 0 ) --[[ @ 0]]
			f24_arg0.clipFinished( f24_arg0.LeftButtonPrompts ) --[[ @ 0]]
			f24_arg0.HUDPCVehicle:completeAnimation() --[[ @ 0]]
			f24_arg0.HUDPCVehicle:setAlpha( 0 ) --[[ @ 0]]
			f24_arg0.clipFinished( f24_arg0.HUDPCVehicle ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.VehicleGround_AbilitiesAndAmmo.__onClose = function ( f25_arg0 )
	f25_arg0.LeftButtonPrompts:close() --[[ @ 0]]
	f25_arg0.ReloadingText:close() --[[ @ 0]]
	f25_arg0.missileProximityAlert:close() --[[ @ 0]]
	f25_arg0.HUDPCVehicle:close() --[[ @ 0]]
	f25_arg0.VehicleSeatConfig:close() --[[ @ 0]]
end
 --[[ @ 0]]
