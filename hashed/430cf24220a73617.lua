-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
require( "ui/uieditor/widgets/buttonprompt" ) --[[ @ 0]]
require( "ui/uieditor/widgets/minimap/minimaphelper" ) --[[ @ 0]]
require( "ui/uieditor/widgets/minimap/minimaphelperitems" ) --[[ @ 0]]
require( "x64:2776b818a4ef8ef" ) --[[ @ 0]]
require( "ui/uieditor/widgets/tablet/tabletlocationselector_hinttext" ) --[[ @ 0]]
require( "x64:3c7319f416a557d6" ) --[[ @ 0]]
require( "x64:2d6f896aad1ae0c7" ) --[[ @ 0]]
require( "x64:b8eb0fb2c6cf956" ) --[[ @ 0]]
require( "x64:2fe6668522639885" ) --[[ @ 0]]
require( "x64:32d994185d4a874a" ) --[[ @ 0]]

CoD.TabletLocationSelector_Internal = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.TabletLocationSelector_Internal.__defaultWidth = 1140 --[[ @ 0]]
CoD.TabletLocationSelector_Internal.__defaultHeight = 740 --[[ @ 0]]
CoD.TabletLocationSelector_Internal.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.TabletLocationSelector_Internal ) --[[ @ 0]]
	self.id = "TabletLocationSelector_Internal" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local MinimapHelper = CoD.MinimapHelper.new( f1_arg0, f1_arg1, 0, 0, 0, 1140, 0.5, 0.5, -321, 321 ) --[[ @ 0]]
	self:addElement( MinimapHelper ) --[[ @ 0]]
	self.MinimapHelper = MinimapHelper --[[ @ 0]]
	
	local MinimapHelperItems = CoD.MinimapHelperItems.new( f1_arg0, f1_arg1, 0, 0, 0, 1140, 0.5, 0.5, -321, 321 ) --[[ @ 0]]
	self:addElement( MinimapHelperItems ) --[[ @ 0]]
	self.MinimapHelperItems = MinimapHelperItems --[[ @ 0]]
	
	local LocationMarker = CoD.TabletLocationSelector_PointMarker.new( f1_arg0, f1_arg1, 0.5, 0.5, -630, -580, 0.5, 0.5, 254, 304 ) --[[ @ 0]]
	self:addElement( LocationMarker ) --[[ @ 0]]
	self.LocationMarker = LocationMarker --[[ @ 0]]
	
	local PatrolMarker = CoD.TabletLocationSelector_PatrolMarker.new( f1_arg0, f1_arg1, 0, 0, -90, -40, 0, 0, 487, 543 ) --[[ @ 0]]
	self:addElement( PatrolMarker ) --[[ @ 0]]
	self.PatrolMarker = PatrolMarker --[[ @ 0]]
	
	local PlayerMarker = CoD.TabletLocationSelector_PlayerMarker.new( f1_arg0, f1_arg1, 0, 0, -90, -40, 0, 0, 431.5, 481.5 ) --[[ @ 0]]
	self:addElement( PlayerMarker ) --[[ @ 0]]
	self.PlayerMarker = PlayerMarker --[[ @ 0]]
	
	local MarkerCursor = CoD.TabletLocationSelector_MarkerCursor.new( f1_arg0, f1_arg1, 0, 0, -90, -40, 0, 0, 558, 608 ) --[[ @ 0]]
	self:addElement( MarkerCursor ) --[[ @ 0]]
	self.MarkerCursor = MarkerCursor --[[ @ 0]]
	
	local TabletFrame = CoD.TabletLocationSelector_Frame.new( f1_arg0, f1_arg1, 0, 0, 17, 1125, 0, 0, 15, 729 ) --[[ @ 0]]
	self:addElement( TabletFrame ) --[[ @ 0]]
	self.TabletFrame = TabletFrame --[[ @ 0]]
	
	local MessagePromptStandard = CoD.TabletLocationSelector_HintText.new( f1_arg0, f1_arg1, 0.5, 0.5, -540, 540, 0, 0, 492, 528 ) --[[ @ 0]]
	MessagePromptStandard:setAlpha( 0 ) --[[ @ 0]]
	MessagePromptStandard.CursorHintText:setText( "" ) --[[ @ 0]]
	self:addElement( MessagePromptStandard ) --[[ @ 0]]
	self.MessagePromptStandard = MessagePromptStandard --[[ @ 0]]
	
	local buttonprompt = CoD.buttonprompt.new( f1_arg0, f1_arg1, 0.5, 0.5, -45, 125, 0, 0, 558, 603 ) --[[ @ 0]]
	buttonprompt:mergeStateConditions( {
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return IsMouseOrKeyboard( f1_arg1 )
			end
		}
	} ) --[[ @ 0]]
	buttonprompt:appendEventHandler( "input_source_changed", function ( f3_arg0, f3_arg1 )
		f3_arg1.menu = f3_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( buttonprompt, f3_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local f1_local10 = buttonprompt --[[ @ 0]]
	local MessagePromptPlaneMortar = buttonprompt.subscribeToModel --[[ @ 0]]
	local f1_local12 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	MessagePromptPlaneMortar( f1_local10, f1_local12.LastInput, function ( f4_arg0 )
		f1_arg0:updateElementState( buttonprompt, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f4_arg0:get(),
			modelName = "LastInput"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	buttonprompt:setAlpha( 0 ) --[[ @ 0]]
	buttonprompt.label:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_57905825FED0EBD8" ) ) --[[ @ 0]]
	buttonprompt:subscribeToGlobalModel( f1_arg1, "Controller", "primary_button_image", function ( model )
		local f5_local0 = model:get() --[[ @ 0]]
		if f5_local0 ~= nil then
			buttonprompt.buttonPromptImage:setImage( RegisterImage( f5_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( buttonprompt ) --[[ @ 0]]
	self.buttonprompt = buttonprompt --[[ @ 0]]
	
	MessagePromptPlaneMortar = CoD.TabletLocationSelector_MessagePrompt_Planemortar.new( f1_arg0, f1_arg1, 0.5, 0.5, -298, 282, 0, 0, 510, 550 ) --[[ @ 0]]
	MessagePromptPlaneMortar:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( MessagePromptPlaneMortar ) --[[ @ 0]]
	self.MessagePromptPlaneMortar = MessagePromptPlaneMortar --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Mortar",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsModelValueEqualToEnum( f1_arg1, "hudItems.tabletLocationSelectorType", Enum[@"hash_1E2C7BBF6E260E20"][@"hash_4904CE4D0F802D96"] )
			end
		},
		{
			stateName = "Comlink",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsModelValueEqualToEnum( f1_arg1, "hudItems.tabletLocationSelectorType", Enum[@"hash_1E2C7BBF6E260E20"][@"hash_54336D8FF9031118"] )
			end
		},
		{
			stateName = "Napalm",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsModelValueEqualToEnum( f1_arg1, "hudItems.tabletLocationSelectorType", Enum[@"hash_1E2C7BBF6E260E20"][@"hash_38760DA1682812FA"] )
			end
		},
		{
			stateName = "Artillery",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsModelValueEqualToEnum( f1_arg1, "hudItems.tabletLocationSelectorType", Enum[@"hash_1E2C7BBF6E260E20"][@"hash_6290413573874733"] )
			end
		},
		{
			stateName = "Fixed",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsModelValueEqualToEnum( f1_arg1, "hudItems.tabletLocationSelectorType", Enum[@"hash_1E2C7BBF6E260E20"][@"hash_199A6C784DDD3D07"] )
			end
		}
	} ) --[[ @ 0]]
	f1_local12 = self --[[ @ 0]]
	f1_local10 = self.subscribeToModel --[[ @ 0]]
	local f1_local13 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local10( f1_local12, f1_local13["hudItems.tabletLocationSelectorType"], function ( f11_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f11_arg0:get(),
			modelName = "hudItems.tabletLocationSelectorType"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	LocationMarker.id = "LocationMarker" --[[ @ 0]]
	PatrolMarker.id = "PatrolMarker" --[[ @ 0]]
	PlayerMarker.id = "PlayerMarker" --[[ @ 0]]
	self.__defaultFocus = PatrolMarker --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PreLoadFunc then
		PreLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	f1_local10 = self --[[ @ 0]]
	if CoD.ModelUtility.IsModelValueGreaterThan( f1_arg1, "locSel.snapTo", 0 ) then
		CoD.LocationSelectorUtility.SetupDatapadLocationMap( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
		CoD.LocationSelectorUtility.SetupLocationSelectorControls( self, f1_arg1, f1_arg0, self ) --[[ @ 0]]
	end
	return self
end
 --[[ @ 0]]
CoD.TabletLocationSelector_Internal.__resetProperties = function ( f12_arg0 )
	f12_arg0.MessagePromptStandard:completeAnimation() --[[ @ 0]]
	f12_arg0.buttonprompt:completeAnimation() --[[ @ 0]]
	f12_arg0.MessagePromptPlaneMortar:completeAnimation() --[[ @ 0]]
	f12_arg0.MessagePromptStandard:setAlpha( 0 ) --[[ @ 0]]
	f12_arg0.MessagePromptStandard.CursorHintText:setText( "" ) --[[ @ 0]]
	f12_arg0.buttonprompt:setTopBottom( 0, 0, 558, 603 ) --[[ @ 0]]
	f12_arg0.buttonprompt:setAlpha( 0 ) --[[ @ 0]]
	f12_arg0.MessagePromptPlaneMortar:setTopBottom( 0, 0, 510, 550 ) --[[ @ 0]]
	f12_arg0.MessagePromptPlaneMortar:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.TabletLocationSelector_Internal.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f13_arg0, f13_arg1 )
			f13_arg0:__resetProperties() --[[ @ 0]]
			f13_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	Mortar = {
		DefaultClip = function ( f14_arg0, f14_arg1 )
			f14_arg0:__resetProperties() --[[ @ 0]]
			f14_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f14_arg0.MessagePromptStandard:completeAnimation() --[[ @ 0]]
			f14_arg0.MessagePromptStandard.CursorHintText:completeAnimation() --[[ @ 0]]
			f14_arg0.MessagePromptStandard:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.MessagePromptStandard.CursorHintText:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_397C7860EF08AA3" ) ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.MessagePromptStandard ) --[[ @ 0]]
			f14_arg0.buttonprompt:completeAnimation() --[[ @ 0]]
			f14_arg0.buttonprompt:setTopBottom( 0, 0, 682, 727 ) --[[ @ 0]]
			f14_arg0.buttonprompt:setAlpha( 1 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.buttonprompt ) --[[ @ 0]]
			f14_arg0.MessagePromptPlaneMortar:completeAnimation() --[[ @ 0]]
			f14_arg0.MessagePromptPlaneMortar:setTopBottom( 0, 0, 642, 682 ) --[[ @ 0]]
			f14_arg0.MessagePromptPlaneMortar:setAlpha( 1 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.MessagePromptPlaneMortar ) --[[ @ 0]]
		end
	},
	Comlink = {
		DefaultClip = function ( f15_arg0, f15_arg1 )
			f15_arg0:__resetProperties() --[[ @ 0]]
			f15_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f15_arg0.MessagePromptStandard:completeAnimation() --[[ @ 0]]
			f15_arg0.MessagePromptStandard.CursorHintText:completeAnimation() --[[ @ 0]]
			f15_arg0.MessagePromptStandard:setAlpha( 1 ) --[[ @ 0]]
			f15_arg0.MessagePromptStandard.CursorHintText:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_55E69975EAC86CC7" ) ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.MessagePromptStandard ) --[[ @ 0]]
		end
	},
	Napalm = {
		DefaultClip = function ( f16_arg0, f16_arg1 )
			f16_arg0:__resetProperties() --[[ @ 0]]
			f16_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f16_arg0.MessagePromptStandard:completeAnimation() --[[ @ 0]]
			f16_arg0.MessagePromptStandard.CursorHintText:completeAnimation() --[[ @ 0]]
			f16_arg0.MessagePromptStandard:setAlpha( 1 ) --[[ @ 0]]
			f16_arg0.MessagePromptStandard.CursorHintText:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_6C1D1D888C9B0714" ) ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.MessagePromptStandard ) --[[ @ 0]]
		end
	},
	Artillery = {
		DefaultClip = function ( f17_arg0, f17_arg1 )
			f17_arg0:__resetProperties() --[[ @ 0]]
			f17_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f17_arg0.MessagePromptStandard:completeAnimation() --[[ @ 0]]
			f17_arg0.MessagePromptStandard.CursorHintText:completeAnimation() --[[ @ 0]]
			f17_arg0.MessagePromptStandard:setAlpha( 1 ) --[[ @ 0]]
			f17_arg0.MessagePromptStandard.CursorHintText:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_81367119583BEBC" ) ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.MessagePromptStandard ) --[[ @ 0]]
		end
	},
	Fixed = {
		DefaultClip = function ( f18_arg0, f18_arg1 )
			f18_arg0:__resetProperties() --[[ @ 0]]
			f18_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f18_arg0.MessagePromptStandard:completeAnimation() --[[ @ 0]]
			f18_arg0.MessagePromptStandard.CursorHintText:completeAnimation() --[[ @ 0]]
			f18_arg0.MessagePromptStandard:setAlpha( 1 ) --[[ @ 0]]
			f18_arg0.MessagePromptStandard.CursorHintText:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_650D1022CB609A5D" ) ) --[[ @ 0]]
			f18_arg0.clipFinished( f18_arg0.MessagePromptStandard ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.TabletLocationSelector_Internal.__onClose = function ( f19_arg0 )
	f19_arg0.MinimapHelper:close() --[[ @ 0]]
	f19_arg0.MinimapHelperItems:close() --[[ @ 0]]
	f19_arg0.LocationMarker:close() --[[ @ 0]]
	f19_arg0.PatrolMarker:close() --[[ @ 0]]
	f19_arg0.PlayerMarker:close() --[[ @ 0]]
	f19_arg0.MarkerCursor:close() --[[ @ 0]]
	f19_arg0.TabletFrame:close() --[[ @ 0]]
	f19_arg0.MessagePromptStandard:close() --[[ @ 0]]
	f19_arg0.buttonprompt:close() --[[ @ 0]]
	f19_arg0.MessagePromptPlaneMortar:close() --[[ @ 0]]
end
 --[[ @ 0]]
