-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:35
CoD.BountyHunterPackageTierItem = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.BountyHunterPackageTierItem.__defaultWidth = 115 --[[ @ 0]]
CoD.BountyHunterPackageTierItem.__defaultHeight = 115 --[[ @ 0]]
CoD.BountyHunterPackageTierItem.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.BountyHunterPackageTierItem ) --[[ @ 0]]
	self.id = "BountyHunterPackageTierItem" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local ItemImage = LUI.UIFixedAspectRatioImage.new( 0, 0, 17.5, 97.5, 0, 0, 17.5, 97.5 ) --[[ @ 0]]
	ItemImage:setStretchedDimension( 4 ) --[[ @ 0]]
	ItemImage:linkToElementModel( self, "image", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			ItemImage:setImage( CoD.BaseUtility.AlreadyRegisteredIfUserData( f2_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( ItemImage ) --[[ @ 0]]
	self.ItemImage = ItemImage --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Purchased",
			condition = function ( menu, element, event )
				return CoD.BountyHunterUtility.IsTrackPackagePurchased( self, menu, f1_arg1 )
			end
		},
		{
			stateName = "Unavailable",
			condition = function ( menu, element, event )
				return not CoD.BountyHunterUtility.IsPackageTierAvailable( self )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "trackModel", true, function ( model )
		if self["__stateValidation_trackModel->tierPurchased"] then
			self:removeSubscription( self["__stateValidation_trackModel->tierPurchased"] ) --[[ @ 0]]
			self["__stateValidation_trackModel->tierPurchased"] = nil --[[ @ 0]]
		end
		if model then
			local f5_local0 = model:get() --[[ @ 0]]
			local f5_local1 = model:get() --[[ @ 0]]
			model = f5_local0 and f5_local1.tierPurchased --[[ @ 0]]
		end
		if model then
			self["__stateValidation_trackModel->tierPurchased"] = self:subscribeToModel( model, function ( model )
				f1_arg0:updateElementState( self, {
					name = "model_validation",
					menu = f1_arg0,
					controller = f1_arg1,
					modelValue = model:get(),
					modelName = "trackModel->tierPurchased"
				} ) --[[ @ 0]]
			end ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.BountyHunterPackageTierItem.__resetProperties = function ( f7_arg0 )
	f7_arg0.ItemImage:completeAnimation() --[[ @ 0]]
	f7_arg0.ItemImage:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.BountyHunterPackageTierItem.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f8_arg0, f8_arg1 )
			f8_arg0:__resetProperties() --[[ @ 0]]
			f8_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	Purchased = {
		DefaultClip = function ( f9_arg0, f9_arg1 )
			f9_arg0:__resetProperties() --[[ @ 0]]
			f9_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f9_arg0.ItemImage:completeAnimation() --[[ @ 0]]
			f9_arg0.ItemImage:setAlpha( 0.25 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.ItemImage ) --[[ @ 0]]
		end
	},
	Unavailable = {
		DefaultClip = function ( f10_arg0, f10_arg1 )
			f10_arg0:__resetProperties() --[[ @ 0]]
			f10_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f10_arg0.ItemImage:completeAnimation() --[[ @ 0]]
			f10_arg0.ItemImage:setAlpha( 0.25 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.ItemImage ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.BountyHunterPackageTierItem.__onClose = function ( f11_arg0 )
	f11_arg0.ItemImage:close() --[[ @ 0]]
end
 --[[ @ 0]]
