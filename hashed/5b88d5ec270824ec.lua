-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:50
require( "x64:59590c0895bbcb95" ) --[[ @ 0]]
require( "x64:2eec04ec8cdb9467" ) --[[ @ 0]]

CoD.ArenaMapAndGameType = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.ArenaMapAndGameType.__defaultWidth = 382 --[[ @ 0]]
CoD.ArenaMapAndGameType.__defaultHeight = 150 --[[ @ 0]]
CoD.ArenaMapAndGameType.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.ArenaMapAndGameType ) --[[ @ 0]]
	self.id = "ArenaMapAndGameType" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local ArenaMapAndGameType = CoD.ArenaMapAndGameTypeContainer.new( f1_arg0, f1_arg1, 0, 0, 0, 382, 0, 0, 0, 150 ) --[[ @ 0]]
	ArenaMapAndGameType.ArenaMapAndGameTypeInternal.GamemodeIcon:setAlpha( 0 ) --[[ @ 0]]
	ArenaMapAndGameType.ArenaMapAndGameTypeInternal.PlaylistHeaderBacking:setAlpha( 0 ) --[[ @ 0]]
	ArenaMapAndGameType.ArenaMapAndGameTypeInternal.PlaylistHeader:setAlpha( 0 ) --[[ @ 0]]
	ArenaMapAndGameType.ArenaMapAndGameTypeInternal.PlaylistHeaderNonHost:setAlpha( 0 ) --[[ @ 0]]
	ArenaMapAndGameType.ArenaMapAndGameTypeInternal.MapImage.__MapImage_Image = function ( f2_arg0 )
		local f2_local0 = f2_arg0:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			ArenaMapAndGameType.ArenaMapAndGameTypeInternal.MapImage:setImage( RegisterImage( CoD.DirectorUtility.PlaylistIDToPlaylistImageTileSmall( f2_local0 ) ) ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	ArenaMapAndGameType:subscribeToGlobalModel( f1_arg1, "LobbyRoot", "playlistId", ArenaMapAndGameType.ArenaMapAndGameTypeInternal.MapImage.__MapImage_Image ) --[[ @ 0]]
	ArenaMapAndGameType.ArenaMapAndGameTypeInternal.MapImage.__MapImage_Image_FullPath = function ()
		local f3_local0 = DataSources.LobbyRoot.getModel( f1_arg1 ) --[[ @ 0]]
		f3_local0 = f3_local0.playlistId --[[ @ 0]]
		if f3_local0 then
			ArenaMapAndGameType.ArenaMapAndGameTypeInternal.MapImage.__MapImage_Image( f3_local0 ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	ArenaMapAndGameType.ArenaMapAndGameTypeInternal.DirectorMapAndGameTypeInternalTitles.Label.__Lable_Desc = function ( f4_arg0 )
		local f4_local0 = f4_arg0:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			ArenaMapAndGameType.ArenaMapAndGameTypeInternal.DirectorMapAndGameTypeInternalTitles.Label:setText( ToUpper( CoD.DirectorUtility.PlaylistIDToPlaylistDesc( f4_local0 ) ) ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	ArenaMapAndGameType:subscribeToGlobalModel( f1_arg1, "LobbyRoot", "playlistId", ArenaMapAndGameType.ArenaMapAndGameTypeInternal.DirectorMapAndGameTypeInternalTitles.Label.__Lable_Desc ) --[[ @ 0]]
	ArenaMapAndGameType.ArenaMapAndGameTypeInternal.DirectorMapAndGameTypeInternalTitles.Label.__Lable_Desc_FullPath = function ()
		local f5_local0 = DataSources.LobbyRoot.getModel( f1_arg1 ) --[[ @ 0]]
		f5_local0 = f5_local0.playlistId --[[ @ 0]]
		if f5_local0 then
			ArenaMapAndGameType.ArenaMapAndGameTypeInternal.DirectorMapAndGameTypeInternalTitles.Label.__Lable_Desc( f5_local0 ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	ArenaMapAndGameType:subscribeToGlobalModel( f1_arg1, "Arena", "arenaEventName", function ( model )
		local f6_local0 = model:get() --[[ @ 0]]
		if f6_local0 ~= nil then
			ArenaMapAndGameType.ArenaMapAndGameTypeInternal.DirectorMapAndGameTypeInternalTitles.SubTitle:setText( ToUpper( f6_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	ArenaMapAndGameType:registerEventHandler( "gain_focus", function ( element, event )
		local f7_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f7_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f7_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		return f7_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( ArenaMapAndGameType, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"], nil, function ( element, menu, controller, model )
		CoD.DirectorUtility.DirectorOpenOverlayWithCurrentMenuMode( menu, controller, "LeaguePlayOverview" ) --[[ @ 0]]
		PlaySoundAlias( "uin_press_generic" ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"menu/select", nil, nil ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	self:addElement( ArenaMapAndGameType ) --[[ @ 0]]
	self.ArenaMapAndGameType = ArenaMapAndGameType --[[ @ 0]]
	
	local f1_local2 = ArenaMapAndGameType --[[ @ 0]]
	local f1_local3 = ArenaMapAndGameType.subscribeToModel --[[ @ 0]]
	local f1_local4 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local3( f1_local2, f1_local4["lobbyRoot.lobbyNetworkMode"], ArenaMapAndGameType.ArenaMapAndGameTypeInternal.MapImage.__MapImage_Image_FullPath ) --[[ @ 0]]
	f1_local2 = ArenaMapAndGameType --[[ @ 0]]
	f1_local3 = ArenaMapAndGameType.subscribeToModel --[[ @ 0]]
	f1_local4 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local3( f1_local2, f1_local4["lobbyRoot.lobbyNetworkMode"], ArenaMapAndGameType.ArenaMapAndGameTypeInternal.DirectorMapAndGameTypeInternalTitles.Label.__Lable_Desc_FullPath ) --[[ @ 0]]
	f1_local2 = ArenaMapAndGameType --[[ @ 0]]
	f1_local3 = ArenaMapAndGameType.subscribeToModel --[[ @ 0]]
	f1_local4 = DataSources.LobbyRoot.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local3( f1_local2, f1_local4["privateClient.count"], ArenaMapAndGameType.ArenaMapAndGameTypeInternal.DirectorMapAndGameTypeInternalTitles.Label.__Lable_Desc_FullPath ) --[[ @ 0]]
	self:mergeStateConditions( {
		{
			stateName = "Event",
			condition = function ( menu, element, event )
				return CoD.ArenaUtility.CurrentArenaEventTypeEquals( self, Enum[@"hash_6C0EA92D04BC003B"][@"hash_5C32571741C5B730"] )
			end
		}
	} ) --[[ @ 0]]
	f1_local2 = self --[[ @ 0]]
	f1_local3 = self.subscribeToModel --[[ @ 0]]
	f1_local4 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local3( f1_local2, f1_local4["lobbyPlaylist.name"], function ( f11_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f11_arg0:get(),
			modelName = "lobbyPlaylist.name"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local2 = self --[[ @ 0]]
	f1_local3 = self.subscribeToModel --[[ @ 0]]
	f1_local4 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local3( f1_local2, f1_local4["lobbyRoot.lobbyNav"], function ( f12_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f12_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ArenaMapAndGameType.id = "ArenaMapAndGameType" --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.ArenaMapAndGameType.__onClose = function ( f13_arg0 )
	f13_arg0.ArenaMapAndGameType:close() --[[ @ 0]]
end
 --[[ @ 0]]
