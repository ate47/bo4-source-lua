-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
require( "x64:d1729e9d65fd99a" ) --[[ @ 0]]
require( "x64:61bb87fb6a851b76" ) --[[ @ 0]]
require( "ui/uieditor/widgets/director/directordividerwithgradient" ) --[[ @ 0]]
require( "ui/uieditor/widgets/store/storecommontextbacking" ) --[[ @ 0]]

CoD.WeaponOptionInfoInternal = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.WeaponOptionInfoInternal.__defaultWidth = 480 --[[ @ 0]]
CoD.WeaponOptionInfoInternal.__defaultHeight = 130 --[[ @ 0]]
CoD.WeaponOptionInfoInternal.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	CoD.BaseUtility.CreateControllerModel( f1_arg1, "paintCanCount" ) --[[ @ 0]]
	self:setClass( CoD.WeaponOptionInfoInternal ) --[[ @ 0]]
	self.id = "WeaponOptionInfoInternal" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local DotTiledBacking = CoD.StoreCommonTextBacking.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 1, 1, -12, 14 ) --[[ @ 0]]
	DotTiledBacking:setAlpha( 0.33 ) --[[ @ 0]]
	self:addElement( DotTiledBacking ) --[[ @ 0]]
	self.DotTiledBacking = DotTiledBacking --[[ @ 0]]
	
	local UnlockProgressBarBG = LUI.UIImage.new( 0, 0, -53, 447, 1, 1, -144, -16 ) --[[ @ 0]]
	UnlockProgressBarBG:setScale( 0.8, 1.5 ) --[[ @ 0]]
	UnlockProgressBarBG:setImage( RegisterImage( @"uie_ui_menu_cac_weapon_select_button_bar" ) ) --[[ @ 0]]
	self:addElement( UnlockProgressBarBG ) --[[ @ 0]]
	self.UnlockProgressBarBG = UnlockProgressBarBG --[[ @ 0]]
	
	local UnlockProgressBar = LUI.UIImage.new( 0, 0, -52, 448, 1, 1, -144, -16 ) --[[ @ 0]]
	UnlockProgressBar:setScale( 0.8, 1.5 ) --[[ @ 0]]
	UnlockProgressBar:setImage( RegisterImage( @"uie_ui_menu_cac_button_bottom_line_lvl" ) ) --[[ @ 0]]
	UnlockProgressBar:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_wipe_normal" ) ) --[[ @ 0]]
	UnlockProgressBar:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	UnlockProgressBar:setShaderVector( 2, 1, 0, 0, 0 ) --[[ @ 0]]
	UnlockProgressBar:setShaderVector( 3, 0, 0, 0, 0 ) --[[ @ 0]]
	UnlockProgressBar:setShaderVector( 4, 0, 0, 0, 0 ) --[[ @ 0]]
	UnlockProgressBar:linkToElementModel( self, "unlockProgressAndTarget", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			UnlockProgressBar:setShaderVector( 0, CoD.WeaponOptionsUtility.GetWeaponOptionProgress( f1_arg0, f1_arg1, CoD.GetVectorComponentFromString( f2_local0, 1 ), CoD.GetVectorComponentFromString( f2_local0, 2 ), CoD.GetVectorComponentFromString( f2_local0, 3 ), CoD.GetVectorComponentFromString( f2_local0, 4 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( UnlockProgressBar ) --[[ @ 0]]
	self.UnlockProgressBar = UnlockProgressBar --[[ @ 0]]
	
	local UnlockProgress = LUI.UIText.new( 0, 0, 392, 592, 1, 1, -8, 10 ) --[[ @ 0]]
	UnlockProgress:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	UnlockProgress:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	UnlockProgress:setLetterSpacing( 2 ) --[[ @ 0]]
	UnlockProgress:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	UnlockProgress:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	UnlockProgress:linkToElementModel( self, "unlockProgressAndTarget", true, function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			UnlockProgress:setText( CoD.WeaponOptionsUtility.GetWeaponOptionProgressString( f1_arg0, f1_arg1, f3_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( UnlockProgress ) --[[ @ 0]]
	self.UnlockProgress = UnlockProgress --[[ @ 0]]
	
	local Description = LUI.UIText.new( 0, 0, 0, 481, 0.5, 0.5, 9, 27 ) --[[ @ 0]]
	Description:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	Description:setAlpha( 0 ) --[[ @ 0]]
	Description:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	Description:setLetterSpacing( 2 ) --[[ @ 0]]
	Description:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	Description:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	Description:linkToElementModel( self, "description", true, function ( model )
		local f4_local0 = model:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			Description:setText( Engine[@"hash_4F9F1239CFD921FE"]( f4_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Description ) --[[ @ 0]]
	self.Description = Description --[[ @ 0]]
	
	local UnlockDescription = LUI.UIText.new( 0, 0, 0, 481, 0.5, 0.5, 9, 27 ) --[[ @ 0]]
	UnlockDescription:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	UnlockDescription:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	UnlockDescription:setLetterSpacing( 2 ) --[[ @ 0]]
	UnlockDescription:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	UnlockDescription:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	UnlockDescription:linkToElementModel( self, "unlockDescription", true, function ( model )
		local f5_local0 = model:get() --[[ @ 0]]
		if f5_local0 ~= nil then
			UnlockDescription:setText( f5_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( UnlockDescription ) --[[ @ 0]]
	self.UnlockDescription = UnlockDescription --[[ @ 0]]
	
	local InsufficientFundsDesc = LUI.UIText.new( 0, 0, 0, 481, 0.5, 0.5, 61, 79 ) --[[ @ 0]]
	InsufficientFundsDesc:setRGB( ColorSet.InsufficientFunds.r, ColorSet.InsufficientFunds.g, ColorSet.InsufficientFunds.b ) --[[ @ 0]]
	InsufficientFundsDesc:setAlpha( 0 ) --[[ @ 0]]
	InsufficientFundsDesc:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_5693FA85E8E2E0DE" ) ) --[[ @ 0]]
	InsufficientFundsDesc:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	InsufficientFundsDesc:setLetterSpacing( 2 ) --[[ @ 0]]
	InsufficientFundsDesc:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	InsufficientFundsDesc:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	self:addElement( InsufficientFundsDesc ) --[[ @ 0]]
	self.InsufficientFundsDesc = InsufficientFundsDesc --[[ @ 0]]
	
	local UnlockBonusAndXPIcon = CoD.NameAndXPBonus.new( f1_arg0, f1_arg1, 0, 0, 0, 500, 0, 0, 8, 64 ) --[[ @ 0]]
	UnlockBonusAndXPIcon:linkToElementModel( self, nil, false, function ( model )
		UnlockBonusAndXPIcon:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( UnlockBonusAndXPIcon ) --[[ @ 0]]
	self.UnlockBonusAndXPIcon = UnlockBonusAndXPIcon --[[ @ 0]]
	
	local FramePlaceLeft = LUI.UIImage.new( 0, 0, -2, 22, 1, 1, -14, 16 ) --[[ @ 0]]
	FramePlaceLeft:setAlpha( 0.04 ) --[[ @ 0]]
	FramePlaceLeft:setImage( RegisterImage( @"uie_ui_menu_aar_common_open_frame" ) ) --[[ @ 0]]
	FramePlaceLeft:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_add" ) ) --[[ @ 0]]
	FramePlaceLeft:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	FramePlaceLeft:setupNineSliceShader( 24, 24 ) --[[ @ 0]]
	self:addElement( FramePlaceLeft ) --[[ @ 0]]
	self.FramePlaceLeft = FramePlaceLeft --[[ @ 0]]
	
	local FramePlaceRight = LUI.UIImage.new( 1, 1, -22, 2, 1, 1, -14, 16 ) --[[ @ 0]]
	FramePlaceRight:setAlpha( 0.04 ) --[[ @ 0]]
	FramePlaceRight:setYRot( 180 ) --[[ @ 0]]
	FramePlaceRight:setImage( RegisterImage( @"uie_ui_menu_aar_common_open_frame" ) ) --[[ @ 0]]
	FramePlaceRight:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_add" ) ) --[[ @ 0]]
	FramePlaceRight:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	FramePlaceRight:setupNineSliceShader( 24, 24 ) --[[ @ 0]]
	self:addElement( FramePlaceRight ) --[[ @ 0]]
	self.FramePlaceRight = FramePlaceRight --[[ @ 0]]
	
	local Divider = CoD.DirectorDividerWithGradient.new( f1_arg0, f1_arg1, 0, 0, 0, 400, 0, 0, 69, 70 ) --[[ @ 0]]
	Divider:setAlpha( 0.25 ) --[[ @ 0]]
	self:addElement( Divider ) --[[ @ 0]]
	self.Divider = Divider --[[ @ 0]]
	
	local PaintCanCost = CoD.PaintCanCost.new( f1_arg0, f1_arg1, 0, 0, 0, 480, 0, 0, 80, 107 ) --[[ @ 0]]
	PaintCanCost:setAlpha( 0 ) --[[ @ 0]]
	PaintCanCost:linkToElementModel( self, nil, false, function ( model )
		PaintCanCost:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( PaintCanCost ) --[[ @ 0]]
	self.PaintCanCost = PaintCanCost --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "HideProgressDesc",
			condition = function ( menu, element, event )
				return CoD.WeaponOptionsUtility.ShouldHideWeaponOptionDescAndProgress( menu, element, f1_arg1 )
			end
		},
		{
			stateName = "HideProgress",
			condition = function ( menu, element, event )
				return CoD.WeaponOptionsUtility.ShouldHideWeaponOptionProgress( menu, self, f1_arg1 ) and not CoD.WeaponOptionsUtility.IsCamoBuyable( menu, self, f1_arg1 )
			end
		},
		{
			stateName = "Locked",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualTo( element, f1_arg1, "weaponOptionCategory", "active" ) and CoD.WeaponOptionsUtility.IsItemWeaponOptionLocked( menu, element, f1_arg1 )
			end
		},
		{
			stateName = "UnlockedReveal",
			condition = function ( menu, element, event )
				return CoD.WeaponOptionsUtility.IsWeaponOptionInfoUnlockedAndRevealed( menu, element, f1_arg1 )
			end
		},
		{
			stateName = "Unlocked",
			condition = function ( menu, element, event )
				local f12_local0 --[[ @ 0]]
				if not CoD.WeaponOptionsUtility.IsItemWeaponOptionLocked( menu, self, f1_arg1 ) then
					f12_local0 = not CoD.WeaponOptionsUtility.IsItemWeaponOptionCamoWrapped( menu, element, f1_arg1 ) --[[ @ 0]]
				else
					f12_local0 = false --[[ @ 0]]
				end
				return f12_local0
			end
		},
		{
			stateName = "BuyableHideProgress",
			condition = function ( menu, element, event )
				return CoD.WeaponOptionsUtility.ShouldHideWeaponOptionProgress( menu, self, f1_arg1 ) and CoD.WeaponOptionsUtility.IsCamoBuyable( menu, self, f1_arg1 )
			end
		},
		{
			stateName = "BuyableInsufficientFunds",
			condition = function ( menu, element, event )
				return CoD.WeaponOptionsUtility.IsWarzoneCamoFilter( menu, self, f1_arg1 ) and not CoD.WeaponOptionsUtility.CanPurchasePaintCanCamo( element, f1_arg1 )
			end
		},
		{
			stateName = "Buyable",
			condition = function ( menu, element, event )
				return CoD.WeaponOptionsUtility.IsWarzoneCamoFilter( menu, self, f1_arg1 )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "weaponOptionCategory", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "weaponOptionCategory"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:linkToElementModel( self, "itemIndex", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "itemIndex"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local f1_local13 = self --[[ @ 0]]
	local f1_local14 = self.subscribeToModel --[[ @ 0]]
	local f1_local15 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local14( f1_local13, f1_local15["WeaponPersonalization.listUpdate"], function ( f18_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f18_arg0:get(),
			modelName = "WeaponPersonalization.listUpdate"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:linkToElementModel( self, "unlockProgressAndTarget", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "unlockProgressAndTarget"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	f1_local13 = self --[[ @ 0]]
	f1_local14 = self.subscribeToModel --[[ @ 0]]
	f1_local15 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local14( f1_local13, f1_local15.paintCanCount, function ( f20_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f20_arg0:get(),
			modelName = "paintCanCount"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.WeaponOptionInfoInternal.__resetProperties = function ( f21_arg0 )
	f21_arg0.UnlockProgress:completeAnimation() --[[ @ 0]]
	f21_arg0.UnlockProgressBar:completeAnimation() --[[ @ 0]]
	f21_arg0.UnlockProgressBarBG:completeAnimation() --[[ @ 0]]
	f21_arg0.DotTiledBacking:completeAnimation() --[[ @ 0]]
	f21_arg0.FramePlaceLeft:completeAnimation() --[[ @ 0]]
	f21_arg0.FramePlaceRight:completeAnimation() --[[ @ 0]]
	f21_arg0.UnlockBonusAndXPIcon:completeAnimation() --[[ @ 0]]
	f21_arg0.UnlockDescription:completeAnimation() --[[ @ 0]]
	f21_arg0.Description:completeAnimation() --[[ @ 0]]
	f21_arg0.PaintCanCost:completeAnimation() --[[ @ 0]]
	f21_arg0.InsufficientFundsDesc:completeAnimation() --[[ @ 0]]
	f21_arg0.UnlockProgress:setAlpha( 1 ) --[[ @ 0]]
	f21_arg0.UnlockProgressBar:setAlpha( 1 ) --[[ @ 0]]
	f21_arg0.UnlockProgressBarBG:setAlpha( 1 ) --[[ @ 0]]
	f21_arg0.DotTiledBacking:setAlpha( 0.33 ) --[[ @ 0]]
	f21_arg0.FramePlaceLeft:setAlpha( 0.04 ) --[[ @ 0]]
	f21_arg0.FramePlaceRight:setAlpha( 0.04 ) --[[ @ 0]]
	f21_arg0.UnlockBonusAndXPIcon.XPIcon:setAlpha( 1 ) --[[ @ 0]]
	f21_arg0.UnlockDescription:setLeftRight( 0, 0, 0, 481 ) --[[ @ 0]]
	f21_arg0.UnlockDescription:setTopBottom( 0.5, 0.5, 9, 27 ) --[[ @ 0]]
	f21_arg0.UnlockDescription:setAlpha( 1 ) --[[ @ 0]]
	f21_arg0.Description:setAlpha( 0 ) --[[ @ 0]]
	f21_arg0.PaintCanCost:setAlpha( 0 ) --[[ @ 0]]
	f21_arg0.InsufficientFundsDesc:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.WeaponOptionInfoInternal.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f22_arg0, f22_arg1 )
			f22_arg0:__resetProperties() --[[ @ 0]]
			f22_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	HideProgressDesc = {
		DefaultClip = function ( f23_arg0, f23_arg1 )
			f23_arg0:__resetProperties() --[[ @ 0]]
			f23_arg0:setupElementClipCounter( 8 ) --[[ @ 0]]
			f23_arg0.DotTiledBacking:completeAnimation() --[[ @ 0]]
			f23_arg0.DotTiledBacking:setAlpha( 0 ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.DotTiledBacking ) --[[ @ 0]]
			f23_arg0.UnlockProgressBarBG:completeAnimation() --[[ @ 0]]
			f23_arg0.UnlockProgressBarBG:setAlpha( 0 ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.UnlockProgressBarBG ) --[[ @ 0]]
			f23_arg0.UnlockProgressBar:completeAnimation() --[[ @ 0]]
			f23_arg0.UnlockProgressBar:setAlpha( 0 ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.UnlockProgressBar ) --[[ @ 0]]
			f23_arg0.UnlockProgress:completeAnimation() --[[ @ 0]]
			f23_arg0.UnlockProgress:setAlpha( 0 ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.UnlockProgress ) --[[ @ 0]]
			f23_arg0.UnlockDescription:completeAnimation() --[[ @ 0]]
			f23_arg0.UnlockDescription:setAlpha( 0 ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.UnlockDescription ) --[[ @ 0]]
			f23_arg0.UnlockBonusAndXPIcon:completeAnimation() --[[ @ 0]]
			f23_arg0.UnlockBonusAndXPIcon.XPIcon:completeAnimation() --[[ @ 0]]
			f23_arg0.UnlockBonusAndXPIcon.XPIcon:setAlpha( 0 ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.UnlockBonusAndXPIcon ) --[[ @ 0]]
			f23_arg0.FramePlaceLeft:completeAnimation() --[[ @ 0]]
			f23_arg0.FramePlaceLeft:setAlpha( 0 ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.FramePlaceLeft ) --[[ @ 0]]
			f23_arg0.FramePlaceRight:completeAnimation() --[[ @ 0]]
			f23_arg0.FramePlaceRight:setAlpha( 0 ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.FramePlaceRight ) --[[ @ 0]]
		end
	},
	HideProgress = {
		DefaultClip = function ( f24_arg0, f24_arg1 )
			f24_arg0:__resetProperties() --[[ @ 0]]
			f24_arg0:setupElementClipCounter( 7 ) --[[ @ 0]]
			f24_arg0.DotTiledBacking:completeAnimation() --[[ @ 0]]
			f24_arg0.DotTiledBacking:setAlpha( 0 ) --[[ @ 0]]
			f24_arg0.clipFinished( f24_arg0.DotTiledBacking ) --[[ @ 0]]
			f24_arg0.UnlockProgressBarBG:completeAnimation() --[[ @ 0]]
			f24_arg0.UnlockProgressBarBG:setAlpha( 0 ) --[[ @ 0]]
			f24_arg0.clipFinished( f24_arg0.UnlockProgressBarBG ) --[[ @ 0]]
			f24_arg0.UnlockProgressBar:completeAnimation() --[[ @ 0]]
			f24_arg0.UnlockProgressBar:setAlpha( 0 ) --[[ @ 0]]
			f24_arg0.clipFinished( f24_arg0.UnlockProgressBar ) --[[ @ 0]]
			f24_arg0.UnlockProgress:completeAnimation() --[[ @ 0]]
			f24_arg0.UnlockProgress:setAlpha( 0 ) --[[ @ 0]]
			f24_arg0.clipFinished( f24_arg0.UnlockProgress ) --[[ @ 0]]
			f24_arg0.UnlockBonusAndXPIcon:completeAnimation() --[[ @ 0]]
			f24_arg0.UnlockBonusAndXPIcon.XPIcon:completeAnimation() --[[ @ 0]]
			f24_arg0.UnlockBonusAndXPIcon.XPIcon:setAlpha( 0 ) --[[ @ 0]]
			f24_arg0.clipFinished( f24_arg0.UnlockBonusAndXPIcon ) --[[ @ 0]]
			f24_arg0.FramePlaceLeft:completeAnimation() --[[ @ 0]]
			f24_arg0.FramePlaceLeft:setAlpha( 0 ) --[[ @ 0]]
			f24_arg0.clipFinished( f24_arg0.FramePlaceLeft ) --[[ @ 0]]
			f24_arg0.FramePlaceRight:completeAnimation() --[[ @ 0]]
			f24_arg0.FramePlaceRight:setAlpha( 0 ) --[[ @ 0]]
			f24_arg0.clipFinished( f24_arg0.FramePlaceRight ) --[[ @ 0]]
		end
	},
	Locked = {
		DefaultClip = function ( f25_arg0, f25_arg1 )
			f25_arg0:__resetProperties() --[[ @ 0]]
			f25_arg0:setupElementClipCounter( 8 ) --[[ @ 0]]
			f25_arg0.DotTiledBacking:completeAnimation() --[[ @ 0]]
			f25_arg0.DotTiledBacking:setAlpha( 0 ) --[[ @ 0]]
			f25_arg0.clipFinished( f25_arg0.DotTiledBacking ) --[[ @ 0]]
			f25_arg0.UnlockProgressBarBG:completeAnimation() --[[ @ 0]]
			f25_arg0.UnlockProgressBarBG:setAlpha( 0 ) --[[ @ 0]]
			f25_arg0.clipFinished( f25_arg0.UnlockProgressBarBG ) --[[ @ 0]]
			f25_arg0.UnlockProgressBar:completeAnimation() --[[ @ 0]]
			f25_arg0.UnlockProgressBar:setAlpha( 0 ) --[[ @ 0]]
			f25_arg0.clipFinished( f25_arg0.UnlockProgressBar ) --[[ @ 0]]
			f25_arg0.UnlockProgress:completeAnimation() --[[ @ 0]]
			f25_arg0.UnlockProgress:setAlpha( 0 ) --[[ @ 0]]
			f25_arg0.clipFinished( f25_arg0.UnlockProgress ) --[[ @ 0]]
			f25_arg0.UnlockDescription:completeAnimation() --[[ @ 0]]
			f25_arg0.UnlockDescription:setAlpha( 1 ) --[[ @ 0]]
			f25_arg0.clipFinished( f25_arg0.UnlockDescription ) --[[ @ 0]]
			f25_arg0.UnlockBonusAndXPIcon:completeAnimation() --[[ @ 0]]
			f25_arg0.UnlockBonusAndXPIcon.XPIcon:completeAnimation() --[[ @ 0]]
			f25_arg0.UnlockBonusAndXPIcon.XPIcon:setAlpha( 0 ) --[[ @ 0]]
			f25_arg0.clipFinished( f25_arg0.UnlockBonusAndXPIcon ) --[[ @ 0]]
			f25_arg0.FramePlaceLeft:completeAnimation() --[[ @ 0]]
			f25_arg0.FramePlaceLeft:setAlpha( 0 ) --[[ @ 0]]
			f25_arg0.clipFinished( f25_arg0.FramePlaceLeft ) --[[ @ 0]]
			f25_arg0.FramePlaceRight:completeAnimation() --[[ @ 0]]
			f25_arg0.FramePlaceRight:setAlpha( 0 ) --[[ @ 0]]
			f25_arg0.clipFinished( f25_arg0.FramePlaceRight ) --[[ @ 0]]
		end
	},
	UnlockedReveal = {
		DefaultClip = function ( f26_arg0, f26_arg1 )
			f26_arg0:__resetProperties() --[[ @ 0]]
			f26_arg0:setupElementClipCounter( 9 ) --[[ @ 0]]
			f26_arg0.DotTiledBacking:completeAnimation() --[[ @ 0]]
			f26_arg0.DotTiledBacking:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.DotTiledBacking ) --[[ @ 0]]
			f26_arg0.UnlockProgressBarBG:completeAnimation() --[[ @ 0]]
			f26_arg0.UnlockProgressBarBG:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.UnlockProgressBarBG ) --[[ @ 0]]
			f26_arg0.UnlockProgressBar:completeAnimation() --[[ @ 0]]
			f26_arg0.UnlockProgressBar:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.UnlockProgressBar ) --[[ @ 0]]
			f26_arg0.UnlockProgress:completeAnimation() --[[ @ 0]]
			f26_arg0.UnlockProgress:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.UnlockProgress ) --[[ @ 0]]
			f26_arg0.Description:completeAnimation() --[[ @ 0]]
			f26_arg0.Description:setAlpha( 1 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.Description ) --[[ @ 0]]
			f26_arg0.UnlockDescription:completeAnimation() --[[ @ 0]]
			f26_arg0.UnlockDescription:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.UnlockDescription ) --[[ @ 0]]
			f26_arg0.UnlockBonusAndXPIcon:completeAnimation() --[[ @ 0]]
			f26_arg0.UnlockBonusAndXPIcon.XPIcon:completeAnimation() --[[ @ 0]]
			f26_arg0.UnlockBonusAndXPIcon.XPIcon:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.UnlockBonusAndXPIcon ) --[[ @ 0]]
			f26_arg0.FramePlaceLeft:completeAnimation() --[[ @ 0]]
			f26_arg0.FramePlaceLeft:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.FramePlaceLeft ) --[[ @ 0]]
			f26_arg0.FramePlaceRight:completeAnimation() --[[ @ 0]]
			f26_arg0.FramePlaceRight:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.FramePlaceRight ) --[[ @ 0]]
		end
	},
	Unlocked = {
		DefaultClip = function ( f27_arg0, f27_arg1 )
			f27_arg0:__resetProperties() --[[ @ 0]]
			f27_arg0:setupElementClipCounter( 9 ) --[[ @ 0]]
			f27_arg0.DotTiledBacking:completeAnimation() --[[ @ 0]]
			f27_arg0.DotTiledBacking:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.DotTiledBacking ) --[[ @ 0]]
			f27_arg0.UnlockProgressBarBG:completeAnimation() --[[ @ 0]]
			f27_arg0.UnlockProgressBarBG:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.UnlockProgressBarBG ) --[[ @ 0]]
			f27_arg0.UnlockProgressBar:completeAnimation() --[[ @ 0]]
			f27_arg0.UnlockProgressBar:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.UnlockProgressBar ) --[[ @ 0]]
			f27_arg0.UnlockProgress:completeAnimation() --[[ @ 0]]
			f27_arg0.UnlockProgress:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.UnlockProgress ) --[[ @ 0]]
			f27_arg0.Description:completeAnimation() --[[ @ 0]]
			f27_arg0.Description:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.Description ) --[[ @ 0]]
			f27_arg0.UnlockDescription:completeAnimation() --[[ @ 0]]
			f27_arg0.UnlockDescription:setAlpha( 1 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.UnlockDescription ) --[[ @ 0]]
			f27_arg0.UnlockBonusAndXPIcon:completeAnimation() --[[ @ 0]]
			f27_arg0.UnlockBonusAndXPIcon.XPIcon:completeAnimation() --[[ @ 0]]
			f27_arg0.UnlockBonusAndXPIcon.XPIcon:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.UnlockBonusAndXPIcon ) --[[ @ 0]]
			f27_arg0.FramePlaceLeft:completeAnimation() --[[ @ 0]]
			f27_arg0.FramePlaceLeft:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.FramePlaceLeft ) --[[ @ 0]]
			f27_arg0.FramePlaceRight:completeAnimation() --[[ @ 0]]
			f27_arg0.FramePlaceRight:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.FramePlaceRight ) --[[ @ 0]]
		end
	},
	BuyableHideProgress = {
		DefaultClip = function ( f28_arg0, f28_arg1 )
			f28_arg0:__resetProperties() --[[ @ 0]]
			f28_arg0:setupElementClipCounter( 9 ) --[[ @ 0]]
			f28_arg0.DotTiledBacking:completeAnimation() --[[ @ 0]]
			f28_arg0.DotTiledBacking:setAlpha( 0 ) --[[ @ 0]]
			f28_arg0.clipFinished( f28_arg0.DotTiledBacking ) --[[ @ 0]]
			f28_arg0.UnlockProgressBarBG:completeAnimation() --[[ @ 0]]
			f28_arg0.UnlockProgressBarBG:setAlpha( 0 ) --[[ @ 0]]
			f28_arg0.clipFinished( f28_arg0.UnlockProgressBarBG ) --[[ @ 0]]
			f28_arg0.UnlockProgressBar:completeAnimation() --[[ @ 0]]
			f28_arg0.UnlockProgressBar:setAlpha( 0 ) --[[ @ 0]]
			f28_arg0.clipFinished( f28_arg0.UnlockProgressBar ) --[[ @ 0]]
			f28_arg0.UnlockProgress:completeAnimation() --[[ @ 0]]
			f28_arg0.UnlockProgress:setAlpha( 0 ) --[[ @ 0]]
			f28_arg0.clipFinished( f28_arg0.UnlockProgress ) --[[ @ 0]]
			f28_arg0.UnlockDescription:completeAnimation() --[[ @ 0]]
			f28_arg0.UnlockDescription:setLeftRight( 0, 0, 0, 481 ) --[[ @ 0]]
			f28_arg0.UnlockDescription:setTopBottom( 0.5, 0.5, 33, 51 ) --[[ @ 0]]
			f28_arg0.clipFinished( f28_arg0.UnlockDescription ) --[[ @ 0]]
			f28_arg0.UnlockBonusAndXPIcon:completeAnimation() --[[ @ 0]]
			f28_arg0.UnlockBonusAndXPIcon.XPIcon:completeAnimation() --[[ @ 0]]
			f28_arg0.UnlockBonusAndXPIcon.XPIcon:setAlpha( 0 ) --[[ @ 0]]
			f28_arg0.clipFinished( f28_arg0.UnlockBonusAndXPIcon ) --[[ @ 0]]
			f28_arg0.FramePlaceLeft:completeAnimation() --[[ @ 0]]
			f28_arg0.FramePlaceLeft:setAlpha( 0 ) --[[ @ 0]]
			f28_arg0.clipFinished( f28_arg0.FramePlaceLeft ) --[[ @ 0]]
			f28_arg0.FramePlaceRight:completeAnimation() --[[ @ 0]]
			f28_arg0.FramePlaceRight:setAlpha( 0 ) --[[ @ 0]]
			f28_arg0.clipFinished( f28_arg0.FramePlaceRight ) --[[ @ 0]]
			f28_arg0.PaintCanCost:completeAnimation() --[[ @ 0]]
			f28_arg0.PaintCanCost:setAlpha( 1 ) --[[ @ 0]]
			f28_arg0.clipFinished( f28_arg0.PaintCanCost ) --[[ @ 0]]
		end
	},
	BuyableInsufficientFunds = {
		DefaultClip = function ( f29_arg0, f29_arg1 )
			f29_arg0:__resetProperties() --[[ @ 0]]
			f29_arg0:setupElementClipCounter( 10 ) --[[ @ 0]]
			f29_arg0.DotTiledBacking:completeAnimation() --[[ @ 0]]
			f29_arg0.DotTiledBacking:setAlpha( 0 ) --[[ @ 0]]
			f29_arg0.clipFinished( f29_arg0.DotTiledBacking ) --[[ @ 0]]
			f29_arg0.UnlockProgressBarBG:completeAnimation() --[[ @ 0]]
			f29_arg0.UnlockProgressBarBG:setAlpha( 0 ) --[[ @ 0]]
			f29_arg0.clipFinished( f29_arg0.UnlockProgressBarBG ) --[[ @ 0]]
			f29_arg0.UnlockProgressBar:completeAnimation() --[[ @ 0]]
			f29_arg0.UnlockProgressBar:setAlpha( 0 ) --[[ @ 0]]
			f29_arg0.clipFinished( f29_arg0.UnlockProgressBar ) --[[ @ 0]]
			f29_arg0.UnlockProgress:completeAnimation() --[[ @ 0]]
			f29_arg0.UnlockProgress:setAlpha( 0 ) --[[ @ 0]]
			f29_arg0.clipFinished( f29_arg0.UnlockProgress ) --[[ @ 0]]
			f29_arg0.UnlockDescription:completeAnimation() --[[ @ 0]]
			f29_arg0.UnlockDescription:setTopBottom( 0.5, 0.5, 33, 51 ) --[[ @ 0]]
			f29_arg0.UnlockDescription:setAlpha( 1 ) --[[ @ 0]]
			f29_arg0.clipFinished( f29_arg0.UnlockDescription ) --[[ @ 0]]
			f29_arg0.InsufficientFundsDesc:completeAnimation() --[[ @ 0]]
			f29_arg0.InsufficientFundsDesc:setAlpha( 1 ) --[[ @ 0]]
			f29_arg0.clipFinished( f29_arg0.InsufficientFundsDesc ) --[[ @ 0]]
			f29_arg0.UnlockBonusAndXPIcon:completeAnimation() --[[ @ 0]]
			f29_arg0.UnlockBonusAndXPIcon.XPIcon:completeAnimation() --[[ @ 0]]
			f29_arg0.UnlockBonusAndXPIcon.XPIcon:setAlpha( 0 ) --[[ @ 0]]
			f29_arg0.clipFinished( f29_arg0.UnlockBonusAndXPIcon ) --[[ @ 0]]
			f29_arg0.FramePlaceLeft:completeAnimation() --[[ @ 0]]
			f29_arg0.FramePlaceLeft:setAlpha( 0 ) --[[ @ 0]]
			f29_arg0.clipFinished( f29_arg0.FramePlaceLeft ) --[[ @ 0]]
			f29_arg0.FramePlaceRight:completeAnimation() --[[ @ 0]]
			f29_arg0.FramePlaceRight:setAlpha( 0 ) --[[ @ 0]]
			f29_arg0.clipFinished( f29_arg0.FramePlaceRight ) --[[ @ 0]]
			f29_arg0.PaintCanCost:completeAnimation() --[[ @ 0]]
			f29_arg0.PaintCanCost:setAlpha( 1 ) --[[ @ 0]]
			f29_arg0.clipFinished( f29_arg0.PaintCanCost ) --[[ @ 0]]
		end
	},
	Buyable = {
		DefaultClip = function ( f30_arg0, f30_arg1 )
			f30_arg0:__resetProperties() --[[ @ 0]]
			f30_arg0:setupElementClipCounter( 9 ) --[[ @ 0]]
			f30_arg0.DotTiledBacking:completeAnimation() --[[ @ 0]]
			f30_arg0.DotTiledBacking:setAlpha( 0 ) --[[ @ 0]]
			f30_arg0.clipFinished( f30_arg0.DotTiledBacking ) --[[ @ 0]]
			f30_arg0.UnlockProgressBarBG:completeAnimation() --[[ @ 0]]
			f30_arg0.UnlockProgressBarBG:setAlpha( 0 ) --[[ @ 0]]
			f30_arg0.clipFinished( f30_arg0.UnlockProgressBarBG ) --[[ @ 0]]
			f30_arg0.UnlockProgressBar:completeAnimation() --[[ @ 0]]
			f30_arg0.UnlockProgressBar:setAlpha( 0 ) --[[ @ 0]]
			f30_arg0.clipFinished( f30_arg0.UnlockProgressBar ) --[[ @ 0]]
			f30_arg0.UnlockProgress:completeAnimation() --[[ @ 0]]
			f30_arg0.UnlockProgress:setAlpha( 0 ) --[[ @ 0]]
			f30_arg0.clipFinished( f30_arg0.UnlockProgress ) --[[ @ 0]]
			f30_arg0.UnlockDescription:completeAnimation() --[[ @ 0]]
			f30_arg0.UnlockDescription:setAlpha( 0 ) --[[ @ 0]]
			f30_arg0.clipFinished( f30_arg0.UnlockDescription ) --[[ @ 0]]
			f30_arg0.UnlockBonusAndXPIcon:completeAnimation() --[[ @ 0]]
			f30_arg0.UnlockBonusAndXPIcon.XPIcon:completeAnimation() --[[ @ 0]]
			f30_arg0.UnlockBonusAndXPIcon.XPIcon:setAlpha( 0 ) --[[ @ 0]]
			f30_arg0.clipFinished( f30_arg0.UnlockBonusAndXPIcon ) --[[ @ 0]]
			f30_arg0.FramePlaceLeft:completeAnimation() --[[ @ 0]]
			f30_arg0.FramePlaceLeft:setAlpha( 0 ) --[[ @ 0]]
			f30_arg0.clipFinished( f30_arg0.FramePlaceLeft ) --[[ @ 0]]
			f30_arg0.FramePlaceRight:completeAnimation() --[[ @ 0]]
			f30_arg0.FramePlaceRight:setAlpha( 0 ) --[[ @ 0]]
			f30_arg0.clipFinished( f30_arg0.FramePlaceRight ) --[[ @ 0]]
			f30_arg0.PaintCanCost:completeAnimation() --[[ @ 0]]
			f30_arg0.PaintCanCost:setAlpha( 1 ) --[[ @ 0]]
			f30_arg0.clipFinished( f30_arg0.PaintCanCost ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.WeaponOptionInfoInternal.__onClose = function ( f31_arg0 )
	f31_arg0.DotTiledBacking:close() --[[ @ 0]]
	f31_arg0.UnlockProgressBar:close() --[[ @ 0]]
	f31_arg0.UnlockProgress:close() --[[ @ 0]]
	f31_arg0.Description:close() --[[ @ 0]]
	f31_arg0.UnlockDescription:close() --[[ @ 0]]
	f31_arg0.UnlockBonusAndXPIcon:close() --[[ @ 0]]
	f31_arg0.Divider:close() --[[ @ 0]]
	f31_arg0.PaintCanCost:close() --[[ @ 0]]
end
 --[[ @ 0]]
