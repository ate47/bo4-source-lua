-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:51
require( "ui/uieditor/widgets/cac/menuchooseclass/itemwidgets/itemhinttext" ) --[[ @ 0]]
require( "ui/uieditor/widgets/cac/weaponselect/weaponselectgriditeminternal" ) --[[ @ 0]]

CoD.SignatureWeaponGridItem = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.SignatureWeaponGridItem.__defaultWidth = 274 --[[ @ 0]]
CoD.SignatureWeaponGridItem.__defaultHeight = 126 --[[ @ 0]]
CoD.SignatureWeaponGridItem.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.SignatureWeaponGridItem ) --[[ @ 0]]
	self.id = "SignatureWeaponGridItem" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local WeaponSelectGridItemInternal = CoD.WeaponSelectGridItemInternal.new( f1_arg0, f1_arg1, 0, 0, 0, 274, 0, 0, 0, 126 ) --[[ @ 0]]
	WeaponSelectGridItemInternal:mergeStateConditions( {
		{
			stateName = "LootNotOwned",
			condition = function ( menu, element, event )
				return not CoD.ModelUtility.IsSelfModelValueTrue( self, f1_arg1, "owned" )
			end
		},
		{
			stateName = "Equipped",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg1, "selected" )
			end
		},
		{
			stateName = "Locked",
			condition = function ( menu, element, event )
				return CoD.CACUtility.IsSignatureWeaponLockedByProgression( menu, self, f1_arg1 )
			end
		},
		{
			stateName = "New",
			condition = function ( menu, element, event )
				return CoD.BreadcrumbUtility.IsSignatureWeaponNew( menu, element, f1_arg1 )
			end
		}
	} ) --[[ @ 0]]
	WeaponSelectGridItemInternal:linkToElementModel( WeaponSelectGridItemInternal, "owned", true, function ( model )
		f1_arg0:updateElementState( WeaponSelectGridItemInternal, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "owned"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	WeaponSelectGridItemInternal:linkToElementModel( WeaponSelectGridItemInternal, "selected", true, function ( model )
		f1_arg0:updateElementState( WeaponSelectGridItemInternal, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "selected"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	WeaponSelectGridItemInternal:linkToElementModel( WeaponSelectGridItemInternal, "itemIndex", true, function ( model )
		f1_arg0:updateElementState( WeaponSelectGridItemInternal, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "itemIndex"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	WeaponSelectGridItemInternal:linkToElementModel( WeaponSelectGridItemInternal, "weaponNameHash", true, function ( model )
		f1_arg0:updateElementState( WeaponSelectGridItemInternal, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "weaponNameHash"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	WeaponSelectGridItemInternal:linkToElementModel( WeaponSelectGridItemInternal, "weaponModelSlotIndex", true, function ( model )
		f1_arg0:updateElementState( WeaponSelectGridItemInternal, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "weaponModelSlotIndex"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	WeaponSelectGridItemInternal.WeaponLevel:setAlpha( 0 ) --[[ @ 0]]
	WeaponSelectGridItemInternal:linkToElementModel( self, nil, false, function ( model )
		WeaponSelectGridItemInternal:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	WeaponSelectGridItemInternal:linkToElementModel( self, "displayImage", true, function ( model )
		local f12_local0 = model:get() --[[ @ 0]]
		if f12_local0 ~= nil then
			WeaponSelectGridItemInternal.WeaponImage:setImage( CoD.BaseUtility.AlreadyRegistered( f12_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	WeaponSelectGridItemInternal:linkToElementModel( self, "displayName", true, function ( model )
		local f13_local0 = model:get() --[[ @ 0]]
		if f13_local0 ~= nil then
			WeaponSelectGridItemInternal.WeaponName.WeaponName:setText( LocalizeToUpperString( f13_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	WeaponSelectGridItemInternal:registerEventHandler( "lose_focus", function ( element, event )
		local f14_local0 = nil --[[ @ 0]]
		if element.loseFocus then
			f14_local0 = element:loseFocus( event ) --[[ @ 0]]
		elseif element.super.loseFocus then
			f14_local0 = element.super:loseFocus( event ) --[[ @ 0]]
		end
		CoD.BreadcrumbUtility.SetSignatureWeaponAsOld( f1_arg0, element, f1_arg1 ) --[[ @ 0]]
		UpdateElementState( self, "WeaponSelectGridItemInternal", f1_arg1 ) --[[ @ 0]]
		return f14_local0
	end ) --[[ @ 0]]
	WeaponSelectGridItemInternal:registerEventHandler( "gain_focus", function ( element, event )
		local f15_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f15_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f15_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		if CoD.CACUtility.IsMark2Weapon( f1_arg1, self ) then
			SetControllerModelValue( f1_arg1, "hudItems.previewingMK2Weapon", 1 ) --[[ @ 0]]
		else
			SetControllerModelValue( f1_arg1, "hudItems.previewingMK2Weapon", 0 ) --[[ @ 0]]
		end
		return f15_local0
	end ) --[[ @ 0]]
	self:addElement( WeaponSelectGridItemInternal ) --[[ @ 0]]
	self.WeaponSelectGridItemInternal = WeaponSelectGridItemInternal --[[ @ 0]]
	
	local MastercraftDetailsHintText = CoD.ItemHintText.new( f1_arg0, f1_arg1, 0.5, 0.5, -146, 146, 0, 0, 146, 191 ) --[[ @ 0]]
	MastercraftDetailsHintText:mergeStateConditions( {
		{
			stateName = "NoHintText",
			condition = function ( menu, element, event )
				return not CoD.ModelUtility.IsSelfModelValueNonEmptyString( element, f1_arg1, "ref" )
			end
		}
	} ) --[[ @ 0]]
	MastercraftDetailsHintText:appendEventHandler( "input_source_changed", function ( f17_arg0, f17_arg1 )
		f17_arg1.menu = f17_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( MastercraftDetailsHintText, f17_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local f1_local3 = MastercraftDetailsHintText --[[ @ 0]]
	local f1_local4 = MastercraftDetailsHintText.subscribeToModel --[[ @ 0]]
	local f1_local5 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local4( f1_local3, f1_local5.LastInput, function ( f18_arg0 )
		f1_arg0:updateElementState( MastercraftDetailsHintText, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f18_arg0:get(),
			modelName = "LastInput"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	MastercraftDetailsHintText:linkToElementModel( MastercraftDetailsHintText, "ref", true, function ( model )
		f1_arg0:updateElementState( MastercraftDetailsHintText, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "ref"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	MastercraftDetailsHintText:setAlpha( 0 ) --[[ @ 0]]
	MastercraftDetailsHintText.textCenterAlign:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"menu/details_button" ) ) --[[ @ 0]]
	MastercraftDetailsHintText:linkToElementModel( self, nil, false, function ( model )
		MastercraftDetailsHintText:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( MastercraftDetailsHintText ) --[[ @ 0]]
	self.MastercraftDetailsHintText = MastercraftDetailsHintText --[[ @ 0]]
	
	WeaponSelectGridItemInternal.id = "WeaponSelectGridItemInternal" --[[ @ 0]]
	self.__defaultFocus = WeaponSelectGridItemInternal --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.SignatureWeaponGridItem.__resetProperties = function ( f21_arg0 )
	f21_arg0.MastercraftDetailsHintText:completeAnimation() --[[ @ 0]]
	f21_arg0.MastercraftDetailsHintText:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.SignatureWeaponGridItem.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f22_arg0, f22_arg1 )
			f22_arg0:__resetProperties() --[[ @ 0]]
			f22_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end,
		ChildFocus = function ( f23_arg0, f23_arg1 )
			f23_arg0:__resetProperties() --[[ @ 0]]
			f23_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f23_arg0.MastercraftDetailsHintText:completeAnimation() --[[ @ 0]]
			f23_arg0.MastercraftDetailsHintText:setAlpha( 1 ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.MastercraftDetailsHintText ) --[[ @ 0]]
		end,
		GainChildFocus = function ( f24_arg0, f24_arg1 )
			f24_arg0:__resetProperties() --[[ @ 0]]
			f24_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f24_local0 = function ( f25_arg0 )
				f24_arg0.MastercraftDetailsHintText:beginAnimation( 200 ) --[[ @ 0]]
				f24_arg0.MastercraftDetailsHintText:setAlpha( 1 ) --[[ @ 0]]
				f24_arg0.MastercraftDetailsHintText:registerEventHandler( "interrupted_keyframe", f24_arg0.clipInterrupted ) --[[ @ 0]]
				f24_arg0.MastercraftDetailsHintText:registerEventHandler( "transition_complete_keyframe", f24_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f24_arg0.MastercraftDetailsHintText:completeAnimation() --[[ @ 0]]
			f24_arg0.MastercraftDetailsHintText:setAlpha( 0 ) --[[ @ 0]]
			f24_local0( f24_arg0.MastercraftDetailsHintText ) --[[ @ 0]]
		end,
		LoseChildFocus = function ( f26_arg0, f26_arg1 )
			f26_arg0:__resetProperties() --[[ @ 0]]
			f26_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f26_local0 = function ( f27_arg0 )
				f26_arg0.MastercraftDetailsHintText:beginAnimation( 200 ) --[[ @ 0]]
				f26_arg0.MastercraftDetailsHintText:setAlpha( 0 ) --[[ @ 0]]
				f26_arg0.MastercraftDetailsHintText:registerEventHandler( "interrupted_keyframe", f26_arg0.clipInterrupted ) --[[ @ 0]]
				f26_arg0.MastercraftDetailsHintText:registerEventHandler( "transition_complete_keyframe", f26_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f26_arg0.MastercraftDetailsHintText:completeAnimation() --[[ @ 0]]
			f26_arg0.MastercraftDetailsHintText:setAlpha( 1 ) --[[ @ 0]]
			f26_local0( f26_arg0.MastercraftDetailsHintText ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.SignatureWeaponGridItem.__onClose = function ( f28_arg0 )
	f28_arg0.WeaponSelectGridItemInternal:close() --[[ @ 0]]
	f28_arg0.MastercraftDetailsHintText:close() --[[ @ 0]]
end
 --[[ @ 0]]
