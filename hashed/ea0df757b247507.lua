-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:51
require( "ui/uieditor/widgets/fileshare/fullscreenpopup/fullscreenpopuptemplate" ) --[[ @ 0]]
require( "ui/uieditor/widgets/footer/footercontainer_frontend_right" ) --[[ @ 0]]

CoD.LaboratoryPlasmaConfirmation = InheritFrom( CoD.Menu ) --[[ @ 0]]
LUI.createMenu.LaboratoryPlasmaConfirmation = function ( f1_arg0, f1_arg1 )
	local self = CoD.Menu.NewForUIEditor( "LaboratoryPlasmaConfirmation", f1_arg0 ) --[[ @ 0]]
	local f1_local1 = self --[[ @ 0]]
	CoD.BaseUtility.SetModelFromUserData( f1_arg0, self, f1_arg1._model ) --[[ @ 0]]
	CoD.BaseUtility.SetPropertiesFromUserData( self, f1_arg1._properties ) --[[ @ 0]]
	SetMenuProperty( f1_local1, "__isPlasmaPurchase", true ) --[[ @ 0]]
	self:setClass( CoD.LaboratoryPlasmaConfirmation ) --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self:setOwner( f1_arg0 ) --[[ @ 0]]
	self:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	self:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	self:playSound( "menu_open", f1_arg0 ) --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	
	local FullscreenPopupTemplate = CoD.FullscreenPopupTemplate.new( f1_local1, f1_arg0, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	FullscreenPopupTemplate.ButtonList:setDataSource( "PlasmaConfirmationButtonList" ) --[[ @ 0]]
	FullscreenPopupTemplate.ErrorSubtitle:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"menu/purchase_error" ) ) --[[ @ 0]]
	FullscreenPopupTemplate.WorkingTitle:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"menu/purchase_processing" ) ) --[[ @ 0]]
	FullscreenPopupTemplate.DoneTitle:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"menu/purchase_complete" ) ) --[[ @ 0]]
	FullscreenPopupTemplate:linkToElementModel( self, nil, false, function ( model )
		FullscreenPopupTemplate:setModel( model, f1_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	FullscreenPopupTemplate:linkToElementModel( self, "price", true, function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			FullscreenPopupTemplate.Subtitle:setText( LocalizeIntoString( @"hash_44FD368063324203", f3_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	FullscreenPopupTemplate:linkToElementModel( self, "name", true, function ( model )
		local f4_local0 = model:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			FullscreenPopupTemplate.Title:setText( LocalizeIntoString( @"hash_663FCD1B0849669E", f4_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( FullscreenPopupTemplate, "setState", function ( element, controller, f5_arg2, f5_arg3, f5_arg4 )
		if IsPC() and IsElementInState( element, "FinishedState" ) then
			CoD.PCUtility.LinkPCSmallCloseButtonToInput( f1_local1, controller, element, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		elseif IsPC() then
			CoD.PCUtility.LinkPCSmallCloseButtonToInput( f1_local1, controller, element, Enum[@"luibutton"][@"lui_key_xbb_pscircle"] ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( FullscreenPopupTemplate ) --[[ @ 0]]
	self.FullscreenPopupTemplate = FullscreenPopupTemplate --[[ @ 0]]
	
	local Image = LUI.UIImage.new( 0.5, 0.5, -713, -413, 0.5, 0.5, -170.5, 129.5 ) --[[ @ 0]]
	Image:linkToElementModel( self, "icon", true, function ( model )
		local f6_local0 = model:get() --[[ @ 0]]
		if f6_local0 ~= nil then
			Image:setImage( RegisterImage( f6_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Image ) --[[ @ 0]]
	self.Image = Image --[[ @ 0]]
	
	local CostText = LUI.UIText.new( 0.5, 0.5, -679.5, -446.5, 0.5, 0.5, 142.5, 191.5 ) --[[ @ 0]]
	CostText:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_393F12745A24670F" ) ) --[[ @ 0]]
	CostText:setTTF( "default" ) --[[ @ 0]]
	CostText:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	CostText:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	self:addElement( CostText ) --[[ @ 0]]
	self.CostText = CostText --[[ @ 0]]
	
	local FooterContainerFrontendRight = CoD.FooterContainer_Frontend_Right.new( f1_local1, f1_arg0, 0, 1, 0, 0, 1, 1, -48, 0 ) --[[ @ 0]]
	FooterContainerFrontendRight:registerEventHandler( "menu_loaded", function ( element, event )
		local f7_local0 = nil --[[ @ 0]]
		if element.menuLoaded then
			f7_local0 = element:menuLoaded( event ) --[[ @ 0]]
		elseif element.super.menuLoaded then
			f7_local0 = element.super:menuLoaded( event ) --[[ @ 0]]
		end
		SizeToSafeArea( element, f1_arg0 ) --[[ @ 0]]
		if not f7_local0 then
			f7_local0 = element:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f7_local0
	end ) --[[ @ 0]]
	self:addElement( FooterContainerFrontendRight ) --[[ @ 0]]
	self.FooterContainerFrontendRight = FooterContainerFrontendRight --[[ @ 0]]
	
	self:appendEventHandler( "input_source_changed", function ( f8_arg0, f8_arg1 )
		f8_arg1.menu = f8_arg1.menu or f1_local1 --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f8_arg0, f1_local1, f1_arg0, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local f1_local6 = self --[[ @ 0]]
	local f1_local7 = self.subscribeToModel --[[ @ 0]]
	local f1_local8 = Engine[@"getmodelforcontroller"]( f1_arg0 ) --[[ @ 0]]
	f1_local7( f1_local6, f1_local8.LastInput, function ( f9_arg0, f9_arg1 )
		CoD.Menu.UpdateButtonShownState( f9_arg1, f1_local1, f1_arg0, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"luibutton"][@"lui_key_xbb_pscircle"], nil, function ( element, menu, controller, model )
		if not IsElementInState( self.FullscreenPopupTemplate, "WorkingState" ) and not IsElementInState( self.FullscreenPopupTemplate, "FinishedState" ) then
			GoBack( self, controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsElementInState( self.FullscreenPopupTemplate, "WorkingState" ) and not IsElementInState( self.FullscreenPopupTemplate, "FinishedState" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xbb_pscircle"], @"menu/back", nil, nil ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"luibutton"][@"lui_key_xba_pscross"], nil, function ( element, menu, controller, model )
		if IsElementInState( self.FullscreenPopupTemplate, "FinishedState" ) then
			GoBack( self, controller ) --[[ @ 0]]
			return true
		elseif IsElementInState( self.FullscreenPopupTemplate, "ErrorState" ) and IsGamepad( controller ) then
			GoBack( self, controller ) --[[ @ 0]]
			return true
		elseif IsPC() and IsElementInState( self.FullscreenPopupTemplate, "DefaultState" ) then
			PlaySoundAlias( "uin_points_purchase" ) --[[ @ 0]]
			SetElementWorkingStateAndPurchaseDWSKU( self.FullscreenPopupTemplate, controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsElementInState( self.FullscreenPopupTemplate, "FinishedState" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"menu/continue", nil, nil ) --[[ @ 0]]
			return true
		elseif IsElementInState( self.FullscreenPopupTemplate, "ErrorState" ) and IsGamepad( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"menu/back", nil, nil ) --[[ @ 0]]
			return true
		elseif IsPC() and IsElementInState( self.FullscreenPopupTemplate, "DefaultState" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"menu/purchase", nil, nil ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:subscribeToGlobalModel( f1_arg0, "AutoEvents", "cycled", function ( model )
		if IsElementInState( self.FullscreenPopupTemplate, "DefaultState" ) and CoD.ModelUtility.IsSelfModelValueNonEmptyString( self, f1_arg0, "offerAssetName" ) and CoD.ZMLaboratoryUtility.HasOfferExpired( self ) then
			GoBack( self, f1_arg0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	FullscreenPopupTemplate.buttons:setModel( self.buttonModel, f1_arg0 ) --[[ @ 0]]
	FullscreenPopupTemplate.buttonPC:setModel( self.buttonModel, f1_arg0 ) --[[ @ 0]]
	FullscreenPopupTemplate.id = "FullscreenPopupTemplate" --[[ @ 0]]
	FooterContainerFrontendRight:setModel( self.buttonModel, f1_arg0 ) --[[ @ 0]]
	if CoD.isPC then
		FooterContainerFrontendRight.id = "FooterContainerFrontendRight" --[[ @ 0]]
	end
	self:processEvent( {
		name = "menu_loaded",
		controller = f1_arg0
	} ) --[[ @ 0]]
	self.__defaultFocus = FullscreenPopupTemplate --[[ @ 0]]
	if CoD.isPC and (IsKeyboard( f1_arg0 ) or self.ignoreCursor) then
		self:restoreState( f1_arg0 ) --[[ @ 0]]
	end
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.LaboratoryPlasmaConfirmation.__onClose = function ( f15_arg0 )
	f15_arg0.FullscreenPopupTemplate:close() --[[ @ 0]]
	f15_arg0.Image:close() --[[ @ 0]]
	f15_arg0.FooterContainerFrontendRight:close() --[[ @ 0]]
end
 --[[ @ 0]]
