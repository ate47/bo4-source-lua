-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:49
require( "x64:6fd01a46a0e352c9" ) --[[ @ 0]]
require( "ui/uieditor/widgets/challenges/challenges_category_title" ) --[[ @ 0]]
require( "x64:79fe6ac43673588" ) --[[ @ 0]]
require( "x64:283b9fa839e546ff" ) --[[ @ 0]]

CoD.Challenges_FrameWidget_Career = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.Challenges_FrameWidget_Career.__defaultWidth = 1560 --[[ @ 0]]
CoD.Challenges_FrameWidget_Career.__defaultHeight = 780 --[[ @ 0]]
CoD.Challenges_FrameWidget_Career.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.Challenges_FrameWidget_Career ) --[[ @ 0]]
	self.id = "Challenges_FrameWidget_Career" --[[ @ 0]]
	self.soundSet = "ChooseDecal" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	
	local TitleBG = CoD.Challenges_FrameWidget_TitleBackground.new( f1_arg0, f1_arg1, 0, 0, 0, 525, 0.5, 0.5, -406, 406 ) --[[ @ 0]]
	self:addElement( TitleBG ) --[[ @ 0]]
	self.TitleBG = TitleBG --[[ @ 0]]
	
	local Title = CoD.Challenges_Category_Title.new( f1_arg0, f1_arg1, 0, 0, 112.5, 412.5, 0.5, 0.5, -300, 300 ) --[[ @ 0]]
	Title.ChallengesPercentCompleteWidgetLG.Name:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"challenge/career" ) ) --[[ @ 0]]
	Title.ChallengesPercentCompleteWidgetLG.Icon:setImage( RegisterImage( @"ui_icon_challenges_mpcareer_large" ) ) --[[ @ 0]]
	Title:subscribeToGlobalModel( f1_arg1, "ChallengesMPCategoryStats", "career", function ( model )
		Title:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( Title ) --[[ @ 0]]
	self.Title = Title --[[ @ 0]]
	
	local GameVictories = CoD.ChallengesCategoryButton.new( f1_arg0, f1_arg1, 0, 0, 555, 1555, 0, 0, 0, 100 ) --[[ @ 0]]
	GameVictories.ChallengesCategoryButtonInternal.Name:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_6832B872C3810A1D" ) ) --[[ @ 0]]
	GameVictories:subscribeToGlobalModel( f1_arg1, "ChallengesMPCategoryStats", "gamevictories", function ( model )
		GameVictories:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	GameVictories:registerEventHandler( "gain_focus", function ( element, event )
		local f4_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f4_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f4_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		return f4_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( GameVictories, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"], "ui_confirm", function ( element, menu, controller, model )
		if not IsElementInState( element, "Disabled" ) then
			SetGlobalModelValue( "challengeCategory", "gamevictories" ) --[[ @ 0]]
			PlaySoundAlias( "uin_toggle_generic" ) --[[ @ 0]]
			OpenPopup( self, "Challenges_Career", controller, nil ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsElementInState( element, "Disabled" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"menu/select", nil, "ui_confirm" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( GameVictories ) --[[ @ 0]]
	self.GameVictories = GameVictories --[[ @ 0]]
	
	local TourOfDuty = CoD.ChallengesCategoryButton.new( f1_arg0, f1_arg1, 0, 0, 555, 1555, 0, 0, 115, 215 ) --[[ @ 0]]
	TourOfDuty.ChallengesCategoryButtonInternal.Name:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_2CBFC431FF389F30" ) ) --[[ @ 0]]
	TourOfDuty:subscribeToGlobalModel( f1_arg1, "ChallengesMPCategoryStats", "tourofduty", function ( model )
		TourOfDuty:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	TourOfDuty:registerEventHandler( "gain_focus", function ( element, event )
		local f8_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f8_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f8_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		return f8_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( TourOfDuty, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"], "ui_confirm", function ( element, menu, controller, model )
		if not IsElementInState( element, "Disabled" ) then
			SetGlobalModelValue( "challengeCategory", "tourofduty" ) --[[ @ 0]]
			PlaySoundAlias( "uin_toggle_generic" ) --[[ @ 0]]
			OpenPopup( self, "Challenges_Career", controller, nil ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsElementInState( element, "Disabled" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"menu/select", nil, "ui_confirm" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( TourOfDuty ) --[[ @ 0]]
	self.TourOfDuty = TourOfDuty --[[ @ 0]]
	
	local GameHeroics = CoD.ChallengesCategoryButton.new( f1_arg0, f1_arg1, 0, 0, 555, 1555, 0, 0, 227, 327 ) --[[ @ 0]]
	GameHeroics.ChallengesCategoryButtonInternal.Name:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_41DE917BC6765D92" ) ) --[[ @ 0]]
	GameHeroics:subscribeToGlobalModel( f1_arg1, "ChallengesMPCategoryStats", "gameheroics", function ( model )
		GameHeroics:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	GameHeroics:registerEventHandler( "gain_focus", function ( element, event )
		local f12_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f12_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f12_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		return f12_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( GameHeroics, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"], "ui_confirm", function ( element, menu, controller, model )
		if not IsElementInState( element, "Disabled" ) then
			SetGlobalModelValue( "challengeCategory", "gameheroics" ) --[[ @ 0]]
			PlaySoundAlias( "uin_toggle_generic" ) --[[ @ 0]]
			OpenPopup( self, "Challenges_Career", controller, nil ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsElementInState( element, "Disabled" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"menu/select", nil, "ui_confirm" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( GameHeroics ) --[[ @ 0]]
	self.GameHeroics = GameHeroics --[[ @ 0]]
	
	local Specialized = CoD.ChallengesCategoryButton.new( f1_arg0, f1_arg1, 0, 0, 555, 1555, 0, 0, 563, 663 ) --[[ @ 0]]
	Specialized.ChallengesCategoryButtonInternal.Name:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"challenge/specialized" ) ) --[[ @ 0]]
	Specialized:subscribeToGlobalModel( f1_arg1, "ChallengesMPCategoryStats", "specialized", function ( model )
		Specialized:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	Specialized:registerEventHandler( "gain_focus", function ( element, event )
		local f16_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f16_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f16_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		return f16_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( Specialized, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"], "ui_confirm", function ( element, menu, controller, model )
		if not IsElementInState( element, "Disabled" ) then
			SetGlobalModelValue( "challengeCategory", "specialized" ) --[[ @ 0]]
			PlaySoundAlias( "uin_toggle_generic" ) --[[ @ 0]]
			OpenPopup( self, "Challenges_Career", controller, nil ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsElementInState( element, "Disabled" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"menu/select", nil, "ui_confirm" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( Specialized ) --[[ @ 0]]
	self.Specialized = Specialized --[[ @ 0]]
	
	local WeaponProficiency = CoD.ChallengesCategoryButton.new( f1_arg0, f1_arg1, 0, 0, 555, 1555, 0, 0, 340, 440 ) --[[ @ 0]]
	WeaponProficiency.ChallengesCategoryButtonInternal.Name:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_38AD60D04B9DC260" ) ) --[[ @ 0]]
	WeaponProficiency:subscribeToGlobalModel( f1_arg1, "ChallengesMPCategoryStats", "weaponproficiency", function ( model )
		WeaponProficiency:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	WeaponProficiency:registerEventHandler( "gain_focus", function ( element, event )
		local f20_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f20_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f20_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		return f20_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( WeaponProficiency, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"], "ui_confirm", function ( element, menu, controller, model )
		if not IsElementInState( element, "Disabled" ) then
			SetGlobalModelValue( "challengeCategory", "weaponproficiency" ) --[[ @ 0]]
			PlaySoundAlias( "uin_toggle_generic" ) --[[ @ 0]]
			OpenPopup( self, "Challenges_Career", controller, nil ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsElementInState( element, "Disabled" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"menu/select", nil, "ui_confirm" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( WeaponProficiency ) --[[ @ 0]]
	self.WeaponProficiency = WeaponProficiency --[[ @ 0]]
	
	local Marksman = CoD.ChallengesCategoryButton.new( f1_arg0, f1_arg1, 0, 0, 555, 1555, 0, 0, 451, 551 ) --[[ @ 0]]
	Marksman.ChallengesCategoryButtonInternal.Name:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_36DFABEBE8C8B1E1" ) ) --[[ @ 0]]
	Marksman:subscribeToGlobalModel( f1_arg1, "ChallengesMPCategoryStats", "marksman", function ( model )
		Marksman:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	Marksman:registerEventHandler( "gain_focus", function ( element, event )
		local f24_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f24_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f24_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		return f24_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( Marksman, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"], "ui_confirm", function ( element, menu, controller, model )
		if not IsElementInState( element, "Disabled" ) then
			SetGlobalModelValue( "challengeCategory", "marksman" ) --[[ @ 0]]
			PlaySoundAlias( "uin_toggle_generic" ) --[[ @ 0]]
			OpenPopup( self, "Challenges_Career", controller, nil ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsElementInState( element, "Disabled" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"menu/select", nil, "ui_confirm" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( Marksman ) --[[ @ 0]]
	self.Marksman = Marksman --[[ @ 0]]
	
	GameVictories.id = "GameVictories" --[[ @ 0]]
	TourOfDuty.id = "TourOfDuty" --[[ @ 0]]
	GameHeroics.id = "GameHeroics" --[[ @ 0]]
	Specialized.id = "Specialized" --[[ @ 0]]
	WeaponProficiency.id = "WeaponProficiency" --[[ @ 0]]
	Marksman.id = "Marksman" --[[ @ 0]]
	self.__defaultFocus = GameVictories --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.Challenges_FrameWidget_Career.__onClose = function ( f27_arg0 )
	f27_arg0.TitleBG:close() --[[ @ 0]]
	f27_arg0.Title:close() --[[ @ 0]]
	f27_arg0.GameVictories:close() --[[ @ 0]]
	f27_arg0.TourOfDuty:close() --[[ @ 0]]
	f27_arg0.GameHeroics:close() --[[ @ 0]]
	f27_arg0.Specialized:close() --[[ @ 0]]
	f27_arg0.WeaponProficiency:close() --[[ @ 0]]
	f27_arg0.Marksman:close() --[[ @ 0]]
end
 --[[ @ 0]]
