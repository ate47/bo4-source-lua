-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:50
require( "x64:2c2f840fd2528321" ) --[[ @ 0]]
require( "x64:396b29a3176ada0f" ) --[[ @ 0]]
require( "ui/uieditor/widgets/startmenu/options/startmenuoptionsmainframe" ) --[[ @ 0]]
require( "ui/uieditor/widgets/systemoverlays/systemoverlay_layout_foregroundmultilinetext" ) --[[ @ 0]]
require( "x64:3bc7ea4f891a4cca" ) --[[ @ 0]]
require( "x64:43447fe281be3ac4" ) --[[ @ 0]]

CoD.systemOverlay_SavePaintjobFrame = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.systemOverlay_SavePaintjobFrame.__defaultWidth = 1920 --[[ @ 0]]
CoD.systemOverlay_SavePaintjobFrame.__defaultHeight = 456 --[[ @ 0]]
CoD.systemOverlay_SavePaintjobFrame.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	CoD.CraftUtility.SetSlotCustomizationType( f1_arg1, Enum[@"customizationtype"][@"customization_type_paintshop_view_left"] ) --[[ @ 0]]
	CoD.CraftUtility.InvalidateWCItemRenderAction( f1_arg1 ) --[[ @ 0]]
	self:setClass( CoD.systemOverlay_SavePaintjobFrame ) --[[ @ 0]]
	self.id = "systemOverlay_SavePaintjobFrame" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	
	local Frame = CoD.StartMenuOptionsMainFrame.new( f1_arg0, f1_arg1, 0.5, 0.5, -869, -344, 0.5, 0.5, -214, 24 ) --[[ @ 0]]
	Frame:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	Frame:setAlpha( 0.04 ) --[[ @ 0]]
	self:addElement( Frame ) --[[ @ 0]]
	self.Frame = Frame --[[ @ 0]]
	
	local WCPaintjobIconExtraCamRender = LUI.UIImage.new( 0.5, 0.5, -863.5, -349.5, 0, 0, 19, 247 ) --[[ @ 0]]
	WCPaintjobIconExtraCamRender.__Paintjob_Slot_And_Index = function ( f2_arg0 )
		local f2_local0 = f2_arg0:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			WCPaintjobIconExtraCamRender:setupWCPaintjobIconExtraCamRender( GetPaintshopExtraCamParameters( f1_arg1, f2_local0 ) ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	WCPaintjobIconExtraCamRender:subscribeToGlobalModel( f1_arg1, "SelectedPaintjob", "paintjobSlot", WCPaintjobIconExtraCamRender.__Paintjob_Slot_And_Index ) --[[ @ 0]]
	WCPaintjobIconExtraCamRender.__Paintjob_Slot_And_Index_FullPath = function ()
		local f3_local0 = DataSources.SelectedPaintjob.getModel( f1_arg1 ) --[[ @ 0]]
		f3_local0 = f3_local0.paintjobSlot --[[ @ 0]]
		if f3_local0 then
			WCPaintjobIconExtraCamRender.__Paintjob_Slot_And_Index( f3_local0 ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	self:addElement( WCPaintjobIconExtraCamRender ) --[[ @ 0]]
	self.WCPaintjobIconExtraCamRender = WCPaintjobIconExtraCamRender --[[ @ 0]]
	
	local categoryTypeImage = LUI.UIImage.new( 0.5, 0.5, -377.5, -353.5, 0, 0, 22, 46 ) --[[ @ 0]]
	categoryTypeImage:setRGB( ColorSet.T8__BEIGE__HEADER.r, ColorSet.T8__BEIGE__HEADER.g, ColorSet.T8__BEIGE__HEADER.b ) --[[ @ 0]]
	categoryTypeImage:linkToElementModel( self, "categoryType", true, function ( model )
		local f4_local0 = model:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			categoryTypeImage:setImage( RegisterImage( GetCategoryIconForOverlayType( f4_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( categoryTypeImage ) --[[ @ 0]]
	self.categoryTypeImage = categoryTypeImage --[[ @ 0]]
	
	local PaintjobRenameTextBox = nil --[[ @ 0]]
	
	PaintjobRenameTextBox = CoD.EmblemRenameTextBox.new( f1_arg0, f1_arg1, 0.5, 0.5, -323, 77, 0, 0, 118, 178 ) --[[ @ 0]]
	PaintjobRenameTextBox:linkToElementModel( self, "inputText", true, function ( model )
		local f5_local0 = model:get() --[[ @ 0]]
		if f5_local0 ~= nil then
			PaintjobRenameTextBox.RenameText:setText( CoD.BaseUtility.LocalizeIfXHash( f5_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( PaintjobRenameTextBox, "childFocusLost", function ( element )
		if CoD.ModelUtility.IsControllerModelValueNonEmptyString( f1_arg1, "renameEmblemText" ) then
			SetElementState( self, element, f1_arg1, "DefaultState" ) --[[ @ 0]]
			CoD.PCUtility.PaintjobEditor_RenamePaintjob( self, f1_arg1 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( PaintjobRenameTextBox ) --[[ @ 0]]
	self.PaintjobRenameTextBox = PaintjobRenameTextBox --[[ @ 0]]
	
	local CraftAuthorInfo = nil --[[ @ 0]]
	
	CraftAuthorInfo = CoD.CraftAuthorInfo.new( f1_arg0, f1_arg1, 0.5, 0.5, 97, 447, 0, 0, 122, 222 ) --[[ @ 0]]
	CraftAuthorInfo:mergeStateConditions( {
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		}
	} ) --[[ @ 0]]
	CraftAuthorInfo:subscribeToGlobalModel( f1_arg1, "SelectedPaintjob", "createTime", function ( model )
		local f8_local0 = model:get() --[[ @ 0]]
		if f8_local0 ~= nil then
			CraftAuthorInfo.TimestampText:setText( f8_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	CraftAuthorInfo:subscribeToGlobalModel( f1_arg1, "SelectedPaintjob", "xuid", function ( model )
		local f9_local0 = model:get() --[[ @ 0]]
		if f9_local0 ~= nil then
			CraftAuthorInfo.AuthorGamertag:setupPlayerGamertag( f9_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	CraftAuthorInfo:subscribeToGlobalModel( f1_arg1, "SelectedPaintjob", "paintjobTextEntry", function ( model )
		local f10_local0 = model:get() --[[ @ 0]]
		if f10_local0 ~= nil then
			CraftAuthorInfo.EmblemName:setText( f10_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( CraftAuthorInfo ) --[[ @ 0]]
	self.CraftAuthorInfo = CraftAuthorInfo --[[ @ 0]]
	
	local optionButtons = LUI.UIList.new( f1_arg0, f1_arg1, 10, 0, nil, false, false, false, false ) --[[ @ 0]]
	optionButtons:setLeftRight( 0.5, 0.5, -323, 77 ) --[[ @ 0]]
	optionButtons:setTopBottom( 1, 1, -265, -65 ) --[[ @ 0]]
	optionButtons:setWidgetType( CoD.EmblemOptionsButton ) --[[ @ 0]]
	optionButtons:setVerticalCount( 3 ) --[[ @ 0]]
	optionButtons:setSpacing( 10 ) --[[ @ 0]]
	optionButtons:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	optionButtons:linkToElementModel( self, "listDatasource", true, function ( model )
		local f11_local0 = model:get() --[[ @ 0]]
		if f11_local0 ~= nil then
			optionButtons:setDataSource( f11_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	optionButtons:linkToElementModel( optionButtons, "disabled", true, function ( model, f12_arg1 )
		CoD.Menu.UpdateButtonShownState( f12_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	optionButtons:registerEventHandler( "gain_focus", function ( element, event )
		local f13_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f13_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f13_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		return f13_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( optionButtons, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"], "ui_confirm", function ( element, menu, controller, model )
		if not IsDisabled( element, controller ) then
			ProcessListAction( self, element, controller, menu ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsDisabled( element, controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"menu/select", nil, "ui_confirm" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( optionButtons ) --[[ @ 0]]
	self.optionButtons = optionButtons --[[ @ 0]]
	
	local f1_local7 = nil --[[ @ 0]]
	f1_local7 = LUI.UIElement.createFake() --[[ @ 0]]
	self.renameButton = f1_local7 --[[ @ 0]]
	
	local descriptionText = CoD.systemOverlay_Layout_ForegroundMultilineText.new( f1_arg0, f1_arg1, 0.5, 0.5, -324, 421, 0, 0, 51, 81 ) --[[ @ 0]]
	descriptionText:setRGB( ColorSet.T8__OFF__GRAY.r, ColorSet.T8__OFF__GRAY.g, ColorSet.T8__OFF__GRAY.b ) --[[ @ 0]]
	descriptionText:setScale( LanguageOverrideNumber( "japanese", 0.85, 1, 1 ) ) --[[ @ 0]]
	descriptionText:linkToElementModel( self, "description", true, function ( model )
		local f16_local0 = model:get() --[[ @ 0]]
		if f16_local0 ~= nil then
			descriptionText.text:setText( CoD.BaseUtility.LocalizeIfXHash( f16_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( descriptionText ) --[[ @ 0]]
	self.descriptionText = descriptionText --[[ @ 0]]
	
	local f1_local9 = nil --[[ @ 0]]
	self.nameTitle = LUI.UIElement.createFake() --[[ @ 0]]
	
	local title = LUI.UIText.new( 0.5, 0.5, -324, 948, 0, 0, 7, 52 ) --[[ @ 0]]
	title:setRGB( ColorSet.T8__BEIGE__HEADER.r, ColorSet.T8__BEIGE__HEADER.g, ColorSet.T8__BEIGE__HEADER.b ) --[[ @ 0]]
	title:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	title:setLetterSpacing( 6 ) --[[ @ 0]]
	title:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	title:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	title:linkToElementModel( self, "title", true, function ( model )
		local f17_local0 = model:get() --[[ @ 0]]
		if f17_local0 ~= nil then
			title:setText( LocalizeToUpperString( CoD.BaseUtility.LocalizeIfXHash( f17_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( title ) --[[ @ 0]]
	self.title = title --[[ @ 0]]
	
	local SlotsUsedWidget = CoD.SlotsUsedWidget.new( f1_arg0, f1_arg1, 0.5, 0.5, 97, 627, 0, 0, 305, 398 ) --[[ @ 0]]
	SlotsUsedWidget.Title.__alertText2_String_Reference = function ()
		SlotsUsedWidget.Title:setText( LocalizeToUpperString( CoD.CraftUtility.GetSlotsUsedHeader( f1_arg1 ) ) ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	SlotsUsedWidget.Title.__alertText2_String_Reference() --[[ @ 0]]
	SlotsUsedWidget:subscribeToGlobalModel( f1_arg1, "CraftSlots", "totalSlots", function ( model )
		local f19_local0 = model:get() --[[ @ 0]]
		if f19_local0 ~= nil then
			SlotsUsedWidget.Total:setText( f19_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	SlotsUsedWidget:subscribeToGlobalModel( f1_arg1, "CraftSlots", "usedSlots", function ( model )
		local f20_local0 = model:get() --[[ @ 0]]
		if f20_local0 ~= nil then
			SlotsUsedWidget.Used:setText( f20_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	SlotsUsedWidget:subscribeToGlobalModel( f1_arg1, "CraftSlots", "totalSlots", function ( model )
		local f21_local0 = model:get() --[[ @ 0]]
		if f21_local0 ~= nil then
			SlotsUsedWidget.totalBar:setShaderVector( 1, SetVectorComponent( 2, 1, CoD.GetVectorComponentFromString( f21_local0, 1 ), CoD.GetVectorComponentFromString( f21_local0, 2 ), CoD.GetVectorComponentFromString( f21_local0, 3 ), CoD.GetVectorComponentFromString( f21_local0, 4 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	SlotsUsedWidget:subscribeToGlobalModel( f1_arg1, "CraftSlots", "totalSlots", function ( model )
		local f22_local0 = model:get() --[[ @ 0]]
		if f22_local0 ~= nil then
			SlotsUsedWidget.usedBar:setShaderVector( 1, SetVectorComponent( 2, 1, CoD.GetVectorComponentFromString( f22_local0, 1 ), CoD.GetVectorComponentFromString( f22_local0, 2 ), CoD.GetVectorComponentFromString( f22_local0, 3 ), CoD.GetVectorComponentFromString( f22_local0, 4 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	SlotsUsedWidget:subscribeToGlobalModel( f1_arg1, "CraftSlots", "percent", function ( model )
		local f23_local0 = model:get() --[[ @ 0]]
		if f23_local0 ~= nil then
			SlotsUsedWidget.usedBar:setShaderVector( 2, SetVectorComponent( 4, 1, SetVectorComponent( 3, 0, SetVectorComponent( 1, 0, SwapVectorComponents( 1, 2, CoD.GetVectorComponentFromString( f23_local0, 1 ), CoD.GetVectorComponentFromString( f23_local0, 2 ), CoD.GetVectorComponentFromString( f23_local0, 3 ), CoD.GetVectorComponentFromString( f23_local0, 4 ) ) ) ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( SlotsUsedWidget ) --[[ @ 0]]
	self.SlotsUsedWidget = SlotsUsedWidget --[[ @ 0]]
	
	WCPaintjobIconExtraCamRender:linkToElementModel( self, "weaponIndex", true, WCPaintjobIconExtraCamRender.__Paintjob_Slot_And_Index_FullPath ) --[[ @ 0]]
	WCPaintjobIconExtraCamRender:linkToElementModel( self, "paintjobSlot", true, WCPaintjobIconExtraCamRender.__Paintjob_Slot_And_Index_FullPath ) --[[ @ 0]]
	local f1_local12 = SlotsUsedWidget --[[ @ 0]]
	local f1_local13 = SlotsUsedWidget.subscribeToModel --[[ @ 0]]
	local f1_local14 = DataSources.SlotCustomization.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local13( f1_local12, f1_local14.type, SlotsUsedWidget.Title.__alertText2_String_Reference ) --[[ @ 0]]
	if CoD.isPC then
		PaintjobRenameTextBox.id = "PaintjobRenameTextBox" --[[ @ 0]]
	end
	optionButtons.id = "optionButtons" --[[ @ 0]]
	f1_local7.id = "renameButton" --[[ @ 0]]
	self.__defaultFocus = optionButtons --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.systemOverlay_SavePaintjobFrame.__onClose = function ( f24_arg0 )
	f24_arg0.Frame:close() --[[ @ 0]]
	f24_arg0.WCPaintjobIconExtraCamRender:close() --[[ @ 0]]
	f24_arg0.categoryTypeImage:close() --[[ @ 0]]
	f24_arg0.PaintjobRenameTextBox:close() --[[ @ 0]]
	f24_arg0.CraftAuthorInfo:close() --[[ @ 0]]
	f24_arg0.optionButtons:close() --[[ @ 0]]
	f24_arg0.renameButton:close() --[[ @ 0]]
	f24_arg0.descriptionText:close() --[[ @ 0]]
	f24_arg0.title:close() --[[ @ 0]]
	f24_arg0.SlotsUsedWidget:close() --[[ @ 0]]
end
 --[[ @ 0]]
