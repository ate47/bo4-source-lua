-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:49
require( "x64:66733462913727bd" ) --[[ @ 0]]
require( "x64:42cd5497a304c464" ) --[[ @ 0]]
require( "x64:3de3749bfc0efb9e" ) --[[ @ 0]]
require( "x64:48c4201a81f383d5" ) --[[ @ 0]]
require( "ui/uieditor/widgets/vehiclehuds/hellstorm/vhud_hellstorm_altwidget" ) --[[ @ 0]]
require( "ui/uieditor/widgets/vehiclehuds/hellstorm/vhud_hellstorm_centerreticlewidget" ) --[[ @ 0]]
require( "ui/uieditor/widgets/vehiclehuds/hellstorm/vhud_hellstorm_speedwidget" ) --[[ @ 0]]
require( "x64:1326bf4ddf2d5186" ) --[[ @ 0]]
require( "x64:5014999ad4356466" ) --[[ @ 0]]
require( "x64:493547a1e84ec106" ) --[[ @ 0]]
require( "x64:2d24e4a6046a91b2" ) --[[ @ 0]]

CoD.vhud_attack_helicopter_reticle = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.vhud_attack_helicopter_reticle.__defaultWidth = 1920 --[[ @ 0]]
CoD.vhud_attack_helicopter_reticle.__defaultHeight = 1080 --[[ @ 0]]
CoD.vhud_attack_helicopter_reticle.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.vhud_attack_helicopter_reticle ) --[[ @ 0]]
	self.id = "vhud_attack_helicopter_reticle" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	
	local Reticle = CoD.vhud_hellstorm_CenterReticleWidget.new( f1_arg0, f1_arg1, 0.5, 0.5, -110, 110, 0.5, 0.5, -110, 110 ) --[[ @ 0]]
	Reticle:mergeStateConditions( {
		{
			stateName = "enemyInReticle",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsModelValueEqualTo( f1_arg1, "luielement.remote_missile_target_lockon.target_locked", 1 )
			end
		}
	} ) --[[ @ 0]]
	local CenterFrame = Reticle --[[ @ 0]]
	local RingL = Reticle.subscribeToModel --[[ @ 0]]
	local AltMeterL = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	RingL( CenterFrame, AltMeterL["luielement.remote_missile_target_lockon.target_locked"], function ( f3_arg0 )
		f1_arg0:updateElementState( Reticle, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f3_arg0:get(),
			modelName = "luielement.remote_missile_target_lockon.target_locked"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:addElement( Reticle ) --[[ @ 0]]
	self.Reticle = Reticle --[[ @ 0]]
	
	RingL = CoD.vhud_HellstormRing.new( f1_arg0, f1_arg1, 0.5, 0.5, -368, 368, 0.5, 0.5, -368, 368 ) --[[ @ 0]]
	RingL:setAlpha( 0.06 ) --[[ @ 0]]
	RingL:setZoom( 20 ) --[[ @ 0]]
	RingL:setScale( 0.61, 0.61 ) --[[ @ 0]]
	self:addElement( RingL ) --[[ @ 0]]
	self.RingL = RingL --[[ @ 0]]
	
	CenterFrame = CoD.vhud_HellstormCenterFrame.new( f1_arg0, f1_arg1, 0.5, 0.5, -412.5, 412.5, 0.5, 0.5, -449, 469 ) --[[ @ 0]]
	CenterFrame:setAlpha( 0.8 ) --[[ @ 0]]
	CenterFrame:setScale( 0.62, 0.62 ) --[[ @ 0]]
	self:addElement( CenterFrame ) --[[ @ 0]]
	self.CenterFrame = CenterFrame --[[ @ 0]]
	
	AltMeterL = CoD.vhud_hellstorm_AltWidget.new( f1_arg0, f1_arg1, 0, 0, 1218, 1438, 0.5, 0.5, -23, 10 ) --[[ @ 0]]
	AltMeterL:setYRot( 6 ) --[[ @ 0]]
	AltMeterL:linkToElementModel( self, nil, false, function ( model )
		AltMeterL:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( AltMeterL ) --[[ @ 0]]
	self.AltMeterL = AltMeterL --[[ @ 0]]
	
	local Speed = CoD.vhud_hellstorm_SpeedWidget.new( f1_arg0, f1_arg1, 0.5, 0.5, -110, 110, 0.5, 0.5, 163.5, 196.5 ) --[[ @ 0]]
	Speed:linkToElementModel( self, nil, false, function ( model )
		Speed:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( Speed ) --[[ @ 0]]
	self.Speed = Speed --[[ @ 0]]
	
	local RocketCounter = CoD.vhud_attack_helicopter_rocket_counter.new( f1_arg0, f1_arg1, 0, 0, 1196.5, 1346.5, 0, 0, 603.5, 703.5 ) --[[ @ 0]]
	self:addElement( RocketCounter ) --[[ @ 0]]
	self.RocketCounter = RocketCounter --[[ @ 0]]
	
	local FlareCounter = CoD.vhud_attack_helicopter_flare_counter.new( f1_arg0, f1_arg1, 0, 0, 604.5, 752.5, 0, 0, 600, 718 ) --[[ @ 0]]
	self:addElement( FlareCounter ) --[[ @ 0]]
	self.FlareCounter = FlareCounter --[[ @ 0]]
	
	local SpreadReticle = CoD.vhud_attack_helicopter_minigun_reticle.new( f1_arg0, f1_arg1, 0.5, 0.5, -5, 5, 0.5, 0.5, -5, 5 ) --[[ @ 0]]
	self:addElement( SpreadReticle ) --[[ @ 0]]
	self.SpreadReticle = SpreadReticle --[[ @ 0]]
	
	local missileProximityAlert = CoD.missileProximityAlert.new( f1_arg0, f1_arg1, 0, 0, 810, 1130, 0, 0, 770.5, 811.5 ) --[[ @ 0]]
	missileProximityAlert:linkToElementModel( self, nil, false, function ( model )
		missileProximityAlert:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( missileProximityAlert ) --[[ @ 0]]
	self.missileProximityAlert = missileProximityAlert --[[ @ 0]]
	
	local Health = CoD.vhud_attack_helicopter_health.new( f1_arg0, f1_arg1, 0, 0, 126, 428, 0, 0, 811.5, 989.5 ) --[[ @ 0]]
	Health:linkToElementModel( self, nil, false, function ( model )
		Health:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( Health ) --[[ @ 0]]
	self.Health = Health --[[ @ 0]]
	
	local vhudmsTimebar = CoD.vhud_ms_Timebar.new( f1_arg0, f1_arg1, 1, 1, -1819, -1469, 0, 0, 908, 921 ) --[[ @ 0]]
	vhudmsTimebar:linkToElementModel( self, nil, false, function ( model )
		vhudmsTimebar:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( vhudmsTimebar ) --[[ @ 0]]
	self.vhudmsTimebar = vhudmsTimebar --[[ @ 0]]
	
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.vhud_attack_helicopter_reticle.__onClose = function ( f9_arg0 )
	f9_arg0.Reticle:close() --[[ @ 0]]
	f9_arg0.RingL:close() --[[ @ 0]]
	f9_arg0.CenterFrame:close() --[[ @ 0]]
	f9_arg0.AltMeterL:close() --[[ @ 0]]
	f9_arg0.Speed:close() --[[ @ 0]]
	f9_arg0.RocketCounter:close() --[[ @ 0]]
	f9_arg0.FlareCounter:close() --[[ @ 0]]
	f9_arg0.SpreadReticle:close() --[[ @ 0]]
	f9_arg0.missileProximityAlert:close() --[[ @ 0]]
	f9_arg0.Health:close() --[[ @ 0]]
	f9_arg0.vhudmsTimebar:close() --[[ @ 0]]
end
 --[[ @ 0]]
