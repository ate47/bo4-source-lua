-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
require( "ui/uieditor/widgets/callingcards/callingcards_framewidget" ) --[[ @ 0]]
require( "x64:55f8cf56752aa71b" ) --[[ @ 0]]
require( "ui/uieditor/widgets/director/directorpartybarinternal" ) --[[ @ 0]]
require( "ui/uieditor/widgets/director/directorpartyleader" ) --[[ @ 0]]
require( "x64:6906749ab0d5bbee" ) --[[ @ 0]]
require( "x64:1d1d5f6e1edad2b9" ) --[[ @ 0]]
require( "ui/uieditor/widgets/social/social_partymembericonlarge" ) --[[ @ 0]]
require( "x64:1d0dd4bae5f1fadb" ) --[[ @ 0]]
require( "x64:81feaeb195cd2e0" ) --[[ @ 0]]

CoD.Social_ManagePartyPlayerButtonInternal = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.Social_ManagePartyPlayerButtonInternal.__defaultWidth = 481 --[[ @ 0]]
CoD.Social_ManagePartyPlayerButtonInternal.__defaultHeight = 76 --[[ @ 0]]
CoD.Social_ManagePartyPlayerButtonInternal.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.Social_ManagePartyPlayerButtonInternal ) --[[ @ 0]]
	self.id = "Social_ManagePartyPlayerButtonInternal" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local Backing = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	Backing:setRGB( 0, 0, 0 ) --[[ @ 0]]
	self:addElement( Backing ) --[[ @ 0]]
	self.Backing = Backing --[[ @ 0]]
	
	local NoiseTiledBacking = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	NoiseTiledBacking:setAlpha( 0.8 ) --[[ @ 0]]
	NoiseTiledBacking:setImage( RegisterImage( @"uie_ui_menu_specialist_hub_repeat_bg" ) ) --[[ @ 0]]
	NoiseTiledBacking:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_16CBE95C250C6D15" ) ) --[[ @ 0]]
	NoiseTiledBacking:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	NoiseTiledBacking:setupNineSliceShader( 196, 88 ) --[[ @ 0]]
	self:addElement( NoiseTiledBacking ) --[[ @ 0]]
	self.NoiseTiledBacking = NoiseTiledBacking --[[ @ 0]]
	
	local SelectorOverlay = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	SelectorOverlay:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	SelectorOverlay:setAlpha( 0.01 ) --[[ @ 0]]
	self:addElement( SelectorOverlay ) --[[ @ 0]]
	self.SelectorOverlay = SelectorOverlay --[[ @ 0]]
	
	local emblem = LUI.UIImage.new( 0, 0, 2.5, 76.5, 0.5, 0.5, -37, 37 ) --[[ @ 0]]
	emblem:linkToElementModel( self, "identityBadge.xuid", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			emblem:setupPlayerEmblemByXUID( f2_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( emblem ) --[[ @ 0]]
	self.emblem = emblem --[[ @ 0]]
	
	local CallingCardsFrameWidget = CoD.CallingCards_FrameWidget.new( f1_arg0, f1_arg1, 0, 0, 77.5, 373.5, 0, 0, 1, 75 ) --[[ @ 0]]
	CallingCardsFrameWidget:setRGB( 0.9, 0.9, 0.9 ) --[[ @ 0]]
	CallingCardsFrameWidget:linkToElementModel( self, nil, false, function ( model )
		CallingCardsFrameWidget:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( CallingCardsFrameWidget ) --[[ @ 0]]
	self.CallingCardsFrameWidget = CallingCardsFrameWidget --[[ @ 0]]
	
	local SocialPartyLeaderIconLarge0 = CoD.Social_PartyLeaderIconLarge.new( f1_arg0, f1_arg1, 0, 0, 482.5, 505.5, 0.5, 0.5, -36.5, 36.5 ) --[[ @ 0]]
	SocialPartyLeaderIconLarge0:mergeStateConditions( {
		{
			stateName = "Invisible",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		}
	} ) --[[ @ 0]]
	self:addElement( SocialPartyLeaderIconLarge0 ) --[[ @ 0]]
	self.SocialPartyLeaderIconLarge0 = SocialPartyLeaderIconLarge0 --[[ @ 0]]
	
	local SocialPartyMemberIconLarge0 = CoD.Social_PartyMemberIconLarge.new( f1_arg0, f1_arg1, 1, 1, 3.5, 9.5, 0.5, 0.5, -35.5, 35.5 ) --[[ @ 0]]
	SocialPartyMemberIconLarge0:mergeStateConditions( {
		{
			stateName = "PartyMemberTopOrMiddle",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg1, "isPartyMemberTopOrMiddle" )
			end
		},
		{
			stateName = "PartyMember",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		},
		{
			stateName = "OtherPartyMemberTopOrMiddle",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg1, "isOtherMemberTopOrMiddle" )
			end
		},
		{
			stateName = "OtherPartyMember",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg1, "isOtherMember" )
			end
		}
	} ) --[[ @ 0]]
	SocialPartyMemberIconLarge0:linkToElementModel( SocialPartyMemberIconLarge0, "isPartyMemberTopOrMiddle", true, function ( model )
		f1_arg0:updateElementState( SocialPartyMemberIconLarge0, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "isPartyMemberTopOrMiddle"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	SocialPartyMemberIconLarge0:linkToElementModel( SocialPartyMemberIconLarge0, "isOtherMemberTopOrMiddle", true, function ( model )
		f1_arg0:updateElementState( SocialPartyMemberIconLarge0, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "isOtherMemberTopOrMiddle"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	SocialPartyMemberIconLarge0:linkToElementModel( SocialPartyMemberIconLarge0, "isOtherMember", true, function ( model )
		f1_arg0:updateElementState( SocialPartyMemberIconLarge0, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "isOtherMember"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	SocialPartyMemberIconLarge0:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( SocialPartyMemberIconLarge0 ) --[[ @ 0]]
	self.SocialPartyMemberIconLarge0 = SocialPartyMemberIconLarge0 --[[ @ 0]]
	
	local playerName = LUI.UIText.new( 0, 0, 82, 371, 0.5, 0.5, -35.5, -5.5 ) --[[ @ 0]]
	playerName.__Color = function ()
		playerName:setRGB( CoD.DirectorUtility.LobbyPlayerColorByXUIDElseDefaultSelfModel( self:getModel(), "identityBadge.xuid", ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	playerName.__Color() --[[ @ 0]]
	playerName:setTTF( "notosans_bold" ) --[[ @ 0]]
	playerName:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	playerName:setAlignment( Enum[@"LUIAlignment"][@"hash_E821F0ECFF8D1C7"] ) --[[ @ 0]]
	playerName:setBackingType( 2 ) --[[ @ 0]]
	playerName:setBackingColor( 0, 0, 0 ) --[[ @ 0]]
	playerName:setBackingAlpha( 0.6 ) --[[ @ 0]]
	playerName:setBackingXPadding( 3 ) --[[ @ 0]]
	playerName:linkToElementModel( self, "identityBadge.gamertag", true, function ( model )
		local f13_local0 = model:get() --[[ @ 0]]
		if f13_local0 ~= nil then
			playerName:setText( CoD.SocialUtility.CleanGamerTag( f13_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( playerName ) --[[ @ 0]]
	self.playerName = playerName --[[ @ 0]]
	
	local f1_local9 = nil --[[ @ 0]]
	self.clanTag = LUI.UIElement.createFake() --[[ @ 0]]
	local clanTagPc = nil --[[ @ 0]]
	
	clanTagPc = CoD.Social_ManagePartyPlayerRealNameContainer.new( f1_arg0, f1_arg1, 0, 0, 82, 371, 0, 0, 34, 64 ) --[[ @ 0]]
	clanTagPc:linkToElementModel( self, nil, false, function ( model )
		clanTagPc:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( clanTagPc ) --[[ @ 0]]
	self.clanTagPc = clanTagPc --[[ @ 0]]
	
	local RankIcon = CoD.Social_ManagePartyPlayerButtonRankDetails.new( f1_arg0, f1_arg1, 0, 0, 373, 432, 0, 0, 1, 75 ) --[[ @ 0]]
	RankIcon:linkToElementModel( self, nil, false, function ( model )
		RankIcon:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( RankIcon ) --[[ @ 0]]
	self.RankIcon = RankIcon --[[ @ 0]]
	
	local DirectorPartyLeader = CoD.DirectorPartyLeader.new( f1_arg0, f1_arg1, 1, 1, 5, 25, 0.5, 0.5, -10, 10 ) --[[ @ 0]]
	DirectorPartyLeader:mergeStateConditions( {
		{
			stateName = "IsLeader",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualTo( element, f1_arg1, "isMemberLeader", 1 )
			end
		}
	} ) --[[ @ 0]]
	DirectorPartyLeader:linkToElementModel( DirectorPartyLeader, "isMemberLeader", true, function ( model )
		f1_arg0:updateElementState( DirectorPartyLeader, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "isMemberLeader"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	DirectorPartyLeader:linkToElementModel( self, nil, false, function ( model )
		DirectorPartyLeader:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( DirectorPartyLeader ) --[[ @ 0]]
	self.DirectorPartyLeader = DirectorPartyLeader --[[ @ 0]]
	
	local PartyBar = CoD.DirectorPartyBarInternal.new( f1_arg0, f1_arg1, 1, 1, 5, 10, 0, 0, 0, 76 ) --[[ @ 0]]
	PartyBar:mergeStateConditions( {
		{
			stateName = "NoParty",
			condition = function ( menu, element, event )
				return not CoD.ModelUtility.IsSelfModelValueEqualTo( element, f1_arg1, "isMemberLeader", 1 )
			end
		},
		{
			stateName = "PartyTopOrMiddle",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		},
		{
			stateName = "PartyLast",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		}
	} ) --[[ @ 0]]
	PartyBar:linkToElementModel( PartyBar, "isMemberLeader", true, function ( model )
		f1_arg0:updateElementState( PartyBar, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "isMemberLeader"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	PartyBar:linkToElementModel( self, nil, false, function ( model )
		PartyBar:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( PartyBar ) --[[ @ 0]]
	self.PartyBar = PartyBar --[[ @ 0]]
	
	local FocusGlow = LUI.UIImage.new( -0.1, 1.09, -100, 100, 0.5, 0.5, -61, 61 ) --[[ @ 0]]
	FocusGlow:setAlpha( 0 ) --[[ @ 0]]
	FocusGlow:setImage( RegisterImage( @"uie_ui_menu_common_focus_glow_large" ) ) --[[ @ 0]]
	FocusGlow:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_6DAB59B2CAE01851" ) ) --[[ @ 0]]
	FocusGlow:setShaderVector( 0, 0, 0, 0.25, 0.25 ) --[[ @ 0]]
	FocusGlow:setShaderVector( 1, 1.2, 0, 0, 0 ) --[[ @ 0]]
	FocusGlow:setupNineSliceShader( 300, 300 ) --[[ @ 0]]
	self:addElement( FocusGlow ) --[[ @ 0]]
	self.FocusGlow = FocusGlow --[[ @ 0]]
	
	local CommonButtonOutline = CoD.CommonButtonOutline.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	self:addElement( CommonButtonOutline ) --[[ @ 0]]
	self.CommonButtonOutline = CommonButtonOutline --[[ @ 0]]
	
	local trial = CoD.Social_PlayersListButton_Trial.new( f1_arg0, f1_arg1, 1, 1, -137, -110, 0.5, 0.5, 8.5, 35.5 ) --[[ @ 0]]
	trial:linkToElementModel( self, nil, false, function ( model )
		trial:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( trial ) --[[ @ 0]]
	self.trial = trial --[[ @ 0]]
	
	playerName:linkToElementModel( self, "identityBadge.xuid", true, playerName.__Color ) --[[ @ 0]]
	CallingCardsFrameWidget.id = "CallingCardsFrameWidget" --[[ @ 0]]
	CommonButtonOutline.id = "CommonButtonOutline" --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.Social_ManagePartyPlayerButtonInternal.__resetProperties = function ( f25_arg0 )
	f25_arg0.SelectorOverlay:completeAnimation() --[[ @ 0]]
	f25_arg0.FocusGlow:completeAnimation() --[[ @ 0]]
	f25_arg0.SelectorOverlay:setAlpha( 0.01 ) --[[ @ 0]]
	f25_arg0.FocusGlow:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.Social_ManagePartyPlayerButtonInternal.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f26_arg0, f26_arg1 )
			f26_arg0:__resetProperties() --[[ @ 0]]
			f26_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end,
		ChildFocus = function ( f27_arg0, f27_arg1 )
			f27_arg0:__resetProperties() --[[ @ 0]]
			f27_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f27_arg0.SelectorOverlay:completeAnimation() --[[ @ 0]]
			f27_arg0.SelectorOverlay:setAlpha( 0.04 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.SelectorOverlay ) --[[ @ 0]]
			f27_arg0.FocusGlow:completeAnimation() --[[ @ 0]]
			f27_arg0.FocusGlow:setAlpha( 1 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.FocusGlow ) --[[ @ 0]]
		end,
		GainChildFocus = function ( f28_arg0, f28_arg1 )
			f28_arg0:__resetProperties() --[[ @ 0]]
			f28_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			local f28_local0 = function ( f29_arg0 )
				f28_arg0.SelectorOverlay:beginAnimation( 200 ) --[[ @ 0]]
				f28_arg0.SelectorOverlay:setAlpha( 0.04 ) --[[ @ 0]]
				f28_arg0.SelectorOverlay:registerEventHandler( "interrupted_keyframe", f28_arg0.clipInterrupted ) --[[ @ 0]]
				f28_arg0.SelectorOverlay:registerEventHandler( "transition_complete_keyframe", f28_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f28_arg0.SelectorOverlay:completeAnimation() --[[ @ 0]]
			f28_arg0.SelectorOverlay:setAlpha( 0.01 ) --[[ @ 0]]
			f28_local0( f28_arg0.SelectorOverlay ) --[[ @ 0]]
			local f28_local1 = function ( f30_arg0 )
				f28_arg0.FocusGlow:beginAnimation( 200 ) --[[ @ 0]]
				f28_arg0.FocusGlow:setAlpha( 1 ) --[[ @ 0]]
				f28_arg0.FocusGlow:registerEventHandler( "interrupted_keyframe", f28_arg0.clipInterrupted ) --[[ @ 0]]
				f28_arg0.FocusGlow:registerEventHandler( "transition_complete_keyframe", f28_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f28_arg0.FocusGlow:completeAnimation() --[[ @ 0]]
			f28_arg0.FocusGlow:setAlpha( 0 ) --[[ @ 0]]
			f28_local1( f28_arg0.FocusGlow ) --[[ @ 0]]
		end,
		LoseChildFocus = function ( f31_arg0, f31_arg1 )
			f31_arg0:__resetProperties() --[[ @ 0]]
			f31_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			local f31_local0 = function ( f32_arg0 )
				f31_arg0.SelectorOverlay:beginAnimation( 200 ) --[[ @ 0]]
				f31_arg0.SelectorOverlay:setAlpha( 0.01 ) --[[ @ 0]]
				f31_arg0.SelectorOverlay:registerEventHandler( "interrupted_keyframe", f31_arg0.clipInterrupted ) --[[ @ 0]]
				f31_arg0.SelectorOverlay:registerEventHandler( "transition_complete_keyframe", f31_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f31_arg0.SelectorOverlay:completeAnimation() --[[ @ 0]]
			f31_arg0.SelectorOverlay:setAlpha( 0.04 ) --[[ @ 0]]
			f31_local0( f31_arg0.SelectorOverlay ) --[[ @ 0]]
			local f31_local1 = function ( f33_arg0 )
				f31_arg0.FocusGlow:beginAnimation( 200 ) --[[ @ 0]]
				f31_arg0.FocusGlow:setAlpha( 0 ) --[[ @ 0]]
				f31_arg0.FocusGlow:registerEventHandler( "interrupted_keyframe", f31_arg0.clipInterrupted ) --[[ @ 0]]
				f31_arg0.FocusGlow:registerEventHandler( "transition_complete_keyframe", f31_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f31_arg0.FocusGlow:completeAnimation() --[[ @ 0]]
			f31_arg0.FocusGlow:setAlpha( 1 ) --[[ @ 0]]
			f31_local1( f31_arg0.FocusGlow ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.Social_ManagePartyPlayerButtonInternal.__onClose = function ( f34_arg0 )
	f34_arg0.emblem:close() --[[ @ 0]]
	f34_arg0.CallingCardsFrameWidget:close() --[[ @ 0]]
	f34_arg0.SocialPartyLeaderIconLarge0:close() --[[ @ 0]]
	f34_arg0.SocialPartyMemberIconLarge0:close() --[[ @ 0]]
	f34_arg0.playerName:close() --[[ @ 0]]
	f34_arg0.clanTag:close() --[[ @ 0]]
	f34_arg0.clanTagPc:close() --[[ @ 0]]
	f34_arg0.RankIcon:close() --[[ @ 0]]
	f34_arg0.DirectorPartyLeader:close() --[[ @ 0]]
	f34_arg0.PartyBar:close() --[[ @ 0]]
	f34_arg0.CommonButtonOutline:close() --[[ @ 0]]
	f34_arg0.trial:close() --[[ @ 0]]
end
 --[[ @ 0]]
