-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:49
require( "x64:53096a20718bc809" ) --[[ @ 0]]
require( "ui/uieditor/widgets/store/storecommontextbacking" ) --[[ @ 0]]

CoD.BM_ItemInfoCompactPanel = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.BM_ItemInfoCompactPanel.__defaultWidth = 540 --[[ @ 0]]
CoD.BM_ItemInfoCompactPanel.__defaultHeight = 125 --[[ @ 0]]
CoD.BM_ItemInfoCompactPanel.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.BM_ItemInfoCompactPanel ) --[[ @ 0]]
	self.id = "BM_ItemInfoCompactPanel" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local SceneBlur = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	SceneBlur:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_E2354BE557C4C7A" ) ) --[[ @ 0]]
	SceneBlur:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( SceneBlur ) --[[ @ 0]]
	self.SceneBlur = SceneBlur --[[ @ 0]]
	
	local Box = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	Box:setRGB( 0.92, 0.92, 0.92 ) --[[ @ 0]]
	Box:setAlpha( 0.01 ) --[[ @ 0]]
	self:addElement( Box ) --[[ @ 0]]
	self.Box = Box --[[ @ 0]]
	
	local DotTiledBacking = CoD.StoreCommonTextBacking.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 1, 1, 1 ) --[[ @ 0]]
	DotTiledBacking:setAlpha( 0.15 ) --[[ @ 0]]
	self:addElement( DotTiledBacking ) --[[ @ 0]]
	self.DotTiledBacking = DotTiledBacking --[[ @ 0]]
	
	local ButtonBottomLine9Slice = LUI.UIImage.new( 0, 1, -6, 6, 1, 1, -6.5, 13.5 ) --[[ @ 0]]
	ButtonBottomLine9Slice:setAlpha( 0.25 ) --[[ @ 0]]
	ButtonBottomLine9Slice:setImage( RegisterImage( @"uie_ui_menu_cac_secondary_button_top_line" ) ) --[[ @ 0]]
	ButtonBottomLine9Slice:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_add" ) ) --[[ @ 0]]
	ButtonBottomLine9Slice:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	ButtonBottomLine9Slice:setupNineSliceShader( 120, 10 ) --[[ @ 0]]
	self:addElement( ButtonBottomLine9Slice ) --[[ @ 0]]
	self.ButtonBottomLine9Slice = ButtonBottomLine9Slice --[[ @ 0]]
	
	local UnlockInfo = LUI.UIText.new( 0, 0, 22, 518, 0, 0, 38, 56 ) --[[ @ 0]]
	UnlockInfo:setRGB( 0.92, 0.92, 0.92 ) --[[ @ 0]]
	UnlockInfo:setTTF( "dinnext_regular" ) --[[ @ 0]]
	UnlockInfo:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	UnlockInfo:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	UnlockInfo:linkToElementModel( self, "unlockInfo", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			UnlockInfo:setText( f2_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( UnlockInfo ) --[[ @ 0]]
	self.UnlockInfo = UnlockInfo --[[ @ 0]]
	
	local alertMessage = LUI.UIText.new( 0, 0, 22, 518, 0, 0, 99, 117 ) --[[ @ 0]]
	alertMessage:setRGB( ColorSet.T8__RED.r, ColorSet.T8__RED.g, ColorSet.T8__RED.b ) --[[ @ 0]]
	alertMessage:setAlpha( 0 ) --[[ @ 0]]
	alertMessage:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	alertMessage:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	alertMessage:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	alertMessage:linkToElementModel( self, "alertMessage", true, function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			alertMessage:setText( f3_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( alertMessage ) --[[ @ 0]]
	self.alertMessage = alertMessage --[[ @ 0]]
	
	local ButtonTopLine9Slice = LUI.UIImage.new( 0, 1, -6, 6, 0, 0, -6, 14 ) --[[ @ 0]]
	ButtonTopLine9Slice:setAlpha( 0.25 ) --[[ @ 0]]
	ButtonTopLine9Slice:setImage( RegisterImage( @"uie_ui_menu_cac_secondary_button_top_line" ) ) --[[ @ 0]]
	ButtonTopLine9Slice:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_add" ) ) --[[ @ 0]]
	ButtonTopLine9Slice:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	ButtonTopLine9Slice:setupNineSliceShader( 120, 10 ) --[[ @ 0]]
	self:addElement( ButtonTopLine9Slice ) --[[ @ 0]]
	self.ButtonTopLine9Slice = ButtonTopLine9Slice --[[ @ 0]]
	
	local ItemInfoRarityHeader = CoD.BM_ItemInfoRarityHeader.new( f1_arg0, f1_arg1, 0, 0, -5, 540, 0, 0, -3, 33 ) --[[ @ 0]]
	ItemInfoRarityHeader:linkToElementModel( self, nil, false, function ( model )
		ItemInfoRarityHeader:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( ItemInfoRarityHeader ) --[[ @ 0]]
	self.ItemInfoRarityHeader = ItemInfoRarityHeader --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "AlertMessage",
			condition = function ( menu, element, event )
				local f5_local0 --[[ @ 0]]
				if not CoD.ModelUtility.IsSelfModelNil( element, f1_arg1 ) then
					f5_local0 = CoD.ModelUtility.IsSelfModelValueNonEmptyString( element, f1_arg1, "alertMessage" ) --[[ @ 0]]
				else
					f5_local0 = false --[[ @ 0]]
				end
				return f5_local0
			end
		},
		{
			stateName = "Shown",
			condition = function ( menu, element, event )
				return not CoD.ModelUtility.IsSelfModelNil( element, f1_arg1 )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, nil, false, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model and model:get(),
			modelName = nil
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:linkToElementModel( self, "alertMessage", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "alertMessage"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.BM_ItemInfoCompactPanel.__resetProperties = function ( f9_arg0 )
	f9_arg0.UnlockInfo:completeAnimation() --[[ @ 0]]
	f9_arg0.ItemInfoRarityHeader:completeAnimation() --[[ @ 0]]
	f9_arg0.ButtonTopLine9Slice:completeAnimation() --[[ @ 0]]
	f9_arg0.alertMessage:completeAnimation() --[[ @ 0]]
	f9_arg0.ButtonBottomLine9Slice:completeAnimation() --[[ @ 0]]
	f9_arg0.DotTiledBacking:completeAnimation() --[[ @ 0]]
	f9_arg0.Box:completeAnimation() --[[ @ 0]]
	f9_arg0.SceneBlur:completeAnimation() --[[ @ 0]]
	f9_arg0.UnlockInfo:setRGB( 0.92, 0.92, 0.92 ) --[[ @ 0]]
	f9_arg0.UnlockInfo:setAlpha( 1 ) --[[ @ 0]]
	f9_arg0.ItemInfoRarityHeader:setAlpha( 1 ) --[[ @ 0]]
	f9_arg0.ButtonTopLine9Slice:setAlpha( 0.25 ) --[[ @ 0]]
	f9_arg0.alertMessage:setTopBottom( 0, 0, 99, 117 ) --[[ @ 0]]
	f9_arg0.alertMessage:setAlpha( 0 ) --[[ @ 0]]
	f9_arg0.ButtonBottomLine9Slice:setAlpha( 0.25 ) --[[ @ 0]]
	f9_arg0.DotTiledBacking:setAlpha( 0.15 ) --[[ @ 0]]
	f9_arg0.Box:setAlpha( 0.01 ) --[[ @ 0]]
	f9_arg0.SceneBlur:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.BM_ItemInfoCompactPanel.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f10_arg0, f10_arg1 )
			f10_arg0:__resetProperties() --[[ @ 0]]
			f10_arg0:setupElementClipCounter( 8 ) --[[ @ 0]]
			f10_arg0.SceneBlur:completeAnimation() --[[ @ 0]]
			f10_arg0.SceneBlur:setAlpha( 0 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.SceneBlur ) --[[ @ 0]]
			f10_arg0.Box:completeAnimation() --[[ @ 0]]
			f10_arg0.Box:setAlpha( 0 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.Box ) --[[ @ 0]]
			f10_arg0.DotTiledBacking:completeAnimation() --[[ @ 0]]
			f10_arg0.DotTiledBacking:setAlpha( 0 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.DotTiledBacking ) --[[ @ 0]]
			f10_arg0.ButtonBottomLine9Slice:completeAnimation() --[[ @ 0]]
			f10_arg0.ButtonBottomLine9Slice:setAlpha( 0 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.ButtonBottomLine9Slice ) --[[ @ 0]]
			f10_arg0.UnlockInfo:completeAnimation() --[[ @ 0]]
			f10_arg0.UnlockInfo:setRGB( 0.92, 0.92, 0.92 ) --[[ @ 0]]
			f10_arg0.UnlockInfo:setAlpha( 0 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.UnlockInfo ) --[[ @ 0]]
			f10_arg0.alertMessage:completeAnimation() --[[ @ 0]]
			f10_arg0.alertMessage:setAlpha( 0 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.alertMessage ) --[[ @ 0]]
			f10_arg0.ButtonTopLine9Slice:completeAnimation() --[[ @ 0]]
			f10_arg0.ButtonTopLine9Slice:setAlpha( 0 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.ButtonTopLine9Slice ) --[[ @ 0]]
			f10_arg0.ItemInfoRarityHeader:completeAnimation() --[[ @ 0]]
			f10_arg0.ItemInfoRarityHeader:setAlpha( 0 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.ItemInfoRarityHeader ) --[[ @ 0]]
		end
	},
	AlertMessage = {
		DefaultClip = function ( f11_arg0, f11_arg1 )
			f11_arg0:__resetProperties() --[[ @ 0]]
			f11_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f11_arg0.alertMessage:completeAnimation() --[[ @ 0]]
			f11_arg0.alertMessage:setTopBottom( 0, 0, 127, 145 ) --[[ @ 0]]
			f11_arg0.alertMessage:setAlpha( 1 ) --[[ @ 0]]
			f11_arg0.clipFinished( f11_arg0.alertMessage ) --[[ @ 0]]
		end
	},
	Shown = {
		DefaultClip = function ( f12_arg0, f12_arg1 )
			f12_arg0:__resetProperties() --[[ @ 0]]
			f12_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f12_arg0.UnlockInfo:completeAnimation() --[[ @ 0]]
			f12_arg0.UnlockInfo:setRGB( 0.92, 0.92, 0.92 ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.UnlockInfo ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.BM_ItemInfoCompactPanel.__onClose = function ( f13_arg0 )
	f13_arg0.DotTiledBacking:close() --[[ @ 0]]
	f13_arg0.UnlockInfo:close() --[[ @ 0]]
	f13_arg0.alertMessage:close() --[[ @ 0]]
	f13_arg0.ItemInfoRarityHeader:close() --[[ @ 0]]
end
 --[[ @ 0]]
