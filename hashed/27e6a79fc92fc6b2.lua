-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:48
require( "ui/uieditor/widgets/cac/weaponattachmentselect/attachmentdescriptionheader" ) --[[ @ 0]]

CoD.AttachmentDescriptionContainer = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.AttachmentDescriptionContainer.__defaultWidth = 200 --[[ @ 0]]
CoD.AttachmentDescriptionContainer.__defaultHeight = 30 --[[ @ 0]]
CoD.AttachmentDescriptionContainer.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.AttachmentDescriptionContainer ) --[[ @ 0]]
	self.id = "AttachmentDescriptionContainer" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local Connector = LUI.UIImage.new( 0, 0, 150, 239, 0, 0, 0, 30 ) --[[ @ 0]]
	Connector:setAlpha( 0 ) --[[ @ 0]]
	Connector:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_aar_segment" ) ) --[[ @ 0]]
	Connector:setShaderVector( 0, 1, 0, 0, 0 ) --[[ @ 0]]
	Connector:setShaderVector( 1, 0.7, 0, 0, 0 ) --[[ @ 0]]
	Connector:setShaderVector( 2, 0.25, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( Connector ) --[[ @ 0]]
	self.Connector = Connector --[[ @ 0]]
	
	local Header = CoD.AttachmentDescriptionHeader.new( f1_arg0, f1_arg1, 0, 0, 0, 200, 0, 0, 0, 30 ) --[[ @ 0]]
	Header:setAlpha( 0 ) --[[ @ 0]]
	Header:linkToElementModel( self, nil, false, function ( model )
		Header:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( Header ) --[[ @ 0]]
	self.Header = Header --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Full",
			condition = function ( menu, element, event )
				return CoD.WeaponAttachmentsUtility.ShouldShowAttachmentFlyout( menu, element, f1_arg1 ) and not CoD.WeaponAttachmentsUtility.ShouldHideBaseAttachmentFlyout( menu, element, f1_arg1 )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "attachmentInFocus", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "attachmentInFocus"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.AttachmentDescriptionContainer.__resetProperties = function ( f5_arg0 )
	f5_arg0.Header:completeAnimation() --[[ @ 0]]
	f5_arg0.Connector:completeAnimation() --[[ @ 0]]
	f5_arg0.Header:setAlpha( 0 ) --[[ @ 0]]
	f5_arg0.Connector:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.AttachmentDescriptionContainer.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f6_arg0, f6_arg1 )
			f6_arg0:__resetProperties() --[[ @ 0]]
			f6_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end,
		Full = function ( f7_arg0, f7_arg1 )
			f7_arg0:__resetProperties() --[[ @ 0]]
			f7_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			local f7_local0 = function ( f8_arg0 )
				local f8_local0 = function ( f9_arg0 )
					f9_arg0:beginAnimation( 99 ) --[[ @ 0]]
					f9_arg0:setAlpha( 1 ) --[[ @ 0]]
					f9_arg0:registerEventHandler( "transition_complete_keyframe", f7_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f7_arg0.Connector:beginAnimation( 140 ) --[[ @ 0]]
				f7_arg0.Connector:registerEventHandler( "interrupted_keyframe", f7_arg0.clipInterrupted ) --[[ @ 0]]
				f7_arg0.Connector:registerEventHandler( "transition_complete_keyframe", f8_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f7_arg0.Connector:completeAnimation() --[[ @ 0]]
			f7_arg0.Connector:setAlpha( 0 ) --[[ @ 0]]
			f7_local0( f7_arg0.Connector ) --[[ @ 0]]
			local f7_local1 = function ( f10_arg0 )
				f7_arg0.Header:beginAnimation( 100, Enum[@"luitween"][@"luitween_ease_in"] ) --[[ @ 0]]
				f7_arg0.Header:setAlpha( 1 ) --[[ @ 0]]
				f7_arg0.Header:registerEventHandler( "interrupted_keyframe", f7_arg0.clipInterrupted ) --[[ @ 0]]
				f7_arg0.Header:registerEventHandler( "transition_complete_keyframe", f7_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f7_arg0.Header:completeAnimation() --[[ @ 0]]
			f7_arg0.Header:setAlpha( 0 ) --[[ @ 0]]
			f7_local1( f7_arg0.Header ) --[[ @ 0]]
		end
	},
	Full = {
		DefaultClip = function ( f11_arg0, f11_arg1 )
			f11_arg0:__resetProperties() --[[ @ 0]]
			f11_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f11_arg0.Connector:completeAnimation() --[[ @ 0]]
			f11_arg0.Connector:setAlpha( 1 ) --[[ @ 0]]
			f11_arg0.clipFinished( f11_arg0.Connector ) --[[ @ 0]]
			f11_arg0.Header:completeAnimation() --[[ @ 0]]
			f11_arg0.Header:setAlpha( 1 ) --[[ @ 0]]
			f11_arg0.clipFinished( f11_arg0.Header ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.AttachmentDescriptionContainer.__onClose = function ( f12_arg0 )
	f12_arg0.Header:close() --[[ @ 0]]
end
 --[[ @ 0]]
