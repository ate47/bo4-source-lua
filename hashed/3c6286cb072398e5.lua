-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:49
require( "x64:5ebfe24f09f3e978" ) --[[ @ 0]]
require( "x64:5de9e0a106439c01" ) --[[ @ 0]]

CoD.LaboratoryMixAgain = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.LaboratoryMixAgain.__defaultWidth = 280 --[[ @ 0]]
CoD.LaboratoryMixAgain.__defaultHeight = 1080 --[[ @ 0]]
CoD.LaboratoryMixAgain.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.LaboratoryMixAgain ) --[[ @ 0]]
	self.id = "LaboratoryMixAgain" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local NoiseTiledBacking = LUI.UIImage.new( -1, 1, 0.5, 0.5, 0, 1, 0, 0 ) --[[ @ 0]]
	NoiseTiledBacking:setAlpha( 0.5 ) --[[ @ 0]]
	NoiseTiledBacking:setImage( RegisterImage( @"uie_ui_menu_specialist_hub_repeat_bg" ) ) --[[ @ 0]]
	NoiseTiledBacking:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_16CBE95C250C6D15" ) ) --[[ @ 0]]
	NoiseTiledBacking:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	NoiseTiledBacking:setupNineSliceShader( 196, 88 ) --[[ @ 0]]
	self:addElement( NoiseTiledBacking ) --[[ @ 0]]
	self.NoiseTiledBacking = NoiseTiledBacking --[[ @ 0]]
	
	local StoneTiledBacking = LUI.UIImage.new( -1, 1, 0, 0, 0.09, 0.09, -91, 116 ) --[[ @ 0]]
	StoneTiledBacking:setRGB( 0.83, 0.11, 0.01 ) --[[ @ 0]]
	StoneTiledBacking:setAlpha( 0.5 ) --[[ @ 0]]
	StoneTiledBacking:setImage( RegisterImage( @"uie_ui_zm_laboratory_buttonbgtile" ) ) --[[ @ 0]]
	StoneTiledBacking:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_16CBE95C250C6D15" ) ) --[[ @ 0]]
	StoneTiledBacking:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	StoneTiledBacking:setupNineSliceShader( 196, 88 ) --[[ @ 0]]
	self:addElement( StoneTiledBacking ) --[[ @ 0]]
	self.StoneTiledBacking = StoneTiledBacking --[[ @ 0]]
	
	local RedOverlay = LUI.UIImage.new( -1, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	RedOverlay:setRGB( 0.83, 0.11, 0.01 ) --[[ @ 0]]
	RedOverlay:setAlpha( 0.02 ) --[[ @ 0]]
	self:addElement( RedOverlay ) --[[ @ 0]]
	self.RedOverlay = RedOverlay --[[ @ 0]]
	
	local FixedAspectRatioImage = LUI.UIFixedAspectRatioImage.new( 0.5, 0.5, -115, 115, 0, 0, 255.5, 485.5 ) --[[ @ 0]]
	FixedAspectRatioImage:setStretchedDimension( 4 ) --[[ @ 0]]
	FixedAspectRatioImage:linkToElementModel( self, "icon", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			FixedAspectRatioImage:setImage( RegisterImage( f2_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( FixedAspectRatioImage ) --[[ @ 0]]
	self.FixedAspectRatioImage = FixedAspectRatioImage --[[ @ 0]]
	
	local MixAgain = LUI.UIText.new( 0.5, 1.5, -124, -156, 0, 0, 175.5, 205.5 ) --[[ @ 0]]
	MixAgain:setRGB( 0.58, 0.85, 1 ) --[[ @ 0]]
	MixAgain:setText( LocalizeToUpperString( @"hash_1496C7B4FF40634" ) ) --[[ @ 0]]
	MixAgain:setTTF( "skorzhen" ) --[[ @ 0]]
	MixAgain:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	MixAgain:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	self:addElement( MixAgain ) --[[ @ 0]]
	self.MixAgain = MixAgain --[[ @ 0]]
	
	local Name = LUI.UIText.new( 0, 1, 16, -16, 0, 0, 527.5, 557.5 ) --[[ @ 0]]
	Name:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	Name:setTTF( "default" ) --[[ @ 0]]
	Name:setLetterSpacing( 1 ) --[[ @ 0]]
	Name:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	Name:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	Name:linkToElementModel( self, "name", true, function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			Name:setText( LocalizeToUpperString( f3_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Name ) --[[ @ 0]]
	self.Name = Name --[[ @ 0]]
	
	local Description = LUI.UIText.new( 0, 1, 16, -16, 0, 0, 598.5, 616.5 ) --[[ @ 0]]
	Description:setRGB( ColorSet.T8__OFF__GRAY.r, ColorSet.T8__OFF__GRAY.g, ColorSet.T8__OFF__GRAY.b ) --[[ @ 0]]
	Description:setTTF( "default" ) --[[ @ 0]]
	Description:setLetterSpacing( 1 ) --[[ @ 0]]
	Description:setLineSpacing( 1 ) --[[ @ 0]]
	Description:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	Description:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	Description:linkToElementModel( self, "description", true, function ( model )
		local f4_local0 = model:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			Description:setText( Engine[@"hash_4F9F1239CFD921FE"]( f4_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Description ) --[[ @ 0]]
	self.Description = Description --[[ @ 0]]
	
	local LaboratoryMixAgainButton = CoD.LaboratoryMixAgainButton.new( f1_arg0, f1_arg1, 0.5, 0.5, -115, 115, 0, 0, 900.5, 976.5 ) --[[ @ 0]]
	LaboratoryMixAgainButton:linkToElementModel( self, nil, false, function ( model )
		LaboratoryMixAgainButton:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LaboratoryMixAgainButton:linkToElementModel( self, "plasmaPrice", true, function ( model )
		local f6_local0 = model:get() --[[ @ 0]]
		if f6_local0 ~= nil then
			LaboratoryMixAgainButton.Button.Cost:setText( ConvertToUpperString( LocalizeIntoStringIfNotEmpty( @"hash_310EE05AA87A5498", f6_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	local TopBar = LaboratoryMixAgainButton --[[ @ 0]]
	local DoneButton = LaboratoryMixAgainButton.subscribeToModel --[[ @ 0]]
	local BgZmStar = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	DoneButton( TopBar, BgZmStar["Laboratory.animState"], function ( f7_arg0, f7_arg1 )
		CoD.Menu.UpdateButtonShownState( f7_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	TopBar = LaboratoryMixAgainButton --[[ @ 0]]
	DoneButton = LaboratoryMixAgainButton.subscribeToModel --[[ @ 0]]
	BgZmStar = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	DoneButton( TopBar, BgZmStar["Laboratory.disableInput"], function ( f8_arg0, f8_arg1 )
		CoD.Menu.UpdateButtonShownState( f8_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	LaboratoryMixAgainButton:registerEventHandler( "gain_focus", function ( element, event )
		local f9_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f9_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f9_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		return f9_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( LaboratoryMixAgainButton, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"], nil, function ( element, menu, controller, model )
		if CoD.ZMLaboratoryUtility.IsInAnimState1( controller, CoD.ZMLaboratoryUtility.LabAnimState.MIX_AGAIN ) and CoD.ZMLaboratoryUtility.CanPurchase( controller, element ) and CoD.ModelUtility.IsModelValueEqualTo( controller, "Laboratory.disableInput", 0 ) then
			CoD.ZMLaboratoryUtility.CacheOfferButtonModel( controller, element, menu ) --[[ @ 0]]
			CoD.ZMLaboratoryUtility.MixAgain( self, menu, controller ) --[[ @ 0]]
			return true
		elseif CoD.ZMLaboratoryUtility.IsInAnimState1( controller, CoD.ZMLaboratoryUtility.LabAnimState.MIX_AGAIN ) and not CoD.ZMLaboratoryUtility.CanPurchase( controller, element ) and CoD.ModelUtility.IsModelValueEqualTo( controller, "Laboratory.disableInput", 0 ) and IsBooleanDvarSet( "laboratory_codpoints_enabled" ) then
			CoD.ZMLaboratoryUtility.CacheOfferButtonModel( controller, element, menu ) --[[ @ 0]]
			OpenPopup( self, "PurchasePlasma", controller, element:getModel() ) --[[ @ 0]]
			return true
		elseif CoD.ZMLaboratoryUtility.IsInAnimState1( controller, CoD.ZMLaboratoryUtility.LabAnimState.MIX_AGAIN ) and not CoD.ZMLaboratoryUtility.CanPurchase( controller, element ) and CoD.ModelUtility.IsModelValueEqualTo( controller, "Laboratory.disableInput", 0 ) then
			CoD.ZMLaboratoryUtility.CacheOfferButtonModel( controller, element, menu ) --[[ @ 0]]
			local f10_local0 = OpenSystemOverlay --[[ @ 0]]
			local f10_local1 = self --[[ @ 0]]
			local f10_local2 = menu --[[ @ 0]]
			local f10_local3 = controller --[[ @ 0]]
			local f10_local4 = "NotEnoughNPPopup" --[[ @ 0]]
			local f10_local5 = {} --[[ @ 0]]
			local f10_local6 = element:getModel() --[[ @ 0]]
			f10_local5.npRequired = f10_local6.plasmaPrice:get() --[[ @ 0]]
			f10_local0( f10_local1, f10_local2, f10_local3, f10_local4, f10_local5 ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if CoD.ZMLaboratoryUtility.IsInAnimState1( controller, CoD.ZMLaboratoryUtility.LabAnimState.MIX_AGAIN ) and CoD.ZMLaboratoryUtility.CanPurchase( controller, element ) and CoD.ModelUtility.IsModelValueEqualTo( controller, "Laboratory.disableInput", 0 ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"menu/select", nil, nil ) --[[ @ 0]]
			return true
		elseif CoD.ZMLaboratoryUtility.IsInAnimState1( controller, CoD.ZMLaboratoryUtility.LabAnimState.MIX_AGAIN ) and not CoD.ZMLaboratoryUtility.CanPurchase( controller, element ) and CoD.ModelUtility.IsModelValueEqualTo( controller, "Laboratory.disableInput", 0 ) and IsBooleanDvarSet( "laboratory_codpoints_enabled" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"menu/select", nil, nil ) --[[ @ 0]]
			return true
		elseif CoD.ZMLaboratoryUtility.IsInAnimState1( controller, CoD.ZMLaboratoryUtility.LabAnimState.MIX_AGAIN ) and not CoD.ZMLaboratoryUtility.CanPurchase( controller, element ) and CoD.ModelUtility.IsModelValueEqualTo( controller, "Laboratory.disableInput", 0 ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"menu/select", nil, nil ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( LaboratoryMixAgainButton ) --[[ @ 0]]
	self.LaboratoryMixAgainButton = LaboratoryMixAgainButton --[[ @ 0]]
	
	DoneButton = nil --[[ @ 0]]
	
	DoneButton = CoD.LaboratoryMixAgainButton.new( f1_arg0, f1_arg1, 0.5, 0.5, -115, 115, 0, 0, 900.5, 976.5 ) --[[ @ 0]]
	DoneButton.Button.Cost:setText( LocalizeToUpperString( @"menu/close" ) ) --[[ @ 0]]
	BgZmStar = DoneButton --[[ @ 0]]
	TopBar = DoneButton.subscribeToModel --[[ @ 0]]
	local SideBar = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	TopBar( BgZmStar, SideBar["Laboratory.animState"], function ( f12_arg0, f12_arg1 )
		CoD.Menu.UpdateButtonShownState( f12_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f12_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_none"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	BgZmStar = DoneButton --[[ @ 0]]
	TopBar = DoneButton.subscribeToModel --[[ @ 0]]
	SideBar = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	TopBar( BgZmStar, SideBar["Laboratory.disableInput"], function ( f13_arg0, f13_arg1 )
		CoD.Menu.UpdateButtonShownState( f13_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f13_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_none"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	DoneButton:registerEventHandler( "gain_focus", function ( element, event )
		local f14_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f14_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f14_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_none"] ) --[[ @ 0]]
		return f14_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( DoneButton, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"], "ui_confirm", function ( element, menu, controller, model )
		if CoD.ZMLaboratoryUtility.IsInAnimState1( controller, CoD.ZMLaboratoryUtility.LabAnimState.MIX_AGAIN ) and CoD.ModelUtility.IsModelValueEqualTo( controller, "Laboratory.disableInput", 0 ) then
			SendClientScriptNotify( controller, "mix_again", "0" ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if CoD.ZMLaboratoryUtility.IsInAnimState1( controller, CoD.ZMLaboratoryUtility.LabAnimState.MIX_AGAIN ) and CoD.ModelUtility.IsModelValueEqualTo( controller, "Laboratory.disableInput", 0 ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"hash_0", nil, "ui_confirm" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( DoneButton, f1_arg1, Enum[@"luibutton"][@"lui_key_none"], "MOUSE1", function ( element, menu, controller, model )
		if CoD.ZMLaboratoryUtility.IsInAnimState1( controller, CoD.ZMLaboratoryUtility.LabAnimState.MIX_AGAIN ) and CoD.ModelUtility.IsModelValueEqualTo( controller, "Laboratory.disableInput", 0 ) then
			SendClientScriptNotify( controller, "mix_again", "0" ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if CoD.ZMLaboratoryUtility.IsInAnimState1( controller, CoD.ZMLaboratoryUtility.LabAnimState.MIX_AGAIN ) and CoD.ModelUtility.IsModelValueEqualTo( controller, "Laboratory.disableInput", 0 ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_none"], @"hash_0", nil, "MOUSE1" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( DoneButton ) --[[ @ 0]]
	self.DoneButton = DoneButton --[[ @ 0]]
	
	TopBar = LUI.UIImage.new( 0.5, 0.5, -120, 120, 0, 0, 202.5, 217.5 ) --[[ @ 0]]
	TopBar:setImage( RegisterImage( @"uie_ui_hud_zm_aar_top_bar" ) ) --[[ @ 0]]
	self:addElement( TopBar ) --[[ @ 0]]
	self.TopBar = TopBar --[[ @ 0]]
	
	BgZmStar = LUI.UIImage.new( 0.5, 0.5, -100, 100, 0, 0, 107, 307 ) --[[ @ 0]]
	BgZmStar:setRGB( ColorSet.T8__OFF__GRAY.r, ColorSet.T8__OFF__GRAY.g, ColorSet.T8__OFF__GRAY.b ) --[[ @ 0]]
	BgZmStar:setAlpha( 0.4 ) --[[ @ 0]]
	BgZmStar:setImage( RegisterImage( @"uie_ui_hud_zm_arr_reward_star" ) ) --[[ @ 0]]
	BgZmStar:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_31CC85D0A86303B0" ) ) --[[ @ 0]]
	BgZmStar:setShaderVector( 0, 4, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( BgZmStar ) --[[ @ 0]]
	self.BgZmStar = BgZmStar --[[ @ 0]]
	
	SideBar = LUI.UIImage.new( 1, 1, -5, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	SideBar:setAlpha( 0.25 ) --[[ @ 0]]
	SideBar:setImage( RegisterImage( @"hash_638DA8EF7E70CB06" ) ) --[[ @ 0]]
	self:addElement( SideBar ) --[[ @ 0]]
	self.SideBar = SideBar --[[ @ 0]]
	
	local SideBar2 = nil --[[ @ 0]]
	
	SideBar2 = LUI.UIImage.new( 0, 0, 0, 5, 0, 1, 0, 0 ) --[[ @ 0]]
	SideBar2:setAlpha( 0.25 ) --[[ @ 0]]
	SideBar2:setZRot( 180 ) --[[ @ 0]]
	SideBar2:setImage( RegisterImage( @"hash_638DA8EF7E70CB06" ) ) --[[ @ 0]]
	self:addElement( SideBar2 ) --[[ @ 0]]
	self.SideBar2 = SideBar2 --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "KBM",
			condition = function ( menu, element, event )
				return IsPC()
			end
		}
	} ) --[[ @ 0]]
	LaboratoryMixAgainButton.id = "LaboratoryMixAgainButton" --[[ @ 0]]
	if CoD.isPC then
		DoneButton.id = "DoneButton" --[[ @ 0]]
	end
	self.__defaultFocus = LaboratoryMixAgainButton --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.LaboratoryMixAgain.__resetProperties = function ( f20_arg0 )
	f20_arg0.DoneButton:completeAnimation() --[[ @ 0]]
	f20_arg0.LaboratoryMixAgainButton:completeAnimation() --[[ @ 0]]
	f20_arg0.StoneTiledBacking:completeAnimation() --[[ @ 0]]
	f20_arg0.RedOverlay:completeAnimation() --[[ @ 0]]
	f20_arg0.NoiseTiledBacking:completeAnimation() --[[ @ 0]]
	f20_arg0.DoneButton:setTopBottom( 0, 0, 900.5, 976.5 ) --[[ @ 0]]
	f20_arg0.LaboratoryMixAgainButton:setTopBottom( 0, 0, 900.5, 976.5 ) --[[ @ 0]]
	f20_arg0.StoneTiledBacking:setLeftRight( -1, 1, 0, 0 ) --[[ @ 0]]
	f20_arg0.RedOverlay:setLeftRight( -1, 1, 0, 0 ) --[[ @ 0]]
	f20_arg0.NoiseTiledBacking:setLeftRight( -1, 1, 0.5, 0.5 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.LaboratoryMixAgain.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f21_arg0, f21_arg1 )
			f21_arg0:__resetProperties() --[[ @ 0]]
			f21_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	KBM = {
		DefaultClip = function ( f22_arg0, f22_arg1 )
			f22_arg0:__resetProperties() --[[ @ 0]]
			f22_arg0:setupElementClipCounter( 5 ) --[[ @ 0]]
			f22_arg0.NoiseTiledBacking:completeAnimation() --[[ @ 0]]
			f22_arg0.NoiseTiledBacking:setLeftRight( -0, 1, 0.5, 0.5 ) --[[ @ 0]]
			f22_arg0.clipFinished( f22_arg0.NoiseTiledBacking ) --[[ @ 0]]
			f22_arg0.StoneTiledBacking:completeAnimation() --[[ @ 0]]
			f22_arg0.StoneTiledBacking:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
			f22_arg0.clipFinished( f22_arg0.StoneTiledBacking ) --[[ @ 0]]
			f22_arg0.RedOverlay:completeAnimation() --[[ @ 0]]
			f22_arg0.RedOverlay:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
			f22_arg0.clipFinished( f22_arg0.RedOverlay ) --[[ @ 0]]
			f22_arg0.LaboratoryMixAgainButton:completeAnimation() --[[ @ 0]]
			f22_arg0.LaboratoryMixAgainButton:setTopBottom( 0, 0, 806.5, 882.5 ) --[[ @ 0]]
			f22_arg0.clipFinished( f22_arg0.LaboratoryMixAgainButton ) --[[ @ 0]]
			f22_arg0.DoneButton:completeAnimation() --[[ @ 0]]
			f22_arg0.DoneButton:setTopBottom( 0, 0, 900.5, 976.5 ) --[[ @ 0]]
			f22_arg0.clipFinished( f22_arg0.DoneButton ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.LaboratoryMixAgain.__onClose = function ( f23_arg0 )
	f23_arg0.FixedAspectRatioImage:close() --[[ @ 0]]
	f23_arg0.Name:close() --[[ @ 0]]
	f23_arg0.Description:close() --[[ @ 0]]
	f23_arg0.LaboratoryMixAgainButton:close() --[[ @ 0]]
	f23_arg0.DoneButton:close() --[[ @ 0]]
end
 --[[ @ 0]]
