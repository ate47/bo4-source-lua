-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
require( "x64:a2ea24eb174a14d" ) --[[ @ 0]]
require( "x64:23537a57a7a7bc5d" ) --[[ @ 0]]
require( "x64:2b64d9dfa5911bd2" ) --[[ @ 0]]
require( "ui/uieditor/widgets/scoreboard/tabbedscoreboardrank" ) --[[ @ 0]]
require( "ui/uieditor/widgets/emptyfocusable" ) --[[ @ 0]]

CoD.PositionDraft_ViewTeams_CodCaster_Client = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.PositionDraft_ViewTeams_CodCaster_Client.__defaultWidth = 189 --[[ @ 0]]
CoD.PositionDraft_ViewTeams_CodCaster_Client.__defaultHeight = 216 --[[ @ 0]]
CoD.PositionDraft_ViewTeams_CodCaster_Client.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.PositionDraft_ViewTeams_CodCaster_Client ) --[[ @ 0]]
	self.id = "PositionDraft_ViewTeams_CodCaster_Client" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local EnemyBackground = LUI.UIImage.new( 0, 1, 0, 0, 0, 0, 0, 216 ) --[[ @ 0]]
	EnemyBackground:subscribeToGlobalModel( f1_arg1, "Factions", "axisFactionColor", function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			EnemyBackground:setRGB( f2_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( EnemyBackground ) --[[ @ 0]]
	self.EnemyBackground = EnemyBackground --[[ @ 0]]
	
	local FriendlyBackground = LUI.UIImage.new( 0, 1, 0, 0, 0, 0, 0, 216 ) --[[ @ 0]]
	FriendlyBackground:subscribeToGlobalModel( f1_arg1, "Factions", "alliesFactionColor", function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			FriendlyBackground:setRGB( f3_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( FriendlyBackground ) --[[ @ 0]]
	self.FriendlyBackground = FriendlyBackground --[[ @ 0]]
	
	local TopBarEnemy = LUI.UIImage.new( 0, 1, 0, 0, 0, 0.03, 0, 0 ) --[[ @ 0]]
	TopBarEnemy:setAlpha( 0 ) --[[ @ 0]]
	TopBarEnemy:subscribeToGlobalModel( f1_arg1, "Factions", "axisFactionColor", function ( model )
		local f4_local0 = model:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			TopBarEnemy:setRGB( f4_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( TopBarEnemy ) --[[ @ 0]]
	self.TopBarEnemy = TopBarEnemy --[[ @ 0]]
	
	local TopBarFriendly = LUI.UIImage.new( 0, 1, 0, 0, 0, 0.03, 0, 0 ) --[[ @ 0]]
	TopBarFriendly:setAlpha( 0 ) --[[ @ 0]]
	TopBarFriendly:subscribeToGlobalModel( f1_arg1, "Factions", "alliesFactionColor", function ( model )
		local f5_local0 = model:get() --[[ @ 0]]
		if f5_local0 ~= nil then
			TopBarFriendly:setRGB( f5_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( TopBarFriendly ) --[[ @ 0]]
	self.TopBarFriendly = TopBarFriendly --[[ @ 0]]
	
	local PositionDraftCharacterEnemy = CoD.PositionDraft_Character.new( f1_arg0, f1_arg1, 0.5, 0.5, -82.5, 85.5, 0, 0, -4.5, 150.5 ) --[[ @ 0]]
	PositionDraftCharacterEnemy:mergeStateConditions( {
		{
			stateName = "Selected",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		},
		{
			stateName = "Disabled",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		},
		{
			stateName = "Unavailable",
			condition = function ( menu, element, event )
				return CoD.HUDUtility.PositionDraftCharacterUnavailable( self, f1_arg1 ) and AlwaysFalse()
			end
		},
		{
			stateName = "UnavailablePC",
			condition = function ( menu, element, event )
				return CoD.HUDUtility.PositionDraftCharacterUnavailable( self, f1_arg1 ) and AlwaysFalse()
			end
		},
		{
			stateName = "ViewSelectedPlayer_Enemy_Hidden",
			condition = function ( menu, element, event )
				local f10_local0 --[[ @ 0]]
				if not CoD.ModelUtility.IsSelfModelValueNilOrZero( element, f1_arg1, "characterIndex" ) then
					f10_local0 = IsGametypeSettingsValue( "draftHideEnemyTeam", 1 ) --[[ @ 0]]
				else
					f10_local0 = false --[[ @ 0]]
				end
				return f10_local0
			end
		},
		{
			stateName = "ViewSelectedPlayer_Friendly",
			condition = function ( menu, element, event )
				return AlwaysTrue()
			end
		}
	} ) --[[ @ 0]]
	PositionDraftCharacterEnemy:linkToElementModel( PositionDraftCharacterEnemy, "clientNum", true, function ( model )
		f1_arg0:updateElementState( PositionDraftCharacterEnemy, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "clientNum"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	PositionDraftCharacterEnemy:linkToElementModel( PositionDraftCharacterEnemy, "isBMLocked", true, function ( model )
		f1_arg0:updateElementState( PositionDraftCharacterEnemy, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "isBMLocked"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	PositionDraftCharacterEnemy:linkToElementModel( PositionDraftCharacterEnemy, "unavailable", true, function ( model )
		f1_arg0:updateElementState( PositionDraftCharacterEnemy, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "unavailable"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local BG = PositionDraftCharacterEnemy --[[ @ 0]]
	local PositionDraftCharacter = PositionDraftCharacterEnemy.subscribeToModel --[[ @ 0]]
	local Rank = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	PositionDraftCharacter( BG, Rank["hudItems.specialistSwitchIsLethal"], function ( f15_arg0 )
		f1_arg0:updateElementState( PositionDraftCharacterEnemy, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f15_arg0:get(),
			modelName = "hudItems.specialistSwitchIsLethal"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	BG = PositionDraftCharacterEnemy --[[ @ 0]]
	PositionDraftCharacter = PositionDraftCharacterEnemy.subscribeToModel --[[ @ 0]]
	Rank = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	PositionDraftCharacter( BG, Rank["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_534C7B2375D2D47"]], function ( f16_arg0 )
		f1_arg0:updateElementState( PositionDraftCharacterEnemy, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f16_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_534C7B2375D2D47"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	PositionDraftCharacterEnemy:linkToElementModel( PositionDraftCharacterEnemy, "characterIndex", true, function ( model )
		f1_arg0:updateElementState( PositionDraftCharacterEnemy, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "characterIndex"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	PositionDraftCharacterEnemy:setScale( 1.31, 1.31 ) --[[ @ 0]]
	PositionDraftCharacterEnemy:linkToElementModel( self, nil, false, function ( model )
		PositionDraftCharacterEnemy:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	PositionDraftCharacterEnemy:linkToElementModel( self, "characterIndex", true, function ( model )
		local f19_local0 = model:get() --[[ @ 0]]
		if f19_local0 ~= nil then
			PositionDraftCharacterEnemy.Name:setText( LocalizeToUpperString( GetCharacterDisplayNameByIndex( f19_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( PositionDraftCharacterEnemy ) --[[ @ 0]]
	self.PositionDraftCharacterEnemy = PositionDraftCharacterEnemy --[[ @ 0]]
	
	PositionDraftCharacter = CoD.PositionDraft_Character.new( f1_arg0, f1_arg1, 0.5, 0.5, -82.5, 85.5, 0, 0, -4.5, 150.5 ) --[[ @ 0]]
	PositionDraftCharacter:mergeStateConditions( {
		{
			stateName = "Selected",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		},
		{
			stateName = "Disabled",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		},
		{
			stateName = "Unavailable",
			condition = function ( menu, element, event )
				return CoD.HUDUtility.PositionDraftCharacterUnavailable( self, f1_arg1 ) and AlwaysFalse()
			end
		},
		{
			stateName = "UnavailablePC",
			condition = function ( menu, element, event )
				return CoD.HUDUtility.PositionDraftCharacterUnavailable( self, f1_arg1 ) and AlwaysFalse()
			end
		},
		{
			stateName = "ViewSelectedPlayer_Friendly",
			condition = function ( menu, element, event )
				return AlwaysTrue()
			end
		},
		{
			stateName = "ViewSelectedPlayer_Friendly_Hidden",
			condition = function ( menu, element, event )
				return true
			end
		}
	} ) --[[ @ 0]]
	PositionDraftCharacter:linkToElementModel( PositionDraftCharacter, "clientNum", true, function ( model )
		f1_arg0:updateElementState( PositionDraftCharacter, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "clientNum"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	PositionDraftCharacter:linkToElementModel( PositionDraftCharacter, "isBMLocked", true, function ( model )
		f1_arg0:updateElementState( PositionDraftCharacter, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "isBMLocked"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	PositionDraftCharacter:linkToElementModel( PositionDraftCharacter, "unavailable", true, function ( model )
		f1_arg0:updateElementState( PositionDraftCharacter, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "unavailable"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	Rank = PositionDraftCharacter --[[ @ 0]]
	BG = PositionDraftCharacter.subscribeToModel --[[ @ 0]]
	local ClientClanTag = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	BG( Rank, ClientClanTag["hudItems.specialistSwitchIsLethal"], function ( f29_arg0 )
		f1_arg0:updateElementState( PositionDraftCharacter, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f29_arg0:get(),
			modelName = "hudItems.specialistSwitchIsLethal"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	Rank = PositionDraftCharacter --[[ @ 0]]
	BG = PositionDraftCharacter.subscribeToModel --[[ @ 0]]
	ClientClanTag = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	BG( Rank, ClientClanTag["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_534C7B2375D2D47"]], function ( f30_arg0 )
		f1_arg0:updateElementState( PositionDraftCharacter, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f30_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_534C7B2375D2D47"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	PositionDraftCharacter:setScale( 1.31, 1.31 ) --[[ @ 0]]
	PositionDraftCharacter:linkToElementModel( self, nil, false, function ( model )
		PositionDraftCharacter:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	PositionDraftCharacter:linkToElementModel( self, "characterIndex", true, function ( model )
		local f32_local0 = model:get() --[[ @ 0]]
		if f32_local0 ~= nil then
			PositionDraftCharacter.Name:setText( LocalizeToUpperString( GetCharacterDisplayNameByIndex( f32_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( PositionDraftCharacter ) --[[ @ 0]]
	self.PositionDraftCharacter = PositionDraftCharacter --[[ @ 0]]
	
	BG = LUI.UIImage.new( 0, 0, 0, 189, 0.5, 0.5, 46, 105 ) --[[ @ 0]]
	BG:setRGB( 0.09, 0.07, 0.06 ) --[[ @ 0]]
	BG:setAlpha( 0.9 ) --[[ @ 0]]
	self:addElement( BG ) --[[ @ 0]]
	self.BG = BG --[[ @ 0]]
	
	Rank = CoD.TabbedScoreboardRank.new( f1_arg0, f1_arg1, 0.5, 0.5, -84.5, -64.5, 0, 0, 156.5, 216.5 ) --[[ @ 0]]
	Rank:setAlpha( 0 ) --[[ @ 0]]
	Rank:linkToElementModel( self, nil, false, function ( model )
		Rank:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( Rank ) --[[ @ 0]]
	self.Rank = Rank --[[ @ 0]]
	
	ClientClanTag = LUI.UIText.new( 1, 1, -179, -9, 0.66, 0.66, 48, 68 ) --[[ @ 0]]
	ClientClanTag:setTTF( "notosans_regular" ) --[[ @ 0]]
	ClientClanTag:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	ClientClanTag:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	ClientClanTag:linkToElementModel( self, "clientNum", true, function ( model )
		local f34_local0 = model:get() --[[ @ 0]]
		if f34_local0 ~= nil then
			ClientClanTag:setRGB( ClientGamertagColor( f1_arg1, f34_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	ClientClanTag:linkToElementModel( self, "clanTag", true, function ( model )
		local f35_local0 = model:get() --[[ @ 0]]
		if f35_local0 ~= nil then
			ClientClanTag:setText( StringAsClanTag( f35_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( ClientClanTag ) --[[ @ 0]]
	self.ClientClanTag = ClientClanTag --[[ @ 0]]
	
	local ClientGamertag = CoD.Client_Gamertag.new( f1_arg0, f1_arg1, 1, 1, -179, -9, 0, 0, 166.5, 186.5 ) --[[ @ 0]]
	ClientGamertag:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	ClientGamertag:linkToElementModel( self, nil, false, function ( model )
		ClientGamertag:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( ClientGamertag ) --[[ @ 0]]
	self.ClientGamertag = ClientGamertag --[[ @ 0]]
	
	local LeaderIcon = CoD.Client_LeaderIcon.new( f1_arg0, f1_arg1, 0.5, 0.5, 60, 90, 0.5, 0.5, -96, -66 ) --[[ @ 0]]
	LeaderIcon:linkToElementModel( self, nil, false, function ( model )
		LeaderIcon:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( LeaderIcon ) --[[ @ 0]]
	self.LeaderIcon = LeaderIcon --[[ @ 0]]
	
	local emptyFocusable = nil --[[ @ 0]]
	
	emptyFocusable = CoD.emptyFocusable.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	emptyFocusable:linkToElementModel( self, nil, false, function ( model )
		emptyFocusable:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( emptyFocusable ) --[[ @ 0]]
	self.emptyFocusable = emptyFocusable --[[ @ 0]]
	
	self.PositionDraftCharacterEnemy:linkToElementModel( self, "characterIndex", true, function ( model )
		local f39_local0 = model:get() --[[ @ 0]]
		if f39_local0 ~= nil then
			PositionDraftCharacterEnemy.Portrait:setImage( RegisterImage( GetPositionDraftIconByIndex( f39_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self.PositionDraftCharacter:linkToElementModel( self, "characterIndex", true, function ( model )
		local f40_local0 = model:get() --[[ @ 0]]
		if f40_local0 ~= nil then
			PositionDraftCharacter.Portrait:setImage( RegisterImage( GetPositionDraftIconByIndex( f40_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:mergeStateConditions( {
		{
			stateName = "Friendly_CharacterSelected_Rank",
			condition = function ( menu, element, event )
				local f41_local0 --[[ @ 0]]
				if not CoD.ModelUtility.IsSelfModelValueNilOrZero( element, f1_arg1, "characterIndex" ) then
					f41_local0 = IsPublicOnlineGame() --[[ @ 0]]
				else
					f41_local0 = false --[[ @ 0]]
				end
				return f41_local0
			end
		},
		{
			stateName = "Friendly_CharacterSelected",
			condition = function ( menu, element, event )
				return not CoD.ModelUtility.IsSelfModelValueNilOrZero( element, f1_arg1, "characterIndex" )
			end
		},
		{
			stateName = "Friendly_ValidClient",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueGreaterThanOrEqualTo( element, f1_arg1, "clientNum", 0 )
			end
		},
		{
			stateName = "Friendly_Searching",
			condition = function ( menu, element, event )
				return true
			end
		},
		{
			stateName = "Enemy_CharacterSelected_Rank",
			condition = function ( menu, element, event )
				local f45_local0 --[[ @ 0]]
				if not CoD.ModelUtility.IsSelfModelValueNilOrZero( element, f1_arg1, "characterIndex" ) then
					f45_local0 = IsPublicOnlineGame() --[[ @ 0]]
				else
					f45_local0 = false --[[ @ 0]]
				end
				return f45_local0
			end
		},
		{
			stateName = "Enemy_CharacterSelected",
			condition = function ( menu, element, event )
				return not CoD.ModelUtility.IsSelfModelValueNilOrZero( element, f1_arg1, "characterIndex" )
			end
		},
		{
			stateName = "Enemy_ValidClient",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueGreaterThanOrEqualTo( element, f1_arg1, "clientNum", 0 )
			end
		},
		{
			stateName = "Enemy_Searching",
			condition = function ( menu, element, event )
				return true
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "characterIndex", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "characterIndex"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:linkToElementModel( self, "clientNum", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "clientNum"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	PositionDraftCharacterEnemy.id = "PositionDraftCharacterEnemy" --[[ @ 0]]
	PositionDraftCharacter.id = "PositionDraftCharacter" --[[ @ 0]]
	if CoD.isPC then
		emptyFocusable.id = "emptyFocusable" --[[ @ 0]]
	end
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	local f1_local13 = self --[[ @ 0]]
	if IsPC() then
		DisableKeyboardNavigationByElement( f1_local13 ) --[[ @ 0]]
		CoD.PCWidgetUtility.SetupRightClickableContextualPlayerMenuScoreboard( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	return self
end
 --[[ @ 0]]
CoD.PositionDraft_ViewTeams_CodCaster_Client.__resetProperties = function ( f51_arg0 )
	f51_arg0.BG:completeAnimation() --[[ @ 0]]
	f51_arg0.ClientClanTag:completeAnimation() --[[ @ 0]]
	f51_arg0.TopBarFriendly:completeAnimation() --[[ @ 0]]
	f51_arg0.FriendlyBackground:completeAnimation() --[[ @ 0]]
	f51_arg0.EnemyBackground:completeAnimation() --[[ @ 0]]
	f51_arg0.ClientGamertag:completeAnimation() --[[ @ 0]]
	f51_arg0.Rank:completeAnimation() --[[ @ 0]]
	f51_arg0.PositionDraftCharacterEnemy:completeAnimation() --[[ @ 0]]
	f51_arg0.PositionDraftCharacter:completeAnimation() --[[ @ 0]]
	f51_arg0.TopBarEnemy:completeAnimation() --[[ @ 0]]
	f51_arg0.BG:setAlpha( 0.9 ) --[[ @ 0]]
	f51_arg0.ClientClanTag:setLeftRight( 1, 1, -179, -9 ) --[[ @ 0]]
	f51_arg0.ClientClanTag:setAlpha( 1 ) --[[ @ 0]]
	f51_arg0.TopBarFriendly:setAlpha( 0 ) --[[ @ 0]]
	f51_arg0.FriendlyBackground:setAlpha( 1 ) --[[ @ 0]]
	f51_arg0.EnemyBackground:setAlpha( 1 ) --[[ @ 0]]
	f51_arg0.ClientGamertag:setLeftRight( 1, 1, -179, -9 ) --[[ @ 0]]
	f51_arg0.ClientGamertag:setAlpha( 1 ) --[[ @ 0]]
	f51_arg0.Rank:setAlpha( 0 ) --[[ @ 0]]
	f51_arg0.PositionDraftCharacterEnemy:setAlpha( 1 ) --[[ @ 0]]
	f51_arg0.PositionDraftCharacter:setAlpha( 1 ) --[[ @ 0]]
	f51_arg0.TopBarEnemy:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.PositionDraft_ViewTeams_CodCaster_Client.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f52_arg0, f52_arg1 )
			f52_arg0:__resetProperties() --[[ @ 0]]
			f52_arg0:setupElementClipCounter( 9 ) --[[ @ 0]]
			f52_arg0.EnemyBackground:completeAnimation() --[[ @ 0]]
			f52_arg0.EnemyBackground:setAlpha( 0 ) --[[ @ 0]]
			f52_arg0.clipFinished( f52_arg0.EnemyBackground ) --[[ @ 0]]
			f52_arg0.FriendlyBackground:completeAnimation() --[[ @ 0]]
			f52_arg0.FriendlyBackground:setAlpha( 0 ) --[[ @ 0]]
			f52_arg0.clipFinished( f52_arg0.FriendlyBackground ) --[[ @ 0]]
			f52_arg0.TopBarFriendly:completeAnimation() --[[ @ 0]]
			f52_arg0.TopBarFriendly:setAlpha( 1 ) --[[ @ 0]]
			f52_arg0.clipFinished( f52_arg0.TopBarFriendly ) --[[ @ 0]]
			f52_arg0.PositionDraftCharacterEnemy:completeAnimation() --[[ @ 0]]
			f52_arg0.PositionDraftCharacterEnemy:setAlpha( 0 ) --[[ @ 0]]
			f52_arg0.clipFinished( f52_arg0.PositionDraftCharacterEnemy ) --[[ @ 0]]
			f52_arg0.PositionDraftCharacter:completeAnimation() --[[ @ 0]]
			f52_arg0.PositionDraftCharacter:setAlpha( 1 ) --[[ @ 0]]
			f52_arg0.clipFinished( f52_arg0.PositionDraftCharacter ) --[[ @ 0]]
			f52_arg0.BG:completeAnimation() --[[ @ 0]]
			f52_arg0.BG:setAlpha( 0.8 ) --[[ @ 0]]
			f52_arg0.clipFinished( f52_arg0.BG ) --[[ @ 0]]
			f52_arg0.Rank:completeAnimation() --[[ @ 0]]
			f52_arg0.Rank:setAlpha( 0 ) --[[ @ 0]]
			f52_arg0.clipFinished( f52_arg0.Rank ) --[[ @ 0]]
			f52_arg0.ClientClanTag:completeAnimation() --[[ @ 0]]
			f52_arg0.ClientClanTag:setAlpha( 0 ) --[[ @ 0]]
			f52_arg0.clipFinished( f52_arg0.ClientClanTag ) --[[ @ 0]]
			f52_arg0.ClientGamertag:completeAnimation() --[[ @ 0]]
			f52_arg0.ClientGamertag:setAlpha( 0 ) --[[ @ 0]]
			f52_arg0.clipFinished( f52_arg0.ClientGamertag ) --[[ @ 0]]
		end
	},
	Friendly_CharacterSelected_Rank = {
		DefaultClip = function ( f53_arg0, f53_arg1 )
			f53_arg0:__resetProperties() --[[ @ 0]]
			f53_arg0:setupElementClipCounter( 8 ) --[[ @ 0]]
			f53_arg0.EnemyBackground:completeAnimation() --[[ @ 0]]
			f53_arg0.EnemyBackground:setAlpha( 0 ) --[[ @ 0]]
			f53_arg0.clipFinished( f53_arg0.EnemyBackground ) --[[ @ 0]]
			f53_arg0.FriendlyBackground:completeAnimation() --[[ @ 0]]
			f53_arg0.FriendlyBackground:setAlpha( 0.3 ) --[[ @ 0]]
			f53_arg0.clipFinished( f53_arg0.FriendlyBackground ) --[[ @ 0]]
			f53_arg0.TopBarFriendly:completeAnimation() --[[ @ 0]]
			f53_arg0.TopBarFriendly:setAlpha( 0.6 ) --[[ @ 0]]
			f53_arg0.clipFinished( f53_arg0.TopBarFriendly ) --[[ @ 0]]
			f53_arg0.PositionDraftCharacterEnemy:completeAnimation() --[[ @ 0]]
			f53_arg0.PositionDraftCharacterEnemy:setAlpha( 0 ) --[[ @ 0]]
			f53_arg0.clipFinished( f53_arg0.PositionDraftCharacterEnemy ) --[[ @ 0]]
			f53_arg0.PositionDraftCharacter:completeAnimation() --[[ @ 0]]
			f53_arg0.PositionDraftCharacter:setAlpha( 1 ) --[[ @ 0]]
			f53_arg0.clipFinished( f53_arg0.PositionDraftCharacter ) --[[ @ 0]]
			f53_arg0.Rank:completeAnimation() --[[ @ 0]]
			f53_arg0.Rank:setAlpha( 1 ) --[[ @ 0]]
			f53_arg0.clipFinished( f53_arg0.Rank ) --[[ @ 0]]
			f53_arg0.ClientClanTag:completeAnimation() --[[ @ 0]]
			f53_arg0.ClientClanTag:setLeftRight( 1, 1, -149, -9 ) --[[ @ 0]]
			f53_arg0.ClientClanTag:setAlpha( 1 ) --[[ @ 0]]
			f53_arg0.clipFinished( f53_arg0.ClientClanTag ) --[[ @ 0]]
			f53_arg0.ClientGamertag:completeAnimation() --[[ @ 0]]
			f53_arg0.ClientGamertag:setLeftRight( 1, 1, -149, -9 ) --[[ @ 0]]
			f53_arg0.clipFinished( f53_arg0.ClientGamertag ) --[[ @ 0]]
		end
	},
	Friendly_CharacterSelected = {
		DefaultClip = function ( f54_arg0, f54_arg1 )
			f54_arg0:__resetProperties() --[[ @ 0]]
			f54_arg0:setupElementClipCounter( 6 ) --[[ @ 0]]
			f54_arg0.EnemyBackground:completeAnimation() --[[ @ 0]]
			f54_arg0.EnemyBackground:setAlpha( 0 ) --[[ @ 0]]
			f54_arg0.clipFinished( f54_arg0.EnemyBackground ) --[[ @ 0]]
			f54_arg0.FriendlyBackground:completeAnimation() --[[ @ 0]]
			f54_arg0.FriendlyBackground:setAlpha( 0.3 ) --[[ @ 0]]
			f54_arg0.clipFinished( f54_arg0.FriendlyBackground ) --[[ @ 0]]
			f54_arg0.TopBarFriendly:completeAnimation() --[[ @ 0]]
			f54_arg0.TopBarFriendly:setAlpha( 0.6 ) --[[ @ 0]]
			f54_arg0.clipFinished( f54_arg0.TopBarFriendly ) --[[ @ 0]]
			f54_arg0.PositionDraftCharacterEnemy:completeAnimation() --[[ @ 0]]
			f54_arg0.PositionDraftCharacterEnemy:setAlpha( 0 ) --[[ @ 0]]
			f54_arg0.clipFinished( f54_arg0.PositionDraftCharacterEnemy ) --[[ @ 0]]
			f54_arg0.PositionDraftCharacter:completeAnimation() --[[ @ 0]]
			f54_arg0.PositionDraftCharacter:setAlpha( 1 ) --[[ @ 0]]
			f54_arg0.clipFinished( f54_arg0.PositionDraftCharacter ) --[[ @ 0]]
			f54_arg0.ClientClanTag:completeAnimation() --[[ @ 0]]
			f54_arg0.ClientClanTag:setAlpha( 1 ) --[[ @ 0]]
			f54_arg0.clipFinished( f54_arg0.ClientClanTag ) --[[ @ 0]]
		end
	},
	Friendly_ValidClient = {
		DefaultClip = function ( f55_arg0, f55_arg1 )
			f55_arg0:__resetProperties() --[[ @ 0]]
			f55_arg0:setupElementClipCounter( 7 ) --[[ @ 0]]
			f55_arg0.EnemyBackground:completeAnimation() --[[ @ 0]]
			f55_arg0.EnemyBackground:setAlpha( 0 ) --[[ @ 0]]
			f55_arg0.clipFinished( f55_arg0.EnemyBackground ) --[[ @ 0]]
			f55_arg0.FriendlyBackground:completeAnimation() --[[ @ 0]]
			f55_arg0.FriendlyBackground:setAlpha( 0.3 ) --[[ @ 0]]
			f55_arg0.clipFinished( f55_arg0.FriendlyBackground ) --[[ @ 0]]
			f55_arg0.TopBarFriendly:completeAnimation() --[[ @ 0]]
			f55_arg0.TopBarFriendly:setAlpha( 0.6 ) --[[ @ 0]]
			f55_arg0.clipFinished( f55_arg0.TopBarFriendly ) --[[ @ 0]]
			f55_arg0.PositionDraftCharacterEnemy:completeAnimation() --[[ @ 0]]
			f55_arg0.PositionDraftCharacterEnemy:setAlpha( 0 ) --[[ @ 0]]
			f55_arg0.clipFinished( f55_arg0.PositionDraftCharacterEnemy ) --[[ @ 0]]
			f55_arg0.PositionDraftCharacter:completeAnimation() --[[ @ 0]]
			f55_arg0.PositionDraftCharacter:setAlpha( 1 ) --[[ @ 0]]
			f55_arg0.clipFinished( f55_arg0.PositionDraftCharacter ) --[[ @ 0]]
			f55_arg0.BG:completeAnimation() --[[ @ 0]]
			f55_arg0.BG:setAlpha( 0.9 ) --[[ @ 0]]
			f55_arg0.clipFinished( f55_arg0.BG ) --[[ @ 0]]
			f55_arg0.ClientClanTag:completeAnimation() --[[ @ 0]]
			f55_arg0.ClientClanTag:setAlpha( 1 ) --[[ @ 0]]
			f55_arg0.clipFinished( f55_arg0.ClientClanTag ) --[[ @ 0]]
		end
	},
	Friendly_Searching = {
		DefaultClip = function ( f56_arg0, f56_arg1 )
			f56_arg0:__resetProperties() --[[ @ 0]]
			f56_arg0:setupElementClipCounter( 8 ) --[[ @ 0]]
			f56_arg0.EnemyBackground:completeAnimation() --[[ @ 0]]
			f56_arg0.EnemyBackground:setAlpha( 0 ) --[[ @ 0]]
			f56_arg0.clipFinished( f56_arg0.EnemyBackground ) --[[ @ 0]]
			f56_arg0.FriendlyBackground:completeAnimation() --[[ @ 0]]
			f56_arg0.FriendlyBackground:setAlpha( 0.3 ) --[[ @ 0]]
			f56_arg0.clipFinished( f56_arg0.FriendlyBackground ) --[[ @ 0]]
			f56_arg0.TopBarFriendly:completeAnimation() --[[ @ 0]]
			f56_arg0.TopBarFriendly:setAlpha( 0.6 ) --[[ @ 0]]
			f56_arg0.clipFinished( f56_arg0.TopBarFriendly ) --[[ @ 0]]
			f56_arg0.PositionDraftCharacterEnemy:completeAnimation() --[[ @ 0]]
			f56_arg0.PositionDraftCharacterEnemy:setAlpha( 0 ) --[[ @ 0]]
			f56_arg0.clipFinished( f56_arg0.PositionDraftCharacterEnemy ) --[[ @ 0]]
			f56_arg0.BG:completeAnimation() --[[ @ 0]]
			f56_arg0.BG:setAlpha( 0.9 ) --[[ @ 0]]
			f56_arg0.clipFinished( f56_arg0.BG ) --[[ @ 0]]
			f56_arg0.Rank:completeAnimation() --[[ @ 0]]
			f56_arg0.Rank:setAlpha( 0 ) --[[ @ 0]]
			f56_arg0.clipFinished( f56_arg0.Rank ) --[[ @ 0]]
			f56_arg0.ClientClanTag:completeAnimation() --[[ @ 0]]
			f56_arg0.ClientClanTag:setAlpha( 0 ) --[[ @ 0]]
			f56_arg0.clipFinished( f56_arg0.ClientClanTag ) --[[ @ 0]]
			f56_arg0.ClientGamertag:completeAnimation() --[[ @ 0]]
			f56_arg0.ClientGamertag:setAlpha( 0 ) --[[ @ 0]]
			f56_arg0.clipFinished( f56_arg0.ClientGamertag ) --[[ @ 0]]
		end
	},
	Enemy_CharacterSelected_Rank = {
		DefaultClip = function ( f57_arg0, f57_arg1 )
			f57_arg0:__resetProperties() --[[ @ 0]]
			f57_arg0:setupElementClipCounter( 7 ) --[[ @ 0]]
			f57_arg0.EnemyBackground:completeAnimation() --[[ @ 0]]
			f57_arg0.EnemyBackground:setAlpha( 0.3 ) --[[ @ 0]]
			f57_arg0.clipFinished( f57_arg0.EnemyBackground ) --[[ @ 0]]
			f57_arg0.FriendlyBackground:completeAnimation() --[[ @ 0]]
			f57_arg0.FriendlyBackground:setAlpha( 0 ) --[[ @ 0]]
			f57_arg0.clipFinished( f57_arg0.FriendlyBackground ) --[[ @ 0]]
			f57_arg0.TopBarEnemy:completeAnimation() --[[ @ 0]]
			f57_arg0.TopBarEnemy:setAlpha( 0.6 ) --[[ @ 0]]
			f57_arg0.clipFinished( f57_arg0.TopBarEnemy ) --[[ @ 0]]
			f57_arg0.PositionDraftCharacter:completeAnimation() --[[ @ 0]]
			f57_arg0.PositionDraftCharacter:setAlpha( 1 ) --[[ @ 0]]
			f57_arg0.clipFinished( f57_arg0.PositionDraftCharacter ) --[[ @ 0]]
			f57_arg0.Rank:completeAnimation() --[[ @ 0]]
			f57_arg0.Rank:setAlpha( 1 ) --[[ @ 0]]
			f57_arg0.clipFinished( f57_arg0.Rank ) --[[ @ 0]]
			f57_arg0.ClientClanTag:completeAnimation() --[[ @ 0]]
			f57_arg0.ClientClanTag:setLeftRight( 1, 1, -149, -9 ) --[[ @ 0]]
			f57_arg0.ClientClanTag:setAlpha( 1 ) --[[ @ 0]]
			f57_arg0.clipFinished( f57_arg0.ClientClanTag ) --[[ @ 0]]
			f57_arg0.ClientGamertag:completeAnimation() --[[ @ 0]]
			f57_arg0.ClientGamertag:setLeftRight( 1, 1, -149, -9 ) --[[ @ 0]]
			f57_arg0.clipFinished( f57_arg0.ClientGamertag ) --[[ @ 0]]
		end
	},
	Enemy_CharacterSelected = {
		DefaultClip = function ( f58_arg0, f58_arg1 )
			f58_arg0:__resetProperties() --[[ @ 0]]
			f58_arg0:setupElementClipCounter( 5 ) --[[ @ 0]]
			f58_arg0.EnemyBackground:completeAnimation() --[[ @ 0]]
			f58_arg0.EnemyBackground:setAlpha( 0.3 ) --[[ @ 0]]
			f58_arg0.clipFinished( f58_arg0.EnemyBackground ) --[[ @ 0]]
			f58_arg0.FriendlyBackground:completeAnimation() --[[ @ 0]]
			f58_arg0.FriendlyBackground:setAlpha( 0 ) --[[ @ 0]]
			f58_arg0.clipFinished( f58_arg0.FriendlyBackground ) --[[ @ 0]]
			f58_arg0.TopBarEnemy:completeAnimation() --[[ @ 0]]
			f58_arg0.TopBarEnemy:setAlpha( 0.6 ) --[[ @ 0]]
			f58_arg0.clipFinished( f58_arg0.TopBarEnemy ) --[[ @ 0]]
			f58_arg0.PositionDraftCharacter:completeAnimation() --[[ @ 0]]
			f58_arg0.PositionDraftCharacter:setAlpha( 1 ) --[[ @ 0]]
			f58_arg0.clipFinished( f58_arg0.PositionDraftCharacter ) --[[ @ 0]]
			f58_arg0.ClientClanTag:completeAnimation() --[[ @ 0]]
			f58_arg0.ClientClanTag:setAlpha( 1 ) --[[ @ 0]]
			f58_arg0.clipFinished( f58_arg0.ClientClanTag ) --[[ @ 0]]
		end
	},
	Enemy_ValidClient = {
		DefaultClip = function ( f59_arg0, f59_arg1 )
			f59_arg0:__resetProperties() --[[ @ 0]]
			f59_arg0:setupElementClipCounter( 6 ) --[[ @ 0]]
			f59_arg0.EnemyBackground:completeAnimation() --[[ @ 0]]
			f59_arg0.EnemyBackground:setAlpha( 0.3 ) --[[ @ 0]]
			f59_arg0.clipFinished( f59_arg0.EnemyBackground ) --[[ @ 0]]
			f59_arg0.FriendlyBackground:completeAnimation() --[[ @ 0]]
			f59_arg0.FriendlyBackground:setAlpha( 0 ) --[[ @ 0]]
			f59_arg0.clipFinished( f59_arg0.FriendlyBackground ) --[[ @ 0]]
			f59_arg0.TopBarEnemy:completeAnimation() --[[ @ 0]]
			f59_arg0.TopBarEnemy:setAlpha( 0.6 ) --[[ @ 0]]
			f59_arg0.clipFinished( f59_arg0.TopBarEnemy ) --[[ @ 0]]
			f59_arg0.PositionDraftCharacter:completeAnimation() --[[ @ 0]]
			f59_arg0.PositionDraftCharacter:setAlpha( 1 ) --[[ @ 0]]
			f59_arg0.clipFinished( f59_arg0.PositionDraftCharacter ) --[[ @ 0]]
			f59_arg0.BG:completeAnimation() --[[ @ 0]]
			f59_arg0.BG:setAlpha( 0.9 ) --[[ @ 0]]
			f59_arg0.clipFinished( f59_arg0.BG ) --[[ @ 0]]
			f59_arg0.ClientClanTag:completeAnimation() --[[ @ 0]]
			f59_arg0.ClientClanTag:setAlpha( 1 ) --[[ @ 0]]
			f59_arg0.clipFinished( f59_arg0.ClientClanTag ) --[[ @ 0]]
		end
	},
	Enemy_Searching = {
		DefaultClip = function ( f60_arg0, f60_arg1 )
			f60_arg0:__resetProperties() --[[ @ 0]]
			f60_arg0:setupElementClipCounter( 8 ) --[[ @ 0]]
			f60_arg0.EnemyBackground:completeAnimation() --[[ @ 0]]
			f60_arg0.EnemyBackground:setAlpha( 0.3 ) --[[ @ 0]]
			f60_arg0.clipFinished( f60_arg0.EnemyBackground ) --[[ @ 0]]
			f60_arg0.FriendlyBackground:completeAnimation() --[[ @ 0]]
			f60_arg0.FriendlyBackground:setAlpha( 0 ) --[[ @ 0]]
			f60_arg0.clipFinished( f60_arg0.FriendlyBackground ) --[[ @ 0]]
			f60_arg0.TopBarEnemy:completeAnimation() --[[ @ 0]]
			f60_arg0.TopBarEnemy:setAlpha( 0.6 ) --[[ @ 0]]
			f60_arg0.clipFinished( f60_arg0.TopBarEnemy ) --[[ @ 0]]
			f60_arg0.PositionDraftCharacter:completeAnimation() --[[ @ 0]]
			f60_arg0.PositionDraftCharacter:setAlpha( 0 ) --[[ @ 0]]
			f60_arg0.clipFinished( f60_arg0.PositionDraftCharacter ) --[[ @ 0]]
			f60_arg0.BG:completeAnimation() --[[ @ 0]]
			f60_arg0.BG:setAlpha( 0.9 ) --[[ @ 0]]
			f60_arg0.clipFinished( f60_arg0.BG ) --[[ @ 0]]
			f60_arg0.Rank:completeAnimation() --[[ @ 0]]
			f60_arg0.Rank:setAlpha( 0 ) --[[ @ 0]]
			f60_arg0.clipFinished( f60_arg0.Rank ) --[[ @ 0]]
			f60_arg0.ClientClanTag:completeAnimation() --[[ @ 0]]
			f60_arg0.ClientClanTag:setAlpha( 0 ) --[[ @ 0]]
			f60_arg0.clipFinished( f60_arg0.ClientClanTag ) --[[ @ 0]]
			f60_arg0.ClientGamertag:completeAnimation() --[[ @ 0]]
			f60_arg0.ClientGamertag:setAlpha( 0 ) --[[ @ 0]]
			f60_arg0.clipFinished( f60_arg0.ClientGamertag ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.PositionDraft_ViewTeams_CodCaster_Client.__onClose = function ( f61_arg0 )
	f61_arg0.EnemyBackground:close() --[[ @ 0]]
	f61_arg0.FriendlyBackground:close() --[[ @ 0]]
	f61_arg0.TopBarEnemy:close() --[[ @ 0]]
	f61_arg0.TopBarFriendly:close() --[[ @ 0]]
	f61_arg0.PositionDraftCharacterEnemy:close() --[[ @ 0]]
	f61_arg0.PositionDraftCharacter:close() --[[ @ 0]]
	f61_arg0.Rank:close() --[[ @ 0]]
	f61_arg0.ClientClanTag:close() --[[ @ 0]]
	f61_arg0.ClientGamertag:close() --[[ @ 0]]
	f61_arg0.LeaderIcon:close() --[[ @ 0]]
	f61_arg0.emptyFocusable:close() --[[ @ 0]]
end
 --[[ @ 0]]
