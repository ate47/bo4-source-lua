-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:50
CoD.MPDamageFeedback_PredictedIndicator = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.MPDamageFeedback_PredictedIndicator.__defaultWidth = 60 --[[ @ 0]]
CoD.MPDamageFeedback_PredictedIndicator.__defaultHeight = 60 --[[ @ 0]]
CoD.MPDamageFeedback_PredictedIndicator.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.MPDamageFeedback_PredictedIndicator ) --[[ @ 0]]
	self.id = "MPDamageFeedback_PredictedIndicator" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local Indicator = LUI.UIImage.new( 0.45, 0.55, 0, 0, 0.45, 0.55, 0, 0 ) --[[ @ 0]]
	Indicator:setRGB( ColorSet.PlayerGreen.r, ColorSet.PlayerGreen.g, ColorSet.PlayerGreen.b ) --[[ @ 0]]
	Indicator:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( Indicator ) --[[ @ 0]]
	self.Indicator = Indicator --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Predicted",
			condition = function ( menu, element, event )
				return DamageFeedbackFlagSet( element, Enum[@"damagefeedbackflags"][@"hash_7E0574E9510E3672"] )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "damageFeedbackState", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "damageFeedbackState"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.MPDamageFeedback_PredictedIndicator.__resetProperties = function ( f4_arg0 )
	f4_arg0.Indicator:completeAnimation() --[[ @ 0]]
	f4_arg0.Indicator:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.MPDamageFeedback_PredictedIndicator.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f5_arg0, f5_arg1 )
			f5_arg0:__resetProperties() --[[ @ 0]]
			f5_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	Predicted = {
		DefaultClip = function ( f6_arg0, f6_arg1 )
			f6_arg0:__resetProperties() --[[ @ 0]]
			f6_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f6_arg0.Indicator:completeAnimation() --[[ @ 0]]
			f6_arg0.Indicator:setAlpha( 1 ) --[[ @ 0]]
			f6_arg0.clipFinished( f6_arg0.Indicator ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
