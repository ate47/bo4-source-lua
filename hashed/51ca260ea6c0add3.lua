-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:50
CoD.ArenaKillcamPlayerRank = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.ArenaKillcamPlayerRank.__defaultWidth = 147 --[[ @ 0]]
CoD.ArenaKillcamPlayerRank.__defaultHeight = 40 --[[ @ 0]]
CoD.ArenaKillcamPlayerRank.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.ArenaKillcamPlayerRank ) --[[ @ 0]]
	self.id = "ArenaKillcamPlayerRank" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local Backing = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	Backing:setRGB( 0.06, 0.06, 0.06 ) --[[ @ 0]]
	Backing:setAlpha( 0.8 ) --[[ @ 0]]
	self:addElement( Backing ) --[[ @ 0]]
	self.Backing = Backing --[[ @ 0]]
	
	local Rank = LUI.UIText.new( 0.5, 0.5, -61, 0, 0.5, 0.5, -17, 19 ) --[[ @ 0]]
	Rank:setTTF( "0arame_mono_stencil" ) --[[ @ 0]]
	Rank:setAlignment( Enum[@"luialignment"][@"lui_alignment_right"] ) --[[ @ 0]]
	Rank.__String_Reference = function ( f2_arg0 )
		local f2_local0 = f2_arg0:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			Rank:setText( CoD.ArenaLeaguePlayUtility.GetLeagueLadderPlayerRankFromXuid( f2_local0 ) ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	Rank:subscribeToGlobalModel( f1_arg1, "PerController", "predictedClientModel", function ( model, f3_arg1 )
		if f3_arg1["__Rank.__String_Reference_predictedClientModel->xuid"] then
			f3_arg1:removeSubscription( f3_arg1["__Rank.__String_Reference_predictedClientModel->xuid"] ) --[[ @ 0]]
			f3_arg1["__Rank.__String_Reference_predictedClientModel->xuid"] = nil --[[ @ 0]]
		end
		if model then
			local f3_local0 = model:get() --[[ @ 0]]
			local f3_local1 = model:get() --[[ @ 0]]
			model = f3_local0 and f3_local1.xuid --[[ @ 0]]
		end
		if model then
			f3_arg1["__Rank.__String_Reference_predictedClientModel->xuid"] = f3_arg1:subscribeToModel( model, Rank.__String_Reference ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	Rank.__String_Reference_FullPath = function ()
		local f4_local0 = DataSources.PerController.getModel( f1_arg1 ) --[[ @ 0]]
		f4_local0 = f4_local0.predictedClientModel --[[ @ 0]]
		if f4_local0 then
			f4_local0 = f4_local0:get() --[[ @ 0]]
		end
		if f4_local0 then
			f4_local0 = f4_local0.xuid --[[ @ 0]]
		end
		if f4_local0 then
			Rank.__String_Reference( f4_local0 ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	self:addElement( Rank ) --[[ @ 0]]
	self.Rank = Rank --[[ @ 0]]
	
	local RankIcon = LUI.UIImage.new( 0.5, 0.5, 0, 40, 0.5, 0.5, -20, 20 ) --[[ @ 0]]
	RankIcon.__Image = function ( f5_arg0 )
		local f5_local0 = f5_arg0:get() --[[ @ 0]]
		if f5_local0 ~= nil then
			RankIcon:setImage( RegisterImage( CoD.ArenaLeaguePlayUtility.GetLeagueLadderPlayerSmallRankIconFromXuid( f5_local0 ) ) ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	RankIcon:subscribeToGlobalModel( f1_arg1, "PerController", "predictedClientModel", function ( model, f6_arg1 )
		if f6_arg1["__RankIcon.__Image_predictedClientModel->xuid"] then
			f6_arg1:removeSubscription( f6_arg1["__RankIcon.__Image_predictedClientModel->xuid"] ) --[[ @ 0]]
			f6_arg1["__RankIcon.__Image_predictedClientModel->xuid"] = nil --[[ @ 0]]
		end
		if model then
			local f6_local0 = model:get() --[[ @ 0]]
			local f6_local1 = model:get() --[[ @ 0]]
			model = f6_local0 and f6_local1.xuid --[[ @ 0]]
		end
		if model then
			f6_arg1["__RankIcon.__Image_predictedClientModel->xuid"] = f6_arg1:subscribeToModel( model, RankIcon.__Image ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	RankIcon.__Image_FullPath = function ()
		local f7_local0 = DataSources.PerController.getModel( f1_arg1 ) --[[ @ 0]]
		f7_local0 = f7_local0.predictedClientModel --[[ @ 0]]
		if f7_local0 then
			f7_local0 = f7_local0:get() --[[ @ 0]]
		end
		if f7_local0 then
			f7_local0 = f7_local0.xuid --[[ @ 0]]
		end
		if f7_local0 then
			RankIcon.__Image( f7_local0 ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	self:addElement( RankIcon ) --[[ @ 0]]
	self.RankIcon = RankIcon --[[ @ 0]]
	
	local f1_local4 = Rank --[[ @ 0]]
	local f1_local5 = Rank.subscribeToModel --[[ @ 0]]
	local f1_local6 = DataSources.LobbyRoot.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local5( f1_local4, f1_local6.lobbyNav, Rank.__String_Reference_FullPath ) --[[ @ 0]]
	f1_local4 = Rank --[[ @ 0]]
	f1_local5 = Rank.subscribeToModel --[[ @ 0]]
	f1_local6 = DataSources.LobbyRoot.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local5( f1_local4, f1_local6["privateClient.update"], Rank.__String_Reference_FullPath ) --[[ @ 0]]
	f1_local4 = Rank --[[ @ 0]]
	f1_local5 = Rank.subscribeToModel --[[ @ 0]]
	f1_local6 = DataSources.LobbyRoot.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local5( f1_local4, f1_local6["gameClient.update"], Rank.__String_Reference_FullPath ) --[[ @ 0]]
	f1_local4 = Rank --[[ @ 0]]
	f1_local5 = Rank.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local5( f1_local4, f1_local6["PartyPrivacy.privacy"], Rank.__String_Reference_FullPath ) --[[ @ 0]]
	f1_local4 = RankIcon --[[ @ 0]]
	f1_local5 = RankIcon.subscribeToModel --[[ @ 0]]
	f1_local6 = DataSources.LobbyRoot.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local5( f1_local4, f1_local6.lobbyNav, RankIcon.__Image_FullPath ) --[[ @ 0]]
	f1_local4 = RankIcon --[[ @ 0]]
	f1_local5 = RankIcon.subscribeToModel --[[ @ 0]]
	f1_local6 = DataSources.LobbyRoot.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local5( f1_local4, f1_local6["privateClient.update"], RankIcon.__Image_FullPath ) --[[ @ 0]]
	f1_local4 = RankIcon --[[ @ 0]]
	f1_local5 = RankIcon.subscribeToModel --[[ @ 0]]
	f1_local6 = DataSources.LobbyRoot.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local5( f1_local4, f1_local6["gameClient.update"], RankIcon.__Image_FullPath ) --[[ @ 0]]
	f1_local4 = RankIcon --[[ @ 0]]
	f1_local5 = RankIcon.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local5( f1_local4, f1_local6["PartyPrivacy.privacy"], RankIcon.__Image_FullPath ) --[[ @ 0]]
	self:mergeStateConditions( {
		{
			stateName = "Visible",
			condition = function ( menu, element, event )
				return not IsLAN()
			end
		}
	} ) --[[ @ 0]]
	f1_local4 = self --[[ @ 0]]
	f1_local5 = self.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local5( f1_local4, f1_local6["lobbyRoot.lobbyNetworkMode"], function ( f9_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f9_arg0:get(),
			modelName = "lobbyRoot.lobbyNetworkMode"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local4 = self --[[ @ 0]]
	f1_local5 = self.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local5( f1_local4, f1_local6["lobbyRoot.lobbyNav"], function ( f10_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f10_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.ArenaKillcamPlayerRank.__resetProperties = function ( f11_arg0 )
	f11_arg0.RankIcon:completeAnimation() --[[ @ 0]]
	f11_arg0.Rank:completeAnimation() --[[ @ 0]]
	f11_arg0.Backing:completeAnimation() --[[ @ 0]]
	f11_arg0.RankIcon:setAlpha( 1 ) --[[ @ 0]]
	f11_arg0.Rank:setAlpha( 1 ) --[[ @ 0]]
	f11_arg0.Backing:setAlpha( 0.8 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ArenaKillcamPlayerRank.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f12_arg0, f12_arg1 )
			f12_arg0:__resetProperties() --[[ @ 0]]
			f12_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f12_arg0.Backing:completeAnimation() --[[ @ 0]]
			f12_arg0.Backing:setAlpha( 0 ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.Backing ) --[[ @ 0]]
			f12_arg0.Rank:completeAnimation() --[[ @ 0]]
			f12_arg0.Rank:setAlpha( 0 ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.Rank ) --[[ @ 0]]
			f12_arg0.RankIcon:completeAnimation() --[[ @ 0]]
			f12_arg0.RankIcon:setAlpha( 0 ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.RankIcon ) --[[ @ 0]]
		end
	},
	Visible = {
		DefaultClip = function ( f13_arg0, f13_arg1 )
			f13_arg0:__resetProperties() --[[ @ 0]]
			f13_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.ArenaKillcamPlayerRank.__onClose = function ( f14_arg0 )
	f14_arg0.Rank:close() --[[ @ 0]]
	f14_arg0.RankIcon:close() --[[ @ 0]]
end
 --[[ @ 0]]
