-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
require( "x64:60353fedd804c5d3" ) --[[ @ 0]]
require( "x64:95eddaed66d3425" ) --[[ @ 0]]
require( "x64:284c3b03ac8b3569" ) --[[ @ 0]]
require( "x64:578ae4ff448c6d52" ) --[[ @ 0]]
require( "x64:12d3ff0a1b8cdca" ) --[[ @ 0]]
require( "x64:2145ddbfa32b2781" ) --[[ @ 0]]
require( "x64:7e5bbf49aab89fa3" ) --[[ @ 0]]

CoD.WarzoneUseTimer = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.WarzoneUseTimer.__defaultWidth = 600 --[[ @ 0]]
CoD.WarzoneUseTimer.__defaultHeight = 80 --[[ @ 0]]
CoD.WarzoneUseTimer.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	CoD.BaseUtility.InitControllerModelIfNotSet( f1_arg1, "hudItems.laststand.reviveProgress", 0 ) --[[ @ 0]]
	CoD.BaseUtility.InitControllerModelIfNotSet( f1_arg1, "hudItems.laststand.beingRevived", 0 ) --[[ @ 0]]
	CoD.BaseUtility.InitControllerModelIfNotSet( f1_arg1, "hudItems.dynEntUseHoldProgress", 0 ) --[[ @ 0]]
	CoD.BaseUtility.InitControllerModelIfNotSet( f1_arg1, "hudItems.depositing", 0 ) --[[ @ 0]]
	CoD.BaseUtility.InitControllerModelIfNotSet( f1_arg1, "hudItems.laststand.progress", 0 ) --[[ @ 0]]
	CoD.BaseUtility.InitControllerModelIfNotSet( f1_arg1, "hudItems.beingFinished", 0 ) --[[ @ 0]]
	self:setUseCylinderMapping( false ) --[[ @ 0]]
	self:setClass( CoD.WarzoneUseTimer ) --[[ @ 0]]
	self.id = "WarzoneUseTimer" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local dynentUseProgress = CoD.WarzoneUseTimerDynentProgress.new( f1_arg0, f1_arg1, 0, 0, 60, 540, 0, 0, 53.5, 71.5 ) --[[ @ 0]]
	dynentUseProgress:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( dynentUseProgress ) --[[ @ 0]]
	self.dynentUseProgress = dynentUseProgress --[[ @ 0]]
	
	local healProgress = CoD.WarzoneUseTimerProgress.new( f1_arg0, f1_arg1, 0.5, 0.5, -240, 240, 0.5, 0.5, 13.5, 31.5 ) --[[ @ 0]]
	healProgress:setAlpha( 0 ) --[[ @ 0]]
	healProgress:subscribeToGlobalModel( f1_arg1, "PlayerAbilities", "playerGadget1.powerRatio", function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			healProgress.progressBar:setShaderVector( 0, SubtractVectorComponentFrom( 1, 1, CoD.GetVectorComponentFromString( f2_local0, 1 ), CoD.GetVectorComponentFromString( f2_local0, 2 ), CoD.GetVectorComponentFromString( f2_local0, 3 ), CoD.GetVectorComponentFromString( f2_local0, 4 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( healProgress ) --[[ @ 0]]
	self.healProgress = healProgress --[[ @ 0]]
	
	local beingRevivedProgress = CoD.WarzoneUseTimerProgress.new( f1_arg0, f1_arg1, 0.5, 0.5, -240, 240, 0.5, 0.5, 13.5, 31.5 ) --[[ @ 0]]
	beingRevivedProgress:setAlpha( 0 ) --[[ @ 0]]
	beingRevivedProgress.progressBar:setShaderVector( 0, SubtractVectorComponentFrom( 1, 1, 0.64, 0, 0, 0 ) ) --[[ @ 0]]
	self:addElement( beingRevivedProgress ) --[[ @ 0]]
	self.beingRevivedProgress = beingRevivedProgress --[[ @ 0]]
	
	local bleedoutProgress = CoD.WarzoneUseTimerProgress.new( f1_arg0, f1_arg1, 0.5, 0.5, -240, 240, 0.5, 0.5, 13.5, 31.5 ) --[[ @ 0]]
	bleedoutProgress:setAlpha( 0 ) --[[ @ 0]]
	bleedoutProgress.progressBar:setRGB( ColorSet.HealthBarForegroundEnemy.r, ColorSet.HealthBarForegroundEnemy.g, ColorSet.HealthBarForegroundEnemy.b ) --[[ @ 0]]
	bleedoutProgress.progressBar:setShaderVector( 0, SubtractVectorComponentFrom( 1, 1, 0.64, 0, 0, 0 ) ) --[[ @ 0]]
	self:addElement( bleedoutProgress ) --[[ @ 0]]
	self.bleedoutProgress = bleedoutProgress --[[ @ 0]]
	
	local reviveProgress = CoD.WarzoneUseTimerProgress.new( f1_arg0, f1_arg1, 0.5, 0.5, -240, 240, 0.5, 0.5, 13.5, 31.5 ) --[[ @ 0]]
	reviveProgress:setAlpha( 0 ) --[[ @ 0]]
	reviveProgress:subscribeToGlobalModel( f1_arg1, "HUDItems", "laststand.reviveProgress", function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			CoD.BaseUtility.SmoothLinearInterpolateClientTime( f1_arg1, "reviveProgress", model, f3_local0 ) --[[ @ 0]]
			reviveProgress.progressBar:setShaderVector( 0, CoD.GetVectorComponentFromString( f3_local0, 1 ), CoD.GetVectorComponentFromString( f3_local0, 2 ), CoD.GetVectorComponentFromString( f3_local0, 3 ), CoD.GetVectorComponentFromString( f3_local0, 4 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( reviveProgress ) --[[ @ 0]]
	self.reviveProgress = reviveProgress --[[ @ 0]]
	
	local DepositText = CoD.WarzoneUseTimerDeposit.new( f1_arg0, f1_arg1, 0.5, 0.5, -300, 300, 0.5, 0.5, -40, -4 ) --[[ @ 0]]
	DepositText:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( DepositText ) --[[ @ 0]]
	self.DepositText = DepositText --[[ @ 0]]
	
	local UsingText = CoD.WarzoneUseTimerUsing.new( f1_arg0, f1_arg1, 0.5, 0.5, -300, 300, 0.5, 0.5, -40, -4 ) --[[ @ 0]]
	UsingText:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( UsingText ) --[[ @ 0]]
	self.UsingText = UsingText --[[ @ 0]]
	
	local ReviveText = CoD.WarzoneUseTimerRevivePlayer.new( f1_arg0, f1_arg1, 0.5, 0.5, -300, 300, 0.5, 0.5, -40, -4 ) --[[ @ 0]]
	ReviveText:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( ReviveText ) --[[ @ 0]]
	self.ReviveText = ReviveText --[[ @ 0]]
	
	local BeingRevivedText = CoD.WarzoneUseTimerBeingRevived.new( f1_arg0, f1_arg1, 0.5, 0.5, -121, 129, 0.5, 0.5, -37, -7 ) --[[ @ 0]]
	BeingRevivedText:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( BeingRevivedText ) --[[ @ 0]]
	self.BeingRevivedText = BeingRevivedText --[[ @ 0]]
	
	local CowardsWayPrompt = CoD.WarzoneUseTimerCowardsWay.new( f1_arg0, f1_arg1, 0.5, 0.5, -300, 300, 0.5, 0.5, -40, -4 ) --[[ @ 0]]
	CowardsWayPrompt:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( CowardsWayPrompt ) --[[ @ 0]]
	self.CowardsWayPrompt = CowardsWayPrompt --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Healing",
			condition = function ( menu, element, event )
				local f4_local0 = CoD.ModelUtility.IsModelValueGreaterThan( f1_arg1, "playerAbilities.PlayerGadget1.powerRatio", 0 ) --[[ @ 0]]
				if f4_local0 then
					f4_local0 = CoD.ModelUtility.IsModelValueEqualToEnum( f1_arg1, "playerAbilities.playerGadget1.state", Enum[@"hash_F0447219F15F7F3"][@"hash_51873A43E9D1620E"] ) --[[ @ 0]]
					if f4_local0 then
						f4_local0 = not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_534C7B2375D2D47"] ) --[[ @ 0]]
					end
				end
				return f4_local0
			end
		},
		{
			stateName = "Reviving",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsModelValueGreaterThan( f1_arg1, "hudItems.laststand.reviveProgress", 0 )
			end
		},
		{
			stateName = "BeingRevived",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsModelValueEqualTo( f1_arg1, "hudItems.laststand.beingRevived", 1 )
			end
		},
		{
			stateName = "CowardsWayOut",
			condition = function ( menu, element, event )
				local f7_local0 = IsGametypeSettingsValue( "wzEnableCowardsWayOut", 1 ) --[[ @ 0]]
				if f7_local0 then
					f7_local0 = CoD.WZUtility.IsInLastStand( f1_arg1, "hudItems.lastStand" ) --[[ @ 0]]
					if f7_local0 then
						if not Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"] ) then
							f7_local0 = CoD.ModelUtility.IsModelValueEqualTo( f1_arg1, "hudItems.beingFinished", 0 ) --[[ @ 0]]
						else
							f7_local0 = false --[[ @ 0]]
						end
					end
				end
				return f7_local0
			end
		},
		{
			stateName = "Deposit",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsModelValueGreaterThan( f1_arg1, "hudItems.dynEntUseHoldProgress", 0 ) and CoD.ModelUtility.IsModelValueGreaterThan( f1_arg1, "hudItems.depositing", 0 )
			end
		}
	} ) --[[ @ 0]]
	local f1_local11 = self --[[ @ 0]]
	local f1_local12 = self.subscribeToModel --[[ @ 0]]
	local f1_local13 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local12( f1_local11, f1_local13["playerAbilities.PlayerGadget1.powerRatio"], function ( f9_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f9_arg0:get(),
			modelName = "playerAbilities.PlayerGadget1.powerRatio"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local11 = self --[[ @ 0]]
	f1_local12 = self.subscribeToModel --[[ @ 0]]
	f1_local13 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local12( f1_local11, f1_local13["playerAbilities.playerGadget1.state"], function ( f10_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f10_arg0:get(),
			modelName = "playerAbilities.playerGadget1.state"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local11 = self --[[ @ 0]]
	f1_local12 = self.subscribeToModel --[[ @ 0]]
	f1_local13 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local12( f1_local11, f1_local13["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_534C7B2375D2D47"]], function ( f11_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f11_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_534C7B2375D2D47"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local11 = self --[[ @ 0]]
	f1_local12 = self.subscribeToModel --[[ @ 0]]
	f1_local13 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local12( f1_local11, f1_local13["hudItems.laststand.reviveProgress"], function ( f12_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f12_arg0:get(),
			modelName = "hudItems.laststand.reviveProgress"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local11 = self --[[ @ 0]]
	f1_local12 = self.subscribeToModel --[[ @ 0]]
	f1_local13 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local12( f1_local11, f1_local13["hudItems.laststand.beingRevived"], function ( f13_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f13_arg0:get(),
			modelName = "hudItems.laststand.beingRevived"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local11 = self --[[ @ 0]]
	f1_local12 = self.subscribeToModel --[[ @ 0]]
	f1_local13 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local12( f1_local11, f1_local13["hudItems.lastStand.progress"], function ( f14_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f14_arg0:get(),
			modelName = "hudItems.lastStand.progress"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local11 = self --[[ @ 0]]
	f1_local12 = self.subscribeToModel --[[ @ 0]]
	f1_local13 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local12( f1_local11, f1_local13["hudItems.lastStand.beingRevived"], function ( f15_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f15_arg0:get(),
			modelName = "hudItems.lastStand.beingRevived"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local11 = self --[[ @ 0]]
	f1_local12 = self.subscribeToModel --[[ @ 0]]
	f1_local13 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local12( f1_local11, f1_local13["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"]], function ( f16_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f16_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local11 = self --[[ @ 0]]
	f1_local12 = self.subscribeToModel --[[ @ 0]]
	f1_local13 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local12( f1_local11, f1_local13["hudItems.beingFinished"], function ( f17_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f17_arg0:get(),
			modelName = "hudItems.beingFinished"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local11 = self --[[ @ 0]]
	f1_local12 = self.subscribeToModel --[[ @ 0]]
	f1_local13 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local12( f1_local11, f1_local13["hudItems.dynEntUseHoldProgress"], function ( f18_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f18_arg0:get(),
			modelName = "hudItems.dynEntUseHoldProgress"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local11 = self --[[ @ 0]]
	f1_local12 = self.subscribeToModel --[[ @ 0]]
	f1_local13 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local12( f1_local11, f1_local13["hudItems.depositing"], function ( f19_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f19_arg0:get(),
			modelName = "hudItems.depositing"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	f1_local12 = self --[[ @ 0]]
	CoD.WZUtility.SetupReviveProgressBar( f1_arg0, f1_arg1, self.beingRevivedProgress ) --[[ @ 0]]
	CoD.WZUtility.SetupBleedoutProgressBar( f1_arg0, f1_arg1, self.bleedoutProgress ) --[[ @ 0]]
	return self
end
 --[[ @ 0]]
CoD.WarzoneUseTimer.__resetProperties = function ( f20_arg0 )
	f20_arg0.UsingText:completeAnimation() --[[ @ 0]]
	f20_arg0.healProgress:completeAnimation() --[[ @ 0]]
	f20_arg0.ReviveText:completeAnimation() --[[ @ 0]]
	f20_arg0.reviveProgress:completeAnimation() --[[ @ 0]]
	f20_arg0.beingRevivedProgress:completeAnimation() --[[ @ 0]]
	f20_arg0.BeingRevivedText:completeAnimation() --[[ @ 0]]
	f20_arg0.bleedoutProgress:completeAnimation() --[[ @ 0]]
	f20_arg0.CowardsWayPrompt:completeAnimation() --[[ @ 0]]
	f20_arg0.dynentUseProgress:completeAnimation() --[[ @ 0]]
	f20_arg0.DepositText:completeAnimation() --[[ @ 0]]
	f20_arg0.UsingText:setAlpha( 0 ) --[[ @ 0]]
	f20_arg0.healProgress:setAlpha( 0 ) --[[ @ 0]]
	f20_arg0.ReviveText:setAlpha( 0 ) --[[ @ 0]]
	f20_arg0.reviveProgress:setAlpha( 0 ) --[[ @ 0]]
	f20_arg0.beingRevivedProgress:setAlpha( 0 ) --[[ @ 0]]
	f20_arg0.BeingRevivedText:setAlpha( 0 ) --[[ @ 0]]
	f20_arg0.bleedoutProgress:setAlpha( 0 ) --[[ @ 0]]
	f20_arg0.CowardsWayPrompt:setAlpha( 0 ) --[[ @ 0]]
	f20_arg0.dynentUseProgress:setAlpha( 0 ) --[[ @ 0]]
	f20_arg0.DepositText:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.WarzoneUseTimer.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f21_arg0, f21_arg1 )
			f21_arg0:__resetProperties() --[[ @ 0]]
			f21_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	Healing = {
		DefaultClip = function ( f22_arg0, f22_arg1 )
			f22_arg0:__resetProperties() --[[ @ 0]]
			f22_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f22_arg0.healProgress:completeAnimation() --[[ @ 0]]
			f22_arg0.healProgress:setAlpha( 1 ) --[[ @ 0]]
			f22_arg0.clipFinished( f22_arg0.healProgress ) --[[ @ 0]]
			f22_arg0.UsingText:completeAnimation() --[[ @ 0]]
			f22_arg0.UsingText:setAlpha( 1 ) --[[ @ 0]]
			f22_arg0.clipFinished( f22_arg0.UsingText ) --[[ @ 0]]
		end
	},
	Reviving = {
		DefaultClip = function ( f23_arg0, f23_arg1 )
			f23_arg0:__resetProperties() --[[ @ 0]]
			f23_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f23_arg0.reviveProgress:completeAnimation() --[[ @ 0]]
			f23_arg0.reviveProgress:setAlpha( 1 ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.reviveProgress ) --[[ @ 0]]
			f23_arg0.ReviveText:completeAnimation() --[[ @ 0]]
			f23_arg0.ReviveText:setAlpha( 1 ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.ReviveText ) --[[ @ 0]]
		end
	},
	BeingRevived = {
		DefaultClip = function ( f24_arg0, f24_arg1 )
			f24_arg0:__resetProperties() --[[ @ 0]]
			f24_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f24_arg0.beingRevivedProgress:completeAnimation() --[[ @ 0]]
			f24_arg0.beingRevivedProgress:setAlpha( 1 ) --[[ @ 0]]
			f24_arg0.clipFinished( f24_arg0.beingRevivedProgress ) --[[ @ 0]]
			f24_arg0.BeingRevivedText:completeAnimation() --[[ @ 0]]
			f24_arg0.BeingRevivedText:setAlpha( 1 ) --[[ @ 0]]
			f24_arg0.clipFinished( f24_arg0.BeingRevivedText ) --[[ @ 0]]
		end
	},
	CowardsWayOut = {
		DefaultClip = function ( f25_arg0, f25_arg1 )
			f25_arg0:__resetProperties() --[[ @ 0]]
			f25_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f25_arg0.bleedoutProgress:completeAnimation() --[[ @ 0]]
			f25_arg0.bleedoutProgress:setAlpha( 1 ) --[[ @ 0]]
			f25_arg0.clipFinished( f25_arg0.bleedoutProgress ) --[[ @ 0]]
			f25_arg0.CowardsWayPrompt:completeAnimation() --[[ @ 0]]
			f25_arg0.CowardsWayPrompt:setAlpha( 1 ) --[[ @ 0]]
			f25_arg0.clipFinished( f25_arg0.CowardsWayPrompt ) --[[ @ 0]]
		end
	},
	Deposit = {
		DefaultClip = function ( f26_arg0, f26_arg1 )
			f26_arg0:__resetProperties() --[[ @ 0]]
			f26_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f26_arg0.dynentUseProgress:completeAnimation() --[[ @ 0]]
			f26_arg0.dynentUseProgress:setAlpha( 1 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.dynentUseProgress ) --[[ @ 0]]
			f26_arg0.DepositText:completeAnimation() --[[ @ 0]]
			f26_arg0.DepositText:setAlpha( 1 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.DepositText ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.WarzoneUseTimer.__onClose = function ( f27_arg0 )
	f27_arg0.dynentUseProgress:close() --[[ @ 0]]
	f27_arg0.healProgress:close() --[[ @ 0]]
	f27_arg0.beingRevivedProgress:close() --[[ @ 0]]
	f27_arg0.bleedoutProgress:close() --[[ @ 0]]
	f27_arg0.reviveProgress:close() --[[ @ 0]]
	f27_arg0.DepositText:close() --[[ @ 0]]
	f27_arg0.UsingText:close() --[[ @ 0]]
	f27_arg0.ReviveText:close() --[[ @ 0]]
	f27_arg0.BeingRevivedText:close() --[[ @ 0]]
	f27_arg0.CowardsWayPrompt:close() --[[ @ 0]]
end
 --[[ @ 0]]
