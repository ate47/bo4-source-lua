-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:51
CoD.EquippedBGBCount = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.EquippedBGBCount.__defaultWidth = 78 --[[ @ 0]]
CoD.EquippedBGBCount.__defaultHeight = 28 --[[ @ 0]]
CoD.EquippedBGBCount.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.EquippedBGBCount ) --[[ @ 0]]
	self.id = "EquippedBGBCount" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local Count = LUI.UIText.new( 0, 1, 0, 0, 0, 1, 3, 3 ) --[[ @ 0]]
	Count:setRGB( 0.58, 0.58, 0.58 ) --[[ @ 0]]
	Count:setText( 888 ) --[[ @ 0]]
	Count:setTTF( "skorzhen" ) --[[ @ 0]]
	Count:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_90D57B1E92D39D7" ) ) --[[ @ 0]]
	Count:setShaderVector( 0, 1, 0, 0, 0 ) --[[ @ 0]]
	Count:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	Count:setShaderVector( 2, 0, 0, 0, 0.9 ) --[[ @ 0]]
	Count:setLetterSpacing( 2 ) --[[ @ 0]]
	Count:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	Count:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	self:addElement( Count ) --[[ @ 0]]
	self.Count = Count --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.EquippedBGBCount.__resetProperties = function ( f2_arg0 )
	f2_arg0.Count:completeAnimation() --[[ @ 0]]
	f2_arg0.Count:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.EquippedBGBCount.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f3_arg0, f3_arg1 )
			f3_arg0:__resetProperties() --[[ @ 0]]
			f3_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	Hidden = {
		DefaultClip = function ( f4_arg0, f4_arg1 )
			f4_arg0:__resetProperties() --[[ @ 0]]
			f4_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f4_arg0.Count:completeAnimation() --[[ @ 0]]
			f4_arg0.Count:setAlpha( 0 ) --[[ @ 0]]
			f4_arg0.clipFinished( f4_arg0.Count ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
