-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:49
require( "x64:24adaf674659a70" ) --[[ @ 0]]

CoD.ContractActiveBanner = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.ContractActiveBanner.__defaultWidth = 150 --[[ @ 0]]
CoD.ContractActiveBanner.__defaultHeight = 25 --[[ @ 0]]
CoD.ContractActiveBanner.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.ContractActiveBanner ) --[[ @ 0]]
	self.id = "ContractActiveBanner" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local ActiveTitle = LUI.UIText.new( 0.5, 0.5, -73, 73, 0.5, 0.5, -9, 9 ) --[[ @ 0]]
	ActiveTitle:setRGB( 0, 0.55, 0.33 ) --[[ @ 0]]
	ActiveTitle:setText( LocalizeToUpperString( @"menu/contract_active" ) ) --[[ @ 0]]
	ActiveTitle:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	ActiveTitle:setLetterSpacing( 4 ) --[[ @ 0]]
	ActiveTitle:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	ActiveTitle:setBackingType( 1 ) --[[ @ 0]]
	ActiveTitle:setBackingWidget( CoD.ContractActiveBannerBacker, f1_arg0, f1_arg1 ) --[[ @ 0]]
	ActiveTitle:setBackingXPadding( 8 ) --[[ @ 0]]
	ActiveTitle:setBackingYPadding( 2 ) --[[ @ 0]]
	self:addElement( ActiveTitle ) --[[ @ 0]]
	self.ActiveTitle = ActiveTitle --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Visible",
			condition = function ( menu, element, event )
				return CoD.ContractUtility.IsElementContractActive( element, f1_arg1 )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "contractId", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "contractId"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local f1_local2 = self --[[ @ 0]]
	local f1_local3 = self.subscribeToModel --[[ @ 0]]
	local f1_local4 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local3( f1_local2, f1_local4.ContractsForceUpdate, function ( f4_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f4_arg0:get(),
			modelName = "ContractsForceUpdate"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.ContractActiveBanner.__resetProperties = function ( f5_arg0 )
	f5_arg0.ActiveTitle:completeAnimation() --[[ @ 0]]
	f5_arg0.ActiveTitle:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ContractActiveBanner.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f6_arg0, f6_arg1 )
			f6_arg0:__resetProperties() --[[ @ 0]]
			f6_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f6_arg0.ActiveTitle:completeAnimation() --[[ @ 0]]
			f6_arg0.ActiveTitle:setAlpha( 0 ) --[[ @ 0]]
			f6_arg0.clipFinished( f6_arg0.ActiveTitle ) --[[ @ 0]]
		end
	},
	Visible = {
		DefaultClip = function ( f7_arg0, f7_arg1 )
			f7_arg0:__resetProperties() --[[ @ 0]]
			f7_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f7_local0 = function ( f8_arg0 )
				f7_arg0.ActiveTitle:beginAnimation( 100, Enum[@"luitween"][@"luitween_ease_in"] ) --[[ @ 0]]
				f7_arg0.ActiveTitle:setAlpha( 1 ) --[[ @ 0]]
				f7_arg0.ActiveTitle:registerEventHandler( "interrupted_keyframe", f7_arg0.clipInterrupted ) --[[ @ 0]]
				f7_arg0.ActiveTitle:registerEventHandler( "transition_complete_keyframe", f7_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f7_arg0.ActiveTitle:completeAnimation() --[[ @ 0]]
			f7_arg0.ActiveTitle:setAlpha( 0 ) --[[ @ 0]]
			f7_local0( f7_arg0.ActiveTitle ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
