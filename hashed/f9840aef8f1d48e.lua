-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:51
require( "x64:2907cf54ba0ffc10" ) --[[ @ 0]]

CoD.SupplyChainDetails_InfoPanelTitleAndDesc = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.SupplyChainDetails_InfoPanelTitleAndDesc.__defaultWidth = 520 --[[ @ 0]]
CoD.SupplyChainDetails_InfoPanelTitleAndDesc.__defaultHeight = 216 --[[ @ 0]]
CoD.SupplyChainDetails_InfoPanelTitleAndDesc.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.SupplyChainDetails_InfoPanelTitleAndDesc ) --[[ @ 0]]
	self.id = "SupplyChainDetails_InfoPanelTitleAndDesc" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local SubExtraText = LUI.UIText.new( 0, 0, 0, 383, 0, 0, 191, 209 ) --[[ @ 0]]
	SubExtraText:setTTF( "dinnext_regular" ) --[[ @ 0]]
	SubExtraText:setLetterSpacing( 1 ) --[[ @ 0]]
	SubExtraText:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	SubExtraText:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	SubExtraText:linkToElementModel( self, "subExtraText", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			SubExtraText:setText( Engine[@"hash_4F9F1239CFD921FE"]( f2_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( SubExtraText ) --[[ @ 0]]
	self.SubExtraText = SubExtraText --[[ @ 0]]
	
	local MainExtraText = LUI.UIText.new( 0, 0, 0, 383, 0, 0, 165, 185 ) --[[ @ 0]]
	MainExtraText:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	MainExtraText:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	MainExtraText:setLetterSpacing( 2 ) --[[ @ 0]]
	MainExtraText:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	MainExtraText:setAlignment( Enum[@"luialignment"][@"hash_E821F0ECFF8D1C7"] ) --[[ @ 0]]
	MainExtraText:linkToElementModel( self, "mainExtraText", true, function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			MainExtraText:setText( ToUpper( f3_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( MainExtraText ) --[[ @ 0]]
	self.MainExtraText = MainExtraText --[[ @ 0]]
	
	local SetBonusWidget = CoD.SetBonusWidget.new( f1_arg0, f1_arg1, 0, 0, 392, 520, 0, 0, 0, 216 ) --[[ @ 0]]
	SetBonusWidget:linkToElementModel( self, nil, false, function ( model )
		SetBonusWidget:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( SetBonusWidget ) --[[ @ 0]]
	self.SetBonusWidget = SetBonusWidget --[[ @ 0]]
	
	local Desc = LUI.UIText.new( 0, 0, 0, 383, 0, 0, 70.5, 88.5 ) --[[ @ 0]]
	Desc:setTTF( "dinnext_regular" ) --[[ @ 0]]
	Desc:setLetterSpacing( 1 ) --[[ @ 0]]
	Desc:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	Desc:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	Desc:linkToElementModel( self, "desc", true, function ( model )
		local f5_local0 = model:get() --[[ @ 0]]
		if f5_local0 ~= nil then
			Desc:setText( f5_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Desc ) --[[ @ 0]]
	self.Desc = Desc --[[ @ 0]]
	
	local Name = LUI.UIText.new( 0, 0, 0, 383, 0, 0, 34.5, 64.5 ) --[[ @ 0]]
	Name:setRGB( ColorSet.T8__BIEGE.r, ColorSet.T8__BIEGE.g, ColorSet.T8__BIEGE.b ) --[[ @ 0]]
	Name:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	Name:setLetterSpacing( 4 ) --[[ @ 0]]
	Name:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	Name:setAlignment( Enum[@"luialignment"][@"hash_E821F0ECFF8D1C7"] ) --[[ @ 0]]
	Name:linkToElementModel( self, "name", true, function ( model )
		local f6_local0 = model:get() --[[ @ 0]]
		if f6_local0 ~= nil then
			Name:setText( LocalizeToUpperString( f6_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Name ) --[[ @ 0]]
	self.Name = Name --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Bonus",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueNonEmptyString( element, f1_arg1, "setBonusImage" )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "setBonusImage", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "setBonusImage"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.SupplyChainDetails_InfoPanelTitleAndDesc.__resetProperties = function ( f9_arg0 )
	f9_arg0.SetBonusWidget:completeAnimation() --[[ @ 0]]
	f9_arg0.Name:completeAnimation() --[[ @ 0]]
	f9_arg0.Desc:completeAnimation() --[[ @ 0]]
	f9_arg0.MainExtraText:completeAnimation() --[[ @ 0]]
	f9_arg0.SubExtraText:completeAnimation() --[[ @ 0]]
	f9_arg0.SetBonusWidget:setAlpha( 1 ) --[[ @ 0]]
	f9_arg0.Name:setLeftRight( 0, 0, 0, 383 ) --[[ @ 0]]
	f9_arg0.Desc:setLeftRight( 0, 0, 0, 383 ) --[[ @ 0]]
	f9_arg0.MainExtraText:setLeftRight( 0, 0, 0, 383 ) --[[ @ 0]]
	f9_arg0.SubExtraText:setLeftRight( 0, 0, 0, 383 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.SupplyChainDetails_InfoPanelTitleAndDesc.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f10_arg0, f10_arg1 )
			f10_arg0:__resetProperties() --[[ @ 0]]
			f10_arg0:setupElementClipCounter( 5 ) --[[ @ 0]]
			f10_arg0.SubExtraText:completeAnimation() --[[ @ 0]]
			f10_arg0.SubExtraText:setLeftRight( 0, 0, 0, 500 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.SubExtraText ) --[[ @ 0]]
			f10_arg0.MainExtraText:completeAnimation() --[[ @ 0]]
			f10_arg0.MainExtraText:setLeftRight( 0, 0, 0, 500 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.MainExtraText ) --[[ @ 0]]
			f10_arg0.SetBonusWidget:completeAnimation() --[[ @ 0]]
			f10_arg0.SetBonusWidget:setAlpha( 0 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.SetBonusWidget ) --[[ @ 0]]
			f10_arg0.Desc:completeAnimation() --[[ @ 0]]
			f10_arg0.Desc:setLeftRight( 0, 0, 0, 500 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.Desc ) --[[ @ 0]]
			f10_arg0.Name:completeAnimation() --[[ @ 0]]
			f10_arg0.Name:setLeftRight( 0, 0, 0, 500 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.Name ) --[[ @ 0]]
		end
	},
	Bonus = {
		DefaultClip = function ( f11_arg0, f11_arg1 )
			f11_arg0:__resetProperties() --[[ @ 0]]
			f11_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.SupplyChainDetails_InfoPanelTitleAndDesc.__onClose = function ( f12_arg0 )
	f12_arg0.SubExtraText:close() --[[ @ 0]]
	f12_arg0.MainExtraText:close() --[[ @ 0]]
	f12_arg0.SetBonusWidget:close() --[[ @ 0]]
	f12_arg0.Desc:close() --[[ @ 0]]
	f12_arg0.Name:close() --[[ @ 0]]
end
 --[[ @ 0]]
