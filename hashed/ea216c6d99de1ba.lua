-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:51
require( "x64:12d64ca9d3c705ce" ) --[[ @ 0]]
require( "x64:7877a413a004c441" ) --[[ @ 0]]
require( "x64:209e155239e6593c" ) --[[ @ 0]]
require( "x64:6174f0fb9f1f7e0d" ) --[[ @ 0]]
require( "x64:9d187b5785a45d7" ) --[[ @ 0]]
require( "x64:17038e33134e509a" ) --[[ @ 0]]
require( "x64:20a0021e04d224d" ) --[[ @ 0]]
require( "x64:11a3f133f2b623ac" ) --[[ @ 0]]
require( "x64:535dde2f09c696a7" ) --[[ @ 0]]

CoD.BountyHunterBuyInternal = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.BountyHunterBuyInternal.__defaultWidth = 1920 --[[ @ 0]]
CoD.BountyHunterBuyInternal.__defaultHeight = 1080 --[[ @ 0]]
CoD.BountyHunterBuyInternal.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.BountyHunterBuyInternal ) --[[ @ 0]]
	self.id = "BountyHunterBuyInternal" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	
	local SceneBlur = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	SceneBlur:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_E2354BE557C4C7A" ) ) --[[ @ 0]]
	SceneBlur:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( SceneBlur ) --[[ @ 0]]
	self.SceneBlur = SceneBlur --[[ @ 0]]
	
	local DarkBG = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	DarkBG:setRGB( 0, 0, 0 ) --[[ @ 0]]
	DarkBG:setAlpha( 0.95 ) --[[ @ 0]]
	self:addElement( DarkBG ) --[[ @ 0]]
	self.DarkBG = DarkBG --[[ @ 0]]
	
	local CommonCornerBrackets = CoD.CommonCornerBrackets01.new( f1_arg0, f1_arg1, 0.5, 0.5, -925, 925, 0.5, 0.5, -402, 468 ) --[[ @ 0]]
	CommonCornerBrackets:setAlpha( 0.3 ) --[[ @ 0]]
	self:addElement( CommonCornerBrackets ) --[[ @ 0]]
	self.CommonCornerBrackets = CommonCornerBrackets --[[ @ 0]]
	
	local NoiseTiledBacking = LUI.UIImage.new( 0.5, 0.5, -893.5, 893.5, 0.5, 0.5, -374.5, 440.5 ) --[[ @ 0]]
	NoiseTiledBacking:setRGB( 0.52, 0.52, 0.52 ) --[[ @ 0]]
	NoiseTiledBacking:setAlpha( 0.65 ) --[[ @ 0]]
	NoiseTiledBacking:setImage( RegisterImage( @"uie_ui_menu_specialist_hub_repeat_bg" ) ) --[[ @ 0]]
	NoiseTiledBacking:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_16CBE95C250C6D15" ) ) --[[ @ 0]]
	NoiseTiledBacking:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	NoiseTiledBacking:setupNineSliceShader( 196, 88 ) --[[ @ 0]]
	self:addElement( NoiseTiledBacking ) --[[ @ 0]]
	self.NoiseTiledBacking = NoiseTiledBacking --[[ @ 0]]
	
	local CommonHeaderBG01 = CoD.CommonHeaderHUDBG01.new( f1_arg0, f1_arg1, 0.5, 0.5, -337.5, 337.5, 0.5, 0.5, -511, -459 ) --[[ @ 0]]
	self:addElement( CommonHeaderBG01 ) --[[ @ 0]]
	self.CommonHeaderBG01 = CommonHeaderBG01 --[[ @ 0]]
	
	local CommonSubheaderBG = CoD.CommonSubHeaderBG01.new( f1_arg0, f1_arg1, 0.5, 0.5, -337.5, 337.5, 0.5, 0.5, -454, -420 ) --[[ @ 0]]
	self:addElement( CommonSubheaderBG ) --[[ @ 0]]
	self.CommonSubheaderBG = CommonSubheaderBG --[[ @ 0]]
	
	local CommonSubheaderBG01 = CoD.CommonSubHeaderBG01.new( f1_arg0, f1_arg1, 0.5, 0.5, -868, -741, 0.5, 0.5, -349, -334 ) --[[ @ 0]]
	CommonSubheaderBG01:setRGB( 0.39, 0.39, 0.39 ) --[[ @ 0]]
	CommonSubheaderBG01.NoiseTiledBacking:setAlpha( 0.8 ) --[[ @ 0]]
	CommonSubheaderBG01.NoiseTiledBacking3:setAlpha( 0 ) --[[ @ 0]]
	CommonSubheaderBG01.NoiseTiledBacking2:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( CommonSubheaderBG01 ) --[[ @ 0]]
	self.CommonSubheaderBG01 = CommonSubheaderBG01 --[[ @ 0]]
	
	local CommonSubheaderBG02 = CoD.CommonSubHeaderBG01.new( f1_arg0, f1_arg1, 0.5, 0.5, -692, -412, 0.5, 0.5, -349, -334 ) --[[ @ 0]]
	CommonSubheaderBG02:setRGB( 0.39, 0.39, 0.39 ) --[[ @ 0]]
	CommonSubheaderBG02.NoiseTiledBacking:setAlpha( 0.8 ) --[[ @ 0]]
	CommonSubheaderBG02.NoiseTiledBacking3:setAlpha( 0 ) --[[ @ 0]]
	CommonSubheaderBG02.NoiseTiledBacking2:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( CommonSubheaderBG02 ) --[[ @ 0]]
	self.CommonSubheaderBG02 = CommonSubheaderBG02 --[[ @ 0]]
	
	local CommonSubheaderBG03 = CoD.CommonSubHeaderBG01.new( f1_arg0, f1_arg1, 0.5, 0.5, -387, 463, 0.5, 0.5, -349, -334 ) --[[ @ 0]]
	CommonSubheaderBG03:setRGB( 0.39, 0.39, 0.39 ) --[[ @ 0]]
	CommonSubheaderBG03.NoiseTiledBacking:setAlpha( 0.8 ) --[[ @ 0]]
	CommonSubheaderBG03.NoiseTiledBacking3:setAlpha( 0 ) --[[ @ 0]]
	CommonSubheaderBG03.NoiseTiledBacking2:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( CommonSubheaderBG03 ) --[[ @ 0]]
	self.CommonSubheaderBG03 = CommonSubheaderBG03 --[[ @ 0]]
	
	local CommonSubheaderBG04 = CoD.CommonSubHeaderBG01.new( f1_arg0, f1_arg1, 0.5, 0.5, -868, -741, 0.5, 0.5, -125, -110 ) --[[ @ 0]]
	CommonSubheaderBG04:setRGB( 0.39, 0.39, 0.39 ) --[[ @ 0]]
	CommonSubheaderBG04.NoiseTiledBacking:setAlpha( 0.8 ) --[[ @ 0]]
	CommonSubheaderBG04.NoiseTiledBacking3:setAlpha( 0 ) --[[ @ 0]]
	CommonSubheaderBG04.NoiseTiledBacking2:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( CommonSubheaderBG04 ) --[[ @ 0]]
	self.CommonSubheaderBG04 = CommonSubheaderBG04 --[[ @ 0]]
	
	local CommonSubheaderBG05 = CoD.CommonSubHeaderBG01.new( f1_arg0, f1_arg1, 0.5, 0.5, -692, -412, 0.5, 0.5, -125, -110 ) --[[ @ 0]]
	CommonSubheaderBG05:setRGB( 0.39, 0.39, 0.39 ) --[[ @ 0]]
	CommonSubheaderBG05.NoiseTiledBacking:setAlpha( 0.8 ) --[[ @ 0]]
	CommonSubheaderBG05.NoiseTiledBacking3:setAlpha( 0 ) --[[ @ 0]]
	CommonSubheaderBG05.NoiseTiledBacking2:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( CommonSubheaderBG05 ) --[[ @ 0]]
	self.CommonSubheaderBG05 = CommonSubheaderBG05 --[[ @ 0]]
	
	local CommonSubheaderBG06 = CoD.CommonSubHeaderBG01.new( f1_arg0, f1_arg1, 0.5, 0.5, -387, 463, 0.5, 0.5, -125, -110 ) --[[ @ 0]]
	CommonSubheaderBG06:setRGB( 0.39, 0.39, 0.39 ) --[[ @ 0]]
	CommonSubheaderBG06.NoiseTiledBacking:setAlpha( 0.8 ) --[[ @ 0]]
	CommonSubheaderBG06.NoiseTiledBacking3:setAlpha( 0 ) --[[ @ 0]]
	CommonSubheaderBG06.NoiseTiledBacking2:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( CommonSubheaderBG06 ) --[[ @ 0]]
	self.CommonSubheaderBG06 = CommonSubheaderBG06 --[[ @ 0]]
	
	local CommonSubheaderBG07 = CoD.CommonSubHeaderBG01.new( f1_arg0, f1_arg1, 0.5, 0.5, -868, -741, 0.5, 0.5, 98, 113 ) --[[ @ 0]]
	CommonSubheaderBG07:setRGB( 0.39, 0.39, 0.39 ) --[[ @ 0]]
	CommonSubheaderBG07.NoiseTiledBacking:setAlpha( 0.8 ) --[[ @ 0]]
	CommonSubheaderBG07.NoiseTiledBacking3:setAlpha( 0 ) --[[ @ 0]]
	CommonSubheaderBG07.NoiseTiledBacking2:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( CommonSubheaderBG07 ) --[[ @ 0]]
	self.CommonSubheaderBG07 = CommonSubheaderBG07 --[[ @ 0]]
	
	local CommonSubheaderBG08 = CoD.CommonSubHeaderBG01.new( f1_arg0, f1_arg1, 0.5, 0.5, -692, -127, 0.5, 0.5, 98, 113 ) --[[ @ 0]]
	CommonSubheaderBG08:setRGB( 0.39, 0.39, 0.39 ) --[[ @ 0]]
	CommonSubheaderBG08.NoiseTiledBacking:setAlpha( 0.8 ) --[[ @ 0]]
	CommonSubheaderBG08.NoiseTiledBacking3:setAlpha( 0 ) --[[ @ 0]]
	CommonSubheaderBG08.NoiseTiledBacking2:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( CommonSubheaderBG08 ) --[[ @ 0]]
	self.CommonSubheaderBG08 = CommonSubheaderBG08 --[[ @ 0]]
	
	local CommonSubheaderBG09 = CoD.CommonSubHeaderBG01.new( f1_arg0, f1_arg1, 0.5, 0.5, -101, 464, 0.5, 0.5, 98, 113 ) --[[ @ 0]]
	CommonSubheaderBG09:setRGB( 0.39, 0.39, 0.39 ) --[[ @ 0]]
	CommonSubheaderBG09.NoiseTiledBacking:setAlpha( 0.8 ) --[[ @ 0]]
	CommonSubheaderBG09.NoiseTiledBacking3:setAlpha( 0 ) --[[ @ 0]]
	CommonSubheaderBG09.NoiseTiledBacking2:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( CommonSubheaderBG09 ) --[[ @ 0]]
	self.CommonSubheaderBG09 = CommonSubheaderBG09 --[[ @ 0]]
	
	local CommonSubheaderBG10 = CoD.CommonSubHeaderBG01.new( f1_arg0, f1_arg1, 0.5, 0.5, -692, -127, 0.5, 0.5, 268, 283 ) --[[ @ 0]]
	CommonSubheaderBG10:setRGB( 0.39, 0.39, 0.39 ) --[[ @ 0]]
	CommonSubheaderBG10.NoiseTiledBacking:setAlpha( 0.8 ) --[[ @ 0]]
	CommonSubheaderBG10.NoiseTiledBacking3:setAlpha( 0 ) --[[ @ 0]]
	CommonSubheaderBG10.NoiseTiledBacking2:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( CommonSubheaderBG10 ) --[[ @ 0]]
	self.CommonSubheaderBG10 = CommonSubheaderBG10 --[[ @ 0]]
	
	local CommonSubheaderBG11 = CoD.CommonSubHeaderBG01.new( f1_arg0, f1_arg1, 0.5, 0.5, -101, 464, 0.5, 0.5, 268, 283 ) --[[ @ 0]]
	CommonSubheaderBG11:setRGB( 0.39, 0.39, 0.39 ) --[[ @ 0]]
	CommonSubheaderBG11.NoiseTiledBacking:setAlpha( 0.8 ) --[[ @ 0]]
	CommonSubheaderBG11.NoiseTiledBacking3:setAlpha( 0 ) --[[ @ 0]]
	CommonSubheaderBG11.NoiseTiledBacking2:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( CommonSubheaderBG11 ) --[[ @ 0]]
	self.CommonSubheaderBG11 = CommonSubheaderBG11 --[[ @ 0]]
	
	local Bank = CoD.BountyHunterBank.new( f1_arg0, f1_arg1, 0.5, 0.5, -138.5, 138.5, 0.5, 0.5, -454, -421 ) --[[ @ 0]]
	Bank:linkToElementModel( self, nil, false, function ( model )
		Bank:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( Bank ) --[[ @ 0]]
	self.Bank = Bank --[[ @ 0]]
	
	local StageTitle = LUI.UIText.new( 0.5, 0.5, -335, 335, 0.5, 0.5, -506, -462 ) --[[ @ 0]]
	StageTitle:setRGB( 0, 0, 0 ) --[[ @ 0]]
	StageTitle:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_10E8E14CAAF997B8" ) ) --[[ @ 0]]
	StageTitle:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	StageTitle:setLetterSpacing( 8 ) --[[ @ 0]]
	StageTitle:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	StageTitle:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	self:addElement( StageTitle ) --[[ @ 0]]
	self.StageTitle = StageTitle --[[ @ 0]]
	
	local f1_local20 = nil --[[ @ 0]]
	f1_local20 = LUI.UIElement.createFake() --[[ @ 0]]
	self.FooterContainerFrontendRight = f1_local20 --[[ @ 0]]
	
	local PrimaryBuy = CoD.BountyHunterWeaponBuy.new( f1_arg0, f1_arg1, 0.5, 0.5, -692, -412, 0.5, 0.5, -329, -202 ) --[[ @ 0]]
	PrimaryBuy.Header:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_23F59D1A91AF7F94" ) ) --[[ @ 0]]
	PrimaryBuy:linkToElementModel( self, "primaryModel", false, function ( model )
		PrimaryBuy:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	PrimaryBuy:registerEventHandler( "gain_focus", function ( element, event )
		local f4_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f4_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f4_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		return f4_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( PrimaryBuy, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"], "ui_confirm", function ( element, menu, controller, model )
		if CoD.BountyHunterUtility.IsBuyMenuVisible( self ) and not IsDemoPlaying() then
			CoD.BountyHunterUtility.OpenBountyHunterOverlay( self, menu, controller, "BountyHunterPackageSelect", "primary" ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if CoD.BountyHunterUtility.IsBuyMenuVisible( self ) and not IsDemoPlaying() then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"menu/select", nil, "ui_confirm" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( PrimaryBuy ) --[[ @ 0]]
	self.PrimaryBuy = PrimaryBuy --[[ @ 0]]
	
	local SecondaryUpgradeHeader = LUI.UIText.new( 0.5, 0.5, -238.5, -38.5, 0.5, 0.5, -137, -100 ) --[[ @ 0]]
	SecondaryUpgradeHeader:setAlpha( 0 ) --[[ @ 0]]
	SecondaryUpgradeHeader:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_6B74FA313E2030A0" ) ) --[[ @ 0]]
	SecondaryUpgradeHeader:setTTF( "default" ) --[[ @ 0]]
	SecondaryUpgradeHeader:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	self:addElement( SecondaryUpgradeHeader ) --[[ @ 0]]
	self.SecondaryUpgradeHeader = SecondaryUpgradeHeader --[[ @ 0]]
	
	local PrimaryUpgradesHeader = LUI.UIText.new( 0.5, 0.5, -146.5, 53.5, 0.5, 0.5, -337, -300 ) --[[ @ 0]]
	PrimaryUpgradesHeader:setAlpha( 0 ) --[[ @ 0]]
	PrimaryUpgradesHeader:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_327B1CF8082C4D08" ) ) --[[ @ 0]]
	PrimaryUpgradesHeader:setTTF( "default" ) --[[ @ 0]]
	PrimaryUpgradesHeader:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	self:addElement( PrimaryUpgradesHeader ) --[[ @ 0]]
	self.PrimaryUpgradesHeader = PrimaryUpgradesHeader --[[ @ 0]]
	
	local SecondaryBuy = CoD.BountyHunterWeaponBuy.new( f1_arg0, f1_arg1, 0.5, 0.5, -692, -412, 0.5, 0.5, -105, 22 ) --[[ @ 0]]
	SecondaryBuy.Header:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_7296B5FAFF3D120C" ) ) --[[ @ 0]]
	SecondaryBuy:linkToElementModel( self, "secondaryModel", false, function ( model )
		SecondaryBuy:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	SecondaryBuy:registerEventHandler( "gain_focus", function ( element, event )
		local f8_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f8_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f8_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		return f8_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( SecondaryBuy, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"], "ui_confirm", function ( element, menu, controller, model )
		if CoD.BountyHunterUtility.IsBuyMenuVisible( self ) and not IsDemoPlaying() then
			CoD.BountyHunterUtility.OpenBountyHunterOverlay( self, menu, controller, "BountyHunterPackageSelect", "secondary" ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if CoD.BountyHunterUtility.IsBuyMenuVisible( self ) and not IsDemoPlaying() then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"menu/select", nil, "ui_confirm" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( SecondaryBuy ) --[[ @ 0]]
	self.SecondaryBuy = SecondaryBuy --[[ @ 0]]
	
	local ArmorBuy = CoD.BountyHunterGenericBuy.new( f1_arg0, f1_arg1, 0.5, 0.5, -868, -741, 0.5, 0.5, -329, -202 ) --[[ @ 0]]
	ArmorBuy.Header:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_5B1C3B30E1F15C09" ) ) --[[ @ 0]]
	ArmorBuy:linkToElementModel( self, "armorModel", false, function ( model )
		ArmorBuy:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	ArmorBuy:registerEventHandler( "gain_focus", function ( element, event )
		local f12_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f12_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f12_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		return f12_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( ArmorBuy, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"], "ui_confirm", function ( element, menu, controller, model )
		if CoD.BountyHunterUtility.IsBuyMenuVisible( self ) and not IsDemoPlaying() then
			CoD.BountyHunterUtility.OpenBountyHunterOverlay( self, menu, controller, "BountyHunterPackageSelect", "armor" ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if CoD.BountyHunterUtility.IsBuyMenuVisible( self ) and not IsDemoPlaying() then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"menu/select", nil, "ui_confirm" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( ArmorBuy ) --[[ @ 0]]
	self.ArmorBuy = ArmorBuy --[[ @ 0]]
	
	local ScorestreakBuy = CoD.BountyHunterGenericBuy.new( f1_arg0, f1_arg1, 0.5, 0.5, -868, -741, 0.5, 0.5, -105, 22 ) --[[ @ 0]]
	ScorestreakBuy.Header:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_549F052E5AE3E0AA" ) ) --[[ @ 0]]
	ScorestreakBuy:linkToElementModel( self, "scorestreakModel", false, function ( model )
		ScorestreakBuy:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	ScorestreakBuy:registerEventHandler( "gain_focus", function ( element, event )
		local f16_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f16_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f16_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		return f16_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( ScorestreakBuy, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"], "ui_confirm", function ( element, menu, controller, model )
		if CoD.BountyHunterUtility.IsBuyMenuVisible( self ) and not IsDemoPlaying() then
			CoD.BountyHunterUtility.OpenBountyHunterOverlay( self, menu, controller, "BountyHunterPackageSelect", "scorestreak" ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if CoD.BountyHunterUtility.IsBuyMenuVisible( self ) and not IsDemoPlaying() then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"menu/select", nil, "ui_confirm" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( ScorestreakBuy ) --[[ @ 0]]
	self.ScorestreakBuy = ScorestreakBuy --[[ @ 0]]
	
	local EquipmentBuy = CoD.BountyHunterGenericBuy.new( f1_arg0, f1_arg1, 0.5, 0.5, -868, -741, 0.5, 0.5, 118, 245 ) --[[ @ 0]]
	EquipmentBuy.Header:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_6E5B4A22F58A0272" ) ) --[[ @ 0]]
	EquipmentBuy:linkToElementModel( self, "equipmentModel", false, function ( model )
		EquipmentBuy:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	EquipmentBuy:registerEventHandler( "gain_focus", function ( element, event )
		local f20_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f20_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f20_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		return f20_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( EquipmentBuy, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"], "ui_confirm", function ( element, menu, controller, model )
		if CoD.BountyHunterUtility.IsBuyMenuVisible( self ) and not IsDemoPlaying() then
			CoD.BountyHunterUtility.OpenBountyHunterOverlay( self, menu, controller, "BountyHunterPackageSelect", "equipment" ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if CoD.BountyHunterUtility.IsBuyMenuVisible( self ) and not IsDemoPlaying() then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"menu/select", nil, "ui_confirm" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( EquipmentBuy ) --[[ @ 0]]
	self.EquipmentBuy = EquipmentBuy --[[ @ 0]]
	
	local PrimaryAmmoBuy = CoD.BountyHunterAmmoBuy.new( f1_arg0, f1_arg1, 0.5, 0.5, -692, -412, 0.5, 0.5, -197.5, -149.5 ) --[[ @ 0]]
	PrimaryAmmoBuy:linkToElementModel( self, "primaryModel", false, function ( model )
		PrimaryAmmoBuy:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	PrimaryAmmoBuy:registerEventHandler( "gain_focus", function ( element, event )
		local f24_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f24_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f24_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		return f24_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( PrimaryAmmoBuy, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"], nil, function ( element, menu, controller, model )
		if CoD.BountyHunterUtility.IsBuyMenuVisible( self ) and not IsDemoPlaying() then
			CoD.BountyHunterUtility.BuyBountyPackageAmmo( controller, menu, element ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if CoD.BountyHunterUtility.IsBuyMenuVisible( self ) and not IsDemoPlaying() then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"hash_0", nil, nil ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( PrimaryAmmoBuy ) --[[ @ 0]]
	self.PrimaryAmmoBuy = PrimaryAmmoBuy --[[ @ 0]]
	
	local SecondaryAmmoBuy = CoD.BountyHunterAmmoBuy.new( f1_arg0, f1_arg1, 0.5, 0.5, -692, -412, 0.5, 0.5, 22, 70 ) --[[ @ 0]]
	SecondaryAmmoBuy:linkToElementModel( self, "secondaryModel", false, function ( model )
		SecondaryAmmoBuy:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	SecondaryAmmoBuy:registerEventHandler( "gain_focus", function ( element, event )
		local f28_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f28_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f28_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		return f28_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( SecondaryAmmoBuy, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"], nil, function ( element, menu, controller, model )
		if CoD.BountyHunterUtility.IsBuyMenuVisible( self ) and not IsDemoPlaying() then
			CoD.BountyHunterUtility.BuyBountyPackageAmmo( controller, menu, element ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if CoD.BountyHunterUtility.IsBuyMenuVisible( self ) and not IsDemoPlaying() then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"hash_0", nil, nil ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( SecondaryAmmoBuy ) --[[ @ 0]]
	self.SecondaryAmmoBuy = SecondaryAmmoBuy --[[ @ 0]]
	
	local MobilityUpgrades = CoD.BountyHunterTrackBuy.new( f1_arg0, f1_arg1, 0.5, 0.5, -692, -565, 0.5, 0.5, 118, 245 ) --[[ @ 0]]
	MobilityUpgrades.PackageTiers:setFilter( function ( f31_arg0 )
		return f31_arg0.packageType:get() == "mobility"
	end ) --[[ @ 0]]
	MobilityUpgrades.PackageTiers:setDataSource( "BountyHunterPackages" ) --[[ @ 0]]
	MobilityUpgrades.Header:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_6AE4B345BCF69C5D" ) ) --[[ @ 0]]
	MobilityUpgrades:linkToElementModel( self, "mobilityTrack", false, function ( model )
		MobilityUpgrades:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( MobilityUpgrades ) --[[ @ 0]]
	self.MobilityUpgrades = MobilityUpgrades --[[ @ 0]]
	
	local ReconUpgrades = CoD.BountyHunterTrackBuy.new( f1_arg0, f1_arg1, 0.5, 0.5, -101, 26, 0.5, 0.5, 118, 245 ) --[[ @ 0]]
	ReconUpgrades.PackageTiers:setFilter( function ( f33_arg0 )
		return f33_arg0.packageType:get() == "recon"
	end ) --[[ @ 0]]
	ReconUpgrades.PackageTiers:setDataSource( "BountyHunterPackages" ) --[[ @ 0]]
	ReconUpgrades.Header:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_7C33A77C747F9BEF" ) ) --[[ @ 0]]
	ReconUpgrades:linkToElementModel( self, "reconTrack", false, function ( model )
		ReconUpgrades:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( ReconUpgrades ) --[[ @ 0]]
	self.ReconUpgrades = ReconUpgrades --[[ @ 0]]
	
	local SupportUpgrades = CoD.BountyHunterTrackBuy.new( f1_arg0, f1_arg1, 0.5, 0.5, -101, 26, 0.5, 0.5, 288, 415 ) --[[ @ 0]]
	SupportUpgrades.PackageTiers:setFilter( function ( f35_arg0 )
		return f35_arg0.packageType:get() == "support"
	end ) --[[ @ 0]]
	SupportUpgrades.PackageTiers:setDataSource( "BountyHunterPackages" ) --[[ @ 0]]
	SupportUpgrades.Header:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_3BDD6ACC3F0AFE23" ) ) --[[ @ 0]]
	SupportUpgrades:linkToElementModel( self, "supportTrack", false, function ( model )
		SupportUpgrades:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( SupportUpgrades ) --[[ @ 0]]
	self.SupportUpgrades = SupportUpgrades --[[ @ 0]]
	
	local AssaultUpgrades = CoD.BountyHunterTrackBuy.new( f1_arg0, f1_arg1, 0.5, 0.5, -692, -565, 0.5, 0.5, 288, 415 ) --[[ @ 0]]
	AssaultUpgrades.PackageTiers:setFilter( function ( f37_arg0 )
		return f37_arg0.packageType:get() == "assault"
	end ) --[[ @ 0]]
	AssaultUpgrades.PackageTiers:setDataSource( "BountyHunterPackages" ) --[[ @ 0]]
	AssaultUpgrades.Header:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_5A150653B64E279F" ) ) --[[ @ 0]]
	AssaultUpgrades:linkToElementModel( self, "assaultTrack", false, function ( model )
		AssaultUpgrades:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( AssaultUpgrades ) --[[ @ 0]]
	self.AssaultUpgrades = AssaultUpgrades --[[ @ 0]]
	
	local PrimaryAttachments = CoD.BountyHunterTrackBuy.new( f1_arg0, f1_arg1, 0.5, 0.5, -387, -260, 0.5, 0.5, -329, -202 ) --[[ @ 0]]
	PrimaryAttachments.PackageTiers:setDataSource( "BountyHunterPrimaryAttachments" ) --[[ @ 0]]
	PrimaryAttachments.Header:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_327B1CF8082C4D08" ) ) --[[ @ 0]]
	self:addElement( PrimaryAttachments ) --[[ @ 0]]
	self.PrimaryAttachments = PrimaryAttachments --[[ @ 0]]
	
	local SecondaryAttachments = CoD.BountyHunterTrackBuy.new( f1_arg0, f1_arg1, 0.5, 0.5, -387, -260, 0.5, 0.5, -105, 22 ) --[[ @ 0]]
	SecondaryAttachments.PackageTiers:setDataSource( "BountyHunterSecondaryAttachments" ) --[[ @ 0]]
	SecondaryAttachments.Header:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_6B74FA313E2030A0" ) ) --[[ @ 0]]
	self:addElement( SecondaryAttachments ) --[[ @ 0]]
	self.SecondaryAttachments = SecondaryAttachments --[[ @ 0]]
	
	local PackagePreview = CoD.BountyHunterPackagePreview.new( f1_arg0, f1_arg1, 0.5, 0.5, 488.5, 868.5, 0.5, 0.5, -349, 416 ) --[[ @ 0]]
	self:addElement( PackagePreview ) --[[ @ 0]]
	self.PackagePreview = PackagePreview --[[ @ 0]]
	
	local HorizAccentTop = LUI.UIImage.new( 0.5, 0.5, -870, 870, 0.5, 0.5, -388, -380 ) --[[ @ 0]]
	HorizAccentTop:setAlpha( 0.15 ) --[[ @ 0]]
	HorizAccentTop:setImage( RegisterImage( @"hash_2FE30A9AF719A400" ) ) --[[ @ 0]]
	HorizAccentTop:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_normal" ) ) --[[ @ 0]]
	HorizAccentTop:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	HorizAccentTop:setupNineSliceShader( 8, 4 ) --[[ @ 0]]
	self:addElement( HorizAccentTop ) --[[ @ 0]]
	self.HorizAccentTop = HorizAccentTop --[[ @ 0]]
	
	local HorizAccentTL = LUI.UIImage.new( 0.5, 0.5, -896, -876, 0.5, 0.5, -388, -380 ) --[[ @ 0]]
	HorizAccentTL:setAlpha( 0.07 ) --[[ @ 0]]
	HorizAccentTL:setImage( RegisterImage( @"hash_2FE30A9AF719A400" ) ) --[[ @ 0]]
	HorizAccentTL:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_normal" ) ) --[[ @ 0]]
	HorizAccentTL:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	HorizAccentTL:setupNineSliceShader( 8, 4 ) --[[ @ 0]]
	self:addElement( HorizAccentTL ) --[[ @ 0]]
	self.HorizAccentTL = HorizAccentTL --[[ @ 0]]
	
	local HorizAccentTR = LUI.UIImage.new( 0.5, 0.5, 874.5, 894.5, 0.5, 0.5, -388, -380 ) --[[ @ 0]]
	HorizAccentTR:setAlpha( 0.07 ) --[[ @ 0]]
	HorizAccentTR:setImage( RegisterImage( @"hash_2FE30A9AF719A400" ) ) --[[ @ 0]]
	HorizAccentTR:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_normal" ) ) --[[ @ 0]]
	HorizAccentTR:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	HorizAccentTR:setupNineSliceShader( 8, 4 ) --[[ @ 0]]
	self:addElement( HorizAccentTR ) --[[ @ 0]]
	self.HorizAccentTR = HorizAccentTR --[[ @ 0]]
	
	local HorizAccentBtm = LUI.UIImage.new( 0.5, 0.5, -870, 870, 0.5, 0.5, 447, 455 ) --[[ @ 0]]
	HorizAccentBtm:setAlpha( 0.15 ) --[[ @ 0]]
	HorizAccentBtm:setImage( RegisterImage( @"hash_2FE30A9AF719A400" ) ) --[[ @ 0]]
	HorizAccentBtm:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_normal" ) ) --[[ @ 0]]
	HorizAccentBtm:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	HorizAccentBtm:setupNineSliceShader( 8, 4 ) --[[ @ 0]]
	self:addElement( HorizAccentBtm ) --[[ @ 0]]
	self.HorizAccentBtm = HorizAccentBtm --[[ @ 0]]
	
	local HorizAccentBL = LUI.UIImage.new( 0.5, 0.5, -896, -876, 0.5, 0.5, 447, 455 ) --[[ @ 0]]
	HorizAccentBL:setAlpha( 0.07 ) --[[ @ 0]]
	HorizAccentBL:setImage( RegisterImage( @"hash_2FE30A9AF719A400" ) ) --[[ @ 0]]
	HorizAccentBL:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_normal" ) ) --[[ @ 0]]
	HorizAccentBL:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	HorizAccentBL:setupNineSliceShader( 8, 4 ) --[[ @ 0]]
	self:addElement( HorizAccentBL ) --[[ @ 0]]
	self.HorizAccentBL = HorizAccentBL --[[ @ 0]]
	
	local HorizAccentBR = LUI.UIImage.new( 0.5, 0.5, 874.5, 894.5, 0.5, 0.5, 447, 455 ) --[[ @ 0]]
	HorizAccentBR:setAlpha( 0.07 ) --[[ @ 0]]
	HorizAccentBR:setImage( RegisterImage( @"hash_2FE30A9AF719A400" ) ) --[[ @ 0]]
	HorizAccentBR:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_normal" ) ) --[[ @ 0]]
	HorizAccentBR:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	HorizAccentBR:setupNineSliceShader( 8, 4 ) --[[ @ 0]]
	self:addElement( HorizAccentBR ) --[[ @ 0]]
	self.HorizAccentBR = HorizAccentBR --[[ @ 0]]
	
	local LinePattern01 = LUI.UIImage.new( 0.5, 0.5, -868.5, 868.5, 0.5, 0.5, 458, 470 ) --[[ @ 0]]
	LinePattern01:setAlpha( 0.02 ) --[[ @ 0]]
	LinePattern01:setImage( RegisterImage( @"uie_hud_common_stripe_pattern01" ) ) --[[ @ 0]]
	LinePattern01:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_16CBE95C250C6D15" ) ) --[[ @ 0]]
	LinePattern01:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	LinePattern01:setupNineSliceShader( 24, 12 ) --[[ @ 0]]
	self:addElement( LinePattern01 ) --[[ @ 0]]
	self.LinePattern01 = LinePattern01 --[[ @ 0]]
	
	local BarAccentLeft = LUI.UIImage.new( 0.5, 0.5, -951, -907, 0.5, 0.5, 27.5, 40.5 ) --[[ @ 0]]
	BarAccentLeft:setAlpha( 0.07 ) --[[ @ 0]]
	BarAccentLeft:setImage( RegisterImage( @"hash_2FE30A9AF719A400" ) ) --[[ @ 0]]
	BarAccentLeft:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_normal" ) ) --[[ @ 0]]
	BarAccentLeft:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	BarAccentLeft:setupNineSliceShader( 8, 2 ) --[[ @ 0]]
	self:addElement( BarAccentLeft ) --[[ @ 0]]
	self.BarAccentLeft = BarAccentLeft --[[ @ 0]]
	
	local BarAccentRight = LUI.UIImage.new( 0.5, 0.5, 901, 945, 0.5, 0.5, 27.5, 40.5 ) --[[ @ 0]]
	BarAccentRight:setAlpha( 0.07 ) --[[ @ 0]]
	BarAccentRight:setImage( RegisterImage( @"hash_2FE30A9AF719A400" ) ) --[[ @ 0]]
	BarAccentRight:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_normal" ) ) --[[ @ 0]]
	BarAccentRight:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	BarAccentRight:setupNineSliceShader( 8, 2 ) --[[ @ 0]]
	self:addElement( BarAccentRight ) --[[ @ 0]]
	self.BarAccentRight = BarAccentRight --[[ @ 0]]
	
	self:linkToElementModel( self, "primary", true, function ( model )
		local f39_local0 = self --[[ @ 0]]
		CoD.BountyHunterUtility.SetPackageInSlotByPackageId( self, "primary", model ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:linkToElementModel( self, "secondary", true, function ( model )
		local f40_local0 = self --[[ @ 0]]
		CoD.BountyHunterUtility.SetPackageInSlotByPackageId( self, "secondary", model ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:linkToElementModel( self, "armor", true, function ( model )
		local f41_local0 = self --[[ @ 0]]
		CoD.BountyHunterUtility.SetPackageInSlotByPackageId( self, "armor", model ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:linkToElementModel( self, "scorestreak", true, function ( model )
		local f42_local0 = self --[[ @ 0]]
		CoD.BountyHunterUtility.SetPackageInSlotByPackageId( self, "scorestreak", model ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:linkToElementModel( self, "equipment", true, function ( model )
		local f43_local0 = self --[[ @ 0]]
		CoD.BountyHunterUtility.SetPackageInSlotByPackageId( self, "equipment", model ) --[[ @ 0]]
	end ) --[[ @ 0]]
	f1_local20:appendEventHandler( "menu_loaded", function ()
		f1_local20:setModel( f1_arg0.buttonModel, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	PrimaryBuy.id = "PrimaryBuy" --[[ @ 0]]
	SecondaryBuy.id = "SecondaryBuy" --[[ @ 0]]
	ArmorBuy.id = "ArmorBuy" --[[ @ 0]]
	ScorestreakBuy.id = "ScorestreakBuy" --[[ @ 0]]
	EquipmentBuy.id = "EquipmentBuy" --[[ @ 0]]
	PrimaryAmmoBuy.id = "PrimaryAmmoBuy" --[[ @ 0]]
	SecondaryAmmoBuy.id = "SecondaryAmmoBuy" --[[ @ 0]]
	MobilityUpgrades.id = "MobilityUpgrades" --[[ @ 0]]
	ReconUpgrades.id = "ReconUpgrades" --[[ @ 0]]
	SupportUpgrades.id = "SupportUpgrades" --[[ @ 0]]
	AssaultUpgrades.id = "AssaultUpgrades" --[[ @ 0]]
	PrimaryAttachments.id = "PrimaryAttachments" --[[ @ 0]]
	SecondaryAttachments.id = "SecondaryAttachments" --[[ @ 0]]
	self.__defaultFocus = ArmorBuy --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.BountyHunterBuyInternal.__onClose = function ( f45_arg0 )
	f45_arg0.CommonCornerBrackets:close() --[[ @ 0]]
	f45_arg0.CommonHeaderBG01:close() --[[ @ 0]]
	f45_arg0.CommonSubheaderBG:close() --[[ @ 0]]
	f45_arg0.CommonSubheaderBG01:close() --[[ @ 0]]
	f45_arg0.CommonSubheaderBG02:close() --[[ @ 0]]
	f45_arg0.CommonSubheaderBG03:close() --[[ @ 0]]
	f45_arg0.CommonSubheaderBG04:close() --[[ @ 0]]
	f45_arg0.CommonSubheaderBG05:close() --[[ @ 0]]
	f45_arg0.CommonSubheaderBG06:close() --[[ @ 0]]
	f45_arg0.CommonSubheaderBG07:close() --[[ @ 0]]
	f45_arg0.CommonSubheaderBG08:close() --[[ @ 0]]
	f45_arg0.CommonSubheaderBG09:close() --[[ @ 0]]
	f45_arg0.CommonSubheaderBG10:close() --[[ @ 0]]
	f45_arg0.CommonSubheaderBG11:close() --[[ @ 0]]
	f45_arg0.Bank:close() --[[ @ 0]]
	f45_arg0.FooterContainerFrontendRight:close() --[[ @ 0]]
	f45_arg0.PrimaryBuy:close() --[[ @ 0]]
	f45_arg0.SecondaryBuy:close() --[[ @ 0]]
	f45_arg0.ArmorBuy:close() --[[ @ 0]]
	f45_arg0.ScorestreakBuy:close() --[[ @ 0]]
	f45_arg0.EquipmentBuy:close() --[[ @ 0]]
	f45_arg0.PrimaryAmmoBuy:close() --[[ @ 0]]
	f45_arg0.SecondaryAmmoBuy:close() --[[ @ 0]]
	f45_arg0.MobilityUpgrades:close() --[[ @ 0]]
	f45_arg0.ReconUpgrades:close() --[[ @ 0]]
	f45_arg0.SupportUpgrades:close() --[[ @ 0]]
	f45_arg0.AssaultUpgrades:close() --[[ @ 0]]
	f45_arg0.PrimaryAttachments:close() --[[ @ 0]]
	f45_arg0.SecondaryAttachments:close() --[[ @ 0]]
	f45_arg0.PackagePreview:close() --[[ @ 0]]
end
 --[[ @ 0]]
