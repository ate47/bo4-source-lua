-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:50
require( "ui/uieditor/widgets/border" ) --[[ @ 0]]
require( "x64:5acbed692442191c" ) --[[ @ 0]]
require( "ui/uieditor/widgets/director/directorselectbuttoninternal" ) --[[ @ 0]]
require( "x64:71f846296f1a1b81" ) --[[ @ 0]]

CoD.DirectorReadyButton = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.DirectorReadyButton.__defaultWidth = 374 --[[ @ 0]]
CoD.DirectorReadyButton.__defaultHeight = 80 --[[ @ 0]]
CoD.DirectorReadyButton.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.DirectorReadyButton ) --[[ @ 0]]
	self.id = "DirectorReadyButton" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local Backing = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	Backing:setRGB( 0, 0, 0 ) --[[ @ 0]]
	Backing:setAlpha( 0 ) --[[ @ 0]]
	Backing:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_E2354BE557C4C7A" ) ) --[[ @ 0]]
	Backing:setShaderVector( 0, 0, 0.5, 0, 0 ) --[[ @ 0]]
	self:addElement( Backing ) --[[ @ 0]]
	self.Backing = Backing --[[ @ 0]]
	
	local DirectorSelectButtonMiniInternal = CoD.DirectorSelectButtonMiniInternal.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	DirectorSelectButtonMiniInternal:mergeStateConditions( {
		{
			stateName = "Locked",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		},
		{
			stateName = "Disabled",
			condition = function ( menu, element, event )
				return CoD.BaseUtility.IsSelfInState( self, "Unselectable" )
			end
		}
	} ) --[[ @ 0]]
	DirectorSelectButtonMiniInternal:setAlpha( 0 ) --[[ @ 0]]
	DirectorSelectButtonMiniInternal.MiddleText:setText( LocalizeToUpperString( @"menu/ready_up" ) ) --[[ @ 0]]
	DirectorSelectButtonMiniInternal.MiddleTextFocus:setText( LocalizeToUpperString( @"menu/ready_up" ) ) --[[ @ 0]]
	self:addElement( DirectorSelectButtonMiniInternal ) --[[ @ 0]]
	self.DirectorSelectButtonMiniInternal = DirectorSelectButtonMiniInternal --[[ @ 0]]
	
	local DirectorCustomStartButton = CoD.DirectorSelectButtonInternal.new( f1_arg0, f1_arg1, 0, 1, 0, 0, -0.16, 1, 0, 0 ) --[[ @ 0]]
	DirectorCustomStartButton:mergeStateConditions( {
		{
			stateName = "Disabled",
			condition = function ( menu, element, event )
				return IsSelfInState( self, "Disabled" )
			end
		}
	} ) --[[ @ 0]]
	DirectorCustomStartButton.LeaderActivityText:setAlpha( 0 ) --[[ @ 0]]
	DirectorCustomStartButton.LeaderActivityText:setText( "" ) --[[ @ 0]]
	DirectorCustomStartButton.Header:setAlpha( 0 ) --[[ @ 0]]
	DirectorCustomStartButton.Header:setText( LocalizeToUpperString( @"hash_0" ) ) --[[ @ 0]]
	DirectorCustomStartButton.MiddleText:setAlpha( 0 ) --[[ @ 0]]
	DirectorCustomStartButton.MiddleText:setText( "" ) --[[ @ 0]]
	DirectorCustomStartButton:linkToElementModel( self, "iconBackground", true, function ( model )
		local f5_local0 = model:get() --[[ @ 0]]
		if f5_local0 ~= nil then
			DirectorCustomStartButton.ImageNotFocus:setImage( RegisterImage( f5_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( DirectorCustomStartButton ) --[[ @ 0]]
	self.DirectorCustomStartButton = DirectorCustomStartButton --[[ @ 0]]
	
	local Border01 = CoD.CommonCornerPips02.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	Border01:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( Border01 ) --[[ @ 0]]
	self.Border01 = Border01 --[[ @ 0]]
	
	local FrontendFrame = LUI.UIImage.new( 0, 1, -1, 1, 0, 1, -1, 1 ) --[[ @ 0]]
	FrontendFrame:setAlpha( 0 ) --[[ @ 0]]
	FrontendFrame:setImage( RegisterImage( @"uie_ui_menu_store_common_frame" ) ) --[[ @ 0]]
	FrontendFrame:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_add" ) ) --[[ @ 0]]
	FrontendFrame:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	FrontendFrame:setupNineSliceShader( 12, 12 ) --[[ @ 0]]
	self:addElement( FrontendFrame ) --[[ @ 0]]
	self.FrontendFrame = FrontendFrame --[[ @ 0]]
	
	local Border = CoD.Border.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	Border:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( Border ) --[[ @ 0]]
	self.Border = Border --[[ @ 0]]
	
	local circle = LUI.UIImage.new( 0, 0, 59, 119, 0.5, 0.5, -30, 30 ) --[[ @ 0]]
	circle:setRGB( 0.19, 0.19, 0.19 ) --[[ @ 0]]
	circle:setAlpha( 0 ) --[[ @ 0]]
	circle:setZRot( 180 ) --[[ @ 0]]
	circle:setScale( 1.05, 1.05 ) --[[ @ 0]]
	circle:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_elliptical_ring_normal" ) ) --[[ @ 0]]
	circle:setShaderVector( 0, 4.66, 0, 0, 0 ) --[[ @ 0]]
	circle:setShaderVector( 1, 80, 80, 0, 0 ) --[[ @ 0]]
	circle:setShaderVector( 2, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( circle ) --[[ @ 0]]
	self.circle = circle --[[ @ 0]]
	
	local CountdownText = LUI.UIText.new( 0, 0, 129.5, 184.5, 0.5, 0.5, -12, 12 ) --[[ @ 0]]
	CountdownText:setAlpha( 0 ) --[[ @ 0]]
	CountdownText:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	CountdownText:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	CountdownText:subscribeToGlobalModel( f1_arg1, "LobbyRoot", "lobbyStatus", function ( model )
		local f6_local0 = model:get() --[[ @ 0]]
		if f6_local0 ~= nil then
			CountdownText:setText( ToUpper( f6_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( CountdownText ) --[[ @ 0]]
	self.CountdownText = CountdownText --[[ @ 0]]
	
	local timer = LUI.UIText.new( 0, 0, 50, 130, 0.5, 0.5, -22.5, 22.5 ) --[[ @ 0]]
	timer:setAlpha( 0 ) --[[ @ 0]]
	timer:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	timer:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	timer:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	timer:subscribeToGlobalModel( f1_arg1, "LobbyRoot", "lobbyTimeRemaining", function ( model )
		local f7_local0 = model:get() --[[ @ 0]]
		if f7_local0 ~= nil then
			timer:setText( f7_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( timer ) --[[ @ 0]]
	self.timer = timer --[[ @ 0]]
	
	local Fill = LUI.UIImage.new( 0, 1, -105, 105, 0, 1, -65, 65 ) --[[ @ 0]]
	Fill:setAlpha( 0 ) --[[ @ 0]]
	Fill:setImage( RegisterImage( @"uie_ui_menu_common_tab_backing" ) ) --[[ @ 0]]
	Fill:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_wipe" ) ) --[[ @ 0]]
	Fill:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	Fill:setShaderVector( 2, 1, 0, 0, 0 ) --[[ @ 0]]
	Fill:setShaderVector( 3, 0, 0, 0, 0 ) --[[ @ 0]]
	Fill:setShaderVector( 4, 0, 0, 0, 0 ) --[[ @ 0]]
	Fill:linkToElementModel( self, "progress", true, function ( model )
		local f8_local0 = model:get() --[[ @ 0]]
		if f8_local0 ~= nil then
			Fill:setShaderVector( 0, AdjustStartEnd( 0.16, 0.85, CoD.GetVectorComponentFromString( f8_local0, 1 ), CoD.GetVectorComponentFromString( f8_local0, 2 ), CoD.GetVectorComponentFromString( f8_local0, 3 ), CoD.GetVectorComponentFromString( f8_local0, 4 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Fill ) --[[ @ 0]]
	self.Fill = Fill --[[ @ 0]]
	
	local Fill2 = LUI.UIImage.new( 0, 1, -105, 105, 0, 1, -65, 65 ) --[[ @ 0]]
	Fill2:setAlpha( 0 ) --[[ @ 0]]
	Fill2:setImage( RegisterImage( @"uie_ui_menu_common_tab_backing" ) ) --[[ @ 0]]
	Fill2:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_wipe" ) ) --[[ @ 0]]
	Fill2:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	Fill2:setShaderVector( 2, 1, 0, 0, 0 ) --[[ @ 0]]
	Fill2:setShaderVector( 3, 0, 0, 0, 0 ) --[[ @ 0]]
	Fill2:setShaderVector( 4, 0, 0, 0, 0 ) --[[ @ 0]]
	Fill2:linkToElementModel( self, "progress", true, function ( model )
		local f9_local0 = model:get() --[[ @ 0]]
		if f9_local0 ~= nil then
			Fill2:setShaderVector( 0, AdjustStartEnd( 0.16, 0.85, CoD.GetVectorComponentFromString( f9_local0, 1 ), CoD.GetVectorComponentFromString( f9_local0, 2 ), CoD.GetVectorComponentFromString( f9_local0, 3 ), CoD.GetVectorComponentFromString( f9_local0, 4 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Fill2 ) --[[ @ 0]]
	self.Fill2 = Fill2 --[[ @ 0]]
	
	local PlayText = LUI.UIText.new( 0, 1, 0, 0, 0.5, 0.5, -12, 12 ) --[[ @ 0]]
	PlayText:setText( LocalizeToUpperString( @"menu/ready_up" ) ) --[[ @ 0]]
	PlayText:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	PlayText:setLetterSpacing( 6 ) --[[ @ 0]]
	PlayText:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	PlayText:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	self:addElement( PlayText ) --[[ @ 0]]
	self.PlayText = PlayText --[[ @ 0]]
	
	local WaitingText = LUI.UIText.new( 0, 1, 0, 0, 0.5, 0.5, -12, 12 ) --[[ @ 0]]
	WaitingText:setRGB( ColorSet.T8__OCHRE.r, ColorSet.T8__OCHRE.g, ColorSet.T8__OCHRE.b ) --[[ @ 0]]
	WaitingText:setAlpha( 0 ) --[[ @ 0]]
	WaitingText:setText( LocalizeToUpperString( @"hash_4EAC4945DCDC2806" ) ) --[[ @ 0]]
	WaitingText:setTTF( "default" ) --[[ @ 0]]
	WaitingText:setLetterSpacing( 3 ) --[[ @ 0]]
	WaitingText:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	WaitingText:setAlignment( Enum[@"luialignment"][@"hash_E821F0ECFF8D1C7"] ) --[[ @ 0]]
	self:addElement( WaitingText ) --[[ @ 0]]
	self.WaitingText = WaitingText --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "MatchStartHide",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalDataSourceModelValueEqualTo( f1_arg1, "LobbyRoot", "hideMenusForGameStart", 1 )
			end
		},
		{
			stateName = "MatchStarting",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalModelValueGreaterThan( "lobbyRoot.lobbyTimeRemaining", 0 )
			end
		},
		{
			stateName = "WaitingForMorePlayers",
			condition = function ( menu, element, event )
				return CoD.DirectorUtility.WaitingForMorePlayers()
			end
		},
		{
			stateName = "Disabled",
			condition = function ( menu, element, event )
				local f13_local0 --[[ @ 0]]
				if not CoD.DirectorUtility.CanReadyUp( f1_arg1 ) then
					f13_local0 = not CoD.DirectorUtility.CanReadyDown( f1_arg1 ) --[[ @ 0]]
				else
					f13_local0 = false --[[ @ 0]]
				end
				return f13_local0
			end
		},
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		},
		{
			stateName = "Ready",
			condition = function ( menu, element, event )
				return CoD.DirectorUtility.CanReadyDown( f1_arg1 )
			end
		}
	} ) --[[ @ 0]]
	local f1_local14 = self --[[ @ 0]]
	local f1_local15 = self.subscribeToModel --[[ @ 0]]
	local f1_local16 = DataSources.LobbyRoot.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local15( f1_local14, f1_local16.hideMenusForGameStart, function ( f16_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f16_arg0:get(),
			modelName = "hideMenusForGameStart"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local14 = self --[[ @ 0]]
	f1_local15 = self.subscribeToModel --[[ @ 0]]
	f1_local16 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local15( f1_local14, f1_local16["lobbyRoot.lobbyTimeRemaining"], function ( f17_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f17_arg0:get(),
			modelName = "lobbyRoot.lobbyTimeRemaining"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local14 = self --[[ @ 0]]
	f1_local15 = self.subscribeToModel --[[ @ 0]]
	f1_local16 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local15( f1_local14, f1_local16["lobbyRoot.lobbyList.playerCount"], function ( f18_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f18_arg0:get(),
			modelName = "lobbyRoot.lobbyList.playerCount"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local14 = self --[[ @ 0]]
	f1_local15 = self.subscribeToModel --[[ @ 0]]
	f1_local16 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local15( f1_local14, f1_local16["lobbyRoot.lobbyNav"], function ( f19_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f19_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local14 = self --[[ @ 0]]
	f1_local15 = self.subscribeToModel --[[ @ 0]]
	f1_local16 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local15( f1_local14, f1_local16["lobbyRoot.publicLobby.stage"], function ( f20_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f20_arg0:get(),
			modelName = "lobbyRoot.publicLobby.stage"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:appendEventHandler( "input_source_changed", function ( f21_arg0, f21_arg1 )
		f21_arg1.menu = f21_arg1.menu or f1_arg0 --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f21_arg0, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xbb_pscircle"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f21_arg0, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_none"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	f1_local14 = self --[[ @ 0]]
	f1_local15 = self.subscribeToModel --[[ @ 0]]
	f1_local16 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local15( f1_local14, f1_local16.LastInput, function ( f22_arg0, f22_arg1 )
		CoD.Menu.UpdateButtonShownState( f22_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xbb_pscircle"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f22_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_none"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local14 = self --[[ @ 0]]
	f1_local15 = self.subscribeToModel --[[ @ 0]]
	f1_local16 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local15( f1_local14, f1_local16["lobbyRoot.lobbyNav"], function ( f23_arg0, f23_arg1 )
		CoD.Menu.UpdateButtonShownState( f23_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xbb_pscircle"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f23_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_none"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local14 = self --[[ @ 0]]
	f1_local15 = self.subscribeToModel --[[ @ 0]]
	f1_local16 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local15( f1_local14, f1_local16["lobbyRoot.publicLobby.stage"], function ( f24_arg0, f24_arg1 )
		CoD.Menu.UpdateButtonShownState( f24_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xbb_pscircle"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f24_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_none"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local14 = self --[[ @ 0]]
	f1_local15 = self.subscribeToModel --[[ @ 0]]
	f1_local16 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local15( f1_local14, f1_local16["lobbyRoot.playlistId"], function ( f25_arg0, f25_arg1 )
		CoD.Menu.UpdateButtonShownState( f25_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xbb_pscircle"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f25_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_none"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local14 = self --[[ @ 0]]
	f1_local15 = self.subscribeToModel --[[ @ 0]]
	f1_local16 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local15( f1_local14, f1_local16["lobbyRoot.lobbyList.playerCount"], function ( f26_arg0, f26_arg1 )
		CoD.Menu.UpdateButtonShownState( f26_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xbb_pscircle"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f26_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_none"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( self, f1_arg1, Enum[@"luibutton"][@"lui_key_xbb_pscircle"], "ESCAPE", function ( element, menu, controller, model )
		if IsGamepad( controller ) and CoD.DirectorUtility.CanReadyDown( controller ) and not CoD.DirectorUtility.IsNumClientsExceeded( controller ) and CoD.DirectorUtility.AllClientsOwnDLCForPlaylist( controller ) then
			SetState( self, "DefaultState", controller ) --[[ @ 0]]
			CoD.DirectorUtility.SetLocalClientsReady() --[[ @ 0]]
			return true
		elseif IsGamepad( controller ) and CoD.DirectorUtility.CanReadyDown( controller ) and CoD.DirectorUtility.IsNumClientsExceeded( controller ) then
			CoD.DirectorUtility.OpenTooManyClientsPopup( self, controller ) --[[ @ 0]]
			return true
		elseif IsGamepad( controller ) and CoD.DirectorUtility.CanReadyDown( controller ) and not CoD.DirectorUtility.AllClientsOwnDLCForPlaylist( controller ) then
			CoD.DirectorUtility.OpenMapsNotEnabledPopup( self, controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsGamepad( controller ) and CoD.DirectorUtility.CanReadyDown( controller ) and not CoD.DirectorUtility.IsNumClientsExceeded( controller ) and CoD.DirectorUtility.AllClientsOwnDLCForPlaylist( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xbb_pscircle"], @"hash_26DA4540B4705513", nil, "ESCAPE" ) --[[ @ 0]]
			return true
		elseif IsGamepad( controller ) and CoD.DirectorUtility.CanReadyDown( controller ) and CoD.DirectorUtility.IsNumClientsExceeded( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xbb_pscircle"], @"hash_26DA4540B4705513", nil, "ESCAPE" ) --[[ @ 0]]
			return true
		elseif IsGamepad( controller ) and CoD.DirectorUtility.CanReadyDown( controller ) and not CoD.DirectorUtility.AllClientsOwnDLCForPlaylist( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xbb_pscircle"], @"hash_26DA4540B4705513", nil, "ESCAPE" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( self, f1_arg1, Enum[@"luibutton"][@"lui_key_none"], "MOUSE1", function ( element, menu, controller, model )
		if IsMouseOrKeyboard( controller ) and CoD.DirectorUtility.CanReadyUp( controller ) and not CoD.DirectorUtility.IsNumClientsExceeded( controller ) and CoD.DirectorUtility.AllClientsOwnDLCForPlaylist( controller ) then
			CoD.BaseUtility.StopPlayOnceSound( element, "uin_ready_bar_fill_1shot" ) --[[ @ 0]]
			PlaySoundAlias( "uin_ready_bar_done" ) --[[ @ 0]]
			SetState( self, "Ready", controller ) --[[ @ 0]]
			CoD.DirectorUtility.SetLocalClientsReady() --[[ @ 0]]
			return true
		elseif IsMouseOrKeyboard( controller ) and CoD.DirectorUtility.CanReadyDown( controller ) and not CoD.DirectorUtility.IsNumClientsExceeded( controller ) and CoD.DirectorUtility.AllClientsOwnDLCForPlaylist( controller ) then
			SetState( self, "DefaultState", controller ) --[[ @ 0]]
			CoD.DirectorUtility.SetLocalClientsReady() --[[ @ 0]]
			return true
		elseif IsMouseOrKeyboard( controller ) and CoD.DirectorUtility.CanReadyUp( controller ) and CoD.DirectorUtility.IsNumClientsExceeded( controller ) then
			CoD.BaseUtility.StopPlayOnceSound( element, "uin_ready_bar_fill_1shot" ) --[[ @ 0]]
			PlaySoundAlias( "uin_ready_bar_done" ) --[[ @ 0]]
			CoD.DirectorUtility.OpenTooManyClientsPopup( self, controller ) --[[ @ 0]]
			return true
		elseif IsMouseOrKeyboard( controller ) and CoD.DirectorUtility.CanReadyDown( controller ) and CoD.DirectorUtility.IsNumClientsExceeded( controller ) then
			CoD.DirectorUtility.OpenTooManyClientsPopup( self, controller ) --[[ @ 0]]
			return true
		elseif IsMouseOrKeyboard( controller ) and CoD.DirectorUtility.CanReadyUp( controller ) and not CoD.DirectorUtility.AllClientsOwnDLCForPlaylist( controller ) then
			CoD.BaseUtility.StopPlayOnceSound( element, "uin_ready_bar_fill_1shot" ) --[[ @ 0]]
			PlaySoundAlias( "uin_ready_bar_done" ) --[[ @ 0]]
			CoD.DirectorUtility.OpenMapsNotEnabledPopup( self, controller ) --[[ @ 0]]
			return true
		elseif IsMouseOrKeyboard( controller ) and CoD.DirectorUtility.CanReadyDown( controller ) and not CoD.DirectorUtility.AllClientsOwnDLCForPlaylist( controller ) then
			CoD.DirectorUtility.OpenMapsNotEnabledPopup( self, controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsMouseOrKeyboard( controller ) and CoD.DirectorUtility.CanReadyUp( controller ) and not CoD.DirectorUtility.IsNumClientsExceeded( controller ) and CoD.DirectorUtility.AllClientsOwnDLCForPlaylist( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_none"], @"hash_0", nil, "MOUSE1" ) --[[ @ 0]]
			return false
		elseif IsMouseOrKeyboard( controller ) and CoD.DirectorUtility.CanReadyDown( controller ) and not CoD.DirectorUtility.IsNumClientsExceeded( controller ) and CoD.DirectorUtility.AllClientsOwnDLCForPlaylist( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_none"], @"hash_0", nil, "MOUSE1" ) --[[ @ 0]]
			return false
		elseif IsMouseOrKeyboard( controller ) and CoD.DirectorUtility.CanReadyUp( controller ) and CoD.DirectorUtility.IsNumClientsExceeded( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_none"], @"hash_0", nil, "MOUSE1" ) --[[ @ 0]]
			return false
		elseif IsMouseOrKeyboard( controller ) and CoD.DirectorUtility.CanReadyDown( controller ) and CoD.DirectorUtility.IsNumClientsExceeded( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_none"], @"hash_0", nil, "MOUSE1" ) --[[ @ 0]]
			return false
		elseif IsMouseOrKeyboard( controller ) and CoD.DirectorUtility.CanReadyUp( controller ) and not CoD.DirectorUtility.AllClientsOwnDLCForPlaylist( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_none"], @"hash_0", nil, "MOUSE1" ) --[[ @ 0]]
			return false
		elseif IsMouseOrKeyboard( controller ) and CoD.DirectorUtility.CanReadyDown( controller ) and not CoD.DirectorUtility.AllClientsOwnDLCForPlaylist( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_none"], @"hash_0", nil, "MOUSE1" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( self, f1_arg1, Enum[@"luibutton"][@"lui_key_none"], "ui_confirm", function ( element, menu, controller, model )
		if IsMouseOrKeyboard( controller ) and CoD.DirectorUtility.CanReadyUp( controller ) and not CoD.DirectorUtility.IsNumClientsExceeded( controller ) and CoD.DirectorUtility.AllClientsOwnDLCForPlaylist( controller ) then
			CoD.BaseUtility.StopPlayOnceSound( element, "uin_ready_bar_fill_1shot" ) --[[ @ 0]]
			PlaySoundAlias( "uin_ready_bar_done" ) --[[ @ 0]]
			SetState( self, "Ready", controller ) --[[ @ 0]]
			CoD.DirectorUtility.SetLocalClientsReady() --[[ @ 0]]
			return true
		elseif IsMouseOrKeyboard( controller ) and CoD.DirectorUtility.CanReadyUp( controller ) and CoD.DirectorUtility.IsNumClientsExceeded( controller ) then
			CoD.BaseUtility.StopPlayOnceSound( element, "uin_ready_bar_fill_1shot" ) --[[ @ 0]]
			PlaySoundAlias( "uin_ready_bar_done" ) --[[ @ 0]]
			CoD.DirectorUtility.OpenTooManyClientsPopup( self, controller ) --[[ @ 0]]
			return true
		elseif IsMouseOrKeyboard( controller ) and CoD.DirectorUtility.CanReadyUp( controller ) and not CoD.DirectorUtility.AllClientsOwnDLCForPlaylist( controller ) then
			CoD.BaseUtility.StopPlayOnceSound( element, "uin_ready_bar_fill_1shot" ) --[[ @ 0]]
			PlaySoundAlias( "uin_ready_bar_done" ) --[[ @ 0]]
			CoD.DirectorUtility.OpenMapsNotEnabledPopup( self, controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsMouseOrKeyboard( controller ) and CoD.DirectorUtility.CanReadyUp( controller ) and not CoD.DirectorUtility.IsNumClientsExceeded( controller ) and CoD.DirectorUtility.AllClientsOwnDLCForPlaylist( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_none"], @"hash_0", nil, "ui_confirm" ) --[[ @ 0]]
			return false
		elseif IsMouseOrKeyboard( controller ) and CoD.DirectorUtility.CanReadyUp( controller ) and CoD.DirectorUtility.IsNumClientsExceeded( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_none"], @"hash_0", nil, "ui_confirm" ) --[[ @ 0]]
			return false
		elseif IsMouseOrKeyboard( controller ) and CoD.DirectorUtility.CanReadyUp( controller ) and not CoD.DirectorUtility.AllClientsOwnDLCForPlaylist( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_none"], @"hash_0", nil, "ui_confirm" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( self, "setState", function ( element, controller, f33_arg2, f33_arg3, f33_arg4 )
		UpdateElementState( self, "DirectorCustomStartButton", controller ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:linkToElementModel( self, "progress", true, function ( model )
		local f34_local0 = self --[[ @ 0]]
		if CoD.ModelUtility.IsParamModelEqualTo( model, 0 ) and IsElementInFocus( self.DirectorCustomStartButton ) then
			CoD.BaseUtility.StopPlayOnceSound( f34_local0, "uin_ready_bar_fill_1shot" ) --[[ @ 0]]
		elseif IsElementInFocus( self.DirectorCustomStartButton ) and not IsElementInState( self, "Ready" ) then
			CoD.BaseUtility.PlaySoundOnce( f34_local0, "uin_ready_bar_fill_1shot" ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:linkToElementModel( self, nil, true, function ( model )
		local f35_local0 = self --[[ @ 0]]
		if CoD.ModelUtility.IsParamModelEqualTo( model, Enum[@"luibuttonflags"][@"hash_4715085B24AAB606"] | Enum[@"luibuttonflags"][@"flag_down"] ) and IsElementInFocus( self.DirectorCustomStartButton ) and CoD.DirectorUtility.CanReadyUp( f1_arg1 ) and not CoD.DirectorUtility.IsNumClientsExceeded( f1_arg1 ) and CoD.DirectorUtility.AllClientsOwnDLCForPlaylist( f1_arg1 ) then
			CoD.BaseUtility.StopPlayOnceSound( f35_local0, "uin_ready_bar_fill_1shot" ) --[[ @ 0]]
			PlaySoundAlias( "uin_ready_bar_done" ) --[[ @ 0]]
			SetState( self, "Ready", f1_arg1 ) --[[ @ 0]]
			CoD.DirectorUtility.SetLocalClientsReady() --[[ @ 0]]
		elseif CoD.ModelUtility.IsParamModelEqualTo( model, Enum[@"luibuttonflags"][@"hash_4715085B24AAB606"] | Enum[@"luibuttonflags"][@"flag_down"] ) and IsElementInFocus( self.DirectorCustomStartButton ) and CoD.DirectorUtility.CanReadyUp( f1_arg1 ) and CoD.DirectorUtility.IsNumClientsExceeded( f1_arg1 ) then
			CoD.BaseUtility.StopPlayOnceSound( f35_local0, "uin_ready_bar_fill_1shot" ) --[[ @ 0]]
			PlaySoundAlias( "uin_ready_bar_done" ) --[[ @ 0]]
			CoD.DirectorUtility.OpenTooManyClientsPopup( self, f1_arg1 ) --[[ @ 0]]
		elseif CoD.ModelUtility.IsParamModelEqualTo( model, Enum[@"luibuttonflags"][@"hash_4715085B24AAB606"] | Enum[@"luibuttonflags"][@"flag_down"] ) and IsElementInFocus( self.DirectorCustomStartButton ) and CoD.DirectorUtility.CanReadyUp( f1_arg1 ) and not CoD.DirectorUtility.AllClientsOwnDLCForPlaylist( f1_arg1 ) then
			CoD.BaseUtility.StopPlayOnceSound( f35_local0, "uin_ready_bar_fill_1shot" ) --[[ @ 0]]
			PlaySoundAlias( "uin_ready_bar_done" ) --[[ @ 0]]
			CoD.DirectorUtility.OpenMapsNotEnabledPopup( self, f1_arg1 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	DirectorSelectButtonMiniInternal.id = "DirectorSelectButtonMiniInternal" --[[ @ 0]]
	DirectorCustomStartButton.id = "DirectorCustomStartButton" --[[ @ 0]]
	self.__defaultFocus = DirectorCustomStartButton --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.DirectorReadyButton.__resetProperties = function ( f36_arg0 )
	f36_arg0.Fill:completeAnimation() --[[ @ 0]]
	f36_arg0.DirectorCustomStartButton:completeAnimation() --[[ @ 0]]
	f36_arg0.PlayText:completeAnimation() --[[ @ 0]]
	f36_arg0.Fill2:completeAnimation() --[[ @ 0]]
	f36_arg0.timer:completeAnimation() --[[ @ 0]]
	f36_arg0.CountdownText:completeAnimation() --[[ @ 0]]
	f36_arg0.circle:completeAnimation() --[[ @ 0]]
	f36_arg0.Border:completeAnimation() --[[ @ 0]]
	f36_arg0.WaitingText:completeAnimation() --[[ @ 0]]
	f36_arg0.Backing:completeAnimation() --[[ @ 0]]
	f36_arg0.Border01:completeAnimation() --[[ @ 0]]
	f36_arg0.FrontendFrame:completeAnimation() --[[ @ 0]]
	f36_arg0.DirectorSelectButtonMiniInternal:completeAnimation() --[[ @ 0]]
	f36_arg0.Fill:setAlpha( 0 ) --[[ @ 0]]
	f36_arg0.Fill:setScale( 1, 1 ) --[[ @ 0]]
	f36_arg0.Fill:setImage( RegisterImage( @"uie_ui_menu_common_tab_backing" ) ) --[[ @ 0]]
	f36_arg0.DirectorCustomStartButton:setRGB( 1, 1, 1 ) --[[ @ 0]]
	f36_arg0.DirectorCustomStartButton:setAlpha( 1 ) --[[ @ 0]]
	f36_arg0.DirectorCustomStartButton:setScale( 1, 1 ) --[[ @ 0]]
	f36_arg0.PlayText:setRGB( 1, 1, 1 ) --[[ @ 0]]
	f36_arg0.PlayText:setAlpha( 1 ) --[[ @ 0]]
	f36_arg0.PlayText:setScale( 1, 1 ) --[[ @ 0]]
	f36_arg0.PlayText:setText( LocalizeToUpperString( @"menu/ready_up" ) ) --[[ @ 0]]
	f36_arg0.Fill2:setAlpha( 0 ) --[[ @ 0]]
	f36_arg0.Fill2:setScale( 1, 1 ) --[[ @ 0]]
	f36_arg0.timer:setLeftRight( 0, 0, 50, 130 ) --[[ @ 0]]
	f36_arg0.timer:setAlpha( 0 ) --[[ @ 0]]
	f36_arg0.timer:setScale( 1, 1 ) --[[ @ 0]]
	f36_arg0.timer:setLetterSpacing( 0 ) --[[ @ 0]]
	f36_arg0.CountdownText:setAlpha( 0 ) --[[ @ 0]]
	f36_arg0.CountdownText:setScale( 1, 1 ) --[[ @ 0]]
	f36_arg0.circle:setLeftRight( 0, 0, 59, 119 ) --[[ @ 0]]
	f36_arg0.circle:setAlpha( 0 ) --[[ @ 0]]
	f36_arg0.circle:setScale( 1.05, 1.05 ) --[[ @ 0]]
	f36_arg0.Border:setAlpha( 0 ) --[[ @ 0]]
	f36_arg0.WaitingText:setAlpha( 0 ) --[[ @ 0]]
	f36_arg0.Backing:setAlpha( 0 ) --[[ @ 0]]
	f36_arg0.Border01:setAlpha( 0 ) --[[ @ 0]]
	f36_arg0.FrontendFrame:setAlpha( 0 ) --[[ @ 0]]
	f36_arg0.DirectorSelectButtonMiniInternal:setAlpha( 0 ) --[[ @ 0]]
	f36_arg0.DirectorSelectButtonMiniInternal.MiddleText:setText( LocalizeToUpperString( @"menu/ready_up" ) ) --[[ @ 0]]
	f36_arg0.DirectorSelectButtonMiniInternal.MiddleTextFocus:setText( LocalizeToUpperString( @"menu/ready_up" ) ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorReadyButton.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f37_arg0, f37_arg1 )
			f37_arg0:__resetProperties() --[[ @ 0]]
			f37_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f37_arg0.Fill:completeAnimation() --[[ @ 0]]
			f37_arg0.Fill:setAlpha( 0 ) --[[ @ 0]]
			f37_arg0.clipFinished( f37_arg0.Fill ) --[[ @ 0]]
		end,
		ChildFocus = function ( f38_arg0, f38_arg1 )
			f38_arg0:__resetProperties() --[[ @ 0]]
			f38_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f38_arg0.DirectorCustomStartButton:completeAnimation() --[[ @ 0]]
			f38_arg0.DirectorCustomStartButton:setScale( 1.05, 1.05 ) --[[ @ 0]]
			f38_arg0.clipFinished( f38_arg0.DirectorCustomStartButton ) --[[ @ 0]]
			f38_arg0.Fill:completeAnimation() --[[ @ 0]]
			f38_arg0.Fill:setAlpha( 0.35 ) --[[ @ 0]]
			f38_arg0.Fill:setScale( 1.05, 1.05 ) --[[ @ 0]]
			f38_arg0.Fill:setImage( RegisterImage( @"uie_ui_menu_common_tab_backing" ) ) --[[ @ 0]]
			f38_arg0.clipFinished( f38_arg0.Fill ) --[[ @ 0]]
			f38_arg0.Fill2:completeAnimation() --[[ @ 0]]
			f38_arg0.Fill2:setAlpha( 0.35 ) --[[ @ 0]]
			f38_arg0.Fill2:setScale( 1.05, 1.05 ) --[[ @ 0]]
			f38_arg0.clipFinished( f38_arg0.Fill2 ) --[[ @ 0]]
			f38_arg0.PlayText:completeAnimation() --[[ @ 0]]
			f38_arg0.PlayText:setScale( 1.05, 1.05 ) --[[ @ 0]]
			f38_arg0.clipFinished( f38_arg0.PlayText ) --[[ @ 0]]
		end,
		GainChildFocus = function ( f39_arg0, f39_arg1 )
			f39_arg0:__resetProperties() --[[ @ 0]]
			f39_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			local f39_local0 = function ( f40_arg0 )
				f39_arg0.DirectorCustomStartButton:beginAnimation( 200 ) --[[ @ 0]]
				f39_arg0.DirectorCustomStartButton:setScale( 1.05, 1.05 ) --[[ @ 0]]
				f39_arg0.DirectorCustomStartButton:registerEventHandler( "interrupted_keyframe", f39_arg0.clipInterrupted ) --[[ @ 0]]
				f39_arg0.DirectorCustomStartButton:registerEventHandler( "transition_complete_keyframe", f39_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f39_arg0.DirectorCustomStartButton:completeAnimation() --[[ @ 0]]
			f39_arg0.DirectorCustomStartButton:setScale( 1, 1 ) --[[ @ 0]]
			f39_local0( f39_arg0.DirectorCustomStartButton ) --[[ @ 0]]
			local f39_local1 = function ( f41_arg0 )
				f39_arg0.Fill:beginAnimation( 200 ) --[[ @ 0]]
				f39_arg0.Fill:setAlpha( 0.35 ) --[[ @ 0]]
				f39_arg0.Fill:setScale( 1.05, 1.05 ) --[[ @ 0]]
				f39_arg0.Fill:registerEventHandler( "interrupted_keyframe", f39_arg0.clipInterrupted ) --[[ @ 0]]
				f39_arg0.Fill:registerEventHandler( "transition_complete_keyframe", f39_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f39_arg0.Fill:completeAnimation() --[[ @ 0]]
			f39_arg0.Fill:setAlpha( 0 ) --[[ @ 0]]
			f39_arg0.Fill:setScale( 1, 1 ) --[[ @ 0]]
			f39_local1( f39_arg0.Fill ) --[[ @ 0]]
			local f39_local2 = function ( f42_arg0 )
				f39_arg0.Fill2:beginAnimation( 200 ) --[[ @ 0]]
				f39_arg0.Fill2:setAlpha( 0.35 ) --[[ @ 0]]
				f39_arg0.Fill2:setScale( 1.05, 1.05 ) --[[ @ 0]]
				f39_arg0.Fill2:registerEventHandler( "interrupted_keyframe", f39_arg0.clipInterrupted ) --[[ @ 0]]
				f39_arg0.Fill2:registerEventHandler( "transition_complete_keyframe", f39_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f39_arg0.Fill2:completeAnimation() --[[ @ 0]]
			f39_arg0.Fill2:setAlpha( 0 ) --[[ @ 0]]
			f39_arg0.Fill2:setScale( 1, 1 ) --[[ @ 0]]
			f39_local2( f39_arg0.Fill2 ) --[[ @ 0]]
			local f39_local3 = function ( f43_arg0 )
				f39_arg0.PlayText:beginAnimation( 200 ) --[[ @ 0]]
				f39_arg0.PlayText:setScale( 1.05, 1.05 ) --[[ @ 0]]
				f39_arg0.PlayText:registerEventHandler( "interrupted_keyframe", f39_arg0.clipInterrupted ) --[[ @ 0]]
				f39_arg0.PlayText:registerEventHandler( "transition_complete_keyframe", f39_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f39_arg0.PlayText:completeAnimation() --[[ @ 0]]
			f39_arg0.PlayText:setScale( 1, 1 ) --[[ @ 0]]
			f39_local3( f39_arg0.PlayText ) --[[ @ 0]]
		end,
		LoseChildFocus = function ( f44_arg0, f44_arg1 )
			f44_arg0:__resetProperties() --[[ @ 0]]
			f44_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			local f44_local0 = function ( f45_arg0 )
				f44_arg0.DirectorCustomStartButton:beginAnimation( 200 ) --[[ @ 0]]
				f44_arg0.DirectorCustomStartButton:setScale( 1, 1 ) --[[ @ 0]]
				f44_arg0.DirectorCustomStartButton:registerEventHandler( "interrupted_keyframe", f44_arg0.clipInterrupted ) --[[ @ 0]]
				f44_arg0.DirectorCustomStartButton:registerEventHandler( "transition_complete_keyframe", f44_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f44_arg0.DirectorCustomStartButton:completeAnimation() --[[ @ 0]]
			f44_arg0.DirectorCustomStartButton:setScale( 1.05, 1.05 ) --[[ @ 0]]
			f44_local0( f44_arg0.DirectorCustomStartButton ) --[[ @ 0]]
			local f44_local1 = function ( f46_arg0 )
				f44_arg0.Fill:beginAnimation( 200 ) --[[ @ 0]]
				f44_arg0.Fill:setAlpha( 0 ) --[[ @ 0]]
				f44_arg0.Fill:setScale( 1, 1 ) --[[ @ 0]]
				f44_arg0.Fill:registerEventHandler( "interrupted_keyframe", f44_arg0.clipInterrupted ) --[[ @ 0]]
				f44_arg0.Fill:registerEventHandler( "transition_complete_keyframe", f44_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f44_arg0.Fill:completeAnimation() --[[ @ 0]]
			f44_arg0.Fill:setAlpha( 0.35 ) --[[ @ 0]]
			f44_arg0.Fill:setScale( 1.05, 1.05 ) --[[ @ 0]]
			f44_local1( f44_arg0.Fill ) --[[ @ 0]]
			local f44_local2 = function ( f47_arg0 )
				f44_arg0.Fill2:beginAnimation( 200 ) --[[ @ 0]]
				f44_arg0.Fill2:setAlpha( 0 ) --[[ @ 0]]
				f44_arg0.Fill2:registerEventHandler( "interrupted_keyframe", f44_arg0.clipInterrupted ) --[[ @ 0]]
				f44_arg0.Fill2:registerEventHandler( "transition_complete_keyframe", f44_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f44_arg0.Fill2:completeAnimation() --[[ @ 0]]
			f44_arg0.Fill2:setAlpha( 0.35 ) --[[ @ 0]]
			f44_arg0.Fill2:setScale( 1.05, 1.05 ) --[[ @ 0]]
			f44_local2( f44_arg0.Fill2 ) --[[ @ 0]]
			local f44_local3 = function ( f48_arg0 )
				f44_arg0.PlayText:beginAnimation( 200 ) --[[ @ 0]]
				f44_arg0.PlayText:setScale( 1, 1 ) --[[ @ 0]]
				f44_arg0.PlayText:registerEventHandler( "interrupted_keyframe", f44_arg0.clipInterrupted ) --[[ @ 0]]
				f44_arg0.PlayText:registerEventHandler( "transition_complete_keyframe", f44_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f44_arg0.PlayText:completeAnimation() --[[ @ 0]]
			f44_arg0.PlayText:setScale( 1.05, 1.05 ) --[[ @ 0]]
			f44_local3( f44_arg0.PlayText ) --[[ @ 0]]
		end
	},
	MatchStartHide = {
		DefaultClip = function ( f49_arg0, f49_arg1 )
			f49_arg0:__resetProperties() --[[ @ 0]]
			f49_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f49_arg0.circle:completeAnimation() --[[ @ 0]]
			f49_arg0.circle:setAlpha( 0 ) --[[ @ 0]]
			f49_arg0.clipFinished( f49_arg0.circle ) --[[ @ 0]]
			f49_arg0.CountdownText:completeAnimation() --[[ @ 0]]
			f49_arg0.CountdownText:setAlpha( 1 ) --[[ @ 0]]
			f49_arg0.clipFinished( f49_arg0.CountdownText ) --[[ @ 0]]
			f49_arg0.timer:completeAnimation() --[[ @ 0]]
			f49_arg0.timer:setAlpha( 0 ) --[[ @ 0]]
			f49_arg0.timer:setLetterSpacing( 0 ) --[[ @ 0]]
			f49_arg0.clipFinished( f49_arg0.timer ) --[[ @ 0]]
			f49_arg0.PlayText:completeAnimation() --[[ @ 0]]
			f49_arg0.PlayText:setAlpha( 0 ) --[[ @ 0]]
			f49_arg0.clipFinished( f49_arg0.PlayText ) --[[ @ 0]]
		end,
		ChildFocus = function ( f50_arg0, f50_arg1 )
			f50_arg0:__resetProperties() --[[ @ 0]]
			f50_arg0:setupElementClipCounter( 5 ) --[[ @ 0]]
			f50_arg0.DirectorCustomStartButton:completeAnimation() --[[ @ 0]]
			f50_arg0.DirectorCustomStartButton:setScale( 1.05, 1.05 ) --[[ @ 0]]
			f50_arg0.clipFinished( f50_arg0.DirectorCustomStartButton ) --[[ @ 0]]
			f50_arg0.circle:completeAnimation() --[[ @ 0]]
			f50_arg0.circle:setAlpha( 0 ) --[[ @ 0]]
			f50_arg0.circle:setScale( 1.05, 1.05 ) --[[ @ 0]]
			f50_arg0.clipFinished( f50_arg0.circle ) --[[ @ 0]]
			f50_arg0.CountdownText:completeAnimation() --[[ @ 0]]
			f50_arg0.CountdownText:setAlpha( 1 ) --[[ @ 0]]
			f50_arg0.CountdownText:setScale( 1.05, 1.05 ) --[[ @ 0]]
			f50_arg0.clipFinished( f50_arg0.CountdownText ) --[[ @ 0]]
			f50_arg0.timer:completeAnimation() --[[ @ 0]]
			f50_arg0.timer:setAlpha( 0 ) --[[ @ 0]]
			f50_arg0.timer:setScale( 1.05, 1.05 ) --[[ @ 0]]
			f50_arg0.timer:setLetterSpacing( 0 ) --[[ @ 0]]
			f50_arg0.clipFinished( f50_arg0.timer ) --[[ @ 0]]
			f50_arg0.PlayText:completeAnimation() --[[ @ 0]]
			f50_arg0.PlayText:setAlpha( 0 ) --[[ @ 0]]
			f50_arg0.clipFinished( f50_arg0.PlayText ) --[[ @ 0]]
		end,
		GainChildFocus = function ( f51_arg0, f51_arg1 )
			f51_arg0:__resetProperties() --[[ @ 0]]
			f51_arg0:setupElementClipCounter( 5 ) --[[ @ 0]]
			local f51_local0 = function ( f52_arg0 )
				f51_arg0.DirectorCustomStartButton:beginAnimation( 200 ) --[[ @ 0]]
				f51_arg0.DirectorCustomStartButton:setScale( 1.05, 1.05 ) --[[ @ 0]]
				f51_arg0.DirectorCustomStartButton:registerEventHandler( "interrupted_keyframe", f51_arg0.clipInterrupted ) --[[ @ 0]]
				f51_arg0.DirectorCustomStartButton:registerEventHandler( "transition_complete_keyframe", f51_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f51_arg0.DirectorCustomStartButton:completeAnimation() --[[ @ 0]]
			f51_arg0.DirectorCustomStartButton:setScale( 1, 1 ) --[[ @ 0]]
			f51_local0( f51_arg0.DirectorCustomStartButton ) --[[ @ 0]]
			f51_arg0.circle:completeAnimation() --[[ @ 0]]
			f51_arg0.circle:setAlpha( 0 ) --[[ @ 0]]
			f51_arg0.circle:setScale( 1.05, 1.05 ) --[[ @ 0]]
			f51_arg0.clipFinished( f51_arg0.circle ) --[[ @ 0]]
			local f51_local1 = function ( f53_arg0 )
				f51_arg0.CountdownText:beginAnimation( 200 ) --[[ @ 0]]
				f51_arg0.CountdownText:setScale( 1.05, 1.05 ) --[[ @ 0]]
				f51_arg0.CountdownText:registerEventHandler( "interrupted_keyframe", f51_arg0.clipInterrupted ) --[[ @ 0]]
				f51_arg0.CountdownText:registerEventHandler( "transition_complete_keyframe", f51_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f51_arg0.CountdownText:completeAnimation() --[[ @ 0]]
			f51_arg0.CountdownText:setAlpha( 1 ) --[[ @ 0]]
			f51_arg0.CountdownText:setScale( 1, 1 ) --[[ @ 0]]
			f51_local1( f51_arg0.CountdownText ) --[[ @ 0]]
			local f51_local2 = function ( f54_arg0 )
				f51_arg0.timer:beginAnimation( 200 ) --[[ @ 0]]
				f51_arg0.timer:setScale( 1.05, 1.05 ) --[[ @ 0]]
				f51_arg0.timer:registerEventHandler( "interrupted_keyframe", f51_arg0.clipInterrupted ) --[[ @ 0]]
				f51_arg0.timer:registerEventHandler( "transition_complete_keyframe", f51_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f51_arg0.timer:completeAnimation() --[[ @ 0]]
			f51_arg0.timer:setAlpha( 0 ) --[[ @ 0]]
			f51_arg0.timer:setScale( 1, 1 ) --[[ @ 0]]
			f51_arg0.timer:setLetterSpacing( 0 ) --[[ @ 0]]
			f51_local2( f51_arg0.timer ) --[[ @ 0]]
			f51_arg0.PlayText:completeAnimation() --[[ @ 0]]
			f51_arg0.PlayText:setAlpha( 0 ) --[[ @ 0]]
			f51_arg0.clipFinished( f51_arg0.PlayText ) --[[ @ 0]]
		end,
		LoseChildFocus = function ( f55_arg0, f55_arg1 )
			f55_arg0:__resetProperties() --[[ @ 0]]
			f55_arg0:setupElementClipCounter( 5 ) --[[ @ 0]]
			local f55_local0 = function ( f56_arg0 )
				f55_arg0.DirectorCustomStartButton:beginAnimation( 200 ) --[[ @ 0]]
				f55_arg0.DirectorCustomStartButton:setScale( 1, 1 ) --[[ @ 0]]
				f55_arg0.DirectorCustomStartButton:registerEventHandler( "interrupted_keyframe", f55_arg0.clipInterrupted ) --[[ @ 0]]
				f55_arg0.DirectorCustomStartButton:registerEventHandler( "transition_complete_keyframe", f55_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f55_arg0.DirectorCustomStartButton:completeAnimation() --[[ @ 0]]
			f55_arg0.DirectorCustomStartButton:setScale( 1.05, 1.05 ) --[[ @ 0]]
			f55_local0( f55_arg0.DirectorCustomStartButton ) --[[ @ 0]]
			f55_arg0.circle:completeAnimation() --[[ @ 0]]
			f55_arg0.circle:setAlpha( 0 ) --[[ @ 0]]
			f55_arg0.circle:setScale( 1.05, 1.05 ) --[[ @ 0]]
			f55_arg0.clipFinished( f55_arg0.circle ) --[[ @ 0]]
			local f55_local1 = function ( f57_arg0 )
				f55_arg0.CountdownText:beginAnimation( 200 ) --[[ @ 0]]
				f55_arg0.CountdownText:setScale( 1, 1 ) --[[ @ 0]]
				f55_arg0.CountdownText:registerEventHandler( "interrupted_keyframe", f55_arg0.clipInterrupted ) --[[ @ 0]]
				f55_arg0.CountdownText:registerEventHandler( "transition_complete_keyframe", f55_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f55_arg0.CountdownText:completeAnimation() --[[ @ 0]]
			f55_arg0.CountdownText:setAlpha( 1 ) --[[ @ 0]]
			f55_arg0.CountdownText:setScale( 1.05, 1.05 ) --[[ @ 0]]
			f55_local1( f55_arg0.CountdownText ) --[[ @ 0]]
			local f55_local2 = function ( f58_arg0 )
				f55_arg0.timer:beginAnimation( 200 ) --[[ @ 0]]
				f55_arg0.timer:setScale( 1, 1 ) --[[ @ 0]]
				f55_arg0.timer:registerEventHandler( "interrupted_keyframe", f55_arg0.clipInterrupted ) --[[ @ 0]]
				f55_arg0.timer:registerEventHandler( "transition_complete_keyframe", f55_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f55_arg0.timer:completeAnimation() --[[ @ 0]]
			f55_arg0.timer:setAlpha( 0 ) --[[ @ 0]]
			f55_arg0.timer:setScale( 1.05, 1.05 ) --[[ @ 0]]
			f55_arg0.timer:setLetterSpacing( 0 ) --[[ @ 0]]
			f55_local2( f55_arg0.timer ) --[[ @ 0]]
			f55_arg0.PlayText:completeAnimation() --[[ @ 0]]
			f55_arg0.PlayText:setAlpha( 0 ) --[[ @ 0]]
			f55_arg0.clipFinished( f55_arg0.PlayText ) --[[ @ 0]]
		end
	},
	MatchStarting = {
		DefaultClip = function ( f59_arg0, f59_arg1 )
			f59_arg0:__resetProperties() --[[ @ 0]]
			f59_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f59_arg0.circle:completeAnimation() --[[ @ 0]]
			f59_arg0.circle:setAlpha( 1 ) --[[ @ 0]]
			f59_arg0.clipFinished( f59_arg0.circle ) --[[ @ 0]]
			f59_arg0.CountdownText:completeAnimation() --[[ @ 0]]
			f59_arg0.CountdownText:setAlpha( 1 ) --[[ @ 0]]
			f59_arg0.clipFinished( f59_arg0.CountdownText ) --[[ @ 0]]
			f59_arg0.timer:completeAnimation() --[[ @ 0]]
			f59_arg0.timer:setAlpha( 1 ) --[[ @ 0]]
			f59_arg0.timer:setLetterSpacing( 0 ) --[[ @ 0]]
			f59_arg0.clipFinished( f59_arg0.timer ) --[[ @ 0]]
			f59_arg0.PlayText:completeAnimation() --[[ @ 0]]
			f59_arg0.PlayText:setAlpha( 0 ) --[[ @ 0]]
			f59_arg0.clipFinished( f59_arg0.PlayText ) --[[ @ 0]]
		end,
		ChildFocus = function ( f60_arg0, f60_arg1 )
			f60_arg0:__resetProperties() --[[ @ 0]]
			f60_arg0:setupElementClipCounter( 5 ) --[[ @ 0]]
			f60_arg0.DirectorCustomStartButton:completeAnimation() --[[ @ 0]]
			f60_arg0.DirectorCustomStartButton:setScale( 1.05, 1.05 ) --[[ @ 0]]
			f60_arg0.clipFinished( f60_arg0.DirectorCustomStartButton ) --[[ @ 0]]
			f60_arg0.circle:completeAnimation() --[[ @ 0]]
			f60_arg0.circle:setLeftRight( 0, 0, 57, 117 ) --[[ @ 0]]
			f60_arg0.circle:setAlpha( 1 ) --[[ @ 0]]
			f60_arg0.circle:setScale( 1.1, 1.1 ) --[[ @ 0]]
			f60_arg0.clipFinished( f60_arg0.circle ) --[[ @ 0]]
			f60_arg0.CountdownText:completeAnimation() --[[ @ 0]]
			f60_arg0.CountdownText:setAlpha( 1 ) --[[ @ 0]]
			f60_arg0.CountdownText:setScale( 1.05, 1.05 ) --[[ @ 0]]
			f60_arg0.clipFinished( f60_arg0.CountdownText ) --[[ @ 0]]
			f60_arg0.timer:completeAnimation() --[[ @ 0]]
			f60_arg0.timer:setLeftRight( 0, 0, 48, 128 ) --[[ @ 0]]
			f60_arg0.timer:setAlpha( 1 ) --[[ @ 0]]
			f60_arg0.timer:setScale( 1.05, 1.05 ) --[[ @ 0]]
			f60_arg0.timer:setLetterSpacing( 0 ) --[[ @ 0]]
			f60_arg0.clipFinished( f60_arg0.timer ) --[[ @ 0]]
			f60_arg0.PlayText:completeAnimation() --[[ @ 0]]
			f60_arg0.PlayText:setAlpha( 0 ) --[[ @ 0]]
			f60_arg0.PlayText:setScale( 1, 1.05 ) --[[ @ 0]]
			f60_arg0.clipFinished( f60_arg0.PlayText ) --[[ @ 0]]
		end,
		GainChildFocus = function ( f61_arg0, f61_arg1 )
			f61_arg0:__resetProperties() --[[ @ 0]]
			f61_arg0:setupElementClipCounter( 5 ) --[[ @ 0]]
			local f61_local0 = function ( f62_arg0 )
				f61_arg0.DirectorCustomStartButton:beginAnimation( 200 ) --[[ @ 0]]
				f61_arg0.DirectorCustomStartButton:setScale( 1.05, 1.05 ) --[[ @ 0]]
				f61_arg0.DirectorCustomStartButton:registerEventHandler( "interrupted_keyframe", f61_arg0.clipInterrupted ) --[[ @ 0]]
				f61_arg0.DirectorCustomStartButton:registerEventHandler( "transition_complete_keyframe", f61_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f61_arg0.DirectorCustomStartButton:completeAnimation() --[[ @ 0]]
			f61_arg0.DirectorCustomStartButton:setScale( 1, 1 ) --[[ @ 0]]
			f61_local0( f61_arg0.DirectorCustomStartButton ) --[[ @ 0]]
			local f61_local1 = function ( f63_arg0 )
				f61_arg0.circle:beginAnimation( 200 ) --[[ @ 0]]
				f61_arg0.circle:setLeftRight( 0, 0, 57, 117 ) --[[ @ 0]]
				f61_arg0.circle:setScale( 1.1, 1.1 ) --[[ @ 0]]
				f61_arg0.circle:registerEventHandler( "interrupted_keyframe", f61_arg0.clipInterrupted ) --[[ @ 0]]
				f61_arg0.circle:registerEventHandler( "transition_complete_keyframe", f61_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f61_arg0.circle:completeAnimation() --[[ @ 0]]
			f61_arg0.circle:setLeftRight( 0, 0, 59, 119 ) --[[ @ 0]]
			f61_arg0.circle:setAlpha( 1 ) --[[ @ 0]]
			f61_arg0.circle:setScale( 1.05, 1.05 ) --[[ @ 0]]
			f61_local1( f61_arg0.circle ) --[[ @ 0]]
			local f61_local2 = function ( f64_arg0 )
				f61_arg0.CountdownText:beginAnimation( 200 ) --[[ @ 0]]
				f61_arg0.CountdownText:setScale( 1.05, 1.05 ) --[[ @ 0]]
				f61_arg0.CountdownText:registerEventHandler( "interrupted_keyframe", f61_arg0.clipInterrupted ) --[[ @ 0]]
				f61_arg0.CountdownText:registerEventHandler( "transition_complete_keyframe", f61_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f61_arg0.CountdownText:completeAnimation() --[[ @ 0]]
			f61_arg0.CountdownText:setAlpha( 1 ) --[[ @ 0]]
			f61_arg0.CountdownText:setScale( 1, 1 ) --[[ @ 0]]
			f61_local2( f61_arg0.CountdownText ) --[[ @ 0]]
			local f61_local3 = function ( f65_arg0 )
				f61_arg0.timer:beginAnimation( 200 ) --[[ @ 0]]
				f61_arg0.timer:setLeftRight( 0, 0, 48, 128 ) --[[ @ 0]]
				f61_arg0.timer:setScale( 1.05, 1.05 ) --[[ @ 0]]
				f61_arg0.timer:registerEventHandler( "interrupted_keyframe", f61_arg0.clipInterrupted ) --[[ @ 0]]
				f61_arg0.timer:registerEventHandler( "transition_complete_keyframe", f61_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f61_arg0.timer:completeAnimation() --[[ @ 0]]
			f61_arg0.timer:setLeftRight( 0, 0, 50, 130 ) --[[ @ 0]]
			f61_arg0.timer:setAlpha( 1 ) --[[ @ 0]]
			f61_arg0.timer:setScale( 1, 1 ) --[[ @ 0]]
			f61_arg0.timer:setLetterSpacing( 0 ) --[[ @ 0]]
			f61_local3( f61_arg0.timer ) --[[ @ 0]]
			local f61_local4 = function ( f66_arg0 )
				f61_arg0.PlayText:beginAnimation( 200 ) --[[ @ 0]]
				f61_arg0.PlayText:setScale( 1, 1.05 ) --[[ @ 0]]
				f61_arg0.PlayText:registerEventHandler( "interrupted_keyframe", f61_arg0.clipInterrupted ) --[[ @ 0]]
				f61_arg0.PlayText:registerEventHandler( "transition_complete_keyframe", f61_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f61_arg0.PlayText:completeAnimation() --[[ @ 0]]
			f61_arg0.PlayText:setAlpha( 0 ) --[[ @ 0]]
			f61_arg0.PlayText:setScale( 1, 1 ) --[[ @ 0]]
			f61_local4( f61_arg0.PlayText ) --[[ @ 0]]
		end,
		LoseChildFocus = function ( f67_arg0, f67_arg1 )
			f67_arg0:__resetProperties() --[[ @ 0]]
			f67_arg0:setupElementClipCounter( 5 ) --[[ @ 0]]
			local f67_local0 = function ( f68_arg0 )
				f67_arg0.DirectorCustomStartButton:beginAnimation( 200 ) --[[ @ 0]]
				f67_arg0.DirectorCustomStartButton:setScale( 1, 1 ) --[[ @ 0]]
				f67_arg0.DirectorCustomStartButton:registerEventHandler( "interrupted_keyframe", f67_arg0.clipInterrupted ) --[[ @ 0]]
				f67_arg0.DirectorCustomStartButton:registerEventHandler( "transition_complete_keyframe", f67_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f67_arg0.DirectorCustomStartButton:completeAnimation() --[[ @ 0]]
			f67_arg0.DirectorCustomStartButton:setScale( 1.05, 1.05 ) --[[ @ 0]]
			f67_local0( f67_arg0.DirectorCustomStartButton ) --[[ @ 0]]
			local f67_local1 = function ( f69_arg0 )
				f67_arg0.circle:beginAnimation( 200 ) --[[ @ 0]]
				f67_arg0.circle:setLeftRight( 0, 0, 59, 119 ) --[[ @ 0]]
				f67_arg0.circle:setScale( 1.05, 1.05 ) --[[ @ 0]]
				f67_arg0.circle:registerEventHandler( "interrupted_keyframe", f67_arg0.clipInterrupted ) --[[ @ 0]]
				f67_arg0.circle:registerEventHandler( "transition_complete_keyframe", f67_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f67_arg0.circle:completeAnimation() --[[ @ 0]]
			f67_arg0.circle:setLeftRight( 0, 0, 57, 117 ) --[[ @ 0]]
			f67_arg0.circle:setAlpha( 1 ) --[[ @ 0]]
			f67_arg0.circle:setScale( 1.1, 1.1 ) --[[ @ 0]]
			f67_local1( f67_arg0.circle ) --[[ @ 0]]
			local f67_local2 = function ( f70_arg0 )
				f67_arg0.CountdownText:beginAnimation( 200 ) --[[ @ 0]]
				f67_arg0.CountdownText:setScale( 1, 1 ) --[[ @ 0]]
				f67_arg0.CountdownText:registerEventHandler( "interrupted_keyframe", f67_arg0.clipInterrupted ) --[[ @ 0]]
				f67_arg0.CountdownText:registerEventHandler( "transition_complete_keyframe", f67_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f67_arg0.CountdownText:completeAnimation() --[[ @ 0]]
			f67_arg0.CountdownText:setAlpha( 1 ) --[[ @ 0]]
			f67_arg0.CountdownText:setScale( 1.05, 1.05 ) --[[ @ 0]]
			f67_local2( f67_arg0.CountdownText ) --[[ @ 0]]
			local f67_local3 = function ( f71_arg0 )
				f67_arg0.timer:beginAnimation( 200 ) --[[ @ 0]]
				f67_arg0.timer:setLeftRight( 0, 0, 50, 130 ) --[[ @ 0]]
				f67_arg0.timer:setScale( 1, 1 ) --[[ @ 0]]
				f67_arg0.timer:registerEventHandler( "interrupted_keyframe", f67_arg0.clipInterrupted ) --[[ @ 0]]
				f67_arg0.timer:registerEventHandler( "transition_complete_keyframe", f67_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f67_arg0.timer:completeAnimation() --[[ @ 0]]
			f67_arg0.timer:setLeftRight( 0, 0, 48, 128 ) --[[ @ 0]]
			f67_arg0.timer:setAlpha( 1 ) --[[ @ 0]]
			f67_arg0.timer:setScale( 1.05, 1.05 ) --[[ @ 0]]
			f67_arg0.timer:setLetterSpacing( 0 ) --[[ @ 0]]
			f67_local3( f67_arg0.timer ) --[[ @ 0]]
			local f67_local4 = function ( f72_arg0 )
				f67_arg0.PlayText:beginAnimation( 200 ) --[[ @ 0]]
				f67_arg0.PlayText:setScale( 1, 1 ) --[[ @ 0]]
				f67_arg0.PlayText:registerEventHandler( "interrupted_keyframe", f67_arg0.clipInterrupted ) --[[ @ 0]]
				f67_arg0.PlayText:registerEventHandler( "transition_complete_keyframe", f67_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f67_arg0.PlayText:completeAnimation() --[[ @ 0]]
			f67_arg0.PlayText:setAlpha( 0 ) --[[ @ 0]]
			f67_arg0.PlayText:setScale( 1, 1.05 ) --[[ @ 0]]
			f67_local4( f67_arg0.PlayText ) --[[ @ 0]]
		end
	},
	WaitingForMorePlayers = {
		DefaultClip = function ( f73_arg0, f73_arg1 )
			f73_arg0:__resetProperties() --[[ @ 0]]
			f73_arg0:setupElementClipCounter( 7 ) --[[ @ 0]]
			f73_arg0.Backing:completeAnimation() --[[ @ 0]]
			f73_arg0.Backing:setAlpha( 1 ) --[[ @ 0]]
			f73_arg0.clipFinished( f73_arg0.Backing ) --[[ @ 0]]
			f73_arg0.DirectorCustomStartButton:completeAnimation() --[[ @ 0]]
			f73_arg0.DirectorCustomStartButton:setAlpha( 0 ) --[[ @ 0]]
			f73_arg0.clipFinished( f73_arg0.DirectorCustomStartButton ) --[[ @ 0]]
			f73_arg0.Border01:completeAnimation() --[[ @ 0]]
			f73_arg0.Border01:setAlpha( 1 ) --[[ @ 0]]
			f73_arg0.clipFinished( f73_arg0.Border01 ) --[[ @ 0]]
			f73_arg0.FrontendFrame:completeAnimation() --[[ @ 0]]
			f73_arg0.FrontendFrame:setAlpha( 0.1 ) --[[ @ 0]]
			f73_arg0.clipFinished( f73_arg0.FrontendFrame ) --[[ @ 0]]
			f73_arg0.Border:completeAnimation() --[[ @ 0]]
			f73_arg0.Border:setAlpha( 0 ) --[[ @ 0]]
			f73_arg0.clipFinished( f73_arg0.Border ) --[[ @ 0]]
			f73_arg0.PlayText:completeAnimation() --[[ @ 0]]
			f73_arg0.PlayText:setAlpha( 0 ) --[[ @ 0]]
			f73_arg0.clipFinished( f73_arg0.PlayText ) --[[ @ 0]]
			f73_arg0.WaitingText:completeAnimation() --[[ @ 0]]
			f73_arg0.WaitingText:setAlpha( 1 ) --[[ @ 0]]
			f73_arg0.clipFinished( f73_arg0.WaitingText ) --[[ @ 0]]
		end
	},
	Disabled = {
		DefaultClip = function ( f74_arg0, f74_arg1 )
			f74_arg0:__resetProperties() --[[ @ 0]]
			f74_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f74_arg0.DirectorCustomStartButton:completeAnimation() --[[ @ 0]]
			f74_arg0.DirectorCustomStartButton:setRGB( 0.58, 0.58, 0.58 ) --[[ @ 0]]
			f74_arg0.clipFinished( f74_arg0.DirectorCustomStartButton ) --[[ @ 0]]
			f74_arg0.PlayText:completeAnimation() --[[ @ 0]]
			f74_arg0.PlayText:setRGB( 0.59, 0.59, 0.59 ) --[[ @ 0]]
			f74_arg0.PlayText:setAlpha( 0.15 ) --[[ @ 0]]
			f74_arg0.clipFinished( f74_arg0.PlayText ) --[[ @ 0]]
		end
	},
	Hidden = {
		DefaultClip = function ( f75_arg0, f75_arg1 )
			f75_arg0:__resetProperties() --[[ @ 0]]
			f75_arg0:setupElementClipCounter( 6 ) --[[ @ 0]]
			f75_arg0.DirectorSelectButtonMiniInternal:completeAnimation() --[[ @ 0]]
			f75_arg0.DirectorSelectButtonMiniInternal:setAlpha( 0 ) --[[ @ 0]]
			f75_arg0.clipFinished( f75_arg0.DirectorSelectButtonMiniInternal ) --[[ @ 0]]
			f75_arg0.DirectorCustomStartButton:completeAnimation() --[[ @ 0]]
			f75_arg0.DirectorCustomStartButton:setAlpha( 0 ) --[[ @ 0]]
			f75_arg0.clipFinished( f75_arg0.DirectorCustomStartButton ) --[[ @ 0]]
			f75_arg0.circle:completeAnimation() --[[ @ 0]]
			f75_arg0.circle:setAlpha( 0 ) --[[ @ 0]]
			f75_arg0.clipFinished( f75_arg0.circle ) --[[ @ 0]]
			f75_arg0.CountdownText:completeAnimation() --[[ @ 0]]
			f75_arg0.CountdownText:setAlpha( 0 ) --[[ @ 0]]
			f75_arg0.clipFinished( f75_arg0.CountdownText ) --[[ @ 0]]
			f75_arg0.timer:completeAnimation() --[[ @ 0]]
			f75_arg0.timer:setAlpha( 0 ) --[[ @ 0]]
			f75_arg0.clipFinished( f75_arg0.timer ) --[[ @ 0]]
			f75_arg0.PlayText:completeAnimation() --[[ @ 0]]
			f75_arg0.PlayText:setAlpha( 0 ) --[[ @ 0]]
			f75_arg0.clipFinished( f75_arg0.PlayText ) --[[ @ 0]]
		end
	},
	Ready = {
		DefaultClip = function ( f76_arg0, f76_arg1 )
			f76_arg0:__resetProperties() --[[ @ 0]]
			f76_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f76_arg0.DirectorSelectButtonMiniInternal:completeAnimation() --[[ @ 0]]
			f76_arg0.DirectorSelectButtonMiniInternal.MiddleText:completeAnimation() --[[ @ 0]]
			f76_arg0.DirectorSelectButtonMiniInternal.MiddleTextFocus:completeAnimation() --[[ @ 0]]
			f76_arg0.DirectorSelectButtonMiniInternal.MiddleText:setText( LocalizeToUpperString( @"menu/ready" ) ) --[[ @ 0]]
			f76_arg0.DirectorSelectButtonMiniInternal.MiddleTextFocus:setText( LocalizeToUpperString( @"menu/ready" ) ) --[[ @ 0]]
			f76_arg0.clipFinished( f76_arg0.DirectorSelectButtonMiniInternal ) --[[ @ 0]]
			f76_arg0.PlayText:completeAnimation() --[[ @ 0]]
			f76_arg0.PlayText:setText( LocalizeToUpperString( @"menu/ready" ) ) --[[ @ 0]]
			f76_arg0.clipFinished( f76_arg0.PlayText ) --[[ @ 0]]
		end,
		ChildFocus = function ( f77_arg0, f77_arg1 )
			f77_arg0:__resetProperties() --[[ @ 0]]
			f77_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f77_arg0.DirectorCustomStartButton:completeAnimation() --[[ @ 0]]
			f77_arg0.DirectorCustomStartButton:setScale( 1.05, 1.05 ) --[[ @ 0]]
			f77_arg0.clipFinished( f77_arg0.DirectorCustomStartButton ) --[[ @ 0]]
			f77_arg0.PlayText:completeAnimation() --[[ @ 0]]
			f77_arg0.PlayText:setScale( 1.05, 1.05 ) --[[ @ 0]]
			f77_arg0.PlayText:setText( LocalizeToUpperString( @"menu/ready" ) ) --[[ @ 0]]
			f77_arg0.clipFinished( f77_arg0.PlayText ) --[[ @ 0]]
		end,
		GainChildFocus = function ( f78_arg0, f78_arg1 )
			f78_arg0:__resetProperties() --[[ @ 0]]
			f78_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			local f78_local0 = function ( f79_arg0 )
				f78_arg0.DirectorCustomStartButton:beginAnimation( 200 ) --[[ @ 0]]
				f78_arg0.DirectorCustomStartButton:setScale( 1.05, 1.05 ) --[[ @ 0]]
				f78_arg0.DirectorCustomStartButton:registerEventHandler( "interrupted_keyframe", f78_arg0.clipInterrupted ) --[[ @ 0]]
				f78_arg0.DirectorCustomStartButton:registerEventHandler( "transition_complete_keyframe", f78_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f78_arg0.DirectorCustomStartButton:completeAnimation() --[[ @ 0]]
			f78_arg0.DirectorCustomStartButton:setScale( 1, 1 ) --[[ @ 0]]
			f78_local0( f78_arg0.DirectorCustomStartButton ) --[[ @ 0]]
			local f78_local1 = function ( f80_arg0 )
				f78_arg0.PlayText:beginAnimation( 200 ) --[[ @ 0]]
				f78_arg0.PlayText:setScale( 1.05, 1.05 ) --[[ @ 0]]
				f78_arg0.PlayText:registerEventHandler( "interrupted_keyframe", f78_arg0.clipInterrupted ) --[[ @ 0]]
				f78_arg0.PlayText:registerEventHandler( "transition_complete_keyframe", f78_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f78_arg0.PlayText:completeAnimation() --[[ @ 0]]
			f78_arg0.PlayText:setScale( 1, 1 ) --[[ @ 0]]
			f78_arg0.PlayText:setText( LocalizeToUpperString( @"menu/ready" ) ) --[[ @ 0]]
			f78_local1( f78_arg0.PlayText ) --[[ @ 0]]
		end,
		LoseChildFocus = function ( f81_arg0, f81_arg1 )
			f81_arg0:__resetProperties() --[[ @ 0]]
			f81_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			local f81_local0 = function ( f82_arg0 )
				f81_arg0.DirectorCustomStartButton:beginAnimation( 200 ) --[[ @ 0]]
				f81_arg0.DirectorCustomStartButton:setScale( 1, 1 ) --[[ @ 0]]
				f81_arg0.DirectorCustomStartButton:registerEventHandler( "interrupted_keyframe", f81_arg0.clipInterrupted ) --[[ @ 0]]
				f81_arg0.DirectorCustomStartButton:registerEventHandler( "transition_complete_keyframe", f81_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f81_arg0.DirectorCustomStartButton:completeAnimation() --[[ @ 0]]
			f81_arg0.DirectorCustomStartButton:setScale( 1.05, 1.05 ) --[[ @ 0]]
			f81_local0( f81_arg0.DirectorCustomStartButton ) --[[ @ 0]]
			local f81_local1 = function ( f83_arg0 )
				f81_arg0.PlayText:beginAnimation( 200 ) --[[ @ 0]]
				f81_arg0.PlayText:setScale( 1, 1 ) --[[ @ 0]]
				f81_arg0.PlayText:registerEventHandler( "interrupted_keyframe", f81_arg0.clipInterrupted ) --[[ @ 0]]
				f81_arg0.PlayText:registerEventHandler( "transition_complete_keyframe", f81_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f81_arg0.PlayText:completeAnimation() --[[ @ 0]]
			f81_arg0.PlayText:setScale( 1.05, 1.05 ) --[[ @ 0]]
			f81_arg0.PlayText:setText( LocalizeToUpperString( @"menu/ready" ) ) --[[ @ 0]]
			f81_local1( f81_arg0.PlayText ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.DirectorReadyButton.__onClose = function ( f84_arg0 )
	f84_arg0.DirectorSelectButtonMiniInternal:close() --[[ @ 0]]
	f84_arg0.DirectorCustomStartButton:close() --[[ @ 0]]
	f84_arg0.Border01:close() --[[ @ 0]]
	f84_arg0.Border:close() --[[ @ 0]]
	f84_arg0.CountdownText:close() --[[ @ 0]]
	f84_arg0.timer:close() --[[ @ 0]]
	f84_arg0.Fill:close() --[[ @ 0]]
	f84_arg0.Fill2:close() --[[ @ 0]]
end
 --[[ @ 0]]
