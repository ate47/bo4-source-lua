-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
require( "x64:1e5bfb75539585a8" ) --[[ @ 0]]
require( "x64:46fc3850ee0e7df6" ) --[[ @ 0]]
require( "x64:70e99196b904ad18" ) --[[ @ 0]]
require( "x64:74c9a492524a6a24" ) --[[ @ 0]]
require( "ui/uieditor/widgets/header/header_container_frontend" ) --[[ @ 0]]
require( "ui/uieditor/widgets/startmenu/options/startmenuoptionsbackground" ) --[[ @ 0]]
require( "ui/uieditor/widgets/store/storecommontextbacking" ) --[[ @ 0]]
require( "ui/uieditor/widgets/systemoverlays/featureoverlay_button" ) --[[ @ 0]]

CoD.CodCasterSettingsSideBar = InheritFrom( CoD.Menu ) --[[ @ 0]]
LUI.createMenu.CodCasterSettingsSideBar = function ( f1_arg0, f1_arg1 )
	local self = CoD.Menu.NewForUIEditor( "CodCasterSettingsSideBar", f1_arg0 ) --[[ @ 0]]
	local f1_local1 = self --[[ @ 0]]
	CoD.BaseUtility.InitGlobalModel( "GametypeSettings.Update", nil ) --[[ @ 0]]
	CoD.BaseUtility.InitGlobalModel( "GametypeSettings.Reset", nil ) --[[ @ 0]]
	CoD.BaseUtility.InitControllerModel( f1_arg0, "customGamesEdit", false ) --[[ @ 0]]
	MenuHidesFreeCursor( f1_local1, f1_arg0 ) --[[ @ 0]]
	self:setClass( CoD.CodCasterSettingsSideBar ) --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self:setOwner( f1_arg0 ) --[[ @ 0]]
	self:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	self:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	self:playSound( "menu_open", f1_arg0 ) --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_local1:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local texture = LUI.UIImage.new( 1, 1, -1050, 0, 0, 0, 0, 1080 ) --[[ @ 0]]
	texture:setAlpha( 0.75 ) --[[ @ 0]]
	texture:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_E2354BE557C4C7A" ) ) --[[ @ 0]]
	texture:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( texture ) --[[ @ 0]]
	self.texture = texture --[[ @ 0]]
	
	local Background = CoD.StartMenuOptionsBackground.new( f1_local1, f1_arg0, 1, 1, -1050, 0, 0, 0, 0, 1080 ) --[[ @ 0]]
	self:addElement( Background ) --[[ @ 0]]
	self.Background = Background --[[ @ 0]]
	
	local BackingBlack = CoD.CodCasterSettingFooter.new( f1_local1, f1_arg0, 1, 1, -1049, 17, 0, 0, 1015, 1268 ) --[[ @ 0]]
	self:addElement( BackingBlack ) --[[ @ 0]]
	self.BackingBlack = BackingBlack --[[ @ 0]]
	
	local tabBG = CoD.CodCaster_Settings_CategoryTabs_BG.new( f1_local1, f1_arg0, 1, 1, -1050, 0, 0, 0, 51, 88 ) --[[ @ 0]]
	self:addElement( tabBG ) --[[ @ 0]]
	self.tabBG = tabBG --[[ @ 0]]
	
	local f1_local6 = nil --[[ @ 0]]
	f1_local6 = LUI.UIElement.createFake() --[[ @ 0]]
	self.TabFrame = f1_local6 --[[ @ 0]]
	local f1_local7 = nil --[[ @ 0]]
	
	local TabFramePC = LUI.UIFrame.new( f1_local1, f1_arg0, 0, 0, false ) --[[ @ 0]]
	TabFramePC:setLeftRight( 1, 1, -1016, -56 ) --[[ @ 0]]
	TabFramePC:setTopBottom( 0, 0, 134.5, 1012.5 ) --[[ @ 0]]
	self:addElement( TabFramePC ) --[[ @ 0]]
	self.TabFramePC = TabFramePC --[[ @ 0]]
	
	local BGSceneBlur = LUI.UIImage.new( 1, 1, -1050, -230, 0, 0, 16.5, 83.5 ) --[[ @ 0]]
	BGSceneBlur:setRGB( ColorSet.Title.r, ColorSet.Title.g, ColorSet.Title.b ) --[[ @ 0]]
	BGSceneBlur:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( BGSceneBlur ) --[[ @ 0]]
	self.BGSceneBlur = BGSceneBlur --[[ @ 0]]
	
	local f1_local10 = nil --[[ @ 0]]
	self.background2 = LUI.UIElement.createFake() --[[ @ 0]]
	
	local DotTiledBacking = CoD.StoreCommonTextBacking.new( f1_local1, f1_arg0, 1, 1, -1050, 0, 0, 0, 9.5, 51.5 ) --[[ @ 0]]
	DotTiledBacking:setAlpha( 0.5 ) --[[ @ 0]]
	DotTiledBacking.NoiseBacking:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( DotTiledBacking ) --[[ @ 0]]
	self.DotTiledBacking = DotTiledBacking --[[ @ 0]]
	
	local TopBar2 = LUI.UIImage.new( 1, 1, -1050, 0, 0, 0, 50.5, 51.5 ) --[[ @ 0]]
	TopBar2:setRGB( 0.46, 0.46, 0.51 ) --[[ @ 0]]
	TopBar2:setAlpha( 0.8 ) --[[ @ 0]]
	TopBar2:setImage( RegisterImage( @"uie_ui_menu_cac_primary_button_top_bar" ) ) --[[ @ 0]]
	TopBar2:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_31CC85D0A86303B0" ) ) --[[ @ 0]]
	TopBar2:setShaderVector( 0, 2, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( TopBar2 ) --[[ @ 0]]
	self.TopBar2 = TopBar2 --[[ @ 0]]
	
	local BackingGrayMediumLeft = CoD.header_container_frontend.new( f1_local1, f1_arg0, 1, 1, -910, 90, 0, 0, 0.5, 42.5 ) --[[ @ 0]]
	self:addElement( BackingGrayMediumLeft ) --[[ @ 0]]
	self.BackingGrayMediumLeft = BackingGrayMediumLeft --[[ @ 0]]
	
	local Title = LUI.UIText.new( 1, 1, -1020, -702, 0, 0, 15.5, 45.5 ) --[[ @ 0]]
	Title:setRGB( ColorSet.T8__GOLD.r, ColorSet.T8__GOLD.g, ColorSet.T8__GOLD.b ) --[[ @ 0]]
	Title:setText( LocalizeToUpperString( @"hash_7E2311AD89D11E7C" ) ) --[[ @ 0]]
	Title:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	Title:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	Title:setAlignment( Enum[@"LUIAlignment"][@"hash_6ED4298C93DC5ED"] ) --[[ @ 0]]
	self:addElement( Title ) --[[ @ 0]]
	self.Title = Title --[[ @ 0]]
	
	local FooterContainerIngameRight = CoD.CodCasterSettingsSideBarLeftbuttoncontainer.new( f1_local1, f1_arg0, 1, 1, -1000, -420, 1, 1, -48, 0 ) --[[ @ 0]]
	self:addElement( FooterContainerIngameRight ) --[[ @ 0]]
	self.FooterContainerIngameRight = FooterContainerIngameRight --[[ @ 0]]
	
	local CatgeoryTab = CoD.CodCaster_Settings_CategoryTabs.new( f1_local1, f1_arg0, 1, 1, -1050, 0, 0, 0, 51, 88 ) --[[ @ 0]]
	CatgeoryTab.categoryTabsListPC:setDataSource( "CodCasterSideBarSettingsTabs" ) --[[ @ 0]]
	CatgeoryTab.categoryTabsList:setDataSource( "CodCasterSideBarSettingsTabs" ) --[[ @ 0]]
	CatgeoryTab:registerEventHandler( "menu_loaded", function ( element, event )
		local f2_local0 = nil --[[ @ 0]]
		if element.menuLoaded then
			f2_local0 = element:menuLoaded( event ) --[[ @ 0]]
		elseif element.super.menuLoaded then
			f2_local0 = element.super:menuLoaded( event ) --[[ @ 0]]
		end
		if not f2_local0 then
			f2_local0 = element:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f2_local0
	end ) --[[ @ 0]]
	self:addElement( CatgeoryTab ) --[[ @ 0]]
	self.CatgeoryTab = CatgeoryTab --[[ @ 0]]
	
	local quitButton = nil --[[ @ 0]]
	
	quitButton = CoD.featureOverlay_Button.new( f1_local1, f1_arg0, 1, 1, -319, -119, 0, 0, 924, 984 ) --[[ @ 0]]
	quitButton.ButtonContainer.Title:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_370A9FDC87CD3D48" ) ) --[[ @ 0]]
	quitButton:registerEventHandler( "gain_focus", function ( element, event )
		local f3_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f3_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f3_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f3_local0
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( quitButton, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "MOUSE1", function ( element, menu, controller, model )
		SaveShoutcasterSettings( self, element, controller ) --[[ @ 0]]
		GoBack( self, controller ) --[[ @ 0]]
		SetLuiKeyCatcher( false ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_0", nil, "MOUSE1" ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	self:addElement( quitButton ) --[[ @ 0]]
	self.quitButton = quitButton --[[ @ 0]]
	
	local resetButton = nil --[[ @ 0]]
	
	resetButton = CoD.featureOverlay_Button.new( f1_local1, f1_arg0, 1, 1, -550, -350, 0, 0, 924, 984 ) --[[ @ 0]]
	resetButton.ButtonContainer.Title:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_5FA987631536BD44" ) ) --[[ @ 0]]
	resetButton:registerEventHandler( "gain_focus", function ( element, event )
		local f6_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f6_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f6_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f6_local0
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( resetButton, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "MOUSE1", function ( element, menu, controller, model )
		CoD.CodCasterUtility.OpenResetCodCasterSettingsPopup( self, element, controller, "", menu ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_0", nil, "MOUSE1" ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	self:addElement( resetButton ) --[[ @ 0]]
	self.resetButton = resetButton --[[ @ 0]]
	
	f1_local6:linkToElementModel( CatgeoryTab.categoryTabsList, "tabWidget", true, function ( model )
		local f9_local0 = model:get() --[[ @ 0]]
		if f9_local0 ~= nil then
			f1_local6:changeFrameWidget( f9_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	TabFramePC:linkToElementModel( CatgeoryTab.categoryTabsListPC, "tabWidget", true, function ( model )
		local f10_local0 = model:get() --[[ @ 0]]
		if f10_local0 ~= nil then
			TabFramePC:changeFrameWidget( f10_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:mergeStateConditions( {
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return Engine[@"IsVisibilityBitSet"]( f1_arg0, Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"] )
			end
		},
		{
			stateName = "PCGamepad",
			condition = function ( menu, element, event )
				return IsPC() and IsGamepad( f1_arg0 )
			end
		},
		{
			stateName = "PC",
			condition = function ( menu, element, event )
				return IsPC()
			end
		}
	} ) --[[ @ 0]]
	local f1_local19 = self --[[ @ 0]]
	local f1_local20 = self.subscribeToModel --[[ @ 0]]
	local f1_local21 = Engine[@"GetModelForController"]( f1_arg0 ) --[[ @ 0]]
	f1_local20( f1_local19, f1_local21["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"]], function ( f14_arg0 )
		f1_local1:updateElementState( self, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f14_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:appendEventHandler( "input_source_changed", function ( f15_arg0, f15_arg1 )
		f15_arg1.menu = f15_arg1.menu or f1_local1 --[[ @ 0]]
		f1_local1:updateElementState( self, f15_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	f1_local19 = self --[[ @ 0]]
	f1_local20 = self.subscribeToModel --[[ @ 0]]
	f1_local21 = Engine[@"GetModelForController"]( f1_arg0 ) --[[ @ 0]]
	f1_local20( f1_local19, f1_local21.LastInput, function ( f16_arg0 )
		f1_local1:updateElementState( self, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f16_arg0:get(),
			modelName = "LastInput"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:appendEventHandler( "input_source_changed", function ( f17_arg0, f17_arg1 )
		f17_arg1.menu = f17_arg1.menu or f1_local1 --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f17_arg0, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	f1_local19 = self --[[ @ 0]]
	f1_local20 = self.subscribeToModel --[[ @ 0]]
	f1_local21 = Engine[@"GetModelForController"]( f1_arg0 ) --[[ @ 0]]
	f1_local20( f1_local19, f1_local21.LastInput, function ( f18_arg0, f18_arg1 )
		CoD.Menu.UpdateButtonShownState( f18_arg1, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"LUIButton"][@"hash_3820DDD869ABBFAA"], "Y", function ( element, menu, controller, model )
		if not IsRepeatButtonPress( model ) then
			SaveShoutcasterSettings( self, element, controller ) --[[ @ 0]]
			GoBack( self, controller ) --[[ @ 0]]
			SetLuiKeyCatcher( false ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsRepeatButtonPress( nil ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3820DDD869ABBFAA"], @"hash_370A9FDC87CD3D48", nil, "Y" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"], "ui_contextual_2", function ( element, menu, controller, model )
		if IsGamepad( controller ) then
			CoD.CodCasterUtility.ResetCodcasterSettingsGamepad( controller, menu ) --[[ @ 0]]
			PlaySoundAlias( "uin_party_ease_slide" ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsGamepad( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"], @"hash_5FA987631536BD44", Enum[@"hash_3BEBDBAEEB3ECCCA"][@"hash_72919C98A7A845F0"] | 750 << Enum[@"hash_3BEBDBAEEB3ECCCA"][@"hash_176ADD225D738C93"], "ui_contextual_2" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( self, "setState", function ( element, controller, f23_arg2, f23_arg3, f23_arg4 )
		if IsMenuInState( f1_local1, "Hidden" ) then
			SaveShoutcasterSettings( self, element, controller ) --[[ @ 0]]
			GoBack( self, controller ) --[[ @ 0]]
			SetLuiKeyCatcher( false ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	f1_local6.id = "TabFrame" --[[ @ 0]]
	TabFramePC.id = "TabFramePC" --[[ @ 0]]
	FooterContainerIngameRight:setModel( self.buttonModel, f1_arg0 ) --[[ @ 0]]
	if CoD.isPC then
		FooterContainerIngameRight.id = "FooterContainerIngameRight" --[[ @ 0]]
	end
	CatgeoryTab.id = "CatgeoryTab" --[[ @ 0]]
	if CoD.isPC then
		quitButton.id = "quitButton" --[[ @ 0]]
	end
	if CoD.isPC then
		resetButton.id = "resetButton" --[[ @ 0]]
	end
	self:processEvent( {
		name = "menu_loaded",
		controller = f1_arg0
	} ) --[[ @ 0]]
	self.__defaultFocus = f1_local6 --[[ @ 0]]
	if CoD.isPC and (IsKeyboard( f1_arg0 ) or self.ignoreCursor) then
		self:restoreState( f1_arg0 ) --[[ @ 0]]
	end
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg0 ) --[[ @ 0]]
	end
	f1_local20 = self --[[ @ 0]]
	if IsPC() then
		ChangeDefaultFocus( self, self.TabFramePC ) --[[ @ 0]]
		ForceCheckDefaultPCFocus( self.TabFramePC, f1_local1, f1_arg0 ) --[[ @ 0]]
	end
	return self
end
 --[[ @ 0]]
CoD.CodCasterSettingsSideBar.__resetProperties = function ( f24_arg0 )
	f24_arg0.quitButton:completeAnimation() --[[ @ 0]]
	f24_arg0.resetButton:completeAnimation() --[[ @ 0]]
	f24_arg0.CatgeoryTab:completeAnimation() --[[ @ 0]]
	f24_arg0.FooterContainerIngameRight:completeAnimation() --[[ @ 0]]
	f24_arg0.Title:completeAnimation() --[[ @ 0]]
	f24_arg0.BackingGrayMediumLeft:completeAnimation() --[[ @ 0]]
	f24_arg0.TopBar2:completeAnimation() --[[ @ 0]]
	f24_arg0.DotTiledBacking:completeAnimation() --[[ @ 0]]
	f24_arg0.background2:completeAnimation() --[[ @ 0]]
	f24_arg0.BGSceneBlur:completeAnimation() --[[ @ 0]]
	f24_arg0.TabFramePC:completeAnimation() --[[ @ 0]]
	f24_arg0.TabFrame:completeAnimation() --[[ @ 0]]
	f24_arg0.tabBG:completeAnimation() --[[ @ 0]]
	f24_arg0.BackingBlack:completeAnimation() --[[ @ 0]]
	f24_arg0.Background:completeAnimation() --[[ @ 0]]
	f24_arg0.texture:completeAnimation() --[[ @ 0]]
	f24_arg0.quitButton:setLeftRight( 1, 1, -319, -119 ) --[[ @ 0]]
	f24_arg0.quitButton:setAlpha( 1 ) --[[ @ 0]]
	f24_arg0.resetButton:setAlpha( 1 ) --[[ @ 0]]
	f24_arg0.CatgeoryTab:setAlpha( 1 ) --[[ @ 0]]
	f24_arg0.FooterContainerIngameRight:setLeftRight( 1, 1, -1000, -420 ) --[[ @ 0]]
	f24_arg0.FooterContainerIngameRight:setAlpha( 1 ) --[[ @ 0]]
	f24_arg0.Title:setAlpha( 1 ) --[[ @ 0]]
	f24_arg0.BackingGrayMediumLeft:setAlpha( 1 ) --[[ @ 0]]
	f24_arg0.TopBar2:setAlpha( 0.8 ) --[[ @ 0]]
	f24_arg0.DotTiledBacking:setAlpha( 0.5 ) --[[ @ 0]]
	f24_arg0.background2:setAlpha( 0.2 ) --[[ @ 0]]
	f24_arg0.BGSceneBlur:setAlpha( 0 ) --[[ @ 0]]
	f24_arg0.TabFramePC:setAlpha( 1 ) --[[ @ 0]]
	f24_arg0.TabFrame:setAlpha( 1 ) --[[ @ 0]]
	f24_arg0.tabBG:setAlpha( 1 ) --[[ @ 0]]
	f24_arg0.BackingBlack:setAlpha( 1 ) --[[ @ 0]]
	f24_arg0.Background:setLeftRight( 1, 1, -1050, 0 ) --[[ @ 0]]
	f24_arg0.Background:setTopBottom( 0, 0, 0, 1080 ) --[[ @ 0]]
	f24_arg0.Background:setAlpha( 1 ) --[[ @ 0]]
	f24_arg0.texture:setAlpha( 0.75 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.CodCasterSettingsSideBar.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f25_arg0, f25_arg1 )
			f25_arg0:__resetProperties() --[[ @ 0]]
			f25_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f25_arg0.quitButton:completeAnimation() --[[ @ 0]]
			f25_arg0.quitButton:setAlpha( 1 ) --[[ @ 0]]
			f25_arg0.clipFinished( f25_arg0.quitButton ) --[[ @ 0]]
		end
	},
	Hidden = {
		DefaultClip = function ( f26_arg0, f26_arg1 )
			f26_arg0:__resetProperties() --[[ @ 0]]
			f26_arg0:setupElementClipCounter( 14 ) --[[ @ 0]]
			f26_arg0.texture:completeAnimation() --[[ @ 0]]
			f26_arg0.texture:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.texture ) --[[ @ 0]]
			f26_arg0.Background:completeAnimation() --[[ @ 0]]
			f26_arg0.Background:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.Background ) --[[ @ 0]]
			f26_arg0.BackingBlack:completeAnimation() --[[ @ 0]]
			f26_arg0.BackingBlack:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.BackingBlack ) --[[ @ 0]]
			f26_arg0.tabBG:completeAnimation() --[[ @ 0]]
			f26_arg0.tabBG:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.tabBG ) --[[ @ 0]]
			f26_arg0.TabFrame:completeAnimation() --[[ @ 0]]
			f26_arg0.TabFrame:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.TabFrame ) --[[ @ 0]]
			f26_arg0.TabFramePC:completeAnimation() --[[ @ 0]]
			f26_arg0.TabFramePC:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.TabFramePC ) --[[ @ 0]]
			f26_arg0.BGSceneBlur:completeAnimation() --[[ @ 0]]
			f26_arg0.BGSceneBlur:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.BGSceneBlur ) --[[ @ 0]]
			f26_arg0.background2:completeAnimation() --[[ @ 0]]
			f26_arg0.background2:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.background2 ) --[[ @ 0]]
			f26_arg0.DotTiledBacking:completeAnimation() --[[ @ 0]]
			f26_arg0.DotTiledBacking:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.DotTiledBacking ) --[[ @ 0]]
			f26_arg0.TopBar2:completeAnimation() --[[ @ 0]]
			f26_arg0.TopBar2:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.TopBar2 ) --[[ @ 0]]
			f26_arg0.BackingGrayMediumLeft:completeAnimation() --[[ @ 0]]
			f26_arg0.BackingGrayMediumLeft:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.BackingGrayMediumLeft ) --[[ @ 0]]
			f26_arg0.Title:completeAnimation() --[[ @ 0]]
			f26_arg0.Title:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.Title ) --[[ @ 0]]
			f26_arg0.FooterContainerIngameRight:completeAnimation() --[[ @ 0]]
			f26_arg0.FooterContainerIngameRight:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.FooterContainerIngameRight ) --[[ @ 0]]
			f26_arg0.CatgeoryTab:completeAnimation() --[[ @ 0]]
			f26_arg0.CatgeoryTab:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.CatgeoryTab ) --[[ @ 0]]
			f26_arg0.quitButton:completeAnimation() --[[ @ 0]]
			f26_arg0.quitButton:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.quitButton ) --[[ @ 0]]
			f26_arg0.resetButton:completeAnimation() --[[ @ 0]]
			f26_arg0.resetButton:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.resetButton ) --[[ @ 0]]
		end
	},
	PCGamepad = {
		DefaultClip = function ( f27_arg0, f27_arg1 )
			f27_arg0:__resetProperties() --[[ @ 0]]
			f27_arg0:setupElementClipCounter( 5 ) --[[ @ 0]]
			f27_arg0.Background:completeAnimation() --[[ @ 0]]
			f27_arg0.Background:setLeftRight( 1, 1, -1050, 0 ) --[[ @ 0]]
			f27_arg0.Background:setTopBottom( 0, 0, 0, 1200 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.Background ) --[[ @ 0]]
			f27_arg0.BackingBlack:completeAnimation() --[[ @ 0]]
			f27_arg0.BackingBlack:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.BackingBlack ) --[[ @ 0]]
			f27_arg0.FooterContainerIngameRight:completeAnimation() --[[ @ 0]]
			f27_arg0.FooterContainerIngameRight:setLeftRight( 1, 1, -1000, 50 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.FooterContainerIngameRight ) --[[ @ 0]]
			f27_arg0.quitButton:completeAnimation() --[[ @ 0]]
			f27_arg0.quitButton:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.quitButton ) --[[ @ 0]]
			f27_arg0.resetButton:completeAnimation() --[[ @ 0]]
			f27_arg0.resetButton:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.resetButton ) --[[ @ 0]]
		end
	},
	PC = {
		DefaultClip = function ( f28_arg0, f28_arg1 )
			f28_arg0:__resetProperties() --[[ @ 0]]
			f28_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f28_arg0.Background:completeAnimation() --[[ @ 0]]
			f28_arg0.Background:setTopBottom( 0, 0, 0, 1200 ) --[[ @ 0]]
			f28_arg0.clipFinished( f28_arg0.Background ) --[[ @ 0]]
			f28_arg0.BackingBlack:completeAnimation() --[[ @ 0]]
			f28_arg0.BackingBlack:setAlpha( 0 ) --[[ @ 0]]
			f28_arg0.clipFinished( f28_arg0.BackingBlack ) --[[ @ 0]]
			f28_arg0.FooterContainerIngameRight:completeAnimation() --[[ @ 0]]
			f28_arg0.FooterContainerIngameRight:setAlpha( 0 ) --[[ @ 0]]
			f28_arg0.clipFinished( f28_arg0.FooterContainerIngameRight ) --[[ @ 0]]
			f28_arg0.quitButton:completeAnimation() --[[ @ 0]]
			f28_arg0.quitButton:setLeftRight( 1, 1, -305, -105 ) --[[ @ 0]]
			f28_arg0.clipFinished( f28_arg0.quitButton ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.CodCasterSettingsSideBar.__onClose = function ( f29_arg0 )
	f29_arg0.TabFrame:close() --[[ @ 0]]
	f29_arg0.TabFramePC:close() --[[ @ 0]]
	f29_arg0.Background:close() --[[ @ 0]]
	f29_arg0.BackingBlack:close() --[[ @ 0]]
	f29_arg0.tabBG:close() --[[ @ 0]]
	f29_arg0.DotTiledBacking:close() --[[ @ 0]]
	f29_arg0.BackingGrayMediumLeft:close() --[[ @ 0]]
	f29_arg0.FooterContainerIngameRight:close() --[[ @ 0]]
	f29_arg0.CatgeoryTab:close() --[[ @ 0]]
	f29_arg0.quitButton:close() --[[ @ 0]]
	f29_arg0.resetButton:close() --[[ @ 0]]
end
 --[[ @ 0]]
