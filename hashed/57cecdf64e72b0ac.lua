-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:50
require( "x64:5c91cce0f79f8559" ) --[[ @ 0]]
require( "x64:9406ef3b6d8fbed" ) --[[ @ 0]]
require( "x64:3b385c2f583048b" ) --[[ @ 0]]
require( "x64:6bad5476bc0399eb" ) --[[ @ 0]]
require( "ui/uieditor/widgets/pc/pc_smallclosebutton" ) --[[ @ 0]]

CoD.ZMLoadoutPreviewFull = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.ZMLoadoutPreviewFull.__defaultWidth = 272 --[[ @ 0]]
CoD.ZMLoadoutPreviewFull.__defaultHeight = 452 --[[ @ 0]]
CoD.ZMLoadoutPreviewFull.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	CoD.CACUtility.InitSelectedCustomClassModel( f1_arg1 ) --[[ @ 0]]
	self:setClass( CoD.ZMLoadoutPreviewFull ) --[[ @ 0]]
	self.id = "ZMLoadoutPreviewFull" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local Blur = LUI.UIImage.new( 0, 0, -4, 276, 0, 0, 12.5, 455.5 ) --[[ @ 0]]
	Blur:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_E2354BE557C4C7A" ) ) --[[ @ 0]]
	Blur:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( Blur ) --[[ @ 0]]
	self.Blur = Blur --[[ @ 0]]
	
	local Panel = LUI.UIImage.new( 0, 0, -4, 276, 0, 0, 12.5, 455.5 ) --[[ @ 0]]
	Panel:setRGB( 0, 0, 0 ) --[[ @ 0]]
	Panel:setAlpha( 0.27 ) --[[ @ 0]]
	self:addElement( Panel ) --[[ @ 0]]
	self.Panel = Panel --[[ @ 0]]
	
	local TiledBacking = LUI.UIImage.new( -0.02, -0.02, 1, 281, 0.04, 0.04, -4, 440 ) --[[ @ 0]]
	TiledBacking:setAlpha( 0.5 ) --[[ @ 0]]
	TiledBacking:setImage( RegisterImage( @"uie_ui_menu_specialist_hub_repeat_bg" ) ) --[[ @ 0]]
	TiledBacking:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_16CBE95C250C6D15" ) ) --[[ @ 0]]
	TiledBacking:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	TiledBacking:setupNineSliceShader( 196, 88 ) --[[ @ 0]]
	self:addElement( TiledBacking ) --[[ @ 0]]
	self.TiledBacking = TiledBacking --[[ @ 0]]
	
	local ZMLoadoutPreview = CoD.ZMLoadoutPreview.new( f1_arg0, f1_arg1, 0.5, 0.5, -136, 136, 0, 0, 72, 451 ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( ZMLoadoutPreview, "childFocusGained", function ( element )
		UpdateElementState( self, "SelectedClass", f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( ZMLoadoutPreview, "childFocusLost", function ( element )
		UpdateElementState( self, "SelectedClass", f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( ZMLoadoutPreview ) --[[ @ 0]]
	self.ZMLoadoutPreview = ZMLoadoutPreview --[[ @ 0]]
	
	local ZMLoadoutPreviewClassTabs = CoD.ZMLoadoutPreviewClassTabs.new( f1_arg0, f1_arg1, 0.5, 0.5, -180, 186, 0, 0, 5, 57 ) --[[ @ 0]]
	self:addElement( ZMLoadoutPreviewClassTabs ) --[[ @ 0]]
	self.ZMLoadoutPreviewClassTabs = ZMLoadoutPreviewClassTabs --[[ @ 0]]
	
	local SelectedClass = CoD.ZMLoadoutPreviewSelectClass.new( f1_arg0, f1_arg1, 0, 0, -4, 268, 0, 0, -36, 16 ) --[[ @ 0]]
	SelectedClass:mergeStateConditions( {
		{
			stateName = "Visible",
			condition = function ( menu, element, event )
				local f4_local0 --[[ @ 0]]
				if not CoD.ZMLoadoutUtility.ShouldHideLoadoutPreviewSelectButton( menu, element, f1_arg1, "selectedCustomClass", "classNum" ) then
					f4_local0 = CoD.BaseUtility.DoesElementOrChildHaveFocus( self, "ZMLoadoutPreview" ) --[[ @ 0]]
				else
					f4_local0 = false --[[ @ 0]]
				end
				return f4_local0
			end
		}
	} ) --[[ @ 0]]
	SelectedClass:appendEventHandler( "input_source_changed", function ( f5_arg0, f5_arg1 )
		f5_arg1.menu = f5_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( SelectedClass, f5_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local Metalbar = SelectedClass --[[ @ 0]]
	local ActiveClassTab = SelectedClass.subscribeToModel --[[ @ 0]]
	local Metalbar3 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	ActiveClassTab( Metalbar, Metalbar3.LastInput, function ( f6_arg0 )
		f1_arg0:updateElementState( SelectedClass, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f6_arg0:get(),
			modelName = "LastInput"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	Metalbar = SelectedClass --[[ @ 0]]
	ActiveClassTab = SelectedClass.subscribeToModel --[[ @ 0]]
	Metalbar3 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	ActiveClassTab( Metalbar, Metalbar3.selectedCustomClass, function ( f7_arg0 )
		f1_arg0:updateElementState( SelectedClass, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f7_arg0:get(),
			modelName = "selectedCustomClass"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	SelectedClass:linkToElementModel( SelectedClass, "classNum", true, function ( model )
		f1_arg0:updateElementState( SelectedClass, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "classNum"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	SelectedClass:appendEventHandler( "record_curr_focused_elem_id", function ( f9_arg0, f9_arg1 )
		f9_arg1.menu = f9_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( SelectedClass, f9_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( SelectedClass ) --[[ @ 0]]
	self.SelectedClass = SelectedClass --[[ @ 0]]
	
	ActiveClassTab = CoD.ZMLoadoutPreviewActiveClass.new( f1_arg0, f1_arg1, 0, 0, 13.5, 258.5, 0, 0, 6.5, 39.5 ) --[[ @ 0]]
	self:addElement( ActiveClassTab ) --[[ @ 0]]
	self.ActiveClassTab = ActiveClassTab --[[ @ 0]]
	
	Metalbar = LUI.UIImage.new( 0, 0, -14, 286, 0, 0, 59.5, 75.5 ) --[[ @ 0]]
	Metalbar:setImage( RegisterImage( @"uie_ui_menu_zm_metal_bar" ) ) --[[ @ 0]]
	self:addElement( Metalbar ) --[[ @ 0]]
	self.Metalbar = Metalbar --[[ @ 0]]
	
	Metalbar3 = LUI.UIImage.new( 0, 0, -14, 286, 0, 0, 3.5, 19.5 ) --[[ @ 0]]
	Metalbar3:setImage( RegisterImage( @"uie_ui_menu_zm_metal_bar" ) ) --[[ @ 0]]
	self:addElement( Metalbar3 ) --[[ @ 0]]
	self.Metalbar3 = Metalbar3 --[[ @ 0]]
	
	local Metalbar2 = LUI.UIImage.new( 0, 0, -14, 286, 0, 0, 449, 465 ) --[[ @ 0]]
	Metalbar2:setImage( RegisterImage( @"uie_ui_menu_zm_metal_bar" ) ) --[[ @ 0]]
	self:addElement( Metalbar2 ) --[[ @ 0]]
	self.Metalbar2 = Metalbar2 --[[ @ 0]]
	
	local PCSmallCloseButton = nil --[[ @ 0]]
	
	PCSmallCloseButton = CoD.PC_SmallCloseButton.new( f1_arg0, f1_arg1, 1, 1, -20, 0, 0, 0, 15, 35 ) --[[ @ 0]]
	PCSmallCloseButton:registerEventHandler( "gain_focus", function ( element, event )
		local f10_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f10_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f10_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_none"] ) --[[ @ 0]]
		return f10_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( PCSmallCloseButton, f1_arg1, Enum[@"luibutton"][@"lui_key_none"], "ui_confirm", function ( element, menu, controller, model )
		CoD.DirectorUtility.HideLoadoutPreview( controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_none"], @"hash_0", nil, "ui_confirm" ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( PCSmallCloseButton, f1_arg1, Enum[@"luibutton"][@"lui_key_none"], "MOUSE1", function ( element, menu, controller, model )
		CoD.DirectorUtility.HideLoadoutPreview( controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_none"], @"hash_0", nil, "MOUSE1" ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	self:addElement( PCSmallCloseButton ) --[[ @ 0]]
	self.PCSmallCloseButton = PCSmallCloseButton --[[ @ 0]]
	
	ZMLoadoutPreview:linkToElementModel( ZMLoadoutPreviewClassTabs.customClasssList, nil, false, function ( model )
		ZMLoadoutPreview:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	SelectedClass:linkToElementModel( ZMLoadoutPreviewClassTabs.customClasssList, nil, false, function ( model )
		SelectedClass:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	ActiveClassTab:linkToElementModel( ZMLoadoutPreviewClassTabs.customClasssList, nil, false, function ( model )
		ActiveClassTab:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:mergeStateConditions( {
		{
			stateName = "IsPC",
			condition = function ( menu, element, event )
				return IsPC()
			end
		}
	} ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( self, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"], nil, function ( element, menu, controller, model )
		if IsElementInState( self.SelectedClass, "Visible" ) then
			CoD.ZMLoadoutUtility.SetEquippedBubbleGumPackToSelectedClass( self.ActiveClassTab, controller, menu ) --[[ @ 0]]
			CoD.CACUtility.SelectCustomClass( controller, self.SelectedClass ) --[[ @ 0]]
			CoD.ZMLoadoutUtility.SaveZMLoadoutBuffer( controller ) --[[ @ 0]]
			PlaySoundAlias( "uin_list_action_generic" ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsElementInState( self.SelectedClass, "Visible" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"hash_0", nil, nil ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( self, "close", function ( element )
		PlaySoundAlias( "uin_list_close_generic" ) --[[ @ 0]]
	end ) --[[ @ 0]]
	ZMLoadoutPreview.id = "ZMLoadoutPreview" --[[ @ 0]]
	ZMLoadoutPreviewClassTabs.id = "ZMLoadoutPreviewClassTabs" --[[ @ 0]]
	if CoD.isPC then
		PCSmallCloseButton.id = "PCSmallCloseButton" --[[ @ 0]]
	end
	self.__defaultFocus = ZMLoadoutPreview --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	local f1_local12 = self --[[ @ 0]]
	if IsPC() then
		CoD.ZMLoadoutUtility.ChangeLoadoutPreviewLinkForPC( self, self.ZMLoadoutPreview, f1_arg1, self.ZMLoadoutPreviewClassTabs, "customClasssListPC" ) --[[ @ 0]]
		CoD.ZMLoadoutUtility.ChangeLoadoutPreviewLinkForPC( self, self.ActiveClassTab, f1_arg1, self.ZMLoadoutPreviewClassTabs, "customClasssListPC" ) --[[ @ 0]]
		CoD.ZMLoadoutUtility.ChangeLoadoutPreviewLinkForPC( self, self.SelectedClass, f1_arg1, self.ZMLoadoutPreviewClassTabs, "customClasssListPC" ) --[[ @ 0]]
		CoD.ZMLoadoutUtility.LoadoutPreviewOcclusionWatcherPC( f1_arg0, f1_local12, f1_arg1 ) --[[ @ 0]]
		DisableKeyboardNavigationByElement( self.ZMLoadoutPreviewClassTabs ) --[[ @ 0]]
	end
	f1_local12 = ZMLoadoutPreview --[[ @ 0]]
	CoD.BaseUtility.SetElementModelToOtherElementModel( f1_arg1, self.ZMLoadoutPreviewClassTabs, self.ZMLoadoutPreviewClassTabs ) --[[ @ 0]]
	return self
end
 --[[ @ 0]]
CoD.ZMLoadoutPreviewFull.__resetProperties = function ( f22_arg0 )
	f22_arg0.ActiveClassTab:completeAnimation() --[[ @ 0]]
	f22_arg0.ActiveClassTab:setLeftRight( 0, 0, 13.5, 258.5 ) --[[ @ 0]]
	f22_arg0.ActiveClassTab:setTopBottom( 0, 0, 6.5, 39.5 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ZMLoadoutPreviewFull.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f23_arg0, f23_arg1 )
			f23_arg0:__resetProperties() --[[ @ 0]]
			f23_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	IsPC = {
		DefaultClip = function ( f24_arg0, f24_arg1 )
			f24_arg0:__resetProperties() --[[ @ 0]]
			f24_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f24_arg0.ActiveClassTab:completeAnimation() --[[ @ 0]]
			f24_arg0.ActiveClassTab:setLeftRight( 0.5, 0.5, -122.5, 122.5 ) --[[ @ 0]]
			f24_arg0.ActiveClassTab:setTopBottom( 0, 0, 10, 43 ) --[[ @ 0]]
			f24_arg0.clipFinished( f24_arg0.ActiveClassTab ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.ZMLoadoutPreviewFull.__onClose = function ( f25_arg0 )
	f25_arg0.ZMLoadoutPreview:close() --[[ @ 0]]
	f25_arg0.SelectedClass:close() --[[ @ 0]]
	f25_arg0.ActiveClassTab:close() --[[ @ 0]]
	f25_arg0.ZMLoadoutPreviewClassTabs:close() --[[ @ 0]]
	f25_arg0.PCSmallCloseButton:close() --[[ @ 0]]
end
 --[[ @ 0]]
