-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
CoD.WZCompassCardinal = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.WZCompassCardinal.__defaultWidth = 62 --[[ @ 0]]
CoD.WZCompassCardinal.__defaultHeight = 37 --[[ @ 0]]
CoD.WZCompassCardinal.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.WZCompassCardinal ) --[[ @ 0]]
	self.id = "WZCompassCardinal" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local Text = LUI.UIText.new( 0.5, 0.5, -31, 31, 0, 0, -11, 26 ) --[[ @ 0]]
	Text:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	Text:setTTF( "0arame_mono_stencil" ) --[[ @ 0]]
	Text:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_90D57B1E92D39D7" ) ) --[[ @ 0]]
	Text:setShaderVector( 0, 0.8, 0, 0, 0 ) --[[ @ 0]]
	Text:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	Text:setShaderVector( 2, 1, 1, 1, 0.35 ) --[[ @ 0]]
	Text:setRFTMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	Text:setAlignment( Enum[@"LUIAlignment"][@"hash_1FEEB12BCB0D7041"] ) --[[ @ 0]]
	Text:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	Text:linkToElementModel( self, "alpha", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			Text:setAlpha( f2_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	Text:linkToElementModel( self, "text", true, function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			Text:setText( f3_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Text ) --[[ @ 0]]
	self.Text = Text --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "North",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualTo( element, f1_arg1, "degrees", 0 )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "degrees", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "degrees"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.WZCompassCardinal.__resetProperties = function ( f6_arg0 )
	f6_arg0.Text:completeAnimation() --[[ @ 0]]
	f6_arg0.Text:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	f6_arg0.Text:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_90D57B1E92D39D7" ) ) --[[ @ 0]]
	f6_arg0.Text:setShaderVector( 0, 0.8, 0, 0, 0 ) --[[ @ 0]]
	f6_arg0.Text:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	f6_arg0.Text:setShaderVector( 2, 1, 1, 1, 0.35 ) --[[ @ 0]]
	f6_arg0.Text:setRFTMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	f6_arg0.Text:setBackingMaterial( LUI.UIImage.GetCachedMaterial( @"ui_normal" ) ) --[[ @ 0]]
	f6_arg0.Text:setBackingMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_normal" ) ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.WZCompassCardinal.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f7_arg0, f7_arg1 )
			f7_arg0:__resetProperties() --[[ @ 0]]
			f7_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	North = {
		DefaultClip = function ( f8_arg0, f8_arg1 )
			f8_arg0:__resetProperties() --[[ @ 0]]
			f8_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f8_arg0.Text:completeAnimation() --[[ @ 0]]
			f8_arg0.Text:setRGB( 1, 0.78, 0 ) --[[ @ 0]]
			f8_arg0.Text:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_90D57B1E92D39D7" ) ) --[[ @ 0]]
			f8_arg0.Text:setShaderVector( 0, 0.8, 0, 0, 0 ) --[[ @ 0]]
			f8_arg0.Text:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
			f8_arg0.Text:setShaderVector( 2, 1, 0.2, 0, 0.35 ) --[[ @ 0]]
			f8_arg0.Text:setRFTMaterial( LUI.UIImage.GetCachedMaterial( @"ui_normal" ) ) --[[ @ 0]]
			f8_arg0.Text:setBackingMaterial( LUI.UIImage.GetCachedMaterial( @"ui_normal" ) ) --[[ @ 0]]
			f8_arg0.Text:setBackingMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_normal" ) ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.Text ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.WZCompassCardinal.__onClose = function ( f9_arg0 )
	f9_arg0.Text:close() --[[ @ 0]]
end
 --[[ @ 0]]
