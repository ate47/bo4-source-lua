-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:48
require( "ui/uieditor/widgets/border" ) --[[ @ 0]]
require( "ui/uieditor/widgets/hud/uplink/uplink_iconandtextarmorbg" ) --[[ @ 0]]
require( "x64:480816b11e0416bd" ) --[[ @ 0]]

CoD.uplinkBallReticle = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.uplinkBallReticle.__defaultWidth = 1920 --[[ @ 0]]
CoD.uplinkBallReticle.__defaultHeight = 1080 --[[ @ 0]]
CoD.uplinkBallReticle.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	CoD.HUDUtility.SetUpReticle( self, f1_arg1 ) --[[ @ 0]]
	CoD.HUDUtility.UplinkBallReticlePreLoad( f1_arg1 ) --[[ @ 0]]
	self:setClass( CoD.uplinkBallReticle ) --[[ @ 0]]
	self.id = "uplinkBallReticle" --[[ @ 0]]
	self.soundSet = "CAC_PrimaryWeapon" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local BlackFrame = LUI.UIImage.new( 0.5, 0.5, -205, 219, 0.5, 0.5, 262, 288 ) --[[ @ 0]]
	BlackFrame:setRGB( 0, 0, 0 ) --[[ @ 0]]
	BlackFrame:setAlpha( 0.3 ) --[[ @ 0]]
	self:addElement( BlackFrame ) --[[ @ 0]]
	self.BlackFrame = BlackFrame --[[ @ 0]]
	
	local BallArmorWidget = CoD.uplink_IconandTextArmorbg.new( f1_arg0, f1_arg1, 0.5, 0.5, -24, 38, 0.5, 0.5, 288, 318 ) --[[ @ 0]]
	self:addElement( BallArmorWidget ) --[[ @ 0]]
	self.BallArmorWidget = BallArmorWidget --[[ @ 0]]
	
	local armorBorder = CoD.Border.new( f1_arg0, f1_arg1, 0.5, 0.5, -136, 135, 0.5, 0.5, 273, 278 ) --[[ @ 0]]
	armorBorder:setAlpha( 0.4 ) --[[ @ 0]]
	self:addElement( armorBorder ) --[[ @ 0]]
	self.armorBorder = armorBorder --[[ @ 0]]
	
	local armorFill = LUI.UIImage.new( 0.5, 0.5, -135, 133, 0.5, 0.5, 274, 276 ) --[[ @ 0]]
	armorFill:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_wipe" ) ) --[[ @ 0]]
	armorFill:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	armorFill:setShaderVector( 2, 1, 0, 0, 0 ) --[[ @ 0]]
	armorFill:setShaderVector( 3, 0, 0, 0, 0 ) --[[ @ 0]]
	armorFill:setShaderVector( 4, 0, 0, 0, 0 ) --[[ @ 0]]
	armorFill:subscribeToGlobalModel( f1_arg1, "HUDItems", "armorPercent", function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			armorFill:setShaderVector( 0, CoD.GetVectorComponentFromString( f2_local0, 1 ), CoD.GetVectorComponentFromString( f2_local0, 2 ), CoD.GetVectorComponentFromString( f2_local0, 3 ), CoD.GetVectorComponentFromString( f2_local0, 4 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( armorFill ) --[[ @ 0]]
	self.armorFill = armorFill --[[ @ 0]]
	
	local passIcon = LUI.UIImage.new( 0.5, 0.5, -305, -254, 0.5, 0.5, 252, 303 ) --[[ @ 0]]
	passIcon:subscribeToGlobalModel( f1_arg1, "ReticleBindings", "speed_throw", function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			passIcon:setImage( RegisterImage( f3_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( passIcon ) --[[ @ 0]]
	self.passIcon = passIcon --[[ @ 0]]
	
	local throwIcon = LUI.UIImage.new( 0.5, 0.5, 253, 304, 0.5, 0.5, 252, 303 ) --[[ @ 0]]
	throwIcon:subscribeToGlobalModel( f1_arg1, "ReticleBindings", "attack", function ( model )
		local f4_local0 = model:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			throwIcon:setImage( RegisterImage( f4_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( throwIcon ) --[[ @ 0]]
	self.throwIcon = throwIcon --[[ @ 0]]
	
	local uplinkReticle = CoD.uplinkReticle.new( f1_arg0, f1_arg1, 0.5, 0.5, -98, 98, 0.5, 0.5, -98, 98 ) --[[ @ 0]]
	self:addElement( uplinkReticle ) --[[ @ 0]]
	self.uplinkReticle = uplinkReticle --[[ @ 0]]
	
	local Trow = LUI.UIText.new( 0, 0, 1107, 1212, 0, 0, 800, 830 ) --[[ @ 0]]
	Trow:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_5B416BCD1752EC4D" ) ) --[[ @ 0]]
	Trow:setTTF( "default" ) --[[ @ 0]]
	Trow:setAlignment( Enum[@"luialignment"][@"lui_alignment_right"] ) --[[ @ 0]]
	Trow:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	self:addElement( Trow ) --[[ @ 0]]
	self.Trow = Trow --[[ @ 0]]
	
	local Pass = LUI.UIText.new( 0, 0, 711, 815, 0, 0, 799, 829 ) --[[ @ 0]]
	Pass:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_5E42DC5C81202D0E" ) ) --[[ @ 0]]
	Pass:setTTF( "default" ) --[[ @ 0]]
	Pass:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	Pass:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	self:addElement( Pass ) --[[ @ 0]]
	self.Pass = Pass --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				local f5_local0 --[[ @ 0]]
				if Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_draw_reticle"] ) then
					f5_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_game_ended"] ) --[[ @ 0]]
					if not f5_local0 then
						f5_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_hud_hardcore"] ) --[[ @ 0]]
						if not f5_local0 then
							if Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_hud_visible"] ) then
								f5_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_scoreboard_open"] ) --[[ @ 0]]
								if not f5_local0 then
									f5_local0 = not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_weapon_hud_visible"] ) --[[ @ 0]]
								end
							else
								f5_local0 = true --[[ @ 0]]
							end
						end
					end
				else
					f5_local0 = true --[[ @ 0]]
				end
				return f5_local0
			end
		},
		{
			stateName = "HiddenOffhand",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalDataSourceModelValueTrue( f1_arg1, "CurrentWeapon", "usingOffhand" )
			end
		},
		{
			stateName = "KeyMouse",
			condition = function ( menu, element, event )
				local f7_local0 --[[ @ 0]]
				if not IsGamepad( f1_arg1 ) then
					f7_local0 = IsPC() --[[ @ 0]]
				else
					f7_local0 = false --[[ @ 0]]
				end
				return f7_local0
			end
		}
	} ) --[[ @ 0]]
	local f1_local10 = self --[[ @ 0]]
	local f1_local11 = self.subscribeToModel --[[ @ 0]]
	local f1_local12 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local11( f1_local10, f1_local12["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_draw_reticle"]], function ( f8_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f8_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_draw_reticle"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local10 = self --[[ @ 0]]
	f1_local11 = self.subscribeToModel --[[ @ 0]]
	f1_local12 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local11( f1_local10, f1_local12["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_game_ended"]], function ( f9_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f9_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_game_ended"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local10 = self --[[ @ 0]]
	f1_local11 = self.subscribeToModel --[[ @ 0]]
	f1_local12 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local11( f1_local10, f1_local12["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_hud_hardcore"]], function ( f10_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f10_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_hud_hardcore"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local10 = self --[[ @ 0]]
	f1_local11 = self.subscribeToModel --[[ @ 0]]
	f1_local12 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local11( f1_local10, f1_local12["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_hud_visible"]], function ( f11_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f11_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_hud_visible"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local10 = self --[[ @ 0]]
	f1_local11 = self.subscribeToModel --[[ @ 0]]
	f1_local12 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local11( f1_local10, f1_local12["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_scoreboard_open"]], function ( f12_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f12_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_scoreboard_open"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local10 = self --[[ @ 0]]
	f1_local11 = self.subscribeToModel --[[ @ 0]]
	f1_local12 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local11( f1_local10, f1_local12["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_weapon_hud_visible"]], function ( f13_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f13_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_weapon_hud_visible"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local10 = self --[[ @ 0]]
	f1_local11 = self.subscribeToModel --[[ @ 0]]
	f1_local12 = DataSources.CurrentWeapon.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local11( f1_local10, f1_local12.usingOffhand, function ( f14_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f14_arg0:get(),
			modelName = "usingOffhand"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:appendEventHandler( "input_source_changed", function ( f15_arg0, f15_arg1 )
		f15_arg1.menu = f15_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( self, f15_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	f1_local10 = self --[[ @ 0]]
	f1_local11 = self.subscribeToModel --[[ @ 0]]
	f1_local12 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local11( f1_local10, f1_local12.LastInput, function ( f16_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f16_arg0:get(),
			modelName = "LastInput"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.uplinkBallReticle.__resetProperties = function ( f17_arg0 )
	f17_arg0.passIcon:completeAnimation() --[[ @ 0]]
	f17_arg0.throwIcon:completeAnimation() --[[ @ 0]]
	f17_arg0.Trow:completeAnimation() --[[ @ 0]]
	f17_arg0.Pass:completeAnimation() --[[ @ 0]]
	f17_arg0.BlackFrame:completeAnimation() --[[ @ 0]]
	f17_arg0.uplinkReticle:completeAnimation() --[[ @ 0]]
	f17_arg0.armorBorder:completeAnimation() --[[ @ 0]]
	f17_arg0.armorFill:completeAnimation() --[[ @ 0]]
	f17_arg0.BallArmorWidget:completeAnimation() --[[ @ 0]]
	f17_arg0.passIcon:setLeftRight( 0.5, 0.5, -305, -254 ) --[[ @ 0]]
	f17_arg0.passIcon:setTopBottom( 0.5, 0.5, 252, 303 ) --[[ @ 0]]
	f17_arg0.passIcon:setAlpha( 1 ) --[[ @ 0]]
	f17_arg0.throwIcon:setLeftRight( 0.5, 0.5, 253, 304 ) --[[ @ 0]]
	f17_arg0.throwIcon:setTopBottom( 0.5, 0.5, 252, 303 ) --[[ @ 0]]
	f17_arg0.throwIcon:setAlpha( 1 ) --[[ @ 0]]
	f17_arg0.Trow:setLeftRight( 0, 0, 1107, 1212 ) --[[ @ 0]]
	f17_arg0.Trow:setTopBottom( 0, 0, 800, 830 ) --[[ @ 0]]
	f17_arg0.Trow:setAlpha( 1 ) --[[ @ 0]]
	f17_arg0.Pass:setLeftRight( 0, 0, 711, 815 ) --[[ @ 0]]
	f17_arg0.Pass:setTopBottom( 0, 0, 799, 829 ) --[[ @ 0]]
	f17_arg0.Pass:setAlpha( 1 ) --[[ @ 0]]
	f17_arg0.BlackFrame:setLeftRight( 0.5, 0.5, -205, 219 ) --[[ @ 0]]
	f17_arg0.BlackFrame:setTopBottom( 0.5, 0.5, 262, 288 ) --[[ @ 0]]
	f17_arg0.BlackFrame:setAlpha( 0.3 ) --[[ @ 0]]
	f17_arg0.uplinkReticle:setAlpha( 1 ) --[[ @ 0]]
	f17_arg0.armorBorder:setAlpha( 0.4 ) --[[ @ 0]]
	f17_arg0.armorFill:setAlpha( 1 ) --[[ @ 0]]
	f17_arg0.BallArmorWidget:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.uplinkBallReticle.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f18_arg0, f18_arg1 )
			f18_arg0:__resetProperties() --[[ @ 0]]
			f18_arg0:setupElementClipCounter( 5 ) --[[ @ 0]]
			local f18_local0 = function ( f19_arg0 )
				local f19_local0 = function ( f20_arg0 )
					f20_arg0:beginAnimation( 399 ) --[[ @ 0]]
					f20_arg0:setLeftRight( 0.5, 0.5, -171.5, 171.5 ) --[[ @ 0]]
					f20_arg0:registerEventHandler( "transition_complete_keyframe", f18_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f18_arg0.BlackFrame:beginAnimation( 1100 ) --[[ @ 0]]
				f18_arg0.BlackFrame:registerEventHandler( "interrupted_keyframe", f18_arg0.clipInterrupted ) --[[ @ 0]]
				f18_arg0.BlackFrame:registerEventHandler( "transition_complete_keyframe", f19_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f18_arg0.BlackFrame:completeAnimation() --[[ @ 0]]
			f18_arg0.BlackFrame:setLeftRight( 0.5, 0.5, -243.5, 247.5 ) --[[ @ 0]]
			f18_arg0.BlackFrame:setTopBottom( 0.5, 0.5, 262.5, 287.5 ) --[[ @ 0]]
			f18_arg0.BlackFrame:setAlpha( 0.3 ) --[[ @ 0]]
			f18_local0( f18_arg0.BlackFrame ) --[[ @ 0]]
			local f18_local1 = function ( f21_arg0 )
				local f21_local0 = function ( f22_arg0 )
					f22_arg0:beginAnimation( 399 ) --[[ @ 0]]
					f22_arg0:setAlpha( 0 ) --[[ @ 0]]
					f22_arg0:registerEventHandler( "transition_complete_keyframe", f18_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f18_arg0.passIcon:beginAnimation( 1100 ) --[[ @ 0]]
				f18_arg0.passIcon:registerEventHandler( "interrupted_keyframe", f18_arg0.clipInterrupted ) --[[ @ 0]]
				f18_arg0.passIcon:registerEventHandler( "transition_complete_keyframe", f21_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f18_arg0.passIcon:completeAnimation() --[[ @ 0]]
			f18_arg0.passIcon:setLeftRight( 0.5, 0.5, -288, -237 ) --[[ @ 0]]
			f18_arg0.passIcon:setTopBottom( 0.5, 0.5, 252, 303 ) --[[ @ 0]]
			f18_arg0.passIcon:setAlpha( 1 ) --[[ @ 0]]
			f18_local1( f18_arg0.passIcon ) --[[ @ 0]]
			local f18_local2 = function ( f23_arg0 )
				local f23_local0 = function ( f24_arg0 )
					f24_arg0:beginAnimation( 399 ) --[[ @ 0]]
					f24_arg0:setAlpha( 0 ) --[[ @ 0]]
					f24_arg0:registerEventHandler( "transition_complete_keyframe", f18_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f18_arg0.throwIcon:beginAnimation( 1100 ) --[[ @ 0]]
				f18_arg0.throwIcon:registerEventHandler( "interrupted_keyframe", f18_arg0.clipInterrupted ) --[[ @ 0]]
				f18_arg0.throwIcon:registerEventHandler( "transition_complete_keyframe", f23_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f18_arg0.throwIcon:completeAnimation() --[[ @ 0]]
			f18_arg0.throwIcon:setLeftRight( 0.5, 0.5, 241, 292 ) --[[ @ 0]]
			f18_arg0.throwIcon:setTopBottom( 0.5, 0.5, 252, 303 ) --[[ @ 0]]
			f18_arg0.throwIcon:setAlpha( 1 ) --[[ @ 0]]
			f18_local2( f18_arg0.throwIcon ) --[[ @ 0]]
			local f18_local3 = function ( f25_arg0 )
				local f25_local0 = function ( f26_arg0 )
					f26_arg0:beginAnimation( 179 ) --[[ @ 0]]
					f26_arg0:setAlpha( 0 ) --[[ @ 0]]
					f26_arg0:registerEventHandler( "transition_complete_keyframe", f18_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f18_arg0.Trow:beginAnimation( 1100 ) --[[ @ 0]]
				f18_arg0.Trow:registerEventHandler( "interrupted_keyframe", f18_arg0.clipInterrupted ) --[[ @ 0]]
				f18_arg0.Trow:registerEventHandler( "transition_complete_keyframe", f25_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f18_arg0.Trow:completeAnimation() --[[ @ 0]]
			f18_arg0.Trow:setLeftRight( 0, 0, 1090, 1195 ) --[[ @ 0]]
			f18_arg0.Trow:setTopBottom( 0, 0, 800, 830 ) --[[ @ 0]]
			f18_arg0.Trow:setAlpha( 1 ) --[[ @ 0]]
			f18_local3( f18_arg0.Trow ) --[[ @ 0]]
			local f18_local4 = function ( f27_arg0 )
				local f27_local0 = function ( f28_arg0 )
					f28_arg0:beginAnimation( 179 ) --[[ @ 0]]
					f28_arg0:setAlpha( 0 ) --[[ @ 0]]
					f28_arg0:registerEventHandler( "transition_complete_keyframe", f18_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f18_arg0.Pass:beginAnimation( 1100 ) --[[ @ 0]]
				f18_arg0.Pass:registerEventHandler( "interrupted_keyframe", f18_arg0.clipInterrupted ) --[[ @ 0]]
				f18_arg0.Pass:registerEventHandler( "transition_complete_keyframe", f27_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f18_arg0.Pass:completeAnimation() --[[ @ 0]]
			f18_arg0.Pass:setLeftRight( 0, 0, 729, 833 ) --[[ @ 0]]
			f18_arg0.Pass:setTopBottom( 0, 0, 799, 829 ) --[[ @ 0]]
			f18_arg0.Pass:setAlpha( 1 ) --[[ @ 0]]
			f18_local4( f18_arg0.Pass ) --[[ @ 0]]
		end
	},
	Hidden = {
		DefaultClip = function ( f29_arg0, f29_arg1 )
			f29_arg0:__resetProperties() --[[ @ 0]]
			f29_arg0:setupElementClipCounter( 9 ) --[[ @ 0]]
			f29_arg0.BlackFrame:completeAnimation() --[[ @ 0]]
			f29_arg0.BlackFrame:setAlpha( 0 ) --[[ @ 0]]
			f29_arg0.clipFinished( f29_arg0.BlackFrame ) --[[ @ 0]]
			f29_arg0.BallArmorWidget:completeAnimation() --[[ @ 0]]
			f29_arg0.BallArmorWidget:setAlpha( 0 ) --[[ @ 0]]
			f29_arg0.clipFinished( f29_arg0.BallArmorWidget ) --[[ @ 0]]
			f29_arg0.armorBorder:completeAnimation() --[[ @ 0]]
			f29_arg0.armorBorder:setAlpha( 0 ) --[[ @ 0]]
			f29_arg0.clipFinished( f29_arg0.armorBorder ) --[[ @ 0]]
			f29_arg0.armorFill:completeAnimation() --[[ @ 0]]
			f29_arg0.armorFill:setAlpha( 0 ) --[[ @ 0]]
			f29_arg0.clipFinished( f29_arg0.armorFill ) --[[ @ 0]]
			f29_arg0.passIcon:completeAnimation() --[[ @ 0]]
			f29_arg0.passIcon:setAlpha( 0 ) --[[ @ 0]]
			f29_arg0.clipFinished( f29_arg0.passIcon ) --[[ @ 0]]
			f29_arg0.throwIcon:completeAnimation() --[[ @ 0]]
			f29_arg0.throwIcon:setAlpha( 0 ) --[[ @ 0]]
			f29_arg0.clipFinished( f29_arg0.throwIcon ) --[[ @ 0]]
			f29_arg0.uplinkReticle:completeAnimation() --[[ @ 0]]
			f29_arg0.uplinkReticle:setAlpha( 0 ) --[[ @ 0]]
			f29_arg0.clipFinished( f29_arg0.uplinkReticle ) --[[ @ 0]]
			f29_arg0.Trow:completeAnimation() --[[ @ 0]]
			f29_arg0.Trow:setAlpha( 0 ) --[[ @ 0]]
			f29_arg0.clipFinished( f29_arg0.Trow ) --[[ @ 0]]
			f29_arg0.Pass:completeAnimation() --[[ @ 0]]
			f29_arg0.Pass:setAlpha( 0 ) --[[ @ 0]]
			f29_arg0.clipFinished( f29_arg0.Pass ) --[[ @ 0]]
		end
	},
	HiddenOffhand = {
		DefaultClip = function ( f30_arg0, f30_arg1 )
			f30_arg0:__resetProperties() --[[ @ 0]]
			f30_arg0:setupElementClipCounter( 8 ) --[[ @ 0]]
			f30_arg0.BlackFrame:completeAnimation() --[[ @ 0]]
			f30_arg0.BlackFrame:setAlpha( 0 ) --[[ @ 0]]
			f30_arg0.clipFinished( f30_arg0.BlackFrame ) --[[ @ 0]]
			f30_arg0.armorBorder:completeAnimation() --[[ @ 0]]
			f30_arg0.armorBorder:setAlpha( 0 ) --[[ @ 0]]
			f30_arg0.clipFinished( f30_arg0.armorBorder ) --[[ @ 0]]
			f30_arg0.armorFill:completeAnimation() --[[ @ 0]]
			f30_arg0.armorFill:setAlpha( 0 ) --[[ @ 0]]
			f30_arg0.clipFinished( f30_arg0.armorFill ) --[[ @ 0]]
			f30_arg0.passIcon:completeAnimation() --[[ @ 0]]
			f30_arg0.passIcon:setAlpha( 0 ) --[[ @ 0]]
			f30_arg0.clipFinished( f30_arg0.passIcon ) --[[ @ 0]]
			f30_arg0.throwIcon:completeAnimation() --[[ @ 0]]
			f30_arg0.throwIcon:setAlpha( 0 ) --[[ @ 0]]
			f30_arg0.clipFinished( f30_arg0.throwIcon ) --[[ @ 0]]
			f30_arg0.uplinkReticle:completeAnimation() --[[ @ 0]]
			f30_arg0.uplinkReticle:setAlpha( 0 ) --[[ @ 0]]
			f30_arg0.clipFinished( f30_arg0.uplinkReticle ) --[[ @ 0]]
			f30_arg0.Trow:completeAnimation() --[[ @ 0]]
			f30_arg0.Trow:setAlpha( 0 ) --[[ @ 0]]
			f30_arg0.clipFinished( f30_arg0.Trow ) --[[ @ 0]]
			f30_arg0.Pass:completeAnimation() --[[ @ 0]]
			f30_arg0.Pass:setAlpha( 0 ) --[[ @ 0]]
			f30_arg0.clipFinished( f30_arg0.Pass ) --[[ @ 0]]
		end
	},
	KeyMouse = {
		DefaultClip = function ( f31_arg0, f31_arg1 )
			f31_arg0:__resetProperties() --[[ @ 0]]
			f31_arg0:setupElementClipCounter( 5 ) --[[ @ 0]]
			local f31_local0 = function ( f32_arg0 )
				local f32_local0 = function ( f33_arg0 )
					f33_arg0:beginAnimation( 399 ) --[[ @ 0]]
					f33_arg0:setLeftRight( 0.5, 0.5, -180, 180 ) --[[ @ 0]]
					f33_arg0:registerEventHandler( "transition_complete_keyframe", f31_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f31_arg0.BlackFrame:beginAnimation( 1600 ) --[[ @ 0]]
				f31_arg0.BlackFrame:registerEventHandler( "interrupted_keyframe", f31_arg0.clipInterrupted ) --[[ @ 0]]
				f31_arg0.BlackFrame:registerEventHandler( "transition_complete_keyframe", f32_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f31_arg0.BlackFrame:completeAnimation() --[[ @ 0]]
			f31_arg0.BlackFrame:setLeftRight( 0.5, 0.5, -270, 270 ) --[[ @ 0]]
			f31_arg0.BlackFrame:setTopBottom( 0.5, 0.5, 262.5, 287.5 ) --[[ @ 0]]
			f31_local0( f31_arg0.BlackFrame ) --[[ @ 0]]
			f31_arg0.passIcon:completeAnimation() --[[ @ 0]]
			f31_arg0.passIcon:setAlpha( 0 ) --[[ @ 0]]
			f31_arg0.clipFinished( f31_arg0.passIcon ) --[[ @ 0]]
			f31_arg0.throwIcon:completeAnimation() --[[ @ 0]]
			f31_arg0.throwIcon:setAlpha( 0 ) --[[ @ 0]]
			f31_arg0.clipFinished( f31_arg0.throwIcon ) --[[ @ 0]]
			f31_arg0.Trow:completeAnimation() --[[ @ 0]]
			f31_arg0.Trow:setAlpha( 0 ) --[[ @ 0]]
			f31_arg0.clipFinished( f31_arg0.Trow ) --[[ @ 0]]
			f31_arg0.Pass:completeAnimation() --[[ @ 0]]
			f31_arg0.Pass:setAlpha( 0 ) --[[ @ 0]]
			f31_arg0.clipFinished( f31_arg0.Pass ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.uplinkBallReticle.__onClose = function ( f34_arg0 )
	f34_arg0.BallArmorWidget:close() --[[ @ 0]]
	f34_arg0.armorBorder:close() --[[ @ 0]]
	f34_arg0.armorFill:close() --[[ @ 0]]
	f34_arg0.passIcon:close() --[[ @ 0]]
	f34_arg0.throwIcon:close() --[[ @ 0]]
	f34_arg0.uplinkReticle:close() --[[ @ 0]]
end
 --[[ @ 0]]
