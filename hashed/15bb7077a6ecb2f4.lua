-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:32
CoD.Hud_ZM_Trial_Completed = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.Hud_ZM_Trial_Completed.__defaultWidth = 1920 --[[ @ 0]]
CoD.Hud_ZM_Trial_Completed.__defaultHeight = 300 --[[ @ 0]]
CoD.Hud_ZM_Trial_Completed.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.Hud_ZM_Trial_Completed ) --[[ @ 0]]
	self.id = "Hud_ZM_Trial_Completed" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local TrialCompletedText = LUI.UIText.new( 0, 0, 0, 1920, 0, 0, 47, 137 ) --[[ @ 0]]
	TrialCompletedText:setRGB( ColorSet.GroupName.r, ColorSet.GroupName.g, ColorSet.GroupName.b ) --[[ @ 0]]
	TrialCompletedText:setText( LocalizeToUpperString( @"hash_5400A284ADF5EAC0" ) ) --[[ @ 0]]
	TrialCompletedText:setTTF( "skorzhen" ) --[[ @ 0]]
	TrialCompletedText:setAlignment( Enum[@"LUIAlignment"][@"hash_1FEEB12BCB0D7041"] ) --[[ @ 0]]
	TrialCompletedText:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	self:addElement( TrialCompletedText ) --[[ @ 0]]
	self.TrialCompletedText = TrialCompletedText --[[ @ 0]]
	
	local DescriptionDivider = LUI.UIImage.new( 0, 0, 672, 1248, 0, 0, 135, 137 ) --[[ @ 0]]
	DescriptionDivider:setRGB( ColorSet.GroupName.r, ColorSet.GroupName.g, ColorSet.GroupName.b ) --[[ @ 0]]
	self:addElement( DescriptionDivider ) --[[ @ 0]]
	self.DescriptionDivider = DescriptionDivider --[[ @ 0]]
	
	local CornerL = LUI.UIImage.new( 0, 0, 664.5, 679.5, 0, 0, 128.5, 143.5 ) --[[ @ 0]]
	CornerL:setImage( RegisterImage( @"hash_61EC82771A88A0E6" ) ) --[[ @ 0]]
	self:addElement( CornerL ) --[[ @ 0]]
	self.CornerL = CornerL --[[ @ 0]]
	
	local CornerR = LUI.UIImage.new( 0, 0, 1246, 1261, 0, 0, 128.5, 143.5 ) --[[ @ 0]]
	CornerR:setImage( RegisterImage( @"hash_61EC82771A88A0E6" ) ) --[[ @ 0]]
	self:addElement( CornerR ) --[[ @ 0]]
	self.CornerR = CornerR --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Show",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalModelValueEqualTo( "ZMHudGlobal.trials.gameState", 2 ) and not CoD.ModelUtility.IsGlobalModelValueEqualTo( "ZMHudGlobal.trials.showScoreboard", 1 )
			end
		}
	} ) --[[ @ 0]]
	local f1_local5 = self --[[ @ 0]]
	local f1_local6 = self.subscribeToModel --[[ @ 0]]
	local f1_local7 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local6( f1_local5, f1_local7["ZMHudGlobal.trials.gameState"], function ( f3_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f3_arg0:get(),
			modelName = "ZMHudGlobal.trials.gameState"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local5 = self --[[ @ 0]]
	f1_local6 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local6( f1_local5, f1_local7["ZMHudGlobal.trials.showScoreboard"], function ( f4_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f4_arg0:get(),
			modelName = "ZMHudGlobal.trials.showScoreboard"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.Hud_ZM_Trial_Completed.__resetProperties = function ( f5_arg0 )
	f5_arg0.DescriptionDivider:completeAnimation() --[[ @ 0]]
	f5_arg0.TrialCompletedText:completeAnimation() --[[ @ 0]]
	f5_arg0.CornerL:completeAnimation() --[[ @ 0]]
	f5_arg0.CornerR:completeAnimation() --[[ @ 0]]
	f5_arg0.DescriptionDivider:setAlpha( 1 ) --[[ @ 0]]
	f5_arg0.TrialCompletedText:setAlpha( 1 ) --[[ @ 0]]
	f5_arg0.CornerL:setAlpha( 1 ) --[[ @ 0]]
	f5_arg0.CornerR:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.Hud_ZM_Trial_Completed.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f6_arg0, f6_arg1 )
			f6_arg0:__resetProperties() --[[ @ 0]]
			f6_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f6_arg0.TrialCompletedText:completeAnimation() --[[ @ 0]]
			f6_arg0.TrialCompletedText:setAlpha( 0 ) --[[ @ 0]]
			f6_arg0.clipFinished( f6_arg0.TrialCompletedText ) --[[ @ 0]]
			f6_arg0.DescriptionDivider:completeAnimation() --[[ @ 0]]
			f6_arg0.DescriptionDivider:setAlpha( 0 ) --[[ @ 0]]
			f6_arg0.clipFinished( f6_arg0.DescriptionDivider ) --[[ @ 0]]
			f6_arg0.CornerL:completeAnimation() --[[ @ 0]]
			f6_arg0.CornerL:setAlpha( 0 ) --[[ @ 0]]
			f6_arg0.clipFinished( f6_arg0.CornerL ) --[[ @ 0]]
			f6_arg0.CornerR:completeAnimation() --[[ @ 0]]
			f6_arg0.CornerR:setAlpha( 0 ) --[[ @ 0]]
			f6_arg0.clipFinished( f6_arg0.CornerR ) --[[ @ 0]]
		end
	},
	Show = {
		DefaultClip = function ( f7_arg0, f7_arg1 )
			f7_arg0:__resetProperties() --[[ @ 0]]
			f7_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			local f7_local0 = function ( f8_arg0 )
				f7_arg0.TrialCompletedText:beginAnimation( 200 ) --[[ @ 0]]
				f7_arg0.TrialCompletedText:setAlpha( 1 ) --[[ @ 0]]
				f7_arg0.TrialCompletedText:registerEventHandler( "interrupted_keyframe", f7_arg0.clipInterrupted ) --[[ @ 0]]
				f7_arg0.TrialCompletedText:registerEventHandler( "transition_complete_keyframe", f7_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f7_arg0.TrialCompletedText:completeAnimation() --[[ @ 0]]
			f7_arg0.TrialCompletedText:setAlpha( 0 ) --[[ @ 0]]
			f7_local0( f7_arg0.TrialCompletedText ) --[[ @ 0]]
			local f7_local1 = function ( f9_arg0 )
				f7_arg0.DescriptionDivider:beginAnimation( 200 ) --[[ @ 0]]
				f7_arg0.DescriptionDivider:setAlpha( 1 ) --[[ @ 0]]
				f7_arg0.DescriptionDivider:registerEventHandler( "interrupted_keyframe", f7_arg0.clipInterrupted ) --[[ @ 0]]
				f7_arg0.DescriptionDivider:registerEventHandler( "transition_complete_keyframe", f7_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f7_arg0.DescriptionDivider:completeAnimation() --[[ @ 0]]
			f7_arg0.DescriptionDivider:setAlpha( 0 ) --[[ @ 0]]
			f7_local1( f7_arg0.DescriptionDivider ) --[[ @ 0]]
			local f7_local2 = function ( f10_arg0 )
				f7_arg0.CornerL:beginAnimation( 200 ) --[[ @ 0]]
				f7_arg0.CornerL:setAlpha( 1 ) --[[ @ 0]]
				f7_arg0.CornerL:registerEventHandler( "interrupted_keyframe", f7_arg0.clipInterrupted ) --[[ @ 0]]
				f7_arg0.CornerL:registerEventHandler( "transition_complete_keyframe", f7_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f7_arg0.CornerL:completeAnimation() --[[ @ 0]]
			f7_arg0.CornerL:setAlpha( 0 ) --[[ @ 0]]
			f7_local2( f7_arg0.CornerL ) --[[ @ 0]]
			local f7_local3 = function ( f11_arg0 )
				f7_arg0.CornerR:beginAnimation( 200 ) --[[ @ 0]]
				f7_arg0.CornerR:setAlpha( 1 ) --[[ @ 0]]
				f7_arg0.CornerR:registerEventHandler( "interrupted_keyframe", f7_arg0.clipInterrupted ) --[[ @ 0]]
				f7_arg0.CornerR:registerEventHandler( "transition_complete_keyframe", f7_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f7_arg0.CornerR:completeAnimation() --[[ @ 0]]
			f7_arg0.CornerR:setAlpha( 0 ) --[[ @ 0]]
			f7_local3( f7_arg0.CornerR ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
