-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:50
require( "x64:5bceefc58a6d5969" ) --[[ @ 0]]
require( "x64:1c61bd4bc39f552b" ) --[[ @ 0]]

CoD.ArenaEventProgressButtonDailyBonus = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.ArenaEventProgressButtonDailyBonus.__defaultWidth = 144 --[[ @ 0]]
CoD.ArenaEventProgressButtonDailyBonus.__defaultHeight = 70 --[[ @ 0]]
CoD.ArenaEventProgressButtonDailyBonus.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.ArenaEventProgressButtonDailyBonus ) --[[ @ 0]]
	self.id = "ArenaEventProgressButtonDailyBonus" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local DailyBonusNoise = LUI.UIImage.new( 0, 0, 0, 140, 0.09, 0.09, -2, 60 ) --[[ @ 0]]
	DailyBonusNoise:setAlpha( 0 ) --[[ @ 0]]
	DailyBonusNoise:setImage( RegisterImage( @"uie_ui_menu_specialist_hub_repeat_bg" ) ) --[[ @ 0]]
	DailyBonusNoise:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_16CBE95C250C6D15" ) ) --[[ @ 0]]
	DailyBonusNoise:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	DailyBonusNoise:setupNineSliceShader( 196, 88 ) --[[ @ 0]]
	self:addElement( DailyBonusNoise ) --[[ @ 0]]
	self.DailyBonusNoise = DailyBonusNoise --[[ @ 0]]
	
	local DailyBonusBg = LUI.UIImage.new( 0, 0, 0, 140, 0.5, 0.5, -31, 31 ) --[[ @ 0]]
	DailyBonusBg:setRGB( 0.67, 0.81, 0.15 ) --[[ @ 0]]
	DailyBonusBg:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( DailyBonusBg ) --[[ @ 0]]
	self.DailyBonusBg = DailyBonusBg --[[ @ 0]]
	
	local DailyBonusArrow = LUI.UIImage.new( 0, 0, 1, 9, 0, 0, 27, 43 ) --[[ @ 0]]
	DailyBonusArrow:setRGB( 0.55, 0.77, 0.26 ) --[[ @ 0]]
	DailyBonusArrow:setAlpha( 0 ) --[[ @ 0]]
	DailyBonusArrow:setImage( RegisterImage( @"uie_ui_hud_common_triangle" ) ) --[[ @ 0]]
	self:addElement( DailyBonusArrow ) --[[ @ 0]]
	self.DailyBonusArrow = DailyBonusArrow --[[ @ 0]]
	
	local DailyBonusBar = LUI.UIImage.new( 0, 0, 0, 2, 0, 0, 4, 66 ) --[[ @ 0]]
	DailyBonusBar:setRGB( 0.55, 0.77, 0.26 ) --[[ @ 0]]
	DailyBonusBar:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( DailyBonusBar ) --[[ @ 0]]
	self.DailyBonusBar = DailyBonusBar --[[ @ 0]]
	
	local DailyBonusLabel = CoD.ArenaDailyBonusLabel.new( f1_arg0, f1_arg1, 0, 0, 4.5, 137.5, 0, 0, 48.5, 64.5 ) --[[ @ 0]]
	DailyBonusLabel:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	DailyBonusLabel:setAlpha( 0 ) --[[ @ 0]]
	DailyBonusLabel.DailyBonusLabel:setText( LocalizeToUpperString( @"hash_1193C2AA115E0307" ) ) --[[ @ 0]]
	self:addElement( DailyBonusLabel ) --[[ @ 0]]
	self.DailyBonusLabel = DailyBonusLabel --[[ @ 0]]
	
	local DailyBonus = LUI.UIText.new( 0, 0, 10, 136, 0, 0, 11.5, 48.5 ) --[[ @ 0]]
	DailyBonus:setRGB( ColorSet.SelectedGreen.r, ColorSet.SelectedGreen.g, ColorSet.SelectedGreen.b ) --[[ @ 0]]
	DailyBonus:setAlpha( 0 ) --[[ @ 0]]
	DailyBonus:setTTF( "0arame_mono_stencil" ) --[[ @ 0]]
	DailyBonus:setLetterSpacing( 2 ) --[[ @ 0]]
	DailyBonus:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	DailyBonus:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	DailyBonus:subscribeToGlobalModel( f1_arg1, "LeaguePlay", "dailyBonusPool", function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			DailyBonus:setText( f2_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( DailyBonus ) --[[ @ 0]]
	self.DailyBonus = DailyBonus --[[ @ 0]]
	
	local DailyBonusAdd = LUI.UIText.new( 0, 0, 10, 136, 0, 0, 11.5, 48.5 ) --[[ @ 0]]
	DailyBonusAdd:setRGB( ColorSet.SelectedGreen.r, ColorSet.SelectedGreen.g, ColorSet.SelectedGreen.b ) --[[ @ 0]]
	DailyBonusAdd:setAlpha( 0 ) --[[ @ 0]]
	DailyBonusAdd:setTTF( "0arame_mono_stencil" ) --[[ @ 0]]
	DailyBonusAdd:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_3336C1AE82B1520A" ) ) --[[ @ 0]]
	DailyBonusAdd:setLetterSpacing( 2 ) --[[ @ 0]]
	DailyBonusAdd:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	DailyBonusAdd:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	DailyBonusAdd:subscribeToGlobalModel( f1_arg1, "LeaguePlay", "dailyBonusPool", function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			DailyBonusAdd:setText( f3_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( DailyBonusAdd ) --[[ @ 0]]
	self.DailyBonusAdd = DailyBonusAdd --[[ @ 0]]
	
	local TimerHeader = LUI.UIText.new( 0, 0, 5, 141, 0, 0, 12, 30 ) --[[ @ 0]]
	TimerHeader:setAlpha( 0 ) --[[ @ 0]]
	TimerHeader:setText( LocalizeToUpperString( @"hash_633F6B8CAEF2F672" ) ) --[[ @ 0]]
	TimerHeader:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	TimerHeader:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	TimerHeader:setAlignment( Enum[@"luialignment"][@"hash_E821F0ECFF8D1C7"] ) --[[ @ 0]]
	self:addElement( TimerHeader ) --[[ @ 0]]
	self.TimerHeader = TimerHeader --[[ @ 0]]
	
	local OverlayPattern = LUI.UIImage.new( 0.5, 0.5, -67.5, 69.5, 0.5, 0.5, -30, 30 ) --[[ @ 0]]
	OverlayPattern:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	OverlayPattern:setAlpha( 0 ) --[[ @ 0]]
	OverlayPattern:setImage( RegisterImage( @"hash_7FC21A8215EA012B" ) ) --[[ @ 0]]
	OverlayPattern:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_16CBE95C250C6D15" ) ) --[[ @ 0]]
	OverlayPattern:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	OverlayPattern:setupNineSliceShader( 4, 4 ) --[[ @ 0]]
	self:addElement( OverlayPattern ) --[[ @ 0]]
	self.OverlayPattern = OverlayPattern --[[ @ 0]]
	
	local ArenaEventTimerSmall = CoD.ArenaEventTimerSmall.new( f1_arg0, f1_arg1, 0.5, 0.5, -73, 67, 0, 0, 48, 62 ) --[[ @ 0]]
	ArenaEventTimerSmall:mergeStateConditions( {
		{
			stateName = "Event",
			condition = function ( menu, element, event )
				local f4_local0 = CoD.ArenaUtility.CurrentArenaEventTypeEquals( self, Enum[@"hash_6C0EA92D04BC003B"][@"hash_5C32571741C5B730"] ) --[[ @ 0]]
				if f4_local0 then
					f4_local0 = CoD.ArenaLeaguePlayUtility.HasOneMatchPlayed( self, f1_arg1 ) --[[ @ 0]]
					if f4_local0 then
						f4_local0 = CoD.ArenaUtility.IsDailyPoolRemainingCompleteTimer( self, f1_arg1, element ) --[[ @ 0]]
					end
				end
				return f4_local0
			end
		}
	} ) --[[ @ 0]]
	local f1_local11 = ArenaEventTimerSmall --[[ @ 0]]
	local ArenaDailyBonusLabel = ArenaEventTimerSmall.subscribeToModel --[[ @ 0]]
	local f1_local13 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	ArenaDailyBonusLabel( f1_local11, f1_local13["lobbyPlaylist.name"], function ( f5_arg0 )
		f1_arg0:updateElementState( ArenaEventTimerSmall, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f5_arg0:get(),
			modelName = "lobbyPlaylist.name"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local11 = ArenaEventTimerSmall --[[ @ 0]]
	ArenaDailyBonusLabel = ArenaEventTimerSmall.subscribeToModel --[[ @ 0]]
	f1_local13 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	ArenaDailyBonusLabel( f1_local11, f1_local13["lobbyRoot.lobbyNav"], function ( f6_arg0 )
		f1_arg0:updateElementState( ArenaEventTimerSmall, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f6_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local11 = ArenaEventTimerSmall --[[ @ 0]]
	ArenaDailyBonusLabel = ArenaEventTimerSmall.subscribeToModel --[[ @ 0]]
	f1_local13 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	ArenaDailyBonusLabel( f1_local11, f1_local13["LeaguePlayLadder.entityLadderRank"], function ( f7_arg0 )
		f1_arg0:updateElementState( ArenaEventTimerSmall, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f7_arg0:get(),
			modelName = "LeaguePlayLadder.entityLadderRank"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ArenaEventTimerSmall:setRGB( ColorSet.T8__OCHRE.r, ColorSet.T8__OCHRE.g, ColorSet.T8__OCHRE.b ) --[[ @ 0]]
	ArenaEventTimerSmall:setAlpha( 0 ) --[[ @ 0]]
	ArenaEventTimerSmall:subscribeToGlobalModel( f1_arg1, "Arena", "arenaLeaguePlayDailyPoolTimer", function ( model )
		local f8_local0 = model:get() --[[ @ 0]]
		if f8_local0 ~= nil then
			ArenaEventTimerSmall.EventEndsIn.EventEndsIn:setText( f8_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( ArenaEventTimerSmall ) --[[ @ 0]]
	self.ArenaEventTimerSmall = ArenaEventTimerSmall --[[ @ 0]]
	
	ArenaDailyBonusLabel = CoD.ArenaDailyBonusLabel.new( f1_arg0, f1_arg1, 0, 0, 5, 141, 0, 0, 12, 30 ) --[[ @ 0]]
	ArenaDailyBonusLabel:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	ArenaDailyBonusLabel:setAlpha( 0 ) --[[ @ 0]]
	ArenaDailyBonusLabel.DailyBonusLabel:setText( LocalizeToUpperString( @"hash_633F6B8CAEF2F672" ) ) --[[ @ 0]]
	self:addElement( ArenaDailyBonusLabel ) --[[ @ 0]]
	self.ArenaDailyBonusLabel = ArenaDailyBonusLabel --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "DailyBonusAvailable",
			condition = function ( menu, element, event )
				local f9_local0 = CoD.ArenaUtility.CurrentArenaEventTypeEquals( self, Enum[@"hash_6C0EA92D04BC003B"][@"hash_5C32571741C5B730"] ) --[[ @ 0]]
				if f9_local0 then
					f9_local0 = CoD.ArenaLeaguePlayUtility.HasOneMatchPlayed( self, f1_arg1 ) --[[ @ 0]]
					if f9_local0 then
						f9_local0 = CoD.ModelUtility.IsGlobalDataSourceModelValueGreaterThan( f1_arg1, "LeaguePlay", "dailyBonusPool", 0 ) --[[ @ 0]]
					end
				end
				return f9_local0
			end
		},
		{
			stateName = "DailyBonusDepleted",
			condition = function ( menu, element, event )
				return CoD.ArenaUtility.CurrentArenaEventTypeEquals( self, Enum[@"hash_6C0EA92D04BC003B"][@"hash_5C32571741C5B730"] ) and not CoD.ModelUtility.IsGlobalDataSourceModelValueGreaterThan( f1_arg1, "LeaguePlay", "dailyBonusPool", 0 )
			end
		}
	} ) --[[ @ 0]]
	f1_local13 = self --[[ @ 0]]
	f1_local11 = self.subscribeToModel --[[ @ 0]]
	local f1_local14 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local11( f1_local13, f1_local14["lobbyPlaylist.name"], function ( f11_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f11_arg0:get(),
			modelName = "lobbyPlaylist.name"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local13 = self --[[ @ 0]]
	f1_local11 = self.subscribeToModel --[[ @ 0]]
	f1_local14 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local11( f1_local13, f1_local14["lobbyRoot.lobbyNav"], function ( f12_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f12_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local13 = self --[[ @ 0]]
	f1_local11 = self.subscribeToModel --[[ @ 0]]
	f1_local14 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local11( f1_local13, f1_local14["LeaguePlayLadder.entityLadderRank"], function ( f13_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f13_arg0:get(),
			modelName = "LeaguePlayLadder.entityLadderRank"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local13 = self --[[ @ 0]]
	f1_local11 = self.subscribeToModel --[[ @ 0]]
	f1_local14 = DataSources.LeaguePlay.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local11( f1_local13, f1_local14.dailyBonusPool, function ( f14_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f14_arg0:get(),
			modelName = "dailyBonusPool"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.ArenaEventProgressButtonDailyBonus.__resetProperties = function ( f15_arg0 )
	f15_arg0.DailyBonusAdd:completeAnimation() --[[ @ 0]]
	f15_arg0.DailyBonus:completeAnimation() --[[ @ 0]]
	f15_arg0.DailyBonusBar:completeAnimation() --[[ @ 0]]
	f15_arg0.DailyBonusArrow:completeAnimation() --[[ @ 0]]
	f15_arg0.DailyBonusBg:completeAnimation() --[[ @ 0]]
	f15_arg0.DailyBonusNoise:completeAnimation() --[[ @ 0]]
	f15_arg0.OverlayPattern:completeAnimation() --[[ @ 0]]
	f15_arg0.DailyBonusLabel:completeAnimation() --[[ @ 0]]
	f15_arg0.ArenaEventTimerSmall:completeAnimation() --[[ @ 0]]
	f15_arg0.TimerHeader:completeAnimation() --[[ @ 0]]
	f15_arg0.ArenaDailyBonusLabel:completeAnimation() --[[ @ 0]]
	f15_arg0.DailyBonusAdd:setAlpha( 0 ) --[[ @ 0]]
	f15_arg0.DailyBonus:setAlpha( 0 ) --[[ @ 0]]
	f15_arg0.DailyBonusBar:setRGB( 0.55, 0.77, 0.26 ) --[[ @ 0]]
	f15_arg0.DailyBonusBar:setAlpha( 0 ) --[[ @ 0]]
	f15_arg0.DailyBonusArrow:setAlpha( 0 ) --[[ @ 0]]
	f15_arg0.DailyBonusBg:setRGB( 0.67, 0.81, 0.15 ) --[[ @ 0]]
	f15_arg0.DailyBonusBg:setAlpha( 0 ) --[[ @ 0]]
	f15_arg0.DailyBonusNoise:setAlpha( 0 ) --[[ @ 0]]
	f15_arg0.OverlayPattern:setAlpha( 0 ) --[[ @ 0]]
	f15_arg0.DailyBonusLabel:setAlpha( 0 ) --[[ @ 0]]
	f15_arg0.ArenaEventTimerSmall:setAlpha( 0 ) --[[ @ 0]]
	f15_arg0.TimerHeader:setAlpha( 0 ) --[[ @ 0]]
	f15_arg0.ArenaDailyBonusLabel:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ArenaEventProgressButtonDailyBonus.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f16_arg0, f16_arg1 )
			f16_arg0:__resetProperties() --[[ @ 0]]
			f16_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	DailyBonusAvailable = {
		DefaultClip = function ( f17_arg0, f17_arg1 )
			f17_arg0:__resetProperties() --[[ @ 0]]
			f17_arg0:setupElementClipCounter( 9 ) --[[ @ 0]]
			f17_arg0.DailyBonusNoise:completeAnimation() --[[ @ 0]]
			f17_arg0.DailyBonusNoise:setAlpha( 0 ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.DailyBonusNoise ) --[[ @ 0]]
			f17_arg0.DailyBonusBg:completeAnimation() --[[ @ 0]]
			f17_arg0.DailyBonusBg:setAlpha( 0.15 ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.DailyBonusBg ) --[[ @ 0]]
			f17_arg0.DailyBonusArrow:completeAnimation() --[[ @ 0]]
			f17_arg0.DailyBonusArrow:setAlpha( 1 ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.DailyBonusArrow ) --[[ @ 0]]
			f17_arg0.DailyBonusBar:completeAnimation() --[[ @ 0]]
			f17_arg0.DailyBonusBar:setAlpha( 1 ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.DailyBonusBar ) --[[ @ 0]]
			f17_arg0.DailyBonusLabel:completeAnimation() --[[ @ 0]]
			f17_arg0.DailyBonusLabel:setAlpha( 1 ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.DailyBonusLabel ) --[[ @ 0]]
			f17_arg0.DailyBonus:completeAnimation() --[[ @ 0]]
			f17_arg0.DailyBonus:setAlpha( 1 ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.DailyBonus ) --[[ @ 0]]
			f17_arg0.DailyBonusAdd:completeAnimation() --[[ @ 0]]
			f17_arg0.DailyBonusAdd:setAlpha( 1 ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.DailyBonusAdd ) --[[ @ 0]]
			f17_arg0.OverlayPattern:completeAnimation() --[[ @ 0]]
			f17_arg0.OverlayPattern:setAlpha( 0 ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.OverlayPattern ) --[[ @ 0]]
			f17_arg0.ArenaEventTimerSmall:completeAnimation() --[[ @ 0]]
			f17_arg0.ArenaEventTimerSmall:setAlpha( 0 ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.ArenaEventTimerSmall ) --[[ @ 0]]
		end
	},
	DailyBonusDepleted = {
		DefaultClip = function ( f18_arg0, f18_arg1 )
			f18_arg0:__resetProperties() --[[ @ 0]]
			f18_arg0:setupElementClipCounter( 8 ) --[[ @ 0]]
			f18_arg0.DailyBonusNoise:completeAnimation() --[[ @ 0]]
			f18_arg0.DailyBonusNoise:setAlpha( 0.5 ) --[[ @ 0]]
			f18_arg0.clipFinished( f18_arg0.DailyBonusNoise ) --[[ @ 0]]
			f18_arg0.DailyBonusBg:completeAnimation() --[[ @ 0]]
			f18_arg0.DailyBonusBg:setRGB( 0, 0, 0 ) --[[ @ 0]]
			f18_arg0.DailyBonusBg:setAlpha( 0.1 ) --[[ @ 0]]
			f18_arg0.clipFinished( f18_arg0.DailyBonusBg ) --[[ @ 0]]
			f18_arg0.DailyBonusArrow:completeAnimation() --[[ @ 0]]
			f18_arg0.DailyBonusArrow:setAlpha( 0 ) --[[ @ 0]]
			f18_arg0.clipFinished( f18_arg0.DailyBonusArrow ) --[[ @ 0]]
			f18_arg0.DailyBonusBar:completeAnimation() --[[ @ 0]]
			f18_arg0.DailyBonusBar:setRGB( 1, 1, 1 ) --[[ @ 0]]
			f18_arg0.DailyBonusBar:setAlpha( 0.05 ) --[[ @ 0]]
			f18_arg0.clipFinished( f18_arg0.DailyBonusBar ) --[[ @ 0]]
			f18_arg0.TimerHeader:completeAnimation() --[[ @ 0]]
			f18_arg0.TimerHeader:setAlpha( 0 ) --[[ @ 0]]
			f18_arg0.clipFinished( f18_arg0.TimerHeader ) --[[ @ 0]]
			f18_arg0.OverlayPattern:completeAnimation() --[[ @ 0]]
			f18_arg0.OverlayPattern:setAlpha( 0 ) --[[ @ 0]]
			f18_arg0.clipFinished( f18_arg0.OverlayPattern ) --[[ @ 0]]
			f18_arg0.ArenaEventTimerSmall:completeAnimation() --[[ @ 0]]
			f18_arg0.ArenaEventTimerSmall:setAlpha( 1 ) --[[ @ 0]]
			f18_arg0.clipFinished( f18_arg0.ArenaEventTimerSmall ) --[[ @ 0]]
			f18_arg0.ArenaDailyBonusLabel:completeAnimation() --[[ @ 0]]
			f18_arg0.ArenaDailyBonusLabel:setAlpha( 1 ) --[[ @ 0]]
			f18_arg0.clipFinished( f18_arg0.ArenaDailyBonusLabel ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.ArenaEventProgressButtonDailyBonus.__onClose = function ( f19_arg0 )
	f19_arg0.DailyBonusLabel:close() --[[ @ 0]]
	f19_arg0.DailyBonus:close() --[[ @ 0]]
	f19_arg0.DailyBonusAdd:close() --[[ @ 0]]
	f19_arg0.ArenaEventTimerSmall:close() --[[ @ 0]]
	f19_arg0.ArenaDailyBonusLabel:close() --[[ @ 0]]
end
 --[[ @ 0]]
