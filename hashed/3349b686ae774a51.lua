-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:49
require( "x64:38c77ad7100c0f3" ) --[[ @ 0]]

CoD.ZMAARTrialTabRoundStatTall = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.ZMAARTrialTabRoundStatTall.__defaultWidth = 390 --[[ @ 0]]
CoD.ZMAARTrialTabRoundStatTall.__defaultHeight = 60 --[[ @ 0]]
CoD.ZMAARTrialTabRoundStatTall.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.ZMAARTrialTabRoundStatTall ) --[[ @ 0]]
	self.id = "ZMAARTrialTabRoundStatTall" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local FocusedBg = LUI.UIImage.new( 0, 0, -2, 390, 0, 1, 0, 0 ) --[[ @ 0]]
	FocusedBg:setImage( RegisterImage( @"uie_blood_paint" ) ) --[[ @ 0]]
	self:addElement( FocusedBg ) --[[ @ 0]]
	self.FocusedBg = FocusedBg --[[ @ 0]]
	
	local Num = LUI.UIText.new( 0, 0, 6, 33, 0, 0, 5, 25 ) --[[ @ 0]]
	Num:setAlpha( 0.5 ) --[[ @ 0]]
	Num:setTTF( "skorzhen" ) --[[ @ 0]]
	Num:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	Num:linkToElementModel( self, "numText", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			Num:setText( f2_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Num ) --[[ @ 0]]
	self.Num = Num --[[ @ 0]]
	
	local Title = LUI.UIText.new( 0, 0, 33, 348, 0, 0, 5, 25 ) --[[ @ 0]]
	Title:setRGB( 0.92, 0.92, 0.92 ) --[[ @ 0]]
	Title:setTTF( "skorzhen" ) --[[ @ 0]]
	Title:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	Title:setAlignment( Enum[@"luialignment"][@"hash_E821F0ECFF8D1C7"] ) --[[ @ 0]]
	Title:linkToElementModel( self, "titleText", true, function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			Title:setText( f3_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Title ) --[[ @ 0]]
	self.Title = Title --[[ @ 0]]
	
	local TitleUnknown = LUI.UIText.new( 0, 0, 67, 390, 0, 0, 5, 25 ) --[[ @ 0]]
	TitleUnknown:setRGB( 0.92, 0.92, 0.92 ) --[[ @ 0]]
	TitleUnknown:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_7521943FA0D36D36" ) ) --[[ @ 0]]
	TitleUnknown:setTTF( "skorzhen" ) --[[ @ 0]]
	TitleUnknown:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	self:addElement( TitleUnknown ) --[[ @ 0]]
	self.TitleUnknown = TitleUnknown --[[ @ 0]]
	
	local Line = LUI.UIImage.new( 0, 0, 0, 348, 0, 0, 2, 22 ) --[[ @ 0]]
	Line:setImage( RegisterImage( @"uie_strike_line" ) ) --[[ @ 0]]
	self:addElement( Line ) --[[ @ 0]]
	self.Line = Line --[[ @ 0]]
	
	local Description = CoD.ZMAARTrialTabRoundStatDescriptionTall.new( f1_arg0, f1_arg1, 0, 0, 33, 370, 0, 0, 26, 44 ) --[[ @ 0]]
	Description:setAlpha( 0.3 ) --[[ @ 0]]
	Description:linkToElementModel( self, "descText", true, function ( model )
		local f4_local0 = model:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			Description.Desc:setText( f4_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Description ) --[[ @ 0]]
	self.Description = Description --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Complete",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalDataSourceModelValueGreaterThanSelfModelValue( element, f1_arg1, "ZMHudGlobal", "trials.roundNumber", "trialIndex" )
			end
		},
		{
			stateName = "Focused",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalDataSourceModelValueEqualToSelfModelValue( element, f1_arg1, "ZMHudGlobal", "trials.roundNumber", "trialIndex" )
			end
		},
		{
			stateName = "PreviouslyCompleted",
			condition = function ( menu, element, event )
				return CoD.ZombieUtility.IsSelfModelValueLessThanOrEqualToTrialStatVal( element, f1_arg1, "trialIndex", "highest_round_reached" )
			end
		},
		{
			stateName = "Incomplete",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalDataSourceModelValueLessThanSelfModelValue( element, f1_arg1, "ZMHudGlobal", "trials.roundNumber", "trialIndex" )
			end
		}
	} ) --[[ @ 0]]
	local f1_local7 = self --[[ @ 0]]
	local f1_local8 = self.subscribeToModel --[[ @ 0]]
	local f1_local9 = DataSources.ZMHudGlobal.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local8( f1_local7, f1_local9["trials.roundNumber"], function ( f9_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f9_arg0:get(),
			modelName = "trials.roundNumber"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:linkToElementModel( self, "trialIndex", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "trialIndex"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.ZMAARTrialTabRoundStatTall.__resetProperties = function ( f11_arg0 )
	f11_arg0.FocusedBg:completeAnimation() --[[ @ 0]]
	f11_arg0.Line:completeAnimation() --[[ @ 0]]
	f11_arg0.Title:completeAnimation() --[[ @ 0]]
	f11_arg0.TitleUnknown:completeAnimation() --[[ @ 0]]
	f11_arg0.Description:completeAnimation() --[[ @ 0]]
	f11_arg0.FocusedBg:setAlpha( 1 ) --[[ @ 0]]
	f11_arg0.Line:setAlpha( 1 ) --[[ @ 0]]
	f11_arg0.Title:setAlpha( 1 ) --[[ @ 0]]
	f11_arg0.Title:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	f11_arg0.TitleUnknown:setLeftRight( 0, 0, 67, 390 ) --[[ @ 0]]
	f11_arg0.TitleUnknown:setRGB( 0.92, 0.92, 0.92 ) --[[ @ 0]]
	f11_arg0.TitleUnknown:setAlpha( 1 ) --[[ @ 0]]
	f11_arg0.TitleUnknown:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	f11_arg0.Description:setAlpha( 0.3 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ZMAARTrialTabRoundStatTall.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f12_arg0, f12_arg1 )
			f12_arg0:__resetProperties() --[[ @ 0]]
			f12_arg0:setupElementClipCounter( 5 ) --[[ @ 0]]
			f12_arg0.FocusedBg:completeAnimation() --[[ @ 0]]
			f12_arg0.FocusedBg:setAlpha( 0 ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.FocusedBg ) --[[ @ 0]]
			f12_arg0.Title:completeAnimation() --[[ @ 0]]
			f12_arg0.Title:setAlpha( 0 ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.Title ) --[[ @ 0]]
			f12_arg0.TitleUnknown:completeAnimation() --[[ @ 0]]
			f12_arg0.TitleUnknown:setAlpha( 1 ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.TitleUnknown ) --[[ @ 0]]
			f12_arg0.Line:completeAnimation() --[[ @ 0]]
			f12_arg0.Line:setAlpha( 0 ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.Line ) --[[ @ 0]]
			f12_arg0.Description:completeAnimation() --[[ @ 0]]
			f12_arg0.Description:setAlpha( 0 ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.Description ) --[[ @ 0]]
		end
	},
	Complete = {
		DefaultClip = function ( f13_arg0, f13_arg1 )
			f13_arg0:__resetProperties() --[[ @ 0]]
			f13_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f13_arg0.FocusedBg:completeAnimation() --[[ @ 0]]
			f13_arg0.FocusedBg:setAlpha( 0 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.FocusedBg ) --[[ @ 0]]
			f13_arg0.TitleUnknown:completeAnimation() --[[ @ 0]]
			f13_arg0.TitleUnknown:setAlpha( 0 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.TitleUnknown ) --[[ @ 0]]
		end
	},
	Focused = {
		DefaultClip = function ( f14_arg0, f14_arg1 )
			f14_arg0:__resetProperties() --[[ @ 0]]
			f14_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f14_arg0.FocusedBg:completeAnimation() --[[ @ 0]]
			f14_arg0.FocusedBg:setAlpha( 1 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.FocusedBg ) --[[ @ 0]]
			f14_arg0.TitleUnknown:completeAnimation() --[[ @ 0]]
			f14_arg0.TitleUnknown:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.TitleUnknown ) --[[ @ 0]]
			f14_arg0.Line:completeAnimation() --[[ @ 0]]
			f14_arg0.Line:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.Line ) --[[ @ 0]]
		end
	},
	PreviouslyCompleted = {
		DefaultClip = function ( f15_arg0, f15_arg1 )
			f15_arg0:__resetProperties() --[[ @ 0]]
			f15_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f15_arg0.FocusedBg:completeAnimation() --[[ @ 0]]
			f15_arg0.FocusedBg:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.FocusedBg ) --[[ @ 0]]
			f15_arg0.Title:completeAnimation() --[[ @ 0]]
			f15_arg0.Title:setAlpha( 0.6 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.Title ) --[[ @ 0]]
			f15_arg0.TitleUnknown:completeAnimation() --[[ @ 0]]
			f15_arg0.TitleUnknown:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.TitleUnknown ) --[[ @ 0]]
			f15_arg0.Line:completeAnimation() --[[ @ 0]]
			f15_arg0.Line:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.Line ) --[[ @ 0]]
		end
	},
	Incomplete = {
		DefaultClip = function ( f16_arg0, f16_arg1 )
			f16_arg0:__resetProperties() --[[ @ 0]]
			f16_arg0:setupElementClipCounter( 5 ) --[[ @ 0]]
			f16_arg0.FocusedBg:completeAnimation() --[[ @ 0]]
			f16_arg0.FocusedBg:setAlpha( 0 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.FocusedBg ) --[[ @ 0]]
			f16_arg0.Title:completeAnimation() --[[ @ 0]]
			f16_arg0.Title:setAlpha( 0 ) --[[ @ 0]]
			f16_arg0.Title:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.Title ) --[[ @ 0]]
			f16_arg0.TitleUnknown:completeAnimation() --[[ @ 0]]
			f16_arg0.TitleUnknown:setLeftRight( 0, 0, 24.5, 334.5 ) --[[ @ 0]]
			f16_arg0.TitleUnknown:setRGB( ColorSet.Title.r, ColorSet.Title.g, ColorSet.Title.b ) --[[ @ 0]]
			f16_arg0.TitleUnknown:setAlpha( 0.6 ) --[[ @ 0]]
			f16_arg0.TitleUnknown:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.TitleUnknown ) --[[ @ 0]]
			f16_arg0.Line:completeAnimation() --[[ @ 0]]
			f16_arg0.Line:setAlpha( 0 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.Line ) --[[ @ 0]]
			f16_arg0.Description:completeAnimation() --[[ @ 0]]
			f16_arg0.Description:setAlpha( 0 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.Description ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.ZMAARTrialTabRoundStatTall.__onClose = function ( f17_arg0 )
	f17_arg0.Num:close() --[[ @ 0]]
	f17_arg0.Title:close() --[[ @ 0]]
	f17_arg0.Description:close() --[[ @ 0]]
end
 --[[ @ 0]]
