-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:49
require( "x64:520b3eeae9b7d557" ) --[[ @ 0]]

CoD.DirectorMapGameTypeAndDifficulty = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.DirectorMapGameTypeAndDifficulty.__defaultWidth = 382 --[[ @ 0]]
CoD.DirectorMapGameTypeAndDifficulty.__defaultHeight = 180 --[[ @ 0]]
CoD.DirectorMapGameTypeAndDifficulty.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.DirectorMapGameTypeAndDifficulty ) --[[ @ 0]]
	self.id = "DirectorMapGameTypeAndDifficulty" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local DirectorMapAndGameInternal = CoD.DirectorMapAndGameTypeInternal.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	DirectorMapAndGameInternal:mergeStateConditions( {
		{
			stateName = "Unselectable",
			condition = function ( menu, element, event )
				return CoD.BaseUtility.IsSelfInState( self, "Unselectable" )
			end
		},
		{
			stateName = "Disabled",
			condition = function ( menu, element, event )
				return not IsPartyLeader( f1_arg1 )
			end
		}
	} ) --[[ @ 0]]
	local f1_local2 = DirectorMapAndGameInternal --[[ @ 0]]
	local f1_local3 = DirectorMapAndGameInternal.subscribeToModel --[[ @ 0]]
	local f1_local4 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local3( f1_local2, f1_local4["lobbyRoot.lobbyNav"], function ( f4_arg0 )
		f1_arg0:updateElementState( DirectorMapAndGameInternal, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f4_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local2 = DirectorMapAndGameInternal --[[ @ 0]]
	f1_local3 = DirectorMapAndGameInternal.subscribeToModel --[[ @ 0]]
	f1_local4 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local3( f1_local2, f1_local4["lobbyRoot.privateClient.isHost"], function ( f5_arg0 )
		f1_arg0:updateElementState( DirectorMapAndGameInternal, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f5_arg0:get(),
			modelName = "lobbyRoot.privateClient.isHost"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local2 = DirectorMapAndGameInternal --[[ @ 0]]
	f1_local3 = DirectorMapAndGameInternal.subscribeToModel --[[ @ 0]]
	f1_local4 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local3( f1_local2, f1_local4["lobbyRoot.gameClient.isHost"], function ( f6_arg0 )
		f1_arg0:updateElementState( DirectorMapAndGameInternal, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f6_arg0:get(),
			modelName = "lobbyRoot.gameClient.isHost"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	DirectorMapAndGameInternal.GamemodeIcon:setScale( 0.8, 0.8 ) --[[ @ 0]]
	self:addElement( DirectorMapAndGameInternal ) --[[ @ 0]]
	self.DirectorMapAndGameInternal = DirectorMapAndGameInternal --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Unselectable",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		}
	} ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( self, "setState", function ( element, controller, f8_arg2, f8_arg3, f8_arg4 )
		UpdateElementState( self, "DirectorMapAndGameInternal", controller ) --[[ @ 0]]
	end ) --[[ @ 0]]
	DirectorMapAndGameInternal.id = "DirectorMapAndGameInternal" --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.DirectorMapGameTypeAndDifficulty.__resetProperties = function ( f9_arg0 )
	f9_arg0.DirectorMapAndGameInternal:completeAnimation() --[[ @ 0]]
	f9_arg0.DirectorMapAndGameInternal:setScale( 1, 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorMapGameTypeAndDifficulty.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f10_arg0, f10_arg1 )
			f10_arg0:__resetProperties() --[[ @ 0]]
			f10_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end,
		ChildFocus = function ( f11_arg0, f11_arg1 )
			f11_arg0:__resetProperties() --[[ @ 0]]
			f11_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f11_arg0.DirectorMapAndGameInternal:completeAnimation() --[[ @ 0]]
			f11_arg0.DirectorMapAndGameInternal:setScale( 1.05, 1.05 ) --[[ @ 0]]
			f11_arg0.clipFinished( f11_arg0.DirectorMapAndGameInternal ) --[[ @ 0]]
		end,
		GainChildFocus = function ( f12_arg0, f12_arg1 )
			f12_arg0:__resetProperties() --[[ @ 0]]
			f12_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f12_local0 = function ( f13_arg0 )
				f12_arg0.DirectorMapAndGameInternal:beginAnimation( 200 ) --[[ @ 0]]
				f12_arg0.DirectorMapAndGameInternal:setScale( 1.05, 1.05 ) --[[ @ 0]]
				f12_arg0.DirectorMapAndGameInternal:registerEventHandler( "interrupted_keyframe", f12_arg0.clipInterrupted ) --[[ @ 0]]
				f12_arg0.DirectorMapAndGameInternal:registerEventHandler( "transition_complete_keyframe", f12_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f12_arg0.DirectorMapAndGameInternal:completeAnimation() --[[ @ 0]]
			f12_arg0.DirectorMapAndGameInternal:setScale( 1, 1 ) --[[ @ 0]]
			f12_local0( f12_arg0.DirectorMapAndGameInternal ) --[[ @ 0]]
		end,
		LoseChildFocus = function ( f14_arg0, f14_arg1 )
			f14_arg0:__resetProperties() --[[ @ 0]]
			f14_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f14_local0 = function ( f15_arg0 )
				f14_arg0.DirectorMapAndGameInternal:beginAnimation( 200 ) --[[ @ 0]]
				f14_arg0.DirectorMapAndGameInternal:setScale( 1, 1 ) --[[ @ 0]]
				f14_arg0.DirectorMapAndGameInternal:registerEventHandler( "interrupted_keyframe", f14_arg0.clipInterrupted ) --[[ @ 0]]
				f14_arg0.DirectorMapAndGameInternal:registerEventHandler( "transition_complete_keyframe", f14_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f14_arg0.DirectorMapAndGameInternal:completeAnimation() --[[ @ 0]]
			f14_arg0.DirectorMapAndGameInternal:setScale( 1.05, 1.05 ) --[[ @ 0]]
			f14_local0( f14_arg0.DirectorMapAndGameInternal ) --[[ @ 0]]
		end
	},
	Unselectable = {
		DefaultClip = function ( f16_arg0, f16_arg1 )
			f16_arg0:__resetProperties() --[[ @ 0]]
			f16_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.DirectorMapGameTypeAndDifficulty.__onClose = function ( f17_arg0 )
	f17_arg0.DirectorMapAndGameInternal:close() --[[ @ 0]]
end
 --[[ @ 0]]
