-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:35
require( "x64:70e99196b904ad18" ) --[[ @ 0]]
require( "x64:74c9a492524a6a24" ) --[[ @ 0]]
require( "ui/uieditor/widgets/header/header_container_frontend" ) --[[ @ 0]]
require( "x64:348be5c6feaceeb4" ) --[[ @ 0]]
require( "ui/uieditor/widgets/startmenu/options/flyout/startmenu_options_settingslider" ) --[[ @ 0]]
require( "ui/uieditor/widgets/startmenu/options/startmenuoptionsbackground" ) --[[ @ 0]]
require( "ui/uieditor/widgets/store/storecommontextbacking" ) --[[ @ 0]]
require( "ui/uieditor/widgets/systemoverlays/featureoverlay_button" ) --[[ @ 0]]

local PostLoadFunc = function ( f1_arg0, f1_arg1 )
	f1_arg0.disableBlur = true --[[ @ 0]]
	f1_arg0.animateInFromOffset = -225 --[[ @ 0]]
end
 --[[ @ 0]]
CoD.CodCasterQuickSettingsSideBar = InheritFrom( CoD.Menu ) --[[ @ 0]]
LUI.createMenu.CodCasterQuickSettingsSideBar = function ( f2_arg0, f2_arg1 )
	local self = CoD.Menu.NewForUIEditor( "CodCasterQuickSettingsSideBar", f2_arg0 ) --[[ @ 0]]
	local f2_local1 = self --[[ @ 0]]
	CoD.BaseUtility.InitGlobalModel( "GametypeSettings.Update", nil ) --[[ @ 0]]
	CoD.BaseUtility.InitGlobalModel( "GametypeSettings.Reset", nil ) --[[ @ 0]]
	MenuHidesFreeCursor( f2_local1, f2_arg0 ) --[[ @ 0]]
	self:setClass( CoD.CodCasterQuickSettingsSideBar ) --[[ @ 0]]
	self.soundSet = "ChooseDecal" --[[ @ 0]]
	self:setOwner( f2_arg0 ) --[[ @ 0]]
	self:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	self:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	self:playSound( "menu_open", f2_arg0 ) --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f2_local1:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local texture = LUI.UIImage.new( 0, 0, 0, 820, 0, 0, 0, 1080 ) --[[ @ 0]]
	texture:setAlpha( 0.75 ) --[[ @ 0]]
	texture:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_E2354BE557C4C7A" ) ) --[[ @ 0]]
	texture:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( texture ) --[[ @ 0]]
	self.texture = texture --[[ @ 0]]
	
	local Background = CoD.StartMenuOptionsBackground.new( f2_local1, f2_arg0, 0, 0, -1100, 820, 0, 0, 0, 1080 ) --[[ @ 0]]
	self:addElement( Background ) --[[ @ 0]]
	self.Background = Background --[[ @ 0]]
	
	local BackingBlack = CoD.CodCasterSettingFooter.new( f2_local1, f2_arg0, 0, 0, -246, 820, 0, 0, 1015, 1268 ) --[[ @ 0]]
	BackingBlack:setYRot( 180 ) --[[ @ 0]]
	self:addElement( BackingBlack ) --[[ @ 0]]
	self.BackingBlack = BackingBlack --[[ @ 0]]
	
	local OptionInfo = CoD.StartMenu_Options_SettingInfo.new( f2_local1, f2_arg0, 0, 0, 63, 763, 0, 0, 540, 644 ) --[[ @ 0]]
	self:addElement( OptionInfo ) --[[ @ 0]]
	self.OptionInfo = OptionInfo --[[ @ 0]]
	
	local ButtonList = LUI.UIList.new( f2_local1, f2_arg0, 6, 0, nil, false, false, false, false ) --[[ @ 0]]
	ButtonList:setLeftRight( 0, 0, 63, 763 ) --[[ @ 0]]
	ButtonList:setTopBottom( 0, 0, 126, 484 ) --[[ @ 0]]
	ButtonList:setWidgetType( CoD.StartMenu_Options_SettingSlider ) --[[ @ 0]]
	ButtonList:setVerticalCount( 7 ) --[[ @ 0]]
	ButtonList:setSpacing( 6 ) --[[ @ 0]]
	ButtonList:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	ButtonList:setDataSource( "CodCasterQuickSettingsList" ) --[[ @ 0]]
	ButtonList:registerEventHandler( "gain_focus", function ( element, event )
		local f3_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f3_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f3_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f2_local1, f2_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f3_local0
	end ) --[[ @ 0]]
	f2_local1:AddButtonCallbackFunction( ButtonList, f2_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], nil, function ( element, menu, controller, model )
		ToggleCodCasterQuickSettings( self, element, controller ) --[[ @ 0]]
		ToggleControllerModelValueNumber( controller, "CodCaster.profileSettingsUpdated" ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_0", nil, nil ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	self:addElement( ButtonList ) --[[ @ 0]]
	self.ButtonList = ButtonList --[[ @ 0]]
	
	local BGSceneBlur = LUI.UIImage.new( 0, 0, 0, 820, 0, 0, -15.5, 51.5 ) --[[ @ 0]]
	BGSceneBlur:setRGB( ColorSet.Title.r, ColorSet.Title.g, ColorSet.Title.b ) --[[ @ 0]]
	BGSceneBlur:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( BGSceneBlur ) --[[ @ 0]]
	self.BGSceneBlur = BGSceneBlur --[[ @ 0]]
	
	local f2_local8 = nil --[[ @ 0]]
	self.background2 = LUI.UIElement.createFake() --[[ @ 0]]
	
	local DotTiledBacking = CoD.StoreCommonTextBacking.new( f2_local1, f2_arg0, 0, 0, -164, 820, 0, 0, 9.5, 51.5 ) --[[ @ 0]]
	DotTiledBacking:setAlpha( 0.5 ) --[[ @ 0]]
	DotTiledBacking.NoiseBacking:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( DotTiledBacking ) --[[ @ 0]]
	self.DotTiledBacking = DotTiledBacking --[[ @ 0]]
	
	local TopBar2 = LUI.UIImage.new( 0, 0, 0, 820, 0, 0, 51, 54 ) --[[ @ 0]]
	TopBar2:setRGB( 0.46, 0.46, 0.51 ) --[[ @ 0]]
	TopBar2:setAlpha( 0.8 ) --[[ @ 0]]
	TopBar2:setImage( RegisterImage( @"uie_ui_menu_cac_primary_button_top_bar" ) ) --[[ @ 0]]
	TopBar2:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_31CC85D0A86303B0" ) ) --[[ @ 0]]
	TopBar2:setShaderVector( 0, 2, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( TopBar2 ) --[[ @ 0]]
	self.TopBar2 = TopBar2 --[[ @ 0]]
	
	local BackingGrayMediumLeft = CoD.header_container_frontend.new( f2_local1, f2_arg0, 0, 0, -131, 689, 0, 0, 0.5, 42.5 ) --[[ @ 0]]
	self:addElement( BackingGrayMediumLeft ) --[[ @ 0]]
	self.BackingGrayMediumLeft = BackingGrayMediumLeft --[[ @ 0]]
	
	local Title = LUI.UIText.new( 0, 0, 63, 381, 0, 0, 15.5, 45.5 ) --[[ @ 0]]
	Title:setRGB( ColorSet.T8__GOLD.r, ColorSet.T8__GOLD.g, ColorSet.T8__GOLD.b ) --[[ @ 0]]
	Title:setText( LocalizeToUpperString( @"hash_24EA93CFFE505B27" ) ) --[[ @ 0]]
	Title:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	Title:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	Title:setAlignment( Enum[@"LUIAlignment"][@"hash_6ED4298C93DC5ED"] ) --[[ @ 0]]
	self:addElement( Title ) --[[ @ 0]]
	self.Title = Title --[[ @ 0]]
	
	local FooterContainerIngameRight = CoD.CodCasterSettingsSideBarLeftbuttoncontainer.new( f2_local1, f2_arg0, 0, 0, 140, 720, 0, 0, 1032, 1080 ) --[[ @ 0]]
	self:addElement( FooterContainerIngameRight ) --[[ @ 0]]
	self.FooterContainerIngameRight = FooterContainerIngameRight --[[ @ 0]]
	
	local backButton = nil --[[ @ 0]]
	
	backButton = CoD.featureOverlay_Button.new( f2_local1, f2_arg0, 0, 0, 563, 763, 0, 0, 924, 984 ) --[[ @ 0]]
	backButton.ButtonContainer.Title:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_370A9FDC87CD3D48" ) ) --[[ @ 0]]
	backButton:registerEventHandler( "gain_focus", function ( element, event )
		local f6_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f6_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f6_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f2_local1, f2_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f6_local0
	end ) --[[ @ 0]]
	f2_local1:AddButtonCallbackFunction( backButton, f2_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "MOUSE1", function ( element, menu, controller, model )
		CoD.GridAndListUtility.SetFocusToFirstSelectableItem( self.ButtonList ) --[[ @ 0]]
		ToggleControllerModelValueNumber( controller, "CodCaster.showQuickSettingsSideBar" ) --[[ @ 0]]
		SaveShoutcasterSettings( self, element, controller ) --[[ @ 0]]
		GoBack( self, controller ) --[[ @ 0]]
		SetLuiKeyCatcher( false ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_0", nil, "MOUSE1" ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	self:addElement( backButton ) --[[ @ 0]]
	self.backButton = backButton --[[ @ 0]]
	
	local resetButton = nil --[[ @ 0]]
	
	resetButton = CoD.featureOverlay_Button.new( f2_local1, f2_arg0, 0, 0, 302, 502, 0, 0, 924, 984 ) --[[ @ 0]]
	resetButton.ButtonContainer.Title:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_5FA987631536BD44" ) ) --[[ @ 0]]
	resetButton:registerEventHandler( "gain_focus", function ( element, event )
		local f9_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f9_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f9_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f2_local1, f2_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f9_local0
	end ) --[[ @ 0]]
	f2_local1:AddButtonCallbackFunction( resetButton, f2_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "MOUSE1", function ( element, menu, controller, model )
		CoD.CodCasterUtility.OpenResetCodCasterSettingsPopup( self, element, controller, "", menu ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_0", nil, "MOUSE1" ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	self:addElement( resetButton ) --[[ @ 0]]
	self.resetButton = resetButton --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return Engine[@"IsVisibilityBitSet"]( f2_arg0, Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"] )
			end
		},
		{
			stateName = "PCGamepad",
			condition = function ( menu, element, event )
				return IsPC() and IsGamepad( f2_arg0 )
			end
		},
		{
			stateName = "PC",
			condition = function ( menu, element, event )
				return IsPC()
			end
		}
	} ) --[[ @ 0]]
	local f2_local16 = self --[[ @ 0]]
	local f2_local17 = self.subscribeToModel --[[ @ 0]]
	local f2_local18 = Engine[@"GetModelForController"]( f2_arg0 ) --[[ @ 0]]
	f2_local17( f2_local16, f2_local18["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"]], function ( f15_arg0 )
		f2_local1:updateElementState( self, {
			name = "model_validation",
			menu = f2_local1,
			controller = f2_arg0,
			modelValue = f15_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:appendEventHandler( "input_source_changed", function ( f16_arg0, f16_arg1 )
		f16_arg1.menu = f16_arg1.menu or f2_local1 --[[ @ 0]]
		f2_local1:updateElementState( self, f16_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	f2_local16 = self --[[ @ 0]]
	f2_local17 = self.subscribeToModel --[[ @ 0]]
	f2_local18 = Engine[@"GetModelForController"]( f2_arg0 ) --[[ @ 0]]
	f2_local17( f2_local16, f2_local18.LastInput, function ( f17_arg0 )
		f2_local1:updateElementState( self, {
			name = "model_validation",
			menu = f2_local1,
			controller = f2_arg0,
			modelValue = f17_arg0:get(),
			modelName = "LastInput"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:appendEventHandler( "input_source_changed", function ( f18_arg0, f18_arg1 )
		f18_arg1.menu = f18_arg1.menu or f2_local1 --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f18_arg0, f2_local1, f2_arg0, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	f2_local16 = self --[[ @ 0]]
	f2_local17 = self.subscribeToModel --[[ @ 0]]
	f2_local18 = Engine[@"GetModelForController"]( f2_arg0 ) --[[ @ 0]]
	f2_local17( f2_local16, f2_local18.LastInput, function ( f19_arg0, f19_arg1 )
		CoD.Menu.UpdateButtonShownState( f19_arg1, f2_local1, f2_arg0, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f2_local1:AddButtonCallbackFunction( self, f2_arg0, Enum[@"LUIButton"][@"hash_3D2F467A6C6DA1AC"], "R", function ( element, menu, controller, model )
		if not IsRepeatButtonPress( model ) then
			CoD.GridAndListUtility.SetFocusToFirstSelectableItem( self.ButtonList ) --[[ @ 0]]
			ToggleControllerModelValueNumber( controller, "CodCaster.showQuickSettingsSideBar" ) --[[ @ 0]]
			SaveShoutcasterSettings( self, element, controller ) --[[ @ 0]]
			GoBack( self, controller ) --[[ @ 0]]
			SetLuiKeyCatcher( false ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsRepeatButtonPress( nil ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3D2F467A6C6DA1AC"], @"hash_370A9FDC87CD3D48", nil, "R" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f2_local1:AddButtonCallbackFunction( self, f2_arg0, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"], "ui_contextual_2", function ( element, menu, controller, model )
		if IsGamepad( controller ) then
			CoD.CodCasterUtility.ResetCodcasterSettingsGamepad( controller, menu ) --[[ @ 0]]
			PlaySoundAlias( "uin_party_ease_slide" ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsGamepad( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"], @"hash_5FA987631536BD44", Enum[@"hash_3BEBDBAEEB3ECCCA"][@"hash_72919C98A7A845F0"] | 750 << Enum[@"hash_3BEBDBAEEB3ECCCA"][@"hash_176ADD225D738C93"], "ui_contextual_2" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( self, "setState", function ( element, controller, f24_arg2, f24_arg3, f24_arg4 )
		if IsMenuInState( f2_local1, "Hidden" ) then
			CoD.GridAndListUtility.SetFocusToFirstSelectableItem( self.ButtonList ) --[[ @ 0]]
			ToggleControllerModelValueNumber( controller, "CodCaster.showQuickSettingsSideBar" ) --[[ @ 0]]
			SaveShoutcasterSettings( self, element, controller ) --[[ @ 0]]
			GoBack( self, controller ) --[[ @ 0]]
			SetLuiKeyCatcher( false ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	ButtonList.id = "ButtonList" --[[ @ 0]]
	FooterContainerIngameRight:setModel( self.buttonModel, f2_arg0 ) --[[ @ 0]]
	if CoD.isPC then
		FooterContainerIngameRight.id = "FooterContainerIngameRight" --[[ @ 0]]
	end
	if CoD.isPC then
		backButton.id = "backButton" --[[ @ 0]]
	end
	if CoD.isPC then
		resetButton.id = "resetButton" --[[ @ 0]]
	end
	self:processEvent( {
		name = "menu_loaded",
		controller = f2_arg0
	} ) --[[ @ 0]]
	self.__defaultFocus = ButtonList --[[ @ 0]]
	if CoD.isPC and (IsKeyboard( f2_arg0 ) or self.ignoreCursor) then
		self:restoreState( f2_arg0 ) --[[ @ 0]]
	end
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f2_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.CodCasterQuickSettingsSideBar.__resetProperties = function ( f25_arg0 )
	f25_arg0.backButton:completeAnimation() --[[ @ 0]]
	f25_arg0.resetButton:completeAnimation() --[[ @ 0]]
	f25_arg0.FooterContainerIngameRight:completeAnimation() --[[ @ 0]]
	f25_arg0.Title:completeAnimation() --[[ @ 0]]
	f25_arg0.BackingGrayMediumLeft:completeAnimation() --[[ @ 0]]
	f25_arg0.TopBar2:completeAnimation() --[[ @ 0]]
	f25_arg0.DotTiledBacking:completeAnimation() --[[ @ 0]]
	f25_arg0.background2:completeAnimation() --[[ @ 0]]
	f25_arg0.BGSceneBlur:completeAnimation() --[[ @ 0]]
	f25_arg0.ButtonList:completeAnimation() --[[ @ 0]]
	f25_arg0.OptionInfo:completeAnimation() --[[ @ 0]]
	f25_arg0.BackingBlack:completeAnimation() --[[ @ 0]]
	f25_arg0.Background:completeAnimation() --[[ @ 0]]
	f25_arg0.texture:completeAnimation() --[[ @ 0]]
	f25_arg0.backButton:setAlpha( 1 ) --[[ @ 0]]
	f25_arg0.backButton.ButtonContainer.Title:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_370A9FDC87CD3D48" ) ) --[[ @ 0]]
	f25_arg0.resetButton:setAlpha( 1 ) --[[ @ 0]]
	f25_arg0.resetButton.ButtonContainer.Title:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_5FA987631536BD44" ) ) --[[ @ 0]]
	f25_arg0.FooterContainerIngameRight:setLeftRight( 0, 0, 140, 720 ) --[[ @ 0]]
	f25_arg0.FooterContainerIngameRight:setTopBottom( 0, 0, 1032, 1080 ) --[[ @ 0]]
	f25_arg0.FooterContainerIngameRight:setAlpha( 1 ) --[[ @ 0]]
	f25_arg0.Title:setAlpha( 1 ) --[[ @ 0]]
	f25_arg0.BackingGrayMediumLeft:setAlpha( 1 ) --[[ @ 0]]
	f25_arg0.TopBar2:setAlpha( 0.8 ) --[[ @ 0]]
	f25_arg0.DotTiledBacking:setAlpha( 0.5 ) --[[ @ 0]]
	f25_arg0.background2:setAlpha( 0.2 ) --[[ @ 0]]
	f25_arg0.BGSceneBlur:setAlpha( 0 ) --[[ @ 0]]
	f25_arg0.ButtonList:setAlpha( 1 ) --[[ @ 0]]
	f25_arg0.OptionInfo:setAlpha( 1 ) --[[ @ 0]]
	f25_arg0.BackingBlack:setAlpha( 1 ) --[[ @ 0]]
	f25_arg0.Background:setTopBottom( 0, 0, 0, 1080 ) --[[ @ 0]]
	f25_arg0.Background:setAlpha( 1 ) --[[ @ 0]]
	f25_arg0.texture:setAlpha( 0.75 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.CodCasterQuickSettingsSideBar.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f26_arg0, f26_arg1 )
			f26_arg0:__resetProperties() --[[ @ 0]]
			f26_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f26_arg0.backButton:completeAnimation() --[[ @ 0]]
			f26_arg0.backButton.ButtonContainer.Title:completeAnimation() --[[ @ 0]]
			f26_arg0.backButton.ButtonContainer.Title:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_5FA987631536BD44" ) ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.backButton ) --[[ @ 0]]
		end
	},
	Hidden = {
		DefaultClip = function ( f27_arg0, f27_arg1 )
			f27_arg0:__resetProperties() --[[ @ 0]]
			f27_arg0:setupElementClipCounter( 13 ) --[[ @ 0]]
			f27_arg0.texture:completeAnimation() --[[ @ 0]]
			f27_arg0.texture:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.texture ) --[[ @ 0]]
			f27_arg0.Background:completeAnimation() --[[ @ 0]]
			f27_arg0.Background:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.Background ) --[[ @ 0]]
			f27_arg0.BackingBlack:completeAnimation() --[[ @ 0]]
			f27_arg0.BackingBlack:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.BackingBlack ) --[[ @ 0]]
			f27_arg0.OptionInfo:completeAnimation() --[[ @ 0]]
			f27_arg0.OptionInfo:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.OptionInfo ) --[[ @ 0]]
			f27_arg0.ButtonList:completeAnimation() --[[ @ 0]]
			f27_arg0.ButtonList:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.ButtonList ) --[[ @ 0]]
			f27_arg0.BGSceneBlur:completeAnimation() --[[ @ 0]]
			f27_arg0.BGSceneBlur:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.BGSceneBlur ) --[[ @ 0]]
			f27_arg0.background2:completeAnimation() --[[ @ 0]]
			f27_arg0.background2:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.background2 ) --[[ @ 0]]
			f27_arg0.DotTiledBacking:completeAnimation() --[[ @ 0]]
			f27_arg0.DotTiledBacking:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.DotTiledBacking ) --[[ @ 0]]
			f27_arg0.TopBar2:completeAnimation() --[[ @ 0]]
			f27_arg0.TopBar2:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.TopBar2 ) --[[ @ 0]]
			f27_arg0.BackingGrayMediumLeft:completeAnimation() --[[ @ 0]]
			f27_arg0.BackingGrayMediumLeft:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.BackingGrayMediumLeft ) --[[ @ 0]]
			f27_arg0.Title:completeAnimation() --[[ @ 0]]
			f27_arg0.Title:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.Title ) --[[ @ 0]]
			f27_arg0.FooterContainerIngameRight:completeAnimation() --[[ @ 0]]
			f27_arg0.FooterContainerIngameRight:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.FooterContainerIngameRight ) --[[ @ 0]]
			f27_arg0.backButton:completeAnimation() --[[ @ 0]]
			f27_arg0.backButton:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.backButton ) --[[ @ 0]]
			f27_arg0.resetButton:completeAnimation() --[[ @ 0]]
			f27_arg0.resetButton:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.resetButton ) --[[ @ 0]]
		end
	},
	PCGamepad = {
		DefaultClip = function ( f28_arg0, f28_arg1 )
			f28_arg0:__resetProperties() --[[ @ 0]]
			f28_arg0:setupElementClipCounter( 5 ) --[[ @ 0]]
			f28_arg0.Background:completeAnimation() --[[ @ 0]]
			f28_arg0.Background:setTopBottom( 0, 0, 0, 1200 ) --[[ @ 0]]
			f28_arg0.clipFinished( f28_arg0.Background ) --[[ @ 0]]
			f28_arg0.BackingBlack:completeAnimation() --[[ @ 0]]
			f28_arg0.BackingBlack:setAlpha( 0 ) --[[ @ 0]]
			f28_arg0.clipFinished( f28_arg0.BackingBlack ) --[[ @ 0]]
			f28_arg0.FooterContainerIngameRight:completeAnimation() --[[ @ 0]]
			f28_arg0.FooterContainerIngameRight:setLeftRight( 0, 0, 0, 820 ) --[[ @ 0]]
			f28_arg0.FooterContainerIngameRight:setTopBottom( 1, 1, -48, 0 ) --[[ @ 0]]
			f28_arg0.FooterContainerIngameRight:setAlpha( 1 ) --[[ @ 0]]
			f28_arg0.clipFinished( f28_arg0.FooterContainerIngameRight ) --[[ @ 0]]
			f28_arg0.backButton:completeAnimation() --[[ @ 0]]
			f28_arg0.backButton:setAlpha( 0 ) --[[ @ 0]]
			f28_arg0.clipFinished( f28_arg0.backButton ) --[[ @ 0]]
			f28_arg0.resetButton:completeAnimation() --[[ @ 0]]
			f28_arg0.resetButton:setAlpha( 0 ) --[[ @ 0]]
			f28_arg0.clipFinished( f28_arg0.resetButton ) --[[ @ 0]]
		end
	},
	PC = {
		DefaultClip = function ( f29_arg0, f29_arg1 )
			f29_arg0:__resetProperties() --[[ @ 0]]
			f29_arg0:setupElementClipCounter( 5 ) --[[ @ 0]]
			f29_arg0.Background:completeAnimation() --[[ @ 0]]
			f29_arg0.Background:setTopBottom( 0, 0, 0, 1200 ) --[[ @ 0]]
			f29_arg0.clipFinished( f29_arg0.Background ) --[[ @ 0]]
			f29_arg0.BackingBlack:completeAnimation() --[[ @ 0]]
			f29_arg0.BackingBlack:setAlpha( 0 ) --[[ @ 0]]
			f29_arg0.clipFinished( f29_arg0.BackingBlack ) --[[ @ 0]]
			f29_arg0.FooterContainerIngameRight:completeAnimation() --[[ @ 0]]
			f29_arg0.FooterContainerIngameRight:setLeftRight( 0, 0, 0, 820 ) --[[ @ 0]]
			f29_arg0.FooterContainerIngameRight:setTopBottom( 1, 1, -48, 0 ) --[[ @ 0]]
			f29_arg0.FooterContainerIngameRight:setAlpha( 0 ) --[[ @ 0]]
			f29_arg0.clipFinished( f29_arg0.FooterContainerIngameRight ) --[[ @ 0]]
			f29_arg0.backButton:completeAnimation() --[[ @ 0]]
			f29_arg0.backButton.ButtonContainer.Title:completeAnimation() --[[ @ 0]]
			f29_arg0.backButton.ButtonContainer.Title:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_370A9FDC87CD3D48" ) ) --[[ @ 0]]
			f29_arg0.clipFinished( f29_arg0.backButton ) --[[ @ 0]]
			f29_arg0.resetButton:completeAnimation() --[[ @ 0]]
			f29_arg0.resetButton.ButtonContainer.Title:completeAnimation() --[[ @ 0]]
			f29_arg0.resetButton:setAlpha( 1 ) --[[ @ 0]]
			f29_arg0.resetButton.ButtonContainer.Title:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_5FA987631536BD44" ) ) --[[ @ 0]]
			f29_arg0.clipFinished( f29_arg0.resetButton ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.CodCasterQuickSettingsSideBar.__onClose = function ( f30_arg0 )
	f30_arg0.Background:close() --[[ @ 0]]
	f30_arg0.BackingBlack:close() --[[ @ 0]]
	f30_arg0.OptionInfo:close() --[[ @ 0]]
	f30_arg0.ButtonList:close() --[[ @ 0]]
	f30_arg0.DotTiledBacking:close() --[[ @ 0]]
	f30_arg0.BackingGrayMediumLeft:close() --[[ @ 0]]
	f30_arg0.FooterContainerIngameRight:close() --[[ @ 0]]
	f30_arg0.backButton:close() --[[ @ 0]]
	f30_arg0.resetButton:close() --[[ @ 0]]
end
 --[[ @ 0]]
