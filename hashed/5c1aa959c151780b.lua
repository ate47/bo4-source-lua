-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
CoD.StreamItemBonusWidget = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.StreamItemBonusWidget.__defaultWidth = 138 --[[ @ 0]]
CoD.StreamItemBonusWidget.__defaultHeight = 30 --[[ @ 0]]
CoD.StreamItemBonusWidget.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.StreamItemBonusWidget ) --[[ @ 0]]
	self.id = "StreamItemBonusWidget" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local Background = LUI.UIImage.new( 0, 0, 0, 138, 0, 0, 4, 26 ) --[[ @ 0]]
	Background:setRGB( 0.34, 0.49, 0.15 ) --[[ @ 0]]
	self:addElement( Background ) --[[ @ 0]]
	self.Background = Background --[[ @ 0]]
	
	local Bonus = LUI.UIText.new( 0, 0, 3, 136, 0, 0, 6, 24 ) --[[ @ 0]]
	Bonus:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_70CD7217889FE44B" ) ) --[[ @ 0]]
	Bonus:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	Bonus:setAlignment( Enum[@"LUIAlignment"][@"hash_1FEEB12BCB0D7041"] ) --[[ @ 0]]
	Bonus:setAlignment( Enum[@"LUIAlignment"][@"hash_E821F0ECFF8D1C7"] ) --[[ @ 0]]
	self:addElement( Bonus ) --[[ @ 0]]
	self.Bonus = Bonus --[[ @ 0]]
	
	local PixelGridTiledBacking = LUI.UIImage.new( 0, 1, 0, 0, 0.13, 0.87, 0, 0 ) --[[ @ 0]]
	PixelGridTiledBacking:setAlpha( 0.3 ) --[[ @ 0]]
	PixelGridTiledBacking:setImage( RegisterImage( @"uie_ui_hud_notifications_pixelpattern" ) ) --[[ @ 0]]
	PixelGridTiledBacking:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_67C9C02F608D0A75" ) ) --[[ @ 0]]
	PixelGridTiledBacking:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	PixelGridTiledBacking:setupNineSliceShader( 128, 128 ) --[[ @ 0]]
	self:addElement( PixelGridTiledBacking ) --[[ @ 0]]
	self.PixelGridTiledBacking = PixelGridTiledBacking --[[ @ 0]]
	
	local HeaderGlow = LUI.UIImage.new( 0, 0, -5, 143, 0, 0, -1, 32 ) --[[ @ 0]]
	HeaderGlow:setRGB( 0.42, 0.64, 0.28 ) --[[ @ 0]]
	HeaderGlow:setAlpha( 0.1 ) --[[ @ 0]]
	HeaderGlow:setImage( RegisterImage( @"uie_ui_menu_common_box_glow" ) ) --[[ @ 0]]
	HeaderGlow:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_add" ) ) --[[ @ 0]]
	HeaderGlow:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	HeaderGlow:setupNineSliceShader( 12, 12 ) --[[ @ 0]]
	self:addElement( HeaderGlow ) --[[ @ 0]]
	self.HeaderGlow = HeaderGlow --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "SetComplete",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg1, "setComplete" )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "setComplete", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "setComplete"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.StreamItemBonusWidget.__resetProperties = function ( f4_arg0 )
	f4_arg0.Bonus:completeAnimation() --[[ @ 0]]
	f4_arg0.Background:completeAnimation() --[[ @ 0]]
	f4_arg0.PixelGridTiledBacking:completeAnimation() --[[ @ 0]]
	f4_arg0.HeaderGlow:completeAnimation() --[[ @ 0]]
	f4_arg0.Bonus:setAlpha( 1 ) --[[ @ 0]]
	f4_arg0.Background:setAlpha( 1 ) --[[ @ 0]]
	f4_arg0.PixelGridTiledBacking:setAlpha( 0.3 ) --[[ @ 0]]
	f4_arg0.HeaderGlow:setAlpha( 0.1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.StreamItemBonusWidget.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f5_arg0, f5_arg1 )
			f5_arg0:__resetProperties() --[[ @ 0]]
			f5_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f5_arg0.Background:completeAnimation() --[[ @ 0]]
			f5_arg0.Background:setAlpha( 0 ) --[[ @ 0]]
			f5_arg0.clipFinished( f5_arg0.Background ) --[[ @ 0]]
			f5_arg0.Bonus:completeAnimation() --[[ @ 0]]
			f5_arg0.Bonus:setAlpha( 0 ) --[[ @ 0]]
			f5_arg0.clipFinished( f5_arg0.Bonus ) --[[ @ 0]]
			f5_arg0.PixelGridTiledBacking:completeAnimation() --[[ @ 0]]
			f5_arg0.PixelGridTiledBacking:setAlpha( 0 ) --[[ @ 0]]
			f5_arg0.clipFinished( f5_arg0.PixelGridTiledBacking ) --[[ @ 0]]
			f5_arg0.HeaderGlow:completeAnimation() --[[ @ 0]]
			f5_arg0.HeaderGlow:setAlpha( 0 ) --[[ @ 0]]
			f5_arg0.clipFinished( f5_arg0.HeaderGlow ) --[[ @ 0]]
		end
	},
	SetComplete = {
		DefaultClip = function ( f6_arg0, f6_arg1 )
			f6_arg0:__resetProperties() --[[ @ 0]]
			f6_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f6_arg0.Background:completeAnimation() --[[ @ 0]]
			f6_arg0.Background:setAlpha( 1 ) --[[ @ 0]]
			f6_arg0.clipFinished( f6_arg0.Background ) --[[ @ 0]]
			f6_arg0.Bonus:completeAnimation() --[[ @ 0]]
			f6_arg0.Bonus:setAlpha( 1 ) --[[ @ 0]]
			f6_arg0.clipFinished( f6_arg0.Bonus ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
