-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
require( "ui/uieditor/menus/challenges/challenges" ) --[[ @ 0]]
require( "x64:2715c17feb5d981e" ) --[[ @ 0]]
require( "x64:5f2b682f28d27631" ) --[[ @ 0]]
require( "x64:34f2b91f8688c47b" ) --[[ @ 0]]

CoD.ChallengesSummaryCategoryList_ZM = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.ChallengesSummaryCategoryList_ZM.__defaultWidth = 1175 --[[ @ 0]]
CoD.ChallengesSummaryCategoryList_ZM.__defaultHeight = 225 --[[ @ 0]]
CoD.ChallengesSummaryCategoryList_ZM.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIHorizontalList.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9, 44, false ) --[[ @ 0]]
	self:setAlignment( LUI.Alignment.Left ) --[[ @ 0]]
	self:setClass( CoD.ChallengesSummaryCategoryList_ZM ) --[[ @ 0]]
	self.id = "ChallengesSummaryCategoryList_ZM" --[[ @ 0]]
	self.soundSet = "FrontendMain" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	
	local Toolkit = CoD.ChallengesSummaryCategory.new( f1_arg0, f1_arg1, 0, 0, 0, 363, 0.5, 0.5, -112.5, 112.5 ) --[[ @ 0]]
	Toolkit.SummaryCategory.Icon:setImage( RegisterImage( @"ui_icon_challenges_zmexpert" ) ) --[[ @ 0]]
	Toolkit.SummaryCategory.Name:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_6892ED10E8BF4877" ) ) --[[ @ 0]]
	Toolkit:subscribeToGlobalModel( f1_arg1, "ChallengesZMCategoryStats", "expert", function ( model )
		Toolkit:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	Toolkit:registerEventHandler( "gain_focus", function ( element, event )
		local f3_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f3_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f3_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f3_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( Toolkit, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		if not IsElementInState( element, "Locked" ) then
			SetGlobalModelValue( "defaultChallengeTab", "expert" ) --[[ @ 0]]
			PlaySoundAlias( "uin_toggle_generic" ) --[[ @ 0]]
			OpenOverlay( self, "Challenges", controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsElementInState( element, "Locked" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, "ui_confirm" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( Toolkit ) --[[ @ 0]]
	self.Toolkit = Toolkit --[[ @ 0]]
	
	local Expert = CoD.ChallengesSummaryCategory.new( f1_arg0, f1_arg1, 0, 0, 407, 770, 0.5, 0.5, -112.5, 112.5 ) --[[ @ 0]]
	Expert.SummaryCategory.Icon:setImage( RegisterImage( @"ui_icon_challenges_zmtoolkit" ) ) --[[ @ 0]]
	Expert.SummaryCategory.Name:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_1677D363E896D453" ) ) --[[ @ 0]]
	Expert:subscribeToGlobalModel( f1_arg1, "ChallengesZMCategoryStats", "toolkit", function ( model )
		Expert:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	Expert:registerEventHandler( "gain_focus", function ( element, event )
		local f7_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f7_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f7_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f7_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( Expert, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		if not IsElementInState( element, "Locked" ) then
			SetGlobalModelValue( "defaultChallengeTab", "toolkit" ) --[[ @ 0]]
			PlaySoundAlias( "uin_toggle_generic" ) --[[ @ 0]]
			OpenOverlay( self, "Challenges", controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsElementInState( element, "Locked" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, "ui_confirm" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( Expert ) --[[ @ 0]]
	self.Expert = Expert --[[ @ 0]]
	
	local DarkOps = CoD.ChallengesSummaryDarkOps.new( f1_arg0, f1_arg1, 0, 0, 814, 1177, 0.5, 0.5, -112.5, 112.5 ) --[[ @ 0]]
	DarkOps:mergeStateConditions( {
		{
			stateName = "Zombie",
			condition = function ( menu, element, event )
				return IsZombies() and AlwaysTrue()
			end
		}
	} ) --[[ @ 0]]
	local f1_local4 = DarkOps --[[ @ 0]]
	local f1_local5 = DarkOps.subscribeToModel --[[ @ 0]]
	local f1_local6 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local5( f1_local4, f1_local6["lobbyRoot.lobbyNav"], function ( f11_arg0 )
		f1_arg0:updateElementState( DarkOps, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f11_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	DarkOps.SummaryCategoryBlackOps.Icon:setImage( RegisterImage( @"ui_icon_challenges_zmdarkops" ) ) --[[ @ 0]]
	DarkOps:registerEventHandler( "gain_focus", function ( element, event )
		local f12_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f12_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f12_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f12_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( DarkOps, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		if not IsElementInState( element, "Locked" ) then
			PlaySoundAlias( "uin_toggle_generic" ) --[[ @ 0]]
			OpenOverlay( self, "ChallengesDarkOps", controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsElementInState( element, "Locked" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, "ui_confirm" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( DarkOps ) --[[ @ 0]]
	self.DarkOps = DarkOps --[[ @ 0]]
	
	Toolkit.id = "Toolkit" --[[ @ 0]]
	Expert.id = "Expert" --[[ @ 0]]
	DarkOps.id = "DarkOps" --[[ @ 0]]
	self.__defaultFocus = Toolkit --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.ChallengesSummaryCategoryList_ZM.__onClose = function ( f15_arg0 )
	f15_arg0.Toolkit:close() --[[ @ 0]]
	f15_arg0.Expert:close() --[[ @ 0]]
	f15_arg0.DarkOps:close() --[[ @ 0]]
end
 --[[ @ 0]]
