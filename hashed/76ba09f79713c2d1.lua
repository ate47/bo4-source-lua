-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:50
require( "x64:33fb470eb47879e8" ) --[[ @ 0]]
require( "ui/uieditor/widgets/lobby/common/vodpreviewwidget" ) --[[ @ 0]]

CoD.DossierVoDPreview = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.DossierVoDPreview.__defaultWidth = 510 --[[ @ 0]]
CoD.DossierVoDPreview.__defaultHeight = 380 --[[ @ 0]]
CoD.DossierVoDPreview.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.DossierVoDPreview ) --[[ @ 0]]
	self.id = "DossierVoDPreview" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local IntroPreview = CoD.VoDPreviewWidget.new( f1_arg0, f1_arg1, 0, 0, 0, 510, 0, 0, 0, 293 ) --[[ @ 0]]
	IntroPreview:mergeStateConditions( {
		{
			stateName = "NoMovie",
			condition = function ( menu, element, event )
				return CoD.PlayerRoleUtility.DisableVideoPlayer( element, f1_arg1 )
			end
		},
		{
			stateName = "NoFocus",
			condition = function ( menu, element, event )
				return AlwaysTrue()
			end
		}
	} ) --[[ @ 0]]
	IntroPreview:linkToElementModel( IntroPreview, "lowResVideo.movieName", true, function ( model )
		f1_arg0:updateElementState( IntroPreview, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "lowResVideo.movieName"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	IntroPreview:linkToElementModel( self, nil, false, function ( model )
		IntroPreview:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( IntroPreview ) --[[ @ 0]]
	self.IntroPreview = IntroPreview --[[ @ 0]]
	
	local Title = LUI.UIText.new( 0, 0, 0, 510, 0, 0, 303, 339 ) --[[ @ 0]]
	Title:setRGB( 0.92, 0.89, 0.72 ) --[[ @ 0]]
	Title:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"menu/new" ) ) --[[ @ 0]]
	Title:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	Title:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	Title:setAlignment( Enum[@"luialignment"][@"hash_E821F0ECFF8D1C7"] ) --[[ @ 0]]
	self:addElement( Title ) --[[ @ 0]]
	self.Title = Title --[[ @ 0]]
	
	local Play = CoD.VodButtonPrompt.new( f1_arg0, f1_arg1, 0, 0, 0, 200, 1, 1, -33, 0 ) --[[ @ 0]]
	Play:setAlpha( 0 ) --[[ @ 0]]
	Play.Play:setText( LocalizeToUpperString( @"hash_D31D493AE40DA0F" ) ) --[[ @ 0]]
	Play:subscribeToGlobalModel( f1_arg1, "Controller", "primary_button_image", function ( model )
		local f6_local0 = model:get() --[[ @ 0]]
		if f6_local0 ~= nil then
			Play.buttonPromptImage:setImage( RegisterImage( f6_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Play ) --[[ @ 0]]
	self.Play = Play --[[ @ 0]]
	
	local Fullscreen = CoD.VodButtonPrompt.new( f1_arg0, f1_arg1, 1, 1, -200, 0, 1, 1, -33, 0 ) --[[ @ 0]]
	Fullscreen:setAlpha( 0 ) --[[ @ 0]]
	Fullscreen.Play:setText( LocalizeToUpperString( @"hash_323594B6BDE14144" ) ) --[[ @ 0]]
	Fullscreen:subscribeToGlobalModel( f1_arg1, "Controller", "alt2_button_image", function ( model )
		local f7_local0 = model:get() --[[ @ 0]]
		if f7_local0 ~= nil then
			Fullscreen.buttonPromptImage:setImage( RegisterImage( f7_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Fullscreen ) --[[ @ 0]]
	self.Fullscreen = Fullscreen --[[ @ 0]]
	
	local Desc = LUI.UIText.new( 0, 0, 0, 510, 0, 0, 347, 377 ) --[[ @ 0]]
	Desc:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	Desc:setAlpha( 0 ) --[[ @ 0]]
	Desc:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"menu/new" ) ) --[[ @ 0]]
	Desc:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	Desc:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	Desc:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	self:addElement( Desc ) --[[ @ 0]]
	self.Desc = Desc --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "MatureContentFiltered",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		},
		{
			stateName = "Classified",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		},
		{
			stateName = "PC",
			condition = function ( menu, element, event )
				return IsPC()
			end
		}
	} ) --[[ @ 0]]
	IntroPreview.id = "IntroPreview" --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.DossierVoDPreview.__resetProperties = function ( f11_arg0 )
	f11_arg0.Play:completeAnimation() --[[ @ 0]]
	f11_arg0.Fullscreen:completeAnimation() --[[ @ 0]]
	f11_arg0.Desc:completeAnimation() --[[ @ 0]]
	f11_arg0.Title:completeAnimation() --[[ @ 0]]
	f11_arg0.IntroPreview:completeAnimation() --[[ @ 0]]
	f11_arg0.Play:setAlpha( 0 ) --[[ @ 0]]
	f11_arg0.Fullscreen:setAlpha( 0 ) --[[ @ 0]]
	f11_arg0.Desc:setAlpha( 0 ) --[[ @ 0]]
	f11_arg0.Title:setAlpha( 1 ) --[[ @ 0]]
	f11_arg0.IntroPreview:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DossierVoDPreview.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f12_arg0, f12_arg1 )
			f12_arg0:__resetProperties() --[[ @ 0]]
			f12_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	MatureContentFiltered = {
		DefaultClip = function ( f13_arg0, f13_arg1 )
			f13_arg0:__resetProperties() --[[ @ 0]]
			f13_arg0:setupElementClipCounter( 5 ) --[[ @ 0]]
			f13_arg0.IntroPreview:completeAnimation() --[[ @ 0]]
			f13_arg0.IntroPreview:setAlpha( 0 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.IntroPreview ) --[[ @ 0]]
			f13_arg0.Title:completeAnimation() --[[ @ 0]]
			f13_arg0.Title:setAlpha( 0 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.Title ) --[[ @ 0]]
			f13_arg0.Play:completeAnimation() --[[ @ 0]]
			f13_arg0.Play:setAlpha( 0 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.Play ) --[[ @ 0]]
			f13_arg0.Fullscreen:completeAnimation() --[[ @ 0]]
			f13_arg0.Fullscreen:setAlpha( 0 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.Fullscreen ) --[[ @ 0]]
			f13_arg0.Desc:completeAnimation() --[[ @ 0]]
			f13_arg0.Desc:setAlpha( 0 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.Desc ) --[[ @ 0]]
		end
	},
	Classified = {
		DefaultClip = function ( f14_arg0, f14_arg1 )
			f14_arg0:__resetProperties() --[[ @ 0]]
			f14_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f14_arg0.Play:completeAnimation() --[[ @ 0]]
			f14_arg0.Play:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.Play ) --[[ @ 0]]
			f14_arg0.Fullscreen:completeAnimation() --[[ @ 0]]
			f14_arg0.Fullscreen:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.Fullscreen ) --[[ @ 0]]
			f14_arg0.Desc:completeAnimation() --[[ @ 0]]
			f14_arg0.Desc:setAlpha( 1 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.Desc ) --[[ @ 0]]
		end
	},
	PC = {
		DefaultClip = function ( f15_arg0, f15_arg1 )
			f15_arg0:__resetProperties() --[[ @ 0]]
			f15_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f15_arg0.Play:completeAnimation() --[[ @ 0]]
			f15_arg0.Play:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.Play ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.DossierVoDPreview.__onClose = function ( f16_arg0 )
	f16_arg0.IntroPreview:close() --[[ @ 0]]
	f16_arg0.Play:close() --[[ @ 0]]
	f16_arg0.Fullscreen:close() --[[ @ 0]]
end
 --[[ @ 0]]
