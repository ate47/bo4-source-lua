-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:50
require( "ui/uieditor/widgets/border" ) --[[ @ 0]]

CoD.vehicleCollisionWarning = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.vehicleCollisionWarning.__defaultWidth = 250 --[[ @ 0]]
CoD.vehicleCollisionWarning.__defaultHeight = 41 --[[ @ 0]]
CoD.vehicleCollisionWarning.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.vehicleCollisionWarning ) --[[ @ 0]]
	self.id = "vehicleCollisionWarning" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local Border = CoD.Border.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	Border:setRGB( 1, 0.52, 0 ) --[[ @ 0]]
	self:addElement( Border ) --[[ @ 0]]
	self.Border = Border --[[ @ 0]]
	
	local text = LUI.UIText.new( 0.5, 0.5, -125, 125, 0.5, 0.5, -18.5, 18.5 ) --[[ @ 0]]
	text:setRGB( 1, 0.52, 0 ) --[[ @ 0]]
	text:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_5991968E9BE6C1EA" ) ) --[[ @ 0]]
	text:setTTF( "default" ) --[[ @ 0]]
	text:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_56250C6FCAC36BD4" ) ) --[[ @ 0]]
	text:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	text:setShaderVector( 1, 1, 0, 0, 1 ) --[[ @ 0]]
	text:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( text, "setText", function ( element, controller )
		ScaleWidgetToLabel( self, element, 12 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( text ) --[[ @ 0]]
	self.text = text --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "On",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueTrue( self, f1_arg1, "showCollisionWarning" ) and CoD.ModelUtility.IsSelfModelValueGreaterThan( self, f1_arg1, "collisionWarning", 0 )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "showCollisionWarning", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "showCollisionWarning"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:linkToElementModel( self, "collisionWarning", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "collisionWarning"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.vehicleCollisionWarning.__resetProperties = function ( f6_arg0 )
	f6_arg0.text:completeAnimation() --[[ @ 0]]
	f6_arg0.Border:completeAnimation() --[[ @ 0]]
	f6_arg0.text:setAlpha( 1 ) --[[ @ 0]]
	f6_arg0.text:setScale( 1, 1 ) --[[ @ 0]]
	f6_arg0.text:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_56250C6FCAC36BD4" ) ) --[[ @ 0]]
	f6_arg0.text:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	f6_arg0.text:setShaderVector( 1, 1, 0, 0, 1 ) --[[ @ 0]]
	f6_arg0.text:setRFTMaterial( LUI.UIImage.GetCachedMaterial( @"ui_normal" ) ) --[[ @ 0]]
	f6_arg0.Border:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.vehicleCollisionWarning.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f7_arg0, f7_arg1 )
			f7_arg0:__resetProperties() --[[ @ 0]]
			f7_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f7_arg0.Border:completeAnimation() --[[ @ 0]]
			f7_arg0.Border:setAlpha( 0 ) --[[ @ 0]]
			f7_arg0.clipFinished( f7_arg0.Border ) --[[ @ 0]]
			f7_arg0.text:completeAnimation() --[[ @ 0]]
			f7_arg0.text:setAlpha( 0 ) --[[ @ 0]]
			f7_arg0.clipFinished( f7_arg0.text ) --[[ @ 0]]
		end
	},
	On = {
		DefaultClip = function ( f8_arg0, f8_arg1 )
			f8_arg0:__resetProperties() --[[ @ 0]]
			f8_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f8_arg0.Border:completeAnimation() --[[ @ 0]]
			f8_arg0.Border:setAlpha( 1 ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.Border ) --[[ @ 0]]
			local f8_local0 = function ( f9_arg0 )
				local f9_local0 = function ( f10_arg0 )
					f10_arg0:beginAnimation( 500 ) --[[ @ 0]]
					f10_arg0:setScale( 1, 1 ) --[[ @ 0]]
					f10_arg0:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
					f10_arg0:registerEventHandler( "transition_complete_keyframe", f8_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f8_arg0.text:beginAnimation( 500 ) --[[ @ 0]]
				f8_arg0.text:setScale( 1.15, 1.15 ) --[[ @ 0]]
				f8_arg0.text:setShaderVector( 0, 0.11, 0, 0, 0 ) --[[ @ 0]]
				f8_arg0.text:registerEventHandler( "interrupted_keyframe", f8_arg0.clipInterrupted ) --[[ @ 0]]
				f8_arg0.text:registerEventHandler( "transition_complete_keyframe", f9_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f8_arg0.text:completeAnimation() --[[ @ 0]]
			f8_arg0.text:setAlpha( 1 ) --[[ @ 0]]
			f8_arg0.text:setScale( 1, 1 ) --[[ @ 0]]
			f8_arg0.text:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_56250C6FCAC36BD4" ) ) --[[ @ 0]]
			f8_arg0.text:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
			f8_arg0.text:setShaderVector( 1, 1, 0.46, 0, 1 ) --[[ @ 0]]
			f8_arg0.text:setRFTMaterial( LUI.UIImage.GetCachedMaterial( @"ui_normal" ) ) --[[ @ 0]]
			f8_local0( f8_arg0.text ) --[[ @ 0]]
			f8_arg0.nextClip = "DefaultClip" --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.vehicleCollisionWarning.__onClose = function ( f11_arg0 )
	f11_arg0.Border:close() --[[ @ 0]]
end
 --[[ @ 0]]
