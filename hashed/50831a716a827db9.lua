-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
require( "x64:f00a10fc8301da2" ) --[[ @ 0]]
require( "ui/uieditor/widgets/backgroundframes/genericmenuframe" ) --[[ @ 0]]
require( "x64:357cc8e6b7e37b6b" ) --[[ @ 0]]
require( "ui/uieditor/widgets/startmenu/options/startmenuoptionsbackground" ) --[[ @ 0]]

CoD.PaintshopChooseIcon = InheritFrom( CoD.Menu ) --[[ @ 0]]
LUI.createMenu.PaintshopChooseIcon = function ( f1_arg0, f1_arg1 )
	local self = CoD.Menu.NewForUIEditor( "PaintshopChooseIcon", f1_arg0 ) --[[ @ 0]]
	local f1_local1 = self --[[ @ 0]]
	SetMenuProperty( f1_local1, "_isEditor", "true" ) --[[ @ 0]]
	CoD.BaseUtility.SetPropertiesFromUserData( self, f1_arg1 ) --[[ @ 0]]
	CoD.CraftUtility.InvalidateSelectedDecalCategory( f1_arg0 ) --[[ @ 0]]
	self:setClass( CoD.PaintshopChooseIcon ) --[[ @ 0]]
	self.soundSet = "ChooseDecal" --[[ @ 0]]
	self:setOwner( f1_arg0 ) --[[ @ 0]]
	self:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	self:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	self:playSound( "menu_open", f1_arg0 ) --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_local1:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local Background = CoD.StartMenuOptionsBackground.new( f1_local1, f1_arg0, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	Background:setAlpha( 0 ) --[[ @ 0]]
	Background.BGBlur:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( Background ) --[[ @ 0]]
	self.Background = Background --[[ @ 0]]
	
	local AARCommonBacking = CoD.AARCommonBacking.new( f1_local1, f1_arg0, -0.5, 0.5, 130, 130, 0, 1, 0, 0 ) --[[ @ 0]]
	AARCommonBacking.Backer:setRGB( 0, 0, 0 ) --[[ @ 0]]
	AARCommonBacking.Backer:setAlpha( 0.6 ) --[[ @ 0]]
	self:addElement( AARCommonBacking ) --[[ @ 0]]
	self.AARCommonBacking = AARCommonBacking --[[ @ 0]]
	
	local BGEnhancement = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	BGEnhancement:setRGB( 0, 0, 0 ) --[[ @ 0]]
	BGEnhancement:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( BGEnhancement ) --[[ @ 0]]
	self.BGEnhancement = BGEnhancement --[[ @ 0]]
	
	local NoiseTiledBacking = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	NoiseTiledBacking:setAlpha( 0.05 ) --[[ @ 0]]
	NoiseTiledBacking:setImage( RegisterImage( @"uie_ui_menu_specialist_hub_repeat_bg" ) ) --[[ @ 0]]
	NoiseTiledBacking:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_16CBE95C250C6D15" ) ) --[[ @ 0]]
	NoiseTiledBacking:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	NoiseTiledBacking:setupNineSliceShader( 196, 88 ) --[[ @ 0]]
	self:addElement( NoiseTiledBacking ) --[[ @ 0]]
	self.NoiseTiledBacking = NoiseTiledBacking --[[ @ 0]]
	
	local TiledPlusGrid = LUI.UIImage.new( 0, 1.07, -135, -135, 0, 0, 0, 1080 ) --[[ @ 0]]
	TiledPlusGrid:setAlpha( 0.05 ) --[[ @ 0]]
	TiledPlusGrid:setImage( RegisterImage( @"uie_ui_hud_vehicle_hellstorm_repeat_plusgrid" ) ) --[[ @ 0]]
	TiledPlusGrid:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_67C9C02F608D0A75" ) ) --[[ @ 0]]
	TiledPlusGrid:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	TiledPlusGrid:setupNineSliceShader( 220, 220 ) --[[ @ 0]]
	self:addElement( TiledPlusGrid ) --[[ @ 0]]
	self.TiledPlusGrid = TiledPlusGrid --[[ @ 0]]
	
	local editorBackground = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	editorBackground:setRGB( 0, 0, 0 ) --[[ @ 0]]
	editorBackground:setAlpha( 0.75 ) --[[ @ 0]]
	self:addElement( editorBackground ) --[[ @ 0]]
	self.editorBackground = editorBackground --[[ @ 0]]
	
	local BgGrain = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	BgGrain:setAlpha( 0.3 ) --[[ @ 0]]
	BgGrain:setImage( RegisterImage( @"uie_ui_menu_specialist_hub_repeat_bg" ) ) --[[ @ 0]]
	BgGrain:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_16CBE95C250C6D15" ) ) --[[ @ 0]]
	BgGrain:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	BgGrain:setupNineSliceShader( 196, 88 ) --[[ @ 0]]
	self:addElement( BgGrain ) --[[ @ 0]]
	self.BgGrain = BgGrain --[[ @ 0]]
	
	local MenuFrame = CoD.GenericMenuFrame.new( f1_local1, f1_arg0, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	MenuFrame.CommonHeader.subtitle.StageTitle:setText( LocalizeToUpperString( @"hash_BC5A0D7A77F15BB" ) ) --[[ @ 0]]
	MenuFrame:subscribeToGlobalModel( f1_arg0, "LobbyRoot", "lobbyTitle", function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			MenuFrame.CommonHeader.subtitle.subtitle:setText( Engine[@"hash_4F9F1239CFD921FE"]( f2_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( MenuFrame ) --[[ @ 0]]
	self.MenuFrame = MenuFrame --[[ @ 0]]
	
	local DecalListFrame = LUI.UIFrame.new( f1_local1, f1_arg0, 0, 0, false ) --[[ @ 0]]
	DecalListFrame:setLeftRight( 0.5, 0.5, -910, 910 ) --[[ @ 0]]
	DecalListFrame:setTopBottom( 0.5, 0.5, -452.5, 512.5 ) --[[ @ 0]]
	self:addElement( DecalListFrame ) --[[ @ 0]]
	self.DecalListFrame = DecalListFrame --[[ @ 0]]
	
	local SafeAreaContainer = CoD.PaintshopSafeAreaContainer.new( f1_local1, f1_arg0, 0.5, 0.5, -960, 960, 0.5, 0.5, -540, 540 ) --[[ @ 0]]
	SafeAreaContainer:registerEventHandler( "menu_loaded", function ( element, event )
		local f3_local0 = nil --[[ @ 0]]
		if element.menuLoaded then
			f3_local0 = element:menuLoaded( event ) --[[ @ 0]]
		elseif element.super.menuLoaded then
			f3_local0 = element.super:menuLoaded( event ) --[[ @ 0]]
		end
		SizeToSafeArea( element, f1_arg0 ) --[[ @ 0]]
		if not f3_local0 then
			f3_local0 = element:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f3_local0
	end ) --[[ @ 0]]
	self:addElement( SafeAreaContainer ) --[[ @ 0]]
	self.SafeAreaContainer = SafeAreaContainer --[[ @ 0]]
	
	DecalListFrame:linkToElementModel( SafeAreaContainer.CommonTabBar.Tabs.grid, nil, false, function ( model )
		DecalListFrame:setModel( model, f1_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	DecalListFrame:linkToElementModel( SafeAreaContainer.CommonTabBar.Tabs.grid, "frameWidget", true, function ( model )
		local f5_local0 = model:get() --[[ @ 0]]
		if f5_local0 ~= nil then
			DecalListFrame:changeFrameWidget( f5_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:mergeStateConditions( {
		{
			stateName = "EmblemEditor",
			condition = function ( menu, element, event )
				return IsEmblemEditor( f1_arg0 )
			end
		},
		{
			stateName = "Paintshop",
			condition = function ( menu, element, event )
				return IsPaintshop( f1_arg0 )
			end
		}
	} ) --[[ @ 0]]
	self:registerEventHandler( "menu_loaded", function ( self, event )
		local f8_local0 = nil --[[ @ 0]]
		if self.menuLoaded then
			f8_local0 = self:menuLoaded( event ) --[[ @ 0]]
		elseif self.super.menuLoaded then
			f8_local0 = self.super:menuLoaded( event ) --[[ @ 0]]
		end
		if IsEmblemEditor( f1_arg0 ) then
			SendClientScriptMenuChangeNotify( f1_arg0, f1_local1, true ) --[[ @ 0]]
		elseif IsPaintshop( f1_arg0 ) then
			CoD.CraftUtility.EmblemChooseIcon_SetPreviewDecalCamera( self, self, f1_arg0 ) --[[ @ 0]]
		end
		if not f8_local0 then
			f8_local0 = self:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f8_local0
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"], nil, function ( element, menu, controller, model )
		if IsEmblemEditor( controller ) then
			CoD.CraftUtility.EmblemChooseIcon_SelectionRejected( self, element, controller ) --[[ @ 0]]
			GoBack( self, controller ) --[[ @ 0]]
			ClearMenuSavedState( menu ) --[[ @ 0]]
			return true
		elseif IsPaintshop( controller ) then
			CoD.CraftUtility.EmblemChooseIcon_SelectionRejected( self, element, controller ) --[[ @ 0]]
			CoD.CraftUtility.EmblemChooseIcon_RevertPreviewDecalCamera( self, element, controller ) --[[ @ 0]]
			GoBack( self, controller ) --[[ @ 0]]
			ClearMenuSavedState( menu ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsEmblemEditor( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"], @"hash_370A9FDC87CD3D48", nil, nil ) --[[ @ 0]]
			return true
		elseif IsPaintshop( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"], @"hash_370A9FDC87CD3D48", nil, nil ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"LUIButton"][@"hash_222361E23588705A"], nil, function ( element, menu, controller, model )
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_222361E23588705A"], @"hash_0", nil, nil ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( self, "close", function ( element )
		CoD.CraftUtility.EmblemChooseIcon_Cleanup( self, f1_arg0 ) --[[ @ 0]]
		SendClientScriptMenuChangeNotify( f1_arg0, f1_local1, false ) --[[ @ 0]]
	end ) --[[ @ 0]]
	MenuFrame:setModel( self.buttonModel, f1_arg0 ) --[[ @ 0]]
	if CoD.isPC then
		MenuFrame.id = "MenuFrame" --[[ @ 0]]
	end
	DecalListFrame.id = "DecalListFrame" --[[ @ 0]]
	SafeAreaContainer.id = "SafeAreaContainer" --[[ @ 0]]
	self:processEvent( {
		name = "menu_loaded",
		controller = f1_arg0
	} ) --[[ @ 0]]
	self.__defaultFocus = DecalListFrame --[[ @ 0]]
	if CoD.isPC and (IsKeyboard( f1_arg0 ) or self.ignoreCursor) then
		self:restoreState( f1_arg0 ) --[[ @ 0]]
	end
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.PaintshopChooseIcon.__resetProperties = function ( f14_arg0 )
	f14_arg0.editorBackground:completeAnimation() --[[ @ 0]]
	f14_arg0.editorBackground:setAlpha( 0.75 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.PaintshopChooseIcon.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f15_arg0, f15_arg1 )
			f15_arg0:__resetProperties() --[[ @ 0]]
			f15_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	EmblemEditor = {
		DefaultClip = function ( f16_arg0, f16_arg1 )
			f16_arg0:__resetProperties() --[[ @ 0]]
			f16_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	Paintshop = {
		DefaultClip = function ( f17_arg0, f17_arg1 )
			f17_arg0:__resetProperties() --[[ @ 0]]
			f17_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f17_arg0.editorBackground:completeAnimation() --[[ @ 0]]
			f17_arg0.editorBackground:setAlpha( 0 ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.editorBackground ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.PaintshopChooseIcon.__onClose = function ( f18_arg0 )
	f18_arg0.DecalListFrame:close() --[[ @ 0]]
	f18_arg0.Background:close() --[[ @ 0]]
	f18_arg0.AARCommonBacking:close() --[[ @ 0]]
	f18_arg0.MenuFrame:close() --[[ @ 0]]
	f18_arg0.SafeAreaContainer:close() --[[ @ 0]]
end
 --[[ @ 0]]
