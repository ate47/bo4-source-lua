-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:35
require( "ui/uieditor/widgets/cac/weaponattachmentselect/attachmentupgradearrow" ) --[[ @ 0]]

CoD.BountyHunterPackageTierSeparator = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.BountyHunterPackageTierSeparator.__defaultWidth = 25 --[[ @ 0]]
CoD.BountyHunterPackageTierSeparator.__defaultHeight = 115 --[[ @ 0]]
CoD.BountyHunterPackageTierSeparator.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.BountyHunterPackageTierSeparator ) --[[ @ 0]]
	self.id = "BountyHunterPackageTierSeparator" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local Separator = CoD.AttachmentUpgradeArrow.new( f1_arg0, f1_arg1, 0.5, 0.5, -41, 41, 0.5, 0.5, -26, 26 ) --[[ @ 0]]
	Separator:mergeStateConditions( {
		{
			stateName = "UpgradeAvailable",
			condition = function ( menu, element, event )
				return CoD.BountyHunterUtility.IsPackageTierSeparatorActive( self )
			end
		}
	} ) --[[ @ 0]]
	Separator:linkToElementModel( Separator, "trackModel", true, function ( model )
		if Separator["__stateValidation_trackModel->tierPurchased"] then
			Separator:removeSubscription( Separator["__stateValidation_trackModel->tierPurchased"] ) --[[ @ 0]]
			Separator["__stateValidation_trackModel->tierPurchased"] = nil --[[ @ 0]]
		end
		if model then
			local f3_local0 = model:get() --[[ @ 0]]
			local f3_local1 = model:get() --[[ @ 0]]
			model = f3_local0 and f3_local1.tierPurchased --[[ @ 0]]
		end
		if model then
			Separator["__stateValidation_trackModel->tierPurchased"] = Separator:subscribeToModel( model, function ( model )
				f1_arg0:updateElementState( Separator, {
					name = "model_validation",
					menu = f1_arg0,
					controller = f1_arg1,
					modelValue = model:get(),
					modelName = "trackModel->tierPurchased"
				} ) --[[ @ 0]]
			end ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	Separator:setZRot( 90 ) --[[ @ 0]]
	Separator:linkToElementModel( self, nil, false, function ( model )
		Separator:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( Separator ) --[[ @ 0]]
	self.Separator = Separator --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "FirstItem",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualTo( element, f1_arg1, "trackTier", 1 )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "trackTier", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "trackTier"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.BountyHunterPackageTierSeparator.__resetProperties = function ( f8_arg0 )
	f8_arg0.Separator:completeAnimation() --[[ @ 0]]
	f8_arg0.Separator:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.BountyHunterPackageTierSeparator.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f9_arg0, f9_arg1 )
			f9_arg0:__resetProperties() --[[ @ 0]]
			f9_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	FirstItem = {
		DefaultClip = function ( f10_arg0, f10_arg1 )
			f10_arg0:__resetProperties() --[[ @ 0]]
			f10_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f10_arg0.Separator:completeAnimation() --[[ @ 0]]
			f10_arg0.Separator:setAlpha( 0 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.Separator ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.BountyHunterPackageTierSeparator.__onClose = function ( f11_arg0 )
	f11_arg0.Separator:close() --[[ @ 0]]
end
 --[[ @ 0]]
