-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:35
require( "ui/uieditor/widgets/notifications/notificationqueuewidgets/notificationrewardqueuewidgets/notification2xpreward" ) --[[ @ 0]]

CoD.IconRewardWidget = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.IconRewardWidget.__defaultWidth = 72 --[[ @ 0]]
CoD.IconRewardWidget.__defaultHeight = 72 --[[ @ 0]]
CoD.IconRewardWidget.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.IconRewardWidget ) --[[ @ 0]]
	self.id = "IconRewardWidget" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local Notification2xpReward = CoD.Notification2xpReward.new( f1_arg0, f1_arg1, 0, 0, 0, 72, 0, 0, 0, 72 ) --[[ @ 0]]
	Notification2xpReward:mergeStateConditions( {
		{
			stateName = "VisibleWZ",
			condition = function ( menu, element, event )
				local f2_local0 = IsDoubleXP( f1_arg1 ) --[[ @ 0]]
				if f2_local0 then
					f2_local0 = IsWarzone() --[[ @ 0]]
					if f2_local0 then
						f2_local0 = CoD.ModelUtility.IsSelfModelValueEqualTo( element, f1_arg1, "icon", @"t7_hud_mp_notifications_xp_blue" ) --[[ @ 0]]
					end
				end
				return f2_local0
			end
		},
		{
			stateName = "Visible",
			condition = function ( menu, element, event )
				return IsDoubleXP( f1_arg1 ) and CoD.ModelUtility.IsSelfModelValueEqualTo( element, f1_arg1, "icon", @"t7_hud_mp_notifications_xp_blue" )
			end
		}
	} ) --[[ @ 0]]
	local CallingCardReward = Notification2xpReward --[[ @ 0]]
	local RewardImage = Notification2xpReward.subscribeToModel --[[ @ 0]]
	local f1_local4 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	RewardImage( CallingCardReward, f1_local4["lobbyRoot.lobbyNav"], function ( f4_arg0 )
		f1_arg0:updateElementState( Notification2xpReward, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f4_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	Notification2xpReward:linkToElementModel( Notification2xpReward, "icon", true, function ( model )
		f1_arg0:updateElementState( Notification2xpReward, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "icon"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	Notification2xpReward:linkToElementModel( self, nil, false, function ( model )
		Notification2xpReward:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( Notification2xpReward ) --[[ @ 0]]
	self.Notification2xpReward = Notification2xpReward --[[ @ 0]]
	
	RewardImage = LUI.UIFixedAspectRatioImage.new( 0, 0, 0, 72, 0, 0, 0, 72 ) --[[ @ 0]]
	RewardImage:setStretchedDimension( 6 ) --[[ @ 0]]
	self:addElement( RewardImage ) --[[ @ 0]]
	self.RewardImage = RewardImage --[[ @ 0]]
	
	CallingCardReward = LUI.UIImage.new( 0, 0, 0, 72, 0, 0, 0, 72 ) --[[ @ 0]]
	CallingCardReward:setAlpha( 0 ) --[[ @ 0]]
	CallingCardReward:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_1A02C44161370F6D" ) ) --[[ @ 0]]
	CallingCardReward:setShaderVector( 0, 0.5, 0, 0, 0 ) --[[ @ 0]]
	CallingCardReward:setShaderVector( 1, 1, 1, 0, 0 ) --[[ @ 0]]
	CallingCardReward:setShaderVector( 2, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( CallingCardReward ) --[[ @ 0]]
	self.CallingCardReward = CallingCardReward --[[ @ 0]]
	
	self.RewardImage:linkToElementModel( self, "icon", true, function ( model )
		local f7_local0 = model:get() --[[ @ 0]]
		if f7_local0 ~= nil then
			RewardImage:setImage( RegisterImage( f7_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self.CallingCardReward:linkToElementModel( self, "icon", true, function ( model )
		local f8_local0 = model:get() --[[ @ 0]]
		if f8_local0 ~= nil then
			CallingCardReward:setImage( RegisterImage( f8_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:mergeStateConditions( {
		{
			stateName = "CallingCard",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg1, "isCallingCard" ) and CoD.ModelUtility.IsSelfModelValueEqualTo( element, f1_arg1, "size", "CallingCard" )
			end
		},
		{
			stateName = "DoubleXP",
			condition = function ( menu, element, event )
				return IsDoubleXP( f1_arg1 ) and CoD.ModelUtility.IsSelfModelValueEqualTo( element, f1_arg1, "icon", @"t7_hud_mp_notifications_xp_blue" )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "isCallingCard", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "isCallingCard"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:linkToElementModel( self, "size", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "size"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:linkToElementModel( self, "icon", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "icon"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.IconRewardWidget.__resetProperties = function ( f14_arg0 )
	f14_arg0.RewardImage:completeAnimation() --[[ @ 0]]
	f14_arg0.CallingCardReward:completeAnimation() --[[ @ 0]]
	f14_arg0.RewardImage:setAlpha( 1 ) --[[ @ 0]]
	f14_arg0.CallingCardReward:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.IconRewardWidget.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f15_arg0, f15_arg1 )
			f15_arg0:__resetProperties() --[[ @ 0]]
			f15_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	CallingCard = {
		DefaultClip = function ( f16_arg0, f16_arg1 )
			f16_arg0:__resetProperties() --[[ @ 0]]
			f16_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f16_arg0.RewardImage:completeAnimation() --[[ @ 0]]
			f16_arg0.RewardImage:setAlpha( 0 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.RewardImage ) --[[ @ 0]]
			f16_arg0.CallingCardReward:completeAnimation() --[[ @ 0]]
			f16_arg0.CallingCardReward:setAlpha( 1 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.CallingCardReward ) --[[ @ 0]]
		end
	},
	DoubleXP = {
		DefaultClip = function ( f17_arg0, f17_arg1 )
			f17_arg0:__resetProperties() --[[ @ 0]]
			f17_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f17_arg0.RewardImage:completeAnimation() --[[ @ 0]]
			f17_arg0.RewardImage:setAlpha( 0 ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.RewardImage ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.IconRewardWidget.__onClose = function ( f18_arg0 )
	f18_arg0.Notification2xpReward:close() --[[ @ 0]]
	f18_arg0.RewardImage:close() --[[ @ 0]]
	f18_arg0.CallingCardReward:close() --[[ @ 0]]
end
 --[[ @ 0]]
