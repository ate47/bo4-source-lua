-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:49
require( "x64:7446e073397f8479" ) --[[ @ 0]]
require( "x64:3e52957b45821d12" ) --[[ @ 0]]

CoD.HUD_ZM_Trial_Round_Failed = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.HUD_ZM_Trial_Round_Failed.__defaultWidth = 1920 --[[ @ 0]]
CoD.HUD_ZM_Trial_Round_Failed.__defaultHeight = 300 --[[ @ 0]]
CoD.HUD_ZM_Trial_Round_Failed.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.HUD_ZM_Trial_Round_Failed ) --[[ @ 0]]
	self.id = "HUD_ZM_Trial_Round_Failed" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local Reason = LUI.UIText.new( 0.5, 0.5, -960, 960, 0, 0, 188, 221 ) --[[ @ 0]]
	Reason:setTTF( "skorzhen" ) --[[ @ 0]]
	Reason:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	Reason:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	Reason:subscribeToGlobalModel( f1_arg1, "ZMHudGlobal", "trials.failureReason", function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			Reason:setText( Engine[@"hash_4F9F1239CFD921FE"]( f2_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Reason ) --[[ @ 0]]
	self.Reason = Reason --[[ @ 0]]
	
	local RoundReached = LUI.UIText.new( 0, 0, 0, 1920, 0, 0, 50, 83 ) --[[ @ 0]]
	RoundReached:setTTF( "skorzhen" ) --[[ @ 0]]
	RoundReached:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	RoundReached:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	RoundReached:subscribeToGlobalModel( f1_arg1, "ZMHudGlobal", "trials.roundNumber", function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			RoundReached:setText( CoD.ZombieUtility.GetSurvivedRoundsText( f3_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( RoundReached ) --[[ @ 0]]
	self.RoundReached = RoundReached --[[ @ 0]]
	
	local Failed = LUI.UIText.new( 0.5, 0.5, -960, 960, 0, 0, -50, 40 ) --[[ @ 0]]
	Failed:setRGB( ColorSet.ResistanceHigh.r, ColorSet.ResistanceHigh.g, ColorSet.ResistanceHigh.b ) --[[ @ 0]]
	Failed:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_3D9D6E119FDD76AE" ) ) --[[ @ 0]]
	Failed:setTTF( "skorzhen" ) --[[ @ 0]]
	Failed:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	Failed:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	self:addElement( Failed ) --[[ @ 0]]
	self.Failed = Failed --[[ @ 0]]
	
	local Strikes = CoD.Hud_ZM_Trial_Strikes.new( f1_arg0, f1_arg1, 0.5, 0.5, -112, 112, 0, 0, 88, 168 ) --[[ @ 0]]
	Strikes:mergeStateConditions( {
		{
			stateName = "HiddenRoundFail",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		},
		{
			stateName = "HiddenCopy",
			condition = function ( menu, element, event )
				local f5_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_demo_all_game_hud_hidden"] ) --[[ @ 0]]
				if not f5_local0 then
					f5_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_demo_camera_mode_moviecam"] ) --[[ @ 0]]
					if not f5_local0 then
						f5_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_emp_active"] ) --[[ @ 0]]
						if not f5_local0 then
							f5_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_final_killcam"] ) --[[ @ 0]]
							if not f5_local0 then
								f5_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_hud_hardcore"] ) --[[ @ 0]]
								if not f5_local0 then
									if Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_hud_visible"] ) then
										f5_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_guided_missile"] ) --[[ @ 0]]
										if not f5_local0 then
											f5_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_killcam"] ) --[[ @ 0]]
											if not f5_local0 then
												f5_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_remote_killstreak_static"] ) --[[ @ 0]]
												if not f5_local0 then
													f5_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"hash_29BF57CE75A8755E"] ) --[[ @ 0]]
													if not f5_local0 then
														f5_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_vehicle"] ) --[[ @ 0]]
														if not f5_local0 then
															f5_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_is_flash_banged"] ) --[[ @ 0]]
															if not f5_local0 then
																f5_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_is_scoped"] ) --[[ @ 0]]
																if not f5_local0 then
																	f5_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_play_of_the_match"] ) --[[ @ 0]]
																	if not f5_local0 then
																		f5_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_round_end_killcam"] ) --[[ @ 0]]
																		if not f5_local0 then
																			f5_local0 = Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_ui_active"] ) --[[ @ 0]]
																		end
																	end
																end
															end
														end
													end
												end
											end
										end
									else
										f5_local0 = true --[[ @ 0]]
									end
								end
							end
						end
					end
				end
				return f5_local0
			end
		},
		{
			stateName = "Show",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalModelValueEqualTo( "ZMHudGlobal.trials.strikes", 0 )
			end
		}
	} ) --[[ @ 0]]
	local HudZMTrialShame2 = Strikes --[[ @ 0]]
	local HudZMTrialShame1 = Strikes.subscribeToModel --[[ @ 0]]
	local HudZMTrialShame3 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	HudZMTrialShame1( HudZMTrialShame2, HudZMTrialShame3["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_demo_all_game_hud_hidden"]], function ( f7_arg0 )
		f1_arg0:updateElementState( Strikes, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f7_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_demo_all_game_hud_hidden"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	HudZMTrialShame2 = Strikes --[[ @ 0]]
	HudZMTrialShame1 = Strikes.subscribeToModel --[[ @ 0]]
	HudZMTrialShame3 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	HudZMTrialShame1( HudZMTrialShame2, HudZMTrialShame3["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_demo_camera_mode_moviecam"]], function ( f8_arg0 )
		f1_arg0:updateElementState( Strikes, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f8_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_demo_camera_mode_moviecam"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	HudZMTrialShame2 = Strikes --[[ @ 0]]
	HudZMTrialShame1 = Strikes.subscribeToModel --[[ @ 0]]
	HudZMTrialShame3 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	HudZMTrialShame1( HudZMTrialShame2, HudZMTrialShame3["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_emp_active"]], function ( f9_arg0 )
		f1_arg0:updateElementState( Strikes, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f9_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_emp_active"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	HudZMTrialShame2 = Strikes --[[ @ 0]]
	HudZMTrialShame1 = Strikes.subscribeToModel --[[ @ 0]]
	HudZMTrialShame3 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	HudZMTrialShame1( HudZMTrialShame2, HudZMTrialShame3["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_final_killcam"]], function ( f10_arg0 )
		f1_arg0:updateElementState( Strikes, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f10_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_final_killcam"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	HudZMTrialShame2 = Strikes --[[ @ 0]]
	HudZMTrialShame1 = Strikes.subscribeToModel --[[ @ 0]]
	HudZMTrialShame3 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	HudZMTrialShame1( HudZMTrialShame2, HudZMTrialShame3["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_hud_hardcore"]], function ( f11_arg0 )
		f1_arg0:updateElementState( Strikes, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f11_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_hud_hardcore"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	HudZMTrialShame2 = Strikes --[[ @ 0]]
	HudZMTrialShame1 = Strikes.subscribeToModel --[[ @ 0]]
	HudZMTrialShame3 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	HudZMTrialShame1( HudZMTrialShame2, HudZMTrialShame3["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_hud_visible"]], function ( f12_arg0 )
		f1_arg0:updateElementState( Strikes, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f12_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_hud_visible"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	HudZMTrialShame2 = Strikes --[[ @ 0]]
	HudZMTrialShame1 = Strikes.subscribeToModel --[[ @ 0]]
	HudZMTrialShame3 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	HudZMTrialShame1( HudZMTrialShame2, HudZMTrialShame3["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_guided_missile"]], function ( f13_arg0 )
		f1_arg0:updateElementState( Strikes, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f13_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_guided_missile"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	HudZMTrialShame2 = Strikes --[[ @ 0]]
	HudZMTrialShame1 = Strikes.subscribeToModel --[[ @ 0]]
	HudZMTrialShame3 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	HudZMTrialShame1( HudZMTrialShame2, HudZMTrialShame3["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_killcam"]], function ( f14_arg0 )
		f1_arg0:updateElementState( Strikes, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f14_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_killcam"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	HudZMTrialShame2 = Strikes --[[ @ 0]]
	HudZMTrialShame1 = Strikes.subscribeToModel --[[ @ 0]]
	HudZMTrialShame3 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	HudZMTrialShame1( HudZMTrialShame2, HudZMTrialShame3["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_remote_killstreak_static"]], function ( f15_arg0 )
		f1_arg0:updateElementState( Strikes, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f15_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_remote_killstreak_static"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	HudZMTrialShame2 = Strikes --[[ @ 0]]
	HudZMTrialShame1 = Strikes.subscribeToModel --[[ @ 0]]
	HudZMTrialShame3 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	HudZMTrialShame1( HudZMTrialShame2, HudZMTrialShame3["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"hash_29BF57CE75A8755E"]], function ( f16_arg0 )
		f1_arg0:updateElementState( Strikes, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f16_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"hash_29BF57CE75A8755E"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	HudZMTrialShame2 = Strikes --[[ @ 0]]
	HudZMTrialShame1 = Strikes.subscribeToModel --[[ @ 0]]
	HudZMTrialShame3 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	HudZMTrialShame1( HudZMTrialShame2, HudZMTrialShame3["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_vehicle"]], function ( f17_arg0 )
		f1_arg0:updateElementState( Strikes, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f17_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_vehicle"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	HudZMTrialShame2 = Strikes --[[ @ 0]]
	HudZMTrialShame1 = Strikes.subscribeToModel --[[ @ 0]]
	HudZMTrialShame3 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	HudZMTrialShame1( HudZMTrialShame2, HudZMTrialShame3["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_flash_banged"]], function ( f18_arg0 )
		f1_arg0:updateElementState( Strikes, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f18_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_flash_banged"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	HudZMTrialShame2 = Strikes --[[ @ 0]]
	HudZMTrialShame1 = Strikes.subscribeToModel --[[ @ 0]]
	HudZMTrialShame3 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	HudZMTrialShame1( HudZMTrialShame2, HudZMTrialShame3["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_scoped"]], function ( f19_arg0 )
		f1_arg0:updateElementState( Strikes, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f19_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_scoped"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	HudZMTrialShame2 = Strikes --[[ @ 0]]
	HudZMTrialShame1 = Strikes.subscribeToModel --[[ @ 0]]
	HudZMTrialShame3 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	HudZMTrialShame1( HudZMTrialShame2, HudZMTrialShame3["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_play_of_the_match"]], function ( f20_arg0 )
		f1_arg0:updateElementState( Strikes, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f20_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_play_of_the_match"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	HudZMTrialShame2 = Strikes --[[ @ 0]]
	HudZMTrialShame1 = Strikes.subscribeToModel --[[ @ 0]]
	HudZMTrialShame3 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	HudZMTrialShame1( HudZMTrialShame2, HudZMTrialShame3["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_round_end_killcam"]], function ( f21_arg0 )
		f1_arg0:updateElementState( Strikes, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f21_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_round_end_killcam"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	HudZMTrialShame2 = Strikes --[[ @ 0]]
	HudZMTrialShame1 = Strikes.subscribeToModel --[[ @ 0]]
	HudZMTrialShame3 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	HudZMTrialShame1( HudZMTrialShame2, HudZMTrialShame3["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_ui_active"]], function ( f22_arg0 )
		f1_arg0:updateElementState( Strikes, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f22_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_ui_active"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	HudZMTrialShame2 = Strikes --[[ @ 0]]
	HudZMTrialShame1 = Strikes.subscribeToModel --[[ @ 0]]
	HudZMTrialShame3 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	HudZMTrialShame1( HudZMTrialShame2, HudZMTrialShame3["ZMHudGlobal.trials.strikes"], function ( f23_arg0 )
		f1_arg0:updateElementState( Strikes, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f23_arg0:get(),
			modelName = "ZMHudGlobal.trials.strikes"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:addElement( Strikes ) --[[ @ 0]]
	self.Strikes = Strikes --[[ @ 0]]
	
	HudZMTrialShame1 = CoD.Hud_ZM_Trial_Shame.new( f1_arg0, f1_arg1, 0.5, 0.5, -446, -244, 0, 0, 252, 491 ) --[[ @ 0]]
	HudZMTrialShame1.Portrait.Portrait.__Portrait_Portrait_Image = function ()
		HudZMTrialShame1.Portrait.Portrait:setImage( RegisterImage( CoD.ZombieUtility.GetShamedPlayerPortrait( f1_arg1, 1, @"ui_icon_hero_portrait_draft_stanton" ) ) ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	HudZMTrialShame1.Portrait.Portrait.__Portrait_Portrait_Image() --[[ @ 0]]
	HudZMTrialShame1.Gamertag.__Gamertag_String_Reference = function ()
		HudZMTrialShame1.Gamertag:setText( CoD.ZombieUtility.GetTrialFailurePlayerGamertagByCount( f1_arg1, 1, "-" ) ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	HudZMTrialShame1.Gamertag.__Gamertag_String_Reference() --[[ @ 0]]
	self:addElement( HudZMTrialShame1 ) --[[ @ 0]]
	self.HudZMTrialShame1 = HudZMTrialShame1 --[[ @ 0]]
	
	HudZMTrialShame2 = CoD.Hud_ZM_Trial_Shame.new( f1_arg0, f1_arg1, 0.5, 0.5, -216, -14, 0, 0, 252, 491 ) --[[ @ 0]]
	HudZMTrialShame2.Portrait.Portrait.__Portrait_Portrait_Image = function ()
		HudZMTrialShame2.Portrait.Portrait:setImage( RegisterImage( CoD.ZombieUtility.GetShamedPlayerPortrait( f1_arg1, 2, @"ui_icon_hero_portrait_draft_bruno" ) ) ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	HudZMTrialShame2.Portrait.Portrait.__Portrait_Portrait_Image() --[[ @ 0]]
	HudZMTrialShame2.Gamertag.__Gamertag_String_Reference = function ()
		HudZMTrialShame2.Gamertag:setText( CoD.ZombieUtility.GetTrialFailurePlayerGamertagByCount( f1_arg1, 2, "-" ) ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	HudZMTrialShame2.Gamertag.__Gamertag_String_Reference() --[[ @ 0]]
	self:addElement( HudZMTrialShame2 ) --[[ @ 0]]
	self.HudZMTrialShame2 = HudZMTrialShame2 --[[ @ 0]]
	
	HudZMTrialShame3 = CoD.Hud_ZM_Trial_Shame.new( f1_arg0, f1_arg1, 0.5, 0.5, 14, 216, 0, 0, 252, 491 ) --[[ @ 0]]
	HudZMTrialShame3.Portrait.Portrait.__Portrait_Portrait_Image = function ()
		HudZMTrialShame3.Portrait.Portrait:setImage( RegisterImage( CoD.ZombieUtility.GetShamedPlayerPortrait( f1_arg1, 3, @"ui_icon_hero_portrait_draft_diego" ) ) ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	HudZMTrialShame3.Portrait.Portrait.__Portrait_Portrait_Image() --[[ @ 0]]
	HudZMTrialShame3.Gamertag.__Gamertag_String_Reference = function ()
		HudZMTrialShame3.Gamertag:setText( CoD.ZombieUtility.GetTrialFailurePlayerGamertagByCount( f1_arg1, 3, "-" ) ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	HudZMTrialShame3.Gamertag.__Gamertag_String_Reference() --[[ @ 0]]
	self:addElement( HudZMTrialShame3 ) --[[ @ 0]]
	self.HudZMTrialShame3 = HudZMTrialShame3 --[[ @ 0]]
	
	local HudZMTrialShame4 = CoD.Hud_ZM_Trial_Shame.new( f1_arg0, f1_arg1, 0.5, 0.5, 244, 446, 0, 0, 252, 491 ) --[[ @ 0]]
	HudZMTrialShame4.Portrait.Portrait.__Portrait_Portrait_Image = function ()
		HudZMTrialShame4.Portrait.Portrait:setImage( RegisterImage( CoD.ZombieUtility.GetShamedPlayerPortrait( f1_arg1, 4, @"ui_icon_hero_portrait_draft_scarlett" ) ) ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	HudZMTrialShame4.Portrait.Portrait.__Portrait_Portrait_Image() --[[ @ 0]]
	HudZMTrialShame4.Gamertag.__Gamertag_String_Reference = function ()
		HudZMTrialShame4.Gamertag:setText( CoD.ZombieUtility.GetTrialFailurePlayerGamertagByCount( f1_arg1, 4, "-" ) ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	HudZMTrialShame4.Gamertag.__Gamertag_String_Reference() --[[ @ 0]]
	self:addElement( HudZMTrialShame4 ) --[[ @ 0]]
	self.HudZMTrialShame4 = HudZMTrialShame4 --[[ @ 0]]
	
	local DescriptionDivider = LUI.UIImage.new( 0.5, 0.5, -288, 288, 0, 0, 38, 40 ) --[[ @ 0]]
	DescriptionDivider:setRGB( ColorSet.ResistanceHigh.r, ColorSet.ResistanceHigh.g, ColorSet.ResistanceHigh.b ) --[[ @ 0]]
	self:addElement( DescriptionDivider ) --[[ @ 0]]
	self.DescriptionDivider = DescriptionDivider --[[ @ 0]]
	
	local CornerL = LUI.UIImage.new( 0, 0, 658, 673, 0, 0, 31, 46 ) --[[ @ 0]]
	CornerL:setImage( RegisterImage( @"hash_61EC82771A88A0E6" ) ) --[[ @ 0]]
	self:addElement( CornerL ) --[[ @ 0]]
	self.CornerL = CornerL --[[ @ 0]]
	
	local CornerR = LUI.UIImage.new( 0, 0, 1247, 1262, 0, 0, 31, 46 ) --[[ @ 0]]
	CornerR:setImage( RegisterImage( @"hash_61EC82771A88A0E6" ) ) --[[ @ 0]]
	self:addElement( CornerR ) --[[ @ 0]]
	self.CornerR = CornerR --[[ @ 0]]
	
	local f1_local12 = HudZMTrialShame1 --[[ @ 0]]
	local f1_local13 = HudZMTrialShame1.subscribeToModel --[[ @ 0]]
	local f1_local14 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local13( f1_local12, f1_local14["ZMHudGlobal.trials.failurePlayer"], HudZMTrialShame1.Portrait.Portrait.__Portrait_Portrait_Image ) --[[ @ 0]]
	f1_local12 = HudZMTrialShame1 --[[ @ 0]]
	f1_local13 = HudZMTrialShame1.subscribeToModel --[[ @ 0]]
	f1_local14 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local13( f1_local12, f1_local14["ZMHudGlobal.trials.failurePlayer"], HudZMTrialShame1.Gamertag.__Gamertag_String_Reference ) --[[ @ 0]]
	f1_local12 = HudZMTrialShame2 --[[ @ 0]]
	f1_local13 = HudZMTrialShame2.subscribeToModel --[[ @ 0]]
	f1_local14 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local13( f1_local12, f1_local14["ZMHudGlobal.trials.failurePlayer"], HudZMTrialShame2.Portrait.Portrait.__Portrait_Portrait_Image ) --[[ @ 0]]
	f1_local12 = HudZMTrialShame2 --[[ @ 0]]
	f1_local13 = HudZMTrialShame2.subscribeToModel --[[ @ 0]]
	f1_local14 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local13( f1_local12, f1_local14["ZMHudGlobal.trials.failurePlayer"], HudZMTrialShame2.Gamertag.__Gamertag_String_Reference ) --[[ @ 0]]
	f1_local12 = HudZMTrialShame3 --[[ @ 0]]
	f1_local13 = HudZMTrialShame3.subscribeToModel --[[ @ 0]]
	f1_local14 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local13( f1_local12, f1_local14["ZMHudGlobal.trials.failurePlayer"], HudZMTrialShame3.Portrait.Portrait.__Portrait_Portrait_Image ) --[[ @ 0]]
	f1_local12 = HudZMTrialShame3 --[[ @ 0]]
	f1_local13 = HudZMTrialShame3.subscribeToModel --[[ @ 0]]
	f1_local14 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local13( f1_local12, f1_local14["ZMHudGlobal.trials.failurePlayer"], HudZMTrialShame3.Gamertag.__Gamertag_String_Reference ) --[[ @ 0]]
	f1_local12 = HudZMTrialShame4 --[[ @ 0]]
	f1_local13 = HudZMTrialShame4.subscribeToModel --[[ @ 0]]
	f1_local14 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local13( f1_local12, f1_local14["ZMHudGlobal.trials.failurePlayer"], HudZMTrialShame4.Portrait.Portrait.__Portrait_Portrait_Image ) --[[ @ 0]]
	f1_local12 = HudZMTrialShame4 --[[ @ 0]]
	f1_local13 = HudZMTrialShame4.subscribeToModel --[[ @ 0]]
	f1_local14 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local13( f1_local12, f1_local14["ZMHudGlobal.trials.failurePlayer"], HudZMTrialShame4.Gamertag.__Gamertag_String_Reference ) --[[ @ 0]]
	self:mergeStateConditions( {
		{
			stateName = "HideForPostGameScoreboard",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalModelValueEqualTo( "ZMHudGlobal.trials.showScoreboard", 1 )
			end
		},
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				local f33_local0 --[[ @ 0]]
				if not CoD.ModelUtility.IsGlobalModelValueEqualTo( "ZMHudGlobal.trials.gameState", 1 ) then
					f33_local0 = not CoD.ModelUtility.IsGlobalModelValueEqualTo( "ZMHudGlobal.trials.gameState", 3 ) --[[ @ 0]]
				else
					f33_local0 = false --[[ @ 0]]
				end
				return f33_local0
			end
		},
		{
			stateName = "VisibleNoShame",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalModelValueEqualTo( "ZMHudGlobal.trials.gameState", 1 ) and not CoD.ZombieUtility.ShouldShowFailurePlayer( f1_arg1 )
			end
		},
		{
			stateName = "Visible_4_Shame",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalModelValueEqualTo( "ZMHudGlobal.trials.gameState", 1 ) and CoD.ZombieUtility.FailurePlayerCountMatchesNum( f1_arg1, 4 )
			end
		},
		{
			stateName = "Visible_3_Shame",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalModelValueEqualTo( "ZMHudGlobal.trials.gameState", 1 ) and CoD.ZombieUtility.FailurePlayerCountMatchesNum( f1_arg1, 3 )
			end
		},
		{
			stateName = "Visible_2_Shame",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalModelValueEqualTo( "ZMHudGlobal.trials.gameState", 1 ) and CoD.ZombieUtility.FailurePlayerCountMatchesNum( f1_arg1, 2 )
			end
		},
		{
			stateName = "Visible_1_Shame",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalModelValueEqualTo( "ZMHudGlobal.trials.gameState", 1 ) and CoD.ZombieUtility.FailurePlayerCountMatchesNum( f1_arg1, 1 )
			end
		},
		{
			stateName = "VisibleNoShame_GameOver",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalModelValueEqualTo( "ZMHudGlobal.trials.gameState", 3 ) and not CoD.ZombieUtility.ShouldShowFailurePlayer( f1_arg1 )
			end
		},
		{
			stateName = "Visible_4_Shame_GameOver",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalModelValueEqualTo( "ZMHudGlobal.trials.gameState", 3 ) and CoD.ZombieUtility.FailurePlayerCountMatchesNum( f1_arg1, 4 )
			end
		},
		{
			stateName = "Visible_3_Shame_GameOver",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalModelValueEqualTo( "ZMHudGlobal.trials.gameState", 3 ) and CoD.ZombieUtility.FailurePlayerCountMatchesNum( f1_arg1, 3 )
			end
		},
		{
			stateName = "Visible_2_Shame_GameOver",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalModelValueEqualTo( "ZMHudGlobal.trials.gameState", 3 ) and CoD.ZombieUtility.FailurePlayerCountMatchesNum( f1_arg1, 2 )
			end
		},
		{
			stateName = "Visible_1_Shame_GameOver",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalModelValueEqualTo( "ZMHudGlobal.trials.gameState", 3 ) and CoD.ZombieUtility.FailurePlayerCountMatchesNum( f1_arg1, 1 )
			end
		}
	} ) --[[ @ 0]]
	f1_local12 = self --[[ @ 0]]
	f1_local13 = self.subscribeToModel --[[ @ 0]]
	f1_local14 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local13( f1_local12, f1_local14["ZMHudGlobal.trials.showScoreboard"], function ( f44_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f44_arg0:get(),
			modelName = "ZMHudGlobal.trials.showScoreboard"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local12 = self --[[ @ 0]]
	f1_local13 = self.subscribeToModel --[[ @ 0]]
	f1_local14 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local13( f1_local12, f1_local14["ZMHudGlobal.trials.gameState"], function ( f45_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f45_arg0:get(),
			modelName = "ZMHudGlobal.trials.gameState"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local12 = self --[[ @ 0]]
	f1_local13 = self.subscribeToModel --[[ @ 0]]
	f1_local14 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local13( f1_local12, f1_local14["ZMHudGlobal.trials.failurePlayer"], function ( f46_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f46_arg0:get(),
			modelName = "ZMHudGlobal.trials.failurePlayer"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.HUD_ZM_Trial_Round_Failed.__resetProperties = function ( f47_arg0 )
	f47_arg0.DescriptionDivider:completeAnimation() --[[ @ 0]]
	f47_arg0.HudZMTrialShame1:completeAnimation() --[[ @ 0]]
	f47_arg0.Strikes:completeAnimation() --[[ @ 0]]
	f47_arg0.Failed:completeAnimation() --[[ @ 0]]
	f47_arg0.Reason:completeAnimation() --[[ @ 0]]
	f47_arg0.HudZMTrialShame3:completeAnimation() --[[ @ 0]]
	f47_arg0.HudZMTrialShame2:completeAnimation() --[[ @ 0]]
	f47_arg0.HudZMTrialShame4:completeAnimation() --[[ @ 0]]
	f47_arg0.RoundReached:completeAnimation() --[[ @ 0]]
	f47_arg0.CornerR:completeAnimation() --[[ @ 0]]
	f47_arg0.CornerL:completeAnimation() --[[ @ 0]]
	f47_arg0.DescriptionDivider:setAlpha( 1 ) --[[ @ 0]]
	f47_arg0.HudZMTrialShame1:setLeftRight( 0.5, 0.5, -446, -244 ) --[[ @ 0]]
	f47_arg0.HudZMTrialShame1:setTopBottom( 0, 0, 252, 491 ) --[[ @ 0]]
	f47_arg0.HudZMTrialShame1:setAlpha( 1 ) --[[ @ 0]]
	f47_arg0.Strikes:setTopBottom( 0, 0, 88, 168 ) --[[ @ 0]]
	f47_arg0.Strikes:setAlpha( 1 ) --[[ @ 0]]
	f47_arg0.Failed:setAlpha( 1 ) --[[ @ 0]]
	f47_arg0.Failed:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_3D9D6E119FDD76AE" ) ) --[[ @ 0]]
	f47_arg0.Reason:setTopBottom( 0, 0, 188, 221 ) --[[ @ 0]]
	f47_arg0.Reason:setAlpha( 1 ) --[[ @ 0]]
	f47_arg0.HudZMTrialShame3:setLeftRight( 0.5, 0.5, 14, 216 ) --[[ @ 0]]
	f47_arg0.HudZMTrialShame3:setTopBottom( 0, 0, 252, 491 ) --[[ @ 0]]
	f47_arg0.HudZMTrialShame3:setAlpha( 1 ) --[[ @ 0]]
	f47_arg0.HudZMTrialShame2:setLeftRight( 0.5, 0.5, -216, -14 ) --[[ @ 0]]
	f47_arg0.HudZMTrialShame2:setTopBottom( 0, 0, 252, 491 ) --[[ @ 0]]
	f47_arg0.HudZMTrialShame2:setAlpha( 1 ) --[[ @ 0]]
	f47_arg0.HudZMTrialShame4:setLeftRight( 0.5, 0.5, 244, 446 ) --[[ @ 0]]
	f47_arg0.HudZMTrialShame4:setTopBottom( 0, 0, 252, 491 ) --[[ @ 0]]
	f47_arg0.HudZMTrialShame4:setAlpha( 1 ) --[[ @ 0]]
	f47_arg0.RoundReached:setAlpha( 1 ) --[[ @ 0]]
	f47_arg0.CornerR:setAlpha( 1 ) --[[ @ 0]]
	f47_arg0.CornerL:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.HUD_ZM_Trial_Round_Failed.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f48_arg0, f48_arg1 )
			f48_arg0:__resetProperties() --[[ @ 0]]
			f48_arg0:setupElementClipCounter( 11 ) --[[ @ 0]]
			f48_arg0.Reason:completeAnimation() --[[ @ 0]]
			f48_arg0.Reason:setAlpha( 0 ) --[[ @ 0]]
			f48_arg0.clipFinished( f48_arg0.Reason ) --[[ @ 0]]
			f48_arg0.RoundReached:completeAnimation() --[[ @ 0]]
			f48_arg0.RoundReached:setAlpha( 0 ) --[[ @ 0]]
			f48_arg0.clipFinished( f48_arg0.RoundReached ) --[[ @ 0]]
			f48_arg0.Failed:completeAnimation() --[[ @ 0]]
			f48_arg0.Failed:setAlpha( 0 ) --[[ @ 0]]
			f48_arg0.clipFinished( f48_arg0.Failed ) --[[ @ 0]]
			f48_arg0.Strikes:completeAnimation() --[[ @ 0]]
			f48_arg0.Strikes:setAlpha( 0 ) --[[ @ 0]]
			f48_arg0.clipFinished( f48_arg0.Strikes ) --[[ @ 0]]
			f48_arg0.HudZMTrialShame1:completeAnimation() --[[ @ 0]]
			f48_arg0.HudZMTrialShame1:setAlpha( 0 ) --[[ @ 0]]
			f48_arg0.clipFinished( f48_arg0.HudZMTrialShame1 ) --[[ @ 0]]
			f48_arg0.HudZMTrialShame2:completeAnimation() --[[ @ 0]]
			f48_arg0.HudZMTrialShame2:setAlpha( 0 ) --[[ @ 0]]
			f48_arg0.clipFinished( f48_arg0.HudZMTrialShame2 ) --[[ @ 0]]
			f48_arg0.HudZMTrialShame3:completeAnimation() --[[ @ 0]]
			f48_arg0.HudZMTrialShame3:setAlpha( 0 ) --[[ @ 0]]
			f48_arg0.clipFinished( f48_arg0.HudZMTrialShame3 ) --[[ @ 0]]
			f48_arg0.HudZMTrialShame4:completeAnimation() --[[ @ 0]]
			f48_arg0.HudZMTrialShame4:setAlpha( 0 ) --[[ @ 0]]
			f48_arg0.clipFinished( f48_arg0.HudZMTrialShame4 ) --[[ @ 0]]
			f48_arg0.DescriptionDivider:completeAnimation() --[[ @ 0]]
			f48_arg0.DescriptionDivider:setAlpha( 0 ) --[[ @ 0]]
			f48_arg0.clipFinished( f48_arg0.DescriptionDivider ) --[[ @ 0]]
			f48_arg0.CornerL:completeAnimation() --[[ @ 0]]
			f48_arg0.CornerL:setAlpha( 0 ) --[[ @ 0]]
			f48_arg0.clipFinished( f48_arg0.CornerL ) --[[ @ 0]]
			f48_arg0.CornerR:completeAnimation() --[[ @ 0]]
			f48_arg0.CornerR:setAlpha( 0 ) --[[ @ 0]]
			f48_arg0.clipFinished( f48_arg0.CornerR ) --[[ @ 0]]
		end
	},
	HideForPostGameScoreboard = {
		DefaultClip = function ( f49_arg0, f49_arg1 )
			f49_arg0:__resetProperties() --[[ @ 0]]
			f49_arg0:setupElementClipCounter( 11 ) --[[ @ 0]]
			f49_arg0.Reason:completeAnimation() --[[ @ 0]]
			f49_arg0.Reason:setAlpha( 0 ) --[[ @ 0]]
			f49_arg0.clipFinished( f49_arg0.Reason ) --[[ @ 0]]
			f49_arg0.RoundReached:completeAnimation() --[[ @ 0]]
			f49_arg0.RoundReached:setAlpha( 0 ) --[[ @ 0]]
			f49_arg0.clipFinished( f49_arg0.RoundReached ) --[[ @ 0]]
			f49_arg0.Failed:completeAnimation() --[[ @ 0]]
			f49_arg0.Failed:setAlpha( 0 ) --[[ @ 0]]
			f49_arg0.clipFinished( f49_arg0.Failed ) --[[ @ 0]]
			f49_arg0.Strikes:completeAnimation() --[[ @ 0]]
			f49_arg0.Strikes:setAlpha( 0 ) --[[ @ 0]]
			f49_arg0.clipFinished( f49_arg0.Strikes ) --[[ @ 0]]
			f49_arg0.HudZMTrialShame1:completeAnimation() --[[ @ 0]]
			f49_arg0.HudZMTrialShame1:setAlpha( 0 ) --[[ @ 0]]
			f49_arg0.clipFinished( f49_arg0.HudZMTrialShame1 ) --[[ @ 0]]
			f49_arg0.HudZMTrialShame2:completeAnimation() --[[ @ 0]]
			f49_arg0.HudZMTrialShame2:setAlpha( 0 ) --[[ @ 0]]
			f49_arg0.clipFinished( f49_arg0.HudZMTrialShame2 ) --[[ @ 0]]
			f49_arg0.HudZMTrialShame3:completeAnimation() --[[ @ 0]]
			f49_arg0.HudZMTrialShame3:setAlpha( 0 ) --[[ @ 0]]
			f49_arg0.clipFinished( f49_arg0.HudZMTrialShame3 ) --[[ @ 0]]
			f49_arg0.HudZMTrialShame4:completeAnimation() --[[ @ 0]]
			f49_arg0.HudZMTrialShame4:setAlpha( 0 ) --[[ @ 0]]
			f49_arg0.clipFinished( f49_arg0.HudZMTrialShame4 ) --[[ @ 0]]
			f49_arg0.DescriptionDivider:completeAnimation() --[[ @ 0]]
			f49_arg0.DescriptionDivider:setAlpha( 0 ) --[[ @ 0]]
			f49_arg0.clipFinished( f49_arg0.DescriptionDivider ) --[[ @ 0]]
			f49_arg0.CornerL:completeAnimation() --[[ @ 0]]
			f49_arg0.CornerL:setAlpha( 0 ) --[[ @ 0]]
			f49_arg0.clipFinished( f49_arg0.CornerL ) --[[ @ 0]]
			f49_arg0.CornerR:completeAnimation() --[[ @ 0]]
			f49_arg0.CornerR:setAlpha( 0 ) --[[ @ 0]]
			f49_arg0.clipFinished( f49_arg0.CornerR ) --[[ @ 0]]
		end
	},
	Hidden = {
		DefaultClip = function ( f50_arg0, f50_arg1 )
			f50_arg0:__resetProperties() --[[ @ 0]]
			f50_arg0:setupElementClipCounter( 11 ) --[[ @ 0]]
			f50_arg0.Reason:completeAnimation() --[[ @ 0]]
			f50_arg0.Reason:setAlpha( 0 ) --[[ @ 0]]
			f50_arg0.clipFinished( f50_arg0.Reason ) --[[ @ 0]]
			f50_arg0.RoundReached:completeAnimation() --[[ @ 0]]
			f50_arg0.RoundReached:setAlpha( 0 ) --[[ @ 0]]
			f50_arg0.clipFinished( f50_arg0.RoundReached ) --[[ @ 0]]
			f50_arg0.Failed:completeAnimation() --[[ @ 0]]
			f50_arg0.Failed:setAlpha( 0 ) --[[ @ 0]]
			f50_arg0.clipFinished( f50_arg0.Failed ) --[[ @ 0]]
			f50_arg0.Strikes:completeAnimation() --[[ @ 0]]
			f50_arg0.Strikes:setAlpha( 0 ) --[[ @ 0]]
			f50_arg0.clipFinished( f50_arg0.Strikes ) --[[ @ 0]]
			f50_arg0.HudZMTrialShame1:completeAnimation() --[[ @ 0]]
			f50_arg0.HudZMTrialShame1:setAlpha( 0 ) --[[ @ 0]]
			f50_arg0.clipFinished( f50_arg0.HudZMTrialShame1 ) --[[ @ 0]]
			f50_arg0.HudZMTrialShame2:completeAnimation() --[[ @ 0]]
			f50_arg0.HudZMTrialShame2:setAlpha( 0 ) --[[ @ 0]]
			f50_arg0.clipFinished( f50_arg0.HudZMTrialShame2 ) --[[ @ 0]]
			f50_arg0.HudZMTrialShame3:completeAnimation() --[[ @ 0]]
			f50_arg0.HudZMTrialShame3:setAlpha( 0 ) --[[ @ 0]]
			f50_arg0.clipFinished( f50_arg0.HudZMTrialShame3 ) --[[ @ 0]]
			f50_arg0.HudZMTrialShame4:completeAnimation() --[[ @ 0]]
			f50_arg0.HudZMTrialShame4:setAlpha( 0 ) --[[ @ 0]]
			f50_arg0.clipFinished( f50_arg0.HudZMTrialShame4 ) --[[ @ 0]]
			f50_arg0.DescriptionDivider:completeAnimation() --[[ @ 0]]
			f50_arg0.DescriptionDivider:setAlpha( 0 ) --[[ @ 0]]
			f50_arg0.clipFinished( f50_arg0.DescriptionDivider ) --[[ @ 0]]
			f50_arg0.CornerL:completeAnimation() --[[ @ 0]]
			f50_arg0.CornerL:setAlpha( 0 ) --[[ @ 0]]
			f50_arg0.clipFinished( f50_arg0.CornerL ) --[[ @ 0]]
			f50_arg0.CornerR:completeAnimation() --[[ @ 0]]
			f50_arg0.CornerR:setAlpha( 0 ) --[[ @ 0]]
			f50_arg0.clipFinished( f50_arg0.CornerR ) --[[ @ 0]]
		end
	},
	VisibleNoShame = {
		DefaultClip = function ( f51_arg0, f51_arg1 )
			f51_arg0:__resetProperties() --[[ @ 0]]
			f51_arg0:setupElementClipCounter( 5 ) --[[ @ 0]]
			f51_arg0.RoundReached:completeAnimation() --[[ @ 0]]
			f51_arg0.RoundReached:setAlpha( 0 ) --[[ @ 0]]
			f51_arg0.clipFinished( f51_arg0.RoundReached ) --[[ @ 0]]
			f51_arg0.HudZMTrialShame1:completeAnimation() --[[ @ 0]]
			f51_arg0.HudZMTrialShame1:setAlpha( 0 ) --[[ @ 0]]
			f51_arg0.clipFinished( f51_arg0.HudZMTrialShame1 ) --[[ @ 0]]
			f51_arg0.HudZMTrialShame2:completeAnimation() --[[ @ 0]]
			f51_arg0.HudZMTrialShame2:setAlpha( 0 ) --[[ @ 0]]
			f51_arg0.clipFinished( f51_arg0.HudZMTrialShame2 ) --[[ @ 0]]
			f51_arg0.HudZMTrialShame3:completeAnimation() --[[ @ 0]]
			f51_arg0.HudZMTrialShame3:setAlpha( 0 ) --[[ @ 0]]
			f51_arg0.clipFinished( f51_arg0.HudZMTrialShame3 ) --[[ @ 0]]
			f51_arg0.HudZMTrialShame4:completeAnimation() --[[ @ 0]]
			f51_arg0.HudZMTrialShame4:setAlpha( 0 ) --[[ @ 0]]
			f51_arg0.clipFinished( f51_arg0.HudZMTrialShame4 ) --[[ @ 0]]
		end
	},
	Visible_4_Shame = {
		DefaultClip = function ( f52_arg0, f52_arg1 )
			f52_arg0:__resetProperties() --[[ @ 0]]
			f52_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f52_arg0.RoundReached:completeAnimation() --[[ @ 0]]
			f52_arg0.RoundReached:setAlpha( 0 ) --[[ @ 0]]
			f52_arg0.clipFinished( f52_arg0.RoundReached ) --[[ @ 0]]
		end
	},
	Visible_3_Shame = {
		DefaultClip = function ( f53_arg0, f53_arg1 )
			f53_arg0:__resetProperties() --[[ @ 0]]
			f53_arg0:setupElementClipCounter( 5 ) --[[ @ 0]]
			f53_arg0.RoundReached:completeAnimation() --[[ @ 0]]
			f53_arg0.RoundReached:setAlpha( 0 ) --[[ @ 0]]
			f53_arg0.clipFinished( f53_arg0.RoundReached ) --[[ @ 0]]
			f53_arg0.HudZMTrialShame1:completeAnimation() --[[ @ 0]]
			f53_arg0.HudZMTrialShame1:setLeftRight( 0.5, 0.5, -331, -129 ) --[[ @ 0]]
			f53_arg0.clipFinished( f53_arg0.HudZMTrialShame1 ) --[[ @ 0]]
			f53_arg0.HudZMTrialShame2:completeAnimation() --[[ @ 0]]
			f53_arg0.HudZMTrialShame2:setLeftRight( 0.5, 0.5, -101, 101 ) --[[ @ 0]]
			f53_arg0.clipFinished( f53_arg0.HudZMTrialShame2 ) --[[ @ 0]]
			f53_arg0.HudZMTrialShame3:completeAnimation() --[[ @ 0]]
			f53_arg0.HudZMTrialShame3:setLeftRight( 0.5, 0.5, 129, 331 ) --[[ @ 0]]
			f53_arg0.clipFinished( f53_arg0.HudZMTrialShame3 ) --[[ @ 0]]
			f53_arg0.HudZMTrialShame4:completeAnimation() --[[ @ 0]]
			f53_arg0.HudZMTrialShame4:setLeftRight( 0.5, 0.5, 359, 561 ) --[[ @ 0]]
			f53_arg0.HudZMTrialShame4:setAlpha( 0 ) --[[ @ 0]]
			f53_arg0.clipFinished( f53_arg0.HudZMTrialShame4 ) --[[ @ 0]]
		end
	},
	Visible_2_Shame = {
		DefaultClip = function ( f54_arg0, f54_arg1 )
			f54_arg0:__resetProperties() --[[ @ 0]]
			f54_arg0:setupElementClipCounter( 5 ) --[[ @ 0]]
			f54_arg0.RoundReached:completeAnimation() --[[ @ 0]]
			f54_arg0.RoundReached:setAlpha( 0 ) --[[ @ 0]]
			f54_arg0.clipFinished( f54_arg0.RoundReached ) --[[ @ 0]]
			f54_arg0.HudZMTrialShame1:completeAnimation() --[[ @ 0]]
			f54_arg0.HudZMTrialShame1:setLeftRight( 0.5, 0.5, -216, -14 ) --[[ @ 0]]
			f54_arg0.clipFinished( f54_arg0.HudZMTrialShame1 ) --[[ @ 0]]
			f54_arg0.HudZMTrialShame2:completeAnimation() --[[ @ 0]]
			f54_arg0.HudZMTrialShame2:setLeftRight( 0.5, 0.5, 14, 216 ) --[[ @ 0]]
			f54_arg0.clipFinished( f54_arg0.HudZMTrialShame2 ) --[[ @ 0]]
			f54_arg0.HudZMTrialShame3:completeAnimation() --[[ @ 0]]
			f54_arg0.HudZMTrialShame3:setLeftRight( 0.5, 0.5, 244, 446 ) --[[ @ 0]]
			f54_arg0.HudZMTrialShame3:setAlpha( 0 ) --[[ @ 0]]
			f54_arg0.clipFinished( f54_arg0.HudZMTrialShame3 ) --[[ @ 0]]
			f54_arg0.HudZMTrialShame4:completeAnimation() --[[ @ 0]]
			f54_arg0.HudZMTrialShame4:setLeftRight( 0.5, 0.5, 474, 676 ) --[[ @ 0]]
			f54_arg0.HudZMTrialShame4:setAlpha( 0 ) --[[ @ 0]]
			f54_arg0.clipFinished( f54_arg0.HudZMTrialShame4 ) --[[ @ 0]]
		end
	},
	Visible_1_Shame = {
		DefaultClip = function ( f55_arg0, f55_arg1 )
			f55_arg0:__resetProperties() --[[ @ 0]]
			f55_arg0:setupElementClipCounter( 5 ) --[[ @ 0]]
			f55_arg0.RoundReached:completeAnimation() --[[ @ 0]]
			f55_arg0.RoundReached:setAlpha( 0 ) --[[ @ 0]]
			f55_arg0.clipFinished( f55_arg0.RoundReached ) --[[ @ 0]]
			f55_arg0.HudZMTrialShame1:completeAnimation() --[[ @ 0]]
			f55_arg0.HudZMTrialShame1:setLeftRight( 0.5, 0.5, -101, 101 ) --[[ @ 0]]
			f55_arg0.clipFinished( f55_arg0.HudZMTrialShame1 ) --[[ @ 0]]
			f55_arg0.HudZMTrialShame2:completeAnimation() --[[ @ 0]]
			f55_arg0.HudZMTrialShame2:setLeftRight( 0.5, 0.5, 129, 331 ) --[[ @ 0]]
			f55_arg0.HudZMTrialShame2:setAlpha( 0 ) --[[ @ 0]]
			f55_arg0.clipFinished( f55_arg0.HudZMTrialShame2 ) --[[ @ 0]]
			f55_arg0.HudZMTrialShame3:completeAnimation() --[[ @ 0]]
			f55_arg0.HudZMTrialShame3:setLeftRight( 0.5, 0.5, 359, 561 ) --[[ @ 0]]
			f55_arg0.HudZMTrialShame3:setAlpha( 0 ) --[[ @ 0]]
			f55_arg0.clipFinished( f55_arg0.HudZMTrialShame3 ) --[[ @ 0]]
			f55_arg0.HudZMTrialShame4:completeAnimation() --[[ @ 0]]
			f55_arg0.HudZMTrialShame4:setLeftRight( 0.5, 0.5, 589, 791 ) --[[ @ 0]]
			f55_arg0.HudZMTrialShame4:setAlpha( 0 ) --[[ @ 0]]
			f55_arg0.clipFinished( f55_arg0.HudZMTrialShame4 ) --[[ @ 0]]
		end
	},
	VisibleNoShame_GameOver = {
		DefaultClip = function ( f56_arg0, f56_arg1 )
			f56_arg0:__resetProperties() --[[ @ 0]]
			f56_arg0:setupElementClipCounter( 7 ) --[[ @ 0]]
			f56_arg0.Reason:completeAnimation() --[[ @ 0]]
			f56_arg0.Reason:setTopBottom( 0, 0, 240, 273 ) --[[ @ 0]]
			f56_arg0.clipFinished( f56_arg0.Reason ) --[[ @ 0]]
			f56_arg0.Failed:completeAnimation() --[[ @ 0]]
			f56_arg0.Failed:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"zombie/game_over" ) ) --[[ @ 0]]
			f56_arg0.clipFinished( f56_arg0.Failed ) --[[ @ 0]]
			f56_arg0.Strikes:completeAnimation() --[[ @ 0]]
			f56_arg0.Strikes:setTopBottom( 0, 0, 140, 220 ) --[[ @ 0]]
			f56_arg0.clipFinished( f56_arg0.Strikes ) --[[ @ 0]]
			f56_arg0.HudZMTrialShame1:completeAnimation() --[[ @ 0]]
			f56_arg0.HudZMTrialShame1:setTopBottom( 0, 0, 304, 504 ) --[[ @ 0]]
			f56_arg0.HudZMTrialShame1:setAlpha( 0 ) --[[ @ 0]]
			f56_arg0.clipFinished( f56_arg0.HudZMTrialShame1 ) --[[ @ 0]]
			f56_arg0.HudZMTrialShame2:completeAnimation() --[[ @ 0]]
			f56_arg0.HudZMTrialShame2:setTopBottom( 0, 0, 304, 504 ) --[[ @ 0]]
			f56_arg0.HudZMTrialShame2:setAlpha( 0 ) --[[ @ 0]]
			f56_arg0.clipFinished( f56_arg0.HudZMTrialShame2 ) --[[ @ 0]]
			f56_arg0.HudZMTrialShame3:completeAnimation() --[[ @ 0]]
			f56_arg0.HudZMTrialShame3:setTopBottom( 0, 0, 304, 504 ) --[[ @ 0]]
			f56_arg0.HudZMTrialShame3:setAlpha( 0 ) --[[ @ 0]]
			f56_arg0.clipFinished( f56_arg0.HudZMTrialShame3 ) --[[ @ 0]]
			f56_arg0.HudZMTrialShame4:completeAnimation() --[[ @ 0]]
			f56_arg0.HudZMTrialShame4:setTopBottom( 0, 0, 304, 504 ) --[[ @ 0]]
			f56_arg0.HudZMTrialShame4:setAlpha( 0 ) --[[ @ 0]]
			f56_arg0.clipFinished( f56_arg0.HudZMTrialShame4 ) --[[ @ 0]]
		end
	},
	Visible_4_Shame_GameOver = {
		DefaultClip = function ( f57_arg0, f57_arg1 )
			f57_arg0:__resetProperties() --[[ @ 0]]
			f57_arg0:setupElementClipCounter( 7 ) --[[ @ 0]]
			f57_arg0.Reason:completeAnimation() --[[ @ 0]]
			f57_arg0.Reason:setTopBottom( 0, 0, 240, 273 ) --[[ @ 0]]
			f57_arg0.clipFinished( f57_arg0.Reason ) --[[ @ 0]]
			f57_arg0.Failed:completeAnimation() --[[ @ 0]]
			f57_arg0.Failed:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"zombie/game_over" ) ) --[[ @ 0]]
			f57_arg0.clipFinished( f57_arg0.Failed ) --[[ @ 0]]
			f57_arg0.Strikes:completeAnimation() --[[ @ 0]]
			f57_arg0.Strikes:setTopBottom( 0, 0, 140, 220 ) --[[ @ 0]]
			f57_arg0.clipFinished( f57_arg0.Strikes ) --[[ @ 0]]
			f57_arg0.HudZMTrialShame1:completeAnimation() --[[ @ 0]]
			f57_arg0.HudZMTrialShame1:setTopBottom( 0, 0, 304, 504 ) --[[ @ 0]]
			f57_arg0.clipFinished( f57_arg0.HudZMTrialShame1 ) --[[ @ 0]]
			f57_arg0.HudZMTrialShame2:completeAnimation() --[[ @ 0]]
			f57_arg0.HudZMTrialShame2:setTopBottom( 0, 0, 304, 504 ) --[[ @ 0]]
			f57_arg0.clipFinished( f57_arg0.HudZMTrialShame2 ) --[[ @ 0]]
			f57_arg0.HudZMTrialShame3:completeAnimation() --[[ @ 0]]
			f57_arg0.HudZMTrialShame3:setTopBottom( 0, 0, 304, 504 ) --[[ @ 0]]
			f57_arg0.clipFinished( f57_arg0.HudZMTrialShame3 ) --[[ @ 0]]
			f57_arg0.HudZMTrialShame4:completeAnimation() --[[ @ 0]]
			f57_arg0.HudZMTrialShame4:setTopBottom( 0, 0, 304, 504 ) --[[ @ 0]]
			f57_arg0.clipFinished( f57_arg0.HudZMTrialShame4 ) --[[ @ 0]]
		end
	},
	Visible_3_Shame_GameOver = {
		DefaultClip = function ( f58_arg0, f58_arg1 )
			f58_arg0:__resetProperties() --[[ @ 0]]
			f58_arg0:setupElementClipCounter( 7 ) --[[ @ 0]]
			f58_arg0.Reason:completeAnimation() --[[ @ 0]]
			f58_arg0.Reason:setTopBottom( 0, 0, 240, 273 ) --[[ @ 0]]
			f58_arg0.clipFinished( f58_arg0.Reason ) --[[ @ 0]]
			f58_arg0.Failed:completeAnimation() --[[ @ 0]]
			f58_arg0.Failed:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"zombie/game_over" ) ) --[[ @ 0]]
			f58_arg0.clipFinished( f58_arg0.Failed ) --[[ @ 0]]
			f58_arg0.Strikes:completeAnimation() --[[ @ 0]]
			f58_arg0.Strikes:setTopBottom( 0, 0, 140, 220 ) --[[ @ 0]]
			f58_arg0.clipFinished( f58_arg0.Strikes ) --[[ @ 0]]
			f58_arg0.HudZMTrialShame1:completeAnimation() --[[ @ 0]]
			f58_arg0.HudZMTrialShame1:setLeftRight( 0.5, 0.5, -331, -129 ) --[[ @ 0]]
			f58_arg0.HudZMTrialShame1:setTopBottom( 0, 0, 304, 543 ) --[[ @ 0]]
			f58_arg0.clipFinished( f58_arg0.HudZMTrialShame1 ) --[[ @ 0]]
			f58_arg0.HudZMTrialShame2:completeAnimation() --[[ @ 0]]
			f58_arg0.HudZMTrialShame2:setLeftRight( 0.5, 0.5, -101, 101 ) --[[ @ 0]]
			f58_arg0.HudZMTrialShame2:setTopBottom( 0, 0, 304, 543 ) --[[ @ 0]]
			f58_arg0.clipFinished( f58_arg0.HudZMTrialShame2 ) --[[ @ 0]]
			f58_arg0.HudZMTrialShame3:completeAnimation() --[[ @ 0]]
			f58_arg0.HudZMTrialShame3:setLeftRight( 0.5, 0.5, 129, 331 ) --[[ @ 0]]
			f58_arg0.HudZMTrialShame3:setTopBottom( 0, 0, 304, 543 ) --[[ @ 0]]
			f58_arg0.clipFinished( f58_arg0.HudZMTrialShame3 ) --[[ @ 0]]
			f58_arg0.HudZMTrialShame4:completeAnimation() --[[ @ 0]]
			f58_arg0.HudZMTrialShame4:setLeftRight( 0.5, 0.5, 359, 561 ) --[[ @ 0]]
			f58_arg0.HudZMTrialShame4:setTopBottom( 0, 0, 304, 543 ) --[[ @ 0]]
			f58_arg0.HudZMTrialShame4:setAlpha( 0 ) --[[ @ 0]]
			f58_arg0.clipFinished( f58_arg0.HudZMTrialShame4 ) --[[ @ 0]]
		end
	},
	Visible_2_Shame_GameOver = {
		DefaultClip = function ( f59_arg0, f59_arg1 )
			f59_arg0:__resetProperties() --[[ @ 0]]
			f59_arg0:setupElementClipCounter( 7 ) --[[ @ 0]]
			f59_arg0.Reason:completeAnimation() --[[ @ 0]]
			f59_arg0.Reason:setTopBottom( 0, 0, 240, 273 ) --[[ @ 0]]
			f59_arg0.clipFinished( f59_arg0.Reason ) --[[ @ 0]]
			f59_arg0.Failed:completeAnimation() --[[ @ 0]]
			f59_arg0.Failed:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"zombie/game_over" ) ) --[[ @ 0]]
			f59_arg0.clipFinished( f59_arg0.Failed ) --[[ @ 0]]
			f59_arg0.Strikes:completeAnimation() --[[ @ 0]]
			f59_arg0.Strikes:setTopBottom( 0, 0, 140, 220 ) --[[ @ 0]]
			f59_arg0.clipFinished( f59_arg0.Strikes ) --[[ @ 0]]
			f59_arg0.HudZMTrialShame1:completeAnimation() --[[ @ 0]]
			f59_arg0.HudZMTrialShame1:setLeftRight( 0.5, 0.5, -216, -14 ) --[[ @ 0]]
			f59_arg0.HudZMTrialShame1:setTopBottom( 0, 0, 304, 543 ) --[[ @ 0]]
			f59_arg0.clipFinished( f59_arg0.HudZMTrialShame1 ) --[[ @ 0]]
			f59_arg0.HudZMTrialShame2:completeAnimation() --[[ @ 0]]
			f59_arg0.HudZMTrialShame2:setLeftRight( 0.5, 0.5, 14, 216 ) --[[ @ 0]]
			f59_arg0.HudZMTrialShame2:setTopBottom( 0, 0, 304, 543 ) --[[ @ 0]]
			f59_arg0.clipFinished( f59_arg0.HudZMTrialShame2 ) --[[ @ 0]]
			f59_arg0.HudZMTrialShame3:completeAnimation() --[[ @ 0]]
			f59_arg0.HudZMTrialShame3:setLeftRight( 0.5, 0.5, 244, 446 ) --[[ @ 0]]
			f59_arg0.HudZMTrialShame3:setTopBottom( 0, 0, 304, 543 ) --[[ @ 0]]
			f59_arg0.HudZMTrialShame3:setAlpha( 0 ) --[[ @ 0]]
			f59_arg0.clipFinished( f59_arg0.HudZMTrialShame3 ) --[[ @ 0]]
			f59_arg0.HudZMTrialShame4:completeAnimation() --[[ @ 0]]
			f59_arg0.HudZMTrialShame4:setLeftRight( 0.5, 0.5, 474, 676 ) --[[ @ 0]]
			f59_arg0.HudZMTrialShame4:setTopBottom( 0, 0, 304, 543 ) --[[ @ 0]]
			f59_arg0.HudZMTrialShame4:setAlpha( 0 ) --[[ @ 0]]
			f59_arg0.clipFinished( f59_arg0.HudZMTrialShame4 ) --[[ @ 0]]
		end
	},
	Visible_1_Shame_GameOver = {
		DefaultClip = function ( f60_arg0, f60_arg1 )
			f60_arg0:__resetProperties() --[[ @ 0]]
			f60_arg0:setupElementClipCounter( 7 ) --[[ @ 0]]
			f60_arg0.Reason:completeAnimation() --[[ @ 0]]
			f60_arg0.Reason:setTopBottom( 0, 0, 240, 273 ) --[[ @ 0]]
			f60_arg0.clipFinished( f60_arg0.Reason ) --[[ @ 0]]
			f60_arg0.Failed:completeAnimation() --[[ @ 0]]
			f60_arg0.Failed:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"zombie/game_over" ) ) --[[ @ 0]]
			f60_arg0.clipFinished( f60_arg0.Failed ) --[[ @ 0]]
			f60_arg0.Strikes:completeAnimation() --[[ @ 0]]
			f60_arg0.Strikes:setTopBottom( 0, 0, 140, 220 ) --[[ @ 0]]
			f60_arg0.clipFinished( f60_arg0.Strikes ) --[[ @ 0]]
			f60_arg0.HudZMTrialShame1:completeAnimation() --[[ @ 0]]
			f60_arg0.HudZMTrialShame1:setLeftRight( 0.5, 0.5, -101, 101 ) --[[ @ 0]]
			f60_arg0.HudZMTrialShame1:setTopBottom( 0, 0, 304, 543 ) --[[ @ 0]]
			f60_arg0.clipFinished( f60_arg0.HudZMTrialShame1 ) --[[ @ 0]]
			f60_arg0.HudZMTrialShame2:completeAnimation() --[[ @ 0]]
			f60_arg0.HudZMTrialShame2:setLeftRight( 0.5, 0.5, 129, 331 ) --[[ @ 0]]
			f60_arg0.HudZMTrialShame2:setTopBottom( 0, 0, 304, 543 ) --[[ @ 0]]
			f60_arg0.HudZMTrialShame2:setAlpha( 0 ) --[[ @ 0]]
			f60_arg0.clipFinished( f60_arg0.HudZMTrialShame2 ) --[[ @ 0]]
			f60_arg0.HudZMTrialShame3:completeAnimation() --[[ @ 0]]
			f60_arg0.HudZMTrialShame3:setLeftRight( 0.5, 0.5, 359, 561 ) --[[ @ 0]]
			f60_arg0.HudZMTrialShame3:setTopBottom( 0, 0, 304, 543 ) --[[ @ 0]]
			f60_arg0.HudZMTrialShame3:setAlpha( 0 ) --[[ @ 0]]
			f60_arg0.clipFinished( f60_arg0.HudZMTrialShame3 ) --[[ @ 0]]
			f60_arg0.HudZMTrialShame4:completeAnimation() --[[ @ 0]]
			f60_arg0.HudZMTrialShame4:setLeftRight( 0.5, 0.5, 589, 791 ) --[[ @ 0]]
			f60_arg0.HudZMTrialShame4:setTopBottom( 0, 0, 303, 542 ) --[[ @ 0]]
			f60_arg0.HudZMTrialShame4:setAlpha( 0 ) --[[ @ 0]]
			f60_arg0.clipFinished( f60_arg0.HudZMTrialShame4 ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.HUD_ZM_Trial_Round_Failed.__onClose = function ( f61_arg0 )
	f61_arg0.Reason:close() --[[ @ 0]]
	f61_arg0.RoundReached:close() --[[ @ 0]]
	f61_arg0.Strikes:close() --[[ @ 0]]
	f61_arg0.HudZMTrialShame1:close() --[[ @ 0]]
	f61_arg0.HudZMTrialShame2:close() --[[ @ 0]]
	f61_arg0.HudZMTrialShame3:close() --[[ @ 0]]
	f61_arg0.HudZMTrialShame4:close() --[[ @ 0]]
end
 --[[ @ 0]]
