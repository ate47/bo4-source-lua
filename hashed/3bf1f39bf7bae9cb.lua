-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:49
require( "ui/uieditor/widgets/demo/demosidebarbutton" ) --[[ @ 0]]

CoD.TimelineEditorFilmOptions = InheritFrom( CoD.Menu ) --[[ @ 0]]
LUI.createMenu.TimelineEditorFilmOptions = function ( f1_arg0, f1_arg1 )
	local self = CoD.Menu.NewForUIEditor( "TimelineEditorFilmOptions", f1_arg0 ) --[[ @ 0]]
	local f1_local1 = self --[[ @ 0]]
	self:setClass( CoD.TimelineEditorFilmOptions ) --[[ @ 0]]
	self.soundSet = "ChooseDecal" --[[ @ 0]]
	self:setOwner( f1_arg0 ) --[[ @ 0]]
	self:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	self:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	self:playSound( "menu_open", f1_arg0 ) --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	
	local BGBlur = LUI.UIImage.new( 0, 0, -87, 413, 0, 0, -63, 1163 ) --[[ @ 0]]
	BGBlur:setAlpha( 0 ) --[[ @ 0]]
	BGBlur:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_E2354BE557C4C7A" ) ) --[[ @ 0]]
	BGBlur:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( BGBlur ) --[[ @ 0]]
	self.BGBlur = BGBlur --[[ @ 0]]
	
	local BGTint = LUI.UIImage.new( 0, 0, -87, 413, 0, 0, -63, 1163 ) --[[ @ 0]]
	BGTint:setRGB( 0, 0, 0 ) --[[ @ 0]]
	BGTint:setAlpha( 0.98 ) --[[ @ 0]]
	self:addElement( BGTint ) --[[ @ 0]]
	self.BGTint = BGTint --[[ @ 0]]
	
	local PixelGridTiledBacking = LUI.UIImage.new( 0, 0, -87, 413, 0, 0, -63, 1163 ) --[[ @ 0]]
	PixelGridTiledBacking:setAlpha( 0.15 ) --[[ @ 0]]
	PixelGridTiledBacking:setImage( RegisterImage( @"uie_ui_hud_notifications_pixelpattern" ) ) --[[ @ 0]]
	PixelGridTiledBacking:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_67C9C02F608D0A75" ) ) --[[ @ 0]]
	PixelGridTiledBacking:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	PixelGridTiledBacking:setupNineSliceShader( 128, 128 ) --[[ @ 0]]
	self:addElement( PixelGridTiledBacking ) --[[ @ 0]]
	self.PixelGridTiledBacking = PixelGridTiledBacking --[[ @ 0]]
	
	local Title = LUI.UIText.new( 0, 0, 30, 380, 0, 0, 195, 234 ) --[[ @ 0]]
	Title:setRGB( ColorSet.T8__OCHRE.r, ColorSet.T8__OCHRE.g, ColorSet.T8__OCHRE.b ) --[[ @ 0]]
	Title:setText( LocalizeToUpperString( @"hash_2FA47140D97F89D" ) ) --[[ @ 0]]
	Title:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	Title:setLetterSpacing( 1 ) --[[ @ 0]]
	Title:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	Title:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	self:addElement( Title ) --[[ @ 0]]
	self.Title = Title --[[ @ 0]]
	
	local ButtonList = LUI.UIList.new( f1_local1, f1_arg0, 10, 0, nil, false, false, false, false ) --[[ @ 0]]
	ButtonList:setLeftRight( 0, 0, 30, 380 ) --[[ @ 0]]
	ButtonList:setTopBottom( 0, 0, 253, 643 ) --[[ @ 0]]
	ButtonList:setWidgetType( CoD.DemoSideBarButton ) --[[ @ 0]]
	ButtonList:setVerticalCount( 5 ) --[[ @ 0]]
	ButtonList:setSpacing( 10 ) --[[ @ 0]]
	ButtonList:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	ButtonList:setDataSource( "DemoFilmOptionsButtonList" ) --[[ @ 0]]
	ButtonList:registerEventHandler( "gain_focus", function ( element, event )
		local f2_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f2_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f2_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_local1, f1_arg0, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		return f2_local0
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( ButtonList, f1_arg0, Enum[@"luibutton"][@"lui_key_xba_pscross"], nil, function ( element, menu, controller, model )
		ProcessListAction( self, element, controller, menu ) --[[ @ 0]]
		SetGlobalModelValueFalse( "demo.showFilmOptionsSidebar" ) --[[ @ 0]]
		GoBack( self, controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"hash_0", nil, nil ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	self:addElement( ButtonList ) --[[ @ 0]]
	self.ButtonList = ButtonList --[[ @ 0]]
	
	local HintText = LUI.UIText.new( 0, 0, 53, 380, 0, 0, 701.5, 722.5 ) --[[ @ 0]]
	HintText:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	HintText:setTTF( "dinnext_regular" ) --[[ @ 0]]
	HintText:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	HintText:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	self:addElement( HintText ) --[[ @ 0]]
	self.HintText = HintText --[[ @ 0]]
	
	local Arrow = LUI.UIImage.new( 0, 0, 30, 45, 0, 0, 703.5, 718.5 ) --[[ @ 0]]
	Arrow:setAlpha( 0.6 ) --[[ @ 0]]
	Arrow:setImage( RegisterImage( @"uie_t7_menu_gunsmith_arrow_white" ) ) --[[ @ 0]]
	self:addElement( Arrow ) --[[ @ 0]]
	self.Arrow = Arrow --[[ @ 0]]
	
	HintText:linkToElementModel( ButtonList, "hintText", true, function ( model )
		local f5_local0 = model:get() --[[ @ 0]]
		if f5_local0 ~= nil then
			HintText:setText( Engine[@"hash_4F9F1239CFD921FE"]( f5_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"luibutton"][@"lui_key_xbb_pscircle"], nil, function ( element, menu, controller, model )
		SetGlobalModelValueFalse( "demo.showFilmOptionsSidebar" ) --[[ @ 0]]
		GoBack( self, controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xbb_pscircle"], @"menu/back", nil, nil ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	ButtonList.id = "ButtonList" --[[ @ 0]]
	self:processEvent( {
		name = "menu_loaded",
		controller = f1_arg0
	} ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.TimelineEditorFilmOptions.__onClose = function ( f8_arg0 )
	f8_arg0.HintText:close() --[[ @ 0]]
	f8_arg0.ButtonList:close() --[[ @ 0]]
end
 --[[ @ 0]]
