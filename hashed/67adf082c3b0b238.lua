-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
CoD.StartMenu_Options_SettingInfo = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.StartMenu_Options_SettingInfo.__defaultWidth = 900 --[[ @ 0]]
CoD.StartMenu_Options_SettingInfo.__defaultHeight = 104 --[[ @ 0]]
CoD.StartMenu_Options_SettingInfo.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.StartMenu_Options_SettingInfo ) --[[ @ 0]]
	self.id = "StartMenu_Options_SettingInfo" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local OptionDesc = LUI.UIText.new( 0, 0, 0, 734, 0, 0, 49, 70 ) --[[ @ 0]]
	OptionDesc:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	OptionDesc:setTTF( "dinnext_regular" ) --[[ @ 0]]
	OptionDesc:setLetterSpacing( 2 ) --[[ @ 0]]
	OptionDesc:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	OptionDesc:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	OptionDesc:subscribeToGlobalModel( f1_arg1, "CurrentOptionInfo", "hintText", function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			OptionDesc:setText( f2_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( OptionDesc ) --[[ @ 0]]
	self.OptionDesc = OptionDesc --[[ @ 0]]
	
	local OptionTitle = LUI.UIText.new( 0, 0, 0, 734, 0, 0, 0, 30 ) --[[ @ 0]]
	OptionTitle:setRGB( 0.63, 0.57, 0.2 ) --[[ @ 0]]
	OptionTitle:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	OptionTitle:setLetterSpacing( 6 ) --[[ @ 0]]
	OptionTitle:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	OptionTitle:setAlignment( Enum[@"LUIAlignment"][@"hash_E821F0ECFF8D1C7"] ) --[[ @ 0]]
	OptionTitle:subscribeToGlobalModel( f1_arg1, "CurrentOptionInfo", "name", function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			OptionTitle:setText( ConvertToUpperString( f3_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( OptionTitle ) --[[ @ 0]]
	self.OptionTitle = OptionTitle --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalDataSourceModelValueTrue( f1_arg1, "CurrentOptionInfo", "hideInfo" )
			end
		}
	} ) --[[ @ 0]]
	local f1_local3 = self --[[ @ 0]]
	local f1_local4 = self.subscribeToModel --[[ @ 0]]
	local f1_local5 = DataSources.CurrentOptionInfo.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local4( f1_local3, f1_local5.hideInfo, function ( f5_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f5_arg0:get(),
			modelName = "hideInfo"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.StartMenu_Options_SettingInfo.__resetProperties = function ( f6_arg0 )
	f6_arg0.OptionDesc:completeAnimation() --[[ @ 0]]
	f6_arg0.OptionTitle:completeAnimation() --[[ @ 0]]
	f6_arg0.OptionDesc:setAlpha( 1 ) --[[ @ 0]]
	f6_arg0.OptionTitle:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.StartMenu_Options_SettingInfo.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f7_arg0, f7_arg1 )
			f7_arg0:__resetProperties() --[[ @ 0]]
			f7_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	Hidden = {
		DefaultClip = function ( f8_arg0, f8_arg1 )
			f8_arg0:__resetProperties() --[[ @ 0]]
			f8_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f8_arg0.OptionDesc:completeAnimation() --[[ @ 0]]
			f8_arg0.OptionDesc:setAlpha( 0 ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.OptionDesc ) --[[ @ 0]]
			f8_arg0.OptionTitle:completeAnimation() --[[ @ 0]]
			f8_arg0.OptionTitle:setAlpha( 0 ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.OptionTitle ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.StartMenu_Options_SettingInfo.__onClose = function ( f9_arg0 )
	f9_arg0.OptionDesc:close() --[[ @ 0]]
	f9_arg0.OptionTitle:close() --[[ @ 0]]
end
 --[[ @ 0]]
