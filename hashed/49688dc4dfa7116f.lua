-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
require( "ui/uieditor/widgets/social/joinbuttonprompt" ) --[[ @ 0]]
require( "x64:42f72126533b6116" ) --[[ @ 0]]

CoD.SpecialistDecalSelector = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.SpecialistDecalSelector.__defaultWidth = 540 --[[ @ 0]]
CoD.SpecialistDecalSelector.__defaultHeight = 150 --[[ @ 0]]
CoD.SpecialistDecalSelector.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.SpecialistDecalSelector ) --[[ @ 0]]
	self.id = "SpecialistDecalSelector" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.onlyChildrenFocusable = CoD.isPC --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local chooseDecal = LUI.UIText.new( 0, 1, 0, 0, 1, 1, -25, 0 ) --[[ @ 0]]
	chooseDecal:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	chooseDecal:setText( LocalizeToUpperString( @"hash_6B78039C7686605D" ) ) --[[ @ 0]]
	chooseDecal:setTTF( "default" ) --[[ @ 0]]
	chooseDecal:setAlignment( Enum[@"LUIAlignment"][@"hash_1FEEB12BCB0D7041"] ) --[[ @ 0]]
	chooseDecal:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	self:addElement( chooseDecal ) --[[ @ 0]]
	self.chooseDecal = chooseDecal --[[ @ 0]]
	
	local leftLine = LUI.UIImage.new( 0, 0.45, 0, 0, 1, 1, -46, -45 ) --[[ @ 0]]
	leftLine:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	self:addElement( leftLine ) --[[ @ 0]]
	self.leftLine = leftLine --[[ @ 0]]
	
	local rightLine = LUI.UIImage.new( 0.55, 1, 0, 0, 1, 1, -46, -45 ) --[[ @ 0]]
	rightLine:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	self:addElement( rightLine ) --[[ @ 0]]
	self.rightLine = rightLine --[[ @ 0]]
	
	local prompt = CoD.JoinButtonPrompt.new( f1_arg0, f1_arg1, 0.5, 0.5, -19.5, 19.5, 1, 1, -66, -27 ) --[[ @ 0]]
	prompt:setScale( 0.9, 0.9 ) --[[ @ 0]]
	prompt.KMprompt:setText( CoD.BaseUtility.AlreadyLocalized( "[{ui_contextual_2}]" ) ) --[[ @ 0]]
	prompt:subscribeToGlobalModel( f1_arg1, "Controller", "alt1_button_image", function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			prompt.GpadButtonImage:setImage( RegisterImage( f2_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( prompt ) --[[ @ 0]]
	self.prompt = prompt --[[ @ 0]]
	
	local decals = LUI.GridLayout.new( f1_arg0, f1_arg1, false, 0, 0, 5, 0, nil, nil, true, false, false, false ) --[[ @ 0]]
	decals:setLeftRight( 0, 0, 3, 538 ) --[[ @ 0]]
	decals:setTopBottom( 1, 1, -246, -71 ) --[[ @ 0]]
	decals:setWidgetType( CoD.SpecialistDecalEntry ) --[[ @ 0]]
	decals:setHorizontalCount( 6 ) --[[ @ 0]]
	decals:setVerticalCount( 2 ) --[[ @ 0]]
	decals:setSpacing( 5 ) --[[ @ 0]]
	decals:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	decals:linkToElementModel( self, "decalDataSourceName", true, function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			decals:setDataSource( f3_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	decals:registerEventHandler( "list_active_changed", function ( element, event )
		local f4_local0 = nil --[[ @ 0]]
		CoD.BreadcrumbUtility.SetSpecialistOutfitItemAsOld( f1_arg0, element, f1_arg1 ) --[[ @ 0]]
		return f4_local0
	end ) --[[ @ 0]]
	decals:registerEventHandler( "gain_focus", function ( element, event )
		local f5_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f5_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f5_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f5_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( decals, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		if IsPC() then
			SetCurrentElementAsActive( self, element, controller ) --[[ @ 0]]
			CoD.PlayerRoleUtility.UpdatePersonalizeSpecialistOutfitItem( controller, element ) --[[ @ 0]]
			CoD.PlayerRoleUtility.EquipOutfitItem( menu, controller, element ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsPC() then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_0", nil, "ui_confirm" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( decals ) --[[ @ 0]]
	self.decals = decals --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return not CoD.ModelUtility.IsSelfModelValueNonEmptyString( element, f1_arg1, "decalDataSourceName" )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "decalDataSourceName", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "decalDataSourceName"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	decals.id = "decals" --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.SpecialistDecalSelector.__resetProperties = function ( f10_arg0 )
	f10_arg0.decals:completeAnimation() --[[ @ 0]]
	f10_arg0.prompt:completeAnimation() --[[ @ 0]]
	f10_arg0.rightLine:completeAnimation() --[[ @ 0]]
	f10_arg0.leftLine:completeAnimation() --[[ @ 0]]
	f10_arg0.chooseDecal:completeAnimation() --[[ @ 0]]
	f10_arg0.decals:setAlpha( 1 ) --[[ @ 0]]
	f10_arg0.prompt:setAlpha( 1 ) --[[ @ 0]]
	f10_arg0.rightLine:setAlpha( 1 ) --[[ @ 0]]
	f10_arg0.leftLine:setAlpha( 1 ) --[[ @ 0]]
	f10_arg0.chooseDecal:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.SpecialistDecalSelector.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f11_arg0, f11_arg1 )
			f11_arg0:__resetProperties() --[[ @ 0]]
			f11_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	Hidden = {
		DefaultClip = function ( f12_arg0, f12_arg1 )
			f12_arg0:__resetProperties() --[[ @ 0]]
			f12_arg0:setupElementClipCounter( 5 ) --[[ @ 0]]
			f12_arg0.chooseDecal:completeAnimation() --[[ @ 0]]
			f12_arg0.chooseDecal:setAlpha( 0 ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.chooseDecal ) --[[ @ 0]]
			f12_arg0.leftLine:completeAnimation() --[[ @ 0]]
			f12_arg0.leftLine:setAlpha( 0 ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.leftLine ) --[[ @ 0]]
			f12_arg0.rightLine:completeAnimation() --[[ @ 0]]
			f12_arg0.rightLine:setAlpha( 0 ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.rightLine ) --[[ @ 0]]
			f12_arg0.prompt:completeAnimation() --[[ @ 0]]
			f12_arg0.prompt:setAlpha( 0 ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.prompt ) --[[ @ 0]]
			f12_arg0.decals:completeAnimation() --[[ @ 0]]
			f12_arg0.decals:setAlpha( 0 ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.decals ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.SpecialistDecalSelector.__onClose = function ( f13_arg0 )
	f13_arg0.prompt:close() --[[ @ 0]]
	f13_arg0.decals:close() --[[ @ 0]]
end
 --[[ @ 0]]
