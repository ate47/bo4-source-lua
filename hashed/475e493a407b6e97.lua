-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:49
CoD.CodCasterObjectiveStatusHardpoint = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.CodCasterObjectiveStatusHardpoint.__defaultWidth = 412 --[[ @ 0]]
CoD.CodCasterObjectiveStatusHardpoint.__defaultHeight = 64 --[[ @ 0]]
CoD.CodCasterObjectiveStatusHardpoint.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.CodCasterObjectiveStatusHardpoint ) --[[ @ 0]]
	self.id = "CodCasterObjectiveStatusHardpoint" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local BG = LUI.UIImage.new( 0, 0, 168.5, 198.5, 0, 0, 13, 43 ) --[[ @ 0]]
	BG:setImage( RegisterImage( @"uie_ui_hud_core_waypoint_led" ) ) --[[ @ 0]]
	BG:subscribeToGlobalModel( f1_arg1, "HUDItems", "codcaster.hardpointVisibility", function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			BG:setAlpha( f2_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( BG ) --[[ @ 0]]
	self.BG = BG --[[ @ 0]]
	
	local HardpointTimer = LUI.UIText.new( 0.49, 0.49, 0, 200, 0.45, 0.45, -7.5, 7.5 ) --[[ @ 0]]
	HardpointTimer:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	HardpointTimer:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	HardpointTimer:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	HardpointTimer:setupBombTimer( 0, true ) --[[ @ 0]]
	self:addElement( HardpointTimer ) --[[ @ 0]]
	self.HardpointTimer = HardpointTimer --[[ @ 0]]
	
	local objectiveCircleR = LUI.UIImage.new( 0.41, 0.41, 0, 30, 0.2, 0.2, 0, 30 ) --[[ @ 0]]
	objectiveCircleR:setYRot( 180 ) --[[ @ 0]]
	objectiveCircleR:setScale( 0.9, 0.9 ) --[[ @ 0]]
	objectiveCircleR:setImage( RegisterImage( @"uie_codcaster_objective_circle" ) ) --[[ @ 0]]
	objectiveCircleR:subscribeToGlobalModel( f1_arg1, "HUDItems", "codcaster.ObjectiveB.color", function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			objectiveCircleR:setRGB( f3_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	objectiveCircleR:subscribeToGlobalModel( f1_arg1, "HUDItems", "codcaster.hardpointVisibility", function ( model )
		local f4_local0 = model:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			objectiveCircleR:setAlpha( f4_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( objectiveCircleR ) --[[ @ 0]]
	self.objectiveCircleR = objectiveCircleR --[[ @ 0]]
	
	local objectiveCircleL = LUI.UIImage.new( 0.41, 0.41, 0, 30, 0.2, 0.2, 0, 30 ) --[[ @ 0]]
	objectiveCircleL:setScale( 0.9, 0.9 ) --[[ @ 0]]
	objectiveCircleL:setImage( RegisterImage( @"uie_codcaster_objective_circle" ) ) --[[ @ 0]]
	objectiveCircleL:subscribeToGlobalModel( f1_arg1, "HUDItems", "codcaster.ObjectiveA.color", function ( model )
		local f5_local0 = model:get() --[[ @ 0]]
		if f5_local0 ~= nil then
			objectiveCircleL:setRGB( f5_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	objectiveCircleL:subscribeToGlobalModel( f1_arg1, "HUDItems", "codcaster.hardpointVisibility", function ( model )
		local f6_local0 = model:get() --[[ @ 0]]
		if f6_local0 ~= nil then
			objectiveCircleL:setAlpha( f6_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( objectiveCircleL ) --[[ @ 0]]
	self.objectiveCircleL = objectiveCircleL --[[ @ 0]]
	
	local objectiveIconL = LUI.UIImage.new( 0.41, 0.41, 0, 30, 0.2, 0.2, 0, 30 ) --[[ @ 0]]
	objectiveIconL:setScale( 0.9, 0.9 ) --[[ @ 0]]
	objectiveIconL:setImage( RegisterImage( @"uie_codcaster_objective_hardpoint_icon" ) ) --[[ @ 0]]
	objectiveIconL:subscribeToGlobalModel( f1_arg1, "HUDItems", "codcaster.ObjectiveA.color", function ( model )
		local f7_local0 = model:get() --[[ @ 0]]
		if f7_local0 ~= nil then
			objectiveIconL:setRGB( f7_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	objectiveIconL:subscribeToGlobalModel( f1_arg1, "HUDItems", "codcaster.hardpointVisibility", function ( model )
		local f8_local0 = model:get() --[[ @ 0]]
		if f8_local0 ~= nil then
			objectiveIconL:setAlpha( f8_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( objectiveIconL ) --[[ @ 0]]
	self.objectiveIconL = objectiveIconL --[[ @ 0]]
	
	local objectiveIconR = LUI.UIImage.new( 0.41, 0.41, 0, 30, 0.2, 0.2, 0, 30 ) --[[ @ 0]]
	objectiveIconR:setYRot( 180 ) --[[ @ 0]]
	objectiveIconR:setScale( 0.9, 0.9 ) --[[ @ 0]]
	objectiveIconR:setImage( RegisterImage( @"uie_codcaster_objective_hardpoint_icon" ) ) --[[ @ 0]]
	objectiveIconR:subscribeToGlobalModel( f1_arg1, "HUDItems", "codcaster.ObjectiveB.color", function ( model )
		local f9_local0 = model:get() --[[ @ 0]]
		if f9_local0 ~= nil then
			objectiveIconR:setRGB( f9_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	objectiveIconR:subscribeToGlobalModel( f1_arg1, "HUDItems", "codcaster.hardpointVisibility", function ( model )
		local f10_local0 = model:get() --[[ @ 0]]
		if f10_local0 ~= nil then
			objectiveIconR:setAlpha( f10_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( objectiveIconR ) --[[ @ 0]]
	self.objectiveIconR = objectiveIconR --[[ @ 0]]
	
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.CodCasterObjectiveStatusHardpoint.__resetProperties = function ( f11_arg0 )
	f11_arg0.HardpointTimer:completeAnimation() --[[ @ 0]]
	f11_arg0.objectiveIconR:completeAnimation() --[[ @ 0]]
	f11_arg0.objectiveIconL:completeAnimation() --[[ @ 0]]
	f11_arg0.objectiveCircleL:completeAnimation() --[[ @ 0]]
	f11_arg0.objectiveCircleR:completeAnimation() --[[ @ 0]]
	f11_arg0.BG:completeAnimation() --[[ @ 0]]
	f11_arg0.HardpointTimer:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.CodCasterObjectiveStatusHardpoint.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f12_arg0, f12_arg1 )
			f12_arg0:__resetProperties() --[[ @ 0]]
			f12_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	Hidden = {
		DefaultClip = function ( f13_arg0, f13_arg1 )
			f13_arg0:__resetProperties() --[[ @ 0]]
			f13_arg0:setupElementClipCounter( 6 ) --[[ @ 0]]
			f13_arg0.BG:completeAnimation() --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.BG ) --[[ @ 0]]
			f13_arg0.HardpointTimer:completeAnimation() --[[ @ 0]]
			f13_arg0.HardpointTimer:setAlpha( 0 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.HardpointTimer ) --[[ @ 0]]
			f13_arg0.objectiveCircleR:completeAnimation() --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.objectiveCircleR ) --[[ @ 0]]
			f13_arg0.objectiveCircleL:completeAnimation() --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.objectiveCircleL ) --[[ @ 0]]
			f13_arg0.objectiveIconL:completeAnimation() --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.objectiveIconL ) --[[ @ 0]]
			f13_arg0.objectiveIconR:completeAnimation() --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.objectiveIconR ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.CodCasterObjectiveStatusHardpoint.__onClose = function ( f14_arg0 )
	f14_arg0.BG:close() --[[ @ 0]]
	f14_arg0.objectiveCircleR:close() --[[ @ 0]]
	f14_arg0.objectiveCircleL:close() --[[ @ 0]]
	f14_arg0.objectiveIconL:close() --[[ @ 0]]
	f14_arg0.objectiveIconR:close() --[[ @ 0]]
end
 --[[ @ 0]]
