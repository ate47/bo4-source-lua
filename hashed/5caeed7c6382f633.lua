-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
require( "ui/uieditor/menus/challenges/challenges_prestige" ) --[[ @ 0]]
require( "ui/uieditor/widgets/challenges/challenges_category_title" ) --[[ @ 0]]
require( "x64:79fe6ac43673588" ) --[[ @ 0]]
require( "x64:283b9fa839e546ff" ) --[[ @ 0]]

CoD.Challenges_FrameWidget_Prestige = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.Challenges_FrameWidget_Prestige.__defaultWidth = 1560 --[[ @ 0]]
CoD.Challenges_FrameWidget_Prestige.__defaultHeight = 780 --[[ @ 0]]
CoD.Challenges_FrameWidget_Prestige.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.Challenges_FrameWidget_Prestige ) --[[ @ 0]]
	self.id = "Challenges_FrameWidget_Prestige" --[[ @ 0]]
	self.soundSet = "ChooseDecal" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	
	local TitleBG = CoD.Challenges_FrameWidget_TitleBackground.new( f1_arg0, f1_arg1, 0, 0, 0, 525, 0.5, 0.5, -406, 406 ) --[[ @ 0]]
	self:addElement( TitleBG ) --[[ @ 0]]
	self.TitleBG = TitleBG --[[ @ 0]]
	
	local Title = CoD.Challenges_Category_Title.new( f1_arg0, f1_arg1, 0, 0, 112.5, 412.5, 0.5, 0.5, -300, 300 ) --[[ @ 0]]
	Title.ChallengesPercentCompleteWidgetLG.Name:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_3F45564D1E059F32" ) ) --[[ @ 0]]
	Title.ChallengesPercentCompleteWidgetLG.Icon:setImage( RegisterImage( @"ui_icon_challenges_mpprestige_large" ) ) --[[ @ 0]]
	Title:subscribeToGlobalModel( f1_arg1, "ChallengesMPCategoryStats", "prestige", function ( model )
		Title:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( Title ) --[[ @ 0]]
	self.Title = Title --[[ @ 0]]
	
	local Handling = CoD.ChallengesCategoryButton.new( f1_arg0, f1_arg1, 0, 0, 555, 1555, 0, 0, 3, 103 ) --[[ @ 0]]
	Handling.ChallengesCategoryButtonInternal.Name:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_55286388DDB2A3DE" ) ) --[[ @ 0]]
	Handling:subscribeToGlobalModel( f1_arg1, "ChallengesMPCategoryStats", "handling", function ( model )
		Handling:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	Handling:registerEventHandler( "gain_focus", function ( element, event )
		local f4_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f4_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f4_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f4_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( Handling, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		if not IsElementInState( element, "Disabled" ) then
			SetGlobalModelValue( "challengeCategory", "handling" ) --[[ @ 0]]
			PlaySoundAlias( "uin_toggle_generic" ) --[[ @ 0]]
			OpenPopup( self, "Challenges_Prestige", controller, nil ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsElementInState( element, "Disabled" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, "ui_confirm" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( Handling ) --[[ @ 0]]
	self.Handling = Handling --[[ @ 0]]
	
	local Efficiency = CoD.ChallengesCategoryButton.new( f1_arg0, f1_arg1, 0, 0, 555, 1555, 0, 0, 115, 215 ) --[[ @ 0]]
	Efficiency.ChallengesCategoryButtonInternal.Name:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_43286D0DE2B2332" ) ) --[[ @ 0]]
	Efficiency:subscribeToGlobalModel( f1_arg1, "ChallengesMPCategoryStats", "efficiency", function ( model )
		Efficiency:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	Efficiency:registerEventHandler( "gain_focus", function ( element, event )
		local f8_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f8_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f8_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f8_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( Efficiency, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		if not IsElementInState( element, "Disabled" ) then
			SetGlobalModelValue( "challengeCategory", "efficiency" ) --[[ @ 0]]
			PlaySoundAlias( "uin_toggle_generic" ) --[[ @ 0]]
			OpenPopup( self, "Challenges_Prestige", controller, nil ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsElementInState( element, "Disabled" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, "ui_confirm" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( Efficiency ) --[[ @ 0]]
	self.Efficiency = Efficiency --[[ @ 0]]
	
	local TacticalKits = CoD.ChallengesCategoryButton.new( f1_arg0, f1_arg1, 0, 0, 555, 1555, 0, 0, 227, 327 ) --[[ @ 0]]
	TacticalKits.ChallengesCategoryButtonInternal.Name:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_780013311B8CB58F" ) ) --[[ @ 0]]
	TacticalKits:subscribeToGlobalModel( f1_arg1, "ChallengesMPCategoryStats", "tacticalkits", function ( model )
		TacticalKits:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	TacticalKits:registerEventHandler( "gain_focus", function ( element, event )
		local f12_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f12_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f12_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f12_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( TacticalKits, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		if not IsElementInState( element, "Disabled" ) then
			SetGlobalModelValue( "challengeCategory", "tacticalkits" ) --[[ @ 0]]
			PlaySoundAlias( "uin_toggle_generic" ) --[[ @ 0]]
			OpenPopup( self, "Challenges_Prestige", controller, nil ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsElementInState( element, "Disabled" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, "ui_confirm" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( TacticalKits ) --[[ @ 0]]
	self.TacticalKits = TacticalKits --[[ @ 0]]
	
	local Gear = CoD.ChallengesCategoryButton.new( f1_arg0, f1_arg1, 0, 0, 555, 1555, 0, 0, 340, 440 ) --[[ @ 0]]
	Gear.ChallengesCategoryButtonInternal.Name:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_74AEF303ED69E004" ) ) --[[ @ 0]]
	Gear:subscribeToGlobalModel( f1_arg1, "ChallengesMPCategoryStats", "gear", function ( model )
		Gear:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	Gear:registerEventHandler( "gain_focus", function ( element, event )
		local f16_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f16_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f16_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f16_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( Gear, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		if not IsElementInState( element, "Disabled" ) then
			SetGlobalModelValue( "challengeCategory", "gear" ) --[[ @ 0]]
			PlaySoundAlias( "uin_toggle_generic" ) --[[ @ 0]]
			OpenPopup( self, "Challenges_Prestige", controller, nil ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsElementInState( element, "Disabled" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, "ui_confirm" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( Gear ) --[[ @ 0]]
	self.Gear = Gear --[[ @ 0]]
	
	local Perks = CoD.ChallengesCategoryButton.new( f1_arg0, f1_arg1, 0, 0, 555, 1555, 0, 0, 451, 551 ) --[[ @ 0]]
	Perks.ChallengesCategoryButtonInternal.Name:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_26F78F5AEA99A7E8" ) ) --[[ @ 0]]
	Perks:subscribeToGlobalModel( f1_arg1, "ChallengesMPCategoryStats", "perks", function ( model )
		Perks:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	Perks:registerEventHandler( "gain_focus", function ( element, event )
		local f20_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f20_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f20_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f20_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( Perks, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		if not IsElementInState( element, "Disabled" ) then
			SetGlobalModelValue( "challengeCategory", "perks" ) --[[ @ 0]]
			PlaySoundAlias( "uin_toggle_generic" ) --[[ @ 0]]
			OpenPopup( self, "Challenges_Prestige", controller, nil ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsElementInState( element, "Disabled" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, "ui_confirm" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( Perks ) --[[ @ 0]]
	self.Perks = Perks --[[ @ 0]]
	
	local Equipmen = CoD.ChallengesCategoryButton.new( f1_arg0, f1_arg1, 0, 0, 555, 1555, 0, 0, 563, 663 ) --[[ @ 0]]
	Equipmen.ChallengesCategoryButtonInternal.Name:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_27DC3FC26D23E8ED" ) ) --[[ @ 0]]
	Equipmen:subscribeToGlobalModel( f1_arg1, "ChallengesMPCategoryStats", "equipment", function ( model )
		Equipmen:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	Equipmen:registerEventHandler( "gain_focus", function ( element, event )
		local f24_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f24_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f24_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f24_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( Equipmen, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		if not IsElementInState( element, "Disabled" ) then
			SetGlobalModelValue( "challengeCategory", "equipment" ) --[[ @ 0]]
			PlaySoundAlias( "uin_toggle_generic" ) --[[ @ 0]]
			OpenPopup( self, "Challenges_Prestige", controller, nil ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsElementInState( element, "Disabled" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, "ui_confirm" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( Equipmen ) --[[ @ 0]]
	self.Equipmen = Equipmen --[[ @ 0]]
	
	local Wildcards = CoD.ChallengesCategoryButton.new( f1_arg0, f1_arg1, 0, 0, 555, 1555, 0, 0, 675, 775 ) --[[ @ 0]]
	Wildcards.ChallengesCategoryButtonInternal.Name:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_7454D80797ED0C36" ) ) --[[ @ 0]]
	Wildcards:subscribeToGlobalModel( f1_arg1, "ChallengesMPCategoryStats", "wildcards", function ( model )
		Wildcards:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	Wildcards:registerEventHandler( "gain_focus", function ( element, event )
		local f28_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f28_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f28_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f28_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( Wildcards, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		if not IsElementInState( element, "Disabled" ) then
			SetGlobalModelValue( "challengeCategory", "wildcards" ) --[[ @ 0]]
			PlaySoundAlias( "uin_toggle_generic" ) --[[ @ 0]]
			OpenPopup( self, "Challenges_Prestige", controller, nil ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsElementInState( element, "Disabled" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, "ui_confirm" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( Wildcards ) --[[ @ 0]]
	self.Wildcards = Wildcards --[[ @ 0]]
	
	Handling.id = "Handling" --[[ @ 0]]
	Efficiency.id = "Efficiency" --[[ @ 0]]
	TacticalKits.id = "TacticalKits" --[[ @ 0]]
	Gear.id = "Gear" --[[ @ 0]]
	Perks.id = "Perks" --[[ @ 0]]
	Equipmen.id = "Equipmen" --[[ @ 0]]
	Wildcards.id = "Wildcards" --[[ @ 0]]
	self.__defaultFocus = Handling --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.Challenges_FrameWidget_Prestige.__onClose = function ( f31_arg0 )
	f31_arg0.TitleBG:close() --[[ @ 0]]
	f31_arg0.Title:close() --[[ @ 0]]
	f31_arg0.Handling:close() --[[ @ 0]]
	f31_arg0.Efficiency:close() --[[ @ 0]]
	f31_arg0.TacticalKits:close() --[[ @ 0]]
	f31_arg0.Gear:close() --[[ @ 0]]
	f31_arg0.Perks:close() --[[ @ 0]]
	f31_arg0.Equipmen:close() --[[ @ 0]]
	f31_arg0.Wildcards:close() --[[ @ 0]]
end
 --[[ @ 0]]
