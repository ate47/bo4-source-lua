-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:35
require( "ui/uieditor/widgets/cac/menuchooseclass/itemwidgets/itemhinttext" ) --[[ @ 0]]
require( "ui/uieditor/widgets/zmfrontend/cac/zmattachmentslot" ) --[[ @ 0]]

CoD.ZMSignatureWeaponItemGridButton = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.ZMSignatureWeaponItemGridButton.__defaultWidth = 292 --[[ @ 0]]
CoD.ZMSignatureWeaponItemGridButton.__defaultHeight = 146 --[[ @ 0]]
CoD.ZMSignatureWeaponItemGridButton.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.ZMSignatureWeaponItemGridButton ) --[[ @ 0]]
	self.id = "ZMSignatureWeaponItemGridButton" --[[ @ 0]]
	self.soundSet = "FrontendMain" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local ZMItem = CoD.ZMAttachmentSlot.new( f1_arg0, f1_arg1, 0, 0, 0, 292, 0, 0, 0, 146 ) --[[ @ 0]]
	ZMItem:mergeStateConditions( {
		{
			stateName = "LootNotOwned",
			condition = function ( menu, element, event )
				return not CoD.ModelUtility.IsSelfModelValueTrue( self, f1_arg1, "owned" )
			end
		},
		{
			stateName = "NotAvailable",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		},
		{
			stateName = "Locked",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		},
		{
			stateName = "Equipped",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg1, "selected" )
			end
		}
	} ) --[[ @ 0]]
	ZMItem:linkToElementModel( ZMItem, "owned", true, function ( model )
		f1_arg0:updateElementState( ZMItem, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "owned"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	ZMItem:linkToElementModel( ZMItem, "selected", true, function ( model )
		f1_arg0:updateElementState( ZMItem, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "selected"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	ZMItem:linkToElementModel( self, nil, false, function ( model )
		ZMItem:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	ZMItem:linkToElementModel( self, "displayImage", true, function ( model )
		local f9_local0 = model:get() --[[ @ 0]]
		if f9_local0 ~= nil then
			ZMItem.AttachmentImage:setImage( CoD.BaseUtility.AlreadyRegistered( f9_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	ZMItem:linkToElementModel( self, nil, false, function ( model )
		ZMItem.ItemHintTextBreadcrumb:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	ZMItem:linkToElementModel( self, "hintText", true, function ( model )
		local f11_local0 = model:get() --[[ @ 0]]
		if f11_local0 ~= nil then
			ZMItem.ItemHintTextBreadcrumb.textCenterAlign:setText( f11_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	ZMItem:linkToElementModel( self, nil, false, function ( model )
		ZMItem.ItemHintTextBreadcrumb.Breadcrumb:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	ZMItem:linkToElementModel( self, "displayName", true, function ( model )
		local f13_local0 = model:get() --[[ @ 0]]
		if f13_local0 ~= nil then
			ZMItem.AttachmentName:setText( LocalizeToUpperString( f13_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( ZMItem ) --[[ @ 0]]
	self.ZMItem = ZMItem --[[ @ 0]]
	
	local MastercraftDetailsHintText = CoD.ItemHintText.new( f1_arg0, f1_arg1, 0.5, 0.5, -146, 146, 0, 0, -51, -6 ) --[[ @ 0]]
	MastercraftDetailsHintText:mergeStateConditions( {
		{
			stateName = "NoHintText",
			condition = function ( menu, element, event )
				return not CoD.ModelUtility.IsSelfModelValueNonEmptyString( element, f1_arg1, "ref" )
			end
		}
	} ) --[[ @ 0]]
	MastercraftDetailsHintText:appendEventHandler( "input_source_changed", function ( f15_arg0, f15_arg1 )
		f15_arg1.menu = f15_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( MastercraftDetailsHintText, f15_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local f1_local3 = MastercraftDetailsHintText --[[ @ 0]]
	local f1_local4 = MastercraftDetailsHintText.subscribeToModel --[[ @ 0]]
	local f1_local5 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local4( f1_local3, f1_local5.LastInput, function ( f16_arg0 )
		f1_arg0:updateElementState( MastercraftDetailsHintText, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f16_arg0:get(),
			modelName = "LastInput"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	MastercraftDetailsHintText:linkToElementModel( MastercraftDetailsHintText, "ref", true, function ( model )
		f1_arg0:updateElementState( MastercraftDetailsHintText, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "ref"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	MastercraftDetailsHintText:setAlpha( 0 ) --[[ @ 0]]
	MastercraftDetailsHintText.textCenterAlign:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_3D087E4011D7527C" ) ) --[[ @ 0]]
	MastercraftDetailsHintText:linkToElementModel( self, nil, false, function ( model )
		MastercraftDetailsHintText:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( MastercraftDetailsHintText ) --[[ @ 0]]
	self.MastercraftDetailsHintText = MastercraftDetailsHintText --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "PC",
			condition = function ( menu, element, event )
				return IsPC()
			end
		}
	} ) --[[ @ 0]]
	ZMItem.id = "ZMItem" --[[ @ 0]]
	self.__defaultFocus = ZMItem --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.ZMSignatureWeaponItemGridButton.__resetProperties = function ( f20_arg0 )
	f20_arg0.MastercraftDetailsHintText:completeAnimation() --[[ @ 0]]
	f20_arg0.MastercraftDetailsHintText:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ZMSignatureWeaponItemGridButton.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f21_arg0, f21_arg1 )
			f21_arg0:__resetProperties() --[[ @ 0]]
			f21_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end,
		ChildFocus = function ( f22_arg0, f22_arg1 )
			f22_arg0:__resetProperties() --[[ @ 0]]
			f22_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f22_arg0.MastercraftDetailsHintText:completeAnimation() --[[ @ 0]]
			f22_arg0.MastercraftDetailsHintText:setAlpha( 1 ) --[[ @ 0]]
			f22_arg0.clipFinished( f22_arg0.MastercraftDetailsHintText ) --[[ @ 0]]
		end,
		GainChildFocus = function ( f23_arg0, f23_arg1 )
			f23_arg0:__resetProperties() --[[ @ 0]]
			f23_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f23_local0 = function ( f24_arg0 )
				f23_arg0.MastercraftDetailsHintText:beginAnimation( 200 ) --[[ @ 0]]
				f23_arg0.MastercraftDetailsHintText:setAlpha( 1 ) --[[ @ 0]]
				f23_arg0.MastercraftDetailsHintText:registerEventHandler( "interrupted_keyframe", f23_arg0.clipInterrupted ) --[[ @ 0]]
				f23_arg0.MastercraftDetailsHintText:registerEventHandler( "transition_complete_keyframe", f23_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f23_arg0.MastercraftDetailsHintText:completeAnimation() --[[ @ 0]]
			f23_arg0.MastercraftDetailsHintText:setAlpha( 0 ) --[[ @ 0]]
			f23_local0( f23_arg0.MastercraftDetailsHintText ) --[[ @ 0]]
		end,
		LoseChildFocus = function ( f25_arg0, f25_arg1 )
			f25_arg0:__resetProperties() --[[ @ 0]]
			f25_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f25_local0 = function ( f26_arg0 )
				f25_arg0.MastercraftDetailsHintText:beginAnimation( 200 ) --[[ @ 0]]
				f25_arg0.MastercraftDetailsHintText:setAlpha( 0 ) --[[ @ 0]]
				f25_arg0.MastercraftDetailsHintText:registerEventHandler( "interrupted_keyframe", f25_arg0.clipInterrupted ) --[[ @ 0]]
				f25_arg0.MastercraftDetailsHintText:registerEventHandler( "transition_complete_keyframe", f25_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f25_arg0.MastercraftDetailsHintText:completeAnimation() --[[ @ 0]]
			f25_arg0.MastercraftDetailsHintText:setAlpha( 1 ) --[[ @ 0]]
			f25_local0( f25_arg0.MastercraftDetailsHintText ) --[[ @ 0]]
		end
	},
	PC = {
		DefaultClip = function ( f27_arg0, f27_arg1 )
			f27_arg0:__resetProperties() --[[ @ 0]]
			f27_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end,
		ChildFocus = function ( f28_arg0, f28_arg1 )
			f28_arg0:__resetProperties() --[[ @ 0]]
			f28_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f28_arg0.MastercraftDetailsHintText:completeAnimation() --[[ @ 0]]
			f28_arg0.MastercraftDetailsHintText:setAlpha( 1 ) --[[ @ 0]]
			f28_arg0.clipFinished( f28_arg0.MastercraftDetailsHintText ) --[[ @ 0]]
		end,
		GainChildFocus = function ( f29_arg0, f29_arg1 )
			f29_arg0:__resetProperties() --[[ @ 0]]
			f29_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f29_local0 = function ( f30_arg0 )
				f29_arg0.MastercraftDetailsHintText:beginAnimation( 200 ) --[[ @ 0]]
				f29_arg0.MastercraftDetailsHintText:setAlpha( 1 ) --[[ @ 0]]
				f29_arg0.MastercraftDetailsHintText:registerEventHandler( "interrupted_keyframe", f29_arg0.clipInterrupted ) --[[ @ 0]]
				f29_arg0.MastercraftDetailsHintText:registerEventHandler( "transition_complete_keyframe", f29_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f29_arg0.MastercraftDetailsHintText:completeAnimation() --[[ @ 0]]
			f29_arg0.MastercraftDetailsHintText:setAlpha( 0 ) --[[ @ 0]]
			f29_local0( f29_arg0.MastercraftDetailsHintText ) --[[ @ 0]]
		end,
		LoseChildFocus = function ( f31_arg0, f31_arg1 )
			f31_arg0:__resetProperties() --[[ @ 0]]
			f31_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f31_local0 = function ( f32_arg0 )
				f31_arg0.MastercraftDetailsHintText:beginAnimation( 200 ) --[[ @ 0]]
				f31_arg0.MastercraftDetailsHintText:setAlpha( 0 ) --[[ @ 0]]
				f31_arg0.MastercraftDetailsHintText:registerEventHandler( "interrupted_keyframe", f31_arg0.clipInterrupted ) --[[ @ 0]]
				f31_arg0.MastercraftDetailsHintText:registerEventHandler( "transition_complete_keyframe", f31_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f31_arg0.MastercraftDetailsHintText:completeAnimation() --[[ @ 0]]
			f31_arg0.MastercraftDetailsHintText:setAlpha( 1 ) --[[ @ 0]]
			f31_local0( f31_arg0.MastercraftDetailsHintText ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.ZMSignatureWeaponItemGridButton.__onClose = function ( f33_arg0 )
	f33_arg0.ZMItem:close() --[[ @ 0]]
	f33_arg0.MastercraftDetailsHintText:close() --[[ @ 0]]
end
 --[[ @ 0]]
