-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:35
require( "ui/uieditor/widgets/store/storecommontextbacking" ) --[[ @ 0]]

CoD.ChallengesGlobalProgressBar = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.ChallengesGlobalProgressBar.__defaultWidth = 495 --[[ @ 0]]
CoD.ChallengesGlobalProgressBar.__defaultHeight = 24 --[[ @ 0]]
CoD.ChallengesGlobalProgressBar.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.ChallengesGlobalProgressBar ) --[[ @ 0]]
	self.id = "ChallengesGlobalProgressBar" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local ProgressBarBase = LUI.UIImage.new( 0.5, 0.5, -247.5, 247.5, 0, 0, 0.5, 23.5 ) --[[ @ 0]]
	ProgressBarBase:setRGB( ColorSet.T8__OFF__GRAY.r, ColorSet.T8__OFF__GRAY.g, ColorSet.T8__OFF__GRAY.b ) --[[ @ 0]]
	ProgressBarBase:setAlpha( 0.02 ) --[[ @ 0]]
	self:addElement( ProgressBarBase ) --[[ @ 0]]
	self.ProgressBarBase = ProgressBarBase --[[ @ 0]]
	
	local DotTiledBacking = CoD.StoreCommonTextBacking.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	DotTiledBacking:setAlpha( 0.15 ) --[[ @ 0]]
	self:addElement( DotTiledBacking ) --[[ @ 0]]
	self.DotTiledBacking = DotTiledBacking --[[ @ 0]]
	
	local ProgressBar = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	ProgressBar:setRGB( 1, 0.36, 0 ) --[[ @ 0]]
	ProgressBar:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_wipe" ) ) --[[ @ 0]]
	ProgressBar:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	ProgressBar:setShaderVector( 2, 1, 0, 0, 0 ) --[[ @ 0]]
	ProgressBar:setShaderVector( 3, 0, 0, 0, 0 ) --[[ @ 0]]
	ProgressBar:setShaderVector( 4, 0, 0, 0, 0 ) --[[ @ 0]]
	ProgressBar:linkToElementModel( self, "percent", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			ProgressBar:setShaderVector( 0, CoD.GetVectorComponentFromString( f2_local0, 1 ), CoD.GetVectorComponentFromString( f2_local0, 2 ), CoD.GetVectorComponentFromString( f2_local0, 3 ), CoD.GetVectorComponentFromString( f2_local0, 4 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( ProgressBar ) --[[ @ 0]]
	self.ProgressBar = ProgressBar --[[ @ 0]]
	
	local ProgressFraction = LUI.UIText.new( 1, 1, -43, -4, 0, 0, 4.5, 22.5 ) --[[ @ 0]]
	ProgressFraction:setTTF( "default" ) --[[ @ 0]]
	ProgressFraction:setLetterSpacing( 2 ) --[[ @ 0]]
	ProgressFraction:setAlignment( Enum[@"LUIAlignment"][@"hash_3830CFD395E6AA0A"] ) --[[ @ 0]]
	ProgressFraction:linkToElementModel( self, "statFractionText", true, function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			ProgressFraction:setText( f3_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( ProgressFraction ) --[[ @ 0]]
	self.ProgressFraction = ProgressFraction --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Complete",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualTo( element, f1_arg1, "percent", 1 )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "percent", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "percent"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.ChallengesGlobalProgressBar.__resetProperties = function ( f6_arg0 )
	f6_arg0.ProgressBar:completeAnimation() --[[ @ 0]]
	f6_arg0.ProgressBar:setRGB( 1, 0.36, 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ChallengesGlobalProgressBar.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f7_arg0, f7_arg1 )
			f7_arg0:__resetProperties() --[[ @ 0]]
			f7_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	Complete = {
		DefaultClip = function ( f8_arg0, f8_arg1 )
			f8_arg0:__resetProperties() --[[ @ 0]]
			f8_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f8_arg0.ProgressBar:completeAnimation() --[[ @ 0]]
			f8_arg0.ProgressBar:setRGB( 0, 0.38, 0.02 ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.ProgressBar ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.ChallengesGlobalProgressBar.__onClose = function ( f9_arg0 )
	f9_arg0.DotTiledBacking:close() --[[ @ 0]]
	f9_arg0.ProgressBar:close() --[[ @ 0]]
	f9_arg0.ProgressFraction:close() --[[ @ 0]]
end
 --[[ @ 0]]
