-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:50
require( "ui/uieditor/widgets/aar_t8/rewards/aarplayerreward_diagonalheaderinternal" ) --[[ @ 0]]
require( "ui/uieditor/widgets/footer/footercontainer_frontend_right" ) --[[ @ 0]]
require( "x64:62cf4ad39ea2c548" ) --[[ @ 0]]
require( "x64:795553e1dbf377f6" ) --[[ @ 0]]
require( "ui/uieditor/widgets/lobby/common/layoutelements/commonbglayoutelement02" ) --[[ @ 0]]
require( "ui/uieditor/widgets/startmenu/options/startmenuoptionsmainframe" ) --[[ @ 0]]

CoD.ReservesSpecialContractMenu = InheritFrom( CoD.Menu ) --[[ @ 0]]
LUI.createMenu.ReservesSpecialContractMenu = function ( f1_arg0, f1_arg1 )
	local self = CoD.Menu.NewForUIEditor( "ReservesSpecialContractMenu", f1_arg0 ) --[[ @ 0]]
	local f1_local1 = self --[[ @ 0]]
	CoD.BaseUtility.SetModelFromUserData( f1_arg0, f1_local1, f1_arg1._model ) --[[ @ 0]]
	self:setClass( CoD.ReservesSpecialContractMenu ) --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self:setOwner( f1_arg0 ) --[[ @ 0]]
	self:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	self:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	self:playSound( "menu_open", f1_arg0 ) --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	
	local ItemShopBackgroundBlur = CoD.ItemShopBackgroundBlur.new( f1_local1, f1_arg0, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	ItemShopBackgroundBlur:mergeStateConditions( {
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		}
	} ) --[[ @ 0]]
	self:addElement( ItemShopBackgroundBlur ) --[[ @ 0]]
	self.ItemShopBackgroundBlur = ItemShopBackgroundBlur --[[ @ 0]]
	
	local FooterContainerFrontendRight = CoD.FooterContainer_Frontend_Right.new( f1_local1, f1_arg0, 0, 1, 0, 0, 1, 1, -48, 0 ) --[[ @ 0]]
	FooterContainerFrontendRight:registerEventHandler( "menu_loaded", function ( element, event )
		local f3_local0 = nil --[[ @ 0]]
		if element.menuLoaded then
			f3_local0 = element:menuLoaded( event ) --[[ @ 0]]
		elseif element.super.menuLoaded then
			f3_local0 = element.super:menuLoaded( event ) --[[ @ 0]]
		end
		if not IsPC() then
			SizeToSafeArea( element, f1_arg0 ) --[[ @ 0]]
		end
		if not f3_local0 then
			f3_local0 = element:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f3_local0
	end ) --[[ @ 0]]
	self:addElement( FooterContainerFrontendRight ) --[[ @ 0]]
	self.FooterContainerFrontendRight = FooterContainerFrontendRight --[[ @ 0]]
	
	local ProgressBar = CoD.ReservesSpecialContractProgressBar.new( f1_local1, f1_arg0, 0.5, 0.5, -245, 355, 0.5, 0.5, 342, 360 ) --[[ @ 0]]
	ProgressBar:mergeStateConditions( {
		{
			stateName = "Complete",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueTrue( self, f1_arg0, "complete" )
			end
		},
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		}
	} ) --[[ @ 0]]
	ProgressBar:linkToElementModel( ProgressBar, "complete", true, function ( model )
		f1_local1:updateElementState( ProgressBar, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = model:get(),
			modelName = "complete"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	ProgressBar:setScale( 2, 2 ) --[[ @ 0]]
	ProgressBar.Progress:setImage( RegisterImage( @"uie_ui_menu_aar_levelup_bar" ) ) --[[ @ 0]]
	ProgressBar.ProgressGlow:setImage( RegisterImage( @"uie_ui_menu_aar_levelup_bar_glow" ) ) --[[ @ 0]]
	ProgressBar:linkToElementModel( self, "progress", true, function ( model )
		local f7_local0 = model:get() --[[ @ 0]]
		if f7_local0 ~= nil then
			ProgressBar.Progress:setShaderVector( 0, CoD.GetVectorComponentFromString( f7_local0, 1 ), CoD.GetVectorComponentFromString( f7_local0, 2 ), CoD.GetVectorComponentFromString( f7_local0, 3 ), CoD.GetVectorComponentFromString( f7_local0, 4 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	ProgressBar:linkToElementModel( self, "progress", true, function ( model )
		local f8_local0 = model:get() --[[ @ 0]]
		if f8_local0 ~= nil then
			ProgressBar.ProgressGlow:setShaderVector( 0, CoD.GetVectorComponentFromString( f8_local0, 1 ), CoD.GetVectorComponentFromString( f8_local0, 2 ), CoD.GetVectorComponentFromString( f8_local0, 3 ), CoD.GetVectorComponentFromString( f8_local0, 4 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	ProgressBar:linkToElementModel( self, "endValue", true, function ( model )
		local f9_local0 = model:get() --[[ @ 0]]
		if f9_local0 ~= nil then
			ProgressBar.ProgressFraction:setText( f9_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( ProgressBar ) --[[ @ 0]]
	self.ProgressBar = ProgressBar --[[ @ 0]]
	
	local Title = LUI.UIText.new( 0.5, 0.5, -600, 600, 0.5, 0.5, -429.5, -375.5 ) --[[ @ 0]]
	Title:setRGB( ColorSet.T8__BIEGE.r, ColorSet.T8__BIEGE.g, ColorSet.T8__BIEGE.b ) --[[ @ 0]]
	Title:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	Title:setLetterSpacing( 4 ) --[[ @ 0]]
	Title:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	Title:setAlignment( Enum[@"luialignment"][@"hash_E821F0ECFF8D1C7"] ) --[[ @ 0]]
	Title:linkToElementModel( self, "categoryString", true, function ( model )
		local f10_local0 = model:get() --[[ @ 0]]
		if f10_local0 ~= nil then
			Title:setText( ToUpper( CoD.BlackMarketUtility.ReservesSpecialContractAppendCompletion( self:getModel(), f10_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Title ) --[[ @ 0]]
	self.Title = Title --[[ @ 0]]
	
	local Description = LUI.UIText.new( 0.5, 0.5, -600, 600, 0.5, 0.5, -372.5, -347.5 ) --[[ @ 0]]
	Description:setRGB( ColorSet.T8__OFF__GRAY.r, ColorSet.T8__OFF__GRAY.g, ColorSet.T8__OFF__GRAY.b ) --[[ @ 0]]
	Description:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	Description:setLetterSpacing( 2 ) --[[ @ 0]]
	Description:setLineSpacing( 1 ) --[[ @ 0]]
	Description:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	Description:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	Description:linkToElementModel( self, "detailsMenuDesc", true, function ( model )
		local f11_local0 = model:get() --[[ @ 0]]
		if f11_local0 ~= nil then
			Description:setText( f11_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Description ) --[[ @ 0]]
	self.Description = Description --[[ @ 0]]
	
	local RewardName = LUI.UIText.new( 0.5, 0.5, -600, 600, 0.5, 0.5, -232.5, -195.5 ) --[[ @ 0]]
	RewardName:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	RewardName:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	RewardName:setLetterSpacing( 8 ) --[[ @ 0]]
	RewardName:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	RewardName:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	RewardName:linkToElementModel( self, "rewardName", true, function ( model )
		local f12_local0 = model:get() --[[ @ 0]]
		if f12_local0 ~= nil then
			RewardName:setText( LocalizeToUpperString( f12_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( RewardName ) --[[ @ 0]]
	self.RewardName = RewardName --[[ @ 0]]
	
	local GoalType = LUI.UIText.new( 0.5, 0.5, -600, 600, 0.5, 0.5, 270.5, 295.5 ) --[[ @ 0]]
	GoalType:setRGB( ColorSet.T8__OFF__GRAY.r, ColorSet.T8__OFF__GRAY.g, ColorSet.T8__OFF__GRAY.b ) --[[ @ 0]]
	GoalType:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	GoalType:setLetterSpacing( 2 ) --[[ @ 0]]
	GoalType:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	GoalType:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	GoalType:linkToElementModel( self, "detailsMenuGoalType", true, function ( model )
		local f13_local0 = model:get() --[[ @ 0]]
		if f13_local0 ~= nil then
			GoalType:setText( Engine[@"hash_4F9F1239CFD921FE"]( f13_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( GoalType ) --[[ @ 0]]
	self.GoalType = GoalType --[[ @ 0]]
	
	local GoalString = LUI.UIText.new( 0.5, 0.5, -600, 600, 0.5, 0.5, 301, 337 ) --[[ @ 0]]
	GoalString:setRGB( ColorSet.T8__DARK__GOLD.r, ColorSet.T8__DARK__GOLD.g, ColorSet.T8__DARK__GOLD.b ) --[[ @ 0]]
	GoalString:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	GoalString:setLetterSpacing( 4 ) --[[ @ 0]]
	GoalString:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	GoalString:setAlignment( Enum[@"luialignment"][@"hash_E821F0ECFF8D1C7"] ) --[[ @ 0]]
	GoalString:linkToElementModel( self, "endValuePlusUnits", true, function ( model )
		local f14_local0 = model:get() --[[ @ 0]]
		if f14_local0 ~= nil then
			GoalString:setText( f14_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( GoalString ) --[[ @ 0]]
	self.GoalString = GoalString --[[ @ 0]]
	
	local Backing = LUI.UIImage.new( 0.5, 0.5, -397.5, 397.5, 0.5, 0.5, -176, 193 ) --[[ @ 0]]
	Backing:setRGB( 0.92, 0.92, 0.92 ) --[[ @ 0]]
	Backing:setAlpha( 0.02 ) --[[ @ 0]]
	self:addElement( Backing ) --[[ @ 0]]
	self.Backing = Backing --[[ @ 0]]
	
	local Gradient = LUI.UIImage.new( 0.5, 0.5, -397.5, 397.5, 0.5, 0.5, -176, 193 ) --[[ @ 0]]
	Gradient:setAlpha( 0.01 ) --[[ @ 0]]
	Gradient:setImage( RegisterImage( @"uie_ui_menu_aar_levelup_gradientglow" ) ) --[[ @ 0]]
	self:addElement( Gradient ) --[[ @ 0]]
	self.Gradient = Gradient --[[ @ 0]]
	
	local RewardImage = LUI.UIFixedAspectRatioImage.new( 0.5, 0.5, -128, 128, 0.5, 0.5, -118, 138 ) --[[ @ 0]]
	RewardImage:linkToElementModel( self, "detailsMenuRewardImage", true, function ( model )
		local f15_local0 = model:get() --[[ @ 0]]
		if f15_local0 ~= nil then
			RewardImage:setImage( RegisterImage( f15_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( RewardImage ) --[[ @ 0]]
	self.RewardImage = RewardImage --[[ @ 0]]
	
	local PlusTR = LUI.UIImage.new( 0.5, 0.5, 337, 369, 0.5, 0.5, -149, -117 ) --[[ @ 0]]
	PlusTR:setAlpha( 0.02 ) --[[ @ 0]]
	PlusTR:setScale( 0.8, 0.8 ) --[[ @ 0]]
	PlusTR:setImage( RegisterImage( @"uie_ui_menu_aar_common_thin_cross" ) ) --[[ @ 0]]
	PlusTR:setMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	self:addElement( PlusTR ) --[[ @ 0]]
	self.PlusTR = PlusTR --[[ @ 0]]
	
	local PlusBR = LUI.UIImage.new( 0.5, 0.5, 337, 369, 0.5, 0.5, 134, 166 ) --[[ @ 0]]
	PlusBR:setAlpha( 0.02 ) --[[ @ 0]]
	PlusBR:setScale( 0.8, 0.8 ) --[[ @ 0]]
	PlusBR:setImage( RegisterImage( @"uie_ui_menu_aar_common_thin_cross" ) ) --[[ @ 0]]
	PlusBR:setMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	self:addElement( PlusBR ) --[[ @ 0]]
	self.PlusBR = PlusBR --[[ @ 0]]
	
	local PlusTL = LUI.UIImage.new( 0.5, 0.5, -368, -336, 0.5, 0.5, -149, -117 ) --[[ @ 0]]
	PlusTL:setAlpha( 0.02 ) --[[ @ 0]]
	PlusTL:setScale( 0.8, 0.8 ) --[[ @ 0]]
	PlusTL:setImage( RegisterImage( @"uie_ui_menu_aar_common_thin_cross" ) ) --[[ @ 0]]
	PlusTL:setMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	self:addElement( PlusTL ) --[[ @ 0]]
	self.PlusTL = PlusTL --[[ @ 0]]
	
	local PlusBL = LUI.UIImage.new( 0.5, 0.5, -368, -336, 0.5, 0.5, 134, 166 ) --[[ @ 0]]
	PlusBL:setAlpha( 0.02 ) --[[ @ 0]]
	PlusBL:setScale( 0.8, 0.8 ) --[[ @ 0]]
	PlusBL:setImage( RegisterImage( @"uie_ui_menu_aar_common_thin_cross" ) ) --[[ @ 0]]
	PlusBL:setMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	self:addElement( PlusBL ) --[[ @ 0]]
	self.PlusBL = PlusBL --[[ @ 0]]
	
	local AmbientDiagonalBarBot = CoD.AARPlayerReward_DiagonalHeaderInternal.new( f1_local1, f1_arg0, 0.5, 0.5, -398, 215, 0.5, 0.5, 192, 200 ) --[[ @ 0]]
	AmbientDiagonalBarBot:setAlpha( 0.3 ) --[[ @ 0]]
	self:addElement( AmbientDiagonalBarBot ) --[[ @ 0]]
	self.AmbientDiagonalBarBot = AmbientDiagonalBarBot --[[ @ 0]]
	
	local AmbientBarBaseBot = LUI.UIImage.new( 0.5, 0.5, 217.5, 397.5, 0.5, 0.5, 193, 199 ) --[[ @ 0]]
	AmbientBarBaseBot:setRGB( 0.38, 0.38, 0.38 ) --[[ @ 0]]
	AmbientBarBaseBot:setAlpha( 0.1 ) --[[ @ 0]]
	self:addElement( AmbientBarBaseBot ) --[[ @ 0]]
	self.AmbientBarBaseBot = AmbientBarBaseBot --[[ @ 0]]
	
	local LineBaseBOT = CoD.StartMenuOptionsMainFrame.new( f1_local1, f1_arg0, 0.5, 0.5, -398, 215, 0.5, 0.5, 193, 199 ) --[[ @ 0]]
	LineBaseBOT:setAlpha( 0.02 ) --[[ @ 0]]
	self:addElement( LineBaseBOT ) --[[ @ 0]]
	self.LineBaseBOT = LineBaseBOT --[[ @ 0]]
	
	local infoBracketBot = LUI.UIImage.new( 0.5, 0.5, -398.5, 398.5, 0.5, 0.5, 186, 194 ) --[[ @ 0]]
	infoBracketBot:setAlpha( 0.6 ) --[[ @ 0]]
	infoBracketBot:setImage( RegisterImage( @"hash_4C325BED3F226657" ) ) --[[ @ 0]]
	infoBracketBot:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_add" ) ) --[[ @ 0]]
	infoBracketBot:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	infoBracketBot:setupNineSliceShader( 16, 4 ) --[[ @ 0]]
	self:addElement( infoBracketBot ) --[[ @ 0]]
	self.infoBracketBot = infoBracketBot --[[ @ 0]]
	
	local infoBracketTop = LUI.UIImage.new( 0.5, 0.5, -398.5, 399.5, 0.5, 0.5, -180, -148 ) --[[ @ 0]]
	infoBracketTop:setAlpha( 0.6 ) --[[ @ 0]]
	infoBracketTop:setImage( RegisterImage( @"uie_ui_menu_aar_common_bracket" ) ) --[[ @ 0]]
	infoBracketTop:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_add" ) ) --[[ @ 0]]
	infoBracketTop:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	infoBracketTop:setupNineSliceShader( 10, 16 ) --[[ @ 0]]
	self:addElement( infoBracketTop ) --[[ @ 0]]
	self.infoBracketTop = infoBracketTop --[[ @ 0]]
	
	local AmbientTopRepeatBar = LUI.UIImage.new( 0.5, 0.5, -400.5, 213.5, 0.5, 0.5, -192, -176 ) --[[ @ 0]]
	AmbientTopRepeatBar:setImage( RegisterImage( @"hash_7C9793C8F59B834E" ) ) --[[ @ 0]]
	AmbientTopRepeatBar:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_add" ) ) --[[ @ 0]]
	AmbientTopRepeatBar:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	AmbientTopRepeatBar:setupNineSliceShader( 23, 16 ) --[[ @ 0]]
	self:addElement( AmbientTopRepeatBar ) --[[ @ 0]]
	self.AmbientTopRepeatBar = AmbientTopRepeatBar --[[ @ 0]]
	
	local AmbientTopBar = LUI.UIImage.new( 0.5, 0.5, 214.5, 402.5, 0.5, 0.5, -194, -174 ) --[[ @ 0]]
	AmbientTopBar:setImage( RegisterImage( @"hash_48C511B26DCEEE3E" ) ) --[[ @ 0]]
	AmbientTopBar:setMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	self:addElement( AmbientTopBar ) --[[ @ 0]]
	self.AmbientTopBar = AmbientTopBar --[[ @ 0]]
	
	local LayoutElement02 = CoD.CommonBgLayoutElement02.new( f1_local1, f1_arg0, 0.5, 0.5, 98.5, 402.5, 0.5, 0.5, 123, 199 ) --[[ @ 0]]
	LayoutElement02:setAlpha( 0.5 ) --[[ @ 0]]
	LayoutElement02:setScale( 0.25, 0.25 ) --[[ @ 0]]
	self:addElement( LayoutElement02 ) --[[ @ 0]]
	self.LayoutElement02 = LayoutElement02 --[[ @ 0]]
	
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"luibutton"][@"lui_key_xbb_pscircle"], nil, function ( element, menu, controller, model )
		GoBack( self, controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xbb_pscircle"], @"menu/back", nil, nil ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	FooterContainerFrontendRight:setModel( self.buttonModel, f1_arg0 ) --[[ @ 0]]
	if CoD.isPC then
		FooterContainerFrontendRight.id = "FooterContainerFrontendRight" --[[ @ 0]]
	end
	self:processEvent( {
		name = "menu_loaded",
		controller = f1_arg0
	} ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.ReservesSpecialContractMenu.__onClose = function ( f18_arg0 )
	f18_arg0.ItemShopBackgroundBlur:close() --[[ @ 0]]
	f18_arg0.FooterContainerFrontendRight:close() --[[ @ 0]]
	f18_arg0.ProgressBar:close() --[[ @ 0]]
	f18_arg0.Title:close() --[[ @ 0]]
	f18_arg0.Description:close() --[[ @ 0]]
	f18_arg0.RewardName:close() --[[ @ 0]]
	f18_arg0.GoalType:close() --[[ @ 0]]
	f18_arg0.GoalString:close() --[[ @ 0]]
	f18_arg0.RewardImage:close() --[[ @ 0]]
	f18_arg0.AmbientDiagonalBarBot:close() --[[ @ 0]]
	f18_arg0.LineBaseBOT:close() --[[ @ 0]]
	f18_arg0.LayoutElement02:close() --[[ @ 0]]
end
 --[[ @ 0]]
