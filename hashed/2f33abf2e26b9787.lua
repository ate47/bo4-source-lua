-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:49
require( "ui/uieditor/widgets/lobby/common/fe_titlenumbrdr" ) --[[ @ 0]]
require( "x64:3ff272eb6e6aaf30" ) --[[ @ 0]]
require( "x64:6caf3cedd5ac4996" ) --[[ @ 0]]
require( "x64:78ce4f97c9c109c1" ) --[[ @ 0]]
require( "x64:5564ca313abeb19a" ) --[[ @ 0]]

CoD.PC_AchievementDetailView = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.PC_AchievementDetailView.__defaultWidth = 488 --[[ @ 0]]
CoD.PC_AchievementDetailView.__defaultHeight = 633 --[[ @ 0]]
CoD.PC_AchievementDetailView.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.PC_AchievementDetailView ) --[[ @ 0]]
	self.id = "PC_AchievementDetailView" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local Backing = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	Backing:setRGB( 0.05, 0.05, 0.05 ) --[[ @ 0]]
	Backing:setAlpha( 0.98 ) --[[ @ 0]]
	self:addElement( Backing ) --[[ @ 0]]
	self.Backing = Backing --[[ @ 0]]
	
	local PixelGridTiledBacking = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	PixelGridTiledBacking:setAlpha( 0.05 ) --[[ @ 0]]
	PixelGridTiledBacking:setImage( RegisterImage( @"uie_ui_hud_notifications_pixelpattern" ) ) --[[ @ 0]]
	PixelGridTiledBacking:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_16CBE95C250C6D15" ) ) --[[ @ 0]]
	PixelGridTiledBacking:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	PixelGridTiledBacking:setupNineSliceShader( 128, 128 ) --[[ @ 0]]
	self:addElement( PixelGridTiledBacking ) --[[ @ 0]]
	self.PixelGridTiledBacking = PixelGridTiledBacking --[[ @ 0]]
	
	local GridTiled = LUI.UIImage.new( 0, 1, 2, -2, 0, 1, 4, -4 ) --[[ @ 0]]
	GridTiled:setAlpha( 0.09 ) --[[ @ 0]]
	GridTiled:setScale( 1.01, 1.01 ) --[[ @ 0]]
	GridTiled:setImage( RegisterImage( @"uie_ui_menu_store_bg_grid" ) ) --[[ @ 0]]
	GridTiled:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_16CBE95C250C6D15" ) ) --[[ @ 0]]
	GridTiled:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	GridTiled:setupNineSliceShader( 64, 64 ) --[[ @ 0]]
	self:addElement( GridTiled ) --[[ @ 0]]
	self.GridTiled = GridTiled --[[ @ 0]]
	
	local Dots = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	Dots:setRGB( 0.92, 0.92, 0.92 ) --[[ @ 0]]
	Dots:setImage( RegisterImage( @"uie_highlight_border_dot" ) ) --[[ @ 0]]
	Dots:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_normal" ) ) --[[ @ 0]]
	Dots:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	Dots:setupNineSliceShader( 6, 6 ) --[[ @ 0]]
	self:addElement( Dots ) --[[ @ 0]]
	self.Dots = Dots --[[ @ 0]]
	
	local ProgressBG = LUI.UIImage.new( 0, 1, 17, -17, 1, 1, -56, -20 ) --[[ @ 0]]
	ProgressBG:setRGB( 0, 0, 0 ) --[[ @ 0]]
	ProgressBG:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( ProgressBG ) --[[ @ 0]]
	self.ProgressBG = ProgressBG --[[ @ 0]]
	
	local ProgressBar = CoD.PC_AchievementProgressBar.new( f1_arg0, f1_arg1, 0, 1, 19, -147, 1, 1, -54, -22 ) --[[ @ 0]]
	ProgressBar:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( ProgressBar ) --[[ @ 0]]
	self.ProgressBar = ProgressBar --[[ @ 0]]
	
	local ProgressOutline = CoD.FE_TitleNumBrdr.new( f1_arg0, f1_arg1, 0, 1, 17, -17, 1, 1, -56, -20 ) --[[ @ 0]]
	ProgressOutline:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( ProgressOutline ) --[[ @ 0]]
	self.ProgressOutline = ProgressOutline --[[ @ 0]]
	
	local CurrentProgressValue = LUI.UIText.new( 1, 1, -136, -86, 1, 1, -49, -25 ) --[[ @ 0]]
	CurrentProgressValue:setRGB( 0.58, 0.58, 0.58 ) --[[ @ 0]]
	CurrentProgressValue:setAlpha( 0 ) --[[ @ 0]]
	CurrentProgressValue:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"menu/new" ) ) --[[ @ 0]]
	CurrentProgressValue:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	CurrentProgressValue:setLetterSpacing( 2 ) --[[ @ 0]]
	CurrentProgressValue:setAlignment( Enum[@"luialignment"][@"lui_alignment_right"] ) --[[ @ 0]]
	CurrentProgressValue:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	self:addElement( CurrentProgressValue ) --[[ @ 0]]
	self.CurrentProgressValue = CurrentProgressValue --[[ @ 0]]
	
	local TotalProgressValue = LUI.UIText.new( 1, 1, -71, -21, 1, 1, -50, -25 ) --[[ @ 0]]
	TotalProgressValue:setRGB( 0.58, 0.58, 0.58 ) --[[ @ 0]]
	TotalProgressValue:setAlpha( 0 ) --[[ @ 0]]
	TotalProgressValue:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"menu/new" ) ) --[[ @ 0]]
	TotalProgressValue:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	TotalProgressValue:setLetterSpacing( 2 ) --[[ @ 0]]
	TotalProgressValue:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	TotalProgressValue:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	self:addElement( TotalProgressValue ) --[[ @ 0]]
	self.TotalProgressValue = TotalProgressValue --[[ @ 0]]
	
	local Slash = LUI.UIText.new( 1, 1, -83, -73, 1, 1, -51, -26 ) --[[ @ 0]]
	Slash:setRGB( 0.58, 0.58, 0.58 ) --[[ @ 0]]
	Slash:setAlpha( 0 ) --[[ @ 0]]
	Slash:setText( CoD.BaseUtility.AlreadyLocalized( "/" ) ) --[[ @ 0]]
	Slash:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	Slash:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	Slash:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	self:addElement( Slash ) --[[ @ 0]]
	self.Slash = Slash --[[ @ 0]]
	
	local ArrowsRight = CoD.TabletConnectionArrow.new( f1_arg0, f1_arg1, 1, 1, -60, 5, 0, 0, 219.5, 250.5 ) --[[ @ 0]]
	ArrowsRight:setScale( 0.6, 0.6 ) --[[ @ 0]]
	self:addElement( ArrowsRight ) --[[ @ 0]]
	self.ArrowsRight = ArrowsRight --[[ @ 0]]
	
	local ArrowsLeft = CoD.TabletConnectionArrow.new( f1_arg0, f1_arg1, 0, 0, -5, 60, 0, 0, 219.5, 250.5 ) --[[ @ 0]]
	ArrowsLeft:setZRot( 180 ) --[[ @ 0]]
	ArrowsLeft:setScale( 0.6, 0.6 ) --[[ @ 0]]
	self:addElement( ArrowsLeft ) --[[ @ 0]]
	self.ArrowsLeft = ArrowsLeft --[[ @ 0]]
	
	local AchievementIcon = LUI.UIFixedAspectRatioImage.new( 0.5, 0.5, -128, 128, 0, 0, 107, 363 ) --[[ @ 0]]
	AchievementIcon:setRGB( 0.32, 0.32, 0.32 ) --[[ @ 0]]
	AchievementIcon:setAlpha( 0.8 ) --[[ @ 0]]
	AchievementIcon:setImage( RegisterImage( @"t7_icon_achievement_safehouse_01" ) ) --[[ @ 0]]
	self:addElement( AchievementIcon ) --[[ @ 0]]
	self.AchievementIcon = AchievementIcon --[[ @ 0]]
	
	local Lock = LUI.UIFixedAspectRatioImage.new( 0.5, 0.5, -20, 20, 0, 0, 215, 255 ) --[[ @ 0]]
	Lock:setImage( RegisterImage( @"uie_icon_locks_lock_01" ) ) --[[ @ 0]]
	self:addElement( Lock ) --[[ @ 0]]
	self.Lock = Lock --[[ @ 0]]
	
	local Description = CoD.PC_AchievementDetailedView_Desc.new( f1_arg0, f1_arg1, 0, 1, 17, -17, 0, 0, 400, 574 ) --[[ @ 0]]
	self:addElement( Description ) --[[ @ 0]]
	self.Description = Description --[[ @ 0]]
	
	local Points = CoD.PC_AchievementDetailedView_Points.new( f1_arg0, f1_arg1, 1, 1, -194, -19, 0, 0, 35, 75 ) --[[ @ 0]]
	self:addElement( Points ) --[[ @ 0]]
	self.Points = Points --[[ @ 0]]
	
	local HeaderStripeBot = LUI.UIImage.new( 0, 1, 6, -6, 1, 1, -18, -5 ) --[[ @ 0]]
	HeaderStripeBot:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	HeaderStripeBot:setAlpha( 0.5 ) --[[ @ 0]]
	HeaderStripeBot:setImage( RegisterImage( @"hash_2C7A051F5EFC70E5" ) ) --[[ @ 0]]
	HeaderStripeBot:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_16CBE95C250C6D15" ) ) --[[ @ 0]]
	HeaderStripeBot:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	HeaderStripeBot:setupNineSliceShader( 90, 16 ) --[[ @ 0]]
	self:addElement( HeaderStripeBot ) --[[ @ 0]]
	self.HeaderStripeBot = HeaderStripeBot --[[ @ 0]]
	
	local HeaderStripeTop = LUI.UIImage.new( 0, 1, 6, -6, 0, 0, 5, 18 ) --[[ @ 0]]
	HeaderStripeTop:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	HeaderStripeTop:setAlpha( 0.5 ) --[[ @ 0]]
	HeaderStripeTop:setImage( RegisterImage( @"hash_2C7A051F5EFC70E5" ) ) --[[ @ 0]]
	HeaderStripeTop:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_16CBE95C250C6D15" ) ) --[[ @ 0]]
	HeaderStripeTop:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	HeaderStripeTop:setupNineSliceShader( 90, 16 ) --[[ @ 0]]
	self:addElement( HeaderStripeTop ) --[[ @ 0]]
	self.HeaderStripeTop = HeaderStripeTop --[[ @ 0]]
	
	LUI.OverrideFunction_CallOriginalFirst( self, "setModel", function ( element, controller )
		if CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg1, "isCompleted" ) then
			SetElementState( self, self.ProgressBar, f1_arg1, "Completed" ) --[[ @ 0]]
			SetState( self, "Completed", f1_arg1 ) --[[ @ 0]]
		elseif not CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg1, "isCompleted" ) then
			SetElementState( self, self.ProgressBar, f1_arg1, "DefaultState" ) --[[ @ 0]]
			SetState( self, "DefaultState", f1_arg1 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.PC_AchievementDetailView.__resetProperties = function ( f3_arg0 )
	f3_arg0.Points:completeAnimation() --[[ @ 0]]
	f3_arg0.AchievementIcon:completeAnimation() --[[ @ 0]]
	f3_arg0.Lock:completeAnimation() --[[ @ 0]]
	f3_arg0.AchievementIcon:setRGB( 0.32, 0.32, 0.32 ) --[[ @ 0]]
	f3_arg0.AchievementIcon:setAlpha( 0.8 ) --[[ @ 0]]
	f3_arg0.Lock:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.PC_AchievementDetailView.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f4_arg0, f4_arg1 )
			f4_arg0:__resetProperties() --[[ @ 0]]
			f4_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f4_arg0.Points:completeAnimation() --[[ @ 0]]
			f4_arg0.Points:playClip( "DefaultClip" ) --[[ @ 0]]
			f4_arg0.clipFinished( f4_arg0.Points ) --[[ @ 0]]
		end
	},
	Completed = {
		DefaultClip = function ( f5_arg0, f5_arg1 )
			f5_arg0:__resetProperties() --[[ @ 0]]
			f5_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f5_arg0.AchievementIcon:completeAnimation() --[[ @ 0]]
			f5_arg0.AchievementIcon:setRGB( 1, 1, 1 ) --[[ @ 0]]
			f5_arg0.AchievementIcon:setAlpha( 1 ) --[[ @ 0]]
			f5_arg0.clipFinished( f5_arg0.AchievementIcon ) --[[ @ 0]]
			f5_arg0.Lock:completeAnimation() --[[ @ 0]]
			f5_arg0.Lock:setAlpha( 0 ) --[[ @ 0]]
			f5_arg0.clipFinished( f5_arg0.Lock ) --[[ @ 0]]
			f5_arg0.Points:completeAnimation() --[[ @ 0]]
			f5_arg0.Points:playClip( "Completed" ) --[[ @ 0]]
			f5_arg0.clipFinished( f5_arg0.Points ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.PC_AchievementDetailView.__onClose = function ( f6_arg0 )
	f6_arg0.ProgressBar:close() --[[ @ 0]]
	f6_arg0.ProgressOutline:close() --[[ @ 0]]
	f6_arg0.ArrowsRight:close() --[[ @ 0]]
	f6_arg0.ArrowsLeft:close() --[[ @ 0]]
	f6_arg0.Description:close() --[[ @ 0]]
	f6_arg0.Points:close() --[[ @ 0]]
end
 --[[ @ 0]]
