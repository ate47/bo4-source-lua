-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
CoD.ClanInboxAcceptedWidget = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.ClanInboxAcceptedWidget.__defaultWidth = 100 --[[ @ 0]]
CoD.ClanInboxAcceptedWidget.__defaultHeight = 50 --[[ @ 0]]
CoD.ClanInboxAcceptedWidget.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.ClanInboxAcceptedWidget ) --[[ @ 0]]
	self.id = "ClanInboxAcceptedWidget" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local AcceptedText = LUI.UIText.new( 0, 0, 0, 200, 0, 0, 0, 30 ) --[[ @ 0]]
	AcceptedText:setRGB( 0, 1, 0 ) --[[ @ 0]]
	AcceptedText:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_3D0E687E8FBC95C7" ) ) --[[ @ 0]]
	AcceptedText:setTTF( "default" ) --[[ @ 0]]
	AcceptedText:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	AcceptedText:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	self:addElement( AcceptedText ) --[[ @ 0]]
	self.AcceptedText = AcceptedText --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueNil( self, f1_arg1, "accepted" )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "accepted", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "accepted"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.ClanInboxAcceptedWidget.__resetProperties = function ( f4_arg0 )
	f4_arg0.AcceptedText:completeAnimation() --[[ @ 0]]
	f4_arg0.AcceptedText:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ClanInboxAcceptedWidget.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f5_arg0, f5_arg1 )
			f5_arg0:__resetProperties() --[[ @ 0]]
			f5_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	Hidden = {
		DefaultClip = function ( f6_arg0, f6_arg1 )
			f6_arg0:__resetProperties() --[[ @ 0]]
			f6_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f6_arg0.AcceptedText:completeAnimation() --[[ @ 0]]
			f6_arg0.AcceptedText:setAlpha( 0 ) --[[ @ 0]]
			f6_arg0.clipFinished( f6_arg0.AcceptedText ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
