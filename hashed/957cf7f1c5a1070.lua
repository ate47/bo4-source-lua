-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:51
require( "x64:23e426332d66c91e" ) --[[ @ 0]]
require( "ui/uieditor/widgets/director/directorselectbuttonlines" ) --[[ @ 0]]
require( "x64:2fb1ca312b5b024e" ) --[[ @ 0]]
require( "x64:be4ff35ca001915" ) --[[ @ 0]]
require( "x64:3dd2971a6510d135" ) --[[ @ 0]]
require( "x64:1f9f0e41049e1efe" ) --[[ @ 0]]
require( "x64:59532492bc6fcfca" ) --[[ @ 0]]

CoD.LaboratoryListItemNebuliumPlasmaDiscount_Internal = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.LaboratoryListItemNebuliumPlasmaDiscount_Internal.__defaultWidth = 482 --[[ @ 0]]
CoD.LaboratoryListItemNebuliumPlasmaDiscount_Internal.__defaultHeight = 150 --[[ @ 0]]
CoD.LaboratoryListItemNebuliumPlasmaDiscount_Internal.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.LaboratoryListItemNebuliumPlasmaDiscount_Internal ) --[[ @ 0]]
	self.id = "LaboratoryListItemNebuliumPlasmaDiscount_Internal" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local LaboratoryOfferNameAndDescription = CoD.LaboratoryOfferNameAndDescription.new( f1_arg0, f1_arg1, 0, 0, 0, 480, 0, 0, 195, 237 ) --[[ @ 0]]
	LaboratoryOfferNameAndDescription:setAlpha( 0 ) --[[ @ 0]]
	LaboratoryOfferNameAndDescription:linkToElementModel( self, nil, false, function ( model )
		LaboratoryOfferNameAndDescription:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LaboratoryOfferNameAndDescription:linkToElementModel( self, "labelName", true, function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			LaboratoryOfferNameAndDescription.name:setText( Engine[@"hash_4F9F1239CFD921FE"]( f3_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( LaboratoryOfferNameAndDescription ) --[[ @ 0]]
	self.LaboratoryOfferNameAndDescription = LaboratoryOfferNameAndDescription --[[ @ 0]]
	
	local SceneBlur = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	SceneBlur:setRGB( 0, 0, 0 ) --[[ @ 0]]
	SceneBlur:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_E2354BE557C4C7A" ) ) --[[ @ 0]]
	SceneBlur:setShaderVector( 0, 0, 0.4, 0, 0 ) --[[ @ 0]]
	self:addElement( SceneBlur ) --[[ @ 0]]
	self.SceneBlur = SceneBlur --[[ @ 0]]
	
	local StoneTiledBacking = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	StoneTiledBacking:setAlpha( 0.8 ) --[[ @ 0]]
	StoneTiledBacking:setImage( RegisterImage( @"uie_ui_zm_laboratory_buttonbgtile" ) ) --[[ @ 0]]
	StoneTiledBacking:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_16CBE95C250C6D15" ) ) --[[ @ 0]]
	StoneTiledBacking:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	StoneTiledBacking:setupNineSliceShader( 196, 88 ) --[[ @ 0]]
	self:addElement( StoneTiledBacking ) --[[ @ 0]]
	self.StoneTiledBacking = StoneTiledBacking --[[ @ 0]]
	
	local NoiseTiledBacking = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	NoiseTiledBacking:setAlpha( 0.3 ) --[[ @ 0]]
	NoiseTiledBacking:setImage( RegisterImage( @"uie_ui_menu_specialist_hub_repeat_bg" ) ) --[[ @ 0]]
	NoiseTiledBacking:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_16CBE95C250C6D15" ) ) --[[ @ 0]]
	NoiseTiledBacking:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	NoiseTiledBacking:setupNineSliceShader( 196, 88 ) --[[ @ 0]]
	self:addElement( NoiseTiledBacking ) --[[ @ 0]]
	self.NoiseTiledBacking = NoiseTiledBacking --[[ @ 0]]
	
	local SelectorOverlayRed = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	SelectorOverlayRed:setRGB( 0.89, 0.12, 0.12 ) --[[ @ 0]]
	SelectorOverlayRed:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( SelectorOverlayRed ) --[[ @ 0]]
	self.SelectorOverlayRed = SelectorOverlayRed --[[ @ 0]]
	
	local SelectorOverlayWhite = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	SelectorOverlayWhite:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	SelectorOverlayWhite:setAlpha( 0.01 ) --[[ @ 0]]
	self:addElement( SelectorOverlayWhite ) --[[ @ 0]]
	self.SelectorOverlayWhite = SelectorOverlayWhite --[[ @ 0]]
	
	local FrameBorder = LUI.UIImage.new( 0, 1, -1, 1, 0, 1, -1, 1 ) --[[ @ 0]]
	FrameBorder:setAlpha( 0.15 ) --[[ @ 0]]
	FrameBorder:setImage( RegisterImage( @"uie_ui_menu_store_common_frame" ) ) --[[ @ 0]]
	FrameBorder:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_add" ) ) --[[ @ 0]]
	FrameBorder:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	FrameBorder:setupNineSliceShader( 12, 12 ) --[[ @ 0]]
	self:addElement( FrameBorder ) --[[ @ 0]]
	self.FrameBorder = FrameBorder --[[ @ 0]]
	
	local LightFocus = LUI.UIImage.new( -0.05, 1.05, 0.5, 0.5, 0.5, 0.5, -74.5, 84.5 ) --[[ @ 0]]
	LightFocus:setAlpha( 0 ) --[[ @ 0]]
	LightFocus:setImage( RegisterImage( @"uie_ui_menu_zombies_cac_special_weapon_light_focus" ) ) --[[ @ 0]]
	self:addElement( LightFocus ) --[[ @ 0]]
	self.LightFocus = LightFocus --[[ @ 0]]
	
	local FocusGlow = LUI.UIImage.new( 0.19, 0.81, -240, 240, 0.2, 0.8, -74, 74 ) --[[ @ 0]]
	FocusGlow:setRGB( 0.89, 0.12, 0.12 ) --[[ @ 0]]
	FocusGlow:setAlpha( 0 ) --[[ @ 0]]
	FocusGlow:setImage( RegisterImage( @"uie_ui_menu_common_focus_glow_large" ) ) --[[ @ 0]]
	FocusGlow:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_6DAB59B2CAE01851" ) ) --[[ @ 0]]
	FocusGlow:setShaderVector( 0, 0, 0, 0.25, 0.25 ) --[[ @ 0]]
	FocusGlow:setShaderVector( 1, 1.2, 0, 0, 0 ) --[[ @ 0]]
	FocusGlow:setupNineSliceShader( 300, 300 ) --[[ @ 0]]
	self:addElement( FocusGlow ) --[[ @ 0]]
	self.FocusGlow = FocusGlow --[[ @ 0]]
	
	local Lines = CoD.DirectorSelectButtonLines.new( f1_arg0, f1_arg1, 0, 1, -1, 1, 0, 1, 1, -1 ) --[[ @ 0]]
	Lines:setRGB( 0.64, 0.71, 0.78 ) --[[ @ 0]]
	Lines:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( Lines ) --[[ @ 0]]
	self.Lines = Lines --[[ @ 0]]
	
	local FocusBrackets = CoD.CommonFocusBrackets.new( f1_arg0, f1_arg1, 0, 1, -10, 10, 0, 1, -10, 10 ) --[[ @ 0]]
	FocusBrackets:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( FocusBrackets ) --[[ @ 0]]
	self.FocusBrackets = FocusBrackets --[[ @ 0]]
	
	local MetalFrame = LUI.UIImage.new( 0, 1, -2, 2, 0, 1, -2, 2 ) --[[ @ 0]]
	MetalFrame:setImage( RegisterImage( @"uie_ui_zm_laboratory_buttonframe" ) ) --[[ @ 0]]
	MetalFrame:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_add" ) ) --[[ @ 0]]
	MetalFrame:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	MetalFrame:setupNineSliceShader( 16, 16 ) --[[ @ 0]]
	self:addElement( MetalFrame ) --[[ @ 0]]
	self.MetalFrame = MetalFrame --[[ @ 0]]
	
	local MetalFrameAdditive = LUI.UIImage.new( 0, 1, -2, 2, 0, 1, -2, 2 ) --[[ @ 0]]
	MetalFrameAdditive:setRGB( 0.89, 0.12, 0.12 ) --[[ @ 0]]
	MetalFrameAdditive:setAlpha( 0 ) --[[ @ 0]]
	MetalFrameAdditive:setImage( RegisterImage( @"uie_ui_zm_laboratory_buttonframe" ) ) --[[ @ 0]]
	MetalFrameAdditive:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_add" ) ) --[[ @ 0]]
	MetalFrameAdditive:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	MetalFrameAdditive:setupNineSliceShader( 16, 16 ) --[[ @ 0]]
	self:addElement( MetalFrameAdditive ) --[[ @ 0]]
	self.MetalFrameAdditive = MetalFrameAdditive --[[ @ 0]]
	
	local metal = LUI.UIImage.new( 0, 0, -5.5, 486.5, 0, 0, -7, 157 ) --[[ @ 0]]
	metal:setImage( RegisterImage( @"uie_ui_zm_laboratory_special_offer_metal" ) ) --[[ @ 0]]
	self:addElement( metal ) --[[ @ 0]]
	self.metal = metal --[[ @ 0]]
	
	local Glint = LUI.UIImage.new( 0, 0, 3, 478, 0, 0, 4, 147 ) --[[ @ 0]]
	Glint:setRGB( 0.37, 0.25, 0.7 ) --[[ @ 0]]
	Glint:setAlpha( 0 ) --[[ @ 0]]
	Glint:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_glint_add" ) ) --[[ @ 0]]
	Glint:setShaderVector( 0, 1.24, 0, 0, 0 ) --[[ @ 0]]
	Glint:setShaderVector( 1, -46.8, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( Glint ) --[[ @ 0]]
	self.Glint = Glint --[[ @ 0]]
	
	local Smoke = LUI.UIImage.new( 0, 0, 3, 478, 0, 0, 0.5, 137.5 ) --[[ @ 0]]
	Smoke:setRGB( 0.15, 0.02, 0.95 ) --[[ @ 0]]
	Smoke:setImage( RegisterImage( @"uie_ui_zm_laboratory_special_offer_smoke" ) ) --[[ @ 0]]
	Smoke:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_31CC85D0A86303B0" ) ) --[[ @ 0]]
	Smoke:setShaderVector( 0, 1.5, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( Smoke ) --[[ @ 0]]
	self.Smoke = Smoke --[[ @ 0]]
	
	local Smoke2 = LUI.UIImage.new( 0, 0, 3, 478, 0, 0, 0.5, 137.5 ) --[[ @ 0]]
	Smoke2:setRGB( 0.15, 0.02, 0.95 ) --[[ @ 0]]
	Smoke2:setZRot( 180 ) --[[ @ 0]]
	Smoke2:setImage( RegisterImage( @"uie_ui_zm_laboratory_special_offer_smoke" ) ) --[[ @ 0]]
	Smoke2:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_31CC85D0A86303B0" ) ) --[[ @ 0]]
	Smoke2:setShaderVector( 0, 1.5, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( Smoke2 ) --[[ @ 0]]
	self.Smoke2 = Smoke2 --[[ @ 0]]
	
	local Banner = LUI.UIImage.new( 0, 0, 133.5, 476.5, 0, 0, 109, 144 ) --[[ @ 0]]
	Banner:setRGB( 0, 0, 0 ) --[[ @ 0]]
	Banner:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( Banner ) --[[ @ 0]]
	self.Banner = Banner --[[ @ 0]]
	
	local limit = CoD.LaboratoryListItemInternalPurchaseLimit.new( f1_arg0, f1_arg1, 0, 1, 6, -6, 1, 1, -40, -6 ) --[[ @ 0]]
	limit:mergeStateConditions( {
		{
			stateName = "Visible",
			condition = function ( menu, element, event )
				local f4_local0 --[[ @ 0]]
				if not CoD.ModelUtility.IsSelfModelValueNilOrZero( element, f1_arg1, "maxQuantity" ) then
					f4_local0 = CoD.ZMLaboratoryUtility.CanPurchaseMore( f1_arg1, element ) --[[ @ 0]]
				else
					f4_local0 = false --[[ @ 0]]
				end
				return f4_local0
			end
		},
		{
			stateName = "VisibleCantPurchase",
			condition = function ( menu, element, event )
				return not CoD.ModelUtility.IsSelfModelValueNilOrZero( element, f1_arg1, "maxQuantity" )
			end
		}
	} ) --[[ @ 0]]
	limit:linkToElementModel( limit, "maxQuantity", true, function ( model )
		f1_arg0:updateElementState( limit, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "maxQuantity"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	limit:setAlpha( 0 ) --[[ @ 0]]
	limit:linkToElementModel( self, nil, false, function ( model )
		limit:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( limit ) --[[ @ 0]]
	self.limit = limit --[[ @ 0]]
	
	local Icon = CoD.LaboratoryListItemInternalIconAndText.new( f1_arg0, f1_arg1, 0, 0, 19, 119, 0, 0, 24, 124 ) --[[ @ 0]]
	Icon:mergeStateConditions( {
		{
			stateName = "ShowTextRight",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueNonEmptyString( element, f1_arg1, "displayName" )
			end
		}
	} ) --[[ @ 0]]
	Icon:linkToElementModel( Icon, "displayName", true, function ( model )
		f1_arg0:updateElementState( Icon, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "displayName"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	Icon:setScale( 0.9, 1 ) --[[ @ 0]]
	Icon:linkToElementModel( self, nil, false, function ( model )
		Icon:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( Icon ) --[[ @ 0]]
	self.Icon = Icon --[[ @ 0]]
	
	local FocusBorder = LUI.UIImage.new( 0, 1, -2, 2, 0, 1, -2, 2 ) --[[ @ 0]]
	FocusBorder:setRGB( 0.89, 0.12, 0.12 ) --[[ @ 0]]
	FocusBorder:setAlpha( 0 ) --[[ @ 0]]
	FocusBorder:setImage( RegisterImage( @"uie_ui_menu_store_focus_frame" ) ) --[[ @ 0]]
	FocusBorder:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_add" ) ) --[[ @ 0]]
	FocusBorder:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	FocusBorder:setupNineSliceShader( 6, 6 ) --[[ @ 0]]
	self:addElement( FocusBorder ) --[[ @ 0]]
	self.FocusBorder = FocusBorder --[[ @ 0]]
	
	local TopOrnament = CoD.zm_LaboratoryDescriptionDivider.new( f1_arg0, f1_arg1, 0, 1, -0.5, -0.5, 0, 0, -11, 15 ) --[[ @ 0]]
	TopOrnament.Center:setAlpha( 0 ) --[[ @ 0]]
	TopOrnament.R:setScale( 0.6, 0.6 ) --[[ @ 0]]
	TopOrnament.L:setScale( 0.6, 0.6 ) --[[ @ 0]]
	self:addElement( TopOrnament ) --[[ @ 0]]
	self.TopOrnament = TopOrnament --[[ @ 0]]
	
	local Timer = LUI.UIText.new( 1, 1, -329.5, -14.5, 0, 0, 123.5, 137.5 ) --[[ @ 0]]
	Timer:setRGB( 0.58, 0.85, 1 ) --[[ @ 0]]
	Timer:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_67E9AAD95DB4B21E" ) ) --[[ @ 0]]
	Timer:setTTF( "dinnext_regular" ) --[[ @ 0]]
	Timer:setLetterSpacing( 2 ) --[[ @ 0]]
	Timer:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	Timer:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	self:addElement( Timer ) --[[ @ 0]]
	self.Timer = Timer --[[ @ 0]]
	
	local Quantity = LUI.UIText.new( 0, 0, 7.5, 133.5, 0, 0, 107, 143 ) --[[ @ 0]]
	Quantity:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	Quantity:setTTF( "skorzhen" ) --[[ @ 0]]
	Quantity:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_90D57B1E92D39D7" ) ) --[[ @ 0]]
	Quantity:setShaderVector( 0, 0.79, 0, 0, 0 ) --[[ @ 0]]
	Quantity:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	Quantity:setShaderVector( 2, 0, 0, 0, 1 ) --[[ @ 0]]
	Quantity:setLetterSpacing( 2 ) --[[ @ 0]]
	Quantity:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	Quantity:linkToElementModel( self, "displayName", true, function ( model )
		local f11_local0 = model:get() --[[ @ 0]]
		if f11_local0 ~= nil then
			Quantity:setText( LocalizeIntoString( @"menu/multiplier_x", f11_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Quantity ) --[[ @ 0]]
	self.Quantity = Quantity --[[ @ 0]]
	
	local Discount = LUI.UIText.new( 0, 0, 136, 467, 0, 0, 18, 38 ) --[[ @ 0]]
	Discount:setRGB( 0, 0, 0 ) --[[ @ 0]]
	Discount:setText( LocalizeToUpperString( @"hash_3C0C634474914EA" ) ) --[[ @ 0]]
	Discount:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	Discount:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_171E049B161CD00A" ) ) --[[ @ 0]]
	Discount:setLetterSpacing( 1 ) --[[ @ 0]]
	Discount:setAlignment( Enum[@"luialignment"][@"lui_alignment_right"] ) --[[ @ 0]]
	Discount:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	Discount:setBackingType( 1 ) --[[ @ 0]]
	Discount:setBackingWidget( CoD.ZM_Promo_Banner, f1_arg0, f1_arg1 ) --[[ @ 0]]
	Discount:setBackingColor( 0, 0.87, 1 ) --[[ @ 0]]
	Discount:setBackingXPadding( 9 ) --[[ @ 0]]
	Discount:setBackingYPadding( 6 ) --[[ @ 0]]
	self:addElement( Discount ) --[[ @ 0]]
	self.Discount = Discount --[[ @ 0]]
	
	local codpointCost = LUI.UIText.new( 0.5, 0.5, -91.5, 218.5, 1, 1, -70.5, -44.5 ) --[[ @ 0]]
	codpointCost:setRGB( ColorSet.CodPointsNumber.r, ColorSet.CodPointsNumber.g, ColorSet.CodPointsNumber.b ) --[[ @ 0]]
	codpointCost:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	codpointCost:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	codpointCost:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	codpointCost:linkToElementModel( self, "price", true, function ( model )
		local f12_local0 = model:get() --[[ @ 0]]
		if f12_local0 ~= nil then
			codpointCost:setText( LocalizeIntoString( @"hash_56A3CC7BE3008989", f12_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( codpointCost ) --[[ @ 0]]
	self.codpointCost = codpointCost --[[ @ 0]]
	
	local Name = LUI.UIText.new( 0, 0, 152.5, 467.5, 0, 0, 47, 81 ) --[[ @ 0]]
	Name:setRGB( 0.63, 0.49, 1 ) --[[ @ 0]]
	Name:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_633CCE15E5387569" ) ) --[[ @ 0]]
	Name:setTTF( "skorzhen" ) --[[ @ 0]]
	Name:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_90D57B1E92D39D7" ) ) --[[ @ 0]]
	Name:setShaderVector( 0, 1, 0, 0, 0 ) --[[ @ 0]]
	Name:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	Name:setShaderVector( 2, 0, 0, 0, 0.86 ) --[[ @ 0]]
	Name:setLetterSpacing( 1 ) --[[ @ 0]]
	Name:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	Name:setAlignment( Enum[@"luialignment"][@"hash_E821F0ECFF8D1C7"] ) --[[ @ 0]]
	self:addElement( Name ) --[[ @ 0]]
	self.Name = Name --[[ @ 0]]
	
	local BannerWrap = LUI.UIImage.new( 0, 0, 441, 485, 0, 0, 13, 46 ) --[[ @ 0]]
	BannerWrap:setRGB( 0, 0.87, 1 ) --[[ @ 0]]
	BannerWrap:setImage( RegisterImage( @"uie_ui_zm_laboratory_promo_banner_wrap" ) ) --[[ @ 0]]
	BannerWrap:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_wipe_delta_normal" ) ) --[[ @ 0]]
	BannerWrap:setShaderVector( 0, 0.84, 1, 0, 0 ) --[[ @ 0]]
	BannerWrap:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	BannerWrap:setShaderVector( 2, 0, 1, 0, 0 ) --[[ @ 0]]
	BannerWrap:setShaderVector( 3, 0, 0, 0, 0 ) --[[ @ 0]]
	BannerWrap:setShaderVector( 4, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( BannerWrap ) --[[ @ 0]]
	self.BannerWrap = BannerWrap --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Enabled",
			condition = function ( menu, element, event )
				local f13_local0 = CoD.ZMLaboratoryUtility.CanPurchaseMore( f1_arg1, element ) --[[ @ 0]]
				if f13_local0 then
					if not CoD.ModelUtility.IsModelValueEqualTo( f1_arg1, "Laboratory.disableInput", 1 ) then
						f13_local0 = CoD.ZMLaboratoryUtility.IsInAnimState1( f1_arg1, CoD.ZMLaboratoryUtility.LabAnimState.NOT_PLAYING ) --[[ @ 0]]
					else
						f13_local0 = false --[[ @ 0]]
					end
				end
				return f13_local0
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "maxQuantity", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "maxQuantity"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local f1_local29 = self --[[ @ 0]]
	local f1_local30 = self.subscribeToModel --[[ @ 0]]
	local f1_local31 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local30( f1_local29, f1_local31["Laboratory.disableInput"], function ( f15_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f15_arg0:get(),
			modelName = "Laboratory.disableInput"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local29 = self --[[ @ 0]]
	f1_local30 = self.subscribeToModel --[[ @ 0]]
	f1_local31 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local30( f1_local29, f1_local31["Laboratory.animState"], function ( f16_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f16_arg0:get(),
			modelName = "Laboratory.animState"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( self, "setModel", function ( element, controller )
		CoD.ZMLaboratoryUtility.SetupEventCountdown( self, self.Timer ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.LaboratoryListItemNebuliumPlasmaDiscount_Internal.__resetProperties = function ( f18_arg0 )
	f18_arg0.codpointCost:completeAnimation() --[[ @ 0]]
	f18_arg0.FocusBrackets:completeAnimation() --[[ @ 0]]
	f18_arg0.Glint:completeAnimation() --[[ @ 0]]
	f18_arg0.FocusGlow:completeAnimation() --[[ @ 0]]
	f18_arg0.Lines:completeAnimation() --[[ @ 0]]
	f18_arg0.FocusBorder:completeAnimation() --[[ @ 0]]
	f18_arg0.SelectorOverlayRed:completeAnimation() --[[ @ 0]]
	f18_arg0.LightFocus:completeAnimation() --[[ @ 0]]
	f18_arg0.MetalFrameAdditive:completeAnimation() --[[ @ 0]]
	f18_arg0.LaboratoryOfferNameAndDescription:completeAnimation() --[[ @ 0]]
	f18_arg0.codpointCost:setAlpha( 1 ) --[[ @ 0]]
	f18_arg0.FocusBrackets:setLeftRight( 0, 1, -10, 10 ) --[[ @ 0]]
	f18_arg0.FocusBrackets:setTopBottom( 0, 1, -10, 10 ) --[[ @ 0]]
	f18_arg0.FocusBrackets:setAlpha( 0 ) --[[ @ 0]]
	f18_arg0.Glint:setAlpha( 0 ) --[[ @ 0]]
	f18_arg0.Glint:setShaderVector( 0, 1.24, 0, 0, 0 ) --[[ @ 0]]
	f18_arg0.Glint:setShaderVector( 1, -46.8, 0, 0, 0 ) --[[ @ 0]]
	f18_arg0.FocusGlow:setAlpha( 0 ) --[[ @ 0]]
	f18_arg0.Lines:setAlpha( 0 ) --[[ @ 0]]
	f18_arg0.FocusBorder:setAlpha( 0 ) --[[ @ 0]]
	f18_arg0.SelectorOverlayRed:setAlpha( 0 ) --[[ @ 0]]
	f18_arg0.LightFocus:setAlpha( 0 ) --[[ @ 0]]
	f18_arg0.MetalFrameAdditive:setAlpha( 0 ) --[[ @ 0]]
	f18_arg0.LaboratoryOfferNameAndDescription:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.LaboratoryListItemNebuliumPlasmaDiscount_Internal.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f19_arg0, f19_arg1 )
			f19_arg0:__resetProperties() --[[ @ 0]]
			f19_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f19_arg0.FocusBrackets:completeAnimation() --[[ @ 0]]
			f19_arg0.FocusBrackets:setAlpha( 0 ) --[[ @ 0]]
			f19_arg0.clipFinished( f19_arg0.FocusBrackets ) --[[ @ 0]]
			local f19_local0 = function ( f20_arg0 )
				local f20_local0 = function ( f21_arg0 )
					local f21_local0 = function ( f22_arg0 )
						f22_arg0:beginAnimation( 4040 ) --[[ @ 0]]
						f22_arg0:registerEventHandler( "transition_complete_keyframe", f19_arg0.clipFinished ) --[[ @ 0]]
					end
					 --[[ @ 0]]
					f21_arg0:beginAnimation( 510 ) --[[ @ 0]]
					f21_arg0:setAlpha( 0 ) --[[ @ 0]]
					f21_arg0:setShaderVector( 0, 1.18, 0, 0, 0 ) --[[ @ 0]]
					f21_arg0:registerEventHandler( "transition_complete_keyframe", f21_local0 ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f19_arg0.Glint:beginAnimation( 450 ) --[[ @ 0]]
				f19_arg0.Glint:setAlpha( 0.08 ) --[[ @ 0]]
				f19_arg0.Glint:setShaderVector( 0, 0.4, 0, 0, 0 ) --[[ @ 0]]
				f19_arg0.Glint:registerEventHandler( "interrupted_keyframe", f19_arg0.clipInterrupted ) --[[ @ 0]]
				f19_arg0.Glint:registerEventHandler( "transition_complete_keyframe", f20_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f19_arg0.Glint:completeAnimation() --[[ @ 0]]
			f19_arg0.Glint:setAlpha( 0 ) --[[ @ 0]]
			f19_arg0.Glint:setShaderVector( 0, -0.28, 0, 0, 0 ) --[[ @ 0]]
			f19_arg0.Glint:setShaderVector( 1, -46.8, 0, 0, 0 ) --[[ @ 0]]
			f19_local0( f19_arg0.Glint ) --[[ @ 0]]
			f19_arg0.codpointCost:completeAnimation() --[[ @ 0]]
			f19_arg0.codpointCost:setAlpha( 1 ) --[[ @ 0]]
			f19_arg0.clipFinished( f19_arg0.codpointCost ) --[[ @ 0]]
			f19_arg0.nextClip = "DefaultClip" --[[ @ 0]]
		end,
		Focus = function ( f23_arg0, f23_arg1 )
			f23_arg0:__resetProperties() --[[ @ 0]]
			f23_arg0:setupElementClipCounter( 6 ) --[[ @ 0]]
			f23_arg0.SelectorOverlayRed:completeAnimation() --[[ @ 0]]
			f23_arg0.SelectorOverlayRed:setAlpha( 0.02 ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.SelectorOverlayRed ) --[[ @ 0]]
			f23_arg0.LightFocus:completeAnimation() --[[ @ 0]]
			f23_arg0.LightFocus:setAlpha( 0.15 ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.LightFocus ) --[[ @ 0]]
			f23_arg0.FocusGlow:completeAnimation() --[[ @ 0]]
			f23_arg0.FocusGlow:setAlpha( 1 ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.FocusGlow ) --[[ @ 0]]
			f23_arg0.Lines:completeAnimation() --[[ @ 0]]
			f23_arg0.Lines:setAlpha( 0 ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.Lines ) --[[ @ 0]]
			f23_arg0.MetalFrameAdditive:completeAnimation() --[[ @ 0]]
			f23_arg0.MetalFrameAdditive:setAlpha( 1 ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.MetalFrameAdditive ) --[[ @ 0]]
			f23_arg0.FocusBorder:completeAnimation() --[[ @ 0]]
			f23_arg0.FocusBorder:setAlpha( 0 ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.FocusBorder ) --[[ @ 0]]
		end,
		GainFocus = function ( f24_arg0, f24_arg1 )
			f24_arg0:__resetProperties() --[[ @ 0]]
			f24_arg0:setupElementClipCounter( 7 ) --[[ @ 0]]
			local f24_local0 = function ( f25_arg0 )
				f24_arg0.SelectorOverlayRed:beginAnimation( 200 ) --[[ @ 0]]
				f24_arg0.SelectorOverlayRed:setAlpha( 0.02 ) --[[ @ 0]]
				f24_arg0.SelectorOverlayRed:registerEventHandler( "interrupted_keyframe", f24_arg0.clipInterrupted ) --[[ @ 0]]
				f24_arg0.SelectorOverlayRed:registerEventHandler( "transition_complete_keyframe", f24_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f24_arg0.SelectorOverlayRed:completeAnimation() --[[ @ 0]]
			f24_arg0.SelectorOverlayRed:setAlpha( 0 ) --[[ @ 0]]
			f24_local0( f24_arg0.SelectorOverlayRed ) --[[ @ 0]]
			local f24_local1 = function ( f26_arg0 )
				f24_arg0.LightFocus:beginAnimation( 200 ) --[[ @ 0]]
				f24_arg0.LightFocus:setAlpha( 0.15 ) --[[ @ 0]]
				f24_arg0.LightFocus:registerEventHandler( "interrupted_keyframe", f24_arg0.clipInterrupted ) --[[ @ 0]]
				f24_arg0.LightFocus:registerEventHandler( "transition_complete_keyframe", f24_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f24_arg0.LightFocus:completeAnimation() --[[ @ 0]]
			f24_arg0.LightFocus:setAlpha( 0 ) --[[ @ 0]]
			f24_local1( f24_arg0.LightFocus ) --[[ @ 0]]
			local f24_local2 = function ( f27_arg0 )
				f24_arg0.FocusGlow:beginAnimation( 200 ) --[[ @ 0]]
				f24_arg0.FocusGlow:setAlpha( 1 ) --[[ @ 0]]
				f24_arg0.FocusGlow:registerEventHandler( "interrupted_keyframe", f24_arg0.clipInterrupted ) --[[ @ 0]]
				f24_arg0.FocusGlow:registerEventHandler( "transition_complete_keyframe", f24_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f24_arg0.FocusGlow:completeAnimation() --[[ @ 0]]
			f24_arg0.FocusGlow:setAlpha( 0 ) --[[ @ 0]]
			f24_local2( f24_arg0.FocusGlow ) --[[ @ 0]]
			local f24_local3 = function ( f28_arg0 )
				local f28_local0 = function ( f29_arg0 )
					f29_arg0:beginAnimation( 50 ) --[[ @ 0]]
					f29_arg0:setLeftRight( 0, 1, -10, 10 ) --[[ @ 0]]
					f29_arg0:setTopBottom( 0, 1, -10, 10 ) --[[ @ 0]]
					f29_arg0:setAlpha( 1 ) --[[ @ 0]]
					f29_arg0:registerEventHandler( "transition_complete_keyframe", f24_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f24_arg0.FocusBrackets:beginAnimation( 100 ) --[[ @ 0]]
				f24_arg0.FocusBrackets:setLeftRight( 0, 1, -8, 8 ) --[[ @ 0]]
				f24_arg0.FocusBrackets:setTopBottom( 0, 1, -8, 8 ) --[[ @ 0]]
				f24_arg0.FocusBrackets:setAlpha( 0.67 ) --[[ @ 0]]
				f24_arg0.FocusBrackets:registerEventHandler( "interrupted_keyframe", f24_arg0.clipInterrupted ) --[[ @ 0]]
				f24_arg0.FocusBrackets:registerEventHandler( "transition_complete_keyframe", f28_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f24_arg0.FocusBrackets:completeAnimation() --[[ @ 0]]
			f24_arg0.FocusBrackets:setLeftRight( 0, 1, -40, 40 ) --[[ @ 0]]
			f24_arg0.FocusBrackets:setTopBottom( 0, 1, -40, 40 ) --[[ @ 0]]
			f24_arg0.FocusBrackets:setAlpha( 0 ) --[[ @ 0]]
			f24_local3( f24_arg0.FocusBrackets ) --[[ @ 0]]
			local f24_local4 = function ( f30_arg0 )
				f24_arg0.MetalFrameAdditive:beginAnimation( 200 ) --[[ @ 0]]
				f24_arg0.MetalFrameAdditive:setAlpha( 1 ) --[[ @ 0]]
				f24_arg0.MetalFrameAdditive:registerEventHandler( "interrupted_keyframe", f24_arg0.clipInterrupted ) --[[ @ 0]]
				f24_arg0.MetalFrameAdditive:registerEventHandler( "transition_complete_keyframe", f24_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f24_arg0.MetalFrameAdditive:completeAnimation() --[[ @ 0]]
			f24_arg0.MetalFrameAdditive:setAlpha( 0 ) --[[ @ 0]]
			f24_local4( f24_arg0.MetalFrameAdditive ) --[[ @ 0]]
			f24_arg0.FocusBorder:completeAnimation() --[[ @ 0]]
			f24_arg0.FocusBorder:setAlpha( 0 ) --[[ @ 0]]
			f24_arg0.clipFinished( f24_arg0.FocusBorder ) --[[ @ 0]]
			f24_arg0.codpointCost:completeAnimation() --[[ @ 0]]
			f24_arg0.codpointCost:setAlpha( 0 ) --[[ @ 0]]
			f24_arg0.clipFinished( f24_arg0.codpointCost ) --[[ @ 0]]
		end,
		LoseFocus = function ( f31_arg0, f31_arg1 )
			f31_arg0:__resetProperties() --[[ @ 0]]
			f31_arg0:setupElementClipCounter( 7 ) --[[ @ 0]]
			local f31_local0 = function ( f32_arg0 )
				f31_arg0.SelectorOverlayRed:beginAnimation( 200 ) --[[ @ 0]]
				f31_arg0.SelectorOverlayRed:setAlpha( 0 ) --[[ @ 0]]
				f31_arg0.SelectorOverlayRed:registerEventHandler( "interrupted_keyframe", f31_arg0.clipInterrupted ) --[[ @ 0]]
				f31_arg0.SelectorOverlayRed:registerEventHandler( "transition_complete_keyframe", f31_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f31_arg0.SelectorOverlayRed:completeAnimation() --[[ @ 0]]
			f31_arg0.SelectorOverlayRed:setAlpha( 0.02 ) --[[ @ 0]]
			f31_local0( f31_arg0.SelectorOverlayRed ) --[[ @ 0]]
			local f31_local1 = function ( f33_arg0 )
				f31_arg0.LightFocus:beginAnimation( 200 ) --[[ @ 0]]
				f31_arg0.LightFocus:setAlpha( 0 ) --[[ @ 0]]
				f31_arg0.LightFocus:registerEventHandler( "interrupted_keyframe", f31_arg0.clipInterrupted ) --[[ @ 0]]
				f31_arg0.LightFocus:registerEventHandler( "transition_complete_keyframe", f31_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f31_arg0.LightFocus:completeAnimation() --[[ @ 0]]
			f31_arg0.LightFocus:setAlpha( 0.15 ) --[[ @ 0]]
			f31_local1( f31_arg0.LightFocus ) --[[ @ 0]]
			local f31_local2 = function ( f34_arg0 )
				f31_arg0.FocusGlow:beginAnimation( 200 ) --[[ @ 0]]
				f31_arg0.FocusGlow:setAlpha( 0 ) --[[ @ 0]]
				f31_arg0.FocusGlow:registerEventHandler( "interrupted_keyframe", f31_arg0.clipInterrupted ) --[[ @ 0]]
				f31_arg0.FocusGlow:registerEventHandler( "transition_complete_keyframe", f31_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f31_arg0.FocusGlow:completeAnimation() --[[ @ 0]]
			f31_arg0.FocusGlow:setAlpha( 1 ) --[[ @ 0]]
			f31_local2( f31_arg0.FocusGlow ) --[[ @ 0]]
			local f31_local3 = function ( f35_arg0 )
				f31_arg0.FocusBrackets:beginAnimation( 60 ) --[[ @ 0]]
				f31_arg0.FocusBrackets:setAlpha( 0 ) --[[ @ 0]]
				f31_arg0.FocusBrackets:registerEventHandler( "interrupted_keyframe", f31_arg0.clipInterrupted ) --[[ @ 0]]
				f31_arg0.FocusBrackets:registerEventHandler( "transition_complete_keyframe", f31_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f31_arg0.FocusBrackets:completeAnimation() --[[ @ 0]]
			f31_arg0.FocusBrackets:setAlpha( 1 ) --[[ @ 0]]
			f31_local3( f31_arg0.FocusBrackets ) --[[ @ 0]]
			local f31_local4 = function ( f36_arg0 )
				f31_arg0.MetalFrameAdditive:beginAnimation( 200 ) --[[ @ 0]]
				f31_arg0.MetalFrameAdditive:setAlpha( 0 ) --[[ @ 0]]
				f31_arg0.MetalFrameAdditive:registerEventHandler( "interrupted_keyframe", f31_arg0.clipInterrupted ) --[[ @ 0]]
				f31_arg0.MetalFrameAdditive:registerEventHandler( "transition_complete_keyframe", f31_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f31_arg0.MetalFrameAdditive:completeAnimation() --[[ @ 0]]
			f31_arg0.MetalFrameAdditive:setAlpha( 1 ) --[[ @ 0]]
			f31_local4( f31_arg0.MetalFrameAdditive ) --[[ @ 0]]
			f31_arg0.FocusBorder:completeAnimation() --[[ @ 0]]
			f31_arg0.FocusBorder:setAlpha( 0 ) --[[ @ 0]]
			f31_arg0.clipFinished( f31_arg0.FocusBorder ) --[[ @ 0]]
			f31_arg0.codpointCost:completeAnimation() --[[ @ 0]]
			f31_arg0.codpointCost:setAlpha( 0 ) --[[ @ 0]]
			f31_arg0.clipFinished( f31_arg0.codpointCost ) --[[ @ 0]]
		end
	},
	Enabled = {
		DefaultClip = function ( f37_arg0, f37_arg1 )
			f37_arg0:__resetProperties() --[[ @ 0]]
			f37_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f37_arg0.FocusBrackets:completeAnimation() --[[ @ 0]]
			f37_arg0.FocusBrackets:setAlpha( 0 ) --[[ @ 0]]
			f37_arg0.clipFinished( f37_arg0.FocusBrackets ) --[[ @ 0]]
			local f37_local0 = function ( f38_arg0 )
				local f38_local0 = function ( f39_arg0 )
					local f39_local0 = function ( f40_arg0 )
						f40_arg0:beginAnimation( 3970 ) --[[ @ 0]]
						f40_arg0:registerEventHandler( "transition_complete_keyframe", f37_arg0.clipFinished ) --[[ @ 0]]
					end
					 --[[ @ 0]]
					f39_arg0:beginAnimation( 520 ) --[[ @ 0]]
					f39_arg0:setAlpha( 0 ) --[[ @ 0]]
					f39_arg0:setShaderVector( 0, 1.24, 0, 0, 0 ) --[[ @ 0]]
					f39_arg0:registerEventHandler( "transition_complete_keyframe", f39_local0 ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f37_arg0.Glint:beginAnimation( 450 ) --[[ @ 0]]
				f37_arg0.Glint:setAlpha( 0.08 ) --[[ @ 0]]
				f37_arg0.Glint:setShaderVector( 0, 0.49, 0, 0, 0 ) --[[ @ 0]]
				f37_arg0.Glint:registerEventHandler( "interrupted_keyframe", f37_arg0.clipInterrupted ) --[[ @ 0]]
				f37_arg0.Glint:registerEventHandler( "transition_complete_keyframe", f38_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f37_arg0.Glint:completeAnimation() --[[ @ 0]]
			f37_arg0.Glint:setAlpha( 0 ) --[[ @ 0]]
			f37_arg0.Glint:setShaderVector( 0, -0.17, 0, 0, 0 ) --[[ @ 0]]
			f37_arg0.Glint:setShaderVector( 1, -46.8, 0, 0, 0 ) --[[ @ 0]]
			f37_local0( f37_arg0.Glint ) --[[ @ 0]]
			f37_arg0.codpointCost:completeAnimation() --[[ @ 0]]
			f37_arg0.codpointCost:setAlpha( 1 ) --[[ @ 0]]
			f37_arg0.clipFinished( f37_arg0.codpointCost ) --[[ @ 0]]
			f37_arg0.nextClip = "DefaultClip" --[[ @ 0]]
		end,
		GainFocus = function ( f41_arg0, f41_arg1 )
			f41_arg0:__resetProperties() --[[ @ 0]]
			f41_arg0:setupElementClipCounter( 8 ) --[[ @ 0]]
			f41_arg0.LaboratoryOfferNameAndDescription:completeAnimation() --[[ @ 0]]
			f41_arg0.LaboratoryOfferNameAndDescription:setAlpha( 0 ) --[[ @ 0]]
			f41_arg0.clipFinished( f41_arg0.LaboratoryOfferNameAndDescription ) --[[ @ 0]]
			local f41_local0 = function ( f42_arg0 )
				f41_arg0.SelectorOverlayRed:beginAnimation( 200 ) --[[ @ 0]]
				f41_arg0.SelectorOverlayRed:setAlpha( 0.02 ) --[[ @ 0]]
				f41_arg0.SelectorOverlayRed:registerEventHandler( "interrupted_keyframe", f41_arg0.clipInterrupted ) --[[ @ 0]]
				f41_arg0.SelectorOverlayRed:registerEventHandler( "transition_complete_keyframe", f41_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f41_arg0.SelectorOverlayRed:completeAnimation() --[[ @ 0]]
			f41_arg0.SelectorOverlayRed:setAlpha( 0 ) --[[ @ 0]]
			f41_local0( f41_arg0.SelectorOverlayRed ) --[[ @ 0]]
			local f41_local1 = function ( f43_arg0 )
				f41_arg0.LightFocus:beginAnimation( 200 ) --[[ @ 0]]
				f41_arg0.LightFocus:setAlpha( 0.15 ) --[[ @ 0]]
				f41_arg0.LightFocus:registerEventHandler( "interrupted_keyframe", f41_arg0.clipInterrupted ) --[[ @ 0]]
				f41_arg0.LightFocus:registerEventHandler( "transition_complete_keyframe", f41_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f41_arg0.LightFocus:completeAnimation() --[[ @ 0]]
			f41_arg0.LightFocus:setAlpha( 0 ) --[[ @ 0]]
			f41_local1( f41_arg0.LightFocus ) --[[ @ 0]]
			local f41_local2 = function ( f44_arg0 )
				f41_arg0.FocusGlow:beginAnimation( 200 ) --[[ @ 0]]
				f41_arg0.FocusGlow:setAlpha( 1 ) --[[ @ 0]]
				f41_arg0.FocusGlow:registerEventHandler( "interrupted_keyframe", f41_arg0.clipInterrupted ) --[[ @ 0]]
				f41_arg0.FocusGlow:registerEventHandler( "transition_complete_keyframe", f41_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f41_arg0.FocusGlow:completeAnimation() --[[ @ 0]]
			f41_arg0.FocusGlow:setAlpha( 0 ) --[[ @ 0]]
			f41_local2( f41_arg0.FocusGlow ) --[[ @ 0]]
			local f41_local3 = function ( f45_arg0 )
				local f45_local0 = function ( f46_arg0 )
					f46_arg0:beginAnimation( 50 ) --[[ @ 0]]
					f46_arg0:setLeftRight( 0, 1, -10, 10 ) --[[ @ 0]]
					f46_arg0:setTopBottom( 0, 1, -10, 10 ) --[[ @ 0]]
					f46_arg0:setAlpha( 1 ) --[[ @ 0]]
					f46_arg0:registerEventHandler( "transition_complete_keyframe", f41_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f41_arg0.FocusBrackets:beginAnimation( 100 ) --[[ @ 0]]
				f41_arg0.FocusBrackets:setLeftRight( 0, 1, -8, 8 ) --[[ @ 0]]
				f41_arg0.FocusBrackets:setTopBottom( 0, 1, -8, 8 ) --[[ @ 0]]
				f41_arg0.FocusBrackets:setAlpha( 0.67 ) --[[ @ 0]]
				f41_arg0.FocusBrackets:registerEventHandler( "interrupted_keyframe", f41_arg0.clipInterrupted ) --[[ @ 0]]
				f41_arg0.FocusBrackets:registerEventHandler( "transition_complete_keyframe", f45_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f41_arg0.FocusBrackets:completeAnimation() --[[ @ 0]]
			f41_arg0.FocusBrackets:setLeftRight( 0, 1, -40, 40 ) --[[ @ 0]]
			f41_arg0.FocusBrackets:setTopBottom( 0, 1, -40, 40 ) --[[ @ 0]]
			f41_arg0.FocusBrackets:setAlpha( 0 ) --[[ @ 0]]
			f41_local3( f41_arg0.FocusBrackets ) --[[ @ 0]]
			local f41_local4 = function ( f47_arg0 )
				f41_arg0.MetalFrameAdditive:beginAnimation( 200 ) --[[ @ 0]]
				f41_arg0.MetalFrameAdditive:setAlpha( 1 ) --[[ @ 0]]
				f41_arg0.MetalFrameAdditive:registerEventHandler( "interrupted_keyframe", f41_arg0.clipInterrupted ) --[[ @ 0]]
				f41_arg0.MetalFrameAdditive:registerEventHandler( "transition_complete_keyframe", f41_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f41_arg0.MetalFrameAdditive:completeAnimation() --[[ @ 0]]
			f41_arg0.MetalFrameAdditive:setAlpha( 0 ) --[[ @ 0]]
			f41_local4( f41_arg0.MetalFrameAdditive ) --[[ @ 0]]
			f41_arg0.FocusBorder:completeAnimation() --[[ @ 0]]
			f41_arg0.FocusBorder:setAlpha( 0 ) --[[ @ 0]]
			f41_arg0.clipFinished( f41_arg0.FocusBorder ) --[[ @ 0]]
			f41_arg0.codpointCost:completeAnimation() --[[ @ 0]]
			f41_arg0.codpointCost:setAlpha( 1 ) --[[ @ 0]]
			f41_arg0.clipFinished( f41_arg0.codpointCost ) --[[ @ 0]]
		end,
		Focus = function ( f48_arg0, f48_arg1 )
			f48_arg0:__resetProperties() --[[ @ 0]]
			f48_arg0:setupElementClipCounter( 8 ) --[[ @ 0]]
			f48_arg0.LaboratoryOfferNameAndDescription:completeAnimation() --[[ @ 0]]
			f48_arg0.LaboratoryOfferNameAndDescription:setAlpha( 0 ) --[[ @ 0]]
			f48_arg0.clipFinished( f48_arg0.LaboratoryOfferNameAndDescription ) --[[ @ 0]]
			f48_arg0.SelectorOverlayRed:completeAnimation() --[[ @ 0]]
			f48_arg0.SelectorOverlayRed:setAlpha( 0.02 ) --[[ @ 0]]
			f48_arg0.clipFinished( f48_arg0.SelectorOverlayRed ) --[[ @ 0]]
			f48_arg0.LightFocus:completeAnimation() --[[ @ 0]]
			f48_arg0.LightFocus:setAlpha( 0.15 ) --[[ @ 0]]
			f48_arg0.clipFinished( f48_arg0.LightFocus ) --[[ @ 0]]
			f48_arg0.FocusGlow:completeAnimation() --[[ @ 0]]
			f48_arg0.FocusGlow:setAlpha( 1 ) --[[ @ 0]]
			f48_arg0.clipFinished( f48_arg0.FocusGlow ) --[[ @ 0]]
			f48_arg0.Lines:completeAnimation() --[[ @ 0]]
			f48_arg0.Lines:setAlpha( 0 ) --[[ @ 0]]
			f48_arg0.clipFinished( f48_arg0.Lines ) --[[ @ 0]]
			f48_arg0.MetalFrameAdditive:completeAnimation() --[[ @ 0]]
			f48_arg0.MetalFrameAdditive:setAlpha( 1 ) --[[ @ 0]]
			f48_arg0.clipFinished( f48_arg0.MetalFrameAdditive ) --[[ @ 0]]
			f48_arg0.FocusBorder:completeAnimation() --[[ @ 0]]
			f48_arg0.FocusBorder:setAlpha( 0 ) --[[ @ 0]]
			f48_arg0.clipFinished( f48_arg0.FocusBorder ) --[[ @ 0]]
			f48_arg0.codpointCost:completeAnimation() --[[ @ 0]]
			f48_arg0.codpointCost:setAlpha( 1 ) --[[ @ 0]]
			f48_arg0.clipFinished( f48_arg0.codpointCost ) --[[ @ 0]]
		end,
		LoseFocus = function ( f49_arg0, f49_arg1 )
			f49_arg0:__resetProperties() --[[ @ 0]]
			f49_arg0:setupElementClipCounter( 7 ) --[[ @ 0]]
			f49_arg0.LaboratoryOfferNameAndDescription:completeAnimation() --[[ @ 0]]
			f49_arg0.LaboratoryOfferNameAndDescription:setAlpha( 0 ) --[[ @ 0]]
			f49_arg0.clipFinished( f49_arg0.LaboratoryOfferNameAndDescription ) --[[ @ 0]]
			local f49_local0 = function ( f50_arg0 )
				f49_arg0.SelectorOverlayRed:beginAnimation( 200 ) --[[ @ 0]]
				f49_arg0.SelectorOverlayRed:setAlpha( 0 ) --[[ @ 0]]
				f49_arg0.SelectorOverlayRed:registerEventHandler( "interrupted_keyframe", f49_arg0.clipInterrupted ) --[[ @ 0]]
				f49_arg0.SelectorOverlayRed:registerEventHandler( "transition_complete_keyframe", f49_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f49_arg0.SelectorOverlayRed:completeAnimation() --[[ @ 0]]
			f49_arg0.SelectorOverlayRed:setAlpha( 0.02 ) --[[ @ 0]]
			f49_local0( f49_arg0.SelectorOverlayRed ) --[[ @ 0]]
			local f49_local1 = function ( f51_arg0 )
				f49_arg0.LightFocus:beginAnimation( 200 ) --[[ @ 0]]
				f49_arg0.LightFocus:setAlpha( 0 ) --[[ @ 0]]
				f49_arg0.LightFocus:registerEventHandler( "interrupted_keyframe", f49_arg0.clipInterrupted ) --[[ @ 0]]
				f49_arg0.LightFocus:registerEventHandler( "transition_complete_keyframe", f49_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f49_arg0.LightFocus:completeAnimation() --[[ @ 0]]
			f49_arg0.LightFocus:setAlpha( 0.15 ) --[[ @ 0]]
			f49_local1( f49_arg0.LightFocus ) --[[ @ 0]]
			local f49_local2 = function ( f52_arg0 )
				f49_arg0.FocusGlow:beginAnimation( 200 ) --[[ @ 0]]
				f49_arg0.FocusGlow:setAlpha( 0 ) --[[ @ 0]]
				f49_arg0.FocusGlow:registerEventHandler( "interrupted_keyframe", f49_arg0.clipInterrupted ) --[[ @ 0]]
				f49_arg0.FocusGlow:registerEventHandler( "transition_complete_keyframe", f49_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f49_arg0.FocusGlow:completeAnimation() --[[ @ 0]]
			f49_arg0.FocusGlow:setAlpha( 1 ) --[[ @ 0]]
			f49_local2( f49_arg0.FocusGlow ) --[[ @ 0]]
			local f49_local3 = function ( f53_arg0 )
				f49_arg0.FocusBrackets:beginAnimation( 60 ) --[[ @ 0]]
				f49_arg0.FocusBrackets:setAlpha( 0 ) --[[ @ 0]]
				f49_arg0.FocusBrackets:registerEventHandler( "interrupted_keyframe", f49_arg0.clipInterrupted ) --[[ @ 0]]
				f49_arg0.FocusBrackets:registerEventHandler( "transition_complete_keyframe", f49_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f49_arg0.FocusBrackets:completeAnimation() --[[ @ 0]]
			f49_arg0.FocusBrackets:setAlpha( 1 ) --[[ @ 0]]
			f49_local3( f49_arg0.FocusBrackets ) --[[ @ 0]]
			local f49_local4 = function ( f54_arg0 )
				f49_arg0.MetalFrameAdditive:beginAnimation( 200 ) --[[ @ 0]]
				f49_arg0.MetalFrameAdditive:setAlpha( 0 ) --[[ @ 0]]
				f49_arg0.MetalFrameAdditive:registerEventHandler( "interrupted_keyframe", f49_arg0.clipInterrupted ) --[[ @ 0]]
				f49_arg0.MetalFrameAdditive:registerEventHandler( "transition_complete_keyframe", f49_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f49_arg0.MetalFrameAdditive:completeAnimation() --[[ @ 0]]
			f49_arg0.MetalFrameAdditive:setAlpha( 1 ) --[[ @ 0]]
			f49_local4( f49_arg0.MetalFrameAdditive ) --[[ @ 0]]
			f49_arg0.codpointCost:completeAnimation() --[[ @ 0]]
			f49_arg0.codpointCost:setAlpha( 1 ) --[[ @ 0]]
			f49_arg0.clipFinished( f49_arg0.codpointCost ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.LaboratoryListItemNebuliumPlasmaDiscount_Internal.__onClose = function ( f55_arg0 )
	f55_arg0.LaboratoryOfferNameAndDescription:close() --[[ @ 0]]
	f55_arg0.Lines:close() --[[ @ 0]]
	f55_arg0.FocusBrackets:close() --[[ @ 0]]
	f55_arg0.limit:close() --[[ @ 0]]
	f55_arg0.Icon:close() --[[ @ 0]]
	f55_arg0.TopOrnament:close() --[[ @ 0]]
	f55_arg0.Timer:close() --[[ @ 0]]
	f55_arg0.Quantity:close() --[[ @ 0]]
	f55_arg0.codpointCost:close() --[[ @ 0]]
end
 --[[ @ 0]]
