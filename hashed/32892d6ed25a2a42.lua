-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:49
require( "x64:5c4ffbae6031ab73" ) --[[ @ 0]]
require( "x64:18c42d352a93c414" ) --[[ @ 0]]
require( "x64:75d82dfdd9f543e2" ) --[[ @ 0]]

CoD.PC_Korea_Event_TierProgress = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.PC_Korea_Event_TierProgress.__defaultWidth = 906 --[[ @ 0]]
CoD.PC_Korea_Event_TierProgress.__defaultHeight = 460 --[[ @ 0]]
CoD.PC_Korea_Event_TierProgress.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.PC_Korea_Event_TierProgress ) --[[ @ 0]]
	self.id = "PC_Korea_Event_TierProgress" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local TierTitle = LUI.UIText.new( 0.5, 0.5, -378, 378, 0.5, 0.5, -130, -105 ) --[[ @ 0]]
	TierTitle:setRGB( ColorSet.T8__OCHRE.r, ColorSet.T8__OCHRE.g, ColorSet.T8__OCHRE.b ) --[[ @ 0]]
	TierTitle:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_5D6B512C1C4B5EC5" ) ) --[[ @ 0]]
	TierTitle:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	TierTitle:setLetterSpacing( 5 ) --[[ @ 0]]
	TierTitle:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	TierTitle:setAlignment( Enum[@"luialignment"][@"lui_alignment_bottom"] ) --[[ @ 0]]
	self:addElement( TierTitle ) --[[ @ 0]]
	self.TierTitle = TierTitle --[[ @ 0]]
	
	local TierTimeRemaining = LUI.UIText.new( 0.5, 0.5, -317.5, 317.5, 0.5, 0.5, -98, -83 ) --[[ @ 0]]
	TierTimeRemaining:setTTF( "dinnext_regular" ) --[[ @ 0]]
	TierTimeRemaining:setLetterSpacing( 5 ) --[[ @ 0]]
	TierTimeRemaining:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	TierTimeRemaining:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	TierTimeRemaining:subscribeToGlobalModel( f1_arg1, "PCKoreaEventCurrentDayProgression", "timeRemaining", function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			TierTimeRemaining:setText( f2_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( TierTimeRemaining ) --[[ @ 0]]
	self.TierTimeRemaining = TierTimeRemaining --[[ @ 0]]
	
	local ProgressFill = LUI.UIImage.new( 0.5, 0.5, -317.5, 317.5, 0.5, 0.5, -28, 0 ) --[[ @ 0]]
	ProgressFill:setImage( RegisterImage( @"uie_pc_igrevent_progress_fill" ) ) --[[ @ 0]]
	ProgressFill:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_wipe_normal" ) ) --[[ @ 0]]
	ProgressFill:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	ProgressFill:setShaderVector( 2, 1, 0, 0, 0 ) --[[ @ 0]]
	ProgressFill:setShaderVector( 3, 0, 0, 0, 0 ) --[[ @ 0]]
	ProgressFill:setShaderVector( 4, 0, 0, 0, 0 ) --[[ @ 0]]
	ProgressFill:subscribeToGlobalModel( f1_arg1, "PCKoreaEventCurrentDayProgression", "progressBarRatio", function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			ProgressFill:setShaderVector( 0, CoD.GetVectorComponentFromString( f3_local0, 1 ), CoD.GetVectorComponentFromString( f3_local0, 2 ), CoD.GetVectorComponentFromString( f3_local0, 3 ), CoD.GetVectorComponentFromString( f3_local0, 4 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( ProgressFill ) --[[ @ 0]]
	self.ProgressFill = ProgressFill --[[ @ 0]]
	
	local Border = LUI.UIImage.new( 0.5, 0.5, -317.5, 317.5, 0.5, 0.5, -28, 0 ) --[[ @ 0]]
	Border:setRGB( 0.45, 0.45, 0.45 ) --[[ @ 0]]
	Border:setImage( RegisterImage( @"hash_415BB65132BCEED9" ) ) --[[ @ 0]]
	Border:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_normal" ) ) --[[ @ 0]]
	Border:setShaderVector( 0, 0, 0, 0.02, 0 ) --[[ @ 0]]
	Border:setupNineSliceShader( 25, 25 ) --[[ @ 0]]
	self:addElement( Border ) --[[ @ 0]]
	self.Border = Border --[[ @ 0]]
	
	local CornerPips = LUI.UIImage.new( 0.5, 0.5, 314.5, 319.5, 0.5, 0.5, -30.5, -25.5 ) --[[ @ 0]]
	CornerPips:setImage( RegisterImage( @"hash_6CD2D51C614BCB51" ) ) --[[ @ 0]]
	self:addElement( CornerPips ) --[[ @ 0]]
	self.CornerPips = CornerPips --[[ @ 0]]
	
	local CornerPips2 = LUI.UIImage.new( 0.5, 0.5, 314.5, 319.5, 0.5, 0.5, -2.5, 2.5 ) --[[ @ 0]]
	CornerPips2:setImage( RegisterImage( @"hash_6CD2D51C614BCB51" ) ) --[[ @ 0]]
	self:addElement( CornerPips2 ) --[[ @ 0]]
	self.CornerPips2 = CornerPips2 --[[ @ 0]]
	
	local CornerPips3 = LUI.UIImage.new( 0.5, 0.5, -319.5, -314.5, 0.5, 0.5, -2.5, 2.5 ) --[[ @ 0]]
	CornerPips3:setImage( RegisterImage( @"hash_6CD2D51C614BCB51" ) ) --[[ @ 0]]
	self:addElement( CornerPips3 ) --[[ @ 0]]
	self.CornerPips3 = CornerPips3 --[[ @ 0]]
	
	local CornerPips4 = LUI.UIImage.new( 0.5, 0.5, -319.5, -314.5, 0.5, 0.5, -30.5, -25.5 ) --[[ @ 0]]
	CornerPips4:setImage( RegisterImage( @"hash_6CD2D51C614BCB51" ) ) --[[ @ 0]]
	self:addElement( CornerPips4 ) --[[ @ 0]]
	self.CornerPips4 = CornerPips4 --[[ @ 0]]
	
	local TextNumber = CoD.PC_Korea_Event_Day_Progression_Numbers.new( f1_arg0, f1_arg1, 0.5, 0.5, -348, -288, 0.5, 0.5, 6, 38 ) --[[ @ 0]]
	TextNumber:mergeStateConditions( {
		{
			stateName = "TimeCompleted",
			condition = function ( menu, element, event )
				return AlwaysTrue()
			end
		}
	} ) --[[ @ 0]]
	self:addElement( TextNumber ) --[[ @ 0]]
	self.TextNumber = TextNumber --[[ @ 0]]
	
	local TextNumber2 = CoD.PC_Korea_Event_Day_Progression_Numbers.new( f1_arg0, f1_arg1, 0.5, 0.5, -190, -130, 0.5, 0.5, 6, 38 ) --[[ @ 0]]
	TextNumber2:mergeStateConditions( {
		{
			stateName = "TimeCompleted",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsModelValueGreaterThanOrEqualTo( f1_arg1, "PCKoreaEventCurrentDayProgression.progression", 30 )
			end
		}
	} ) --[[ @ 0]]
	local TextNumber4 = TextNumber2 --[[ @ 0]]
	local TextNumber3 = TextNumber2.subscribeToModel --[[ @ 0]]
	local TextNumber5 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	TextNumber3( TextNumber4, TextNumber5["PCKoreaEventCurrentDayProgression.progression"], function ( f6_arg0 )
		f1_arg0:updateElementState( TextNumber2, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f6_arg0:get(),
			modelName = "PCKoreaEventCurrentDayProgression.progression"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	TextNumber2.TextNumber:setText( 30 ) --[[ @ 0]]
	self:addElement( TextNumber2 ) --[[ @ 0]]
	self.TextNumber2 = TextNumber2 --[[ @ 0]]
	
	TextNumber3 = CoD.PC_Korea_Event_Day_Progression_Numbers.new( f1_arg0, f1_arg1, 0.5, 0.5, -30, 30, 0.5, 0.5, 6, 38 ) --[[ @ 0]]
	TextNumber3:mergeStateConditions( {
		{
			stateName = "TimeCompleted",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsModelValueGreaterThanOrEqualTo( f1_arg1, "PCKoreaEventCurrentDayProgression.progression", 60 )
			end
		}
	} ) --[[ @ 0]]
	TextNumber5 = TextNumber3 --[[ @ 0]]
	TextNumber4 = TextNumber3.subscribeToModel --[[ @ 0]]
	local Star = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	TextNumber4( TextNumber5, Star["PCKoreaEventCurrentDayProgression.progression"], function ( f8_arg0 )
		f1_arg0:updateElementState( TextNumber3, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f8_arg0:get(),
			modelName = "PCKoreaEventCurrentDayProgression.progression"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	TextNumber3.TextNumber:setText( 60 ) --[[ @ 0]]
	self:addElement( TextNumber3 ) --[[ @ 0]]
	self.TextNumber3 = TextNumber3 --[[ @ 0]]
	
	TextNumber4 = CoD.PC_Korea_Event_Day_Progression_Numbers.new( f1_arg0, f1_arg1, 0.5, 0.5, 130, 190, 0.5, 0.5, 6, 38 ) --[[ @ 0]]
	TextNumber4:mergeStateConditions( {
		{
			stateName = "TimeCompleted",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsModelValueGreaterThanOrEqualTo( f1_arg1, "PCKoreaEventCurrentDayProgression.progression", 90 )
			end
		}
	} ) --[[ @ 0]]
	Star = TextNumber4 --[[ @ 0]]
	TextNumber5 = TextNumber4.subscribeToModel --[[ @ 0]]
	local StarFull = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	TextNumber5( Star, StarFull["PCKoreaEventCurrentDayProgression.progression"], function ( f10_arg0 )
		f1_arg0:updateElementState( TextNumber4, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f10_arg0:get(),
			modelName = "PCKoreaEventCurrentDayProgression.progression"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	TextNumber4.TextNumber:setText( 90 ) --[[ @ 0]]
	self:addElement( TextNumber4 ) --[[ @ 0]]
	self.TextNumber4 = TextNumber4 --[[ @ 0]]
	
	TextNumber5 = CoD.PC_Korea_Event_Day_Progression_Numbers.new( f1_arg0, f1_arg1, 0.5, 0.5, 288, 348, 0.5, 0.5, 6, 38 ) --[[ @ 0]]
	TextNumber5:mergeStateConditions( {
		{
			stateName = "TimeCompleted",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsModelValueGreaterThanOrEqualTo( f1_arg1, "PCKoreaEventCurrentDayProgression.progression", 120 )
			end
		}
	} ) --[[ @ 0]]
	StarFull = TextNumber5 --[[ @ 0]]
	Star = TextNumber5.subscribeToModel --[[ @ 0]]
	local TierAcquiredGlow = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	Star( StarFull, TierAcquiredGlow["PCKoreaEventCurrentDayProgression.progression"], function ( f12_arg0 )
		f1_arg0:updateElementState( TextNumber5, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f12_arg0:get(),
			modelName = "PCKoreaEventCurrentDayProgression.progression"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	TextNumber5.TextNumber:setText( 120 ) --[[ @ 0]]
	self:addElement( TextNumber5 ) --[[ @ 0]]
	self.TextNumber5 = TextNumber5 --[[ @ 0]]
	
	Star = LUI.UIImage.new( 0.5, 0.5, 160, 200, 0.5, 0.5, 38, 74 ) --[[ @ 0]]
	Star:setAlpha( 0.7 ) --[[ @ 0]]
	Star:setImage( RegisterImage( @"uie_pc_igrevent_progression_star" ) ) --[[ @ 0]]
	Star:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_glint" ) ) --[[ @ 0]]
	Star:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	Star:setShaderVector( 1, -46.8, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( Star ) --[[ @ 0]]
	self.Star = Star --[[ @ 0]]
	
	StarFull = LUI.UIImage.new( 0.5, 0.5, 160, 200, 0.5, 0.5, 38, 74 ) --[[ @ 0]]
	StarFull:setAlpha( 0 ) --[[ @ 0]]
	StarFull:setScale( 1.1, 1.1 ) --[[ @ 0]]
	StarFull:setImage( RegisterImage( @"uie_pc_igrevent_weekprogression_star" ) ) --[[ @ 0]]
	StarFull:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_glint" ) ) --[[ @ 0]]
	StarFull:setShaderVector( 0, 0.95, 0, 0, 0 ) --[[ @ 0]]
	StarFull:setShaderVector( 1, -46.8, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( StarFull ) --[[ @ 0]]
	self.StarFull = StarFull --[[ @ 0]]
	
	TierAcquiredGlow = LUI.UIImage.new( 0.5, 0.5, -80, 80, 0.5, 0.5, 46, 206 ) --[[ @ 0]]
	TierAcquiredGlow:setAlpha( 0 ) --[[ @ 0]]
	TierAcquiredGlow:setImage( RegisterImage( @"uie_pc_igrevent_tieracquired_token_glow" ) ) --[[ @ 0]]
	self:addElement( TierAcquiredGlow ) --[[ @ 0]]
	self.TierAcquiredGlow = TierAcquiredGlow --[[ @ 0]]
	
	local TierToken = LUI.UIImage.new( 0.5, 0.5, -40, 40, 0.5, 0.5, 86, 166 ) --[[ @ 0]]
	TierToken:setAlpha( 0 ) --[[ @ 0]]
	TierToken:setScale( 2, 2 ) --[[ @ 0]]
	TierToken:setImage( RegisterImage( @"ui_icon_blackmarket_tier_token" ) ) --[[ @ 0]]
	self:addElement( TierToken ) --[[ @ 0]]
	self.TierToken = TierToken --[[ @ 0]]
	
	local TierAcquiredText = LUI.UIText.new( 0.5, 0.5, -350, 350, 0.5, 0.5, 166, 187 ) --[[ @ 0]]
	TierAcquiredText:setRGB( ColorSet.T8__OCHRE.r, ColorSet.T8__OCHRE.g, ColorSet.T8__OCHRE.b ) --[[ @ 0]]
	TierAcquiredText:setAlpha( 0 ) --[[ @ 0]]
	TierAcquiredText:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_6E483DAF970FDA40" ) ) --[[ @ 0]]
	TierAcquiredText:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	TierAcquiredText:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	TierAcquiredText:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	self:addElement( TierAcquiredText ) --[[ @ 0]]
	self.TierAcquiredText = TierAcquiredText --[[ @ 0]]
	
	local TokenEmpty = CoD.PC_Korea_Event_Daily_Tier.new( f1_arg0, f1_arg1, 0.5, 0.5, 119, 159, 0.5, 0.5, 37, 77 ) --[[ @ 0]]
	TokenEmpty:mergeStateConditions( {
		{
			stateName = "TokenReward",
			condition = function ( menu, element, event )
				local f13_local0 = CoD.ModelUtility.IsModelValueGreaterThanOrEqualTo( f1_arg1, "PCKoreaEventCurrentDayProgression.progression", 90 ) --[[ @ 0]]
				if f13_local0 then
					f13_local0 = IsMenuAARKoreaEvent( menu ) --[[ @ 0]]
					if f13_local0 then
						f13_local0 = CoD.ModelUtility.IsModelValueTrue( f1_arg1, "PCKoreaEventCurrentDayProgression.showCompletedAnimation" ) --[[ @ 0]]
					end
				end
				return f13_local0
			end
		},
		{
			stateName = "TokenReceived",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsModelValueGreaterThanOrEqualTo( f1_arg1, "PCKoreaEventCurrentDayProgression.progression", 90 )
			end
		}
	} ) --[[ @ 0]]
	local TokenEmpty3 = TokenEmpty --[[ @ 0]]
	local TokenEmpty2 = TokenEmpty.subscribeToModel --[[ @ 0]]
	local TokenEmpty4 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	TokenEmpty2( TokenEmpty3, TokenEmpty4["PCKoreaEventCurrentDayProgression.progression"], function ( f15_arg0 )
		f1_arg0:updateElementState( TokenEmpty, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f15_arg0:get(),
			modelName = "PCKoreaEventCurrentDayProgression.progression"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	TokenEmpty3 = TokenEmpty --[[ @ 0]]
	TokenEmpty2 = TokenEmpty.subscribeToModel --[[ @ 0]]
	TokenEmpty4 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	TokenEmpty2( TokenEmpty3, TokenEmpty4["PCKoreaEventCurrentDayProgression.showCompletedAnimation"], function ( f16_arg0 )
		f1_arg0:updateElementState( TokenEmpty, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f16_arg0:get(),
			modelName = "PCKoreaEventCurrentDayProgression.showCompletedAnimation"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:addElement( TokenEmpty ) --[[ @ 0]]
	self.TokenEmpty = TokenEmpty --[[ @ 0]]
	
	TokenEmpty2 = CoD.PC_Korea_Event_Daily_Tier.new( f1_arg0, f1_arg1, 0.5, 0.5, -20, 20, 0.5, 0.5, 37, 77 ) --[[ @ 0]]
	TokenEmpty2:mergeStateConditions( {
		{
			stateName = "TokenReward",
			condition = function ( menu, element, event )
				local f17_local0 = CoD.ModelUtility.IsModelValueGreaterThanOrEqualTo( f1_arg1, "PCKoreaEventCurrentDayProgression.progression", 60 ) --[[ @ 0]]
				if f17_local0 then
					f17_local0 = IsMenuAARKoreaEvent( menu ) --[[ @ 0]]
					if f17_local0 then
						f17_local0 = CoD.ModelUtility.IsModelValueTrue( f1_arg1, "PCKoreaEventCurrentDayProgression.showCompletedAnimation" ) --[[ @ 0]]
					end
				end
				return f17_local0
			end
		},
		{
			stateName = "TokenReceived",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsModelValueGreaterThanOrEqualTo( f1_arg1, "PCKoreaEventCurrentDayProgression.progression", 60 )
			end
		}
	} ) --[[ @ 0]]
	TokenEmpty4 = TokenEmpty2 --[[ @ 0]]
	TokenEmpty3 = TokenEmpty2.subscribeToModel --[[ @ 0]]
	local SeparatorsList = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	TokenEmpty3( TokenEmpty4, SeparatorsList["PCKoreaEventCurrentDayProgression.progression"], function ( f19_arg0 )
		f1_arg0:updateElementState( TokenEmpty2, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f19_arg0:get(),
			modelName = "PCKoreaEventCurrentDayProgression.progression"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	TokenEmpty4 = TokenEmpty2 --[[ @ 0]]
	TokenEmpty3 = TokenEmpty2.subscribeToModel --[[ @ 0]]
	SeparatorsList = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	TokenEmpty3( TokenEmpty4, SeparatorsList["PCKoreaEventCurrentDayProgression.showCompletedAnimation"], function ( f20_arg0 )
		f1_arg0:updateElementState( TokenEmpty2, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f20_arg0:get(),
			modelName = "PCKoreaEventCurrentDayProgression.showCompletedAnimation"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:addElement( TokenEmpty2 ) --[[ @ 0]]
	self.TokenEmpty2 = TokenEmpty2 --[[ @ 0]]
	
	TokenEmpty3 = CoD.PC_Korea_Event_Daily_Tier.new( f1_arg0, f1_arg1, 0.5, 0.5, -180, -140, 0.5, 0.5, 37, 77 ) --[[ @ 0]]
	TokenEmpty3:mergeStateConditions( {
		{
			stateName = "TokenReward",
			condition = function ( menu, element, event )
				local f21_local0 = CoD.ModelUtility.IsModelValueGreaterThanOrEqualTo( f1_arg1, "PCKoreaEventCurrentDayProgression.progression", 30 ) --[[ @ 0]]
				if f21_local0 then
					f21_local0 = IsMenuAARKoreaEvent( menu ) --[[ @ 0]]
					if f21_local0 then
						f21_local0 = CoD.ModelUtility.IsModelValueTrue( f1_arg1, "PCKoreaEventCurrentDayProgression.showCompletedAnimation" ) --[[ @ 0]]
					end
				end
				return f21_local0
			end
		},
		{
			stateName = "TokenReceived",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsModelValueGreaterThanOrEqualTo( f1_arg1, "PCKoreaEventCurrentDayProgression.progression", 30 )
			end
		}
	} ) --[[ @ 0]]
	SeparatorsList = TokenEmpty3 --[[ @ 0]]
	TokenEmpty4 = TokenEmpty3.subscribeToModel --[[ @ 0]]
	local PCKoreaEventDayProgressionSeparators2 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	TokenEmpty4( SeparatorsList, PCKoreaEventDayProgressionSeparators2["PCKoreaEventCurrentDayProgression.progression"], function ( f23_arg0 )
		f1_arg0:updateElementState( TokenEmpty3, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f23_arg0:get(),
			modelName = "PCKoreaEventCurrentDayProgression.progression"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	SeparatorsList = TokenEmpty3 --[[ @ 0]]
	TokenEmpty4 = TokenEmpty3.subscribeToModel --[[ @ 0]]
	PCKoreaEventDayProgressionSeparators2 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	TokenEmpty4( SeparatorsList, PCKoreaEventDayProgressionSeparators2["PCKoreaEventCurrentDayProgression.showCompletedAnimation"], function ( f24_arg0 )
		f1_arg0:updateElementState( TokenEmpty3, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f24_arg0:get(),
			modelName = "PCKoreaEventCurrentDayProgression.showCompletedAnimation"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:addElement( TokenEmpty3 ) --[[ @ 0]]
	self.TokenEmpty3 = TokenEmpty3 --[[ @ 0]]
	
	TokenEmpty4 = CoD.PC_Korea_Event_Daily_Tier.new( f1_arg0, f1_arg1, 0.5, 0.5, 297.5, 337.5, 0.5, 0.5, 37, 77 ) --[[ @ 0]]
	TokenEmpty4:mergeStateConditions( {
		{
			stateName = "TokenReward",
			condition = function ( menu, element, event )
				local f25_local0 = CoD.ModelUtility.IsModelValueGreaterThanOrEqualTo( f1_arg1, "PCKoreaEventCurrentDayProgression.progression", 120 ) --[[ @ 0]]
				if f25_local0 then
					f25_local0 = IsMenuAARKoreaEvent( menu ) --[[ @ 0]]
					if f25_local0 then
						f25_local0 = CoD.ModelUtility.IsModelValueTrue( f1_arg1, "PCKoreaEventCurrentDayProgression.showCompletedAnimation" ) --[[ @ 0]]
					end
				end
				return f25_local0
			end
		},
		{
			stateName = "TokenReceived",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsModelValueGreaterThanOrEqualTo( f1_arg1, "PCKoreaEventCurrentDayProgression.progression", 120 )
			end
		}
	} ) --[[ @ 0]]
	PCKoreaEventDayProgressionSeparators2 = TokenEmpty4 --[[ @ 0]]
	SeparatorsList = TokenEmpty4.subscribeToModel --[[ @ 0]]
	local PCKoreaEventDayProgressionSeparators = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	SeparatorsList( PCKoreaEventDayProgressionSeparators2, PCKoreaEventDayProgressionSeparators["PCKoreaEventCurrentDayProgression.progression"], function ( f27_arg0 )
		f1_arg0:updateElementState( TokenEmpty4, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f27_arg0:get(),
			modelName = "PCKoreaEventCurrentDayProgression.progression"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	PCKoreaEventDayProgressionSeparators2 = TokenEmpty4 --[[ @ 0]]
	SeparatorsList = TokenEmpty4.subscribeToModel --[[ @ 0]]
	PCKoreaEventDayProgressionSeparators = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	SeparatorsList( PCKoreaEventDayProgressionSeparators2, PCKoreaEventDayProgressionSeparators["PCKoreaEventCurrentDayProgression.showCompletedAnimation"], function ( f28_arg0 )
		f1_arg0:updateElementState( TokenEmpty4, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f28_arg0:get(),
			modelName = "PCKoreaEventCurrentDayProgression.showCompletedAnimation"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:addElement( TokenEmpty4 ) --[[ @ 0]]
	self.TokenEmpty4 = TokenEmpty4 --[[ @ 0]]
	
	SeparatorsList = LUI.UIList.new( f1_arg0, f1_arg1, 150, 0, nil, false, false, false, false ) --[[ @ 0]]
	SeparatorsList:setLeftRight( 0.5, 0.5, -317.5, 164.5 ) --[[ @ 0]]
	SeparatorsList:setTopBottom( 0.5, 0.5, -51, -23 ) --[[ @ 0]]
	SeparatorsList:setAlpha( 0 ) --[[ @ 0]]
	SeparatorsList:setWidgetType( CoD.PC_Korea_Event_Day_Progression_Separators ) --[[ @ 0]]
	SeparatorsList:setHorizontalCount( 3 ) --[[ @ 0]]
	SeparatorsList:setSpacing( 150 ) --[[ @ 0]]
	SeparatorsList:setFirstElementXOffset( 152 ) --[[ @ 0]]
	SeparatorsList:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	self:addElement( SeparatorsList ) --[[ @ 0]]
	self.SeparatorsList = SeparatorsList --[[ @ 0]]
	
	PCKoreaEventDayProgressionSeparators2 = CoD.PC_Korea_Event_Day_Progression_Separators.new( f1_arg0, f1_arg1, 0.5, 0.5, -6, 4, 0.5, 0.5, -28, 0 ) --[[ @ 0]]
	self:addElement( PCKoreaEventDayProgressionSeparators2 ) --[[ @ 0]]
	self.PCKoreaEventDayProgressionSeparators2 = PCKoreaEventDayProgressionSeparators2 --[[ @ 0]]
	
	PCKoreaEventDayProgressionSeparators = CoD.PC_Korea_Event_Day_Progression_Separators.new( f1_arg0, f1_arg1, 0.5, 0.5, -166, -156, 0.5, 0.5, -28, 0 ) --[[ @ 0]]
	self:addElement( PCKoreaEventDayProgressionSeparators ) --[[ @ 0]]
	self.PCKoreaEventDayProgressionSeparators = PCKoreaEventDayProgressionSeparators --[[ @ 0]]
	
	local PCKoreaEventDayProgressionSeparators3 = CoD.PC_Korea_Event_Day_Progression_Separators.new( f1_arg0, f1_arg1, 0.5, 0.5, 154, 164, 0.5, 0.5, -28, 0 ) --[[ @ 0]]
	self:addElement( PCKoreaEventDayProgressionSeparators3 ) --[[ @ 0]]
	self.PCKoreaEventDayProgressionSeparators3 = PCKoreaEventDayProgressionSeparators3 --[[ @ 0]]
	
	local StarTierSound = LUI.UIElement.new( 0, 0, 803, 835, 0, 0, 200.5, 232.5 ) --[[ @ 0]]
	StarTierSound:setPlaySoundDirect( true ) --[[ @ 0]]
	self:addElement( StarTierSound ) --[[ @ 0]]
	self.StarTierSound = StarTierSound --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "StarReward",
			condition = function ( menu, element, event )
				local f29_local0 = CoD.ModelUtility.IsModelValueGreaterThanOrEqualTo( f1_arg1, "PCKoreaEventCurrentDayProgression.progression", 90 ) --[[ @ 0]]
				if f29_local0 then
					f29_local0 = IsMenuAARKoreaEvent( menu ) --[[ @ 0]]
					if f29_local0 then
						f29_local0 = CoD.ModelUtility.IsModelValueTrue( f1_arg1, "PCKoreaEventCurrentDayProgression.showStarCompletedAnimation" ) --[[ @ 0]]
					end
				end
				return f29_local0
			end
		},
		{
			stateName = "TierAcquiredWithStar",
			condition = function ( menu, element, event )
				local f30_local0 = IsMenuAARKoreaEvent( menu ) --[[ @ 0]]
				if f30_local0 then
					f30_local0 = CoD.ModelUtility.IsModelValueTrue( f1_arg1, "PCKoreaEventCurrentDayProgression.showCompletedAnimation" ) --[[ @ 0]]
					if f30_local0 then
						f30_local0 = CoD.ModelUtility.IsModelValueGreaterThanOrEqualTo( f1_arg1, "PCKoreaEventCurrentDayProgression.progression", 120 ) --[[ @ 0]]
					end
				end
				return f30_local0
			end
		},
		{
			stateName = "TierAcquired",
			condition = function ( menu, element, event )
				return IsMenuAARKoreaEvent( menu ) and CoD.ModelUtility.IsModelValueTrue( f1_arg1, "PCKoreaEventCurrentDayProgression.showCompletedAnimation" )
			end
		},
		{
			stateName = "StarReceived",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsModelValueGreaterThanOrEqualTo( f1_arg1, "PCKoreaEventCurrentDayProgression.progression", 90 )
			end
		}
	} ) --[[ @ 0]]
	local f1_local28 = self --[[ @ 0]]
	local f1_local29 = self.subscribeToModel --[[ @ 0]]
	local f1_local30 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local29( f1_local28, f1_local30["PCKoreaEventCurrentDayProgression.progression"], function ( f33_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f33_arg0:get(),
			modelName = "PCKoreaEventCurrentDayProgression.progression"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local28 = self --[[ @ 0]]
	f1_local29 = self.subscribeToModel --[[ @ 0]]
	f1_local30 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local29( f1_local28, f1_local30["PCKoreaEventCurrentDayProgression.showStarCompletedAnimation"], function ( f34_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f34_arg0:get(),
			modelName = "PCKoreaEventCurrentDayProgression.showStarCompletedAnimation"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local28 = self --[[ @ 0]]
	f1_local29 = self.subscribeToModel --[[ @ 0]]
	f1_local30 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local29( f1_local28, f1_local30["PCKoreaEventCurrentDayProgression.showCompletedAnimation"], function ( f35_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f35_arg0:get(),
			modelName = "PCKoreaEventCurrentDayProgression.showCompletedAnimation"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	SeparatorsList.id = "SeparatorsList" --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PreLoadFunc then
		PreLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	f1_local29 = self --[[ @ 0]]
	if CoD.ModelUtility.IsModelValueGreaterThanOrEqualTo( f1_arg1, "PCKoreaEventCurrentDayProgression.progression", 120 ) then
		HideWidget( self.TierTimeRemaining ) --[[ @ 0]]
	end
	return self
end
 --[[ @ 0]]
CoD.PC_Korea_Event_TierProgress.__resetProperties = function ( f36_arg0 )
	f36_arg0.StarTierSound:completeAnimation() --[[ @ 0]]
	f36_arg0.StarFull:completeAnimation() --[[ @ 0]]
	f36_arg0.TierToken:completeAnimation() --[[ @ 0]]
	f36_arg0.TierAcquiredText:completeAnimation() --[[ @ 0]]
	f36_arg0.TierAcquiredGlow:completeAnimation() --[[ @ 0]]
	f36_arg0.StarTierSound:setPlaySoundDirect( true ) --[[ @ 0]]
	f36_arg0.StarFull:setAlpha( 0 ) --[[ @ 0]]
	f36_arg0.StarFull:setScale( 1.1, 1.1 ) --[[ @ 0]]
	f36_arg0.StarFull:setShaderVector( 0, 0.95, 0, 0, 0 ) --[[ @ 0]]
	f36_arg0.StarFull:setShaderVector( 1, -46.8, 0, 0, 0 ) --[[ @ 0]]
	f36_arg0.TierToken:setAlpha( 0 ) --[[ @ 0]]
	f36_arg0.TierToken:setScale( 2, 2 ) --[[ @ 0]]
	f36_arg0.TierAcquiredText:setAlpha( 0 ) --[[ @ 0]]
	f36_arg0.TierAcquiredGlow:setAlpha( 0 ) --[[ @ 0]]
	f36_arg0.TierAcquiredGlow:setZRot( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.PC_Korea_Event_TierProgress.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f37_arg0, f37_arg1 )
			f37_arg0:__resetProperties() --[[ @ 0]]
			f37_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	StarReward = {
		DefaultClip = function ( f38_arg0, f38_arg1 )
			f38_arg0:__resetProperties() --[[ @ 0]]
			f38_arg0:setupElementClipCounter( 5 ) --[[ @ 0]]
			local f38_local0 = function ( f39_arg0 )
				local f39_local0 = function ( f40_arg0 )
					local f40_local0 = function ( f41_arg0 )
						local f41_local0 = function ( f42_arg0 )
							local f42_local0 = function ( f43_arg0 )
								f43_arg0:beginAnimation( 149 ) --[[ @ 0]]
								f43_arg0:registerEventHandler( "transition_complete_keyframe", f38_arg0.clipFinished ) --[[ @ 0]]
							end
							 --[[ @ 0]]
							f42_arg0:beginAnimation( 900 ) --[[ @ 0]]
							f42_arg0:setShaderVector( 0, 0.95, 0, 0, 0 ) --[[ @ 0]]
							f42_arg0:registerEventHandler( "transition_complete_keyframe", f42_local0 ) --[[ @ 0]]
						end
						 --[[ @ 0]]
						f41_arg0:beginAnimation( 269 ) --[[ @ 0]]
						f41_arg0:registerEventHandler( "transition_complete_keyframe", f41_local0 ) --[[ @ 0]]
					end
					 --[[ @ 0]]
					f40_arg0:beginAnimation( 39 ) --[[ @ 0]]
					f40_arg0:setScale( 1.1, 1.1 ) --[[ @ 0]]
					f40_arg0:registerEventHandler( "transition_complete_keyframe", f40_local0 ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f39_arg0:beginAnimation( 200 ) --[[ @ 0]]
				f39_arg0:setAlpha( 1 ) --[[ @ 0]]
				f39_arg0:setScale( 0.8, 0.8 ) --[[ @ 0]]
				f39_arg0:registerEventHandler( "transition_complete_keyframe", f39_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f38_arg0.StarFull:beginAnimation( 1010 ) --[[ @ 0]]
			f38_arg0.StarFull:setAlpha( 0 ) --[[ @ 0]]
			f38_arg0.StarFull:setScale( 2, 2 ) --[[ @ 0]]
			f38_arg0.StarFull:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
			f38_arg0.StarFull:setShaderVector( 1, -46.8, 0, 0, 0 ) --[[ @ 0]]
			f38_arg0.StarFull:registerEventHandler( "interrupted_keyframe", f38_arg0.clipInterrupted ) --[[ @ 0]]
			f38_arg0.StarFull:registerEventHandler( "transition_complete_keyframe", f38_local0 ) --[[ @ 0]]
			local f38_local1 = function ( f44_arg0 )
				local f44_local0 = function ( f45_arg0 )
					local f45_local0 = function ( f46_arg0 )
						local f46_local0 = function ( f47_arg0 )
							local f47_local0 = function ( f48_arg0 )
								local f48_local0 = function ( f49_arg0 )
									f49_arg0:beginAnimation( 329 ) --[[ @ 0]]
									f49_arg0:setAlpha( 0 ) --[[ @ 0]]
									f49_arg0:registerEventHandler( "transition_complete_keyframe", f38_arg0.clipFinished ) --[[ @ 0]]
								end
								 --[[ @ 0]]
								f48_arg0:beginAnimation( 900 ) --[[ @ 0]]
								f48_arg0:setAlpha( 1 ) --[[ @ 0]]
								f48_arg0:registerEventHandler( "transition_complete_keyframe", f48_local0 ) --[[ @ 0]]
							end
							 --[[ @ 0]]
							f47_arg0:beginAnimation( 879 ) --[[ @ 0]]
							f47_arg0:setAlpha( 0.2 ) --[[ @ 0]]
							f47_arg0:registerEventHandler( "transition_complete_keyframe", f47_local0 ) --[[ @ 0]]
						end
						 --[[ @ 0]]
						f46_arg0:beginAnimation( 789 ) --[[ @ 0]]
						f46_arg0:setAlpha( 1 ) --[[ @ 0]]
						f46_arg0:registerEventHandler( "transition_complete_keyframe", f46_local0 ) --[[ @ 0]]
					end
					 --[[ @ 0]]
					f45_arg0:beginAnimation( 660 ) --[[ @ 0]]
					f45_arg0:setAlpha( 0.4 ) --[[ @ 0]]
					f45_arg0:registerEventHandler( "transition_complete_keyframe", f45_local0 ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f44_arg0:beginAnimation( 659 ) --[[ @ 0]]
				f44_arg0:setAlpha( 1 ) --[[ @ 0]]
				f44_arg0:registerEventHandler( "transition_complete_keyframe", f44_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f38_arg0.TierAcquiredGlow:beginAnimation( 2710 ) --[[ @ 0]]
			f38_arg0.TierAcquiredGlow:setAlpha( 0 ) --[[ @ 0]]
			f38_arg0.TierAcquiredGlow:setZRot( 0 ) --[[ @ 0]]
			f38_arg0.TierAcquiredGlow:registerEventHandler( "interrupted_keyframe", f38_arg0.clipInterrupted ) --[[ @ 0]]
			f38_arg0.TierAcquiredGlow:registerEventHandler( "transition_complete_keyframe", f38_local1 ) --[[ @ 0]]
			local f38_local2 = function ( f50_arg0 )
				local f50_local0 = function ( f51_arg0 )
					local f51_local0 = function ( f52_arg0 )
						local f52_local0 = function ( f53_arg0 )
							f53_arg0:beginAnimation( 329 ) --[[ @ 0]]
							f53_arg0:setAlpha( 0 ) --[[ @ 0]]
							f53_arg0:setScale( 1.5, 1.5 ) --[[ @ 0]]
							f53_arg0:registerEventHandler( "transition_complete_keyframe", f38_arg0.clipFinished ) --[[ @ 0]]
						end
						 --[[ @ 0]]
						f52_arg0:beginAnimation( 3649 ) --[[ @ 0]]
						f52_arg0:registerEventHandler( "transition_complete_keyframe", f52_local0 ) --[[ @ 0]]
					end
					 --[[ @ 0]]
					f51_arg0:beginAnimation( 39 ) --[[ @ 0]]
					f51_arg0:setAlpha( 1 ) --[[ @ 0]]
					f51_arg0:setScale( 1, 1 ) --[[ @ 0]]
					f51_arg0:registerEventHandler( "transition_complete_keyframe", f51_local0 ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f50_arg0:beginAnimation( 220 ) --[[ @ 0]]
				f50_arg0:setAlpha( 0.85 ) --[[ @ 0]]
				f50_arg0:setScale( 0.8, 0.8 ) --[[ @ 0]]
				f50_arg0:registerEventHandler( "transition_complete_keyframe", f50_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f38_arg0.TierToken:beginAnimation( 2690 ) --[[ @ 0]]
			f38_arg0.TierToken:setAlpha( 0 ) --[[ @ 0]]
			f38_arg0.TierToken:setScale( 2, 2 ) --[[ @ 0]]
			f38_arg0.TierToken:registerEventHandler( "interrupted_keyframe", f38_arg0.clipInterrupted ) --[[ @ 0]]
			f38_arg0.TierToken:registerEventHandler( "transition_complete_keyframe", f38_local2 ) --[[ @ 0]]
			local f38_local3 = function ( f54_arg0 )
				local f54_local0 = function ( f55_arg0 )
					local f55_local0 = function ( f56_arg0 )
						f56_arg0:beginAnimation( 329 ) --[[ @ 0]]
						f56_arg0:setAlpha( 0 ) --[[ @ 0]]
						f56_arg0:registerEventHandler( "transition_complete_keyframe", f38_arg0.clipFinished ) --[[ @ 0]]
					end
					 --[[ @ 0]]
					f55_arg0:beginAnimation( 3649 ) --[[ @ 0]]
					f55_arg0:registerEventHandler( "transition_complete_keyframe", f55_local0 ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f54_arg0:beginAnimation( 260 ) --[[ @ 0]]
				f54_arg0:setAlpha( 1 ) --[[ @ 0]]
				f54_arg0:registerEventHandler( "transition_complete_keyframe", f54_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f38_arg0.TierAcquiredText:beginAnimation( 2690 ) --[[ @ 0]]
			f38_arg0.TierAcquiredText:setAlpha( 0 ) --[[ @ 0]]
			f38_arg0.TierAcquiredText:registerEventHandler( "interrupted_keyframe", f38_arg0.clipInterrupted ) --[[ @ 0]]
			f38_arg0.TierAcquiredText:registerEventHandler( "transition_complete_keyframe", f38_local3 ) --[[ @ 0]]
			local f38_local4 = function ( f57_arg0 )
				local f57_local0 = function ( f58_arg0 )
					local f58_local0 = function ( f59_arg0 )
						f59_arg0:playSound( "uin_igr_tieracquired_in", f38_arg1 ) --[[ @ 0]]
						f59_arg0:beginAnimation( 3909 ) --[[ @ 0]]
						f59_arg0:registerEventHandler( "transition_complete_keyframe", function ( element, event )
							element:playSound( "uin_igr_tieracquired_out", f38_arg1 ) --[[ @ 0]]
							f38_arg0.clipFinished( element, event ) --[[ @ 0]]
						end ) --[[ @ 0]]
					end
					 --[[ @ 0]]
					f58_arg0:playSound( "uin_igr_starreward", f38_arg1 ) --[[ @ 0]]
					f58_arg0:beginAnimation( 1690 ) --[[ @ 0]]
					f58_arg0:registerEventHandler( "transition_complete_keyframe", f58_local0 ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f38_arg0.StarTierSound:beginAnimation( 1000 ) --[[ @ 0]]
				f38_arg0.StarTierSound:setPlaySoundDirect( true ) --[[ @ 0]]
				f38_arg0.StarTierSound:registerEventHandler( "interrupted_keyframe", f38_arg0.clipInterrupted ) --[[ @ 0]]
				f38_arg0.StarTierSound:registerEventHandler( "transition_complete_keyframe", f57_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f38_arg0.StarTierSound:completeAnimation() --[[ @ 0]]
			f38_arg0.StarTierSound:setPlaySoundDirect( false ) --[[ @ 0]]
			f38_local4( f38_arg0.StarTierSound ) --[[ @ 0]]
		end
	},
	TierAcquiredWithStar = {
		DefaultClip = function ( f61_arg0, f61_arg1 )
			f61_arg0:__resetProperties() --[[ @ 0]]
			f61_arg0:setupElementClipCounter( 5 ) --[[ @ 0]]
			local f61_local0 = function ( f62_arg0 )
				f61_arg0.StarFull:beginAnimation( 5750 ) --[[ @ 0]]
				f61_arg0.StarFull:registerEventHandler( "interrupted_keyframe", f61_arg0.clipInterrupted ) --[[ @ 0]]
				f61_arg0.StarFull:registerEventHandler( "transition_complete_keyframe", f61_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f61_arg0.StarFull:completeAnimation() --[[ @ 0]]
			f61_arg0.StarFull:setAlpha( 1 ) --[[ @ 0]]
			f61_arg0.StarFull:setShaderVector( 0, 1.2, 0, 0, 0 ) --[[ @ 0]]
			f61_arg0.StarFull:setShaderVector( 1, -46.8, 0, 0, 0 ) --[[ @ 0]]
			f61_local0( f61_arg0.StarFull ) --[[ @ 0]]
			local f61_local1 = function ( f63_arg0 )
				local f63_local0 = function ( f64_arg0 )
					local f64_local0 = function ( f65_arg0 )
						local f65_local0 = function ( f66_arg0 )
							local f66_local0 = function ( f67_arg0 )
								local f67_local0 = function ( f68_arg0 )
									f68_arg0:beginAnimation( 329 ) --[[ @ 0]]
									f68_arg0:setAlpha( 0 ) --[[ @ 0]]
									f68_arg0:registerEventHandler( "transition_complete_keyframe", f61_arg0.clipFinished ) --[[ @ 0]]
								end
								 --[[ @ 0]]
								f67_arg0:beginAnimation( 900 ) --[[ @ 0]]
								f67_arg0:setAlpha( 1 ) --[[ @ 0]]
								f67_arg0:registerEventHandler( "transition_complete_keyframe", f67_local0 ) --[[ @ 0]]
							end
							 --[[ @ 0]]
							f66_arg0:beginAnimation( 880 ) --[[ @ 0]]
							f66_arg0:setAlpha( 0.2 ) --[[ @ 0]]
							f66_arg0:registerEventHandler( "transition_complete_keyframe", f66_local0 ) --[[ @ 0]]
						end
						 --[[ @ 0]]
						f65_arg0:beginAnimation( 789 ) --[[ @ 0]]
						f65_arg0:setAlpha( 1 ) --[[ @ 0]]
						f65_arg0:registerEventHandler( "transition_complete_keyframe", f65_local0 ) --[[ @ 0]]
					end
					 --[[ @ 0]]
					f64_arg0:beginAnimation( 659 ) --[[ @ 0]]
					f64_arg0:setAlpha( 0.4 ) --[[ @ 0]]
					f64_arg0:registerEventHandler( "transition_complete_keyframe", f64_local0 ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f63_arg0:beginAnimation( 660 ) --[[ @ 0]]
				f63_arg0:setAlpha( 1 ) --[[ @ 0]]
				f63_arg0:registerEventHandler( "transition_complete_keyframe", f63_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f61_arg0.TierAcquiredGlow:beginAnimation( 2240 ) --[[ @ 0]]
			f61_arg0.TierAcquiredGlow:setAlpha( 0 ) --[[ @ 0]]
			f61_arg0.TierAcquiredGlow:setZRot( 0 ) --[[ @ 0]]
			f61_arg0.TierAcquiredGlow:registerEventHandler( "interrupted_keyframe", f61_arg0.clipInterrupted ) --[[ @ 0]]
			f61_arg0.TierAcquiredGlow:registerEventHandler( "transition_complete_keyframe", f61_local1 ) --[[ @ 0]]
			local f61_local2 = function ( f69_arg0 )
				local f69_local0 = function ( f70_arg0 )
					local f70_local0 = function ( f71_arg0 )
						local f71_local0 = function ( f72_arg0 )
							f72_arg0:beginAnimation( 329 ) --[[ @ 0]]
							f72_arg0:setAlpha( 0 ) --[[ @ 0]]
							f72_arg0:setScale( 1.5, 1.5 ) --[[ @ 0]]
							f72_arg0:registerEventHandler( "transition_complete_keyframe", f61_arg0.clipFinished ) --[[ @ 0]]
						end
						 --[[ @ 0]]
						f71_arg0:beginAnimation( 3650 ) --[[ @ 0]]
						f71_arg0:registerEventHandler( "transition_complete_keyframe", f71_local0 ) --[[ @ 0]]
					end
					 --[[ @ 0]]
					f70_arg0:beginAnimation( 39 ) --[[ @ 0]]
					f70_arg0:setAlpha( 1 ) --[[ @ 0]]
					f70_arg0:setScale( 1, 1 ) --[[ @ 0]]
					f70_arg0:registerEventHandler( "transition_complete_keyframe", f70_local0 ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f69_arg0:beginAnimation( 220 ) --[[ @ 0]]
				f69_arg0:setAlpha( 0.85 ) --[[ @ 0]]
				f69_arg0:setScale( 0.8, 0.8 ) --[[ @ 0]]
				f69_arg0:registerEventHandler( "transition_complete_keyframe", f69_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f61_arg0.TierToken:beginAnimation( 2220 ) --[[ @ 0]]
			f61_arg0.TierToken:setAlpha( 0 ) --[[ @ 0]]
			f61_arg0.TierToken:setScale( 2, 2 ) --[[ @ 0]]
			f61_arg0.TierToken:registerEventHandler( "interrupted_keyframe", f61_arg0.clipInterrupted ) --[[ @ 0]]
			f61_arg0.TierToken:registerEventHandler( "transition_complete_keyframe", f61_local2 ) --[[ @ 0]]
			local f61_local3 = function ( f73_arg0 )
				local f73_local0 = function ( f74_arg0 )
					local f74_local0 = function ( f75_arg0 )
						f75_arg0:beginAnimation( 329 ) --[[ @ 0]]
						f75_arg0:setAlpha( 0 ) --[[ @ 0]]
						f75_arg0:registerEventHandler( "transition_complete_keyframe", f61_arg0.clipFinished ) --[[ @ 0]]
					end
					 --[[ @ 0]]
					f74_arg0:beginAnimation( 3650 ) --[[ @ 0]]
					f74_arg0:registerEventHandler( "transition_complete_keyframe", f74_local0 ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f73_arg0:beginAnimation( 260 ) --[[ @ 0]]
				f73_arg0:setAlpha( 1 ) --[[ @ 0]]
				f73_arg0:registerEventHandler( "transition_complete_keyframe", f73_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f61_arg0.TierAcquiredText:beginAnimation( 2220 ) --[[ @ 0]]
			f61_arg0.TierAcquiredText:setAlpha( 0 ) --[[ @ 0]]
			f61_arg0.TierAcquiredText:registerEventHandler( "interrupted_keyframe", f61_arg0.clipInterrupted ) --[[ @ 0]]
			f61_arg0.TierAcquiredText:registerEventHandler( "transition_complete_keyframe", f61_local3 ) --[[ @ 0]]
			local f61_local4 = function ( f76_arg0 )
				local f76_local0 = function ( f77_arg0 )
					f77_arg0:playSound( "uin_igr_tieracquired_in", f61_arg1 ) --[[ @ 0]]
					f77_arg0:beginAnimation( 3910 ) --[[ @ 0]]
					f77_arg0:registerEventHandler( "transition_complete_keyframe", function ( element, event )
						element:playSound( "uin_igr_tieracquired_out", f61_arg1 ) --[[ @ 0]]
						f61_arg0.clipFinished( element, event ) --[[ @ 0]]
					end ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f61_arg0.StarTierSound:beginAnimation( 2220 ) --[[ @ 0]]
				f61_arg0.StarTierSound:setPlaySoundDirect( true ) --[[ @ 0]]
				f61_arg0.StarTierSound:registerEventHandler( "interrupted_keyframe", f61_arg0.clipInterrupted ) --[[ @ 0]]
				f61_arg0.StarTierSound:registerEventHandler( "transition_complete_keyframe", f76_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f61_arg0.StarTierSound:completeAnimation() --[[ @ 0]]
			f61_arg0.StarTierSound:setPlaySoundDirect( false ) --[[ @ 0]]
			f61_local4( f61_arg0.StarTierSound ) --[[ @ 0]]
		end
	},
	TierAcquired = {
		DefaultClip = function ( f79_arg0, f79_arg1 )
			f79_arg0:__resetProperties() --[[ @ 0]]
			f79_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			local f79_local0 = function ( f80_arg0 )
				local f80_local0 = function ( f81_arg0 )
					local f81_local0 = function ( f82_arg0 )
						local f82_local0 = function ( f83_arg0 )
							local f83_local0 = function ( f84_arg0 )
								local f84_local0 = function ( f85_arg0 )
									f85_arg0:beginAnimation( 329 ) --[[ @ 0]]
									f85_arg0:setAlpha( 0 ) --[[ @ 0]]
									f85_arg0:registerEventHandler( "transition_complete_keyframe", f79_arg0.clipFinished ) --[[ @ 0]]
								end
								 --[[ @ 0]]
								f84_arg0:beginAnimation( 900 ) --[[ @ 0]]
								f84_arg0:setAlpha( 1 ) --[[ @ 0]]
								f84_arg0:registerEventHandler( "transition_complete_keyframe", f84_local0 ) --[[ @ 0]]
							end
							 --[[ @ 0]]
							f83_arg0:beginAnimation( 880 ) --[[ @ 0]]
							f83_arg0:setAlpha( 0.2 ) --[[ @ 0]]
							f83_arg0:registerEventHandler( "transition_complete_keyframe", f83_local0 ) --[[ @ 0]]
						end
						 --[[ @ 0]]
						f82_arg0:beginAnimation( 789 ) --[[ @ 0]]
						f82_arg0:setAlpha( 1 ) --[[ @ 0]]
						f82_arg0:registerEventHandler( "transition_complete_keyframe", f82_local0 ) --[[ @ 0]]
					end
					 --[[ @ 0]]
					f81_arg0:beginAnimation( 659 ) --[[ @ 0]]
					f81_arg0:setAlpha( 0.4 ) --[[ @ 0]]
					f81_arg0:registerEventHandler( "transition_complete_keyframe", f81_local0 ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f80_arg0:beginAnimation( 660 ) --[[ @ 0]]
				f80_arg0:setAlpha( 1 ) --[[ @ 0]]
				f80_arg0:registerEventHandler( "transition_complete_keyframe", f80_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f79_arg0.TierAcquiredGlow:beginAnimation( 2240 ) --[[ @ 0]]
			f79_arg0.TierAcquiredGlow:setAlpha( 0 ) --[[ @ 0]]
			f79_arg0.TierAcquiredGlow:setZRot( 0 ) --[[ @ 0]]
			f79_arg0.TierAcquiredGlow:registerEventHandler( "interrupted_keyframe", f79_arg0.clipInterrupted ) --[[ @ 0]]
			f79_arg0.TierAcquiredGlow:registerEventHandler( "transition_complete_keyframe", f79_local0 ) --[[ @ 0]]
			local f79_local1 = function ( f86_arg0 )
				local f86_local0 = function ( f87_arg0 )
					local f87_local0 = function ( f88_arg0 )
						local f88_local0 = function ( f89_arg0 )
							f89_arg0:beginAnimation( 329 ) --[[ @ 0]]
							f89_arg0:setAlpha( 0 ) --[[ @ 0]]
							f89_arg0:setScale( 1.5, 1.5 ) --[[ @ 0]]
							f89_arg0:registerEventHandler( "transition_complete_keyframe", f79_arg0.clipFinished ) --[[ @ 0]]
						end
						 --[[ @ 0]]
						f88_arg0:beginAnimation( 3650 ) --[[ @ 0]]
						f88_arg0:registerEventHandler( "transition_complete_keyframe", f88_local0 ) --[[ @ 0]]
					end
					 --[[ @ 0]]
					f87_arg0:beginAnimation( 39 ) --[[ @ 0]]
					f87_arg0:setAlpha( 1 ) --[[ @ 0]]
					f87_arg0:setScale( 1, 1 ) --[[ @ 0]]
					f87_arg0:registerEventHandler( "transition_complete_keyframe", f87_local0 ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f86_arg0:beginAnimation( 220 ) --[[ @ 0]]
				f86_arg0:setAlpha( 0.85 ) --[[ @ 0]]
				f86_arg0:setScale( 0.8, 0.8 ) --[[ @ 0]]
				f86_arg0:registerEventHandler( "transition_complete_keyframe", f86_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f79_arg0.TierToken:beginAnimation( 2220 ) --[[ @ 0]]
			f79_arg0.TierToken:setAlpha( 0 ) --[[ @ 0]]
			f79_arg0.TierToken:setScale( 2, 2 ) --[[ @ 0]]
			f79_arg0.TierToken:registerEventHandler( "interrupted_keyframe", f79_arg0.clipInterrupted ) --[[ @ 0]]
			f79_arg0.TierToken:registerEventHandler( "transition_complete_keyframe", f79_local1 ) --[[ @ 0]]
			local f79_local2 = function ( f90_arg0 )
				local f90_local0 = function ( f91_arg0 )
					local f91_local0 = function ( f92_arg0 )
						f92_arg0:beginAnimation( 329 ) --[[ @ 0]]
						f92_arg0:setAlpha( 0 ) --[[ @ 0]]
						f92_arg0:registerEventHandler( "transition_complete_keyframe", f79_arg0.clipFinished ) --[[ @ 0]]
					end
					 --[[ @ 0]]
					f91_arg0:beginAnimation( 3650 ) --[[ @ 0]]
					f91_arg0:registerEventHandler( "transition_complete_keyframe", f91_local0 ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f90_arg0:beginAnimation( 260 ) --[[ @ 0]]
				f90_arg0:setAlpha( 1 ) --[[ @ 0]]
				f90_arg0:registerEventHandler( "transition_complete_keyframe", f90_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f79_arg0.TierAcquiredText:beginAnimation( 2220 ) --[[ @ 0]]
			f79_arg0.TierAcquiredText:setAlpha( 0 ) --[[ @ 0]]
			f79_arg0.TierAcquiredText:registerEventHandler( "interrupted_keyframe", f79_arg0.clipInterrupted ) --[[ @ 0]]
			f79_arg0.TierAcquiredText:registerEventHandler( "transition_complete_keyframe", f79_local2 ) --[[ @ 0]]
			local f79_local3 = function ( f93_arg0 )
				local f93_local0 = function ( f94_arg0 )
					f94_arg0:playSound( "uin_igr_tieracquired_in", f79_arg1 ) --[[ @ 0]]
					f94_arg0:beginAnimation( 3910 ) --[[ @ 0]]
					f94_arg0:registerEventHandler( "transition_complete_keyframe", function ( element, event )
						element:playSound( "uin_igr_tieracquired_out", f79_arg1 ) --[[ @ 0]]
						f79_arg0.clipFinished( element, event ) --[[ @ 0]]
					end ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f79_arg0.StarTierSound:beginAnimation( 2220 ) --[[ @ 0]]
				f79_arg0.StarTierSound:setPlaySoundDirect( true ) --[[ @ 0]]
				f79_arg0.StarTierSound:registerEventHandler( "interrupted_keyframe", f79_arg0.clipInterrupted ) --[[ @ 0]]
				f79_arg0.StarTierSound:registerEventHandler( "transition_complete_keyframe", f93_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f79_arg0.StarTierSound:completeAnimation() --[[ @ 0]]
			f79_arg0.StarTierSound:setPlaySoundDirect( false ) --[[ @ 0]]
			f79_local3( f79_arg0.StarTierSound ) --[[ @ 0]]
		end
	},
	StarReceived = {
		DefaultClip = function ( f96_arg0, f96_arg1 )
			f96_arg0:__resetProperties() --[[ @ 0]]
			f96_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f96_local0 = function ( f97_arg0 )
				local f97_local0 = function ( f98_arg0 )
					f98_arg0:beginAnimation( 900 ) --[[ @ 0]]
					f98_arg0:setShaderVector( 0, 1.2, 0, 0, 0 ) --[[ @ 0]]
					f98_arg0:registerEventHandler( "transition_complete_keyframe", f96_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f96_arg0.StarFull:beginAnimation( 3000 ) --[[ @ 0]]
				f96_arg0.StarFull:registerEventHandler( "interrupted_keyframe", f96_arg0.clipInterrupted ) --[[ @ 0]]
				f96_arg0.StarFull:registerEventHandler( "transition_complete_keyframe", f97_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f96_arg0.StarFull:completeAnimation() --[[ @ 0]]
			f96_arg0.StarFull:setAlpha( 1 ) --[[ @ 0]]
			f96_arg0.StarFull:setScale( 1.1, 1.1 ) --[[ @ 0]]
			f96_arg0.StarFull:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
			f96_arg0.StarFull:setShaderVector( 1, -46.8, 0, 0, 0 ) --[[ @ 0]]
			f96_local0( f96_arg0.StarFull ) --[[ @ 0]]
			f96_arg0.nextClip = "DefaultClip" --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.PC_Korea_Event_TierProgress.__onClose = function ( f99_arg0 )
	f99_arg0.TierTimeRemaining:close() --[[ @ 0]]
	f99_arg0.ProgressFill:close() --[[ @ 0]]
	f99_arg0.TextNumber:close() --[[ @ 0]]
	f99_arg0.TextNumber2:close() --[[ @ 0]]
	f99_arg0.TextNumber3:close() --[[ @ 0]]
	f99_arg0.TextNumber4:close() --[[ @ 0]]
	f99_arg0.TextNumber5:close() --[[ @ 0]]
	f99_arg0.TokenEmpty:close() --[[ @ 0]]
	f99_arg0.TokenEmpty2:close() --[[ @ 0]]
	f99_arg0.TokenEmpty3:close() --[[ @ 0]]
	f99_arg0.TokenEmpty4:close() --[[ @ 0]]
	f99_arg0.SeparatorsList:close() --[[ @ 0]]
	f99_arg0.PCKoreaEventDayProgressionSeparators2:close() --[[ @ 0]]
	f99_arg0.PCKoreaEventDayProgressionSeparators:close() --[[ @ 0]]
	f99_arg0.PCKoreaEventDayProgressionSeparators3:close() --[[ @ 0]]
end
 --[[ @ 0]]
