-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:35
require( "x64:2f0229e4dd8ebd15" ) --[[ @ 0]]
require( "x64:21e4812bc9d39ec5" ) --[[ @ 0]]
require( "x64:6aad8c6cb8c21870" ) --[[ @ 0]]
require( "ui/uieditor/widgets/common/commonheader" ) --[[ @ 0]]
require( "x64:471d2a0ed724628e" ) --[[ @ 0]]
require( "ui/uieditor/widgets/footer/footercontainer_frontend_right" ) --[[ @ 0]]
require( "ui/uieditor/widgets/header/header_container_frontend" ) --[[ @ 0]]
require( "ui/uieditor/widgets/store/storecommontextbacking" ) --[[ @ 0]]

CoD.ArenaSkillEvaluationPlacementMenu = InheritFrom( CoD.Menu ) --[[ @ 0]]
LUI.createMenu.ArenaSkillEvaluationPlacementMenu = function ( f1_arg0, f1_arg1 )
	local self = CoD.Menu.NewForUIEditor( "ArenaSkillEvaluationPlacementMenu", f1_arg0 ) --[[ @ 0]]
	local f1_local1 = self --[[ @ 0]]
	self:setClass( CoD.ArenaSkillEvaluationPlacementMenu ) --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self:setOwner( f1_arg0 ) --[[ @ 0]]
	self:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	self:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	self:playSound( "menu_open", f1_arg0 ) --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	
	local BlurBg = LUI.UIImage.new( -0.5, 1.5, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	BlurBg:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_E2354BE557C4C7A" ) ) --[[ @ 0]]
	BlurBg:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( BlurBg ) --[[ @ 0]]
	self.BlurBg = BlurBg --[[ @ 0]]
	
	local Backing = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	Backing:setRGB( 0, 0, 0 ) --[[ @ 0]]
	Backing:setAlpha( 0.8 ) --[[ @ 0]]
	self:addElement( Backing ) --[[ @ 0]]
	self.Backing = Backing --[[ @ 0]]
	
	local FooterContainerFrontendRight = CoD.FooterContainer_Frontend_Right.new( f1_local1, f1_arg0, 0, 1, 0, 0, 1, 1, -48, 0 ) --[[ @ 0]]
	FooterContainerFrontendRight:registerEventHandler( "menu_loaded", function ( element, event )
		local f2_local0 = nil --[[ @ 0]]
		if element.menuLoaded then
			f2_local0 = element:menuLoaded( event ) --[[ @ 0]]
		elseif element.super.menuLoaded then
			f2_local0 = element.super:menuLoaded( event ) --[[ @ 0]]
		end
		SizeToSafeArea( element, f1_arg0 ) --[[ @ 0]]
		if not f2_local0 then
			f2_local0 = element:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f2_local0
	end ) --[[ @ 0]]
	self:addElement( FooterContainerFrontendRight ) --[[ @ 0]]
	self.FooterContainerFrontendRight = FooterContainerFrontendRight --[[ @ 0]]
	
	local CommonHeader = CoD.CommonHeader.new( f1_local1, f1_arg0, 0, 1, 0, 0, 0, 0, 0, 67 ) --[[ @ 0]]
	CommonHeader.BGSceneBlur:setAlpha( 0 ) --[[ @ 0]]
	CommonHeader.subtitle.StageTitle:setText( LocalizeToUpperString( @"hash_D762908B71F5449" ) ) --[[ @ 0]]
	CommonHeader.subtitle.subtitle:setAlpha( 0 ) --[[ @ 0]]
	CommonHeader:subscribeToGlobalModel( f1_arg0, "LobbyRoot", "lobbyTitle", function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			CommonHeader.subtitle.subtitle:setText( Engine[@"hash_4F9F1239CFD921FE"]( f3_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	CommonHeader:registerEventHandler( "menu_loaded", function ( element, event )
		local f4_local0 = nil --[[ @ 0]]
		if element.menuLoaded then
			f4_local0 = element:menuLoaded( event ) --[[ @ 0]]
		elseif element.super.menuLoaded then
			f4_local0 = element.super:menuLoaded( event ) --[[ @ 0]]
		end
		if not IsPC() then
			SizeToSafeArea( element, f1_arg0 ) --[[ @ 0]]
		end
		if not f4_local0 then
			f4_local0 = element:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f4_local0
	end ) --[[ @ 0]]
	self:addElement( CommonHeader ) --[[ @ 0]]
	self.CommonHeader = CommonHeader --[[ @ 0]]
	
	local HeaderStripe = CoD.header_container_frontend.new( f1_local1, f1_arg0, 0, 1, 0, 0, 0, 0, 0, 42 ) --[[ @ 0]]
	HeaderStripe:registerEventHandler( "menu_loaded", function ( element, event )
		local f5_local0 = nil --[[ @ 0]]
		if element.menuLoaded then
			f5_local0 = element:menuLoaded( event ) --[[ @ 0]]
		elseif element.super.menuLoaded then
			f5_local0 = element.super:menuLoaded( event ) --[[ @ 0]]
		end
		if not IsPC() then
			SizeToSafeArea( element, f1_arg0 ) --[[ @ 0]]
		elseif IsPC() then
			SizeToWidthOfScreen( element, f1_arg0 ) --[[ @ 0]]
		end
		if not f5_local0 then
			f5_local0 = element:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f5_local0
	end ) --[[ @ 0]]
	self:addElement( HeaderStripe ) --[[ @ 0]]
	self.HeaderStripe = HeaderStripe --[[ @ 0]]
	
	local CommonIdentityWidgetStreamlinedSafeAreaContainer = CoD.CommonIdentityWidgetStreamlinedSafeAreaContainer.new( f1_local1, f1_arg0, 0.5, 0.5, -960, 960, 0.5, 0.5, -540, 540 ) --[[ @ 0]]
	CommonIdentityWidgetStreamlinedSafeAreaContainer:registerEventHandler( "menu_loaded", function ( element, event )
		local f6_local0 = nil --[[ @ 0]]
		if element.menuLoaded then
			f6_local0 = element:menuLoaded( event ) --[[ @ 0]]
		elseif element.super.menuLoaded then
			f6_local0 = element.super:menuLoaded( event ) --[[ @ 0]]
		end
		SizeToSafeArea( element, f1_arg0 ) --[[ @ 0]]
		if not f6_local0 then
			f6_local0 = element:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f6_local0
	end ) --[[ @ 0]]
	self:addElement( CommonIdentityWidgetStreamlinedSafeAreaContainer ) --[[ @ 0]]
	self.CommonIdentityWidgetStreamlinedSafeAreaContainer = CommonIdentityWidgetStreamlinedSafeAreaContainer --[[ @ 0]]
	
	local AARPerformBg2 = LUI.UIImage.new( 0.5, 0.5, -720, 717, 0.5, 0.5, -420, -324 ) --[[ @ 0]]
	AARPerformBg2:setAlpha( 0.5 ) --[[ @ 0]]
	AARPerformBg2:setImage( RegisterImage( @"uie_ui_menu_aar_perform_repeat_bg" ) ) --[[ @ 0]]
	AARPerformBg2:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_16CBE95C250C6D15" ) ) --[[ @ 0]]
	AARPerformBg2:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	AARPerformBg2:setupNineSliceShader( 344, 136 ) --[[ @ 0]]
	self:addElement( AARPerformBg2 ) --[[ @ 0]]
	self.AARPerformBg2 = AARPerformBg2 --[[ @ 0]]
	
	local arenaLeaguePlayBg = CoD.arenaLeaguePlayBg.new( f1_local1, f1_arg0, 0.5, 0.5, -960, 960, 0.5, 0.5, -540, 540 ) --[[ @ 0]]
	self:addElement( arenaLeaguePlayBg ) --[[ @ 0]]
	self.arenaLeaguePlayBg = arenaLeaguePlayBg --[[ @ 0]]
	
	local DotTiledBacking = CoD.StoreCommonTextBacking.new( f1_local1, f1_arg0, 0.5, 0.5, -720, 717, 0.5, 0.5, -324, 422 ) --[[ @ 0]]
	DotTiledBacking:setAlpha( 0.5 ) --[[ @ 0]]
	DotTiledBacking.TiledShaderImage:setAlpha( 0.5 ) --[[ @ 0]]
	self:addElement( DotTiledBacking ) --[[ @ 0]]
	self.DotTiledBacking = DotTiledBacking --[[ @ 0]]
	
	local FuiBox02Right = LUI.UIImage.new( 0.5, 0.5, 678, 712, 0.5, 0.5, -381, -415 ) --[[ @ 0]]
	FuiBox02Right:setAlpha( 0.2 ) --[[ @ 0]]
	FuiBox02Right:setImage( RegisterImage( @"uie_ui_hud_vehicle_ac130_fui_box01" ) ) --[[ @ 0]]
	FuiBox02Right:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_31CC85D0A86303B0" ) ) --[[ @ 0]]
	FuiBox02Right:setShaderVector( 0, 1, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( FuiBox02Right ) --[[ @ 0]]
	self.FuiBox02Right = FuiBox02Right --[[ @ 0]]
	
	local TiledwhiteNoiseBacking = LUI.UIImage.new( 0.5, 0.5, -720, 717, 0.5, 0.5, -420, -324 ) --[[ @ 0]]
	TiledwhiteNoiseBacking:setAlpha( 0.02 ) --[[ @ 0]]
	TiledwhiteNoiseBacking:setImage( RegisterImage( @"uie_ui_menu_aar_repeat_white_bg" ) ) --[[ @ 0]]
	TiledwhiteNoiseBacking:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_16CBE95C250C6D15" ) ) --[[ @ 0]]
	TiledwhiteNoiseBacking:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	TiledwhiteNoiseBacking:setupNineSliceShader( 64, 64 ) --[[ @ 0]]
	self:addElement( TiledwhiteNoiseBacking ) --[[ @ 0]]
	self.TiledwhiteNoiseBacking = TiledwhiteNoiseBacking --[[ @ 0]]
	
	local BGDotPatternLarge2 = LUI.UIImage.new( 0.5, 0.5, -720, 717, 0.5, 0.5, -326, -322 ) --[[ @ 0]]
	BGDotPatternLarge2:setImage( RegisterImage( @"uie_ui_menu_social_emblem_dotline_tiled" ) ) --[[ @ 0]]
	BGDotPatternLarge2:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_67C9C02F608D0A75" ) ) --[[ @ 0]]
	BGDotPatternLarge2:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	BGDotPatternLarge2:setupNineSliceShader( 32, 4 ) --[[ @ 0]]
	self:addElement( BGDotPatternLarge2 ) --[[ @ 0]]
	self.BGDotPatternLarge2 = BGDotPatternLarge2 --[[ @ 0]]
	
	local BottomBracket9Slice = LUI.UIImage.new( 0.5, 0.5, -721, 718, 0.5, 0.5, 414, 422 ) --[[ @ 0]]
	BottomBracket9Slice:setAlpha( 0.2 ) --[[ @ 0]]
	BottomBracket9Slice:setImage( RegisterImage( @"hash_4C325BED3F226657" ) ) --[[ @ 0]]
	BottomBracket9Slice:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_add" ) ) --[[ @ 0]]
	BottomBracket9Slice:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	BottomBracket9Slice:setupNineSliceShader( 16, 4 ) --[[ @ 0]]
	self:addElement( BottomBracket9Slice ) --[[ @ 0]]
	self.BottomBracket9Slice = BottomBracket9Slice --[[ @ 0]]
	
	local Line = LUI.UIImage.new( 0.5, 0.5, 275.5, 279.5, 0.5, 0.5, -240.5, 367.5 ) --[[ @ 0]]
	Line:setAlpha( 0.05 ) --[[ @ 0]]
	Line:setImage( RegisterImage( @"hash_C49B0C8991A541F" ) ) --[[ @ 0]]
	Line:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_67C9C02F608D0A75" ) ) --[[ @ 0]]
	Line:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	Line:setupNineSliceShader( 4, 8 ) --[[ @ 0]]
	self:addElement( Line ) --[[ @ 0]]
	self.Line = Line --[[ @ 0]]
	
	local ArenaInfoWidget = CoD.ArenaInfoWidget.new( f1_local1, f1_arg0, 0.5, 0.5, 327, 676, 0.5, 0.5, -272, 363 ) --[[ @ 0]]
	ArenaInfoWidget:subscribeToGlobalModel( f1_arg0, "PerController", "identityBadge.xuid", function ( model )
		local f7_local0 = model:get() --[[ @ 0]]
		if f7_local0 ~= nil then
			ArenaInfoWidget.arenaFlameStreak:setImage( RegisterImage( CoD.ArenaLeaguePlayUtility.GetPlayerFireStreak( f7_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	ArenaInfoWidget:subscribeToGlobalModel( f1_arg0, "PerController", "identityBadge.xuid", function ( model )
		local f8_local0 = model:get() --[[ @ 0]]
		if f8_local0 ~= nil then
			ArenaInfoWidget.Icon:setImage( RegisterImage( CoD.ArenaLeaguePlayUtility.GetLeagueLadderPlayerRankIconFromXuid( f8_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	ArenaInfoWidget.SkillIcon.__SkillIcon_Image = function ( f9_arg0 )
		local f9_local0 = f9_arg0:get() --[[ @ 0]]
		if f9_local0 ~= nil then
			ArenaInfoWidget.SkillIcon:setImage( RegisterImage( CoD.ArenaLeaguePlayUtility.GetLeagueLadderPlayerSkillDivisionIconFromXuid( f9_local0 ) ) ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	ArenaInfoWidget:subscribeToGlobalModel( f1_arg0, "PerController", "identityBadge.xuid", ArenaInfoWidget.SkillIcon.__SkillIcon_Image ) --[[ @ 0]]
	ArenaInfoWidget.SkillIcon.__SkillIcon_Image_FullPath = function ()
		local f10_local0 = DataSources.PerController.getModel( f1_arg0 ) --[[ @ 0]]
		f10_local0 = f10_local0["identityBadge.xuid"] --[[ @ 0]]
		if f10_local0 then
			ArenaInfoWidget.SkillIcon.__SkillIcon_Image( f10_local0 ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	ArenaInfoWidget.Rank.__xuid = function ( f11_arg0 )
		local f11_local0 = f11_arg0:get() --[[ @ 0]]
		if f11_local0 ~= nil then
			ArenaInfoWidget.Rank:setText( CoD.ArenaLeaguePlayUtility.GetLeagueLadderPlayerRankFromXuid( f11_local0 ) ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	ArenaInfoWidget:subscribeToGlobalModel( f1_arg0, "PerController", "identityBadge.xuid", ArenaInfoWidget.Rank.__xuid ) --[[ @ 0]]
	ArenaInfoWidget.Rank.__xuid_FullPath = function ()
		local f12_local0 = DataSources.PerController.getModel( f1_arg0 ) --[[ @ 0]]
		f12_local0 = f12_local0["identityBadge.xuid"] --[[ @ 0]]
		if f12_local0 then
			ArenaInfoWidget.Rank.__xuid( f12_local0 ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	ArenaInfoWidget:subscribeToGlobalModel( f1_arg0, "PerController", "identityBadge.xuid", function ( model )
		local f13_local0 = model:get() --[[ @ 0]]
		if f13_local0 ~= nil then
			ArenaInfoWidget.WinStreak.WinStreak:setText( CoD.ArenaLeaguePlayUtility.GetPlayerBestCurrentEventGameStreakFromXuid( f13_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	ArenaInfoWidget:subscribeToGlobalModel( f1_arg0, "PerController", "identityBadge.xuid", function ( model )
		local f14_local0 = model:get() --[[ @ 0]]
		if f14_local0 ~= nil then
			ArenaInfoWidget.Emblem:setupPlayerEmblemByXUID( f14_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	ArenaInfoWidget:subscribeToGlobalModel( f1_arg0, "PerController", "identityBadge", function ( model )
		ArenaInfoWidget.CallingCard:setModel( model, f1_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	ArenaInfoWidget:subscribeToGlobalModel( f1_arg0, "PerController", "identityBadge.gamertag", function ( model )
		local f16_local0 = model:get() --[[ @ 0]]
		if f16_local0 ~= nil then
			ArenaInfoWidget.Name:setText( f16_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( ArenaInfoWidget ) --[[ @ 0]]
	self.ArenaInfoWidget = ArenaInfoWidget --[[ @ 0]]
	
	local ArenaSkillEvaluationWidget = CoD.ArenaSkillEvaluationWidget.new( f1_local1, f1_arg0, 0.5, 0.5, -721, 239, 0.5, 0.5, -356, 384 ) --[[ @ 0]]
	ArenaSkillEvaluationWidget.Bg:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( ArenaSkillEvaluationWidget ) --[[ @ 0]]
	self.ArenaSkillEvaluationWidget = ArenaSkillEvaluationWidget --[[ @ 0]]
	
	local f1_local18 = ArenaInfoWidget --[[ @ 0]]
	local f1_local19 = ArenaInfoWidget.subscribeToModel --[[ @ 0]]
	local f1_local20 = DataSources.LobbyRoot.getModel( f1_arg0 ) --[[ @ 0]]
	f1_local19( f1_local18, f1_local20.lobbyNav, ArenaInfoWidget.SkillIcon.__SkillIcon_Image_FullPath ) --[[ @ 0]]
	f1_local18 = ArenaInfoWidget --[[ @ 0]]
	f1_local19 = ArenaInfoWidget.subscribeToModel --[[ @ 0]]
	f1_local20 = DataSources.LobbyRoot.getModel( f1_arg0 ) --[[ @ 0]]
	f1_local19( f1_local18, f1_local20["privateClient.update"], ArenaInfoWidget.SkillIcon.__SkillIcon_Image_FullPath ) --[[ @ 0]]
	f1_local18 = ArenaInfoWidget --[[ @ 0]]
	f1_local19 = ArenaInfoWidget.subscribeToModel --[[ @ 0]]
	f1_local20 = DataSources.LobbyRoot.getModel( f1_arg0 ) --[[ @ 0]]
	f1_local19( f1_local18, f1_local20["gameClient.update"], ArenaInfoWidget.SkillIcon.__SkillIcon_Image_FullPath ) --[[ @ 0]]
	f1_local18 = ArenaInfoWidget --[[ @ 0]]
	f1_local19 = ArenaInfoWidget.subscribeToModel --[[ @ 0]]
	f1_local20 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local19( f1_local18, f1_local20["PartyPrivacy.privacy"], ArenaInfoWidget.SkillIcon.__SkillIcon_Image_FullPath ) --[[ @ 0]]
	f1_local18 = ArenaInfoWidget --[[ @ 0]]
	f1_local19 = ArenaInfoWidget.subscribeToModel --[[ @ 0]]
	f1_local20 = DataSources.LobbyRoot.getModel( f1_arg0 ) --[[ @ 0]]
	f1_local19( f1_local18, f1_local20.lobbyNav, ArenaInfoWidget.Rank.__xuid_FullPath ) --[[ @ 0]]
	f1_local18 = ArenaInfoWidget --[[ @ 0]]
	f1_local19 = ArenaInfoWidget.subscribeToModel --[[ @ 0]]
	f1_local20 = DataSources.LobbyRoot.getModel( f1_arg0 ) --[[ @ 0]]
	f1_local19( f1_local18, f1_local20["privateClient.update"], ArenaInfoWidget.Rank.__xuid_FullPath ) --[[ @ 0]]
	f1_local18 = ArenaInfoWidget --[[ @ 0]]
	f1_local19 = ArenaInfoWidget.subscribeToModel --[[ @ 0]]
	f1_local20 = DataSources.LobbyRoot.getModel( f1_arg0 ) --[[ @ 0]]
	f1_local19( f1_local18, f1_local20["gameClient.update"], ArenaInfoWidget.Rank.__xuid_FullPath ) --[[ @ 0]]
	f1_local18 = ArenaInfoWidget --[[ @ 0]]
	f1_local19 = ArenaInfoWidget.subscribeToModel --[[ @ 0]]
	f1_local20 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local19( f1_local18, f1_local20["PartyPrivacy.privacy"], ArenaInfoWidget.Rank.__xuid_FullPath ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"], "ESCAPE", function ( element, menu, controller, model )
		GoBack( self, controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"], @"hash_370A9FDC87CD3D48", nil, "ESCAPE" ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	FooterContainerFrontendRight:setModel( self.buttonModel, f1_arg0 ) --[[ @ 0]]
	if CoD.isPC then
		FooterContainerFrontendRight.id = "FooterContainerFrontendRight" --[[ @ 0]]
	end
	ArenaInfoWidget.id = "ArenaInfoWidget" --[[ @ 0]]
	ArenaSkillEvaluationWidget.id = "ArenaSkillEvaluationWidget" --[[ @ 0]]
	self:processEvent( {
		name = "menu_loaded",
		controller = f1_arg0
	} ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.ArenaSkillEvaluationPlacementMenu.__onClose = function ( f19_arg0 )
	f19_arg0.FooterContainerFrontendRight:close() --[[ @ 0]]
	f19_arg0.CommonHeader:close() --[[ @ 0]]
	f19_arg0.HeaderStripe:close() --[[ @ 0]]
	f19_arg0.CommonIdentityWidgetStreamlinedSafeAreaContainer:close() --[[ @ 0]]
	f19_arg0.arenaLeaguePlayBg:close() --[[ @ 0]]
	f19_arg0.DotTiledBacking:close() --[[ @ 0]]
	f19_arg0.ArenaInfoWidget:close() --[[ @ 0]]
	f19_arg0.ArenaSkillEvaluationWidget:close() --[[ @ 0]]
end
 --[[ @ 0]]
