-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:50
require( "x64:2af5ac56443a5fe2" ) --[[ @ 0]]
require( "x64:18e85b5639cc87ba" ) --[[ @ 0]]
require( "x64:2397f0051aed4aca" ) --[[ @ 0]]

CoD.ArenaProgressionRubies = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.ArenaProgressionRubies.__defaultWidth = 140 --[[ @ 0]]
CoD.ArenaProgressionRubies.__defaultHeight = 74 --[[ @ 0]]
CoD.ArenaProgressionRubies.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.ArenaProgressionRubies ) --[[ @ 0]]
	self.id = "ArenaProgressionRubies" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local threeRubyLayout = CoD.arenaLeaguePlayRubiesThree.new( f1_arg0, f1_arg1, 0, 0, 0, 140, 0, 0, 0, 74 ) --[[ @ 0]]
	threeRubyLayout:mergeStateConditions( {
		{
			stateName = "oneruby",
			condition = function ( menu, element, event )
				return CoD.ArenaLeaguePlayUtility.DoesRubyCountForModelEqualValue( self, f1_arg1, "rubiesUnlocked", 1 )
			end
		},
		{
			stateName = "tworubies",
			condition = function ( menu, element, event )
				return CoD.ArenaLeaguePlayUtility.DoesRubyCountForModelEqualValue( self, f1_arg1, "rubiesUnlocked", 2 )
			end
		},
		{
			stateName = "treerubies",
			condition = function ( menu, element, event )
				return CoD.ArenaLeaguePlayUtility.DoesRubyCountForModelEqualValue( self, f1_arg1, "rubiesUnlocked", 3 )
			end
		}
	} ) --[[ @ 0]]
	threeRubyLayout:linkToElementModel( self, nil, false, function ( model )
		threeRubyLayout:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( threeRubyLayout ) --[[ @ 0]]
	self.threeRubyLayout = threeRubyLayout --[[ @ 0]]
	
	local fourRubyLayout = CoD.arenaLeaguePlayRubiesFour.new( f1_arg0, f1_arg1, 0, 0, 0, 140, 0, 0, 0, 74 ) --[[ @ 0]]
	fourRubyLayout:mergeStateConditions( {
		{
			stateName = "oneruby",
			condition = function ( menu, element, event )
				return CoD.ArenaLeaguePlayUtility.DoesRubyCountForModelEqualValue( self, f1_arg1, "rubiesUnlocked", 1 )
			end
		},
		{
			stateName = "tworubies",
			condition = function ( menu, element, event )
				return CoD.ArenaLeaguePlayUtility.DoesRubyCountForModelEqualValue( self, f1_arg1, "rubiesUnlocked", 2 )
			end
		},
		{
			stateName = "treerubies",
			condition = function ( menu, element, event )
				return CoD.ArenaLeaguePlayUtility.DoesRubyCountForModelEqualValue( self, f1_arg1, "rubiesUnlocked", 3 )
			end
		},
		{
			stateName = "fourrubies",
			condition = function ( menu, element, event )
				return CoD.ArenaLeaguePlayUtility.DoesRubyCountForModelEqualValue( self, f1_arg1, "rubiesUnlocked", 4 )
			end
		}
	} ) --[[ @ 0]]
	fourRubyLayout:linkToElementModel( self, nil, false, function ( model )
		fourRubyLayout:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( fourRubyLayout ) --[[ @ 0]]
	self.fourRubyLayout = fourRubyLayout --[[ @ 0]]
	
	local fiveRubyLayout = CoD.arenaLeaguePlayRubiesFive.new( f1_arg0, f1_arg1, 0, 0, 0, 140, 0, 0, 0, 74 ) --[[ @ 0]]
	fiveRubyLayout:mergeStateConditions( {
		{
			stateName = "oneruby",
			condition = function ( menu, element, event )
				return CoD.ArenaLeaguePlayUtility.DoesRubyCountForModelEqualValue( self, f1_arg1, "rubiesUnlocked", 1 )
			end
		},
		{
			stateName = "tworubies",
			condition = function ( menu, element, event )
				return CoD.ArenaLeaguePlayUtility.DoesRubyCountForModelEqualValue( self, f1_arg1, "rubiesUnlocked", 2 )
			end
		},
		{
			stateName = "treerubies",
			condition = function ( menu, element, event )
				return CoD.ArenaLeaguePlayUtility.DoesRubyCountForModelEqualValue( self, f1_arg1, "rubiesUnlocked", 3 )
			end
		},
		{
			stateName = "fourrubies",
			condition = function ( menu, element, event )
				return CoD.ArenaLeaguePlayUtility.DoesRubyCountForModelEqualValue( self, f1_arg1, "rubiesUnlocked", 4 )
			end
		},
		{
			stateName = "fiverubies",
			condition = function ( menu, element, event )
				return CoD.ArenaLeaguePlayUtility.DoesRubyCountForModelEqualValue( self, f1_arg1, "rubiesUnlocked", 5 )
			end
		}
	} ) --[[ @ 0]]
	fiveRubyLayout:linkToElementModel( self, nil, false, function ( model )
		fiveRubyLayout:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( fiveRubyLayout ) --[[ @ 0]]
	self.fiveRubyLayout = fiveRubyLayout --[[ @ 0]]
	
	self:linkToElementModel( self, "rubiesUnlocked", true, function ( model )
		local f17_local0 = self --[[ @ 0]]
		UpdateElementState( self, "fiveRubyLayout", f1_arg1 ) --[[ @ 0]]
		UpdateElementState( self, "fourRubyLayout", f1_arg1 ) --[[ @ 0]]
		UpdateElementState( self, "threeRubyLayout", f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:linkToElementModel( self, "leagueRank", true, function ( model )
		local f18_local0 = self --[[ @ 0]]
		UpdateSelfElementState( f1_arg0, self, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.ArenaProgressionRubies.__resetProperties = function ( f19_arg0 )
	f19_arg0.fourRubyLayout:completeAnimation() --[[ @ 0]]
	f19_arg0.fiveRubyLayout:completeAnimation() --[[ @ 0]]
	f19_arg0.threeRubyLayout:completeAnimation() --[[ @ 0]]
	f19_arg0.fourRubyLayout:setAlpha( 1 ) --[[ @ 0]]
	f19_arg0.fiveRubyLayout:setAlpha( 1 ) --[[ @ 0]]
	f19_arg0.threeRubyLayout:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ArenaProgressionRubies.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f20_arg0, f20_arg1 )
			f20_arg0:__resetProperties() --[[ @ 0]]
			f20_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f20_arg0.fourRubyLayout:completeAnimation() --[[ @ 0]]
			f20_arg0.fourRubyLayout:setAlpha( 0 ) --[[ @ 0]]
			f20_arg0.clipFinished( f20_arg0.fourRubyLayout ) --[[ @ 0]]
			f20_arg0.fiveRubyLayout:completeAnimation() --[[ @ 0]]
			f20_arg0.fiveRubyLayout:setAlpha( 0 ) --[[ @ 0]]
			f20_arg0.clipFinished( f20_arg0.fiveRubyLayout ) --[[ @ 0]]
		end
	},
	FourRubies = {
		DefaultClip = function ( f21_arg0, f21_arg1 )
			f21_arg0:__resetProperties() --[[ @ 0]]
			f21_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f21_arg0.threeRubyLayout:completeAnimation() --[[ @ 0]]
			f21_arg0.threeRubyLayout:setAlpha( 0 ) --[[ @ 0]]
			f21_arg0.clipFinished( f21_arg0.threeRubyLayout ) --[[ @ 0]]
			f21_arg0.fiveRubyLayout:completeAnimation() --[[ @ 0]]
			f21_arg0.fiveRubyLayout:setAlpha( 0 ) --[[ @ 0]]
			f21_arg0.clipFinished( f21_arg0.fiveRubyLayout ) --[[ @ 0]]
		end
	},
	FiveRubies = {
		DefaultClip = function ( f22_arg0, f22_arg1 )
			f22_arg0:__resetProperties() --[[ @ 0]]
			f22_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f22_arg0.threeRubyLayout:completeAnimation() --[[ @ 0]]
			f22_arg0.threeRubyLayout:setAlpha( 0 ) --[[ @ 0]]
			f22_arg0.clipFinished( f22_arg0.threeRubyLayout ) --[[ @ 0]]
			f22_arg0.fourRubyLayout:completeAnimation() --[[ @ 0]]
			f22_arg0.fourRubyLayout:setAlpha( 0 ) --[[ @ 0]]
			f22_arg0.clipFinished( f22_arg0.fourRubyLayout ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.ArenaProgressionRubies.__onClose = function ( f23_arg0 )
	f23_arg0.threeRubyLayout:close() --[[ @ 0]]
	f23_arg0.fourRubyLayout:close() --[[ @ 0]]
	f23_arg0.fiveRubyLayout:close() --[[ @ 0]]
end
 --[[ @ 0]]
