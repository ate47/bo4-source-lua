-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:49
require( "lua/lobby/common/lobbycore" ) --[[ @ 0]]
require( "lua/lobby/process/lobbyprocessnavigate" ) --[[ @ 0]]
require( "lua/lobby/process/lobbyprocess" ) --[[ @ 0]]
require( "lua/lobby/process/lobbyprocessqueue" ) --[[ @ 0]]
require( "lua/shared/luautils" ) --[[ @ 0]]
require( "x64:14739393d6e4e043" ) --[[ @ 0]]
require( "x64:4aed888d0a6bbffc" ) --[[ @ 0]]
require( "x64:5ba4b39ed33f09b0" ) --[[ @ 0]]
require( "x64:67036950a4f907a2" ) --[[ @ 0]]
require( "x64:4b27017ec234a36" ) --[[ @ 0]]
require( "lua/lobby/lobbydebug" ) --[[ @ 0]]
require( "x64:3244a02989d808e7" ) --[[ @ 0]]
require( "x64:4b9e7c1be01567c1" ) --[[ @ 0]]
require( "x64:6fc364981803c3de" ) --[[ @ 0]]
require( "x64:68034b632ce7f3e4" ) --[[ @ 0]]
require( "x64:6e80204599f61b79" ) --[[ @ 0]]
require( "x64:3194da1d58ee8f6f" ) --[[ @ 0]]
require( "x64:688771219179e0e9" ) --[[ @ 0]]
require( "x64:674d045268eb6203" ) --[[ @ 0]]
require( "x64:1d867300e0099eca" ) --[[ @ 0]]
require( "x64:317b22ee799f2944" ) --[[ @ 0]]
require( "x64:12bca0018d3f2c72" ) --[[ @ 0]]
require( "x64:1850554c32434c0a" ) --[[ @ 0]]
require( "x64:79ca30b1e5f0be4d" ) --[[ @ 0]]
require( "x64:44008652535479aa" ) --[[ @ 0]]
require( "x64:75d438e4dddc68ba" ) --[[ @ 0]]
require( "x64:7a8265d32314332c" ) --[[ @ 0]]
require( "lua/lobby/lobbymsg" ) --[[ @ 0]]
require( "x64:6fce63782cae60aa" ) --[[ @ 0]]
require( "x64:706a78baa6dfb003" ) --[[ @ 0]]
require( "x64:705594baa6cd838d" ) --[[ @ 0]]
require( "x64:701577baa6976e51" ) --[[ @ 0]]
require( "x64:75ea582aa359cb8a" ) --[[ @ 0]]
require( "x64:1306e43680ab7c" ) --[[ @ 0]]
require( "x64:5b56af127bf10bec" ) --[[ @ 0]]
require( "x64:1ebaf79ed592662" ) --[[ @ 0]]

LobbyVM = {
	DevGui = {},
	lobbyStatus = {
		cleared = true,
		clearedTime = 0
	},
	playSoundHistory = {}
} --[[ @ 0]]
LobbyVM.DevGui.LaunchGame = function ( f1_arg0, f1_arg1 )
	local f1_local0 = Engine[@"lobbygetcontrollinglobbysession"]( Enum[@"lobbymodule"][@"lobby_module_host"] ) --[[ @ 0]]
	if f1_arg0 ~= nil then
		Engine[@"lobbysetmap"]( f1_local0, f1_arg0 ) --[[ @ 0]]
	end
	if f1_arg1 ~= nil then
		Engine[@"lobbysetgametype"]( f1_local0, f1_arg1 ) --[[ @ 0]]
	end
	if not Engine[@"islobbyactive"]( Enum[@"lobbymodule"][@"lobby_module_client"], f1_local0 ) then
		return 
	elseif not Engine[@"islobbyhost"]( f1_local0 ) then
		return 
	else
		Lobby.Timer.Clear( true ) --[[ @ 0]]
		LobbyVM.LaunchGameExec( Engine[@"getprimarycontroller"](), f1_local0 ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
LobbyVM.DevGui.LobbyReset = function ()
	LobbyVM.OnErrorShutdown( {
		controller = Engine[@"getprimarycontroller"](),
		signoutUsers = false
	} ) --[[ @ 0]]
end
 --[[ @ 0]]
LobbyVM.PlaySound = function ( f3_arg0, f3_arg1 )
	local f3_local0 = false --[[ @ 0]]
	if LobbyVM.playSoundHistory[f3_arg0] == nil then
		f3_local0 = true --[[ @ 0]]
	elseif LobbyVM.playSoundHistory[f3_arg0] < Engine[@"milliseconds"]() then
		f3_local0 = true --[[ @ 0]]
	end
	if f3_local0 == true then
		Engine[@"playsound"]( f3_arg0 ) --[[ @ 0]]
		LobbyVM.playSoundHistory[f3_arg0] = Engine[@"milliseconds"]() + f3_arg1 --[[ @ 0]]
	end
end
 --[[ @ 0]]
LobbyVM.ExecuteLobbyVMRequest = function ( f4_arg0 )
	local f4_local0 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f4_local0 = f4_local0:create( "lobbyRoot.lobbyVMRequest" ) --[[ @ 0]]
	if not f4_local0:set( f4_arg0 ) then
		f4_local0:forceNotifySubscriptions() --[[ @ 0]]
	end
end
 --[[ @ 0]]
LobbyVM.ExecuteLobbyVMCreateOverlay = function ( f5_arg0, f5_arg1 )
	local f5_local0 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f5_local0 = f5_local0:create( "lobbyRoot.lobbyVMCreateOverlayController" ) --[[ @ 0]]
	f5_local0:set( f5_arg0 ) --[[ @ 0]]
	f5_local0 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f5_local0 = f5_local0:create( "lobbyRoot.lobbyVMCreateOverlay" ) --[[ @ 0]]
	if not f5_local0:set( f5_arg1 ) then
		f5_local0:forceNotifySubscriptions() --[[ @ 0]]
	end
end
 --[[ @ 0]]
LobbyVM.ExecuteLobbyVMOpenSurvey = function ( f6_arg0 )
	local f6_local0 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f6_local0 = f6_local0:create( "lobbyRoot.lobbyVMOpenIntroSurvey" ) --[[ @ 0]]
	if not f6_local0:set( f6_arg0 ) then
		f6_local0:forceNotifySubscriptions() --[[ @ 0]]
	end
end
 --[[ @ 0]]
LobbyVM.OnErrorShutdown = function ( f7_arg0 )
	Engine[@"printinfo"]( Enum[@"consolelabel_e"][@"con_label_lobby"], "Performing emergency shutdown.\n" ) --[[ @ 0]]
	Engine[@"printinfo"]( Enum[@"consolelabel_e"][@"con_label_lobby"], "Close all popups in the lobby.\n" ) --[[ @ 0]]
	Engine[@"forcenotifymodelsubscriptions"]( Engine[@"createmodel"]( Engine[@"getglobalmodel"](), "lobbyRoot.closePopups" ) ) --[[ @ 0]]
	Engine[@"printinfo"]( Enum[@"consolelabel_e"][@"con_label_lobby"], "Shutting down joins.\n" ) --[[ @ 0]]
	Engine[@"lobbyjoinerrorshutdown"]() --[[ @ 0]]
	if Engine[@"lobbyclienttaskerrorshutdown"] then
		Engine[@"lobbyclienttaskerrorshutdown"]() --[[ @ 0]]
	end
	if Engine[@"lobbyhosttaskerrorshutdown"] then
		Engine[@"lobbyhosttaskerrorshutdown"]() --[[ @ 0]]
	end
	if Engine[@"getlobbynetworkmode"]() == Enum[@"lobbynetworkmode"][@"lobby_networkmode_live"] then
		Engine[@"printinfo"]( Enum[@"consolelabel_e"][@"con_label_lobby"], "Shutting down qos probes.\n" ) --[[ @ 0]]
		Engine[@"qoserrorshutdown"]( Enum[@"lobbytype"][@"lobby_type_game"] ) --[[ @ 0]]
		Engine[@"printinfo"]( Enum[@"consolelabel_e"][@"con_label_lobby"], "Shutting down advertisement.\n" ) --[[ @ 0]]
		Engine[@"advertiseerrorshutdown"]( Enum[@"lobbytype"][@"lobby_type_game"] ) --[[ @ 0]]
		Engine[@"printinfo"]( Enum[@"consolelabel_e"][@"con_label_lobby"], "Shutting down search.\n" ) --[[ @ 0]]
		Engine[@"lobbysearcherrorshutdown"]() --[[ @ 0]]
	end
	Engine[@"printinfo"]( Enum[@"consolelabel_e"][@"con_label_lobby"], "Shutting down private lobby.\n" ) --[[ @ 0]]
	Engine[@"lobbyclienterrorshutdown"]( Enum[@"lobbytype"][@"lobby_type_game"] ) --[[ @ 0]]
	Engine[@"lobbyhosterrorshutdown"]( Enum[@"lobbytype"][@"lobby_type_game"] ) --[[ @ 0]]
	Engine[@"printinfo"]( Enum[@"consolelabel_e"][@"con_label_lobby"], "Shutting down game lobby.\n" ) --[[ @ 0]]
	Engine[@"lobbyclienterrorshutdown"]( Enum[@"lobbytype"][@"lobby_type_private"] ) --[[ @ 0]]
	Engine[@"lobbyhosterrorshutdown"]( Enum[@"lobbytype"][@"lobby_type_private"] ) --[[ @ 0]]
	Engine[@"printinfo"]( Enum[@"consolelabel_e"][@"con_label_lobby"], "Clearing process queue.\n" ) --[[ @ 0]]
	Lobby.ProcessQueue.ErrorShutdown() --[[ @ 0]]
	if f7_arg0.signoutUsers ~= nil and f7_arg0.signoutUsers == true then
		for f7_local0 = 0 --[[ @ 0]], LuaDefine.MAX_CONTROLLER_COUNT - 1, 1 do
			LobbyVM.OnDWDisconnect( {
				controller = f7_local0
			} ) --[[ @ 0]]
		end
		Engine[@"signoutallusers"]() --[[ @ 0]]
	end
	Engine[@"printinfo"]( Enum[@"consolelabel_e"][@"con_label_lobby"], "Forcing UI screen.\n" ) --[[ @ 0]]
	Engine[@"forcelobbyuiscreen"]( LobbyData.GetLobbyMenuIDByName( LuaEnum.UI.MAIN ) ) --[[ @ 0]]
	Engine[@"luivm_event"]( "open_main", {} ) --[[ @ 0]]
	Engine[@"printinfo"]( Enum[@"consolelabel_e"][@"con_label_lobby"], "Lobby emergency shutdown complete.\n" ) --[[ @ 0]]
end
 --[[ @ 0]]
LobbyVM.ErrorShutdownMessage = function ( f8_arg0, f8_arg1 )
	LobbyVM.OnErrorShutdown( {
		controller = f8_arg0,
		signoutUsers = false
	} ) --[[ @ 0]]
	LuaUtils.UI_ShowErrorMessageDialog( f8_arg0, f8_arg1 ) --[[ @ 0]]
end
 --[[ @ 0]]
LobbyVM.LogGlobalData = function ()
	local f9_local0 = Engine[@"hash_30DE279ECDDDD966"] --[[ @ 0]]
	local f9_local1 = Engine[@"getprimarycontroller"]() --[[ @ 0]]
	local f9_local2 = @"hash_59E4136B4110C280" --[[ @ 0]]
	local f9_local3 = {
		[@"playlist_version"] = Engine[@"getplaylistversionnumber"](),
		[@"hash_1514AE50C5450622"] = Engine[@"getprotocolversion"](),
		ffotd_version = Engine[@"getffotdversion"]()
	} --[[ @ 0]]
	local f9_local4 = Engine[@"getddlversion"] --[[ @ 0]]
	local f9_local5 = Engine[@"getstoragefileinfo"]( Enum[@"storagefiletype"][@"storage_mp_stats_online"] ) --[[ @ 0]]
	f9_local3[@"hash_5A5F320A7654324C"] = f9_local4( f9_local5.ddlPath ) --[[ @ 0]]
	f9_local4 = Engine[@"getddlversion"] --[[ @ 0]]
	f9_local5 = Engine[@"getstoragefileinfo"]( Enum[@"storagefiletype"][@"storage_mp_loadouts"] ) --[[ @ 0]]
	f9_local3[@"hash_4445FA044E754C98"] = f9_local4( f9_local5.ddlPath ) --[[ @ 0]]
	f9_local3[@"hash_47B625C48C3B5FCC"] = Engine[@"getbuildintfield"]( Enum[@"buildintfield"][@"build_intfield_changelist"] ) --[[ @ 0]]
	f9_local3[@"build_machine"] = Engine[@"getbuildstringfield"]( Enum[@"buildstringfield"][@"build_stringfield_build_machine"] ) --[[ @ 0]]
	f9_local3[@"build_time"] = Engine[@"getbuildstringfield"]( Enum[@"buildstringfield"][@"build_stringfield_build_time"] ) --[[ @ 0]]
	f9_local3[@"build_type"] = Engine[@"getbuildstringfield"]( Enum[@"buildstringfield"][@"build_stringfield_build_type"] ) --[[ @ 0]]
	f9_local3[@"build_name"] = Engine[@"getbuildstringfield"]( Enum[@"buildstringfield"][@"build_stringfield_build_name"] ) --[[ @ 0]]
	f9_local0( f9_local1, f9_local2, f9_local3 ) --[[ @ 0]]
end
 --[[ @ 0]]
LobbyVM.OnClientAdded = function ( f10_arg0 )
	local f10_local0 = f10_arg0.lobbyModule --[[ @ 0]]
	local f10_local1 = f10_arg0.lobbyType --[[ @ 0]]
	local f10_local2 = f10_arg0.lobbyMode --[[ @ 0]]
	local f10_local3 = f10_arg0.xuid --[[ @ 0]]
	if f10_local0 == Enum[@"lobbymodule"][@"lobby_module_host"] then
		local f10_local4 = Engine[@"getmodelvalue"]( Engine[@"createmodel"]( Engine[@"getglobalmodel"](), "lobbyRoot.gameClient.isHost" ) ) --[[ @ 0]]
		if f10_local4 and f10_local4 ~= 0 then
			LuaUtils.ForceLobbyButtonUpdate() --[[ @ 0]]
		end
	end
	Lobby.Matchmaking.OnClientAdded( f10_arg0 ) --[[ @ 0]]
	Lobby.TeamSelection.OnClientAdded( f10_arg0 ) --[[ @ 0]]
	Lobby.Pregame.OnClientAdded( f10_arg0 ) --[[ @ 0]]
	Lobby.Leaderboard.OnClientAdded( f10_arg0 ) --[[ @ 0]]
	Lobby.RecentPlayers.OnClientAdded( f10_arg0 ) --[[ @ 0]]
	Engine[@"qosprobelistenerupdate"]( f10_local1 ) --[[ @ 0]]
	if f10_local0 == Enum[@"lobbymodule"][@"lobby_module_client"] and not Engine[@"islocalclient"]( f10_local3 ) and not Engine[@"isingame"]() then
		LobbyVM.PlaySound( LobbyData.Sounds.ClientsAddedToLobby, 500 ) --[[ @ 0]]
	end
	if LuaDefine.isPS4 == true and Enum[@"lobbynetworkmode"][@"lobby_networkmode_live"] == Engine[@"getlobbynetworkmode"]() and f10_local0 == Enum[@"lobbymodule"][@"lobby_module_client"] and f10_local1 == Enum[@"lobbytype"][@"lobby_type_private"] and Engine[@"islocalclient"]( f10_local3 ) and not Engine[@"isingame"]() then
		local f10_local4 = Engine[@"getcontrollerforxuid"]( f10_local3 ) --[[ @ 0]]
		if Engine[@"notifypsplusasyncmultiplay"] ~= nil then
			Engine[@"notifypsplusasyncmultiplay"]( f10_local4 ) --[[ @ 0]]
		end
	end
	local f10_local4 = Engine[@"xuidtostring"]( f10_local3 ) --[[ @ 0]]
	if LobbyVM.ClientsToRemove[f10_local4] then
		LobbyVM.ClientsToRemove[f10_local4] = nil --[[ @ 0]]
	end
	if not LobbyVM.ClientsInModule[f10_local0] then
		LobbyVM.ClientsInModule[f10_local0] = {} --[[ @ 0]]
	end
	LobbyVM.ClientsInModule[f10_local0][f10_local4] = true --[[ @ 0]]
	f10_arg0.lobbyID = Engine[@"getlobbylobbyid"]( f10_local0, f10_local1 ) --[[ @ 0]]
	Engine[@"hash_30DE279ECDDDD966"]( Engine[@"getprimarycontroller"](), @"hash_4084AA3CF21433C2", {
		[@"lobby_module"] = f10_arg0.lobbyModule,
		[@"lobby_type"] = f10_arg0.lobbyType,
		[@"lobby_mode"] = f10_arg0.lobbyMode,
		[@"xuid"] = f10_arg0.xuid
	} ) --[[ @ 0]]
end
 --[[ @ 0]]
LobbyVM.OnClientRemoved = function ( f11_arg0 )
	local f11_local0 = f11_arg0.lobbyModule --[[ @ 0]]
	local f11_local1 = f11_arg0.lobbyType --[[ @ 0]]
	local f11_local2 = f11_arg0.lobbyMode --[[ @ 0]]
	local f11_local3 = f11_arg0.xuid --[[ @ 0]]
	if f11_local0 == Enum[@"lobbymodule"][@"lobby_module_host"] then
		LuaUtils.ForceLobbyButtonUpdate() --[[ @ 0]]
	end
	Lobby.Timer.OnClientRemoved( f11_arg0 ) --[[ @ 0]]
	Lobby.Pregame.OnClientRemoved( f11_arg0 ) --[[ @ 0]]
	Lobby.Matchmaking.OnClientRemoved( f11_arg0 ) --[[ @ 0]]
	Engine[@"qosprobelistenerupdate"]( f11_local1 ) --[[ @ 0]]
	if f11_local0 == Enum[@"lobbymodule"][@"lobby_module_client"] and not Engine[@"islocalclient"]( f11_local3 ) and not Engine[@"isingame"]() then
		LobbyVM.PlaySound( LobbyData.Sounds.ClientsRemovedFromLobby, 500 ) --[[ @ 0]]
	end
	f11_arg0.lobbyID = Engine[@"getlobbylobbyid"]( f11_local0, f11_local1 ) --[[ @ 0]]
	local f11_local4 = Engine[@"xuidtostring"]( f11_local3 ) --[[ @ 0]]
	if LobbyVM.ClientsInModule[f11_local0] and LobbyVM.ClientsInModule[f11_local0][f11_local4] then
		LobbyVM.ClientsInModule[f11_local0][f11_local4] = nil --[[ @ 0]]
	end
	local f11_local5 = false --[[ @ 0]]
	for f11_local9, f11_local10 in pairs( LobbyVM.ClientsInModule ) --[[ @ 0]] do
		if f11_local10[f11_local4] then
			f11_local5 = true --[[ @ 0]]
			break
		end
	end
	if not f11_local5 then
		LobbyVM.ClientsToRemove[f11_local4] = true --[[ @ 0]]
	end
	Engine[@"hash_30DE279ECDDDD966"]( Engine[@"getprimarycontroller"](), @"hash_25D76FEC9A7AF604", {
		[@"lobby_module"] = f11_arg0.lobbyModule,
		[@"lobby_type"] = f11_arg0.lobbyType,
		[@"lobby_mode"] = f11_arg0.lobbyMode,
		[@"xuid"] = f11_arg0.xuid
	} ) --[[ @ 0]]
end
 --[[ @ 0]]
LobbyVM.OnUILevelRunningChanged = function ( f12_arg0 )
	local f12_local0 = f12_arg0.running --[[ @ 0]]
	for f12_local1 = 0 --[[ @ 0]], LuaDefine.MAX_CONTROLLER_COUNT - 1, 1 do
		Engine[@"sendclientheartbeat"]( f12_local1, Engine[@"lobbygetcontrollinglobbysession"]( Enum[@"lobbymodule"][@"lobby_module_client"] ) ) --[[ @ 0]]
	end
	if Engine[@"isdedicatedserver"]() and f12_local0 == true and (not Dvar[@"hash_2B852BA138B9853A"]:exists() or not Dvar[@"hash_2B852BA138B9853A"]:get()) then
		Lobby.Timer.SetDedicatedDelayedCMD( Lobby.Timer.LOBBY_DEDICATED_CMD.REMOVE_ALL_CLIENTS ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
LobbyVM.OnMatchChangeMap = function ( f13_arg0 )
	local f13_local0 = f13_arg0.lobbyModule --[[ @ 0]]
	local f13_local1 = f13_arg0.lobbyType --[[ @ 0]]
	local f13_local2 = f13_arg0.lobbyMode --[[ @ 0]]
	Lobby.Stats.OnMatchChangeMap( f13_arg0 ) --[[ @ 0]]
	Lobby.Matchmaking.OnMatchChangeMap( f13_arg0 ) --[[ @ 0]]
	Lobby.CharacterSelection.OnChangeMap( f13_arg0 ) --[[ @ 0]]
	local f13_local3 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f13_local3 = f13_local3:create( "lobbyRoot.selectedMapId" ) --[[ @ 0]]
	f13_local3:set( Engine[@"converttoxhash"]( f13_arg0.nextMap ) ) --[[ @ 0]]
	Engine[@"hash_30DE279ECDDDD966"]( Engine[@"getprimarycontroller"](), @"hash_393C9A4BAA822A3", {
		[@"lobby_module"] = f13_arg0.lobbyModule,
		[@"lobby_type"] = f13_arg0.lobbyType,
		[@"lobby_mode"] = f13_arg0.lobbyMode,
		[@"current_map"] = f13_arg0.currentMap,
		[@"next_map"] = f13_arg0.nextMap
	} ) --[[ @ 0]]
end
 --[[ @ 0]]
LobbyVM.OnChangePlaylist = function ( f14_arg0 )
	
end
 --[[ @ 0]]
LobbyVM.OnMatchEnd = function ( f15_arg0 )
	local f15_local0 = f15_arg0.lobbyModule --[[ @ 0]]
	local f15_local1 = f15_arg0.lobbyType --[[ @ 0]]
	local f15_local2 = f15_arg0.lobbyMode --[[ @ 0]]
	Lobby.MatchmakingAsync.OnMatchEnd( f15_arg0 ) --[[ @ 0]]
	Lobby.CP.OnMatchEnd( f15_arg0 ) --[[ @ 0]]
	Lobby.TeamSelection.OnMatchEnd( f15_arg0 ) --[[ @ 0]]
	Lobby.Timer.OnMatchEnd( f15_arg0 ) --[[ @ 0]]
	Lobby.Analytics.OnMatchEnd( f15_arg0 ) --[[ @ 0]]
	Lobby.Matchmaking.OnMatchEnd( f15_arg0 ) --[[ @ 0]]
	Lobby.Platform.OnMatchEnd( f15_arg0 ) --[[ @ 0]]
	Lobby.Debug.OnMatchEnd( f15_arg0 ) --[[ @ 0]]
	Lobby.RecentPlayers.OnMatchEnd( f15_arg0 ) --[[ @ 0]]
	Lobby.Paintjobs.OnMatchEnd( f15_arg0 ) --[[ @ 0]]
	CoDShared.UpdateQuitFlag() --[[ @ 0]]
	LuaUtils.SaveAfterMatchContractStats() --[[ @ 0]]
	LuaUtils.CycleContracts() --[[ @ 0]]
	LuaUtils.ResetToLastSelectedSpecialistIfNeededAfterMatch() --[[ @ 0]]
	LuaUtils.RefreshDoubleXPMask() --[[ @ 0]]
	LuaUtils.UploadAllLocalStatsBuffers() --[[ @ 0]]
end
 --[[ @ 0]]
LobbyVM.ShouldShowContentChangedMessage = function ( f16_arg0, f16_arg1 )
	if LobbyVM.CheckDLCBit( Engine[@"getdlcbits"](), Engine[@"getdlcbitformapname"]( Engine[@"lobbygetmap"]() ) ) then
		return true
	else
		return false
	end
end
 --[[ @ 0]]
LobbyVM.OnDisconnect = function ( f17_arg0 )
	local f17_local0 = f17_arg0.lobbyModule --[[ @ 0]]
	local f17_local1 = f17_arg0.lobbyType --[[ @ 0]]
	local f17_local2 = f17_arg0.lobbyMode --[[ @ 0]]
	local f17_local3 = f17_arg0.disconnectClientXuid --[[ @ 0]]
	local f17_local4 = f17_arg0.disconnectClient --[[ @ 0]]
	local f17_local5 = Engine[@"getprimarycontroller"]() --[[ @ 0]]
	local f17_local6 = true --[[ @ 0]]
	local f17_local7 = nil --[[ @ 0]]
	local f17_local8 = Engine[@"hash_4F9F1239CFD921FE"]( @"hash_B6154C132FDA6EE" ) --[[ @ 0]]
	local f17_local9 = Lobby.Process.Recover( f17_local5 ) --[[ @ 0]]
	if f17_local4 == Enum[@"lobbydisconnectclient"][@"lobby_disconnect_client_invalid"] then
		
	elseif f17_local4 == Enum[@"lobbydisconnectclient"][@"lobby_disconnect_client_drop"] then
		
	elseif f17_local4 == Enum[@"lobbydisconnectclient"][@"lobby_disconnect_client_nopartychat"] then
		f17_local6 = false --[[ @ 0]]
		f17_local7 = Engine[@"hash_4F9F1239CFD921FE"]( @"menu/notice" ) --[[ @ 0]]
		f17_local8 = Engine[@"hash_4F9F1239CFD921FE"]( @"hash_422BE13738744598" ) --[[ @ 0]]
		Dvar[@"partychatdisallowed"]:set( false ) --[[ @ 0]]
	elseif f17_local4 == Enum[@"lobbydisconnectclient"][@"lobby_disconnect_client_kick"] then
		f17_local6 = false --[[ @ 0]]
		f17_local7 = Engine[@"hash_4F9F1239CFD921FE"]( @"hash_18F4D42673CB46CD" ) --[[ @ 0]]
		f17_local8 = Engine[@"hash_4F9F1239CFD921FE"]( @"hash_38188B874FA9DFE4" ) --[[ @ 0]]
		if f17_local1 == Enum[@"lobbytype"][@"lobby_type_private"] and Engine[@"isingame"]() == true then
			f17_local9 = Lobby.Process.HostLeftNoMigrationCreatePrivateLobby( f17_local5, f17_local2, Engine[@"getlobbymaxclients"]( Enum[@"lobbymodule"][@"lobby_module_client"], f17_local1 ) ) --[[ @ 0]]
		end
	elseif f17_local4 == Enum[@"lobbydisconnectclient"][@"lobby_disconnect_client_baddlc"] then
		if LobbyVM.ShouldShowContentChangedMessage( f17_local5, f17_local1 ) then
			Engine[@"comerror"]( Enum[@"errorcode"][@"error_drop"], Engine[@"hash_4F9F1239CFD921FE"]( @"hash_DDDB3A5B7CE38F1" ) ) --[[ @ 0]]
		else
			Engine[@"comerror"]( Enum[@"errorcode"][@"error_drop"], Engine[@"hash_4F9F1239CFD921FE"]( @"platform/missingmap" ) ) --[[ @ 0]]
		end
	elseif f17_local4 == Enum[@"lobbydisconnectclient"][@"lobby_disconnect_client_hostreload"] then
		if Engine[@"islobbyhost"]( Enum[@"lobbytype"][@"lobby_type_private"] ) and not Engine[@"islobbyhost"]( Enum[@"lobbytype"][@"lobby_type_game"] ) then
			Lobby.ProcessQueue.AddToQueue( "ReloadGameLobby", Lobby.ProcessNavigate.ReloadGameLobby( f17_local5, math.random( Engine[@"getdvarint"]( "arena_lobbyReloadSearchDelayMin" ), Engine[@"getdvarint"]( "arena_lobbyReloadSearchDelayMax" ) ) ) ) --[[ @ 0]]
		end
		return 
	elseif f17_local4 == Enum[@"lobbydisconnectclient"][@"hash_449C6D6AA15230A8"] then
		if Engine[@"islobbyhost"]( Enum[@"lobbytype"][@"lobby_type_private"] ) and not Engine[@"islobbyhost"]( Enum[@"lobbytype"][@"lobby_type_game"] ) then
			local f17_local10 = LobbyData.GetCurrentMenuTarget() --[[ @ 0]]
			Lobby.ProcessQueue.AddToQueue( "LeaveDedicatedGameLobby", Lobby.ProcessNavigate.LeaveGameLobbyAsyncMatchmaking( f17_local5, f17_local10, f17_local10, LuaEnum.LEAVE_WITH_PARTY.WITH ) ) --[[ @ 0]]
		end
		return 
	elseif f17_local4 == Enum[@"lobbydisconnectclient"][@"hash_1DF49978C783A5BB"] then
		f17_local6 = false --[[ @ 0]]
		f17_local7 = Engine[@"hash_4F9F1239CFD921FE"]( @"hash_377FA7015AB6DB6F" ) --[[ @ 0]]
		f17_local8 = Engine[@"hash_4F9F1239CFD921FE"]( @"hash_7AE260610DD3C172" ) --[[ @ 0]]
		if f17_local1 == Enum[@"lobbytype"][@"lobby_type_private"] and Engine[@"isingame"]() == true then
			f17_local9 = Lobby.Process.HostLeftNoMigrationCreatePrivateLobby( f17_local5, f17_local2, Engine[@"getlobbymaxclients"]( Enum[@"lobbymodule"][@"lobby_module_client"], f17_local1 ) ) --[[ @ 0]]
		end
	elseif f17_local4 == Enum[@"lobbydisconnectclient"][@"hash_3B901B6DF0CD7657"] then
		f17_local6 = false --[[ @ 0]]
		f17_local7 = Engine[@"hash_4F9F1239CFD921FE"]( @"hash_18F4D42673CB46CD" ) --[[ @ 0]]
		f17_local8 = Engine[@"hash_4F9F1239CFD921FE"]( @"menu/korea_15plus_blocked_gamemode" ) --[[ @ 0]]
		if f17_local1 == Enum[@"lobbytype"][@"lobby_type_private"] and Engine[@"isingame"]() == true then
			f17_local9 = Lobby.Process.HostLeftNoMigrationCreatePrivateLobby( f17_local5, f17_local2, Engine[@"getlobbymaxclients"]( Enum[@"lobbymodule"][@"lobby_module_client"], f17_local1 ) ) --[[ @ 0]]
		end
	elseif f17_local4 == Enum[@"lobbydisconnectclient"][@"hash_4A1580BBC7A114CC"] then
		f17_local6 = false --[[ @ 0]]
		f17_local7 = Engine[@"hash_4F9F1239CFD921FE"]( @"hash_18F4D42673CB46CD" ) --[[ @ 0]]
		f17_local8 = Engine[@"hash_4F9F1239CFD921FE"]( @"hash_7AE260610DD3C172" ) --[[ @ 0]]
		if f17_local1 == Enum[@"lobbytype"][@"lobby_type_private"] and Engine[@"isingame"]() == true then
			f17_local9 = Lobby.Process.HostLeftNoMigrationCreatePrivateLobby( f17_local5, f17_local2, Engine[@"getlobbymaxclients"]( Enum[@"lobbymodule"][@"lobby_module_client"], f17_local1 ) ) --[[ @ 0]]
		end
	end
	if f17_local6 == true then
		f17_local9.tail.success = Lobby.Actions.ErrorPopupMsg( f17_local8, f17_local7 ) --[[ @ 0]]
	else
		f17_local9.tail.success = Lobby.Actions.WarningPopupMsg( f17_local8, f17_local7 ) --[[ @ 0]]
	end
	Lobby.ProcessQueue.AddToQueue( "DisconnectFromHost", f17_local9 ) --[[ @ 0]]
end
 --[[ @ 0]]
LobbyVM.ComErrorCodeToString = function ( f18_arg0 )
	if f18_arg0 == Enum[@"errorcode"][@"error_none"] then
		return "ERR_NONE"
	elseif f18_arg0 == Enum[@"errorcode"][@"error_fatal"] then
		return "ERR_FATAL"
	elseif f18_arg0 == Enum[@"errorcode"][@"error_drop"] then
		return "ERR_DROP"
	elseif f18_arg0 == Enum[@"errorcode"][@"error_from_startup"] then
		return "ERR_FROM_STARTUP"
	elseif f18_arg0 == Enum[@"errorcode"][@"error_serverdisconnect"] then
		return "ERR_SERVERDISCONNECT"
	elseif f18_arg0 == Enum[@"errorcode"][@"error_disconnect"] then
		return "ERR_DISCONNECT"
	elseif f18_arg0 == Enum[@"errorcode"][@"error_script"] then
		return "ERR_SCRIPT"
	elseif f18_arg0 == Enum[@"errorcode"][@"error_script_drop"] then
		return "ERR_SCRIPT_DROP"
	elseif f18_arg0 == Enum[@"errorcode"][@"error_localization"] then
		return "ERR_LOCALIZATION"
	elseif f18_arg0 == Enum[@"errorcode"][@"error_ui"] then
		return "ERR_UI"
	elseif f18_arg0 == Enum[@"errorcode"][@"error_lua"] then
		return "ERR_LUA"
	elseif f18_arg0 == Enum[@"errorcode"][@"error_softrestart"] then
		return "ERR_SOFTRESTART"
	elseif f18_arg0 == Enum[@"errorcode"][@"error_softrestart_keepdw"] then
		return "ERR_SOFTRESTART_KEEPDW"
	elseif f18_arg0 == Enum[@"errorcode"][@"error_softrestart_silent"] then
		return "ERR_SOFTRESTART_SILENT"
	else
		return tostring( f18_arg0 )
	end
end
 --[[ @ 0]]
LobbyVM.ClientsToRemove = {} --[[ @ 0]]
LobbyVM.ClientsInModule = {} --[[ @ 0]]
LobbyVM.OnUILoad = function ( f19_arg0 )
	local f19_local0 = f19_arg0.frontend --[[ @ 0]]
	local f19_local1 = Enum[@"hash_C0AB9543C5C440B"][@"hash_6755065F5A0B7FB0"] --[[ @ 0]]
	if f19_local0 == false then
		f19_local1 = Enum[@"hash_C0AB9543C5C440B"][@"hash_6FA6FA0C00230DEE"] --[[ @ 0]]
	elseif false == Engine[@"isdedicatedserver"]() then
		local f19_local2 = LobbyData.GetCurrentMenuTarget() --[[ @ 0]]
		local f19_local3 = LobbyData.GetLobbyMenuByName( LuaEnum.UI.DIRECTOR_ONLINE_WZ_PUBLIC ) --[[ @ 0]]
		if f19_local2[@"id"] == f19_local3[@"id"] then
			Engine[@"setlobbymaxclients"]( Enum[@"lobbytype"][@"lobby_type_private"], f19_local3[@"maxclients"] ) --[[ @ 0]]
			Engine[@"exec"]( Engine[@"getprimarycontroller"](), "pubSemaphoreFetch 0" ) --[[ @ 0]]
		end
		local f19_local4 = 1200000 --[[ @ 0]]
		if Dvar[@"hash_2A58B3AE6DE7CC7"]:exists() then
			f19_local4 = Dvar[@"hash_2A58B3AE6DE7CC7"]:get() * 60000 --[[ @ 0]]
		end
		local f19_local5 = Lobby.MatchmakingAsync.GetLocalUserInfo( Engine[@"getprimarycontroller"]() ) --[[ @ 0]]
		if f19_local5 and f19_local5.xuid ~= LuaDefine.INVALID_XUID_X64 and f19_local4 <= Engine[@"milliseconds"]() - f19_local5.lastDCQoSSuccess then
			f19_local5.completedDCQoS = false --[[ @ 0]]
			f19_local5.hasInitiateDCQoS = false --[[ @ 0]]
		end
	end
	local f19_local2 = 0 --[[ @ 0]]
	local f19_local3 = Engine[@"getmaxlocalcontrollers"]() - 1 --[[ @ 0]]
	for f19_local4 = f19_local2 --[[ @ 0]], f19_local3, 1 do
		if Engine[@"iscontrollerbeingused"]( f19_local4 ) then
			Engine[@"hash_61D2E041DAB54785"]( f19_local4, Enum[@"lobbytype"][@"lobby_type_private"], f19_local1 ) --[[ @ 0]]
		end
	end
	for f19_local7, f19_local8 in pairs( LobbyVM.ClientsToRemove ) --[[ @ 0]] do
		Engine[@"unsubscribeandfreemodel"]( Engine[@"getmodel"]( Engine[@"getglobalmodel"](), "LobbyClients." .. f19_local7 ) ) --[[ @ 0]]
	end
	LobbyVM.ClientsToRemove = {} --[[ @ 0]]
end
 --[[ @ 0]]
LobbyVM.TestChangeWhereIAm = function ( f20_arg0 )
	Engine[@"hash_61D2E041DAB54785"]( 0, Enum[@"lobbytype"][@"lobby_type_private"], f20_arg0.testNumber ) --[[ @ 0]]
end
 --[[ @ 0]]
LobbyVM.OnComError = function ( f21_arg0 )
	Lobby.Platform.OnComError( f21_arg0 ) --[[ @ 0]]
	if f21_arg0.isInCleanup then
		LobbyVM.OnComErrorCleanup( f21_arg0 ) --[[ @ 0]]
		return 
	end
	local f21_local0 = f21_arg0.controller --[[ @ 0]]
	local f21_local1 = f21_arg0.errorCode --[[ @ 0]]
	local f21_local2 = f21_arg0.errorMsg --[[ @ 0]]
	local f21_local3 = f21_arg0.signoutUsers --[[ @ 0]]
	local f21_local4 = f21_arg0.comErrorInProgress --[[ @ 0]]
	Engine[@"printerror"]( Enum[@"consolelabel_e"][@"con_label_default"], "COM ERROR - errorCode: " .. LobbyVM.ComErrorCodeToString( f21_local1 ) .. ", errorMsg: " .. f21_local2 .. ".\n" ) --[[ @ 0]]
	Engine[@"setmodelvalue"]( Engine[@"createmodel"]( Engine[@"getglobalmodel"](), "lobbyRoot.hideMenusForGameStart" ), 0 ) --[[ @ 0]]
	if f21_local1 == Enum[@"errorcode"][@"error_softrestart"] or f21_local1 == Enum[@"errorcode"][@"error_softrestart_keepdw"] or f21_local1 == Enum[@"errorcode"][@"error_softrestart_silent"] then
		return 
	elseif Engine[@"getlobbynetworkmode"]() == Enum[@"lobbynetworkmode"][@"lobby_networkmode_live"] and not Engine[@"issignedintodemonware"]( f21_local0 ) then
		LobbyVM.OnErrorShutdown( f21_arg0 ) --[[ @ 0]]
	end
	if f21_local1 == Enum[@"errorcode"][@"error_ui"] or f21_local1 == Enum[@"errorcode"][@"error_disconnect"] or f21_local1 == Enum[@"errorcode"][@"error_fatal"] or f21_local1 == Enum[@"errorcode"][@"error_drop"] or f21_local1 == Enum[@"errorcode"][@"error_softrestart_keepdw"] or f21_local1 == Enum[@"errorcode"][@"error_softrestart_silent"] then
		return 
	elseif f21_local1 == Enum[@"errorcode"][@"error_none"] or f21_local1 == Enum[@"errorcode"][@"error_lua"] or f21_local1 == Enum[@"errorcode"][@"error_from_startup"] or f21_local1 == Enum[@"errorcode"][@"error_localization"] or f21_local1 == Enum[@"errorcode"][@"error_serverdisconnect"] then
		LuaUtils.UI_ShowErrorMessageDialog( f21_local0, f21_local2 ) --[[ @ 0]]
		return 
	elseif f21_local1 == Enum[@"errorcode"][@"error_script"] or f21_local1 == Enum[@"errorcode"][@"error_script_drop"] then
		LuaUtils.UI_ShowErrorMessageDialog( f21_local0, f21_local2 ) --[[ @ 0]]
		Lobby.ProcessQueue.AddToQueue( "ErrorNonFatal", Lobby.Process.NonFatalError( f21_local2 ) ) --[[ @ 0]]
		return 
	end
	error( "LobbyVM.OnError - Unhandled COM_ERROR: " .. LobbyVM.ComErrorCodeToString( f21_local1 ) .. ", Message: " .. f21_local2 .. ".\n" ) --[[ @ 0]]
end
 --[[ @ 0]]
LobbyVM.ShutdownCleanupMP = function ( f22_arg0 )
	
end
 --[[ @ 0]]
LobbyVM.ShutdownCleanupZM = function ( f23_arg0 )
	
end
 --[[ @ 0]]
LobbyVM.ShutdownCleanupCP = function ( f24_arg0 )
	
end
 --[[ @ 0]]
LobbyVM.ShutdownCleanup = function ( f25_arg0 )
	LobbyVM.ShutdownCleanupCP( f25_arg0 ) --[[ @ 0]]
	LobbyVM.ShutdownCleanupMP( f25_arg0 ) --[[ @ 0]]
	LobbyVM.ShutdownCleanupZM( f25_arg0 ) --[[ @ 0]]
end
 --[[ @ 0]]
LobbyVM.OnComErrorCleanup = function ( f26_arg0 )
	local f26_local0 = f26_arg0.controller --[[ @ 0]]
	local f26_local1 = f26_arg0.errorCode --[[ @ 0]]
	local f26_local2 = f26_arg0.errorMsg --[[ @ 0]]
	local f26_local3 = f26_arg0.errorShutdown --[[ @ 0]]
	Engine[@"lobbylaunchclear"]() --[[ @ 0]]
	if f26_local3 ~= nil and f26_local3 == true then
		LobbyVM.OnErrorShutdown( f26_arg0 ) --[[ @ 0]]
		LobbyVM.ShutdownCleanup( f26_arg0 ) --[[ @ 0]]
	end
	if f26_local1 == Enum[@"errorcode"][@"error_fatal"] then
		LuaUtils.UI_ShowErrorMessageDialog( f26_local0, f26_local2 ) --[[ @ 0]]
		local f26_local4 = Lobby.Process.Recover( f26_local0 ) --[[ @ 0]]
		if f26_local4 ~= nil then
			Lobby.ProcessQueue.AddToQueue( "ErrorFatal", f26_local4 ) --[[ @ 0]]
		end
	elseif f26_local1 == Enum[@"errorcode"][@"error_drop"] then
		local f26_local4 = Lobby.Process.Recover( f26_local0 ) --[[ @ 0]]
		if f26_local4 then
			local f26_local5 = Lobby.Actions.ErrorPopupMsg( f26_local2 ) --[[ @ 0]]
			Lobby.Process.AddActions( f26_local4.tail, f26_local5, f26_local5, f26_local5 ) --[[ @ 0]]
			Lobby.ProcessQueue.AddToQueue( "ERROR_DROP", f26_local4 ) --[[ @ 0]]
		else
			LuaUtils.UI_ShowErrorMessageDialog( f26_local0, f26_local2 ) --[[ @ 0]]
		end
	elseif f26_local1 == 1026 then
		Lobby.ProcessQueue.ClearQueue() --[[ @ 0]]
		LuaUtils.UI_ShowErrorMessageDialog( f26_local0, f26_local2 ) --[[ @ 0]]
	elseif f26_local1 == 2050 then
		if string.len( f26_local2 ) > 0 then
			LuaUtils.UI_ShowErrorMessageDialog( f26_local0, f26_local2 ) --[[ @ 0]]
		end
	elseif f26_local1 == 4098 and string.len( f26_local2 ) > 0 then
		LuaUtils.UI_ShowInfoMessageDialog( f26_local0, f26_local2 ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
LobbyVM.OnPreExecFFOTD = function ()
	Lobby.Platform.OnPreExecFFOTD() --[[ @ 0]]
	local f27_local0 = {
		controller = Engine[@"getprimarycontroller"](),
		signoutUsers = false
	} --[[ @ 0]]
	local f27_local1 = Engine[@"createmodel"]( Engine[@"getglobalmodel"](), "lobbyRoot.FFOTDShutdown" ) --[[ @ 0]]
	Engine[@"setmodelvalue"]( f27_local1, true ) --[[ @ 0]]
	LobbyVM.OnErrorShutdown( f27_local0 ) --[[ @ 0]]
	Engine[@"setmodelvalue"]( f27_local1, false ) --[[ @ 0]]
end
 --[[ @ 0]]
LobbyVM.OnDWDisconnect = function ( f28_arg0 )
	local f28_local0 = f28_arg0.controller --[[ @ 0]]
	if not Engine[@"isdedicatedserver"]() then
		if f28_local0 == Engine[@"getprimarycontroller"]() then
			Engine[@"lobbyonlinecancel"]( true ) --[[ @ 0]]
		end
		Lobby.MatchmakingAsync.LogOutLocalUserInfo( f28_local0 ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
LobbyVM.OnDemoEndFinished = function ( f29_arg0 )
	if Lobby.Join.autoJoin.data ~= nil then
		local f29_local0 = nil --[[ @ 0]]
		if Lobby.Join.autoJoin.data.platform == true then
			if Lobby.Platform.PlatformSessionOrbisEnabled() then
				if Lobby.Join.autoJoin.data.playTogether == true then
					recoverProcess = Lobby.Process.Recover( controller, LobbyData.GetLobbyMenuIDByName( LuaEnum.UI.DIRECTOR_LAN ) ) --[[ @ 0]]
					f29_local0 = Lobby.Platform.PS4ProcessPlayTogetherEvent( Lobby.Join.autoJoin.data.platformData ) --[[ @ 0]]
				else
					f29_local0 = Lobby.Platform.InGamePlatformJoinOrbis( Lobby.Join.autoJoin.data.platformData ) --[[ @ 0]]
				end
			elseif Lobby.Platform.PlatformSessionDurangoEnabled() then
				f29_local0 = Lobby.Platform.InGamePlatformJoinDurango( Lobby.Join.autoJoin.data.platformData ) --[[ @ 0]]
			end
		else
			f29_local0 = Lobby.Join.GetJoinProcess( Lobby.Join.autoJoin.data ) --[[ @ 0]]
		end
		if f29_local0 ~= nil then
			Lobby.ProcessQueue.AddToQueue( "DemoEnd", f29_local0 ) --[[ @ 0]]
		end
		Lobby.Join.autoJoin.data = nil --[[ @ 0]]
	end
end
 --[[ @ 0]]
LobbyVM.OnLobbyHostLeftNoMigration = function ( f30_arg0 )
	local f30_local0 = f30_arg0.controller --[[ @ 0]]
	local f30_local1 = f30_arg0.lobbyType --[[ @ 0]]
	local f30_local2 = f30_arg0.lobbyMainMode --[[ @ 0]]
	local f30_local3 = f30_arg0.lobbyNetworkMode --[[ @ 0]]
	local f30_local4 = f30_arg0.maxClients --[[ @ 0]]
	local f30_local5 = f30_arg0.isGameLobbyActive --[[ @ 0]]
	local f30_local6 = f30_arg0.isPrivateHost --[[ @ 0]]
	if not LobbyVM.CanClientLaunch( false ) then
		return 
	elseif Engine[@"islobbyinrecovery"]( f30_local1 ) then
		return 
	elseif f30_local5 == true and f30_local1 == Enum[@"lobbytype"][@"lobby_type_game"] then
		if Lobby.ProcessQueue.GetCurrentRunningProcessName() ~= "HostLeftNoMigrationGame" then
			local f30_local7 = Lobby.Process.Recover( f30_local0 ) --[[ @ 0]]
			if Engine[@"getlobbyuiscreen"]() == LobbyData.GetLobbyMenuIDByName( LuaEnum.UI.DIRECTOR_ONLINE_WZ_PUBLIC ) then
				local f30_local8 = LobbyData.GetLobbyMenuByName( LuaEnum.UI.DIRECTOR_ONLINE_WZ_PUBLIC ) --[[ @ 0]]
				f30_local7 = Lobby.ProcessNavigate.LeaveGameLobbyAsyncMatchmaking( f30_local0, f30_local8, f30_local8, LuaEnum.LEAVE_WITH_PARTY.WITH, true ) --[[ @ 0]]
			end
			Lobby.ProcessQueue.AddToQueue( "HostLeftNoMigrationGame", f30_local7 ) --[[ @ 0]]
		end
	else
		local f30_local7 = LobbyData.GetLobbyNav() --[[ @ 0]]
		if f30_local1 == Enum[@"lobbytype"][@"lobby_type_private"] and f30_local5 == false and (f30_local7 == LobbyData.GetLobbyMenuIDByName( LuaEnum.UI.DIRECTOR_ONLINE_MP_PUBLIC ) or f30_local7 == LobbyData.GetLobbyMenuIDByName( LuaEnum.UI.DIRECTOR_ONLINE_ZM_PUBLIC )) then
			if Lobby.ProcessQueue.GetCurrentRunningProcessName() ~= "HostLeftNoMigrationSearch" then
				Lobby.ProcessQueue.AddToQueue( "HostLeftNoMigrationSearch", Lobby.Process.Recover( f30_local0 ) ) --[[ @ 0]]
			end
		else
			Lobby.ProcessQueue.AddToQueue( "HostLeftNoMigration", Lobby.Process.HostLeftNoMigrationCreatePrivateLobby( f30_local0, f30_local2, f30_local4 ) ) --[[ @ 0]]
		end
	end
	Engine[@"playsound"]( LobbyData.Sounds.LobbyClosed ) --[[ @ 0]]
	Engine[@"hash_30DE279ECDDDD966"]( f30_local0, @"hash_37ED422C1906DDFB", {
		[@"controller"] = f30_arg0.controller,
		[@"lobby_module"] = f30_arg0.lobbyModule,
		[@"hash_1A553941A735DE81"] = f30_arg0.lobbyMainMode,
		[@"hash_5862D3F1B0F11978"] = f30_arg0.lobbyNetworkMode,
		[@"max_clients"] = f30_arg0.maxClients,
		[@"hash_46B8AE8B89BF06C2"] = f30_arg0.isGameLobbyActive,
		[@"hash_4B3088C31338F710"] = f30_arg0.isPrivateHost
	} ) --[[ @ 0]]
end
 --[[ @ 0]]
LobbyVM.OnLobbyHostLeftInGameMigrateFinished = function ( f31_arg0 )
	local f31_local0 = f31_arg0.controller --[[ @ 0]]
	local f31_local1 = Lobby.Process.Recover( f31_local0 ) --[[ @ 0]]
	if Lobby.Join.autoJoin.data ~= nil then
		local f31_local2 = nil --[[ @ 0]]
		if Lobby.Join.autoJoin.data.platform == true then
			if Lobby.Platform.PlatformSessionOrbisEnabled() then
				if Lobby.Join.autoJoin.data.playTogether == true then
					f31_local1 = Lobby.Process.Recover( f31_local0, LobbyData.GetLobbyMenuIDByName( LuaEnum.UI.DIRECTOR_LAN ) ) --[[ @ 0]]
					f31_local2 = Lobby.Platform.PS4ProcessPlayTogetherEvent( Lobby.Join.autoJoin.data.platformData ) --[[ @ 0]]
				else
					f31_local2 = Lobby.Platform.InGamePlatformJoinOrbis( Lobby.Join.autoJoin.data.platformData ) --[[ @ 0]]
				end
			elseif Lobby.Platform.PlatformSessionDurangoEnabled() then
				f31_local2 = Lobby.Platform.InGamePlatformJoinDurango( Lobby.Join.autoJoin.data.platformData ) --[[ @ 0]]
			end
		else
			f31_local2 = Lobby.Join.GetJoinProcess( Lobby.Join.autoJoin.data ) --[[ @ 0]]
		end
		if f31_local2 ~= nil then
			Lobby.Process.AppendProcess( f31_local1, f31_local2 ) --[[ @ 0]]
		end
		Lobby.Join.autoJoin.data = nil --[[ @ 0]]
	end
	Lobby.ProcessQueue.AddToQueue( "LobbyHostLeft_InGameMigrateFinished", f31_local1 ) --[[ @ 0]]
	Engine[@"playsound"]( LobbyData.Sounds.LobbyClosed ) --[[ @ 0]]
	Engine[@"hash_30DE279ECDDDD966"]( f31_local0, @"hash_2E50E3FBE0A7A1C6", {
		[@"controller"] = f31_arg0.controller
	} ) --[[ @ 0]]
end
 --[[ @ 0]]
LobbyVM.OnLobbyHostLeftMigrateFinished = function ( f32_arg0 )
	local f32_local0 = f32_arg0.controller --[[ @ 0]]
	local f32_local1 = f32_arg0.lobbyType --[[ @ 0]]
	local f32_local2 = Engine[@"islobbyactive"]( Enum[@"lobbymodule"][@"lobby_module_client"], Enum[@"lobbytype"][@"lobby_type_game"] ) --[[ @ 0]]
	local f32_local3 = false --[[ @ 0]]
	local f32_local4 = LobbyData.GetCurrentMenuTarget() --[[ @ 0]]
	if f32_local1 == Enum[@"lobbytype"][@"lobby_type_private"] and f32_local2 == false and (f32_local4[@"id"] == LobbyData.GetLobbyMenuIDByName( LuaEnum.UI.DIRECTOR_ONLINE_MP_PUBLIC ) or f32_local4[@"id"] == LobbyData.GetLobbyMenuIDByName( LuaEnum.UI.DIRECTOR_ONLINE_ZM_PUBLIC ) or f32_local4[@"id"] == LobbyData.GetLobbyMenuIDByName( LuaEnum.UI.DIRECTOR_ONLINE_MP_ARENA_MATCHMAKING )) then
		f32_local3 = true --[[ @ 0]]
	end
	if f32_local3 == true then
		local f32_local5, f32_local6 = Lobby.Process.GetBackFunc( f32_local4 ) --[[ @ 0]]
		Lobby.ProcessQueue.AddToQueue( "LobbyMigrationFinished", f32_local6( f32_local0, f32_local4, f32_local5, LuaEnum.LEAVE_WITH_PARTY.WITH ) ) --[[ @ 0]]
	end
	if f32_local1 == Enum[@"lobbytype"][@"lobby_type_private"] then
		Engine[@"luivm_event"]( "open_toaster_popup", {
			toastType = "new_host"
		} ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
LobbyVM.OnLobbyClientLeftEvent = function ( f33_arg0 )
	local f33_local0 = f33_arg0.controller --[[ @ 0]]
	if not f33_arg0.withParty then
		local f33_local1 = LuaEnum.LEAVE_WITH_PARTY.WITHOUT --[[ @ 0]]
	end
	local f33_local2 = {} --[[ @ 0]]
	if LobbyData.GetLobbyMenuIDByName( LuaEnum.UI.DIRECTOR_ONLINE_WZ_PUBLIC ) == Engine[@"getlobbyuiscreen"]() then
		local f33_local3 = LobbyData.GetLobbyMenuByName( LuaEnum.UI.DIRECTOR_ONLINE_WZ_PUBLIC ) --[[ @ 0]]
		f33_local2 = Lobby.ProcessNavigate.LeaveGameLobbyAsyncMatchmaking( f33_local0, f33_local3, f33_local3, LuaEnum.LEAVE_WITH_PARTY.WITH, true ) --[[ @ 0]]
	else
		f33_local2 = Lobby.Process.Recover( f33_local0 ) --[[ @ 0]]
	end
	if Lobby.Join.autoJoin.data ~= nil then
		local f33_local3 = nil --[[ @ 0]]
		if Lobby.Join.autoJoin.data.platform == true then
			if Lobby.Platform.PlatformSessionOrbisEnabled() then
				if Lobby.Join.autoJoin.data.playTogether == true then
					f33_local2 = Lobby.Process.Recover( f33_local0, LobbyData.GetLobbyMenuIDByName( LuaEnum.UI.DIRECTOR_ONLINE ) ) --[[ @ 0]]
					f33_local3 = Lobby.Platform.PS4ProcessPlayTogetherEvent( Lobby.Join.autoJoin.data.platformData ) --[[ @ 0]]
				else
					f33_local3 = Lobby.Platform.InGamePlatformJoinOrbis( Lobby.Join.autoJoin.data.platformData ) --[[ @ 0]]
				end
			elseif Lobby.Platform.PlatformSessionDurangoEnabled() then
				f33_local3 = Lobby.Platform.InGamePlatformJoinDurango( Lobby.Join.autoJoin.data.platformData ) --[[ @ 0]]
			end
		else
			f33_local3 = Lobby.Join.GetJoinProcess( Lobby.Join.autoJoin.data ) --[[ @ 0]]
		end
		if f33_local3 ~= nil then
			Lobby.Process.AppendProcess( f33_local2, f33_local3 ) --[[ @ 0]]
		end
		Lobby.Join.autoJoin.data = nil --[[ @ 0]]
	end
	Lobby.ProcessQueue.AddToQueue( "LobbyClientLeft", f33_local2 ) --[[ @ 0]]
end
 --[[ @ 0]]
LobbyVM.OnDevmap = function ( f34_arg0 )
	Lobby.ProcessQueue.AddToQueue( "Devmap", Lobby.Process.Devmap( f34_arg0.controller, f34_arg0.mainMode, f34_arg0.mapname, f34_arg0.gametype ) ) --[[ @ 0]]
end
 --[[ @ 0]]
LobbyVM.OnDevmapClient = function ( f35_arg0 )
	Lobby.ProcessQueue.AddToQueue( "DevmapClient", Lobby.Process.DevmapClient( f35_arg0.controller ) ) --[[ @ 0]]
end
 --[[ @ 0]]
LobbyVM.OnNetworkModeChanged = function ( f36_arg0 )
	
end
 --[[ @ 0]]
LobbyVM.OnGoForward = function ( f37_arg0 )
	if Lobby.Launch.IsHostLaunching() then
		return 
	end
	local f37_local0 = f37_arg0.controller --[[ @ 0]]
	local f37_local1 = f37_arg0.navToMenu --[[ @ 0]]
	local f37_local2 = f37_arg0.withParty --[[ @ 0]]
	local f37_local3 = f37_arg0.disbandParty --[[ @ 0]]
	local f37_local4 = LobbyData.GetLobbyMenuByID( LobbyData.GetLobbyNav() ) --[[ @ 0]]
	local f37_local5 = LobbyData.GetLobbyMenuByName( f37_local1 ) --[[ @ 0]]
	if f37_local0 == nil then
		f37_local0 = Engine[@"getprimarycontroller"]() --[[ @ 0]]
	end
	if f37_local4 == nil then
		error( "LobbyVM: No menu called '" .. currentMenu .. "' found." ) --[[ @ 0]]
	end
	if f37_local5 == nil then
		error( "LobbyVM: No menu called '" .. f37_local1 .. "' found." ) --[[ @ 0]]
	end
	local f37_local6 = Lobby.Process.GetForwardFunc( f37_local4, f37_local5 ) --[[ @ 0]]
	if f37_local6 == nil then
		error( "LobbyVM: No forward process function found to move from '" .. f37_local4[@"name"] .. "' to '" .. f37_local1 .. "'." ) --[[ @ 0]]
	end
	local f37_local7 = f37_local6( f37_local0, f37_local4, f37_local5, f37_arg0 ) --[[ @ 0]]
	if f37_local7 ~= nil and f37_local3 == true then
		if Engine[@"islobbyhost"]( Enum[@"lobbytype"][@"lobby_type_private"] ) == true then
			local f37_local8 = Lobby.Process.ManagePartyLeave( f37_local0 ) --[[ @ 0]]
			Lobby.Process.AppendProcess( f37_local8, f37_local7 ) --[[ @ 0]]
			Lobby.ProcessQueue.AddToQueue( "GoForward from '" .. f37_local4[@"name"] .. "' menu to '" .. f37_local5[@"name"] .. "' menu AND ManagePartyLeave", f37_local8 ) --[[ @ 0]]
		else
			local f37_local8 = Lobby.Process.ReloadPrivateLobby( f37_local0, Engine[@"getlobbynetworkmode"]() ) --[[ @ 0]]
			Lobby.Process.AppendProcess( f37_local8, f37_local7 ) --[[ @ 0]]
			Lobby.ProcessQueue.AddToQueue( "GoForward from '" .. f37_local4[@"name"] .. "' menu to '" .. f37_local5[@"name"] .. "' menu AND PartyMemberLeave", f37_local8 ) --[[ @ 0]]
		end
		return 
	end
	Lobby.ProcessQueue.AddToQueue( "GoForward from '" .. f37_local4[@"name"] .. "' menu to '" .. f37_local5[@"name"] .. "' menu.", f37_local7 ) --[[ @ 0]]
end
 --[[ @ 0]]
LobbyVM.OnGoBack = function ( f38_arg0 )
	if Lobby.Launch.IsHostLaunching() then
		return 
	end
	local f38_local0 = Engine[@"getprimarycontroller"]() --[[ @ 0]]
	local f38_local1 = f38_arg0.withParty --[[ @ 0]]
	local f38_local2 = LobbyData.GetLobbyMenuByID( LobbyData.GetLobbyNav() ) --[[ @ 0]]
	if f38_local2 == nil then
		error( "LobbyVM: No menu called '" .. currentMenu .. "' found." ) --[[ @ 0]]
	end
	local f38_local3, f38_local4 = Lobby.Process.GetBackFunc( f38_local2 ) --[[ @ 0]]
	if f38_local3 == nil or f38_local4 == nil then
		error( "LobbyVM: No back process function found for '" .. currentMenu( "'." ) ) --[[ @ 0]]
	end
	Lobby.ProcessQueue.AddToQueue( "GoBackFrom" .. f38_local2[@"name"], f38_local4( f38_local0, f38_local2, f38_local3, f38_local1 ) ) --[[ @ 0]]
end
 --[[ @ 0]]
LobbyVM.OnManagePartyLeave = function ( f39_arg0 )
	if Lobby.Launch.IsHostLaunching() then
		return 
	end
	local f39_local0 = f39_arg0.controller --[[ @ 0]]
	if Engine[@"islobbyhost"]( Enum[@"lobbytype"][@"lobby_type_private"] ) == true then
		Lobby.ProcessQueue.AddToQueue( "ManagePartyLeave", Lobby.Process.ManagePartyLeave( f39_local0 ) ) --[[ @ 0]]
	else
		Lobby.ProcessQueue.AddToQueue( "PartyMemberLeave", Lobby.Process.ReloadPrivateLobby( f39_local0, Engine[@"getlobbynetworkmode"]() ) ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
LobbyVM.OnCreateDedicatedLANLobby = function ()
	local f40_local0 = LuaEnum.UI.DIRECTOR_LAN_MP --[[ @ 0]]
	if Dvar[@"hash_6A56A9C383009025"]:exists() and Dvar[@"hash_6A56A9C383009025"]:get() == "wz" then
		f40_local0 = LuaEnum.UI.DIRECTOR_LAN_WZ --[[ @ 0]]
	end
	Lobby.ProcessQueue.AddToQueue( "CreateDedicatedLANLobby", Lobby.Process.CreateDedicatedLANLobby( 0, LobbyData.GetLobbyMenuByName( f40_local0 ) ) ) --[[ @ 0]]
end
 --[[ @ 0]]
LobbyVM.OnCreateDedicatedLobby = function ( f41_arg0 )
	if Dvar[@"hash_44BADE8473F0165F"]:get() == true then
		return 
	else
		Lobby.ProcessQueue.AddToQueue( "CreateDedicatedLobby", Lobby.Process.CreateDedicatedLobby( 0, LobbyData.GetLobbyMenuByName( LuaEnum.UI.DIRECTOR_ONLINE_MP_PUBLIC ) ) ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
LobbyVM.OnForceToMenu = function ( f42_arg0 )
	Lobby.ProcessQueue.AddToQueue( "ForceToMenu", Lobby.Process.ForceToMenu( f42_arg0.controller, LobbyData.GetLobbyMenuByName( f42_arg0.menuName ), f42_arg0.msg ) ) --[[ @ 0]]
end
 --[[ @ 0]]
LobbyVM.OnLobbyClientPromoteToHost = function ( f43_arg0 )
	Lobby.ProcessQueue.AddToQueue( "PromoteClientToHost", Lobby.Process.PromoteClientToHost( f43_arg0.controller, f43_arg0.lobbyMainMode, f43_arg0.lobbyType, f43_arg0.lobbyMode, f43_arg0.maxClients, f43_arg0.hostInfo, f43_arg0.isAdvertised, f43_arg0.isInGame, f43_arg0.newMigrateIndex, f43_arg0.gametype, f43_arg0.mapname ) ) --[[ @ 0]]
end
 --[[ @ 0]]
LobbyVM.OnLobbyLeaveWithParty = function ( f44_arg0 )
	local f44_local0 = Lobby.Process.LeaveWithParty( f44_arg0.lobbyModule, f44_arg0.lobbyType, f44_arg0.lobbyMode ) --[[ @ 0]]
	if f44_local0 == nil then
		return 
	else
		Lobby.ProcessQueue.AddToQueue( "LeaveWithParty", f44_local0 ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
LobbyVM.OnCanLobbyCanMigrate = function ( f45_arg0 )
	local f45_local0 = f45_arg0.lobbyModule --[[ @ 0]]
	if f45_local0 == nil then
		f45_local0 = Enum[@"lobbymodule"][@"lobby_module_host"] --[[ @ 0]]
	end
	local f45_local1 = f45_arg0.lobbyType --[[ @ 0]]
	local f45_local2 = f45_arg0.lobbyMode --[[ @ 0]]
	if Engine[@"getdvarbool"]( "lobbyMigrate_Enabled" ) == false or Engine[@"getdvarbool"]( "lobbyMigrate_dedicatedOnly" ) == true or Engine[@"getdvarbool"]( "lobbyMigrate_EnabledLAN" ) == false and Enum[@"lobbynetworkmode"][@"lobby_networkmode_lan"] == Engine[@"getlobbynetworkmode"]() then
		Engine[@"printwarning"]( Enum[@"consolelabel_e"][@"con_label_migration"], "Cannot become host, failed lobby migrateable check\n" ) --[[ @ 0]]
		return false
	elseif f45_local1 == Enum[@"lobbytype"][@"lobby_type_transition"] then
		Engine[@"printwarning"]( Enum[@"consolelabel_e"][@"con_label_migration"], "Cannot become host, lobby type is LOBBY_TYPE_TRANSITION\n" ) --[[ @ 0]]
		return false
	elseif Engine[@"islobbyactive"]( f45_local0, f45_local1 ) == false then
		Engine[@"printwarning"]( Enum[@"consolelabel_e"][@"con_label_migration"], "Cannot become host, requested lobby is not active\n" ) --[[ @ 0]]
		return false
	else
		local f45_local3 = LobbyData.GetCurrentMenuTarget() --[[ @ 0]]
		if f45_local3[@"hasmigration"] ~= 1 then
			Engine[@"printwarning"]( Enum[@"consolelabel_e"][@"con_label_migration"], "Cannot become host, lobby menu does not allow migration\n" ) --[[ @ 0]]
			return false
		elseif Engine[@"islobbyinrecovery"]( f45_local1 ) then
			Engine[@"printwarning"]( Enum[@"consolelabel_e"][@"con_label_migration"], "Cannot become host, lobby is in recovery\n" ) --[[ @ 0]]
			return false
		elseif true == LuaUtils.IsArenaMode() then
			Engine[@"printwarning"]( Enum[@"consolelabel_e"][@"con_label_migration"], "Cannot become host, migration is not allowed in arena\n" ) --[[ @ 0]]
			return false
		elseif false == Lobby.ProcessQueue.IsQueueEmpty() then
			Engine[@"printwarning"]( Enum[@"consolelabel_e"][@"con_label_migration"], "Cannot become host, process queue is not empty\n" ) --[[ @ 0]]
			return false
		else
			return true
		end
	end
end
 --[[ @ 0]]
LobbyVM.OnLobbyLocalClientLeave = function ( f46_arg0 )
	if not Lobby.ProcessQueue.IsQueueEmpty() then
		return false
	else
		local f46_local0 = Lobby.Process.LocalClientLeave( f46_arg0.controller, f46_arg0.xuid ) --[[ @ 0]]
		if f46_local0 == nil then
			return false
		else
			Lobby.ProcessQueue.AddToQueue( "LobbyLocalClientLeave", f46_local0 ) --[[ @ 0]]
			return true
		end
	end
end
 --[[ @ 0]]
LobbyVM.SetMaxLocalPlayers = function ( f47_arg0 )
	Dvar[@"lobby_maxlocalplayers"]:set( math.min( f47_arg0[@"maxlocalclients"], Engine[@"getmaxlocalcontrollers"]() ) ) --[[ @ 0]]
end
 --[[ @ 0]]
LobbyVM.OnLobbySettings = function ( f48_arg0 )
	local f48_local0 = f48_arg0.controller --[[ @ 0]]
	local f48_local1 = f48_arg0.toTarget --[[ @ 0]]
	local f48_local2 = f48_arg0.skipSwitchMode --[[ @ 0]]
	local f48_local3 = f48_arg0.isDevMap --[[ @ 0]]
	if type( f48_local1 ) == "number" then
		f48_local1 = LobbyData.GetLobbyMenuByID( f48_local1 ) --[[ @ 0]]
	end
	if f48_local1 == nil then
		Engine[@"printinfo"]( Enum[@"consolelabel_e"][@"con_label_lobbyhost"], "Tried to apply settings for an invalid target.@\n" ) --[[ @ 0]]
		return 
	end
	Engine[@"printinfo"]( Enum[@"consolelabel_e"][@"con_label_lobbyhost"], "Applying settings for menu: " .. f48_local1[@"name"] .. ".\n" ) --[[ @ 0]]
	if not Engine[@"isinventorybusy"]( f48_local0 ) and Engine[@"hash_5CB675CA7856DA25"]() and f48_local1[@"mainmode"] ~= Enum[@"lobbymainmode"][@"lobby_mainmode_invalid"] and f48_local1[@"mainmode"] ~= Enum[@"lobbymainmode"][@"lobby_mainmode_wz"] then
		LuaUtils.SafeComError( Enum[@"errorcode"][@"error_softrestart_keepdw"], @"menu/join_result_full_version_required_title" ) --[[ @ 0]]
	end
	if not Engine[@"isinventorybusy"]( f48_local0 ) and f48_local1[@"mainmode"] == Enum[@"lobbymainmode"][@"lobby_mainmode_zm"] then
		if Engine[@"hash_3A8FBC7AC4C3F3A6"]() then
			LuaUtils.SafeComError( Enum[@"errorcode"][@"error_softrestart_keepdw"], @"menu/korea_15plus_blocked_gamemode" ) --[[ @ 0]]
		elseif Engine[@"hash_45405A6484A88367"]() then
			LuaUtils.SafeComError( Enum[@"errorcode"][@"error_softrestart_keepdw"], @"menu/join_result_full_version_required_title" ) --[[ @ 0]]
		end
	end
	if not f48_local2 then
		local f48_local4 = Engine[@"getlobbymainmode"]() --[[ @ 0]]
		local f48_local5 = f48_local1[@"mainmode"] --[[ @ 0]]
		if Engine[@"switchcampaignmode"] then
			Engine[@"switchcampaignmode"]( Enum[@"campaignmode"][@"hash_10BC3515387CDAB7"] ) --[[ @ 0]]
		end
		if f48_local4 ~= f48_local5 then
			Engine[@"switchmode"]( f48_local0, Lobby.Core.GetMainModeStr( f48_local5 ) ) --[[ @ 0]]
		end
	end
	if f48_local3 ~= true and f48_local1[@"egamemodes"] == Enum[@"egamemodes"][@"mode_game_invalid"] then
		Engine[@"resetgametypesettings"]() --[[ @ 0]]
	end
	LobbyVM.SetMaxLocalPlayers( f48_local1 ) --[[ @ 0]]
	Engine[@"setlobbymode"]( f48_local1[@"lobbytype"], f48_local1[@"lobbymode"] ) --[[ @ 0]]
	Engine[@"tempgamemodesetmode"]( f48_local1[@"egamemodes"] ) --[[ @ 0]]
	Engine[@"setlobbymaxclients"]( f48_local1[@"lobbytype"], f48_local1[@"maxclients"] ) --[[ @ 0]]
end
 --[[ @ 0]]
LobbyVM.OnSessionModeChange = function ( f49_arg0 )
	Lobby.CharacterSelection.OnSetGametype() --[[ @ 0]]
	if f49_arg0.toMode == Enum[@"emodes"][@"mode_warzone"] then
		for f49_local0 = 0 --[[ @ 0]], Engine[@"getmaxcontrollercount"]() - 1, 1 do
			Lobby.Stats.ValidateWZCharacterSelection( f49_local0 ) --[[ @ 0]]
		end
	elseif f49_arg0.toMode == Enum[@"emodes"][@"mode_zombies"] then
		for f49_local0 = 0 --[[ @ 0]], Engine[@"getmaxcontrollercount"]() - 1, 1 do
			Lobby.Stats.ValidateZMWeaponArmory( f49_local0 ) --[[ @ 0]]
		end
	end
end
 --[[ @ 0]]
LobbyVM.lobbyID = nil --[[ @ 0]]
LobbyVM.OnUpdateUI = function ( f50_arg0 )
	local f50_local0 = f50_arg0.toTarget --[[ @ 0]]
	local f50_local1 = f50_arg0.controller --[[ @ 0]]
	local f50_local2 = f50_arg0.fromLobbyState --[[ @ 0]]
	if type( f50_local0 ) == "number" then
		f50_local0 = LobbyData.GetLobbyMenuByID( f50_local0 ) --[[ @ 0]]
	end
	local f50_local3 = function ( f51_arg0 )
		if f51_arg0 == "auto" then
			return "room2"
		else
			return f51_arg0
		end
	end
	 --[[ @ 0]]
	local f50_local4 = Engine[@"getlobbylobbyid"]( Enum[@"lobbymodule"][@"lobby_module_client"], Enum[@"lobbytype"][@"lobby_type_private"] ) --[[ @ 0]]
	if f50_local4 ~= LobbyVM.lobbyID then
		Engine[@"setmodelvalue"]( Engine[@"createmodel"]( Engine[@"getglobalmodel"](), "lobbyRoot.showSelect" ), true ) --[[ @ 0]]
		LobbyVM.lobbyID = f50_local4 --[[ @ 0]]
	end
	Engine[@"setlobbyuiscreen"]( f50_local0[@"id"] ) --[[ @ 0]]
	LobbyData.SetLobbyNav( f50_local0 ) --[[ @ 0]]
	Engine[@"setmodelvalue"]( Engine[@"createmodel"]( Engine[@"getglobalmodel"](), "lobbyRoot.lobbyMode", true ), f50_local0[@"lobbymode"] ) --[[ @ 0]]
	Engine[@"setmodelvalue"]( Engine[@"createmodel"]( Engine[@"getglobalmodel"](), "lobbyRoot.lobbyMainMode", true ), f50_local0[@"mainmode"] ) --[[ @ 0]]
	Engine[@"setmodelvalue"]( Engine[@"createmodel"]( Engine[@"getglobalmodel"](), "lobbyRoot.lobbyGameMode", true ), f50_local0[@"egamemodes"] ) --[[ @ 0]]
	Engine[@"setmodelvalue"]( Engine[@"createmodel"]( Engine[@"getglobalmodel"](), "lobbyRoot.room", true ), f50_local3( f50_local0[@"room"] ) ) --[[ @ 0]]
	CoDShared[@"hash_3562F4B21BD0FAB0"]( f50_local1, f50_local0[@"mainmode"] ) --[[ @ 0]]
	if f50_local2 then
		local f50_local5 = LobbyData.GetLobbyMenuByName( LuaEnum.UI.DIRECTOR_ONLINE_MP_ARENA_PREGAME ) --[[ @ 0]]
		if f50_local5 ~= nil and f50_local0[@"id"] == f50_local5[@"id"] then
			Lobby.Events.EventDispatcher( "OnClanUIEvent", {
				controller = f50_local1,
				event = LuaEnum.CLAN_UI_EVENT.INIT_MODELS
			} ) --[[ @ 0]]
			Lobby.Events.EventDispatcher( "OnClanUIEvent", {
				controller = f50_local1,
				event = LuaEnum.CLAN_UI_EVENT.FETCH_DATA
			} ) --[[ @ 0]]
		end
	end
end
 --[[ @ 0]]
LobbyVM.ResetClientLoadouts = function ()
	local f52_local0 = Engine[@"getlobbyhostcontrollerindex"]( Enum[@"lobbytype"][@"lobby_type_private"] ) --[[ @ 0]]
	local f52_local1 = Engine[@"hash_1E42CF04B7DDD5DE"]( LobbyMsg.EncodeToLobbyMsgType( LobbyMsg.LuaMsgType.LUA_MESSAGE_TYPE_LOBBY_CLIENT_RESET_LOADOUTS ), Enum[@"lobbymodule"][@"lobby_module_host"], Enum[@"lobbytype"][@"lobby_type_private"] ) --[[ @ 0]]
	f52_local1:sendTo( f52_local0, Enum[@"lobbymodule"][@"hash_2DAA8D01F295C885"], Enum[@"netchanmsgtype_e"][@"netchan_lobbyprivate_reliable"] ) --[[ @ 0]]
	f52_local1:free() --[[ @ 0]]
end
 --[[ @ 0]]
LobbyVM.Leaderboard_PopulateCustomList = function ( f53_arg0 )
	return Lobby.Leaderboard.PopulateCustomList( f53_arg0 )
end
 --[[ @ 0]]
LobbyVM.CheckDLCBit = function ( f54_arg0, f54_arg1 )
	return f54_arg0 & f54_arg1 == f54_arg1
end
 --[[ @ 0]]
LobbyVM.LaunchGameExec = function ( f55_arg0, f55_arg1 )
	if f55_arg1 ~= Engine[@"lobbygetcontrollinglobbysession"]( Enum[@"lobbymodule"][@"lobby_module_host"] ) then
		Engine[@"printerror"]( Enum[@"consolelabel_e"][@"con_label_lobbyhost"], "Launch game not supported for this lobby type(" .. f55_arg1 .. ")\n" ) --[[ @ 0]]
		return false
	elseif Lobby.ProcessQueue.IsQueueEmpty() then
		Engine[@"printinfo"]( Enum[@"consolelabel_e"][@"con_label_lobbyhost"], "** Launching game... **\n" ) --[[ @ 0]]
		Engine[@"exec"]( f55_arg0, "lobbyLaunchGame" ) --[[ @ 0]]
		return true
	else
		local f55_local0 = Lobby.ProcessQueue.GetQueueHead() --[[ @ 0]]
		Engine[@"printerror"]( Enum[@"consolelabel_e"][@"con_label_lobbyhost"], "Warning: Could not launch game. Lobby process '" .. f55_local0.name .. "' in progress.\n" ) --[[ @ 0]]
		return false
	end
end
 --[[ @ 0]]
LobbyVM.LaunchDemoExec = function ( f56_arg0, f56_arg1 )
	if f56_arg1 ~= Enum[@"lobbytype"][@"lobby_type_private"] then
		Engine[@"printerror"]( Enum[@"consolelabel_e"][@"con_label_lobbyhost"], "Launch demo not supported for this lobby type(" .. f56_arg1 .. ")\n" ) --[[ @ 0]]
		return 
	elseif Lobby.ProcessQueue.IsQueueEmpty() then
		Engine[@"printinfo"]( Enum[@"consolelabel_e"][@"con_label_lobbyhost"], "** Launching demo... **\n" ) --[[ @ 0]]
		Engine[@"exec"]( f56_arg0, "lobbyLaunchDemo" ) --[[ @ 0]]
		LuaUtils.UI_ClearErrorMessageDialog() --[[ @ 0]]
	else
		local f56_local0 = Lobby.ProcessQueue.GetQueueHead() --[[ @ 0]]
		Engine[@"printerror"]( Enum[@"consolelabel_e"][@"con_label_lobbyhost"], "Warning: Could not launch damo. Lobby process '" .. f56_local0.name .. "' in progress.\n" ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
LobbyVM.GetBitsForLockedInMap = function ()
	local f57_local0 = Engine[@"lobbygetmap"]() --[[ @ 0]]
	if f57_local0 == nil or f57_local0 == "" then
		f57_local0 = Engine[@"getcurrentmap"]() --[[ @ 0]]
	end
	return Engine[@"getdlcbitformapname"]( f57_local0 )
end
 --[[ @ 0]]
LobbyVM.GetNeededDLCBits = function ()
	local f58_local0 = Engine[@"getlobbyuiscreen"]() --[[ @ 0]]
	if f58_local0 == LobbyData.GetLobbyMenuIDByName( LuaEnum.UI.DIRECTOR_ONLINE_ZM_PUBLIC ) or f58_local0 == LobbyData.GetLobbyMenuIDByName( LuaEnum.UI.DIRECTOR_ONLINE_MP_PUBLIC ) then
		return Lobby.Matchmaking.GetMapPackBits( CoDShared.GetLobbyDLCBits( Engine[@"getlobbymainmode"](), Enum[@"lobbymodule"][@"lobby_module_host"], Enum[@"lobbytype"][@"lobby_type_game"] ), Engine[@"getplaylistid"]() )
	elseif f58_local0 == LobbyData.GetLobbyMenuIDByName( LuaEnum.UI.DIRECTOR_ONLINE_ZM_PREGAME ) or f58_local0 == LobbyData.GetLobbyMenuIDByName( LuaEnum.UI.DIRECTOR_ONLINE_MP_PREGAME ) then
		return 0
	elseif f58_local0 == LobbyData.GetLobbyMenuIDByName( LuaEnum.UI.DIRECTOR_ONLINE ) then
		return 0
	end
	local f58_local1 = Engine[@"lobbygetmap"]() --[[ @ 0]]
	if f58_local1 == nil or f58_local1 == "" then
		f58_local1 = Engine[@"getcurrentmap"]() --[[ @ 0]]
	end
	return Engine[@"getdlcbitformapname"]( f58_local1 )
end
 --[[ @ 0]]
LobbyVM.TriggerQuitMissingMapProcess = function ( f59_arg0, f59_arg1 )
	Engine[@"printwarning"]( Enum[@"consolelabel_e"][@"con_label_lobbyclient"], "Leaving game because map '" .. Engine[@"lobbygetmap"]() .. "' is in contentpack '" .. f59_arg1 .. "' but our dlcbits is '" .. f59_arg0 .. "'.\n" ) --[[ @ 0]]
	local f59_local0 = Lobby.Process.Recover( Engine[@"getprimarycontroller"]() ) --[[ @ 0]]
	Lobby.Process.ForceAction( f59_local0.tail, Lobby.Actions.ErrorPopupMsg( @"platform/missingmap" ) ) --[[ @ 0]]
	Lobby.ProcessQueue.AddToQueue( "MissingMap", f59_local0 ) --[[ @ 0]]
end
 --[[ @ 0]]
LobbyVM.DLCMapCheck = function ()
	local f60_local0 = CoDShared.GetLobbyDLCBits( Engine[@"getlobbymainmode"](), Enum[@"lobbymodule"][@"lobby_module_host"], Engine[@"lobbygetcontrollinglobbysession"]( Enum[@"lobbymodule"][@"lobby_module_client"] ) ) --[[ @ 0]]
	local f60_local1 = LobbyVM.GetNeededDLCBits() --[[ @ 0]]
	if not LobbyVM.CheckDLCBit( f60_local0, f60_local1 ) then
		LobbyVM.TriggerQuitMissingMapProcess( f60_local0, f60_local1 ) --[[ @ 0]]
		return false
	else
		return true
	end
end
 --[[ @ 0]]
LobbyVM.CanLoadMap = function ()
	local f61_local0 = CoDShared.GetLobbyDLCBits( Engine[@"getlobbymainmode"](), Enum[@"lobbymodule"][@"lobby_module_client"], Engine[@"lobbygetcontrollinglobbysession"]( Enum[@"lobbymodule"][@"lobby_module_client"] ) ) --[[ @ 0]]
	local f61_local1 = LobbyVM.GetBitsForLockedInMap() --[[ @ 0]]
	if not LobbyVM.CheckDLCBit( f61_local0, f61_local1 ) then
		LobbyVM.TriggerQuitMissingMapProcess( f61_local0, f61_local1 ) --[[ @ 0]]
		return false
	else
		return true
	end
end
 --[[ @ 0]]
LobbyVM.CanClientLaunch = function ( f62_arg0 )
	if CoDShared.IsMapFree( Engine[@"converttoxhash"]( Engine[@"lobbygetmap"]() ), Engine[@"getlobbyuiscreen"](), Engine[@"getplaylistid"]() ) then
		return true
	elseif LobbyVM.CanLoadMap() == false then
		Engine[@"lobbylaunchclear"]() --[[ @ 0]]
		return false
	else
		return true
	end
end
 --[[ @ 0]]
LobbyVM.GameModeChanged = function ( f63_arg0 )
	Lobby.TeamSelection.GameModeChanged( f63_arg0 ) --[[ @ 0]]
end
 --[[ @ 0]]
LobbyVM.OnCanBroadcastHostInfo = function ( f64_arg0 )
	return true
end
 --[[ @ 0]]
LobbyVM.OnUpdateAdvertising = function ( f65_arg0 )
	if f65_arg0.lobbyType == Enum[@"lobbytype"][@"lobby_type_game"] then
		Lobby.Matchmaking.UpdateAdvertising( "force update from code" ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
LobbyVM.UGCOffensiveEmblemAdd = function ( f66_arg0 )
	Lobby.UGC.OffensiveEmblemAdd( f66_arg0 ) --[[ @ 0]]
end
 --[[ @ 0]]
LobbyVM.OnChangeSigninState = function ( f67_arg0 )
	local f67_local0 = nil --[[ @ 0]]
	if f67_arg0.onlineState == Enum[@"liveuserstate"][@"live_user_signed_out"] then
		Lobby.Anticheat.OnControllerSignedOut( f67_arg0.controller ) --[[ @ 0]]
		if f67_arg0.isPrimary then
			f67_local0 = Lobby.Process.PrimaryControllerSignedOut( f67_arg0.controller ) --[[ @ 0]]
		end
	elseif f67_arg0.onlineState == Enum[@"liveuserstate"][@"live_user_signed_in"] then
		if f67_arg0.isPrimary then
			f67_local0 = Lobby.Process.PrimaryControllerSignedIn( f67_arg0.controller ) --[[ @ 0]]
		end
	else
		DebugPrint( "Warning unknown signin State [" .. f67_arg0.onlineState .. "]" ) --[[ @ 0]]
	end
	if f67_local0 ~= nil then
		Lobby.ProcessQueue.AddToQueue( "ChangeSignInState", f67_local0 ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
LobbyVM.ClearLobbyStatus = function ()
	if LobbyVM.lobbyStatus.cleared == true then
		return 
	elseif LobbyVM.lobbyStatus.clearedTime > Engine[@"milliseconds"]() then
		return 
	else
		LobbyVM.lobbyStatus.cleared = true --[[ @ 0]]
		local f68_local0 = Engine[@"getglobalmodel"]() --[[ @ 0]]
		f68_local0 = f68_local0.lobbyRoot --[[ @ 0]]
		local f68_local1 = f68_local0:create( "lobbyStatusString1" ) --[[ @ 0]]
		f68_local1:set( "" ) --[[ @ 0]]
		f68_local1 = f68_local0:create( "lobbyStatusString2" ) --[[ @ 0]]
		f68_local1:set( "" ) --[[ @ 0]]
		f68_local1 = f68_local0:create( "lobbyStatusString3" ) --[[ @ 0]]
		f68_local1:set( "" ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
LobbyVM.LobbyStatusUpdate = function ( f69_arg0 )
	if not Engine[@"ismainthreadorproxy"]() then
		return 
	end
	local f69_local0 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f69_local0 = f69_local0.lobbyRoot --[[ @ 0]]
	local f69_local1 = f69_local0:create( "lobbyStatusString1" ) --[[ @ 0]]
	local f69_local2 = f69_local0:create( "lobbyStatusString2" ) --[[ @ 0]]
	local f69_local3 = f69_local0:create( "lobbyStatusString3" ) --[[ @ 0]]
	LobbyVM.lobbyStatus.cleared = false --[[ @ 0]]
	LobbyVM.lobbyStatus.clearedTime = Engine[@"milliseconds"]() + 10000 --[[ @ 0]]
	local f69_local4 = f69_arg0.searchStage --[[ @ 0]]
	local f69_local5 = "" --[[ @ 0]]
	if f69_local4 == 1 then
		local f69_local6 = f69_arg0.numResults --[[ @ 0]]
		if f69_local6 == 1 then
			f69_local5 = Engine[@"hash_4F9F1239CFD921FE"]( @"hash_2E4043BEC55997D7" ) --[[ @ 0]]
		else
			f69_local5 = Engine[@"hash_4F9F1239CFD921FE"]( @"hash_5F5C23E745BBA03A", f69_local6 ) --[[ @ 0]]
		end
		f69_local1:set( f69_local5 ) --[[ @ 0]]
		f69_local2:set( "" ) --[[ @ 0]]
		f69_local3:set( "" ) --[[ @ 0]]
	elseif f69_local4 == 2 then
		f69_local2:set( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_614406E6B65BB0D6", f69_arg0.contactedResults, f69_arg0.numResults ) ) --[[ @ 0]]
	elseif f69_local4 == 3 then
		f69_local3:set( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_75AE8C0E42569E25", f69_arg0.joiningCurHost, f69_arg0.joiningNumHosts ) ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
LobbyVM.ProcessCompleteSuccess = function ( f70_arg0 )
	Lobby.ProcessQueue.Success( f70_arg0 ) --[[ @ 0]]
end
 --[[ @ 0]]
LobbyVM.ProcessCompleteFailure = function ( f71_arg0 )
	Lobby.ProcessQueue.Failure( f71_arg0 ) --[[ @ 0]]
end
 --[[ @ 0]]
LobbyVM.ProcessCompleteError = function ( f72_arg0 )
	Lobby.ProcessQueue.Error( f72_arg0 ) --[[ @ 0]]
end
 --[[ @ 0]]
LobbyVM.ProcessUpdate = function ( f73_arg0 )
	Lobby.ProcessQueue.Update( f73_arg0 ) --[[ @ 0]]
end
 --[[ @ 0]]
LobbyVM.OnGameLobbyGameServerDataUpdate = function ( f74_arg0 )
	local f74_local0 = LobbyData.GetCurrentMenuTarget() --[[ @ 0]]
	if f74_local0[@"lobbymode"] == Enum[@"lobbymode"][@"lobby_mode_public"] or f74_local0[@"lobbymode"] == Enum[@"lobbymode"][@"lobby_mode_arena"] then
		local f74_local1 = Engine[@"getplaylistinfobyid"]( Engine[@"getplaylistid"]() ) --[[ @ 0]]
		if f74_local1 then
			local f74_local2 = f74_local1.name --[[ @ 0]]
			local f74_local3 = Engine[@"createmodel"]( Engine[@"getglobalmodel"](), "lobbyPlaylist" ) --[[ @ 0]]
			Engine[@"setmodelvalue"]( Engine[@"createmodel"]( f74_local3, "name" ), Engine[@"toupper"]( Engine[@"hash_4F9F1239CFD921FE"]( f74_local2 ) ) ) --[[ @ 0]]
			Engine[@"setmodelvalue"]( Engine[@"createmodel"]( f74_local3, "kickerText" ), @"hash_0" ) --[[ @ 0]]
		end
	end
	Lobby.MapVote.GameLobbyGameServerDataUpdate( f74_arg0 ) --[[ @ 0]]
end
 --[[ @ 0]]
LobbyVM.OnPrivateLobbyServerDataUpdate = function ( f75_arg0 )
	local f75_local0 = LobbyData.GetCurrentMenuTarget() --[[ @ 0]]
	if Engine[@"currentsessionmode"]() == Enum[@"emodes"][@"mode_warzone"] then
		local f75_local1 = Engine[@"getglobalmodel"]() --[[ @ 0]]
		f75_local1 = f75_local1:create( "lobbyRoot.fillParty" ) --[[ @ 0]]
		f75_local1:set( f75_arg0.fillParty ) --[[ @ 0]]
	end
	if f75_local0[@"lobbymode"] == Enum[@"lobbymode"][@"lobby_mode_public"] or f75_local0[@"lobbymode"] == Enum[@"lobbymode"][@"lobby_mode_arena"] then
		local f75_local2 = Engine[@"getplaylistinfobyid"]( Engine[@"getplaylistid"]() ) --[[ @ 0]]
		if f75_local2 then
			local f75_local3 = f75_local2.name --[[ @ 0]]
			local f75_local4 = Engine[@"createmodel"]( Engine[@"getglobalmodel"](), "lobbyPlaylist" ) --[[ @ 0]]
			Engine[@"setmodelvalue"]( Engine[@"createmodel"]( f75_local4, "name" ), Engine[@"toupper"]( Engine[@"hash_4F9F1239CFD921FE"]( f75_local3 ) ) ) --[[ @ 0]]
			Engine[@"setmodelvalue"]( Engine[@"createmodel"]( f75_local4, "kickerText" ), @"hash_0" ) --[[ @ 0]]
		end
	end
end
 --[[ @ 0]]
LobbyVM.OnGameLobbyClientDataUpdate = function ( f76_arg0 )
	Lobby.MapVote.GameLobbyClientDataUpdate( f76_arg0 ) --[[ @ 0]]
	Lobby.TeamSelection.GameLobbyClientDataUpdate( f76_arg0 ) --[[ @ 0]]
	Lobby.Pregame.GameLobbyClientDataUpdate( f76_arg0 ) --[[ @ 0]]
	LuaUtils.ForceLobbyButtonUpdate() --[[ @ 0]]
	Engine[@"forcenotifymodelsubscriptions"]( Engine[@"createmodel"]( Engine[@"getglobalmodel"](), "lobbyRoot.gameClientDataUpdate" ) ) --[[ @ 0]]
end
 --[[ @ 0]]
LobbyVM.OnDediQosReady = function ()
	local f77_local0 = Engine[@"getdediqosresultsbytype"]( Lobby.Matchmaking.DatacenterType.ANY ) --[[ @ 0]]
	if f77_local0.numResults == 0 then
		Engine[@"printwarning"]( Enum[@"consolelabel_e"][@"con_label_lobby"], "Engine told us results were ready, but no results available\n" ) --[[ @ 0]]
	else
		servers = f77_local0.pingResults --[[ @ 0]]
		for f77_local4, f77_local5 in ipairs( servers ) --[[ @ 0]] do
			Engine[@"hash_30DE279ECDDDD966"]( Engine[@"getprimarycontroller"](), @"hash_6744BF3845B0D442", {
				[@"location"] = f77_local5.location,
				[@"ping"] = f77_local5.ping
			} ) --[[ @ 0]]
		end
	end
end
 --[[ @ 0]]
LobbyVM.OnPopulateMutableClientDDLBuff = function ( f78_arg0 )
	local f78_local0 = f78_arg0.controller --[[ @ 0]]
	local f78_local1 = f78_arg0.ddlData --[[ @ 0]]
end
 --[[ @ 0]]
LobbyVM.OnReceiveMutableClientDDLBuff = function ( f79_arg0 )
	local f79_local0 = f79_arg0.xuid --[[ @ 0]]
	local f79_local1 = f79_arg0.ddlData --[[ @ 0]]
end
 --[[ @ 0]]
LobbyVM.LobbyPumpList = {} --[[ @ 0]]
LobbyVM.LobbyPumpList.sequence = 0 --[[ @ 0]]
LobbyVM.LobbyPumpList.funcs = {
	Lobby.Anticheat.Pump,
	Lobby.Arena.Pump,
	Lobby.Clans.Pump,
	Lobby.Debug.Pump,
	Lobby.Hopper.Pump,
	Lobby.MapVote.Pump,
	Lobby.Matchmaking.Pump,
	Lobby.Merge.Pump,
	Lobby.MatchmakingAsync.PumpLobbyMerging,
	Lobby.PartyPrivacy.Pump,
	Lobby.Platform.Pump,
	Lobby.Pregame.Pump,
	Lobby.ProcessQueue.Pump,
	Lobby.Scheduler.Pump,
	Lobby.TeamSelection.Pump,
	Lobby.Test.Pump,
	Lobby.Theater.Pump,
	Lobby.Timer.Pump,
	Lobby.Leaderboard.Pump
} --[[ @ 0]]
LobbyVM.OnPump = function ( f80_arg0 )
	LobbyVM.LobbyPumpList.sequence = math.fmod( LobbyVM.LobbyPumpList.sequence, #LobbyVM.LobbyPumpList.funcs ) --[[ @ 0]]
	LobbyVM.LobbyPumpList.sequence = LobbyVM.LobbyPumpList.sequence + 1 --[[ @ 0]]
	LobbyVM.LobbyPumpList.funcs[LobbyVM.LobbyPumpList.sequence]( f80_arg0 ) --[[ @ 0]]
	if Lobby.Join.autoJoin.leaveServerImmediately == true then
		Lobby.Join.autoJoin.leaveServerImmediately = false --[[ @ 0]]
		if not CoDShared.IsInTheaterLobby() then
			Engine[@"leaveserverimmediately"]() --[[ @ 0]]
		end
	end
end
 --[[ @ 0]]
LobbyVM.OnIsFeatureBanned = function ( f81_arg0 )
	local f81_local0, f81_local1 = Lobby.Anticheat.CheckIsFeatureBannedForIndex( f81_arg0.controller, f81_arg0.feature ) --[[ @ 0]]
	return f81_local0
end
 --[[ @ 0]]
LobbyVM.OnGetBanTimeRemaining = function ( f82_arg0 )
	return Lobby.Anticheat.OnGetBanTimeRemaining( f82_arg0 )
end
 --[[ @ 0]]
LobbyVM.GetLootItemCategory = function ( f83_arg0 )
	local f83_local0 = "gamedata/loot/mplootitems.csv" --[[ @ 0]]
	local f83_local1 = 1 --[[ @ 0]]
	local f83_local2 = 2 --[[ @ 0]]
	local f83_local3 = Engine[@"tablefindrows"]( f83_local0, f83_local1, f83_arg0 ) --[[ @ 0]]
	if f83_local3 == nil or #f83_local3 == 0 then
		return -1
	else
		local f83_local4 = Engine[@"tablelookupgetcolumnvalueforrow"]( f83_local0, f83_local3[1], f83_local2 ) --[[ @ 0]]
		if f83_local4 == nil then
			return -1
		else
			return f83_local4
		end
	end
end
 --[[ @ 0]]
LobbyVM.GetRecentItemTags = function ( f84_arg0, f84_arg1 )
	local f84_local0 = Engine[@"getlootitems"]( f84_arg0, Enum[@"emodes"][@"mode_multiplayer"], 0, Engine[@"getlootitemcount"]( f84_arg0, Enum[@"emodes"][@"mode_multiplayer"] ) ) --[[ @ 0]]
	local f84_local1 = LuaUtils.GetCurrentLootVersion() --[[ @ 0]]
	local f84_local2 = "gamedata/loot/mplootitems.csv" --[[ @ 0]]
	local f84_local3 = Engine[@"tablefindrows"]( f84_local2, 2, f84_arg1 ) --[[ @ 0]]
	local f84_local4 = 6 --[[ @ 0]]
	local f84_local5 = 0 --[[ @ 0]]
	for f84_local10, f84_local11 in ipairs( f84_local3 ) --[[ @ 0]] do
		local f84_local9 = Engine[@"tablelookupgetcolumnvalueforrow"]( f84_local2, f84_local11, f84_local4 ) --[[ @ 0]]
		if f84_local9 == nil or f84_local9 == "" then
			f84_local9 = -1 --[[ @ 0]]
		else
			f84_local9 = tonumber( f84_local9 ) --[[ @ 0]]
		end
		if f84_local9 ~= -1 and f84_local9 <= f84_local1 then
			f84_local5 = f84_local5 + 1 --[[ @ 0]]
		end
	end
	if f84_local0 == nil then
		return ""
	end
	f84_local6 = {} --[[ @ 0]]
	for f84_local11, f84_local9 in ipairs( f84_local0 ) --[[ @ 0]] do
		if CoDShared.GetLootItemCategory( f84_local9.id ) == f84_arg1 and CoDShared.GetLootItemVersion( f84_local9.id ) <= f84_local1 then
			table.insert( f84_local6, f84_local9.id ) --[[ @ 0]]
		end
		if f84_local5 <= #f84_local6 then
			return ""
		end
	end
	if #f84_local6 == 0 then
		return ""
	end
	f84_local7 = "" --[[ @ 0]]
	for f84_local9, f84_local12 in ipairs( f84_local6 ) --[[ @ 0]] do
		f84_local7 = f84_local7 .. "[ 203, " .. f84_local12 .. "]" --[[ @ 0]]
		if f84_local9 < #f84_local6 then
			f84_local7 = f84_local7 .. " , " --[[ @ 0]]
		end
	end
	return f84_local7
end
 --[[ @ 0]]
LobbyVM.OnBuyCrate = function ( f85_arg0 )
	local f85_local0 = " \"SupplyDropID\": " .. f85_arg0.crateDWID .. ", " --[[ @ 0]]
	local f85_local1 = " \"PurchaseWith\": \"" .. f85_arg0.currency .. "\", " --[[ @ 0]]
	local f85_local2 = " \"Rank\": [], " --[[ @ 0]]
	local f85_local3 = " \"ExcludeTag\": [], " --[[ @ 0]]
	local f85_local4 = " \"InventoryVersion\": [ " .. Dvar[@"loot_mpitemversions"]:get() .. " ] " --[[ @ 0]]
	local f85_local5 = false --[[ @ 0]]
	local f85_local6 = "" --[[ @ 0]]
	if f85_arg0.crateDWID == 32 then
		f85_local5 = true --[[ @ 0]]
		f85_local6 = "weapon" --[[ @ 0]]
	elseif f85_arg0.crateDWID == 31 then
		f85_local5 = true --[[ @ 0]]
		f85_local6 = "melee_weapon" --[[ @ 0]]
	end
	if f85_local5 == true then
		local f85_local7 = LobbyVM.GetRecentItemTags( f85_arg0.controller, f85_local6 ) --[[ @ 0]]
		f85_local3 = " \"ExcludeTag\": [ " --[[ @ 0]]
		if f85_local7 ~= "" then
			f85_local3 = f85_local3 .. f85_local7 --[[ @ 0]]
		end
		f85_local3 = f85_local3 .. " ], " --[[ @ 0]]
		Engine[@"printinfo"]( Enum[@"consolelabel_e"][@"con_label_default"], "Excluding: " .. f85_local3 .. ".\n" ) --[[ @ 0]]
	end
	return f85_local0 .. f85_local1 .. f85_local2 .. f85_local3 .. f85_local4
end
 --[[ @ 0]]
LobbyVM.DLCInfo = {
	{
		dlcIndex = Enum[@"dlcindex_t"][@"content_dlc1_index"],
		dlcPackName = "dlc1",
		inventoryVersion = 101
	},
	{
		dlcIndex = Enum[@"dlcindex_t"][@"content_dlc2_index"],
		dlcPackName = "dlc2",
		inventoryVersion = 102
	},
	{
		dlcIndex = Enum[@"dlcindex_t"][@"content_dlc3_index"],
		dlcPackName = "dlc3",
		inventoryVersion = 103
	},
	{
		dlcIndex = Enum[@"dlcindex_t"][@"content_dlc4_index"],
		dlcPackName = "dlc4",
		inventoryVersion = 104
	}
} --[[ @ 0]]
LobbyVM.OnSpendVials = function ( f86_arg0 )
	local f86_local0 = " \"NumVials\": " .. f86_arg0.vialCount .. ", " --[[ @ 0]]
	local f86_local1 = " \"InventoryVersion\": [" .. Dvar[@"loot_zmitemversions"]:get() .. " " --[[ @ 0]]
	local f86_local2 = Engine[@"getdvarint"]( "tu9_highestAvailableDLC" ) --[[ @ 0]]
	for f86_local6, f86_local7 in ipairs( LobbyVM.DLCInfo ) --[[ @ 0]] do
		if f86_local7.dlcIndex <= f86_local2 and Engine[@"hasentitlement"]( f86_arg0.controller, Engine[@"converttoxhash"]( f86_local7.dlcPackName ) ) then
			f86_local1 = f86_local1 .. ", " .. f86_local7.inventoryVersion .. " " --[[ @ 0]]
		end
	end
	return f86_local0 .. f86_local1 .. "]"
end
 --[[ @ 0]]
LobbyVM.OnInventoryFetched = function ( f87_arg0 )
	local f87_local0 = {
		"na_team_mtx",
		"eu_team_mtx",
		"anz_team_mtx",
		"cwl_mtx",
		"cwl_mtx_v2"
	} --[[ @ 0]]
	local f87_local1 = "gamedata/tables/common/inventory_items.csv" --[[ @ 0]]
	local f87_local2 = 1 --[[ @ 0]]
	local f87_local3 = 2 --[[ @ 0]]
	local f87_local4 = false --[[ @ 0]]
	for f87_local8, f87_local9 in ipairs( f87_local0 ) --[[ @ 0]] do
		if Engine[@"getinventoryitemquantity"]( f87_arg0.controller, tonumber( Engine[@"tablelookup"]( nil, f87_local1, f87_local2, f87_local9, f87_local3 ) ) ) > 0 then
			Engine[@"setprofilevar"]( f87_arg0.controller, f87_local9, "1" ) --[[ @ 0]]
			f87_local4 = true --[[ @ 0]]
		end
	end
	if f87_local4 then
		Engine[@"commitprofilechanges"]( f87_arg0.controller ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
LobbyVM.CheckSpecialPlaylistRules = function ( f88_arg0 )
	if Dvar[@"partychatdisallowed"]:get() == true then
		if Engine[@"islocalclientinplatformpartychat"]() and not Engine[@"isincomerror"]() then
			Dvar[@"partychatdisallowed"]:set( false ) --[[ @ 0]]
			Engine[@"comerror"]( Enum[@"errorcode"][@"error_drop"], Engine[@"hash_4F9F1239CFD921FE"]( @"hash_422BE13738744598" ) ) --[[ @ 0]]
		end
		local f88_local0 = Engine[@"lobbygetsessionclients"]( Enum[@"lobbymodule"][@"lobby_module_host"], Enum[@"lobbytype"][@"lobby_type_game"] ) --[[ @ 0]]
		for f88_local4, f88_local5 in ipairs( f88_local0.sessionClients ) --[[ @ 0]] do
			if f88_local5.isInPlatformPartyChat == true then
				Engine[@"kickclient"]( f88_arg0, Enum[@"lobbytype"][@"lobby_type_game"], f88_local5.xuid, Enum[@"lobbydisconnectclient"][@"lobby_disconnect_client_nopartychat"], @"hash_422BE13738744598" ) --[[ @ 0]]
			end
		end
	end
end
 --[[ @ 0]]
LobbyVM.IngameMonitor = function ()
	if not Engine[@"isingame"]() then
		return 
	elseif (Engine[@"isdedicatedserver"]() or CoDShared.IsLobbyMode( Enum[@"lobbymode"][@"lobby_mode_public"] )) and Dvar[@"partychatdisallowed"]:get() and Engine[@"islobbyactive"]( Enum[@"lobbymodule"][@"lobby_module_host"], Enum[@"lobbytype"][@"lobby_type_game"] ) then
		local f89_local0 = Engine[@"lobbygetsessionclients"]( Enum[@"lobbymodule"][@"lobby_module_host"], Enum[@"lobbytype"][@"lobby_type_game"] ) --[[ @ 0]]
		local f89_local1 = Engine[@"getlobbyhostcontrollerindex"]( Enum[@"lobbytype"][@"lobby_type_game"] ) --[[ @ 0]]
		for f89_local5, f89_local6 in ipairs( f89_local0.sessionClients ) --[[ @ 0]] do
			if f89_local6.isInPlatformPartyChat == true then
				Engine[@"kickclient"]( f89_local1, Enum[@"lobbytype"][@"lobby_type_game"], f89_local6.xuid, Enum[@"lobbydisconnectclient"][@"lobby_disconnect_client_nopartychat"], @"hash_422BE13738744598" ) --[[ @ 0]]
			end
		end
	end
end
 --[[ @ 0]]
LobbyVM.OnMessageReceived = function ( f90_arg0 )
	if f90_arg0.msgType == Enum[@"msgtype"][@"message_type_lobby_host_lobby_move"] then
		LobbyVM.ProcesMoveLobby( f90_arg0 ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
LobbyVM.ProcesMoveLobby = function ( f91_arg0 )
	local f91_local0 = f91_arg0.controller --[[ @ 0]]
	local f91_local1 = f91_arg0.lobbyType --[[ @ 0]]
	local f91_local2 = f91_arg0.lobbyTypeMoveFrom --[[ @ 0]]
	local f91_local3 = f91_local1 --[[ @ 0]]
	Engine[@"copylobbysession"]( Enum[@"lobbymodule"][@"lobby_module_client"], f91_local2, f91_local3 ) --[[ @ 0]]
	Engine[@"clearlobbysession"]( Enum[@"lobbymodule"][@"lobby_module_host"], f91_local3 ) --[[ @ 0]]
	Engine[@"clearlobbysession"]( Enum[@"lobbymodule"][@"lobby_module_host"], f91_local2 ) --[[ @ 0]]
	Engine[@"clearlobbysession"]( Enum[@"lobbymodule"][@"lobby_module_client"], f91_local2 ) --[[ @ 0]]
	local f91_local4 = Engine[@"lobbygetsessionclients"]( Enum[@"lobbymodule"][@"lobby_module_client"], f91_local3 ) --[[ @ 0]]
	for f91_local8, f91_local9 in ipairs( f91_local4.sessionClients ) --[[ @ 0]] do
		Engine[@"hash_35D28F97B2C14CD7"]( f91_local0, f91_local3, f91_local9.xuid ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
LobbyVM.OnPublisherVarScript = function ( f92_arg0 )
	local f92_local0 = {} --[[ @ 0]]
	local f92_local1 = 0 --[[ @ 0]]
	local f92_local2, f92_local3, f92_local4 = nil --[[ @ 0]]
	for f92_local8 in string.gmatch( f92_arg0.data, "[^,]+" ) --[[ @ 0]] do
		f92_local8 = f92_local8:gsub( "%s+", "" ) --[[ @ 0]]
		if f92_local1 == 0 then
			f92_local2 = f92_local8 --[[ @ 0]]
		elseif f92_local1 == 1 then
			f92_local3 = f92_local8 --[[ @ 0]]
		else
			if f92_local3 == "string" then
				f92_local4 = f92_local8 --[[ @ 0]]
			elseif f92_local3 == "number" then
				f92_local4 = tonumber( f92_local8 ) --[[ @ 0]]
			elseif f92_local3 == "bool" then
				if f92_local8 == "true" then
					f92_local4 = true --[[ @ 0]]
				else
					f92_local4 = false --[[ @ 0]]
				end
			else
				Engine[@"printinfo"]( Enum[@"consolelabel_e"][@"con_label_lobbyclient"], "Unknown publisher variable type [" .. f92_local3 .. "] \n" ) --[[ @ 0]]
			end
			f92_local0[f92_local2] = f92_local4 --[[ @ 0]]
		end
		f92_local1 = f92_local1 + 1 --[[ @ 0]]
		if f92_local1 >= 3 then
			f92_local1 = 0 --[[ @ 0]]
		end
	end
	if LobbyVM ~= nil then
		Lobby.Events.EventDispatcher( f92_arg0.name, f92_local0 ) --[[ @ 0]]
	else
		Engine[@"lobbyevent"]( f92_arg0.name, f92_local0 ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
LobbyVM.OnGetMapName = function ( f93_arg0 )
	return LuaUtils.GetBSPNameFromAsset( f93_arg0.assetID )
end
 --[[ @ 0]]
LobbyVM.OnCanFitPlayers = function ( f94_arg0 )
	local f94_local0 = f94_arg0.lobbyType --[[ @ 0]]
	local f94_local1 = f94_arg0.reservationCount --[[ @ 0]]
	local f94_local2 = f94_arg0.clientCount --[[ @ 0]]
	local f94_local3 = f94_arg0.memberCount --[[ @ 0]]
	local f94_local4 = Engine[@"getlobbynetworkmode"]() --[[ @ 0]]
	local f94_local5 --[[ @ 0]]
	if f94_local4 ~= Enum[@"lobbynetworkmode"][@"lobby_networkmode_invalid"] and f94_local4 ~= Enum[@"lobbynetworkmode"][@"lobby_networkmode_lan"] then
		f94_local5 = false --[[ @ 0]]
	else
		f94_local5 = true --[[ @ 0]]
	end
	if f94_local5 == false and f94_local0 == Enum[@"lobbytype"][@"lobby_type_private"] and f94_local1 + f94_local2 + f94_local3 > Dvar[@"hash_4FF45B41C6046F8"]:get() then
		return false
	else
		return true
	end
end
 --[[ @ 0]]
LobbyVM.OnLobbyAsyncMatchmakerStart = function ( f95_arg0 )
	if Lobby.ProcessQueue.GetCurrentRunningProcessName() ~= "FindWarZoneServer" and Engine[@"currentsessionmode"]() == Enum[@"emodes"][@"mode_warzone"] then
		Lobby.ProcessQueue.AddToQueue( "FindWarZoneServer", Lobby.Process.AsyncMatchmakingStartAsyncMatchmaker( f95_arg0.controller ) ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
LobbyVM.OnLobbyAsyncMatchmakerRedeploy = function ( f96_arg0 )
	if Lobby.ProcessQueue.GetCurrentRunningProcessName() ~= "Redeploy" and Engine[@"currentsessionmode"]() == Enum[@"emodes"][@"mode_warzone"] then
		Lobby.ProcessQueue.AddToQueue( "Redeploy", Lobby.Process.AsyncMatchmakingStartAsyncMatchmaker( f96_arg0.controller ) ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
LobbyVM.TestFFOTDFnOverride = function ()
	Engine[@"printerror"]( Enum[@"consolelabel_e"][@"con_label_live"], "Failed to override Lobby VM funtion from FFOTD.\n" ) --[[ @ 0]]
	error( "Failed to override Lobby VM funtion from FFOTD." ) --[[ @ 0]]
end
 --[[ @ 0]]
require( "lua/lobby/lobbyevents" ) --[[ @ 0]]
