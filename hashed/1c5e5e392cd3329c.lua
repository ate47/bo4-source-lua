-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:33
CoD.AmmoWidget_AmmoCaliber = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.AmmoWidget_AmmoCaliber.__defaultWidth = 164 --[[ @ 0]]
CoD.AmmoWidget_AmmoCaliber.__defaultHeight = 14 --[[ @ 0]]
CoD.AmmoWidget_AmmoCaliber.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.AmmoWidget_AmmoCaliber ) --[[ @ 0]]
	self.id = "AmmoWidget_AmmoCaliber" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local ammoType = LUI.UIText.new( 0, 0, 0, 164, 0, 0, 0, 14 ) --[[ @ 0]]
	ammoType:setRGB( 0.73, 0.71, 0.64 ) --[[ @ 0]]
	ammoType:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	ammoType:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_90D57B1E92D39D7" ) ) --[[ @ 0]]
	ammoType:setShaderVector( 0, 1, 0, 0, 0 ) --[[ @ 0]]
	ammoType:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	ammoType:setShaderVector( 2, 0.8, 0.8, 0.8, 0.3 ) --[[ @ 0]]
	ammoType:setLetterSpacing( 1 ) --[[ @ 0]]
	ammoType:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	ammoType:linkToElementModel( self, "ammoCaliberName", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			ammoType:setText( Engine[@"hash_4F9F1239CFD921FE"]( f2_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( ammoType ) --[[ @ 0]]
	self.ammoType = ammoType --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "WZ",
			condition = function ( menu, element, event )
				return IsWarzone()
			end
		}
	} ) --[[ @ 0]]
	local f1_local2 = self --[[ @ 0]]
	local f1_local3 = self.subscribeToModel --[[ @ 0]]
	local f1_local4 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local3( f1_local2, f1_local4["lobbyRoot.lobbyNav"], function ( f4_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f4_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.AmmoWidget_AmmoCaliber.__resetProperties = function ( f5_arg0 )
	f5_arg0.ammoType:completeAnimation() --[[ @ 0]]
	f5_arg0.ammoType:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.AmmoWidget_AmmoCaliber.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f6_arg0, f6_arg1 )
			f6_arg0:__resetProperties() --[[ @ 0]]
			f6_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f6_arg0.ammoType:completeAnimation() --[[ @ 0]]
			f6_arg0.ammoType:setAlpha( 0 ) --[[ @ 0]]
			f6_arg0.clipFinished( f6_arg0.ammoType ) --[[ @ 0]]
		end
	},
	WZ = {
		DefaultClip = function ( f7_arg0, f7_arg1 )
			f7_arg0:__resetProperties() --[[ @ 0]]
			f7_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.AmmoWidget_AmmoCaliber.__onClose = function ( f8_arg0 )
	f8_arg0.ammoType:close() --[[ @ 0]]
end
 --[[ @ 0]]
