-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:33
require( "x64:23e426332d66c91e" ) --[[ @ 0]]
require( "ui/uieditor/widgets/director/directorselectbuttonlines" ) --[[ @ 0]]

CoD.codcaster_color_element = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.codcaster_color_element.__defaultWidth = 75 --[[ @ 0]]
CoD.codcaster_color_element.__defaultHeight = 75 --[[ @ 0]]
CoD.codcaster_color_element.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.codcaster_color_element ) --[[ @ 0]]
	self.id = "codcaster_color_element" --[[ @ 0]]
	self.soundSet = "SelectColor_ColorSwatchPicker" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local backgroundBlurDisabled = LUI.UIImage.new( 0.21, 0.79, 0, 0, 0, 0, 28, 84 ) --[[ @ 0]]
	backgroundBlurDisabled:setRGB( 0, 0, 0 ) --[[ @ 0]]
	backgroundBlurDisabled:setAlpha( 0 ) --[[ @ 0]]
	backgroundBlurDisabled:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_E2354BE557C4C7A" ) ) --[[ @ 0]]
	backgroundBlurDisabled:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( backgroundBlurDisabled ) --[[ @ 0]]
	self.backgroundBlurDisabled = backgroundBlurDisabled --[[ @ 0]]
	
	local ButtonDisabled = LUI.UIImage.new( 0.5, 0.5, -45, 45, 0.5, 0.5, -31, 31 ) --[[ @ 0]]
	ButtonDisabled:setAlpha( 0 ) --[[ @ 0]]
	ButtonDisabled:setImage( RegisterImage( @"uie_ui_menu_cac_attachment_button_disabled" ) ) --[[ @ 0]]
	self:addElement( ButtonDisabled ) --[[ @ 0]]
	self.ButtonDisabled = ButtonDisabled --[[ @ 0]]
	
	local FocusGlow = LUI.UIImage.new( 0, 1, -49, 49, 0, 1, -51, 51 ) --[[ @ 0]]
	FocusGlow:setAlpha( 0 ) --[[ @ 0]]
	FocusGlow:setImage( RegisterImage( @"uie_ui_menu_common_focus_glow_small" ) ) --[[ @ 0]]
	FocusGlow:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_6DAB59B2CAE01851" ) ) --[[ @ 0]]
	FocusGlow:setShaderVector( 0, 0, 0, 0.25, 0.25 ) --[[ @ 0]]
	FocusGlow:setShaderVector( 1, 1.2, 0, 0, 0 ) --[[ @ 0]]
	FocusGlow:setupNineSliceShader( 100, 100 ) --[[ @ 0]]
	self:addElement( FocusGlow ) --[[ @ 0]]
	self.FocusGlow = FocusGlow --[[ @ 0]]
	
	local colorElement = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	colorElement:linkToElementModel( self, "color", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			colorElement:setRGB( f2_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( colorElement ) --[[ @ 0]]
	self.colorElement = colorElement --[[ @ 0]]
	
	local FrameBorder = LUI.UIImage.new( 0, 1, -1, 1, 0, 1, -1, 1 ) --[[ @ 0]]
	FrameBorder:setAlpha( 0.15 ) --[[ @ 0]]
	FrameBorder:setImage( RegisterImage( @"uie_ui_menu_store_common_frame" ) ) --[[ @ 0]]
	FrameBorder:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_add" ) ) --[[ @ 0]]
	FrameBorder:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	FrameBorder:setupNineSliceShader( 12, 12 ) --[[ @ 0]]
	self:addElement( FrameBorder ) --[[ @ 0]]
	self.FrameBorder = FrameBorder --[[ @ 0]]
	
	local Lines = CoD.DirectorSelectButtonLines.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 1, 1, -1 ) --[[ @ 0]]
	Lines:setRGB( 0.64, 0.71, 0.78 ) --[[ @ 0]]
	self:addElement( Lines ) --[[ @ 0]]
	self.Lines = Lines --[[ @ 0]]
	
	local FocusBorder = LUI.UIImage.new( 0, 1, -4, 4, 0, 1, -3, 3 ) --[[ @ 0]]
	FocusBorder:setRGB( 0.96, 0.94, 0.78 ) --[[ @ 0]]
	FocusBorder:setAlpha( 0 ) --[[ @ 0]]
	FocusBorder:setImage( RegisterImage( @"uie_ui_menu_store_focus_frame" ) ) --[[ @ 0]]
	FocusBorder:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_add" ) ) --[[ @ 0]]
	FocusBorder:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	FocusBorder:setupNineSliceShader( 10, 10 ) --[[ @ 0]]
	self:addElement( FocusBorder ) --[[ @ 0]]
	self.FocusBorder = FocusBorder --[[ @ 0]]
	
	local FocusBrackets = CoD.CommonFocusBrackets.new( f1_arg0, f1_arg1, 0, 1, -10, 10, 0, 1, -10, 10 ) --[[ @ 0]]
	FocusBrackets:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( FocusBrackets ) --[[ @ 0]]
	self.FocusBrackets = FocusBrackets --[[ @ 0]]
	
	local BGGlow = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	BGGlow:setAlpha( 0 ) --[[ @ 0]]
	BGGlow:setImage( RegisterImage( @"uie_ui_menu_common_button_bg_glow_large" ) ) --[[ @ 0]]
	BGGlow:setMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	self:addElement( BGGlow ) --[[ @ 0]]
	self.BGGlow = BGGlow --[[ @ 0]]
	
	local BGDotPatternLarge = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	BGDotPatternLarge:setAlpha( 0.02 ) --[[ @ 0]]
	BGDotPatternLarge:setImage( RegisterImage( @"hash_7FC21A8215EA012B" ) ) --[[ @ 0]]
	BGDotPatternLarge:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_16CBE95C250C6D15" ) ) --[[ @ 0]]
	BGDotPatternLarge:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	BGDotPatternLarge:setupNineSliceShader( 4, 4 ) --[[ @ 0]]
	self:addElement( BGDotPatternLarge ) --[[ @ 0]]
	self.BGDotPatternLarge = BGDotPatternLarge --[[ @ 0]]
	
	local EquippedMarkerTick = LUI.UIImage.new( 1, 1, -38, 6, 0, 0, -6, 38 ) --[[ @ 0]]
	EquippedMarkerTick:setAlpha( 0 ) --[[ @ 0]]
	EquippedMarkerTick:setZoom( 4 ) --[[ @ 0]]
	EquippedMarkerTick:setImage( RegisterImage( @"uie_ui_menu_cac_equipped_marker_tick" ) ) --[[ @ 0]]
	self:addElement( EquippedMarkerTick ) --[[ @ 0]]
	self.EquippedMarkerTick = EquippedMarkerTick --[[ @ 0]]
	
	local EquippedMarkerBG = LUI.UIImage.new( 1, 1, -38, 6, 0, 0, -6, 38 ) --[[ @ 0]]
	EquippedMarkerBG:setAlpha( 0 ) --[[ @ 0]]
	EquippedMarkerBG:setZoom( 4 ) --[[ @ 0]]
	EquippedMarkerBG:setImage( RegisterImage( @"uie_ui_menu_cac_equipped_marker_bg" ) ) --[[ @ 0]]
	EquippedMarkerBG:setMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	self:addElement( EquippedMarkerBG ) --[[ @ 0]]
	self.EquippedMarkerBG = EquippedMarkerBG --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Selected",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg1, "selected" )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "selected", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "selected"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.codcaster_color_element.__resetProperties = function ( f5_arg0 )
	f5_arg0.FocusBorder:completeAnimation() --[[ @ 0]]
	f5_arg0.FocusBrackets:completeAnimation() --[[ @ 0]]
	f5_arg0.FocusGlow:completeAnimation() --[[ @ 0]]
	f5_arg0.EquippedMarkerTick:completeAnimation() --[[ @ 0]]
	f5_arg0.EquippedMarkerBG:completeAnimation() --[[ @ 0]]
	f5_arg0.FocusBorder:setAlpha( 0 ) --[[ @ 0]]
	f5_arg0.FocusBrackets:setLeftRight( 0, 1, -10, 10 ) --[[ @ 0]]
	f5_arg0.FocusBrackets:setTopBottom( 0, 1, -10, 10 ) --[[ @ 0]]
	f5_arg0.FocusBrackets:setAlpha( 0 ) --[[ @ 0]]
	f5_arg0.FocusGlow:setLeftRight( 0, 1, -49, 49 ) --[[ @ 0]]
	f5_arg0.FocusGlow:setTopBottom( 0, 1, -51, 51 ) --[[ @ 0]]
	f5_arg0.FocusGlow:setAlpha( 0 ) --[[ @ 0]]
	f5_arg0.EquippedMarkerTick:setAlpha( 0 ) --[[ @ 0]]
	f5_arg0.EquippedMarkerBG:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.codcaster_color_element.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f6_arg0, f6_arg1 )
			f6_arg0:__resetProperties() --[[ @ 0]]
			f6_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end,
		Focus = function ( f7_arg0, f7_arg1 )
			f7_arg0:__resetProperties() --[[ @ 0]]
			f7_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f7_arg0.FocusGlow:completeAnimation() --[[ @ 0]]
			f7_arg0.FocusGlow:setLeftRight( 0, 1, -36, 36 ) --[[ @ 0]]
			f7_arg0.FocusGlow:setTopBottom( 0, 1, -35, 35 ) --[[ @ 0]]
			f7_arg0.FocusGlow:setAlpha( 1 ) --[[ @ 0]]
			f7_arg0.clipFinished( f7_arg0.FocusGlow ) --[[ @ 0]]
			f7_arg0.FocusBorder:completeAnimation() --[[ @ 0]]
			f7_arg0.FocusBorder:setAlpha( 1 ) --[[ @ 0]]
			f7_arg0.clipFinished( f7_arg0.FocusBorder ) --[[ @ 0]]
			f7_arg0.FocusBrackets:completeAnimation() --[[ @ 0]]
			f7_arg0.FocusBrackets:setAlpha( 1 ) --[[ @ 0]]
			f7_arg0.clipFinished( f7_arg0.FocusBrackets ) --[[ @ 0]]
		end,
		GainFocus = function ( f8_arg0, f8_arg1 )
			f8_arg0:__resetProperties() --[[ @ 0]]
			f8_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			local f8_local0 = function ( f9_arg0 )
				f8_arg0.FocusGlow:beginAnimation( 200 ) --[[ @ 0]]
				f8_arg0.FocusGlow:setAlpha( 1 ) --[[ @ 0]]
				f8_arg0.FocusGlow:registerEventHandler( "interrupted_keyframe", f8_arg0.clipInterrupted ) --[[ @ 0]]
				f8_arg0.FocusGlow:registerEventHandler( "transition_complete_keyframe", f8_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f8_arg0.FocusGlow:completeAnimation() --[[ @ 0]]
			f8_arg0.FocusGlow:setLeftRight( 0, 1, -36, 36 ) --[[ @ 0]]
			f8_arg0.FocusGlow:setTopBottom( 0, 1, -35, 35 ) --[[ @ 0]]
			f8_arg0.FocusGlow:setAlpha( 0 ) --[[ @ 0]]
			f8_local0( f8_arg0.FocusGlow ) --[[ @ 0]]
			local f8_local1 = function ( f10_arg0 )
				f8_arg0.FocusBorder:beginAnimation( 200 ) --[[ @ 0]]
				f8_arg0.FocusBorder:setAlpha( 1 ) --[[ @ 0]]
				f8_arg0.FocusBorder:registerEventHandler( "interrupted_keyframe", f8_arg0.clipInterrupted ) --[[ @ 0]]
				f8_arg0.FocusBorder:registerEventHandler( "transition_complete_keyframe", f8_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f8_arg0.FocusBorder:completeAnimation() --[[ @ 0]]
			f8_arg0.FocusBorder:setAlpha( 0 ) --[[ @ 0]]
			f8_local1( f8_arg0.FocusBorder ) --[[ @ 0]]
			local f8_local2 = function ( f11_arg0 )
				f8_arg0.FocusBrackets:beginAnimation( 200 ) --[[ @ 0]]
				f8_arg0.FocusBrackets:setLeftRight( 0, 1, -10, 10 ) --[[ @ 0]]
				f8_arg0.FocusBrackets:setTopBottom( 0, 1, -10, 10 ) --[[ @ 0]]
				f8_arg0.FocusBrackets:setAlpha( 1 ) --[[ @ 0]]
				f8_arg0.FocusBrackets:registerEventHandler( "interrupted_keyframe", f8_arg0.clipInterrupted ) --[[ @ 0]]
				f8_arg0.FocusBrackets:registerEventHandler( "transition_complete_keyframe", f8_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f8_arg0.FocusBrackets:completeAnimation() --[[ @ 0]]
			f8_arg0.FocusBrackets:setLeftRight( 0, 1, -20, 20 ) --[[ @ 0]]
			f8_arg0.FocusBrackets:setTopBottom( 0, 1, -20, 20 ) --[[ @ 0]]
			f8_arg0.FocusBrackets:setAlpha( 0 ) --[[ @ 0]]
			f8_local2( f8_arg0.FocusBrackets ) --[[ @ 0]]
		end,
		LoseFocus = function ( f12_arg0, f12_arg1 )
			f12_arg0:__resetProperties() --[[ @ 0]]
			f12_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			local f12_local0 = function ( f13_arg0 )
				f12_arg0.FocusGlow:beginAnimation( 100 ) --[[ @ 0]]
				f12_arg0.FocusGlow:setAlpha( 0 ) --[[ @ 0]]
				f12_arg0.FocusGlow:registerEventHandler( "interrupted_keyframe", f12_arg0.clipInterrupted ) --[[ @ 0]]
				f12_arg0.FocusGlow:registerEventHandler( "transition_complete_keyframe", f12_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f12_arg0.FocusGlow:completeAnimation() --[[ @ 0]]
			f12_arg0.FocusGlow:setLeftRight( 0, 1, -36, 36 ) --[[ @ 0]]
			f12_arg0.FocusGlow:setTopBottom( 0, 1, -35, 35 ) --[[ @ 0]]
			f12_arg0.FocusGlow:setAlpha( 1 ) --[[ @ 0]]
			f12_local0( f12_arg0.FocusGlow ) --[[ @ 0]]
			local f12_local1 = function ( f14_arg0 )
				f12_arg0.FocusBorder:beginAnimation( 100 ) --[[ @ 0]]
				f12_arg0.FocusBorder:setAlpha( 0 ) --[[ @ 0]]
				f12_arg0.FocusBorder:registerEventHandler( "interrupted_keyframe", f12_arg0.clipInterrupted ) --[[ @ 0]]
				f12_arg0.FocusBorder:registerEventHandler( "transition_complete_keyframe", f12_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f12_arg0.FocusBorder:completeAnimation() --[[ @ 0]]
			f12_arg0.FocusBorder:setAlpha( 1 ) --[[ @ 0]]
			f12_local1( f12_arg0.FocusBorder ) --[[ @ 0]]
			local f12_local2 = function ( f15_arg0 )
				f12_arg0.FocusBrackets:beginAnimation( 100 ) --[[ @ 0]]
				f12_arg0.FocusBrackets:setLeftRight( 0, 1, -20, 20 ) --[[ @ 0]]
				f12_arg0.FocusBrackets:setTopBottom( 0, 1, -20, 20 ) --[[ @ 0]]
				f12_arg0.FocusBrackets:setAlpha( 0 ) --[[ @ 0]]
				f12_arg0.FocusBrackets:registerEventHandler( "interrupted_keyframe", f12_arg0.clipInterrupted ) --[[ @ 0]]
				f12_arg0.FocusBrackets:registerEventHandler( "transition_complete_keyframe", f12_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f12_arg0.FocusBrackets:completeAnimation() --[[ @ 0]]
			f12_arg0.FocusBrackets:setLeftRight( 0, 1, -10, 10 ) --[[ @ 0]]
			f12_arg0.FocusBrackets:setTopBottom( 0, 1, -10, 10 ) --[[ @ 0]]
			f12_arg0.FocusBrackets:setAlpha( 1 ) --[[ @ 0]]
			f12_local2( f12_arg0.FocusBrackets ) --[[ @ 0]]
		end
	},
	Selected = {
		DefaultClip = function ( f16_arg0, f16_arg1 )
			f16_arg0:__resetProperties() --[[ @ 0]]
			f16_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f16_arg0.EquippedMarkerTick:completeAnimation() --[[ @ 0]]
			f16_arg0.EquippedMarkerTick:setAlpha( 1 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.EquippedMarkerTick ) --[[ @ 0]]
			f16_arg0.EquippedMarkerBG:completeAnimation() --[[ @ 0]]
			f16_arg0.EquippedMarkerBG:setAlpha( 1 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.EquippedMarkerBG ) --[[ @ 0]]
		end,
		Focus = function ( f17_arg0, f17_arg1 )
			f17_arg0:__resetProperties() --[[ @ 0]]
			f17_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f17_arg0.FocusBorder:completeAnimation() --[[ @ 0]]
			f17_arg0.FocusBorder:setAlpha( 1 ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.FocusBorder ) --[[ @ 0]]
			f17_arg0.FocusBrackets:completeAnimation() --[[ @ 0]]
			f17_arg0.FocusBrackets:setAlpha( 1 ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.FocusBrackets ) --[[ @ 0]]
			f17_arg0.EquippedMarkerTick:completeAnimation() --[[ @ 0]]
			f17_arg0.EquippedMarkerTick:setAlpha( 1 ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.EquippedMarkerTick ) --[[ @ 0]]
			f17_arg0.EquippedMarkerBG:completeAnimation() --[[ @ 0]]
			f17_arg0.EquippedMarkerBG:setAlpha( 1 ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.EquippedMarkerBG ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.codcaster_color_element.__onClose = function ( f18_arg0 )
	f18_arg0.colorElement:close() --[[ @ 0]]
	f18_arg0.Lines:close() --[[ @ 0]]
	f18_arg0.FocusBrackets:close() --[[ @ 0]]
end
 --[[ @ 0]]
