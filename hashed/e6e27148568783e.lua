-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:35
require( "x64:2a64a3cc00bddbfa" ) --[[ @ 0]]
require( "x64:3e78e80d32559e2a" ) --[[ @ 0]]
require( "x64:66f694d60ec64699" ) --[[ @ 0]]
require( "x64:6fd6432d26a0a682" ) --[[ @ 0]]
require( "x64:3dc874d6188ab7d0" ) --[[ @ 0]]
require( "x64:7d46b57f9867ec93" ) --[[ @ 0]]
require( "x64:2f106f8df9c638b3" ) --[[ @ 0]]
require( "x64:2d361ac3553c22a" ) --[[ @ 0]]

CoD.AARTierRewardShowcase = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.AARTierRewardShowcase.__defaultWidth = 310 --[[ @ 0]]
CoD.AARTierRewardShowcase.__defaultHeight = 631 --[[ @ 0]]
CoD.AARTierRewardShowcase.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.AARTierRewardShowcase ) --[[ @ 0]]
	self.id = "AARTierRewardShowcase" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local RewardCommon = CoD.AARTierRewardShowcaseInternalCommon.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	RewardCommon:linkToElementModel( self, nil, false, function ( model )
		RewardCommon:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( RewardCommon ) --[[ @ 0]]
	self.RewardCommon = RewardCommon --[[ @ 0]]
	
	local RewardRare = CoD.AARTierRewardShowcaseInternalRare.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	RewardRare:setAlpha( 0 ) --[[ @ 0]]
	RewardRare:linkToElementModel( self, nil, false, function ( model )
		RewardRare:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( RewardRare ) --[[ @ 0]]
	self.RewardRare = RewardRare --[[ @ 0]]
	
	local RewardLegendary = CoD.AARTierRewardShowcaseInternalLegendary.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	RewardLegendary:setAlpha( 0 ) --[[ @ 0]]
	RewardLegendary:linkToElementModel( self, nil, false, function ( model )
		RewardLegendary:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( RewardLegendary ) --[[ @ 0]]
	self.RewardLegendary = RewardLegendary --[[ @ 0]]
	
	local RewardEpic = CoD.AARTierRewardShowcaseInternalEpic.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	RewardEpic:setAlpha( 0 ) --[[ @ 0]]
	RewardEpic:linkToElementModel( self, nil, false, function ( model )
		RewardEpic:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( RewardEpic ) --[[ @ 0]]
	self.RewardEpic = RewardEpic --[[ @ 0]]
	
	local RewardUltra = CoD.AARTierRewardShowcaseInternalUltra.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	RewardUltra:setAlpha( 0 ) --[[ @ 0]]
	RewardUltra:linkToElementModel( self, nil, false, function ( model )
		RewardUltra:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( RewardUltra ) --[[ @ 0]]
	self.RewardUltra = RewardUltra --[[ @ 0]]
	
	local RewardContraband = CoD.AARTierRewardShowcaseInternalContraband.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	RewardContraband:setAlpha( 0 ) --[[ @ 0]]
	RewardContraband:linkToElementModel( self, nil, false, function ( model )
		RewardContraband:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( RewardContraband ) --[[ @ 0]]
	self.RewardContraband = RewardContraband --[[ @ 0]]
	
	local AARTierRewardFocusIndicator = CoD.AARTierRewardFocusIndicator.new( f1_arg0, f1_arg1, 0.5, 0.5, -155, 155, 0, 0, -8, -3 ) --[[ @ 0]]
	AARTierRewardFocusIndicator:mergeStateConditions( {
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return not CoD.ModelUtility.IsGlobalDataSourceModelValueTrue( f1_arg1, "AARTierReward", "allAnimationsFinished" )
			end
		}
	} ) --[[ @ 0]]
	local f1_local8 = AARTierRewardFocusIndicator --[[ @ 0]]
	local TrialWidget = AARTierRewardFocusIndicator.subscribeToModel --[[ @ 0]]
	local f1_local10 = DataSources.AARTierReward.getModel( f1_arg1 ) --[[ @ 0]]
	TrialWidget( f1_local8, f1_local10.allAnimationsFinished, function ( f9_arg0 )
		f1_arg0:updateElementState( AARTierRewardFocusIndicator, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f9_arg0:get(),
			modelName = "allAnimationsFinished"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AARTierRewardFocusIndicator:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( AARTierRewardFocusIndicator ) --[[ @ 0]]
	self.AARTierRewardFocusIndicator = AARTierRewardFocusIndicator --[[ @ 0]]
	
	TrialWidget = CoD.TrialWidget.new( f1_arg0, f1_arg1, 0, 0, 9, 34, 0, 0, 8, 33 ) --[[ @ 0]]
	TrialWidget:mergeStateConditions( {
		{
			stateName = "Shown",
			condition = function ( menu, element, event )
				return IsGameTrial() and CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg1, "unlocked" )
			end
		}
	} ) --[[ @ 0]]
	TrialWidget:linkToElementModel( TrialWidget, "unlocked", true, function ( model )
		f1_arg0:updateElementState( TrialWidget, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "unlocked"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	TrialWidget:linkToElementModel( self, nil, false, function ( model )
		TrialWidget:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( TrialWidget ) --[[ @ 0]]
	self.TrialWidget = TrialWidget --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Contraband",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg1, "isContrabandCrate" )
			end
		},
		{
			stateName = "Ultra",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualToEnum( element, f1_arg1, "rarity", Enum[@"LootRarityType"][@"hash_63006FE890A202D9"] )
			end
		},
		{
			stateName = "Epic",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualToEnum( element, f1_arg1, "rarity", Enum[@"LootRarityType"][@"hash_10C3B1CFA5096734"] )
			end
		},
		{
			stateName = "Legendary",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualToEnum( element, f1_arg1, "rarity", Enum[@"LootRarityType"][@"hash_535E4133DEF6B806"] )
			end
		},
		{
			stateName = "Rare",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualToEnum( element, f1_arg1, "rarity", Enum[@"LootRarityType"][@"hash_4895F040FAFBECB9"] )
			end
		},
		{
			stateName = "Common",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualToEnum( element, f1_arg1, "rarity", Enum[@"LootRarityType"][@"hash_FA11ABBEBCE1980"] )
			end
		},
		{
			stateName = "Empty",
			condition = function ( menu, element, event )
				return AlwaysTrue()
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "isContrabandCrate", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "isContrabandCrate"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:linkToElementModel( self, "rarity", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "rarity"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.AARTierRewardShowcase.__resetProperties = function ( f22_arg0 )
	f22_arg0.RewardCommon:completeAnimation() --[[ @ 0]]
	f22_arg0.RewardUltra:completeAnimation() --[[ @ 0]]
	f22_arg0.RewardEpic:completeAnimation() --[[ @ 0]]
	f22_arg0.RewardLegendary:completeAnimation() --[[ @ 0]]
	f22_arg0.RewardRare:completeAnimation() --[[ @ 0]]
	f22_arg0.TrialWidget:completeAnimation() --[[ @ 0]]
	f22_arg0.RewardContraband:completeAnimation() --[[ @ 0]]
	f22_arg0.AARTierRewardFocusIndicator:completeAnimation() --[[ @ 0]]
	f22_arg0.RewardCommon:setAlpha( 1 ) --[[ @ 0]]
	f22_arg0.RewardCommon:setScale( 1, 1 ) --[[ @ 0]]
	f22_arg0.RewardUltra:setAlpha( 0 ) --[[ @ 0]]
	f22_arg0.RewardUltra:setScale( 1, 1 ) --[[ @ 0]]
	f22_arg0.RewardEpic:setAlpha( 0 ) --[[ @ 0]]
	f22_arg0.RewardEpic:setScale( 1, 1 ) --[[ @ 0]]
	f22_arg0.RewardLegendary:setAlpha( 0 ) --[[ @ 0]]
	f22_arg0.RewardLegendary:setScale( 1, 1 ) --[[ @ 0]]
	f22_arg0.RewardRare:setAlpha( 0 ) --[[ @ 0]]
	f22_arg0.RewardRare:setScale( 1, 1 ) --[[ @ 0]]
	f22_arg0.TrialWidget:setAlpha( 1 ) --[[ @ 0]]
	f22_arg0.RewardContraband:setAlpha( 0 ) --[[ @ 0]]
	f22_arg0.AARTierRewardFocusIndicator:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.AARTierRewardShowcase.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f23_arg0, f23_arg1 )
			f23_arg0:__resetProperties() --[[ @ 0]]
			f23_arg0:setupElementClipCounter( 6 ) --[[ @ 0]]
			f23_arg0.RewardCommon:completeAnimation() --[[ @ 0]]
			f23_arg0.RewardCommon:setAlpha( 0 ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.RewardCommon ) --[[ @ 0]]
			f23_arg0.RewardRare:completeAnimation() --[[ @ 0]]
			f23_arg0.RewardRare:setAlpha( 0 ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.RewardRare ) --[[ @ 0]]
			f23_arg0.RewardLegendary:completeAnimation() --[[ @ 0]]
			f23_arg0.RewardLegendary:setAlpha( 0 ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.RewardLegendary ) --[[ @ 0]]
			f23_arg0.RewardEpic:completeAnimation() --[[ @ 0]]
			f23_arg0.RewardEpic:setAlpha( 0 ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.RewardEpic ) --[[ @ 0]]
			f23_arg0.RewardUltra:completeAnimation() --[[ @ 0]]
			f23_arg0.RewardUltra:setAlpha( 0 ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.RewardUltra ) --[[ @ 0]]
			f23_arg0.TrialWidget:completeAnimation() --[[ @ 0]]
			f23_arg0.TrialWidget:setAlpha( 0 ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.TrialWidget ) --[[ @ 0]]
		end
	},
	Contraband = {
		DefaultClip = function ( f24_arg0, f24_arg1 )
			f24_arg0:__resetProperties() --[[ @ 0]]
			f24_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f24_arg0.RewardCommon:completeAnimation() --[[ @ 0]]
			f24_arg0.RewardCommon:setAlpha( 0 ) --[[ @ 0]]
			f24_arg0.clipFinished( f24_arg0.RewardCommon ) --[[ @ 0]]
			f24_arg0.RewardContraband:completeAnimation() --[[ @ 0]]
			f24_arg0.RewardContraband:setAlpha( 1 ) --[[ @ 0]]
			f24_arg0.clipFinished( f24_arg0.RewardContraband ) --[[ @ 0]]
		end,
		Focus = function ( f25_arg0, f25_arg1 )
			f25_arg0:__resetProperties() --[[ @ 0]]
			f25_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f25_arg0.RewardCommon:completeAnimation() --[[ @ 0]]
			f25_arg0.RewardCommon:setAlpha( 0 ) --[[ @ 0]]
			f25_arg0.clipFinished( f25_arg0.RewardCommon ) --[[ @ 0]]
			f25_arg0.RewardContraband:completeAnimation() --[[ @ 0]]
			f25_arg0.RewardContraband:setAlpha( 1 ) --[[ @ 0]]
			f25_arg0.clipFinished( f25_arg0.RewardContraband ) --[[ @ 0]]
			f25_arg0.AARTierRewardFocusIndicator:completeAnimation() --[[ @ 0]]
			f25_arg0.AARTierRewardFocusIndicator:setAlpha( 1 ) --[[ @ 0]]
			f25_arg0.clipFinished( f25_arg0.AARTierRewardFocusIndicator ) --[[ @ 0]]
		end
	},
	Ultra = {
		DefaultClip = function ( f26_arg0, f26_arg1 )
			f26_arg0:__resetProperties() --[[ @ 0]]
			f26_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f26_arg0.RewardCommon:completeAnimation() --[[ @ 0]]
			f26_arg0.RewardCommon:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.RewardCommon ) --[[ @ 0]]
			f26_arg0.RewardUltra:completeAnimation() --[[ @ 0]]
			f26_arg0.RewardUltra:setAlpha( 1 ) --[[ @ 0]]
			f26_arg0.RewardUltra:setScale( 1, 1 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.RewardUltra ) --[[ @ 0]]
		end,
		Focus = function ( f27_arg0, f27_arg1 )
			f27_arg0:__resetProperties() --[[ @ 0]]
			f27_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f27_arg0.RewardCommon:completeAnimation() --[[ @ 0]]
			f27_arg0.RewardCommon:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.RewardCommon ) --[[ @ 0]]
			f27_arg0.RewardUltra:completeAnimation() --[[ @ 0]]
			f27_arg0.RewardUltra:setAlpha( 1 ) --[[ @ 0]]
			f27_arg0.RewardUltra:setScale( 1, 1 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.RewardUltra ) --[[ @ 0]]
			f27_arg0.AARTierRewardFocusIndicator:completeAnimation() --[[ @ 0]]
			f27_arg0.AARTierRewardFocusIndicator:setAlpha( 1 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.AARTierRewardFocusIndicator ) --[[ @ 0]]
		end
	},
	Epic = {
		DefaultClip = function ( f28_arg0, f28_arg1 )
			f28_arg0:__resetProperties() --[[ @ 0]]
			f28_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f28_arg0.RewardCommon:completeAnimation() --[[ @ 0]]
			f28_arg0.RewardCommon:setAlpha( 0 ) --[[ @ 0]]
			f28_arg0.clipFinished( f28_arg0.RewardCommon ) --[[ @ 0]]
			f28_arg0.RewardEpic:completeAnimation() --[[ @ 0]]
			f28_arg0.RewardEpic:setAlpha( 1 ) --[[ @ 0]]
			f28_arg0.RewardEpic:setScale( 1, 1 ) --[[ @ 0]]
			f28_arg0.clipFinished( f28_arg0.RewardEpic ) --[[ @ 0]]
		end,
		Focus = function ( f29_arg0, f29_arg1 )
			f29_arg0:__resetProperties() --[[ @ 0]]
			f29_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f29_arg0.RewardCommon:completeAnimation() --[[ @ 0]]
			f29_arg0.RewardCommon:setAlpha( 0 ) --[[ @ 0]]
			f29_arg0.clipFinished( f29_arg0.RewardCommon ) --[[ @ 0]]
			f29_arg0.RewardEpic:completeAnimation() --[[ @ 0]]
			f29_arg0.RewardEpic:setAlpha( 1 ) --[[ @ 0]]
			f29_arg0.RewardEpic:setScale( 1, 1 ) --[[ @ 0]]
			f29_arg0.clipFinished( f29_arg0.RewardEpic ) --[[ @ 0]]
			f29_arg0.AARTierRewardFocusIndicator:completeAnimation() --[[ @ 0]]
			f29_arg0.AARTierRewardFocusIndicator:setAlpha( 1 ) --[[ @ 0]]
			f29_arg0.clipFinished( f29_arg0.AARTierRewardFocusIndicator ) --[[ @ 0]]
		end
	},
	Legendary = {
		DefaultClip = function ( f30_arg0, f30_arg1 )
			f30_arg0:__resetProperties() --[[ @ 0]]
			f30_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f30_arg0.RewardCommon:completeAnimation() --[[ @ 0]]
			f30_arg0.RewardCommon:setAlpha( 0 ) --[[ @ 0]]
			f30_arg0.clipFinished( f30_arg0.RewardCommon ) --[[ @ 0]]
			f30_arg0.RewardLegendary:completeAnimation() --[[ @ 0]]
			f30_arg0.RewardLegendary:setAlpha( 1 ) --[[ @ 0]]
			f30_arg0.RewardLegendary:setScale( 1, 1 ) --[[ @ 0]]
			f30_arg0.clipFinished( f30_arg0.RewardLegendary ) --[[ @ 0]]
		end,
		Focus = function ( f31_arg0, f31_arg1 )
			f31_arg0:__resetProperties() --[[ @ 0]]
			f31_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f31_arg0.RewardCommon:completeAnimation() --[[ @ 0]]
			f31_arg0.RewardCommon:setAlpha( 0 ) --[[ @ 0]]
			f31_arg0.clipFinished( f31_arg0.RewardCommon ) --[[ @ 0]]
			f31_arg0.RewardLegendary:completeAnimation() --[[ @ 0]]
			f31_arg0.RewardLegendary:setAlpha( 1 ) --[[ @ 0]]
			f31_arg0.RewardLegendary:setScale( 1, 1 ) --[[ @ 0]]
			f31_arg0.clipFinished( f31_arg0.RewardLegendary ) --[[ @ 0]]
			f31_arg0.AARTierRewardFocusIndicator:completeAnimation() --[[ @ 0]]
			f31_arg0.AARTierRewardFocusIndicator:setAlpha( 1 ) --[[ @ 0]]
			f31_arg0.clipFinished( f31_arg0.AARTierRewardFocusIndicator ) --[[ @ 0]]
		end
	},
	Rare = {
		DefaultClip = function ( f32_arg0, f32_arg1 )
			f32_arg0:__resetProperties() --[[ @ 0]]
			f32_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f32_arg0.RewardCommon:completeAnimation() --[[ @ 0]]
			f32_arg0.RewardCommon:setAlpha( 0 ) --[[ @ 0]]
			f32_arg0.clipFinished( f32_arg0.RewardCommon ) --[[ @ 0]]
			f32_arg0.RewardRare:completeAnimation() --[[ @ 0]]
			f32_arg0.RewardRare:setAlpha( 1 ) --[[ @ 0]]
			f32_arg0.RewardRare:setScale( 1, 1 ) --[[ @ 0]]
			f32_arg0.clipFinished( f32_arg0.RewardRare ) --[[ @ 0]]
		end,
		Focus = function ( f33_arg0, f33_arg1 )
			f33_arg0:__resetProperties() --[[ @ 0]]
			f33_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f33_arg0.RewardCommon:completeAnimation() --[[ @ 0]]
			f33_arg0.RewardCommon:setAlpha( 0 ) --[[ @ 0]]
			f33_arg0.clipFinished( f33_arg0.RewardCommon ) --[[ @ 0]]
			f33_arg0.RewardRare:completeAnimation() --[[ @ 0]]
			f33_arg0.RewardRare:setAlpha( 1 ) --[[ @ 0]]
			f33_arg0.RewardRare:setScale( 1, 1 ) --[[ @ 0]]
			f33_arg0.clipFinished( f33_arg0.RewardRare ) --[[ @ 0]]
			f33_arg0.AARTierRewardFocusIndicator:completeAnimation() --[[ @ 0]]
			f33_arg0.AARTierRewardFocusIndicator:setAlpha( 1 ) --[[ @ 0]]
			f33_arg0.clipFinished( f33_arg0.AARTierRewardFocusIndicator ) --[[ @ 0]]
		end
	},
	Common = {
		DefaultClip = function ( f34_arg0, f34_arg1 )
			f34_arg0:__resetProperties() --[[ @ 0]]
			f34_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f34_arg0.RewardCommon:completeAnimation() --[[ @ 0]]
			f34_arg0.RewardCommon:setAlpha( 1 ) --[[ @ 0]]
			f34_arg0.RewardCommon:setScale( 1, 1 ) --[[ @ 0]]
			f34_arg0.clipFinished( f34_arg0.RewardCommon ) --[[ @ 0]]
		end,
		Focus = function ( f35_arg0, f35_arg1 )
			f35_arg0:__resetProperties() --[[ @ 0]]
			f35_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f35_arg0.RewardCommon:completeAnimation() --[[ @ 0]]
			f35_arg0.RewardCommon:setAlpha( 1 ) --[[ @ 0]]
			f35_arg0.RewardCommon:setScale( 1, 1 ) --[[ @ 0]]
			f35_arg0.clipFinished( f35_arg0.RewardCommon ) --[[ @ 0]]
			f35_arg0.AARTierRewardFocusIndicator:completeAnimation() --[[ @ 0]]
			f35_arg0.AARTierRewardFocusIndicator:setAlpha( 1 ) --[[ @ 0]]
			f35_arg0.clipFinished( f35_arg0.AARTierRewardFocusIndicator ) --[[ @ 0]]
		end
	},
	Empty = {
		DefaultClip = function ( f36_arg0, f36_arg1 )
			f36_arg0:__resetProperties() --[[ @ 0]]
			f36_arg0:setupElementClipCounter( 6 ) --[[ @ 0]]
			f36_arg0.RewardCommon:completeAnimation() --[[ @ 0]]
			f36_arg0.RewardCommon:setAlpha( 0 ) --[[ @ 0]]
			f36_arg0.clipFinished( f36_arg0.RewardCommon ) --[[ @ 0]]
			f36_arg0.RewardRare:completeAnimation() --[[ @ 0]]
			f36_arg0.RewardRare:setAlpha( 0 ) --[[ @ 0]]
			f36_arg0.clipFinished( f36_arg0.RewardRare ) --[[ @ 0]]
			f36_arg0.RewardLegendary:completeAnimation() --[[ @ 0]]
			f36_arg0.RewardLegendary:setAlpha( 0 ) --[[ @ 0]]
			f36_arg0.clipFinished( f36_arg0.RewardLegendary ) --[[ @ 0]]
			f36_arg0.RewardEpic:completeAnimation() --[[ @ 0]]
			f36_arg0.RewardEpic:setAlpha( 0 ) --[[ @ 0]]
			f36_arg0.clipFinished( f36_arg0.RewardEpic ) --[[ @ 0]]
			f36_arg0.RewardUltra:completeAnimation() --[[ @ 0]]
			f36_arg0.RewardUltra:setAlpha( 0 ) --[[ @ 0]]
			f36_arg0.clipFinished( f36_arg0.RewardUltra ) --[[ @ 0]]
			f36_arg0.TrialWidget:completeAnimation() --[[ @ 0]]
			f36_arg0.TrialWidget:setAlpha( 0 ) --[[ @ 0]]
			f36_arg0.clipFinished( f36_arg0.TrialWidget ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.AARTierRewardShowcase.__onClose = function ( f37_arg0 )
	f37_arg0.RewardCommon:close() --[[ @ 0]]
	f37_arg0.RewardRare:close() --[[ @ 0]]
	f37_arg0.RewardLegendary:close() --[[ @ 0]]
	f37_arg0.RewardEpic:close() --[[ @ 0]]
	f37_arg0.RewardUltra:close() --[[ @ 0]]
	f37_arg0.RewardContraband:close() --[[ @ 0]]
	f37_arg0.AARTierRewardFocusIndicator:close() --[[ @ 0]]
	f37_arg0.TrialWidget:close() --[[ @ 0]]
end
 --[[ @ 0]]
