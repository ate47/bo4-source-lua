-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:50
require( "x64:5ebfe24f09f3e978" ) --[[ @ 0]]
require( "x64:459b8c4dd2a923d8" ) --[[ @ 0]]
require( "x64:4306f8a26f77715" ) --[[ @ 0]]

CoD.LaboratorySpecialOffers = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.LaboratorySpecialOffers.__defaultWidth = 480 --[[ @ 0]]
CoD.LaboratorySpecialOffers.__defaultHeight = 350 --[[ @ 0]]
CoD.LaboratorySpecialOffers.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.LaboratorySpecialOffers ) --[[ @ 0]]
	self.id = "LaboratorySpecialOffers" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local SpecialOffers = LUI.UIList.new( f1_arg0, f1_arg1, 16, 0, nil, false, false, false, false ) --[[ @ 0]]
	SpecialOffers:setLeftRight( 0, 0, 0, 482 ) --[[ @ 0]]
	SpecialOffers:setTopBottom( 0, 0, 62.5, 212.5 ) --[[ @ 0]]
	SpecialOffers:setWidgetType( CoD.LaboratoryListItem ) --[[ @ 0]]
	SpecialOffers:setHorizontalCount( 3 ) --[[ @ 0]]
	SpecialOffers:setSpacing( 16 ) --[[ @ 0]]
	SpecialOffers:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	SpecialOffers:setFilter( function ( f2_arg0 )
		return f2_arg0.specialOffer:get() == true
	end ) --[[ @ 0]]
	SpecialOffers:setDataSource( "ZMLaboratoryNPItemList" ) --[[ @ 0]]
	local LaboratoryOffersHeader = SpecialOffers --[[ @ 0]]
	local StoneTiledBacking = SpecialOffers.subscribeToModel --[[ @ 0]]
	local TextBox = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	StoneTiledBacking( LaboratoryOffersHeader, TextBox["Laboratory.animState"], function ( f3_arg0, f3_arg1 )
		CoD.Menu.UpdateButtonShownState( f3_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	LaboratoryOffersHeader = SpecialOffers --[[ @ 0]]
	StoneTiledBacking = SpecialOffers.subscribeToModel --[[ @ 0]]
	TextBox = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	StoneTiledBacking( LaboratoryOffersHeader, TextBox["Laboratory.disableInput"], function ( f4_arg0, f4_arg1 )
		CoD.Menu.UpdateButtonShownState( f4_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	SpecialOffers:registerEventHandler( "list_item_gain_focus", function ( element, event )
		local f5_local0 = nil --[[ @ 0]]
		CoD.ZMLaboratoryUtility.ClientScriptNotifyFocusChanged( self, element, f1_arg1, f1_arg0 ) --[[ @ 0]]
		return f5_local0
	end ) --[[ @ 0]]
	SpecialOffers:registerEventHandler( "gain_focus", function ( element, event )
		local f6_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f6_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f6_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		return f6_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( SpecialOffers, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"], nil, function ( element, menu, controller, model )
		if CoD.ModelUtility.IsModelValueEqualToEnum( controller, "Laboratory.animState", CoD.ZMLaboratoryUtility.LabAnimState.NOT_PLAYING ) and CoD.ZMLaboratoryUtility.CanPurchase( controller, element ) and CoD.ModelUtility.IsModelValueEqualTo( controller, "Laboratory.disableInput", 0 ) then
			CoD.ZMLaboratoryUtility.CacheOfferButtonModel( controller, element, menu ) --[[ @ 0]]
			ProcessListAction( self, element, controller, menu ) --[[ @ 0]]
			return true
		elseif CoD.ModelUtility.IsModelValueEqualToEnum( controller, "Laboratory.animState", CoD.ZMLaboratoryUtility.LabAnimState.NOT_PLAYING ) and not CoD.ZMLaboratoryUtility.CanPurchase( controller, element ) and CoD.ModelUtility.IsModelValueEqualTo( controller, "Laboratory.disableInput", 0 ) and IsBooleanDvarSet( "laboratory_codpoints_enabled" ) then
			CoD.ZMLaboratoryUtility.CacheOfferButtonModel( controller, element, menu ) --[[ @ 0]]
			OpenPopup( self, "PurchasePlasma", controller, element:getModel() ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if CoD.ModelUtility.IsModelValueEqualToEnum( controller, "Laboratory.animState", CoD.ZMLaboratoryUtility.LabAnimState.NOT_PLAYING ) and CoD.ZMLaboratoryUtility.CanPurchase( controller, element ) and CoD.ModelUtility.IsModelValueEqualTo( controller, "Laboratory.disableInput", 0 ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"menu/select", nil, nil ) --[[ @ 0]]
			return true
		elseif CoD.ModelUtility.IsModelValueEqualToEnum( controller, "Laboratory.animState", CoD.ZMLaboratoryUtility.LabAnimState.NOT_PLAYING ) and not CoD.ZMLaboratoryUtility.CanPurchase( controller, element ) and CoD.ModelUtility.IsModelValueEqualTo( controller, "Laboratory.disableInput", 0 ) and IsBooleanDvarSet( "laboratory_codpoints_enabled" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"menu/select", nil, nil ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( SpecialOffers ) --[[ @ 0]]
	self.SpecialOffers = SpecialOffers --[[ @ 0]]
	
	StoneTiledBacking = LUI.UIImage.new( 0, 0, 0, 480, 0.09, 0.09, -30, 6 ) --[[ @ 0]]
	StoneTiledBacking:setRGB( 0.83, 0.11, 0.01 ) --[[ @ 0]]
	StoneTiledBacking:setAlpha( 0 ) --[[ @ 0]]
	StoneTiledBacking:setImage( RegisterImage( @"uie_ui_zm_laboratory_buttonbgtile" ) ) --[[ @ 0]]
	StoneTiledBacking:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_16CBE95C250C6D15" ) ) --[[ @ 0]]
	StoneTiledBacking:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	StoneTiledBacking:setupNineSliceShader( 196, 88 ) --[[ @ 0]]
	self:addElement( StoneTiledBacking ) --[[ @ 0]]
	self.StoneTiledBacking = StoneTiledBacking --[[ @ 0]]
	
	LaboratoryOffersHeader = CoD.LaboratoryOffersHeader.new( f1_arg0, f1_arg1, 0, 0, -30, 510, 0, 0, -20, 23 ) --[[ @ 0]]
	LaboratoryOffersHeader.Divider.R:setScale( 1, 1 ) --[[ @ 0]]
	LaboratoryOffersHeader.Divider.L:setScale( 1, 1 ) --[[ @ 0]]
	self:addElement( LaboratoryOffersHeader ) --[[ @ 0]]
	self.LaboratoryOffersHeader = LaboratoryOffersHeader --[[ @ 0]]
	
	TextBox = LUI.UIText.new( 0, 0, -30, 506, 0, 0, -14, 23 ) --[[ @ 0]]
	TextBox:setRGB( 0.58, 0.85, 1 ) --[[ @ 0]]
	TextBox:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_7715BBA8DDB1B644" ) ) --[[ @ 0]]
	TextBox:setTTF( "skorzhen" ) --[[ @ 0]]
	TextBox:setLetterSpacing( 3 ) --[[ @ 0]]
	TextBox:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	TextBox:setAlignment( Enum[@"luialignment"][@"hash_E821F0ECFF8D1C7"] ) --[[ @ 0]]
	self:addElement( TextBox ) --[[ @ 0]]
	self.TextBox = TextBox --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Visible",
			condition = function ( menu, element, event )
				return ListElementHasElements( self.SpecialOffers )
			end
		}
	} ) --[[ @ 0]]
	self:appendEventHandler( "grid_updated", function ( f10_arg0, f10_arg1 )
		f10_arg1.menu = f10_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( self, f10_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	SpecialOffers.id = "SpecialOffers" --[[ @ 0]]
	self.__defaultFocus = SpecialOffers --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.LaboratorySpecialOffers.__resetProperties = function ( f11_arg0 )
	f11_arg0.SpecialOffers:completeAnimation() --[[ @ 0]]
	f11_arg0.TextBox:completeAnimation() --[[ @ 0]]
	f11_arg0.LaboratoryOffersHeader:completeAnimation() --[[ @ 0]]
	f11_arg0.StoneTiledBacking:completeAnimation() --[[ @ 0]]
	f11_arg0.SpecialOffers:setAlpha( 1 ) --[[ @ 0]]
	f11_arg0.TextBox:setAlpha( 1 ) --[[ @ 0]]
	f11_arg0.LaboratoryOffersHeader:setAlpha( 1 ) --[[ @ 0]]
	f11_arg0.StoneTiledBacking:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.LaboratorySpecialOffers.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f12_arg0, f12_arg1 )
			f12_arg0:__resetProperties() --[[ @ 0]]
			f12_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f12_arg0.SpecialOffers:completeAnimation() --[[ @ 0]]
			f12_arg0.SpecialOffers:setAlpha( 0 ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.SpecialOffers ) --[[ @ 0]]
			f12_arg0.StoneTiledBacking:completeAnimation() --[[ @ 0]]
			f12_arg0.StoneTiledBacking:setAlpha( 0 ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.StoneTiledBacking ) --[[ @ 0]]
			f12_arg0.LaboratoryOffersHeader:completeAnimation() --[[ @ 0]]
			f12_arg0.LaboratoryOffersHeader:setAlpha( 0 ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.LaboratoryOffersHeader ) --[[ @ 0]]
			f12_arg0.TextBox:completeAnimation() --[[ @ 0]]
			f12_arg0.TextBox:setAlpha( 0 ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.TextBox ) --[[ @ 0]]
		end
	},
	Visible = {
		DefaultClip = function ( f13_arg0, f13_arg1 )
			f13_arg0:__resetProperties() --[[ @ 0]]
			f13_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f13_arg0.SpecialOffers:completeAnimation() --[[ @ 0]]
			f13_arg0.SpecialOffers:setAlpha( 1 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.SpecialOffers ) --[[ @ 0]]
			f13_arg0.StoneTiledBacking:completeAnimation() --[[ @ 0]]
			f13_arg0.StoneTiledBacking:setAlpha( 0 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.StoneTiledBacking ) --[[ @ 0]]
			f13_arg0.LaboratoryOffersHeader:completeAnimation() --[[ @ 0]]
			f13_arg0.LaboratoryOffersHeader:setAlpha( 1 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.LaboratoryOffersHeader ) --[[ @ 0]]
			f13_arg0.TextBox:completeAnimation() --[[ @ 0]]
			f13_arg0.TextBox:setAlpha( 1 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.TextBox ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.LaboratorySpecialOffers.__onClose = function ( f14_arg0 )
	f14_arg0.SpecialOffers:close() --[[ @ 0]]
	f14_arg0.LaboratoryOffersHeader:close() --[[ @ 0]]
end
 --[[ @ 0]]
