-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
CoD.PCAchievementsUtility = {} --[[ @ 0]]
CoD.PCAchievementsUtility.CreatePCAchievementTable = function ( f1_arg0, f1_arg1 )
	local f1_local0 = f1_arg1[@"enabled"] --[[ @ 0]]
	local f1_local1 = {} --[[ @ 0]]
	local f1_local2 = {
		name = f1_arg1[@"title"],
		desc = f1_arg1[@"description"],
		image = f1_arg1[@"image"],
		score = f1_arg1[@"score"],
		maxValue = 1
	} --[[ @ 0]]
	local f1_local3 --[[ @ 0]]
	if f1_local0 then
		f1_local3 = 1 --[[ @ 0]]
		if not f1_local3 then
		
		else
			f1_local2.currentValue = f1_local3 --[[ @ 0]]
			f1_local2.isCompleted = f1_local0 --[[ @ 0]]
			if f1_local0 then
				f1_local3 = 1 --[[ @ 0]]
				if not f1_local3 then
				
				else
					f1_local2.progressBarRatio = f1_local3 --[[ @ 0]]
					f1_local1.models = f1_local2 --[[ @ 0]]
					return f1_local1
				end
			end
			f1_local3 = 0 --[[ @ 0]]
		end
	end
	f1_local3 = 0 --[[ @ 0]]
end
 --[[ @ 0]]
DataSources.PCAchievementNotification = {
	getModel = function ( f2_arg0 )
		local f2_local0 = Engine[@"GetModelForController"]( f2_arg0 ) --[[ @ 0]]
		local f2_local1 = f2_local0["PC.Achievement.Notification"] --[[ @ 0]]
		if not f2_local1 then
			f2_local1 = f2_local0:create( "PC.Achievement.Notification" ) --[[ @ 0]]
			local f2_local2 = f2_local1:create( "name" ) --[[ @ 0]]
			f2_local2:set( "ACHIEVEMENTS/ZM_TOWERS_ARENA_TITLE" ) --[[ @ 0]]
			f2_local2 = f2_local1:create( "score" ) --[[ @ 0]]
			f2_local2:set( "0" ) --[[ @ 0]]
			f2_local2 = f2_local1:create( "image" ) --[[ @ 0]]
			f2_local2:set( "t7_icon_achievement_safehouse_01" ) --[[ @ 0]]
			f2_local2 = f2_local1:create( "showNotification" ) --[[ @ 0]]
			f2_local2:set( false ) --[[ @ 0]]
		end
		return f2_local1
	end
} --[[ @ 0]]
CoD.PCAchievementsUtility.ShowAchievementNotification = function ( f3_arg0, f3_arg1 )
	if f3_arg1 then
		local f3_local0 = DataSources.PCAchievementNotification.getModel( f3_arg1 ) --[[ @ 0]]
		f3_local0 = f3_local0.showNotification:get() --[[ @ 0]]
		if f3_local0 then
			if f3_arg0._achievementNotificationTimer then
				f3_arg0._achievementNotificationTimer:close() --[[ @ 0]]
				f3_arg0._achievementNotificationTimer = nil --[[ @ 0]]
			end
			f3_arg0._achievementNotificationTimer = LUI.UITimer.newElementTimer( 5000, true, function ()
				local f4_local0 = DataSources.PCAchievementNotification.getModel( f3_arg1 ) --[[ @ 0]]
				f4_local0.showNotification:set( false ) --[[ @ 0]]
				f3_arg0._achievementNotificationTimer:close() --[[ @ 0]]
				f3_arg0._achievementNotificationTimer = nil --[[ @ 0]]
			end ) --[[ @ 0]]
			f3_arg0:addElement( f3_arg0._achievementNotificationTimer ) --[[ @ 0]]
		end
		return f3_local0
	else
		return false
	end
end
 --[[ @ 0]]
DataSources.PCTotalAchievementsScore = {
	getModel = function ( f5_arg0 )
		local f5_local0 = Engine[@"GetModelForController"]( f5_arg0 ) --[[ @ 0]]
		local f5_local1 = f5_local0["PC.Achievement.TotalScore"] --[[ @ 0]]
		if not f5_local1 then
			f5_local1 = f5_local0:create( "PC.Achievement.TotalScore" ) --[[ @ 0]]
			local f5_local2 = f5_local1:create( "maxScore" ) --[[ @ 0]]
			f5_local2:set( "0" ) --[[ @ 0]]
			f5_local2 = f5_local1:create( "score" ) --[[ @ 0]]
			f5_local2:set( "0" ) --[[ @ 0]]
			f5_local2 = f5_local1:create( "progress" ) --[[ @ 0]]
			f5_local2:set( "0" ) --[[ @ 0]]
		end
		return f5_local1
	end
} --[[ @ 0]]
CoD.PCAchievementsUtility.PreparePCAchievementListFromAsset = function ( f6_arg0 )
	local f6_local0 = 0 --[[ @ 0]]
	local f6_local1 = 0 --[[ @ 0]]
	local f6_local2 = {} --[[ @ 0]]
	local f6_local3 = DataSources.PCTotalAchievementsScore.getModel( f6_arg0 ) --[[ @ 0]]
	for f6_local8, f6_local9 in ipairs( Engine[@"hash_254F61DB6DD339F5"]( f6_arg0 ) ) --[[ @ 0]] do
		local f6_local10 = CoD.PCAchievementsUtility.CreatePCAchievementTable( f6_arg0, f6_local9 ) --[[ @ 0]]
		if f6_local10 then
			table.insert( f6_local2, f6_local10 ) --[[ @ 0]]
			local f6_local7 = f6_local10.models.score --[[ @ 0]]
			f6_local1 = f6_local1 + f6_local7 --[[ @ 0]]
			if f6_local10.models.isCompleted then
				f6_local0 = f6_local0 + f6_local7 --[[ @ 0]]
			end
		end
	end
	if f6_local3 then
		f6_local3.score:set( f6_local0 ) --[[ @ 0]]
		f6_local3.maxScore:set( f6_local1 ) --[[ @ 0]]
		if f6_local1 ~= 0 then
			f6_local3.progress:set( f6_local0 / f6_local1 ) --[[ @ 0]]
		else
			f6_local3.progress:set( 0 ) --[[ @ 0]]
		end
	end
	return f6_local2
end
 --[[ @ 0]]
DataSources.PCAchievement = DataSourceHelpers.ListSetup( "PC.Achievement.AchievementList", function ( f7_arg0 )
	return CoD.PCAchievementsUtility.PreparePCAchievementListFromAsset( f7_arg0 )
end ) --[[ @ 0]]
CoD.PCAchievementsUtility.PrepareAchievementProgressBar = function ( f8_arg0, f8_arg1, f8_arg2 )
	local f8_local0 = f8_arg2 --[[ @ 0]]
	if f8_arg2.ProgressBar then
		f8_local0 = f8_arg2.ProgressBar --[[ @ 0]]
	end
	if f8_arg1 == nil then
		local f8_local1 = f8_local0:getModel() --[[ @ 0]]
	end
	if f8_arg1 and f8_local0 and f8_local0.ProgressBarFiller and f8_local0.ProgressBarBacking then
		f8_local0.ProgressBarFiller:setWidth( f8_local0.ProgressBarBacking:getWidth() * f8_arg1.currentValue:get() / f8_arg1.maxValue:get() ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
CoD.PCAchievementsUtility.IsAchievementCompleted = function ( f9_arg0, f9_arg1 )
	local f9_local0 = f9_arg0:getModel() --[[ @ 0]]
	if f9_local0 == nil then
		return false
	else
		return f9_local0.isCompleted:get()
	end
end
 --[[ @ 0]]
