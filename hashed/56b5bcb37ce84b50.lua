-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:50
require( "ui/uieditor/widgets/hud/mp_scorestreakwidget/scrstk_combatefficiencypulse" ) --[[ @ 0]]
require( "ui/uieditor/widgets/hud/mp_scorestreakwidget/scrstk_meterkarat" ) --[[ @ 0]]

CoD.ScrStk_MeterInternal = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.ScrStk_MeterInternal.__defaultWidth = 6 --[[ @ 0]]
CoD.ScrStk_MeterInternal.__defaultHeight = 180 --[[ @ 0]]
CoD.ScrStk_MeterInternal.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.ScrStk_MeterInternal ) --[[ @ 0]]
	self.id = "ScrStk_MeterInternal" --[[ @ 0]]
	self.soundSet = "HUD" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local Back = LUI.UIImage.new( 0.5, 0.5, -9, 3, 0.5, 0.5, -90, 90 ) --[[ @ 0]]
	Back:setRGB( 0.51, 0.55, 0.64 ) --[[ @ 0]]
	Back:setAlpha( 0 ) --[[ @ 0]]
	Back:setImage( RegisterImage( @"uie_t7_mp_hud_scorestreak_meterfill" ) ) --[[ @ 0]]
	self:addElement( Back ) --[[ @ 0]]
	self.Back = Back --[[ @ 0]]
	
	local Fill = LUI.UIImage.new( 0.5, 0.5, -9, 7, 0.5, 0.5, -58, 96 ) --[[ @ 0]]
	Fill:setRGB( ColorSet.T8__OCHRE.r, ColorSet.T8__OCHRE.g, ColorSet.T8__OCHRE.b ) --[[ @ 0]]
	Fill:setXRot( 180 ) --[[ @ 0]]
	Fill:setImage( RegisterImage( @"uie_ui_hud_core_streak_widget_meter_fill" ) ) --[[ @ 0]]
	Fill:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_wipe" ) ) --[[ @ 0]]
	Fill:setShaderVector( 0, 1, 0, 0, 0 ) --[[ @ 0]]
	Fill:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	Fill:setShaderVector( 2, 1, 0, 0, 0 ) --[[ @ 0]]
	Fill:setShaderVector( 3, 0, 0, 0, 0 ) --[[ @ 0]]
	Fill:setShaderVector( 4, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( Fill ) --[[ @ 0]]
	self.Fill = Fill --[[ @ 0]]
	
	local FocusMeterBack = LUI.UIImage.new( 0.5, 0.5, -9, 3, 0.5, 0.5, -90, 90 ) --[[ @ 0]]
	FocusMeterBack:setRGB( 0.22, 0.38, 0.52 ) --[[ @ 0]]
	FocusMeterBack:setAlpha( 0 ) --[[ @ 0]]
	FocusMeterBack:setImage( RegisterImage( @"uie_t7_mp_hud_scorestreak_focusmeterback" ) ) --[[ @ 0]]
	self:addElement( FocusMeterBack ) --[[ @ 0]]
	self.FocusMeterBack = FocusMeterBack --[[ @ 0]]
	
	local FocusMeterFill = LUI.UIImage.new( 0.5, 0.5, -9, 3, 0.5, 0.5, 90, -90 ) --[[ @ 0]]
	FocusMeterFill:setRGB( 0.15, 0.56, 0.88 ) --[[ @ 0]]
	FocusMeterFill:setAlpha( 0 ) --[[ @ 0]]
	FocusMeterFill:setImage( RegisterImage( @"uie_t7_mp_hud_scorestreak_focusmeterfill" ) ) --[[ @ 0]]
	FocusMeterFill:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_wipe" ) ) --[[ @ 0]]
	FocusMeterFill:setShaderVector( 0, 1, 0, 0, 0 ) --[[ @ 0]]
	FocusMeterFill:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	FocusMeterFill:setShaderVector( 2, 1, 0, 0, 0 ) --[[ @ 0]]
	FocusMeterFill:setShaderVector( 3, 0, 0, 0, 0 ) --[[ @ 0]]
	FocusMeterFill:setShaderVector( 4, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( FocusMeterFill ) --[[ @ 0]]
	self.FocusMeterFill = FocusMeterFill --[[ @ 0]]
	
	local CombatEfficiencyPulse = CoD.ScrStk_CombatEfficiencyPulse.new( f1_arg0, f1_arg1, 0.5, 0.5, -119, 113, 0, 1, 3, -3 ) --[[ @ 0]]
	CombatEfficiencyPulse:setAlpha( 0 ) --[[ @ 0]]
	CombatEfficiencyPulse:setRFTMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	self:addElement( CombatEfficiencyPulse ) --[[ @ 0]]
	self.CombatEfficiencyPulse = CombatEfficiencyPulse --[[ @ 0]]
	
	local FocusMeterFillWhite = CoD.ScrStk_MeterKarat.new( f1_arg0, f1_arg1, 0.5, 0.5, -9, 3, 0.5, 0.5, 80, 92 ) --[[ @ 0]]
	FocusMeterFillWhite:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( FocusMeterFillWhite ) --[[ @ 0]]
	self.FocusMeterFillWhite = FocusMeterFillWhite --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "CombatEfficiency",
			condition = function ( menu, element, event )
				return IsSpecificGadgetInUse( f1_arg1, element, "gadget_combat_efficiency" )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "id", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "id"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:linkToElementModel( self, "state", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "state"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	local f1_local7 = self --[[ @ 0]]
	CoD.ScorestreakSelectUtility.ScorestreakMeterPostLoad( self, f1_arg1 ) --[[ @ 0]]
	return self
end
 --[[ @ 0]]
CoD.ScrStk_MeterInternal.__resetProperties = function ( f5_arg0 )
	f5_arg0.Fill:completeAnimation() --[[ @ 0]]
	f5_arg0.Back:completeAnimation() --[[ @ 0]]
	f5_arg0.CombatEfficiencyPulse:completeAnimation() --[[ @ 0]]
	f5_arg0.FocusMeterBack:completeAnimation() --[[ @ 0]]
	f5_arg0.FocusMeterFill:completeAnimation() --[[ @ 0]]
	f5_arg0.FocusMeterFillWhite:completeAnimation() --[[ @ 0]]
	f5_arg0.Fill:setAlpha( 1 ) --[[ @ 0]]
	f5_arg0.Back:setAlpha( 0 ) --[[ @ 0]]
	f5_arg0.CombatEfficiencyPulse:setAlpha( 0 ) --[[ @ 0]]
	f5_arg0.FocusMeterBack:setRGB( 0.22, 0.38, 0.52 ) --[[ @ 0]]
	f5_arg0.FocusMeterBack:setAlpha( 0 ) --[[ @ 0]]
	f5_arg0.FocusMeterFill:setAlpha( 0 ) --[[ @ 0]]
	f5_arg0.FocusMeterFillWhite:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ScrStk_MeterInternal.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f6_arg0, f6_arg1 )
			f6_arg0:__resetProperties() --[[ @ 0]]
			f6_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end,
		CombatEfficiency = function ( f7_arg0, f7_arg1 )
			f7_arg0:__resetProperties() --[[ @ 0]]
			f7_arg0:setupElementClipCounter( 6 ) --[[ @ 0]]
			local f7_local0 = function ( f8_arg0 )
				f7_arg0.Back:beginAnimation( 300, Enum[@"luitween"][@"luitween_bounce"] ) --[[ @ 0]]
				f7_arg0.Back:setAlpha( 0 ) --[[ @ 0]]
				f7_arg0.Back:registerEventHandler( "interrupted_keyframe", f7_arg0.clipInterrupted ) --[[ @ 0]]
				f7_arg0.Back:registerEventHandler( "transition_complete_keyframe", f7_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f7_arg0.Back:completeAnimation() --[[ @ 0]]
			f7_arg0.Back:setAlpha( 0.5 ) --[[ @ 0]]
			f7_local0( f7_arg0.Back ) --[[ @ 0]]
			local f7_local1 = function ( f9_arg0 )
				f7_arg0.Fill:beginAnimation( 300, Enum[@"luitween"][@"luitween_bounce"] ) --[[ @ 0]]
				f7_arg0.Fill:setAlpha( 0 ) --[[ @ 0]]
				f7_arg0.Fill:registerEventHandler( "interrupted_keyframe", f7_arg0.clipInterrupted ) --[[ @ 0]]
				f7_arg0.Fill:registerEventHandler( "transition_complete_keyframe", f7_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f7_arg0.Fill:completeAnimation() --[[ @ 0]]
			f7_arg0.Fill:setAlpha( 1 ) --[[ @ 0]]
			f7_local1( f7_arg0.Fill ) --[[ @ 0]]
			local f7_local2 = function ( f10_arg0 )
				f7_arg0.FocusMeterBack:beginAnimation( 300 ) --[[ @ 0]]
				f7_arg0.FocusMeterBack:registerEventHandler( "interrupted_keyframe", f7_arg0.clipInterrupted ) --[[ @ 0]]
				f7_arg0.FocusMeterBack:registerEventHandler( "transition_complete_keyframe", f7_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f7_arg0.FocusMeterBack:completeAnimation() --[[ @ 0]]
			f7_arg0.FocusMeterBack:setRGB( 0.22, 0.38, 0.52 ) --[[ @ 0]]
			f7_arg0.FocusMeterBack:setAlpha( 0 ) --[[ @ 0]]
			f7_local2( f7_arg0.FocusMeterBack ) --[[ @ 0]]
			local f7_local3 = function ( f11_arg0 )
				f7_arg0.FocusMeterFill:beginAnimation( 300, Enum[@"luitween"][@"luitween_bounce"] ) --[[ @ 0]]
				f7_arg0.FocusMeterFill:setAlpha( 1 ) --[[ @ 0]]
				f7_arg0.FocusMeterFill:registerEventHandler( "interrupted_keyframe", f7_arg0.clipInterrupted ) --[[ @ 0]]
				f7_arg0.FocusMeterFill:registerEventHandler( "transition_complete_keyframe", f7_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f7_arg0.FocusMeterFill:completeAnimation() --[[ @ 0]]
			f7_arg0.FocusMeterFill:setAlpha( 0 ) --[[ @ 0]]
			f7_local3( f7_arg0.FocusMeterFill ) --[[ @ 0]]
			local f7_local4 = function ( f12_arg0 )
				f7_arg0.CombatEfficiencyPulse:beginAnimation( 300, Enum[@"luitween"][@"luitween_bounce"] ) --[[ @ 0]]
				f7_arg0.CombatEfficiencyPulse:setAlpha( 1 ) --[[ @ 0]]
				f7_arg0.CombatEfficiencyPulse:registerEventHandler( "interrupted_keyframe", f7_arg0.clipInterrupted ) --[[ @ 0]]
				f7_arg0.CombatEfficiencyPulse:registerEventHandler( "transition_complete_keyframe", f7_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f7_arg0.CombatEfficiencyPulse:completeAnimation() --[[ @ 0]]
			f7_arg0.CombatEfficiencyPulse:setAlpha( 0 ) --[[ @ 0]]
			f7_local4( f7_arg0.CombatEfficiencyPulse ) --[[ @ 0]]
			local f7_local5 = function ( f13_arg0 )
				f7_arg0.FocusMeterFillWhite:beginAnimation( 300, Enum[@"luitween"][@"luitween_bounce"] ) --[[ @ 0]]
				f7_arg0.FocusMeterFillWhite:setAlpha( 1 ) --[[ @ 0]]
				f7_arg0.FocusMeterFillWhite:registerEventHandler( "interrupted_keyframe", f7_arg0.clipInterrupted ) --[[ @ 0]]
				f7_arg0.FocusMeterFillWhite:registerEventHandler( "transition_complete_keyframe", f7_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f7_arg0.FocusMeterFillWhite:completeAnimation() --[[ @ 0]]
			f7_arg0.FocusMeterFillWhite:setAlpha( 0 ) --[[ @ 0]]
			f7_local5( f7_arg0.FocusMeterFillWhite ) --[[ @ 0]]
		end
	},
	CombatEfficiency = {
		DefaultClip = function ( f14_arg0, f14_arg1 )
			f14_arg0:__resetProperties() --[[ @ 0]]
			f14_arg0:setupElementClipCounter( 5 ) --[[ @ 0]]
			f14_arg0.Back:completeAnimation() --[[ @ 0]]
			f14_arg0.Back:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.Back ) --[[ @ 0]]
			f14_arg0.Fill:completeAnimation() --[[ @ 0]]
			f14_arg0.Fill:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.Fill ) --[[ @ 0]]
			f14_arg0.FocusMeterFill:completeAnimation() --[[ @ 0]]
			f14_arg0.FocusMeterFill:setAlpha( 1 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.FocusMeterFill ) --[[ @ 0]]
			f14_arg0.CombatEfficiencyPulse:completeAnimation() --[[ @ 0]]
			f14_arg0.CombatEfficiencyPulse:setAlpha( 1 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.CombatEfficiencyPulse ) --[[ @ 0]]
			f14_arg0.FocusMeterFillWhite:completeAnimation() --[[ @ 0]]
			f14_arg0.FocusMeterFillWhite:setAlpha( 1 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.FocusMeterFillWhite ) --[[ @ 0]]
		end,
		DefaultState = function ( f15_arg0, f15_arg1 )
			f15_arg0:__resetProperties() --[[ @ 0]]
			f15_arg0:setupElementClipCounter( 6 ) --[[ @ 0]]
			local f15_local0 = function ( f16_arg0 )
				f15_arg0.Back:beginAnimation( 300, Enum[@"luitween"][@"luitween_bounce"] ) --[[ @ 0]]
				f15_arg0.Back:setAlpha( 0.5 ) --[[ @ 0]]
				f15_arg0.Back:registerEventHandler( "interrupted_keyframe", f15_arg0.clipInterrupted ) --[[ @ 0]]
				f15_arg0.Back:registerEventHandler( "transition_complete_keyframe", f15_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f15_arg0.Back:completeAnimation() --[[ @ 0]]
			f15_arg0.Back:setAlpha( 0 ) --[[ @ 0]]
			f15_local0( f15_arg0.Back ) --[[ @ 0]]
			local f15_local1 = function ( f17_arg0 )
				f15_arg0.Fill:beginAnimation( 300, Enum[@"luitween"][@"luitween_bounce"] ) --[[ @ 0]]
				f15_arg0.Fill:setAlpha( 1 ) --[[ @ 0]]
				f15_arg0.Fill:registerEventHandler( "interrupted_keyframe", f15_arg0.clipInterrupted ) --[[ @ 0]]
				f15_arg0.Fill:registerEventHandler( "transition_complete_keyframe", f15_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f15_arg0.Fill:completeAnimation() --[[ @ 0]]
			f15_arg0.Fill:setAlpha( 0 ) --[[ @ 0]]
			f15_local1( f15_arg0.Fill ) --[[ @ 0]]
			local f15_local2 = function ( f18_arg0 )
				f15_arg0.FocusMeterBack:beginAnimation( 300, Enum[@"luitween"][@"luitween_bounce"] ) --[[ @ 0]]
				f15_arg0.FocusMeterBack:registerEventHandler( "interrupted_keyframe", f15_arg0.clipInterrupted ) --[[ @ 0]]
				f15_arg0.FocusMeterBack:registerEventHandler( "transition_complete_keyframe", f15_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f15_arg0.FocusMeterBack:completeAnimation() --[[ @ 0]]
			f15_arg0.FocusMeterBack:setAlpha( 0 ) --[[ @ 0]]
			f15_local2( f15_arg0.FocusMeterBack ) --[[ @ 0]]
			local f15_local3 = function ( f19_arg0 )
				f15_arg0.FocusMeterFill:beginAnimation( 300, Enum[@"luitween"][@"luitween_bounce"] ) --[[ @ 0]]
				f15_arg0.FocusMeterFill:setAlpha( 0 ) --[[ @ 0]]
				f15_arg0.FocusMeterFill:registerEventHandler( "interrupted_keyframe", f15_arg0.clipInterrupted ) --[[ @ 0]]
				f15_arg0.FocusMeterFill:registerEventHandler( "transition_complete_keyframe", f15_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f15_arg0.FocusMeterFill:completeAnimation() --[[ @ 0]]
			f15_arg0.FocusMeterFill:setAlpha( 1 ) --[[ @ 0]]
			f15_local3( f15_arg0.FocusMeterFill ) --[[ @ 0]]
			local f15_local4 = function ( f20_arg0 )
				f15_arg0.CombatEfficiencyPulse:beginAnimation( 300, Enum[@"luitween"][@"luitween_bounce"] ) --[[ @ 0]]
				f15_arg0.CombatEfficiencyPulse:setAlpha( 0 ) --[[ @ 0]]
				f15_arg0.CombatEfficiencyPulse:registerEventHandler( "interrupted_keyframe", f15_arg0.clipInterrupted ) --[[ @ 0]]
				f15_arg0.CombatEfficiencyPulse:registerEventHandler( "transition_complete_keyframe", f15_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f15_arg0.CombatEfficiencyPulse:completeAnimation() --[[ @ 0]]
			f15_arg0.CombatEfficiencyPulse:setAlpha( 1 ) --[[ @ 0]]
			f15_local4( f15_arg0.CombatEfficiencyPulse ) --[[ @ 0]]
			local f15_local5 = function ( f21_arg0 )
				f15_arg0.FocusMeterFillWhite:beginAnimation( 300, Enum[@"luitween"][@"luitween_bounce"] ) --[[ @ 0]]
				f15_arg0.FocusMeterFillWhite:setAlpha( 0 ) --[[ @ 0]]
				f15_arg0.FocusMeterFillWhite:registerEventHandler( "interrupted_keyframe", f15_arg0.clipInterrupted ) --[[ @ 0]]
				f15_arg0.FocusMeterFillWhite:registerEventHandler( "transition_complete_keyframe", f15_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f15_arg0.FocusMeterFillWhite:completeAnimation() --[[ @ 0]]
			f15_arg0.FocusMeterFillWhite:setAlpha( 1 ) --[[ @ 0]]
			f15_local5( f15_arg0.FocusMeterFillWhite ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.ScrStk_MeterInternal.__onClose = function ( f22_arg0 )
	f22_arg0.CombatEfficiencyPulse:close() --[[ @ 0]]
	f22_arg0.FocusMeterFillWhite:close() --[[ @ 0]]
end
 --[[ @ 0]]
