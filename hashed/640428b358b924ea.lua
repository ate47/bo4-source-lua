-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:50
require( "x64:246728994d8c06c0" ) --[[ @ 0]]
require( "x64:78e65dffcd6f8796" ) --[[ @ 0]]
require( "x64:498541652d16a0fc" ) --[[ @ 0]]
require( "x64:6b9a16de4d977bda" ) --[[ @ 0]]
require( "x64:51919854135acff3" ) --[[ @ 0]]
require( "x64:1c6c708ebd4ae043" ) --[[ @ 0]]
require( "x64:4ab14b7762fde7e3" ) --[[ @ 0]]

CoD.Barracks_StatsOverview_WZ = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.Barracks_StatsOverview_WZ.__defaultWidth = 477 --[[ @ 0]]
CoD.Barracks_StatsOverview_WZ.__defaultHeight = 677 --[[ @ 0]]
CoD.Barracks_StatsOverview_WZ.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.Barracks_StatsOverview_WZ ) --[[ @ 0]]
	self.id = "Barracks_StatsOverview_WZ" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local CommonDetailPanel2 = CoD.CommonDetailPanel02.new( f1_arg0, f1_arg1, 0, 0, 0, 477, 0, 0, 0, 677 ) --[[ @ 0]]
	CommonDetailPanel2.BackingBlur:setAlpha( 0 ) --[[ @ 0]]
	CommonDetailPanel2.BackingTint:setAlpha( 0.5 ) --[[ @ 0]]
	self:addElement( CommonDetailPanel2 ) --[[ @ 0]]
	self.CommonDetailPanel2 = CommonDetailPanel2 --[[ @ 0]]
	
	local BgOther = LUI.UIImage.new( 0.5, 0.5, -228.5, 228.5, 0, 0, 542, 667 ) --[[ @ 0]]
	BgOther:setRGB( 0.23, 0.23, 0.23 ) --[[ @ 0]]
	BgOther:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( BgOther ) --[[ @ 0]]
	self.BgOther = BgOther --[[ @ 0]]
	
	local bgAvgDamage = LUI.UIImage.new( 0, 0, 11, 468, 0, 0, 454.5, 666.5 ) --[[ @ 0]]
	bgAvgDamage:setRGB( 0.23, 0.23, 0.23 ) --[[ @ 0]]
	bgAvgDamage:setAlpha( 0.25 ) --[[ @ 0]]
	self:addElement( bgAvgDamage ) --[[ @ 0]]
	self.bgAvgDamage = bgAvgDamage --[[ @ 0]]
	
	local bgKill = LUI.UIImage.new( 0, 0, 11, 468, 0, 0, 232.5, 444.5 ) --[[ @ 0]]
	bgKill:setRGB( 0.23, 0.23, 0.23 ) --[[ @ 0]]
	bgKill:setAlpha( 0.25 ) --[[ @ 0]]
	self:addElement( bgKill ) --[[ @ 0]]
	self.bgKill = bgKill --[[ @ 0]]
	
	local bgWin = LUI.UIImage.new( 0.5, 0.5, -228.5, 228.5, 0, 0, 103, 222 ) --[[ @ 0]]
	bgWin:setRGB( 0.23, 0.23, 0.23 ) --[[ @ 0]]
	bgWin:setAlpha( 0.25 ) --[[ @ 0]]
	self:addElement( bgWin ) --[[ @ 0]]
	self.bgWin = bgWin --[[ @ 0]]
	
	local Header = LUI.UIText.new( 0, 1, 0, 0, 0, 0, 10, 40 ) --[[ @ 0]]
	Header:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	Header:setText( LocalizeToUpperString( @"menu/career_stats" ) ) --[[ @ 0]]
	Header:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	Header:setLetterSpacing( 4 ) --[[ @ 0]]
	Header:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	self:addElement( Header ) --[[ @ 0]]
	self.Header = Header --[[ @ 0]]
	
	local TimePlayedText = LUI.UIText.new( 0, 1, 0, 0, 0, 0, 44, 62 ) --[[ @ 0]]
	TimePlayedText:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	TimePlayedText:setAlpha( 0.5 ) --[[ @ 0]]
	TimePlayedText.__String_Reference = function ()
		TimePlayedText:setText( SecondsAsTimePlayedString( CoD.PlayerStatsUtility.GetWZGameModePlayerStorageStat( f1_arg1, f1_arg0, @"time_played_total", @"hash_0" ) ) ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	TimePlayedText.__String_Reference() --[[ @ 0]]
	TimePlayedText:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	TimePlayedText:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	self:addElement( TimePlayedText ) --[[ @ 0]]
	self.TimePlayedText = TimePlayedText --[[ @ 0]]
	
	local Wins = CoD.PlayerStatsMain.new( f1_arg0, f1_arg1, 0, 0, 19.5, 219.5, 0, 0, 115, 182 ) --[[ @ 0]]
	Wins.StatValue.__Stat_Value = function ()
		Wins.StatValue:setText( CoD.PlayerStatsUtility.GetWZGameModePlayerStorageStat( f1_arg1, f1_arg0, @"wins", 11235 ) ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	Wins.StatValue.__Stat_Value() --[[ @ 0]]
	Wins.StatHeaderText:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_4585891326C1258C" ) ) --[[ @ 0]]
	self:addElement( Wins ) --[[ @ 0]]
	self.Wins = Wins --[[ @ 0]]
	
	local Kills = CoD.PlayerStatsMain.new( f1_arg0, f1_arg1, 0, 0, 19.5, 219.5, 0, 0, 240, 307 ) --[[ @ 0]]
	Kills.StatValue.__Stat_Value = function ()
		Kills.StatValue:setText( CoD.PlayerStatsUtility.GetWZGameModePlayerStorageStat( f1_arg1, f1_arg0, @"kills", 11235 ) ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	Kills.StatValue.__Stat_Value() --[[ @ 0]]
	Kills.StatHeaderText:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_16B234CB46B5ACD4" ) ) --[[ @ 0]]
	self:addElement( Kills ) --[[ @ 0]]
	self.Kills = Kills --[[ @ 0]]
	
	local KillsPerGame = CoD.PlayerStatsDetailed.new( f1_arg0, f1_arg1, 0, 0, 155, 467, 0, 0, 265, 286 ) --[[ @ 0]]
	KillsPerGame.StatHeaderText:setText( LocalizeToUpperString( @"menu/kills_game" ) ) --[[ @ 0]]
	KillsPerGame.StatValue.__Stat_Value = function ()
		KillsPerGame.StatValue:setText( CoD.PlayerStatsUtility.GetWZGameModeAveragePlayerStorageStatRatio( f1_arg1, f1_arg0, @"kills", @"total_games_played", 11235 ) ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	KillsPerGame.StatValue.__Stat_Value() --[[ @ 0]]
	self:addElement( KillsPerGame ) --[[ @ 0]]
	self.KillsPerGame = KillsPerGame --[[ @ 0]]
	
	local KillDeathRatio = CoD.PlayerStatsDetailed.new( f1_arg0, f1_arg1, 0, 0, 155, 467, 0, 0, 287, 308 ) --[[ @ 0]]
	KillDeathRatio.StatHeaderText:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"menu/kd_short" ) ) --[[ @ 0]]
	KillDeathRatio.StatValue.__Stat_Value = function ()
		KillDeathRatio.StatValue:setText( CoD.PlayerStatsUtility.GetWZGameModeAveragePlayerStorageStatRatio( f1_arg1, f1_arg0, @"kills", @"deaths", 11235 ) ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	KillDeathRatio.StatValue.__Stat_Value() --[[ @ 0]]
	self:addElement( KillDeathRatio ) --[[ @ 0]]
	self.KillDeathRatio = KillDeathRatio --[[ @ 0]]
	
	local HeadshotPct = CoD.PlayerStatsDetailed.new( f1_arg0, f1_arg1, 0, 0, 155, 467, 0, 0, 308, 329 ) --[[ @ 0]]
	HeadshotPct.StatHeaderText:setText( LocalizeToUpperString( @"menu/headshot_pct" ) ) --[[ @ 0]]
	HeadshotPct.StatValue.__Stat_Value = function ()
		HeadshotPct.StatValue:setText( FractionToPercentageRounded( CoD.PlayerStatsUtility.GetWZGameModeAveragePlayerStorageStatRatio( f1_arg1, f1_arg0, @"hits_headshot", @"hits", "88%" ) ) ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	HeadshotPct.StatValue.__Stat_Value() --[[ @ 0]]
	self:addElement( HeadshotPct ) --[[ @ 0]]
	self.HeadshotPct = HeadshotPct --[[ @ 0]]
	
	local KillsAfterRevivePct = CoD.PlayerStatsDetailed.new( f1_arg0, f1_arg1, 0, 0, 155, 467, 0, 0, 329, 350 ) --[[ @ 0]]
	KillsAfterRevivePct.StatHeaderText:setText( LocalizeToUpperString( @"hash_58A1E63E734BC103" ) ) --[[ @ 0]]
	KillsAfterRevivePct.StatValue.__Stat_Value = function ()
		KillsAfterRevivePct.StatValue:setText( FractionToPercentageRounded( CoD.PlayerStatsUtility.GetWZGameModeAveragePlayerStorageStatRatio( f1_arg1, f1_arg0, @"kills_after_revive", @"kills", "88%" ) ) ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	KillsAfterRevivePct.StatValue.__Stat_Value() --[[ @ 0]]
	self:addElement( KillsAfterRevivePct ) --[[ @ 0]]
	self.KillsAfterRevivePct = KillsAfterRevivePct --[[ @ 0]]
	
	local HotDropKillPct = CoD.PlayerStatsDetailed.new( f1_arg0, f1_arg1, 0, 0, 155, 467, 0, 0, 351, 372 ) --[[ @ 0]]
	HotDropKillPct.StatHeaderText:setText( LocalizeToUpperString( @"hash_7C4C85FE1273E187" ) ) --[[ @ 0]]
	HotDropKillPct.StatValue.__Stat_Value = function ()
		HotDropKillPct.StatValue:setText( FractionToPercentageRounded( CoD.PlayerStatsUtility.GetWZGameModeAveragePlayerStorageStatRatio( f1_arg1, f1_arg0, @"kills_early", @"kills", "88%" ) ) ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	HotDropKillPct.StatValue.__Stat_Value() --[[ @ 0]]
	self:addElement( HotDropKillPct ) --[[ @ 0]]
	self.HotDropKillPct = HotDropKillPct --[[ @ 0]]
	
	local MostKills = CoD.PlayerStatsDetailed.new( f1_arg0, f1_arg1, 0, 0, 155, 467, 0, 0, 373, 394 ) --[[ @ 0]]
	MostKills.StatHeaderText:setText( LocalizeToUpperString( @"menu/most_kills" ) ) --[[ @ 0]]
	MostKills.StatValue.__Stat_Value = function ()
		MostKills.StatValue:setText( CoD.PlayerStatsUtility.GetWZGameModeHighestPlayerStorageStat( f1_arg1, f1_arg0, @"hash_6E4E1EB9512BA7B5", 11235 ) ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	MostKills.StatValue.__Stat_Value() --[[ @ 0]]
	self:addElement( MostKills ) --[[ @ 0]]
	self.MostKills = MostKills --[[ @ 0]]
	
	local LongestDistanceKill = CoD.PlayerStatsDetailed.new( f1_arg0, f1_arg1, 0, 0, 155, 467, 0, 0, 395, 416 ) --[[ @ 0]]
	LongestDistanceKill.StatHeaderText:setText( LocalizeToUpperString( @"hash_2E3E72FE9F094F80" ) ) --[[ @ 0]]
	LongestDistanceKill.StatValue.__Stat_Value = function ()
		LongestDistanceKill.StatValue:setText( DistanceInMetricString( UnitsToMeters( CoD.PlayerStatsUtility.GetWZGameModeHighestPlayerStorageStat( f1_arg1, f1_arg0, @"longest_distance_kill", "112km 358m" ) ) ) ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	LongestDistanceKill.StatValue.__Stat_Value() --[[ @ 0]]
	self:addElement( LongestDistanceKill ) --[[ @ 0]]
	self.LongestDistanceKill = LongestDistanceKill --[[ @ 0]]
	
	local EfficiencyHeader = CoD.PlayerStatsHeader.new( f1_arg0, f1_arg1, 0, 0, 11, 467, 0, 0, 455, 476 ) --[[ @ 0]]
	EfficiencyHeader.HeaderText:setText( LocalizeToUpperString( @"menu/efficiency" ) ) --[[ @ 0]]
	self:addElement( EfficiencyHeader ) --[[ @ 0]]
	self.EfficiencyHeader = EfficiencyHeader --[[ @ 0]]
	
	local AverageDamage = CoD.PlayerStatsMain.new( f1_arg0, f1_arg1, 0, 0, 19.5, 219.5, 0, 0, 485, 552 ) --[[ @ 0]]
	AverageDamage.StatValue.__Stat_Value = function ()
		AverageDamage.StatValue:setText( CoD.PlayerStatsUtility.GetWZGameModeAveragePlayerStorageStatRatio( f1_arg1, f1_arg0, @"total_damage", @"total_games_played", 11235 ) ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	AverageDamage.StatValue.__Stat_Value() --[[ @ 0]]
	AverageDamage.StatHeaderText:setText( LocalizeToUpperString( @"menu/avg_damage" ) ) --[[ @ 0]]
	self:addElement( AverageDamage ) --[[ @ 0]]
	self.AverageDamage = AverageDamage --[[ @ 0]]
	
	local CleanUpsPerGame = CoD.Barracks_StatsOverview_WZ_Efficiency.new( f1_arg0, f1_arg1, 0, 0, 155, 465, 0, 0, 507, 638 ) --[[ @ 0]]
	CleanUpsPerGame:mergeStateConditions( {
		{
			stateName = "Solo",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalDataSourceModelValueEqualToEnum( f1_arg1, "PlayerBarracksStats", "currentFilter", CoD.PlayerStatsUtility.WZGameModeDisplayType.SOLO )
			end
		}
	} ) --[[ @ 0]]
	local dotline01 = CleanUpsPerGame --[[ @ 0]]
	local OtherHeader = CleanUpsPerGame.subscribeToModel --[[ @ 0]]
	local dotline02 = DataSources.PlayerBarracksStats.getModel( f1_arg1 ) --[[ @ 0]]
	OtherHeader( dotline01, dotline02.currentFilter, function ( f14_arg0 )
		f1_arg0:updateElementState( CleanUpsPerGame, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f14_arg0:get(),
			modelName = "currentFilter"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:addElement( CleanUpsPerGame ) --[[ @ 0]]
	self.CleanUpsPerGame = CleanUpsPerGame --[[ @ 0]]
	
	OtherHeader = CoD.PlayerStatsHeader.new( f1_arg0, f1_arg1, 0, 0, 15.5, 469.5, 0, 0, 560, 581 ) --[[ @ 0]]
	OtherHeader:setAlpha( 0 ) --[[ @ 0]]
	OtherHeader.HeaderText:setText( LocalizeToUpperString( @"menu/other" ) ) --[[ @ 0]]
	self:addElement( OtherHeader ) --[[ @ 0]]
	self.OtherHeader = OtherHeader --[[ @ 0]]
	
	dotline01 = LUI.UIImage.new( 0, 0, 8.5, 468.5, 0, 0, 224.5, 228.5 ) --[[ @ 0]]
	dotline01:setAlpha( 0.2 ) --[[ @ 0]]
	dotline01:setImage( RegisterImage( @"uie_ui_menu_social_emblem_dotline" ) ) --[[ @ 0]]
	dotline01:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_31CC85D0A86303B0" ) ) --[[ @ 0]]
	dotline01:setShaderVector( 0, 1.2, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( dotline01 ) --[[ @ 0]]
	self.dotline01 = dotline01 --[[ @ 0]]
	
	dotline02 = LUI.UIImage.new( 0, 0, 8.5, 468.5, 0, 0, 446.5, 450.5 ) --[[ @ 0]]
	dotline02:setAlpha( 0.2 ) --[[ @ 0]]
	dotline02:setImage( RegisterImage( @"uie_ui_menu_social_emblem_dotline" ) ) --[[ @ 0]]
	dotline02:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_31CC85D0A86303B0" ) ) --[[ @ 0]]
	dotline02:setShaderVector( 0, 1.2, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( dotline02 ) --[[ @ 0]]
	self.dotline02 = dotline02 --[[ @ 0]]
	
	local FuiBoxRight = LUI.UIImage.new( 0, 0, 435.5, 469.5, 0, 0, 42.5, 8.5 ) --[[ @ 0]]
	FuiBoxRight:setAlpha( 0.1 ) --[[ @ 0]]
	FuiBoxRight:setImage( RegisterImage( @"uie_ui_hud_vehicle_ac130_fui_box01" ) ) --[[ @ 0]]
	FuiBoxRight:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_31CC85D0A86303B0" ) ) --[[ @ 0]]
	FuiBoxRight:setShaderVector( 0, 1, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( FuiBoxRight ) --[[ @ 0]]
	self.FuiBoxRight = FuiBoxRight --[[ @ 0]]
	
	local FuiBoxLeft = LUI.UIImage.new( 0, 0, 10, 44, 0, 0, 42.5, 8.5 ) --[[ @ 0]]
	FuiBoxLeft:setAlpha( 0.1 ) --[[ @ 0]]
	FuiBoxLeft:setZRot( 90 ) --[[ @ 0]]
	FuiBoxLeft:setImage( RegisterImage( @"uie_ui_hud_vehicle_ac130_fui_box01" ) ) --[[ @ 0]]
	FuiBoxLeft:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_31CC85D0A86303B0" ) ) --[[ @ 0]]
	FuiBoxLeft:setShaderVector( 0, 1, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( FuiBoxLeft ) --[[ @ 0]]
	self.FuiBoxLeft = FuiBoxLeft --[[ @ 0]]
	
	local WZGameModeFilter = LUI.UIText.new( 0, 0, 20, 220, 0, 0, 76, 94 ) --[[ @ 0]]
	WZGameModeFilter:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	WZGameModeFilter:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	WZGameModeFilter:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	WZGameModeFilter:subscribeToGlobalModel( f1_arg1, "PlayerBarracksStats", "currentFilter", function ( model )
		local f15_local0 = model:get() --[[ @ 0]]
		if f15_local0 ~= nil then
			WZGameModeFilter:setText( LocalizeToUpperString( CoD.PlayerStatsUtility.GetWZGameModeFilterNameForType( f15_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( WZGameModeFilter ) --[[ @ 0]]
	self.WZGameModeFilter = WZGameModeFilter --[[ @ 0]]
	
	local WZGameModeFilterButton = LUI.UIText.new( 1, 1, -216.5, -16.5, 0, 0, 76, 94 ) --[[ @ 0]]
	WZGameModeFilterButton:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	WZGameModeFilterButton:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_4DB718E1421D5D37" ) ) --[[ @ 0]]
	WZGameModeFilterButton:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	WZGameModeFilterButton:setAlignment( Enum[@"luialignment"][@"lui_alignment_right"] ) --[[ @ 0]]
	self:addElement( WZGameModeFilterButton ) --[[ @ 0]]
	self.WZGameModeFilterButton = WZGameModeFilterButton --[[ @ 0]]
	
	local WZGameModeFilterButtonPC = nil --[[ @ 0]]
	
	WZGameModeFilterButtonPC = CoD.Barracks_StatsOverview_WZ_FilterPCString.new( f1_arg0, f1_arg1, 0, 0, 260.5, 460.5, 0, 0, 76, 94 ) --[[ @ 0]]
	self:addElement( WZGameModeFilterButtonPC ) --[[ @ 0]]
	self.WZGameModeFilterButtonPC = WZGameModeFilterButtonPC --[[ @ 0]]
	
	local WinLossRatio = CoD.Barracks_StatsOverview_WZ_Wins.new( f1_arg0, f1_arg1, 0, 0, 155, 465, 0, 0, 139, 203 ) --[[ @ 0]]
	WinLossRatio:mergeStateConditions( {
		{
			stateName = "Solos",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalDataSourceModelValueEqualToEnum( f1_arg1, "PlayerBarracksStats", "currentFilter", CoD.PlayerStatsUtility.WZGameModeDisplayType.SOLO )
			end
		},
		{
			stateName = "Duos",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalDataSourceModelValueEqualToEnum( f1_arg1, "PlayerBarracksStats", "currentFilter", CoD.PlayerStatsUtility.WZGameModeDisplayType.DUOS )
			end
		},
		{
			stateName = "Quads",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalDataSourceModelValueEqualToEnum( f1_arg1, "PlayerBarracksStats", "currentFilter", CoD.PlayerStatsUtility.WZGameModeDisplayType.QUADS )
			end
		},
		{
			stateName = "LTM",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalDataSourceModelValueEqualToEnum( f1_arg1, "PlayerBarracksStats", "currentFilter", CoD.PlayerStatsUtility.WZGameModeDisplayType.LTM )
			end
		}
	} ) --[[ @ 0]]
	local f1_local29 = WinLossRatio --[[ @ 0]]
	local f1_local30 = WinLossRatio.subscribeToModel --[[ @ 0]]
	local f1_local31 = DataSources.PlayerBarracksStats.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local30( f1_local29, f1_local31.currentFilter, function ( f20_arg0 )
		f1_arg0:updateElementState( WinLossRatio, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f20_arg0:get(),
			modelName = "currentFilter"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:addElement( WinLossRatio ) --[[ @ 0]]
	self.WinLossRatio = WinLossRatio --[[ @ 0]]
	
	f1_local29 = TimePlayedText --[[ @ 0]]
	f1_local30 = TimePlayedText.subscribeToModel --[[ @ 0]]
	f1_local31 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local30( f1_local29, f1_local31["PlayerBarracksStats.currentFilter"], TimePlayedText.__String_Reference ) --[[ @ 0]]
	f1_local29 = Wins --[[ @ 0]]
	f1_local30 = Wins.subscribeToModel --[[ @ 0]]
	f1_local31 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local30( f1_local29, f1_local31["PlayerBarracksStats.currentFilter"], Wins.StatValue.__Stat_Value ) --[[ @ 0]]
	f1_local29 = Kills --[[ @ 0]]
	f1_local30 = Kills.subscribeToModel --[[ @ 0]]
	f1_local31 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local30( f1_local29, f1_local31["PlayerBarracksStats.currentFilter"], Kills.StatValue.__Stat_Value ) --[[ @ 0]]
	f1_local29 = KillsPerGame --[[ @ 0]]
	f1_local30 = KillsPerGame.subscribeToModel --[[ @ 0]]
	f1_local31 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local30( f1_local29, f1_local31["PlayerBarracksStats.currentFilter"], KillsPerGame.StatValue.__Stat_Value ) --[[ @ 0]]
	f1_local29 = KillDeathRatio --[[ @ 0]]
	f1_local30 = KillDeathRatio.subscribeToModel --[[ @ 0]]
	f1_local31 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local30( f1_local29, f1_local31["PlayerBarracksStats.currentFilter"], KillDeathRatio.StatValue.__Stat_Value ) --[[ @ 0]]
	f1_local29 = HeadshotPct --[[ @ 0]]
	f1_local30 = HeadshotPct.subscribeToModel --[[ @ 0]]
	f1_local31 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local30( f1_local29, f1_local31["PlayerBarracksStats.currentFilter"], HeadshotPct.StatValue.__Stat_Value ) --[[ @ 0]]
	f1_local29 = KillsAfterRevivePct --[[ @ 0]]
	f1_local30 = KillsAfterRevivePct.subscribeToModel --[[ @ 0]]
	f1_local31 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local30( f1_local29, f1_local31["PlayerBarracksStats.currentFilter"], KillsAfterRevivePct.StatValue.__Stat_Value ) --[[ @ 0]]
	f1_local29 = HotDropKillPct --[[ @ 0]]
	f1_local30 = HotDropKillPct.subscribeToModel --[[ @ 0]]
	f1_local31 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local30( f1_local29, f1_local31["PlayerBarracksStats.currentFilter"], HotDropKillPct.StatValue.__Stat_Value ) --[[ @ 0]]
	f1_local29 = MostKills --[[ @ 0]]
	f1_local30 = MostKills.subscribeToModel --[[ @ 0]]
	f1_local31 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local30( f1_local29, f1_local31["PlayerBarracksStats.currentFilter"], MostKills.StatValue.__Stat_Value ) --[[ @ 0]]
	f1_local29 = LongestDistanceKill --[[ @ 0]]
	f1_local30 = LongestDistanceKill.subscribeToModel --[[ @ 0]]
	f1_local31 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local30( f1_local29, f1_local31["PlayerBarracksStats.currentFilter"], LongestDistanceKill.StatValue.__Stat_Value ) --[[ @ 0]]
	f1_local29 = AverageDamage --[[ @ 0]]
	f1_local30 = AverageDamage.subscribeToModel --[[ @ 0]]
	f1_local31 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local30( f1_local29, f1_local31["PlayerBarracksStats.currentFilter"], AverageDamage.StatValue.__Stat_Value ) --[[ @ 0]]
	self:mergeStateConditions( {
		{
			stateName = "KBM",
			condition = function ( menu, element, event )
				return IsMouseOrKeyboard( f1_arg1 )
			end
		},
		{
			stateName = "AsianLanguage",
			condition = function ( menu, element, event )
				return true
			end
		}
	} ) --[[ @ 0]]
	self:appendEventHandler( "input_source_changed", function ( f23_arg0, f23_arg1 )
		f23_arg1.menu = f23_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( self, f23_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	f1_local29 = self --[[ @ 0]]
	f1_local30 = self.subscribeToModel --[[ @ 0]]
	f1_local31 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local30( f1_local29, f1_local31.LastInput, function ( f24_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f24_arg0:get(),
			modelName = "LastInput"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.Barracks_StatsOverview_WZ.__resetProperties = function ( f25_arg0 )
	f25_arg0.WZGameModeFilterButtonPC:completeAnimation() --[[ @ 0]]
	f25_arg0.WZGameModeFilterButton:completeAnimation() --[[ @ 0]]
	f25_arg0.TimePlayedText:completeAnimation() --[[ @ 0]]
	f25_arg0.WZGameModeFilterButtonPC:setAlpha( 1 ) --[[ @ 0]]
	f25_arg0.WZGameModeFilterButton:setAlpha( 1 ) --[[ @ 0]]
	f25_arg0.TimePlayedText:setTopBottom( 0, 0, 44, 62 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.Barracks_StatsOverview_WZ.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f26_arg0, f26_arg1 )
			f26_arg0:__resetProperties() --[[ @ 0]]
			f26_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f26_arg0.WZGameModeFilterButtonPC:completeAnimation() --[[ @ 0]]
			f26_arg0.WZGameModeFilterButtonPC:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.WZGameModeFilterButtonPC ) --[[ @ 0]]
		end
	},
	KBM = {
		DefaultClip = function ( f27_arg0, f27_arg1 )
			f27_arg0:__resetProperties() --[[ @ 0]]
			f27_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f27_arg0.WZGameModeFilterButton:completeAnimation() --[[ @ 0]]
			f27_arg0.WZGameModeFilterButton:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.WZGameModeFilterButton ) --[[ @ 0]]
			f27_arg0.WZGameModeFilterButtonPC:completeAnimation() --[[ @ 0]]
			f27_arg0.WZGameModeFilterButtonPC:setAlpha( 1 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.WZGameModeFilterButtonPC ) --[[ @ 0]]
		end
	},
	AsianLanguage = {
		DefaultClip = function ( f28_arg0, f28_arg1 )
			f28_arg0:__resetProperties() --[[ @ 0]]
			f28_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f28_arg0.TimePlayedText:completeAnimation() --[[ @ 0]]
			f28_arg0.TimePlayedText:setTopBottom( 0, 0, 50, 63 ) --[[ @ 0]]
			f28_arg0.clipFinished( f28_arg0.TimePlayedText ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.Barracks_StatsOverview_WZ.__onClose = function ( f29_arg0 )
	f29_arg0.CommonDetailPanel2:close() --[[ @ 0]]
	f29_arg0.TimePlayedText:close() --[[ @ 0]]
	f29_arg0.Wins:close() --[[ @ 0]]
	f29_arg0.Kills:close() --[[ @ 0]]
	f29_arg0.KillsPerGame:close() --[[ @ 0]]
	f29_arg0.KillDeathRatio:close() --[[ @ 0]]
	f29_arg0.HeadshotPct:close() --[[ @ 0]]
	f29_arg0.KillsAfterRevivePct:close() --[[ @ 0]]
	f29_arg0.HotDropKillPct:close() --[[ @ 0]]
	f29_arg0.MostKills:close() --[[ @ 0]]
	f29_arg0.LongestDistanceKill:close() --[[ @ 0]]
	f29_arg0.EfficiencyHeader:close() --[[ @ 0]]
	f29_arg0.AverageDamage:close() --[[ @ 0]]
	f29_arg0.CleanUpsPerGame:close() --[[ @ 0]]
	f29_arg0.OtherHeader:close() --[[ @ 0]]
	f29_arg0.WZGameModeFilter:close() --[[ @ 0]]
	f29_arg0.WZGameModeFilterButtonPC:close() --[[ @ 0]]
	f29_arg0.WinLossRatio:close() --[[ @ 0]]
end
 --[[ @ 0]]
