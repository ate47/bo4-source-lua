-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:35
require( "x64:19f606d91eab9f64" ) --[[ @ 0]]
require( "ui/uieditor/widgets/common/commoncornerpips01" ) --[[ @ 0]]

CoD.ArenaDailyBonus = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.ArenaDailyBonus.__defaultWidth = 200 --[[ @ 0]]
CoD.ArenaDailyBonus.__defaultHeight = 70 --[[ @ 0]]
CoD.ArenaDailyBonus.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.ArenaDailyBonus ) --[[ @ 0]]
	self.id = "ArenaDailyBonus" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local bg = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	bg:setRGB( 0, 0, 0 ) --[[ @ 0]]
	bg:setAlpha( 0.5 ) --[[ @ 0]]
	self:addElement( bg ) --[[ @ 0]]
	self.bg = bg --[[ @ 0]]
	
	local CommonCornerPips = CoD.CommonCornerPips01.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	self:addElement( CommonCornerPips ) --[[ @ 0]]
	self.CommonCornerPips = CommonCornerPips --[[ @ 0]]
	
	local RemainingTime = CoD.ArenaEventTimer.new( f1_arg0, f1_arg1, 0, 0, 0, 260, 0, 0, -14, 0 ) --[[ @ 0]]
	RemainingTime:mergeStateConditions( {
		{
			stateName = "Event",
			condition = function ( menu, element, event )
				local f2_local0 = CoD.ArenaUtility.CurrentArenaEventTypeEquals( self, Enum[@"hash_6C0EA92D04BC003B"][@"hash_5C32571741C5B730"] ) --[[ @ 0]]
				if f2_local0 then
					f2_local0 = CoD.ArenaLeaguePlayUtility.HasOneMatchPlayed( self, f1_arg1 ) --[[ @ 0]]
					if f2_local0 then
						f2_local0 = CoD.ArenaUtility.IsDailyPoolRemainingCompleteTimer( self, f1_arg1, element ) --[[ @ 0]]
					end
				end
				return f2_local0
			end
		}
	} ) --[[ @ 0]]
	local bonusnumber = RemainingTime --[[ @ 0]]
	local bonustext = RemainingTime.subscribeToModel --[[ @ 0]]
	local f1_local6 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	bonustext( bonusnumber, f1_local6["lobbyPlaylist.name"], function ( f3_arg0 )
		f1_arg0:updateElementState( RemainingTime, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f3_arg0:get(),
			modelName = "lobbyPlaylist.name"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	bonusnumber = RemainingTime --[[ @ 0]]
	bonustext = RemainingTime.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	bonustext( bonusnumber, f1_local6["lobbyRoot.lobbyNav"], function ( f4_arg0 )
		f1_arg0:updateElementState( RemainingTime, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f4_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	bonusnumber = RemainingTime --[[ @ 0]]
	bonustext = RemainingTime.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	bonustext( bonusnumber, f1_local6["LeaguePlayLadder.entityLadderRank"], function ( f5_arg0 )
		f1_arg0:updateElementState( RemainingTime, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f5_arg0:get(),
			modelName = "LeaguePlayLadder.entityLadderRank"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	RemainingTime.EventEndsIn:setAlignment( Enum[@"LUIAlignment"][@"hash_1FEEB12BCB0D7041"] ) --[[ @ 0]]
	RemainingTime:subscribeToGlobalModel( f1_arg1, "Arena", "arenaLeaguePlayDailyPoolTimer", function ( model )
		local f6_local0 = model:get() --[[ @ 0]]
		if f6_local0 ~= nil then
			RemainingTime.EventEndsIn:setText( f6_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( RemainingTime ) --[[ @ 0]]
	self.RemainingTime = RemainingTime --[[ @ 0]]
	
	bonustext = LUI.UIText.new( 0.5, 0.5, -100, 100, 0, 0, 43, 67 ) --[[ @ 0]]
	bonustext:setRGB( ColorSet.T8__BIEGE.r, ColorSet.T8__BIEGE.g, ColorSet.T8__BIEGE.b ) --[[ @ 0]]
	bonustext:setText( LocalizeToUpperString( @"hash_4F15E6BF954D13D8" ) ) --[[ @ 0]]
	bonustext:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	bonustext:setLetterSpacing( 3 ) --[[ @ 0]]
	bonustext:setAlignment( Enum[@"LUIAlignment"][@"hash_1FEEB12BCB0D7041"] ) --[[ @ 0]]
	bonustext:setAlignment( Enum[@"LUIAlignment"][@"hash_E821F0ECFF8D1C7"] ) --[[ @ 0]]
	self:addElement( bonustext ) --[[ @ 0]]
	self.bonustext = bonustext --[[ @ 0]]
	
	bonusnumber = LUI.UIText.new( 0.5, 0.5, -100, 100, 0, 0, 2, 51 ) --[[ @ 0]]
	bonusnumber:setRGB( ColorSet.WarzoneTeammate3.r, ColorSet.WarzoneTeammate3.g, ColorSet.WarzoneTeammate3.b ) --[[ @ 0]]
	bonusnumber:setTTF( "0arame_mono_stencil" ) --[[ @ 0]]
	bonusnumber:setLetterSpacing( 2 ) --[[ @ 0]]
	bonusnumber:setAlignment( Enum[@"LUIAlignment"][@"hash_1FEEB12BCB0D7041"] ) --[[ @ 0]]
	bonusnumber:setAlignment( Enum[@"LUIAlignment"][@"hash_E821F0ECFF8D1C7"] ) --[[ @ 0]]
	bonusnumber:subscribeToGlobalModel( f1_arg1, "LeaguePlay", "dailyBonusPool", function ( model )
		local f7_local0 = model:get() --[[ @ 0]]
		if f7_local0 ~= nil then
			bonusnumber:setText( f7_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( bonusnumber ) --[[ @ 0]]
	self.bonusnumber = bonusnumber --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "LeaguePlay",
			condition = function ( menu, element, event )
				return CoD.ArenaUtility.CurrentArenaEventTypeEquals( self, Enum[@"hash_6C0EA92D04BC003B"][@"hash_5C32571741C5B730"] ) and CoD.ArenaLeaguePlayUtility.HasOneMatchPlayed( self, f1_arg1 )
			end
		}
	} ) --[[ @ 0]]
	local f1_local7 = self --[[ @ 0]]
	f1_local6 = self.subscribeToModel --[[ @ 0]]
	local f1_local8 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local6( f1_local7, f1_local8["lobbyPlaylist.name"], function ( f9_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f9_arg0:get(),
			modelName = "lobbyPlaylist.name"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = self --[[ @ 0]]
	f1_local6 = self.subscribeToModel --[[ @ 0]]
	f1_local8 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local6( f1_local7, f1_local8["lobbyRoot.lobbyNav"], function ( f10_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f10_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = self --[[ @ 0]]
	f1_local6 = self.subscribeToModel --[[ @ 0]]
	f1_local8 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local6( f1_local7, f1_local8["LeaguePlayLadder.entityLadderRank"], function ( f11_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f11_arg0:get(),
			modelName = "LeaguePlayLadder.entityLadderRank"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.ArenaDailyBonus.__resetProperties = function ( f12_arg0 )
	f12_arg0.bonusnumber:completeAnimation() --[[ @ 0]]
	f12_arg0.bonustext:completeAnimation() --[[ @ 0]]
	f12_arg0.RemainingTime:completeAnimation() --[[ @ 0]]
	f12_arg0.CommonCornerPips:completeAnimation() --[[ @ 0]]
	f12_arg0.bg:completeAnimation() --[[ @ 0]]
	f12_arg0.bonusnumber:setAlpha( 1 ) --[[ @ 0]]
	f12_arg0.bonustext:setAlpha( 1 ) --[[ @ 0]]
	f12_arg0.RemainingTime:setLeftRight( 0, 0, 0, 260 ) --[[ @ 0]]
	f12_arg0.RemainingTime:setTopBottom( 0, 0, -14, 0 ) --[[ @ 0]]
	f12_arg0.RemainingTime:setAlpha( 1 ) --[[ @ 0]]
	f12_arg0.CommonCornerPips:setAlpha( 1 ) --[[ @ 0]]
	f12_arg0.bg:setAlpha( 0.5 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ArenaDailyBonus.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f13_arg0, f13_arg1 )
			f13_arg0:__resetProperties() --[[ @ 0]]
			f13_arg0:setupElementClipCounter( 5 ) --[[ @ 0]]
			f13_arg0.bg:completeAnimation() --[[ @ 0]]
			f13_arg0.bg:setAlpha( 0 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.bg ) --[[ @ 0]]
			f13_arg0.CommonCornerPips:completeAnimation() --[[ @ 0]]
			f13_arg0.CommonCornerPips:setAlpha( 0 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.CommonCornerPips ) --[[ @ 0]]
			f13_arg0.RemainingTime:completeAnimation() --[[ @ 0]]
			f13_arg0.RemainingTime:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
			f13_arg0.RemainingTime:setTopBottom( 0, 0, -22, -8 ) --[[ @ 0]]
			f13_arg0.RemainingTime:setAlpha( 0 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.RemainingTime ) --[[ @ 0]]
			f13_arg0.bonustext:completeAnimation() --[[ @ 0]]
			f13_arg0.bonustext:setAlpha( 0 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.bonustext ) --[[ @ 0]]
			f13_arg0.bonusnumber:completeAnimation() --[[ @ 0]]
			f13_arg0.bonusnumber:setAlpha( 0 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.bonusnumber ) --[[ @ 0]]
		end
	},
	LeaguePlay = {
		DefaultClip = function ( f14_arg0, f14_arg1 )
			f14_arg0:__resetProperties() --[[ @ 0]]
			f14_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f14_arg0.RemainingTime:completeAnimation() --[[ @ 0]]
			f14_arg0.RemainingTime:setTopBottom( 0, 0, -19, -5 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.RemainingTime ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.ArenaDailyBonus.__onClose = function ( f15_arg0 )
	f15_arg0.CommonCornerPips:close() --[[ @ 0]]
	f15_arg0.RemainingTime:close() --[[ @ 0]]
	f15_arg0.bonusnumber:close() --[[ @ 0]]
end
 --[[ @ 0]]
