-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:48
require( "x64:2c2f840fd2528321" ) --[[ @ 0]]
require( "ui/uieditor/widgets/startmenu/options/startmenuoptionsmainframe" ) --[[ @ 0]]
require( "ui/uieditor/widgets/systemoverlays/systemoverlay_layout_foregroundmultilinetext" ) --[[ @ 0]]
require( "x64:1bd4f2948bbf0002" ) --[[ @ 0]]

CoD.systemOverlay_Layout_Groups = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.systemOverlay_Layout_Groups.__defaultWidth = 1920 --[[ @ 0]]
CoD.systemOverlay_Layout_Groups.__defaultHeight = 456 --[[ @ 0]]
CoD.systemOverlay_Layout_Groups.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	CoD.CraftUtility.SetSlotCustomizationType( f1_arg1, Enum[@"customizationtype"][@"customization_type_emblem"] ) --[[ @ 0]]
	self:setClass( CoD.systemOverlay_Layout_Groups ) --[[ @ 0]]
	self.id = "systemOverlay_Layout_Groups" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local Frame = CoD.StartMenuOptionsMainFrame.new( f1_arg0, f1_arg1, 0.5, 0.5, -722.5, -343.5, 0.5, 0.5, -214.5, 164.5 ) --[[ @ 0]]
	Frame:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	Frame:setAlpha( 0.04 ) --[[ @ 0]]
	self:addElement( Frame ) --[[ @ 0]]
	self.Frame = Frame --[[ @ 0]]
	
	local GroupEmblem = LUI.UIElement.new( 0, 0, 246.5, 606.5, 0, 0, 22, 380 ) --[[ @ 0]]
	GroupEmblem.__Group_ID = function ( f2_arg0 )
		local f2_local0 = f2_arg0:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			GroupEmblem:setupGroupEmblem( CoD.ClanUtility.GetClanEmblemRenderParams( f1_arg1, f2_local0 ) ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	GroupEmblem:linkToElementModel( self, "groupId", true, GroupEmblem.__Group_ID ) --[[ @ 0]]
	GroupEmblem.__Group_ID_FullPath = function ()
		local f3_local0 = self:getModel() --[[ @ 0]]
		if f3_local0 then
			f3_local0 = self:getModel() --[[ @ 0]]
			f3_local0 = f3_local0.groupId --[[ @ 0]]
		end
		if f3_local0 then
			GroupEmblem.__Group_ID( f3_local0 ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	self:addElement( GroupEmblem ) --[[ @ 0]]
	self.GroupEmblem = GroupEmblem --[[ @ 0]]
	
	local OptionList = LUI.UIList.new( f1_arg0, f1_arg1, 10, 0, nil, false, false, false, false ) --[[ @ 0]]
	OptionList:setLeftRight( 0.5, 0.5, -324, 76 ) --[[ @ 0]]
	OptionList:setTopBottom( 1, 1, -303.5, -103.5 ) --[[ @ 0]]
	OptionList:setWidgetType( CoD.EmblemOptionsButton ) --[[ @ 0]]
	OptionList:setVerticalCount( 3 ) --[[ @ 0]]
	OptionList:setSpacing( 10 ) --[[ @ 0]]
	OptionList:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	OptionList:linkToElementModel( self, "listDatasource", true, function ( model )
		local f4_local0 = model:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			OptionList:setDataSource( f4_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	OptionList:linkToElementModel( OptionList, "disabled", true, function ( model, f5_arg1 )
		CoD.Menu.UpdateButtonShownState( f5_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	OptionList:registerEventHandler( "list_item_gain_focus", function ( element, event )
		local f6_local0 = nil --[[ @ 0]]
		CoD.ClanUtility.SetOverlayWarningText( element, f1_arg1 ) --[[ @ 0]]
		CoD.ClanUtility.SetOverlayInfoText( element, f1_arg1 ) --[[ @ 0]]
		return f6_local0
	end ) --[[ @ 0]]
	OptionList:registerEventHandler( "gain_focus", function ( element, event )
		local f7_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f7_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f7_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		return f7_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( OptionList, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"], "ui_confirm", function ( element, menu, controller, model )
		if not IsDisabled( element, controller ) then
			ProcessListAction( self, element, controller, menu ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsDisabled( element, controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"menu/select", nil, "ui_confirm" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( OptionList ) --[[ @ 0]]
	self.OptionList = OptionList --[[ @ 0]]
	
	local text = CoD.systemOverlay_Layout_ForegroundMultilineText.new( f1_arg0, f1_arg1, 0.5, 0.5, -324, 948, 0, 0, 51, 81 ) --[[ @ 0]]
	text:setRGB( ColorSet.T8__OFF__GRAY.r, ColorSet.T8__OFF__GRAY.g, ColorSet.T8__OFF__GRAY.b ) --[[ @ 0]]
	text:setScale( LanguageOverrideNumber( "japanese", 0.85, 1, 1 ) ) --[[ @ 0]]
	text:linkToElementModel( self, "description", true, function ( model )
		local f10_local0 = model:get() --[[ @ 0]]
		if f10_local0 ~= nil then
			text.text:setText( CoD.BaseUtility.LocalizeIfXHash( f10_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( text ) --[[ @ 0]]
	self.text = text --[[ @ 0]]
	
	local title = LUI.UIText.new( 0.5, 0.5, -324, 948, 0, 0, 7, 52 ) --[[ @ 0]]
	title:setRGB( ColorSet.T8__BEIGE__HEADER.r, ColorSet.T8__BEIGE__HEADER.g, ColorSet.T8__BEIGE__HEADER.b ) --[[ @ 0]]
	title:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	title:setLetterSpacing( 6 ) --[[ @ 0]]
	title:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	title:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	title:linkToElementModel( self, "title", true, function ( model )
		local f11_local0 = model:get() --[[ @ 0]]
		if f11_local0 ~= nil then
			title:setText( ConvertToUpperString( CoD.BaseUtility.LocalizeIfXHash( f11_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( title ) --[[ @ 0]]
	self.title = title --[[ @ 0]]
	
	local categoryTypeImage = LUI.UIImage.new( 0.5, 0.5, -377.5, -353.5, 0, 0, 22, 46 ) --[[ @ 0]]
	categoryTypeImage:setRGB( ColorSet.T8__BEIGE__HEADER.r, ColorSet.T8__BEIGE__HEADER.g, ColorSet.T8__BEIGE__HEADER.b ) --[[ @ 0]]
	categoryTypeImage:linkToElementModel( self, "categoryType", true, function ( model )
		local f12_local0 = model:get() --[[ @ 0]]
		if f12_local0 ~= nil then
			categoryTypeImage:setImage( RegisterImage( GetCategoryIconForOverlayType( f12_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( categoryTypeImage ) --[[ @ 0]]
	self.categoryTypeImage = categoryTypeImage --[[ @ 0]]
	
	local supporText = LUI.UIText.new( 0, 0, 636, 1716, 0, 0, 96, 133 ) --[[ @ 0]]
	supporText:setTTF( "default" ) --[[ @ 0]]
	supporText:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	supporText:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	supporText:subscribeToGlobalModel( f1_arg1, "GroupOverlayInfo", "infoText", function ( model )
		local f13_local0 = model:get() --[[ @ 0]]
		if f13_local0 ~= nil then
			supporText:setText( f13_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( supporText ) --[[ @ 0]]
	self.supporText = supporText --[[ @ 0]]
	
	local groupName = LUI.UIText.new( 0, 0, 327, 527, 0, 0, 392.5, 429.5 ) --[[ @ 0]]
	groupName:setTTF( "default" ) --[[ @ 0]]
	groupName:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	groupName:setAlignment( Enum[@"luialignment"][@"lui_alignment_bottom"] ) --[[ @ 0]]
	groupName:linkToElementModel( self, "groupName", true, function ( model )
		local f14_local0 = model:get() --[[ @ 0]]
		if f14_local0 ~= nil then
			groupName:setText( f14_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( groupName ) --[[ @ 0]]
	self.groupName = groupName --[[ @ 0]]
	
	local ImagePrompt = CoD.ImagePrompt.new( f1_arg0, f1_arg1, 0, 0, 1082.5, 1857.5, 0, 0, 152.5, 212.5 ) --[[ @ 0]]
	ImagePrompt:mergeStateConditions( {
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return not CoD.ModelUtility.IsGlobalModelValueNonEmptyString( "GroupOverlayInfo.warningText" )
			end
		}
	} ) --[[ @ 0]]
	local f1_local10 = ImagePrompt --[[ @ 0]]
	local f1_local11 = ImagePrompt.subscribeToModel --[[ @ 0]]
	local f1_local12 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local11( f1_local10, f1_local12["GroupOverlayInfo.warningText"], function ( f16_arg0 )
		f1_arg0:updateElementState( ImagePrompt, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f16_arg0:get(),
			modelName = "GroupOverlayInfo.warningText"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ImagePrompt.ImagePromptInternal.warningIcon:setImage( RegisterImage( @"uie_t7_icon_menu_invite_fail" ) ) --[[ @ 0]]
	ImagePrompt:subscribeToGlobalModel( f1_arg1, "GroupOverlayInfo", "warningText", function ( model )
		local f17_local0 = model:get() --[[ @ 0]]
		if f17_local0 ~= nil then
			ImagePrompt.ImagePromptInternal.warningTextPrompt:setText( f17_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( ImagePrompt ) --[[ @ 0]]
	self.ImagePrompt = ImagePrompt --[[ @ 0]]
	
	f1_local10 = GroupEmblem --[[ @ 0]]
	f1_local11 = GroupEmblem.subscribeToModel --[[ @ 0]]
	f1_local12 = DataSources.SocialRoot.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local11( f1_local10, f1_local12["clans.loaded"], GroupEmblem.__Group_ID_FullPath ) --[[ @ 0]]
	OptionList.id = "OptionList" --[[ @ 0]]
	self.__defaultFocus = OptionList --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.systemOverlay_Layout_Groups.__onClose = function ( f18_arg0 )
	f18_arg0.Frame:close() --[[ @ 0]]
	f18_arg0.GroupEmblem:close() --[[ @ 0]]
	f18_arg0.OptionList:close() --[[ @ 0]]
	f18_arg0.text:close() --[[ @ 0]]
	f18_arg0.title:close() --[[ @ 0]]
	f18_arg0.categoryTypeImage:close() --[[ @ 0]]
	f18_arg0.supporText:close() --[[ @ 0]]
	f18_arg0.groupName:close() --[[ @ 0]]
	f18_arg0.ImagePrompt:close() --[[ @ 0]]
end
 --[[ @ 0]]
