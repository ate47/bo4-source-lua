-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:48
CoD.DeadSpectate_SpectatingModeButtonPrompt = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.DeadSpectate_SpectatingModeButtonPrompt.__defaultWidth = 37 --[[ @ 0]]
CoD.DeadSpectate_SpectatingModeButtonPrompt.__defaultHeight = 37 --[[ @ 0]]
CoD.DeadSpectate_SpectatingModeButtonPrompt.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.DeadSpectate_SpectatingModeButtonPrompt ) --[[ @ 0]]
	self.id = "DeadSpectate_SpectatingModeButtonPrompt" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local button = LUI.UIImage.new( 0.5, 0.5, -19, 19, 0.5, 0.5, -19, 19 ) --[[ @ 0]]
	button:subscribeToGlobalModel( f1_arg1, "Controller", "alt2_button_image", function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			button:setImage( RegisterImage( f2_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( button ) --[[ @ 0]]
	self.button = button --[[ @ 0]]
	
	local buttonMouse = nil --[[ @ 0]]
	
	buttonMouse = LUI.UIImage.new( 0.5, 0.5, -19, 19, 0.5, 0.5, -26, 19 ) --[[ @ 0]]
	buttonMouse:setAlpha( 0 ) --[[ @ 0]]
	buttonMouse:subscribeToGlobalModel( f1_arg1, "Controller", "mouse_middle_button_image", function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			buttonMouse:setImage( RegisterImage( f3_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( buttonMouse ) --[[ @ 0]]
	self.buttonMouse = buttonMouse --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "KeyMouse",
			condition = function ( menu, element, event )
				local f4_local0 --[[ @ 0]]
				if not IsGamepad( f1_arg1 ) then
					f4_local0 = IsPC() --[[ @ 0]]
				else
					f4_local0 = false --[[ @ 0]]
				end
				return f4_local0
			end
		}
	} ) --[[ @ 0]]
	self:appendEventHandler( "input_source_changed", function ( f5_arg0, f5_arg1 )
		f5_arg1.menu = f5_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( self, f5_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local f1_local3 = self --[[ @ 0]]
	local f1_local4 = self.subscribeToModel --[[ @ 0]]
	local f1_local5 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local4( f1_local3, f1_local5.LastInput, function ( f6_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f6_arg0:get(),
			modelName = "LastInput"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.DeadSpectate_SpectatingModeButtonPrompt.__resetProperties = function ( f7_arg0 )
	f7_arg0.button:completeAnimation() --[[ @ 0]]
	f7_arg0.buttonMouse:completeAnimation() --[[ @ 0]]
	f7_arg0.button:setAlpha( 1 ) --[[ @ 0]]
	f7_arg0.buttonMouse:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DeadSpectate_SpectatingModeButtonPrompt.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f8_arg0, f8_arg1 )
			f8_arg0:__resetProperties() --[[ @ 0]]
			f8_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	KeyMouse = {
		DefaultClip = function ( f9_arg0, f9_arg1 )
			f9_arg0:__resetProperties() --[[ @ 0]]
			f9_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f9_arg0.button:completeAnimation() --[[ @ 0]]
			f9_arg0.button:setAlpha( 0 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.button ) --[[ @ 0]]
			f9_arg0.buttonMouse:completeAnimation() --[[ @ 0]]
			f9_arg0.buttonMouse:setAlpha( 1 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.buttonMouse ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.DeadSpectate_SpectatingModeButtonPrompt.__onClose = function ( f10_arg0 )
	f10_arg0.button:close() --[[ @ 0]]
	f10_arg0.buttonMouse:close() --[[ @ 0]]
end
 --[[ @ 0]]
