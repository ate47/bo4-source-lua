-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:50
require( "x64:2b64d9dfa5911bd2" ) --[[ @ 0]]
require( "x64:753cb15c89114c6" ) --[[ @ 0]]
require( "x64:12190adaba331dcb" ) --[[ @ 0]]

CoD.StartMenu_ChangeSpecialist_CT = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.StartMenu_ChangeSpecialist_CT.__defaultWidth = 1725 --[[ @ 0]]
CoD.StartMenu_ChangeSpecialist_CT.__defaultHeight = 780 --[[ @ 0]]
CoD.StartMenu_ChangeSpecialist_CT.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	if IsInGame() then
		CoD.PlayerRoleUtility.SetPositionDraftSelectedCharacterIndex( f1_arg1 ) --[[ @ 0]]
	end
	self:setClass( CoD.StartMenu_ChangeSpecialist_CT ) --[[ @ 0]]
	self.id = "StartMenu_ChangeSpecialist_CT" --[[ @ 0]]
	self.soundSet = "MultiplayerMain" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	
	local specialistRespawnDesc = LUI.UIText.new( 0.5, 0.5, -281.5, 281.5, 0.5, 0.5, -246, -213 ) --[[ @ 0]]
	specialistRespawnDesc:setRGB( ColorSet.T8__BIEGE.r, ColorSet.T8__BIEGE.g, ColorSet.T8__BIEGE.b ) --[[ @ 0]]
	specialistRespawnDesc:setZoom( 10 ) --[[ @ 0]]
	specialistRespawnDesc:setText( LocalizeToUpperString( @"menu/specialist" ) ) --[[ @ 0]]
	specialistRespawnDesc:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	specialistRespawnDesc:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	specialistRespawnDesc:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	self:addElement( specialistRespawnDesc ) --[[ @ 0]]
	self.specialistRespawnDesc = specialistRespawnDesc --[[ @ 0]]
	
	local Characters = LUI.UIList.new( f1_arg0, f1_arg1, 2, 0, nil, false, false, false, false ) --[[ @ 0]]
	Characters:mergeStateConditions( {
		{
			stateName = "ViewSelectedPlayer_Searching",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		}
	} ) --[[ @ 0]]
	local f1_local3 = Characters --[[ @ 0]]
	local DraftCooldown = Characters.subscribeToModel --[[ @ 0]]
	local SignatureAbility = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	DraftCooldown( f1_local3, SignatureAbility["PositionEditLoadout.SelectedCharacterIndex"], function ( f3_arg0 )
		f1_arg0:updateElementState( Characters, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f3_arg0:get(),
			modelName = "PositionEditLoadout.SelectedCharacterIndex"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	Characters:linkToElementModel( Characters, "characterIndex", true, function ( model )
		f1_arg0:updateElementState( Characters, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "characterIndex"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	Characters:linkToElementModel( Characters, "isBMLocked", true, function ( model )
		f1_arg0:updateElementState( Characters, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "isBMLocked"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	Characters:linkToElementModel( Characters, "disabled", true, function ( model )
		f1_arg0:updateElementState( Characters, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "disabled"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	Characters:linkToElementModel( Characters, "unavailable", true, function ( model )
		f1_arg0:updateElementState( Characters, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "unavailable"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	f1_local3 = Characters --[[ @ 0]]
	DraftCooldown = Characters.subscribeToModel --[[ @ 0]]
	SignatureAbility = Engine[@"getglobalmodel"]() --[[ @ 0]]
	DraftCooldown( f1_local3, SignatureAbility["hudItems.specialistSwitchIsLethal"], function ( f8_arg0 )
		f1_arg0:updateElementState( Characters, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f8_arg0:get(),
			modelName = "hudItems.specialistSwitchIsLethal"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local3 = Characters --[[ @ 0]]
	DraftCooldown = Characters.subscribeToModel --[[ @ 0]]
	SignatureAbility = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	DraftCooldown( f1_local3, SignatureAbility["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_player_dead"]], function ( f9_arg0 )
		f1_arg0:updateElementState( Characters, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f9_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_player_dead"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	Characters:setLeftRight( 0.5, 0.5, -268, -100 ) --[[ @ 0]]
	Characters:setTopBottom( 0.5, 0.5, -141, 14 ) --[[ @ 0]]
	Characters:setScale( 2, 2 ) --[[ @ 0]]
	Characters:setWidgetType( CoD.PositionDraft_Character ) --[[ @ 0]]
	Characters:setBalanceGridRows( true ) --[[ @ 0]]
	Characters:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	Characters:setDataSource( "PositionDraftCharacters" ) --[[ @ 0]]
	Characters:registerEventHandler( "lose_list_focus", function ( element, event )
		local f10_local0 = nil --[[ @ 0]]
		CoD.GridAndListUtility.UpdateDataSource( self.Characters, false, false, false ) --[[ @ 0]]
		return f10_local0
	end ) --[[ @ 0]]
	self:addElement( Characters ) --[[ @ 0]]
	self.Characters = Characters --[[ @ 0]]
	
	DraftCooldown = CoD.PositionDraft_Cooldown.new( f1_arg0, f1_arg1, 0.5, 0.5, -862.5, 862.5, 0.5, 0.5, -369.5, -332.5 ) --[[ @ 0]]
	DraftCooldown:setZoom( 10 ) --[[ @ 0]]
	self:addElement( DraftCooldown ) --[[ @ 0]]
	self.DraftCooldown = DraftCooldown --[[ @ 0]]
	
	f1_local3 = nil --[[ @ 0]]
	f1_local3 = LUI.UIElement.createFake() --[[ @ 0]]
	self.QuitButton = f1_local3 --[[ @ 0]]
	
	SignatureAbility = CoD.StartMenu_SignatureItem.new( f1_arg0, f1_arg1, 0.5, 0.5, -13, 527, 0.5, 0.5, -45.5, 69.5 ) --[[ @ 0]]
	SignatureAbility:setScale( 0.8, 0.8 ) --[[ @ 0]]
	self:addElement( SignatureAbility ) --[[ @ 0]]
	self.SignatureAbility = SignatureAbility --[[ @ 0]]
	
	local SignatureEquipment = CoD.StartMenu_SignatureItem.new( f1_arg0, f1_arg1, 0.5, 0.5, -13, 527, 0.5, 0.5, -160.5, -45.5 ) --[[ @ 0]]
	SignatureEquipment:setScale( 0.8, 0.8 ) --[[ @ 0]]
	self:addElement( SignatureEquipment ) --[[ @ 0]]
	self.SignatureEquipment = SignatureEquipment --[[ @ 0]]
	
	SignatureAbility:linkToElementModel( Characters, "equipment", false, function ( model )
		SignatureAbility:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	SignatureEquipment:linkToElementModel( Characters, "ability", false, function ( model )
		SignatureEquipment:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:subscribeToGlobalModel( f1_arg1, "PerController", "scriptNotify", function ( model )
		local f13_local0 = self --[[ @ 0]]
		if CoD.ModelUtility.IsParamModelEqualToHashString( model, @"hash_2DDDF8559F5B304D" ) and CoD.ModelUtility.IsScriptNotifyDataArgEqualTo( model, 1, 1 ) then
			CoD.ModelUtility.SetScriptNotifyDataArg( model, 1, 0 ) --[[ @ 0]]
			StartMenuGoBack( f1_arg0, f1_arg1 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	Characters.id = "Characters" --[[ @ 0]]
	f1_local3:appendEventHandler( "menu_loaded", function ()
		f1_local3:setModel( f1_arg0.buttonModel, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	f1_local3.id = "QuitButton" --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	local f1_local7 = self --[[ @ 0]]
	if IsPC() and IsMouseOrKeyboard( f1_arg1 ) then
		CoD.PCUtility.SetListOrGridAsAcceptingFocusToActiveElement( self.Characters ) --[[ @ 0]]
	end
	f1_local7 = Characters --[[ @ 0]]
	if IsPC() then
		SetElementPropertyEnum( f1_local7, "tooltipArchetype", CoD.FreeCursorUtility.TooltipArchetypes.DEFAULT ) --[[ @ 0]]
	else
		SetElementPropertyEnum( f1_local7, "tooltipArchetype", CoD.FreeCursorUtility.TooltipArchetypes.DEFAULT ) --[[ @ 0]]
	end
	return self
end
 --[[ @ 0]]
CoD.StartMenu_ChangeSpecialist_CT.__onClose = function ( f15_arg0 )
	f15_arg0.SignatureAbility:close() --[[ @ 0]]
	f15_arg0.SignatureEquipment:close() --[[ @ 0]]
	f15_arg0.Characters:close() --[[ @ 0]]
	f15_arg0.DraftCooldown:close() --[[ @ 0]]
	f15_arg0.QuitButton:close() --[[ @ 0]]
end
 --[[ @ 0]]
