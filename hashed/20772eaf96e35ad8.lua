-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:33
require( "x64:59e72f5e31108d41" ) --[[ @ 0]]

CoD.ScoreInfo_RoundList = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.ScoreInfo_RoundList.__defaultWidth = 72 --[[ @ 0]]
CoD.ScoreInfo_RoundList.__defaultHeight = 32 --[[ @ 0]]
CoD.ScoreInfo_RoundList.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.ScoreInfo_RoundList ) --[[ @ 0]]
	self.id = "ScoreInfo_RoundList" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local RoundPips = LUI.UIList.new( f1_arg0, f1_arg1, -12, 0, nil, false, false, false, false ) --[[ @ 0]]
	RoundPips:setLeftRight( 0, 0, 0, 72 ) --[[ @ 0]]
	RoundPips:setTopBottom( 1, 1, -2, 30 ) --[[ @ 0]]
	RoundPips:setWidgetType( CoD.WarScoreInfo_RoundPip ) --[[ @ 0]]
	RoundPips:setSpacing( -12 ) --[[ @ 0]]
	RoundPips:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	RoundPips:subscribeToGlobalModel( f1_arg1, "GameScore", "roundWinLimit", function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			RoundPips:setHorizontalCount( f2_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( RoundPips, "setWidth", function ( element, controller )
		ScaleToElementWidth( self, element, 0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( RoundPips ) --[[ @ 0]]
	self.RoundPips = RoundPips --[[ @ 0]]
	
	local RoundScoreText = LUI.UIText.new( 0.5, 0.5, -100, 100, 0, 0, 36, 55 ) --[[ @ 0]]
	RoundScoreText:setAlpha( 0 ) --[[ @ 0]]
	RoundScoreText:setText( "" ) --[[ @ 0]]
	RoundScoreText:setTTF( "0arame_mono_stencil" ) --[[ @ 0]]
	RoundScoreText:setLetterSpacing( 6 ) --[[ @ 0]]
	RoundScoreText:setAlignment( Enum[@"LUIAlignment"][@"hash_1FEEB12BCB0D7041"] ) --[[ @ 0]]
	RoundScoreText:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	self:addElement( RoundScoreText ) --[[ @ 0]]
	self.RoundScoreText = RoundScoreText --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Visible",
			condition = function ( menu, element, event )
				local f4_local0 --[[ @ 0]]
				if not IsGametypeSettingsValue( "roundWinLimit", 0 ) and not IsGametypeSettingsValue( "roundWinLimit", 1 ) then
					f4_local0 = CoD.GameTypeUtility.ShowRoundPips() --[[ @ 0]]
				else
					f4_local0 = false --[[ @ 0]]
				end
				return f4_local0
			end
		},
		{
			stateName = "VisibleSmall",
			condition = function ( menu, element, event )
				local f5_local0 --[[ @ 0]]
				if not IsGametypeSettingsValue( "roundWinLimit", 0 ) and not IsGametypeSettingsValue( "roundWinLimit", 1 ) then
					f5_local0 = CoD.GameTypeUtility.ShowSmallRoundPips() --[[ @ 0]]
				else
					f5_local0 = false --[[ @ 0]]
				end
				return f5_local0
			end
		},
		{
			stateName = "VisibleNumbers",
			condition = function ( menu, element, event )
				local f6_local0 --[[ @ 0]]
				if not IsGametypeSettingsValue( "roundWinLimit", 0 ) then
					f6_local0 = not IsGametypeSettingsValue( "roundWinLimit", 1 ) --[[ @ 0]]
				else
					f6_local0 = false --[[ @ 0]]
				end
				return f6_local0
			end
		}
	} ) --[[ @ 0]]
	RoundPips.id = "RoundPips" --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.ScoreInfo_RoundList.__resetProperties = function ( f7_arg0 )
	f7_arg0.RoundPips:completeAnimation() --[[ @ 0]]
	f7_arg0.RoundScoreText:completeAnimation() --[[ @ 0]]
	f7_arg0.RoundPips:setAlpha( 1 ) --[[ @ 0]]
	f7_arg0.RoundPips:setScale( 1, 1 ) --[[ @ 0]]
	f7_arg0.RoundScoreText:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ScoreInfo_RoundList.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f8_arg0, f8_arg1 )
			f8_arg0:__resetProperties() --[[ @ 0]]
			f8_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f8_arg0.RoundPips:completeAnimation() --[[ @ 0]]
			f8_arg0.RoundPips:setAlpha( 0 ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.RoundPips ) --[[ @ 0]]
			f8_arg0.RoundScoreText:completeAnimation() --[[ @ 0]]
			f8_arg0.RoundScoreText:setAlpha( 0 ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.RoundScoreText ) --[[ @ 0]]
		end
	},
	Visible = {
		DefaultClip = function ( f9_arg0, f9_arg1 )
			f9_arg0:__resetProperties() --[[ @ 0]]
			f9_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f9_arg0.RoundPips:completeAnimation() --[[ @ 0]]
			f9_arg0.RoundPips:setAlpha( 1 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.RoundPips ) --[[ @ 0]]
			f9_arg0.RoundScoreText:completeAnimation() --[[ @ 0]]
			f9_arg0.RoundScoreText:setAlpha( 0 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.RoundScoreText ) --[[ @ 0]]
		end
	},
	VisibleSmall = {
		DefaultClip = function ( f10_arg0, f10_arg1 )
			f10_arg0:__resetProperties() --[[ @ 0]]
			f10_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f10_arg0.RoundPips:completeAnimation() --[[ @ 0]]
			f10_arg0.RoundPips:setScale( 0.75, 0.75 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.RoundPips ) --[[ @ 0]]
		end
	},
	VisibleNumbers = {
		DefaultClip = function ( f11_arg0, f11_arg1 )
			f11_arg0:__resetProperties() --[[ @ 0]]
			f11_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f11_arg0.RoundPips:completeAnimation() --[[ @ 0]]
			f11_arg0.RoundPips:setAlpha( 0 ) --[[ @ 0]]
			f11_arg0.clipFinished( f11_arg0.RoundPips ) --[[ @ 0]]
			f11_arg0.RoundScoreText:completeAnimation() --[[ @ 0]]
			f11_arg0.RoundScoreText:setAlpha( 1 ) --[[ @ 0]]
			f11_arg0.clipFinished( f11_arg0.RoundScoreText ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.ScoreInfo_RoundList.__onClose = function ( f12_arg0 )
	f12_arg0.RoundPips:close() --[[ @ 0]]
end
 --[[ @ 0]]
