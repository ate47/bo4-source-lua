-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:33
require( "ui/uieditor/widgets/bumperbuttonwithkeymousetext" ) --[[ @ 0]]
require( "x64:4673b9bfc92c298b" ) --[[ @ 0]]

CoD.InspectionPlayerList = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.InspectionPlayerList.__defaultWidth = 1920 --[[ @ 0]]
CoD.InspectionPlayerList.__defaultHeight = 70 --[[ @ 0]]
CoD.InspectionPlayerList.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIHorizontalList.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9, 30, false ) --[[ @ 0]]
	self:setAlignment( LUI.Alignment.Center ) --[[ @ 0]]
	self:setClass( CoD.InspectionPlayerList ) --[[ @ 0]]
	self.id = "InspectionPlayerList" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local LB = CoD.BumperButtonWithKeyMouseText.new( f1_arg0, f1_arg1, 0.5, 0.5, -665.5, -465.5, 0.5, 0.5, -17, 17 ) --[[ @ 0]]
	LB.GamepadPrompt:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_5BDCD5292604F434" ) ) --[[ @ 0]]
	LB.GamepadPrompt:setAlignment( Enum[@"LUIAlignment"][@"hash_3830CFD395E6AA0A"] ) --[[ @ 0]]
	self:addElement( LB ) --[[ @ 0]]
	self.LB = LB --[[ @ 0]]
	
	local PartyList = LUI.UIList.new( f1_arg0, f1_arg1, 5, 0, nil, false, false, false, false ) --[[ @ 0]]
	PartyList:setLeftRight( 0, 0, 524.5, 1395.5 ) --[[ @ 0]]
	PartyList:setTopBottom( 0, 0, 0, 68 ) --[[ @ 0]]
	PartyList:setWidgetType( CoD.DirectorLobbyMember ) --[[ @ 0]]
	PartyList:setHorizontalCount( 12 ) --[[ @ 0]]
	PartyList:setSpacing( 5 ) --[[ @ 0]]
	PartyList:setAlignment( Enum[@"LUIAlignment"][@"hash_1FEEB12BCB0D7041"] ) --[[ @ 0]]
	PartyList:setBackingWidgetYPadding( -7 ) --[[ @ 0]]
	PartyList:setDataSource( "DirectorLobbyListAll" ) --[[ @ 0]]
	PartyList:registerEventHandler( "list_active_changed", function ( element, event )
		local f2_local0 = nil --[[ @ 0]]
		UpdatePlayerInspection( self, element, f1_arg1 ) --[[ @ 0]]
		SetSelectedFriendXUID( self, element, f1_arg1 ) --[[ @ 0]]
		UpdatePlayerInspectionWeapon( self, element, f1_arg1 ) --[[ @ 0]]
		return f2_local0
	end ) --[[ @ 0]]
	self:addElement( PartyList ) --[[ @ 0]]
	self.PartyList = PartyList --[[ @ 0]]
	
	local RB = CoD.BumperButtonWithKeyMouseText.new( f1_arg0, f1_arg1, 0, 0, 1425.5, 1625.5, 0.5, 0.5, -17, 17 ) --[[ @ 0]]
	RB.GamepadPrompt:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_5BFED5292621DA9A" ) ) --[[ @ 0]]
	self:addElement( RB ) --[[ @ 0]]
	self.RB = RB --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "HiddenArena",
			condition = function ( menu, element, event )
				local f3_local0 --[[ @ 0]]
				if not CoD.GridAndListUtility.ListElementHasAtLeastNumElements( self.PartyList, 2 ) and not CoD.ArenaUtility.ArenaMatchSet( self ) then
					f3_local0 = IsArenaMode() --[[ @ 0]]
				else
					f3_local0 = false --[[ @ 0]]
				end
				return f3_local0
			end
		},
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return not CoD.GridAndListUtility.ListElementHasAtLeastNumElements( self.PartyList, 2 )
			end
		},
		{
			stateName = "Arena",
			condition = function ( menu, element, event )
				local f5_local0 --[[ @ 0]]
				if not CoD.ArenaUtility.ArenaMatchSet( self ) then
					f5_local0 = IsArenaMode() --[[ @ 0]]
				else
					f5_local0 = false --[[ @ 0]]
				end
				return f5_local0
			end
		}
	} ) --[[ @ 0]]
	self:appendEventHandler( "grid_updated", function ( f6_arg0, f6_arg1 )
		f6_arg1.menu = f6_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( self, f6_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local f1_local4 = self --[[ @ 0]]
	local f1_local5 = self.subscribeToModel --[[ @ 0]]
	local f1_local6 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local5( f1_local4, f1_local6["lobbyRoot.publicLobby.stage"], function ( f7_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f7_arg0:get(),
			modelName = "lobbyRoot.publicLobby.stage"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local4 = self --[[ @ 0]]
	f1_local5 = self.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local5( f1_local4, f1_local6["lobbyRoot.lobbyNav"], function ( f8_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f8_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( self, "setState", function ( element, controller, f9_arg2, f9_arg3, f9_arg4 )
		if IsSelfInState( self, "HiddenArena" ) then
			SetListDataSource( self.PartyList, "DirectorPartyList" ) --[[ @ 0]]
			UpdateSelfState( self, controller ) --[[ @ 0]]
		elseif IsSelfInState( self, "Hidden" ) then
			SetListDataSource( self.PartyList, "DirectorLobbyListAll" ) --[[ @ 0]]
			UpdateSelfState( self, controller ) --[[ @ 0]]
		elseif IsSelfInState( self, "Arena" ) then
			SetListDataSource( self.PartyList, "DirectorPartyList" ) --[[ @ 0]]
			UpdateSelfState( self, controller ) --[[ @ 0]]
		elseif IsSelfInState( self, "DefaultState" ) then
			SetListDataSource( self.PartyList, "DirectorLobbyListAll" ) --[[ @ 0]]
			UpdateSelfState( self, controller ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	PartyList.id = "PartyList" --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	f1_local5 = self --[[ @ 0]]
	EnableNavigation( self, "PartyList" ) --[[ @ 0]]
	CoD.GridAndListUtility.AddBumperNavigation( f1_arg0, PartyList, f1_arg1 ) --[[ @ 0]]
	return self
end
 --[[ @ 0]]
CoD.InspectionPlayerList.__resetProperties = function ( f10_arg0 )
	f10_arg0.RB:completeAnimation() --[[ @ 0]]
	f10_arg0.PartyList:completeAnimation() --[[ @ 0]]
	f10_arg0.LB:completeAnimation() --[[ @ 0]]
	f10_arg0.RB:setAlpha( 1 ) --[[ @ 0]]
	f10_arg0.PartyList:setAlpha( 1 ) --[[ @ 0]]
	f10_arg0.LB:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.InspectionPlayerList.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f11_arg0, f11_arg1 )
			f11_arg0:__resetProperties() --[[ @ 0]]
			f11_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	HiddenArena = {
		DefaultClip = function ( f12_arg0, f12_arg1 )
			f12_arg0:__resetProperties() --[[ @ 0]]
			f12_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f12_arg0.LB:completeAnimation() --[[ @ 0]]
			f12_arg0.LB:setAlpha( 0 ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.LB ) --[[ @ 0]]
			f12_arg0.PartyList:completeAnimation() --[[ @ 0]]
			f12_arg0.PartyList:setAlpha( 0 ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.PartyList ) --[[ @ 0]]
			f12_arg0.RB:completeAnimation() --[[ @ 0]]
			f12_arg0.RB:setAlpha( 0 ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.RB ) --[[ @ 0]]
		end
	},
	Hidden = {
		DefaultClip = function ( f13_arg0, f13_arg1 )
			f13_arg0:__resetProperties() --[[ @ 0]]
			f13_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f13_arg0.LB:completeAnimation() --[[ @ 0]]
			f13_arg0.LB:setAlpha( 0 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.LB ) --[[ @ 0]]
			f13_arg0.PartyList:completeAnimation() --[[ @ 0]]
			f13_arg0.PartyList:setAlpha( 0 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.PartyList ) --[[ @ 0]]
			f13_arg0.RB:completeAnimation() --[[ @ 0]]
			f13_arg0.RB:setAlpha( 0 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.RB ) --[[ @ 0]]
		end
	},
	Arena = {
		DefaultClip = function ( f14_arg0, f14_arg1 )
			f14_arg0:__resetProperties() --[[ @ 0]]
			f14_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.InspectionPlayerList.__onClose = function ( f15_arg0 )
	f15_arg0.LB:close() --[[ @ 0]]
	f15_arg0.PartyList:close() --[[ @ 0]]
	f15_arg0.RB:close() --[[ @ 0]]
end
 --[[ @ 0]]
