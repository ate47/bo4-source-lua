-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:50
require( "ui/uieditor/widgets/cac/cac_background_slide_panel" ) --[[ @ 0]]
require( "ui/uieditor/widgets/cac/itemnamedescunlocktext" ) --[[ @ 0]]
require( "x64:28a564360a773656" ) --[[ @ 0]]
require( "ui/uieditor/widgets/common/commonheader" ) --[[ @ 0]]
require( "ui/uieditor/widgets/footer/footercontainer_frontend_right" ) --[[ @ 0]]
require( "ui/uieditor/widgets/header/header_container_frontend" ) --[[ @ 0]]
require( "x64:2e91724b6a77f8c9" ) --[[ @ 0]]
require( "ui/uieditor/widgets/pc/utility/xcammousecontrol" ) --[[ @ 0]]

CoD.WZPersonalizeWeapon = InheritFrom( CoD.Menu ) --[[ @ 0]]
LUI.createMenu.WZPersonalizeWeapon = function ( f1_arg0, f1_arg1 )
	local self = CoD.Menu.NewForUIEditor( "WZPersonalizeWeapon", f1_arg0 ) --[[ @ 0]]
	local f1_local1 = self --[[ @ 0]]
	CoD.BaseUtility.SetPropertiesFromUserData( self, f1_arg1 ) --[[ @ 0]]
	SendClientScriptMenuChangeNotify( f1_arg0, f1_local1, true ) --[[ @ 0]]
	SetControllerModelValue( f1_arg0, "Unlockables.listUpdate", 0 ) --[[ @ 0]]
	CoD.BaseUtility.InitControllerModelIfNotSet( f1_arg0, "CustomClassList.equippedItemsChanged", false ) --[[ @ 0]]
	SetControllerModelValue( f1_arg0, "WeaponPersonalization.listUpdate", 0 ) --[[ @ 0]]
	CoD.WeaponOptionsUtility.InitPaintCansCountModel( f1_arg0 ) --[[ @ 0]]
	SetMenuProperty( f1_local1, "__ignoreUnlockablesDefaultSelectIndex", true ) --[[ @ 0]]
	self:setClass( CoD.WZPersonalizeWeapon ) --[[ @ 0]]
	self.soundSet = "CAC_PrimaryWeapon" --[[ @ 0]]
	self:setOwner( f1_arg0 ) --[[ @ 0]]
	self:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	self:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	self:playSound( "menu_open", f1_arg0 ) --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_local1:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	local XCamMouseControl = nil --[[ @ 0]]
	
	XCamMouseControl = CoD.XCamMouseControl.new( f1_local1, f1_arg0, 0, 1, 0, 0, 0, 0, 146, 646 ) --[[ @ 0]]
	self:addElement( XCamMouseControl ) --[[ @ 0]]
	self.XCamMouseControl = XCamMouseControl --[[ @ 0]]
	
	local BackgroundSlidePanel = CoD.cac_background_slide_panel.new( f1_local1, f1_arg0, 0, 1, 0, 0, 0, 0, 672, 1294 ) --[[ @ 0]]
	BackgroundSlidePanel:setZoom( 70 ) --[[ @ 0]]
	self:addElement( BackgroundSlidePanel ) --[[ @ 0]]
	self.BackgroundSlidePanel = BackgroundSlidePanel --[[ @ 0]]
	
	local CACHeader = CoD.CommonHeader.new( f1_local1, f1_arg0, 0.5, 0.5, -960, 960, 0, 0, 0, 67 ) --[[ @ 0]]
	CACHeader.subtitle.StageTitle:setText( LocalizeToUpperString( @"hash_194122F68876E5D9" ) ) --[[ @ 0]]
	CACHeader.subtitle.subtitle:setAlpha( 0 ) --[[ @ 0]]
	CACHeader:subscribeToGlobalModel( f1_arg0, "LobbyRoot", "lobbyTitle", function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			CACHeader.subtitle.subtitle:setText( Engine[@"hash_4F9F1239CFD921FE"]( f2_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	CACHeader:linkToElementModel( self, nil, false, function ( model )
		CACHeader:setModel( model, f1_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	CACHeader:registerEventHandler( "menu_loaded", function ( element, event )
		local f4_local0 = nil --[[ @ 0]]
		if element.menuLoaded then
			f4_local0 = element:menuLoaded( event ) --[[ @ 0]]
		elseif element.super.menuLoaded then
			f4_local0 = element.super:menuLoaded( event ) --[[ @ 0]]
		end
		SizeToSafeArea( element, f1_arg0 ) --[[ @ 0]]
		if not f4_local0 then
			f4_local0 = element:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f4_local0
	end ) --[[ @ 0]]
	self:addElement( CACHeader ) --[[ @ 0]]
	self.CACHeader = CACHeader --[[ @ 0]]
	
	local ItemInfo = CoD.ItemNameDescUnlockText.new( f1_local1, f1_arg0, 0.5, 0.5, -792, -292, 0, 0, 451.5, 558.5 ) --[[ @ 0]]
	ItemInfo:mergeStateConditions( {
		{
			stateName = "WZArmory",
			condition = function ( menu, element, event )
				return AlwaysTrue()
			end
		}
	} ) --[[ @ 0]]
	self:addElement( ItemInfo ) --[[ @ 0]]
	self.ItemInfo = ItemInfo --[[ @ 0]]
	
	local WeaponListWidget = CoD.WZPersonalizeWeapon_WeaponListWidget.new( f1_local1, f1_arg0, 0.5, 0.5, -960, 960, 0, 0, 673, 1163 ) --[[ @ 0]]
	self:addElement( WeaponListWidget ) --[[ @ 0]]
	self.WeaponListWidget = WeaponListWidget --[[ @ 0]]
	
	local FooterContainerFrontendRight = CoD.FooterContainer_Frontend_Right.new( f1_local1, f1_arg0, 0, 1, 0, 0, 1, 1, -48, 0 ) --[[ @ 0]]
	FooterContainerFrontendRight:registerEventHandler( "menu_loaded", function ( element, event )
		local f6_local0 = nil --[[ @ 0]]
		if element.menuLoaded then
			f6_local0 = element:menuLoaded( event ) --[[ @ 0]]
		elseif element.super.menuLoaded then
			f6_local0 = element.super:menuLoaded( event ) --[[ @ 0]]
		end
		if not IsPC() then
			SizeToSafeArea( element, f1_arg0 ) --[[ @ 0]]
		end
		if not f6_local0 then
			f6_local0 = element:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f6_local0
	end ) --[[ @ 0]]
	self:addElement( FooterContainerFrontendRight ) --[[ @ 0]]
	self.FooterContainerFrontendRight = FooterContainerFrontendRight --[[ @ 0]]
	
	local TopBar = CoD.header_container_frontend.new( f1_local1, f1_arg0, 0, 0, 0, 1920, 0, 0, 0, 42 ) --[[ @ 0]]
	TopBar:registerEventHandler( "menu_loaded", function ( element, event )
		local f7_local0 = nil --[[ @ 0]]
		if element.menuLoaded then
			f7_local0 = element:menuLoaded( event ) --[[ @ 0]]
		elseif element.super.menuLoaded then
			f7_local0 = element.super:menuLoaded( event ) --[[ @ 0]]
		end
		SizeToSafeArea( element, f1_arg0 ) --[[ @ 0]]
		if not f7_local0 then
			f7_local0 = element:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f7_local0
	end ) --[[ @ 0]]
	self:addElement( TopBar ) --[[ @ 0]]
	self.TopBar = TopBar --[[ @ 0]]
	
	local PaintCanCount = CoD.PaintCanCount.new( f1_local1, f1_arg0, 0.5, 0.5, -798, -618, 0, 0, 115.5, 247.5 ) --[[ @ 0]]
	PaintCanCount:mergeStateConditions( {
		{
			stateName = "VisibleMaxed",
			condition = function ( menu, element, event )
				local f8_local0 --[[ @ 0]]
				if not IsLocal() then
					f8_local0 = CoD.WZUtility.IsPaintCansMaxed( f1_arg0 ) --[[ @ 0]]
					if f8_local0 then
						f8_local0 = IsBooleanDvarSet( "ui_ShowWZPersonalization" ) --[[ @ 0]]
					end
				else
					f8_local0 = false --[[ @ 0]]
				end
				return f8_local0
			end
		},
		{
			stateName = "Visible",
			condition = function ( menu, element, event )
				local f9_local0 --[[ @ 0]]
				if not IsLocal() then
					f9_local0 = IsBooleanDvarSet( "ui_ShowWZPersonalization" ) --[[ @ 0]]
				else
					f9_local0 = false --[[ @ 0]]
				end
				return f9_local0
			end
		}
	} ) --[[ @ 0]]
	local f1_local10 = PaintCanCount --[[ @ 0]]
	local f1_local11 = PaintCanCount.subscribeToModel --[[ @ 0]]
	local f1_local12 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local11( f1_local10, f1_local12["lobbyRoot.lobbyNetworkMode"], function ( f10_arg0 )
		f1_local1:updateElementState( PaintCanCount, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f10_arg0:get(),
			modelName = "lobbyRoot.lobbyNetworkMode"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local10 = PaintCanCount --[[ @ 0]]
	f1_local11 = PaintCanCount.subscribeToModel --[[ @ 0]]
	f1_local12 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local11( f1_local10, f1_local12["lobbyRoot.lobbyNav"], function ( f11_arg0 )
		f1_local1:updateElementState( PaintCanCount, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f11_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local10 = PaintCanCount --[[ @ 0]]
	f1_local11 = PaintCanCount.subscribeToModel --[[ @ 0]]
	f1_local12 = DataSources.PerController.getModel( f1_arg0 ) --[[ @ 0]]
	f1_local11( f1_local10, f1_local12.paintCanCount, function ( f12_arg0 )
		f1_local1:updateElementState( PaintCanCount, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f12_arg0:get(),
			modelName = "paintCanCount"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:addElement( PaintCanCount ) --[[ @ 0]]
	self.PaintCanCount = PaintCanCount --[[ @ 0]]
	
	self:registerEventHandler( "occlusion_change", function ( self, event )
		local f13_local0 = nil --[[ @ 0]]
		if self.OcclusionChange then
			f13_local0 = self:OcclusionChange( event ) --[[ @ 0]]
		elseif self.super.OcclusionChange then
			f13_local0 = self.super:OcclusionChange( event ) --[[ @ 0]]
		end
		if IsEventPropertyEqualTo( event, "occluded", true ) then
			MenuUnhideFreeCursor( f1_local1, f1_arg0 ) --[[ @ 0]]
		else
			MenuHidesFreeCursor( f1_local1, f1_arg0 ) --[[ @ 0]]
		end
		if not f13_local0 then
			f13_local0 = self:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f13_local0
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"luibutton"][@"lui_key_xbb_pscircle"], nil, function ( element, menu, controller, model )
		if MenuPropertyIsTrue( menu, "_showWeaponVariantList" ) and IsPC() then
			CoD.CACUtility.HideWeaponVariantList( menu, controller ) --[[ @ 0]]
			return true
		else
			PlaySoundAlias( "uin_party_ease_slide_back" ) --[[ @ 0]]
			CoD.CACUtility.PlayChooseScreenOutro( menu, controller, "Close" ) --[[ @ 0]]
			SaveLoadoutGeneric( controller ) --[[ @ 0]]
			DelayGoBack( menu, controller, 200 ) --[[ @ 0]]
			CoD.LobbyUtility.SetMenuControllerRestriction( self, controller, 0 ) --[[ @ 0]]
			return true
		end
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xbb_pscircle"], @"menu/back", nil, nil ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"luibutton"][@"lui_key_xby_pstriangle"], nil, function ( element, menu, controller, model )
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xby_pstriangle"], @"hash_0", nil, nil ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( self, "close", function ( element )
		SendClientScriptMenuChangeNotify( f1_arg0, f1_local1, false ) --[[ @ 0]]
	end ) --[[ @ 0]]
	if CoD.isPC then
		XCamMouseControl.id = "XCamMouseControl" --[[ @ 0]]
	end
	WeaponListWidget.id = "WeaponListWidget" --[[ @ 0]]
	FooterContainerFrontendRight:setModel( self.buttonModel, f1_arg0 ) --[[ @ 0]]
	if CoD.isPC then
		FooterContainerFrontendRight.id = "FooterContainerFrontendRight" --[[ @ 0]]
	end
	self:processEvent( {
		name = "menu_loaded",
		controller = f1_arg0
	} ) --[[ @ 0]]
	self.__defaultFocus = WeaponListWidget --[[ @ 0]]
	if CoD.isPC and (IsKeyboard( f1_arg0 ) or self.ignoreCursor) then
		self:restoreState( f1_arg0 ) --[[ @ 0]]
	end
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg0 ) --[[ @ 0]]
	end
	
	f1_local11 = self --[[ @ 0]]
	CoD.BaseUtility.SetModelFromPropertyModel( f1_arg0, self, self ) --[[ @ 0]]
	CoD.CACUtility.PlayChooseScreenIntro( f1_local1, f1_arg0, 200, "Open", false ) --[[ @ 0]]
	CoD.LobbyUtility.SetMenuControllerRestriction( self, f1_arg0, 1 ) --[[ @ 0]]
	CoD.FTUEUtility.ShowFTUESequenceIfNotSeen( self, f1_arg0, "ZMArmoryIntroduction" ) --[[ @ 0]]
	MenuHidesFreeCursor( f1_local1, f1_arg0 ) --[[ @ 0]]
	return self
end
 --[[ @ 0]]
CoD.WZPersonalizeWeapon.__resetProperties = function ( f19_arg0 )
	f19_arg0.WeaponListWidget:completeAnimation() --[[ @ 0]]
	f19_arg0.BackgroundSlidePanel:completeAnimation() --[[ @ 0]]
	f19_arg0.WeaponListWidget:setTopBottom( 0, 0, 673, 1163 ) --[[ @ 0]]
	f19_arg0.WeaponListWidget:setAlpha( 1 ) --[[ @ 0]]
	f19_arg0.BackgroundSlidePanel:setTopBottom( 0, 0, 672, 1294 ) --[[ @ 0]]
	f19_arg0.BackgroundSlidePanel:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.WZPersonalizeWeapon.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f20_arg0, f20_arg1 )
			f20_arg0:__resetProperties() --[[ @ 0]]
			f20_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f20_arg0.BackgroundSlidePanel:completeAnimation() --[[ @ 0]]
			f20_arg0.BackgroundSlidePanel:setAlpha( 0 ) --[[ @ 0]]
			f20_arg0.clipFinished( f20_arg0.BackgroundSlidePanel ) --[[ @ 0]]
			f20_arg0.WeaponListWidget:completeAnimation() --[[ @ 0]]
			f20_arg0.WeaponListWidget:setTopBottom( 0, 0, 1080, 1570 ) --[[ @ 0]]
			f20_arg0.clipFinished( f20_arg0.WeaponListWidget ) --[[ @ 0]]
		end,
		Open = function ( f21_arg0, f21_arg1 )
			f21_arg0:__resetProperties() --[[ @ 0]]
			f21_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			local f21_local0 = function ( f22_arg0 )
				local f22_local0 = function ( f23_arg0 )
					f23_arg0:beginAnimation( 100, Enum[@"luitween"][@"luitween_ease_both"] ) --[[ @ 0]]
					f23_arg0:setTopBottom( 0, 0, 672, 1294 ) --[[ @ 0]]
					f23_arg0:setAlpha( 1 ) --[[ @ 0]]
					f23_arg0:registerEventHandler( "transition_complete_keyframe", f21_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f21_arg0.BackgroundSlidePanel:beginAnimation( 100 ) --[[ @ 0]]
				f21_arg0.BackgroundSlidePanel:setTopBottom( 0, 0, 872, 1494 ) --[[ @ 0]]
				f21_arg0.BackgroundSlidePanel:registerEventHandler( "interrupted_keyframe", f21_arg0.clipInterrupted ) --[[ @ 0]]
				f21_arg0.BackgroundSlidePanel:registerEventHandler( "transition_complete_keyframe", f22_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f21_arg0.BackgroundSlidePanel:completeAnimation() --[[ @ 0]]
			f21_arg0.BackgroundSlidePanel:setTopBottom( 0, 0, 1072, 1694 ) --[[ @ 0]]
			f21_arg0.BackgroundSlidePanel:setAlpha( 0 ) --[[ @ 0]]
			f21_local0( f21_arg0.BackgroundSlidePanel ) --[[ @ 0]]
			local f21_local1 = function ( f24_arg0 )
				local f24_local0 = function ( f25_arg0 )
					f25_arg0:beginAnimation( 49 ) --[[ @ 0]]
					f25_arg0:setTopBottom( 0, 0, 680, 1170 ) --[[ @ 0]]
					f25_arg0:setAlpha( 1 ) --[[ @ 0]]
					f25_arg0:registerEventHandler( "transition_complete_keyframe", f21_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f21_arg0.WeaponListWidget:beginAnimation( 200, Enum[@"luitween"][@"luitween_ease_both"] ) --[[ @ 0]]
				f21_arg0.WeaponListWidget:setTopBottom( 0, 0, 700, 1190 ) --[[ @ 0]]
				f21_arg0.WeaponListWidget:registerEventHandler( "interrupted_keyframe", f21_arg0.clipInterrupted ) --[[ @ 0]]
				f21_arg0.WeaponListWidget:registerEventHandler( "transition_complete_keyframe", f24_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f21_arg0.WeaponListWidget:completeAnimation() --[[ @ 0]]
			f21_arg0.WeaponListWidget:setTopBottom( 0, 0, 1080, 1570 ) --[[ @ 0]]
			f21_arg0.WeaponListWidget:setAlpha( 0 ) --[[ @ 0]]
			f21_local1( f21_arg0.WeaponListWidget ) --[[ @ 0]]
		end,
		Close = function ( f26_arg0, f26_arg1 )
			f26_arg0:__resetProperties() --[[ @ 0]]
			f26_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			local f26_local0 = function ( f27_arg0 )
				f26_arg0.BackgroundSlidePanel:beginAnimation( 200, Enum[@"luitween"][@"luitween_ease_both"] ) --[[ @ 0]]
				f26_arg0.BackgroundSlidePanel:setTopBottom( 0, 0, 1072, 1694 ) --[[ @ 0]]
				f26_arg0.BackgroundSlidePanel:setAlpha( 0 ) --[[ @ 0]]
				f26_arg0.BackgroundSlidePanel:registerEventHandler( "interrupted_keyframe", f26_arg0.clipInterrupted ) --[[ @ 0]]
				f26_arg0.BackgroundSlidePanel:registerEventHandler( "transition_complete_keyframe", f26_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f26_arg0.BackgroundSlidePanel:completeAnimation() --[[ @ 0]]
			f26_arg0.BackgroundSlidePanel:setTopBottom( 0, 0, 672, 1294 ) --[[ @ 0]]
			f26_arg0.BackgroundSlidePanel:setAlpha( 1 ) --[[ @ 0]]
			f26_local0( f26_arg0.BackgroundSlidePanel ) --[[ @ 0]]
			local f26_local1 = function ( f28_arg0 )
				f26_arg0.WeaponListWidget:beginAnimation( 200, Enum[@"luitween"][@"luitween_ease_both"] ) --[[ @ 0]]
				f26_arg0.WeaponListWidget:setTopBottom( 0, 0, 1080, 1570 ) --[[ @ 0]]
				f26_arg0.WeaponListWidget:setAlpha( 0 ) --[[ @ 0]]
				f26_arg0.WeaponListWidget:registerEventHandler( "interrupted_keyframe", f26_arg0.clipInterrupted ) --[[ @ 0]]
				f26_arg0.WeaponListWidget:registerEventHandler( "transition_complete_keyframe", f26_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f26_arg0.WeaponListWidget:completeAnimation() --[[ @ 0]]
			f26_arg0.WeaponListWidget:setTopBottom( 0, 0, 680, 1170 ) --[[ @ 0]]
			f26_arg0.WeaponListWidget:setAlpha( 1 ) --[[ @ 0]]
			f26_local1( f26_arg0.WeaponListWidget ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.WZPersonalizeWeapon.__onClose = function ( f29_arg0 )
	f29_arg0.XCamMouseControl:close() --[[ @ 0]]
	f29_arg0.BackgroundSlidePanel:close() --[[ @ 0]]
	f29_arg0.CACHeader:close() --[[ @ 0]]
	f29_arg0.ItemInfo:close() --[[ @ 0]]
	f29_arg0.WeaponListWidget:close() --[[ @ 0]]
	f29_arg0.FooterContainerFrontendRight:close() --[[ @ 0]]
	f29_arg0.TopBar:close() --[[ @ 0]]
	f29_arg0.PaintCanCount:close() --[[ @ 0]]
end
 --[[ @ 0]]
