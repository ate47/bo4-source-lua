-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:50
require( "x64:16a177adf215eab" ) --[[ @ 0]]
require( "x64:c6dd2c6b206676f" ) --[[ @ 0]]
require( "x64:449a95828346bc1b" ) --[[ @ 0]]
require( "x64:740aa7774ab8472c" ) --[[ @ 0]]
require( "x64:1edc2e1aae07ab05" ) --[[ @ 0]]

CoD.CamoListSelectionWidget = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.CamoListSelectionWidget.__defaultWidth = 1214 --[[ @ 0]]
CoD.CamoListSelectionWidget.__defaultHeight = 400 --[[ @ 0]]
CoD.CamoListSelectionWidget.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.CamoListSelectionWidget ) --[[ @ 0]]
	self.id = "CamoListSelectionWidget" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local Backing = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	Backing:setRGB( 0, 0, 0 ) --[[ @ 0]]
	Backing:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( Backing ) --[[ @ 0]]
	self.Backing = Backing --[[ @ 0]]
	
	local PaintjobGrid = CoD.PaintjobOptionGrid.new( f1_arg0, f1_arg1, 0, 0, 884, 1154, 0, 0, 25, 375 ) --[[ @ 0]]
	self:addElement( PaintjobGrid ) --[[ @ 0]]
	self.PaintjobGrid = PaintjobGrid --[[ @ 0]]
	
	local MasteryGrid = CoD.MasteryOptionsContainer.new( f1_arg0, f1_arg1, 0, 0, 673, 878, 0, 0, 25, 375 ) --[[ @ 0]]
	self:addElement( MasteryGrid ) --[[ @ 0]]
	self.MasteryGrid = MasteryGrid --[[ @ 0]]
	
	local TechnicalGrid = CoD.TechnicalOptionGrid.new( f1_arg0, f1_arg1, 0, 0, 393, 665, 0, 0, 25, 375 ) --[[ @ 0]]
	self:addElement( TechnicalGrid ) --[[ @ 0]]
	self.TechnicalGrid = TechnicalGrid --[[ @ 0]]
	
	local PerformanceGrid = CoD.PerformanceOptionGrid.new( f1_arg0, f1_arg1, 0, 0, -9, 383, 0, 0, 25, 375 ) --[[ @ 0]]
	PerformanceGrid.Label:setText( LocalizeToUpperString( @"hash_E28A07E0C69E9E9" ) ) --[[ @ 0]]
	self:addElement( PerformanceGrid ) --[[ @ 0]]
	self.PerformanceGrid = PerformanceGrid --[[ @ 0]]
	
	local LootBaseOptionGrid = CoD.LootBaseOptionGrid.new( f1_arg0, f1_arg1, 0, 0, 0, 1214, 0, 0, 24, 374 ) --[[ @ 0]]
	LootBaseOptionGrid:setAlpha( 0 ) --[[ @ 0]]
	LootBaseOptionGrid.Label:setText( LocalizeToUpperString( @"hash_3F602F1BAFC731B5" ) ) --[[ @ 0]]
	self:addElement( LootBaseOptionGrid ) --[[ @ 0]]
	self.LootBaseOptionGrid = LootBaseOptionGrid --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "NotLive",
			condition = function ( menu, element, event )
				return not IsLive()
			end
		},
		{
			stateName = "BlackMarket",
			condition = function ( menu, element, event )
				return CoD.WeaponOptionsUtility.IsBlackMarketCamoFilter()
			end
		},
		{
			stateName = "NotCurrentModeFilter",
			condition = function ( menu, element, event )
				return not CoD.WeaponOptionsUtility.IsInCurrentModeFilter( menu, self, f1_arg1 )
			end
		},
		{
			stateName = "TempHideZMMastery",
			condition = function ( menu, element, event )
				return CoD.WeaponOptionsUtility.ShouldHideMasteryCamos( menu )
			end
		},
		{
			stateName = "HidePaintjobGrid",
			condition = function ( menu, element, event )
				return CoD.WeaponOptionsUtility.ShouldHidePaintjobCamos( menu, f1_arg1 )
			end
		}
	} ) --[[ @ 0]]
	local f1_local7 = self --[[ @ 0]]
	local f1_local8 = self.subscribeToModel --[[ @ 0]]
	local f1_local9 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local8( f1_local7, f1_local9["lobbyRoot.lobbyNetworkMode"], function ( f7_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f7_arg0:get(),
			modelName = "lobbyRoot.lobbyNetworkMode"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = self --[[ @ 0]]
	f1_local8 = self.subscribeToModel --[[ @ 0]]
	f1_local9 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local8( f1_local7, f1_local9["lobbyRoot.lobbyNav"], function ( f8_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f8_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = self --[[ @ 0]]
	f1_local8 = self.subscribeToModel --[[ @ 0]]
	f1_local9 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local8( f1_local7, f1_local9["WeaponPersonalization.listUpdate"], function ( f9_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f9_arg0:get(),
			modelName = "WeaponPersonalization.listUpdate"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( self, "setState", function ( element, controller, f10_arg2, f10_arg3, f10_arg4 )
		if IsSelfInState( self, "BlackMarket" ) then
			CoD.BaseUtility.SetDefaultFocusToElement( self, self.LootBaseOptionGrid ) --[[ @ 0]]
		else
			CoD.BaseUtility.SetDefaultFocusToElement( self, self.PerformanceGrid ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	PaintjobGrid.id = "PaintjobGrid" --[[ @ 0]]
	MasteryGrid.id = "MasteryGrid" --[[ @ 0]]
	TechnicalGrid.id = "TechnicalGrid" --[[ @ 0]]
	PerformanceGrid.id = "PerformanceGrid" --[[ @ 0]]
	LootBaseOptionGrid.id = "LootBaseOptionGrid" --[[ @ 0]]
	self.__defaultFocus = PerformanceGrid --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.CamoListSelectionWidget.__resetProperties = function ( f11_arg0 )
	f11_arg0.MasteryGrid:completeAnimation() --[[ @ 0]]
	f11_arg0.PaintjobGrid:completeAnimation() --[[ @ 0]]
	f11_arg0.TechnicalGrid:completeAnimation() --[[ @ 0]]
	f11_arg0.PerformanceGrid:completeAnimation() --[[ @ 0]]
	f11_arg0.LootBaseOptionGrid:completeAnimation() --[[ @ 0]]
	f11_arg0.MasteryGrid:setAlpha( 1 ) --[[ @ 0]]
	f11_arg0.PaintjobGrid:setLeftRight( 0, 0, 884, 1154 ) --[[ @ 0]]
	f11_arg0.PaintjobGrid:setAlpha( 1 ) --[[ @ 0]]
	f11_arg0.TechnicalGrid:setAlpha( 1 ) --[[ @ 0]]
	f11_arg0.PerformanceGrid:setAlpha( 1 ) --[[ @ 0]]
	f11_arg0.LootBaseOptionGrid:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.CamoListSelectionWidget.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f12_arg0, f12_arg1 )
			f12_arg0:__resetProperties() --[[ @ 0]]
			f12_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	NotLive = {
		DefaultClip = function ( f13_arg0, f13_arg1 )
			f13_arg0:__resetProperties() --[[ @ 0]]
			f13_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f13_arg0.PaintjobGrid:completeAnimation() --[[ @ 0]]
			f13_arg0.PaintjobGrid:setAlpha( 0 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.PaintjobGrid ) --[[ @ 0]]
			f13_arg0.MasteryGrid:completeAnimation() --[[ @ 0]]
			f13_arg0.MasteryGrid:setAlpha( 0 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.MasteryGrid ) --[[ @ 0]]
		end
	},
	BlackMarket = {
		DefaultClip = function ( f14_arg0, f14_arg1 )
			f14_arg0:__resetProperties() --[[ @ 0]]
			f14_arg0:setupElementClipCounter( 5 ) --[[ @ 0]]
			f14_arg0.PaintjobGrid:completeAnimation() --[[ @ 0]]
			f14_arg0.PaintjobGrid:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.PaintjobGrid ) --[[ @ 0]]
			f14_arg0.MasteryGrid:completeAnimation() --[[ @ 0]]
			f14_arg0.MasteryGrid:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.MasteryGrid ) --[[ @ 0]]
			f14_arg0.TechnicalGrid:completeAnimation() --[[ @ 0]]
			f14_arg0.TechnicalGrid:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.TechnicalGrid ) --[[ @ 0]]
			f14_arg0.PerformanceGrid:completeAnimation() --[[ @ 0]]
			f14_arg0.PerformanceGrid:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.PerformanceGrid ) --[[ @ 0]]
			f14_arg0.LootBaseOptionGrid:completeAnimation() --[[ @ 0]]
			f14_arg0.LootBaseOptionGrid:setAlpha( 1 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.LootBaseOptionGrid ) --[[ @ 0]]
		end
	},
	NotCurrentModeFilter = {
		DefaultClip = function ( f15_arg0, f15_arg1 )
			f15_arg0:__resetProperties() --[[ @ 0]]
			f15_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f15_arg0.PaintjobGrid:completeAnimation() --[[ @ 0]]
			f15_arg0.PaintjobGrid:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.PaintjobGrid ) --[[ @ 0]]
			f15_arg0.MasteryGrid:completeAnimation() --[[ @ 0]]
			f15_arg0.MasteryGrid:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.MasteryGrid ) --[[ @ 0]]
		end
	},
	TempHideZMMastery = {
		DefaultClip = function ( f16_arg0, f16_arg1 )
			f16_arg0:__resetProperties() --[[ @ 0]]
			f16_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f16_arg0.PaintjobGrid:completeAnimation() --[[ @ 0]]
			f16_arg0.PaintjobGrid:setLeftRight( 0, 0, 698, 968 ) --[[ @ 0]]
			f16_arg0.PaintjobGrid:setAlpha( 1 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.PaintjobGrid ) --[[ @ 0]]
			f16_arg0.MasteryGrid:completeAnimation() --[[ @ 0]]
			f16_arg0.MasteryGrid:setAlpha( 0 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.MasteryGrid ) --[[ @ 0]]
		end
	},
	HidePaintjobGrid = {
		DefaultClip = function ( f17_arg0, f17_arg1 )
			f17_arg0:__resetProperties() --[[ @ 0]]
			f17_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f17_arg0.PaintjobGrid:completeAnimation() --[[ @ 0]]
			f17_arg0.PaintjobGrid:setAlpha( 0 ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.PaintjobGrid ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.CamoListSelectionWidget.__onClose = function ( f18_arg0 )
	f18_arg0.PaintjobGrid:close() --[[ @ 0]]
	f18_arg0.MasteryGrid:close() --[[ @ 0]]
	f18_arg0.TechnicalGrid:close() --[[ @ 0]]
	f18_arg0.PerformanceGrid:close() --[[ @ 0]]
	f18_arg0.LootBaseOptionGrid:close() --[[ @ 0]]
end
 --[[ @ 0]]
