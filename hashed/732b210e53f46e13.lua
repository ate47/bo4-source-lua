-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:35
require( "ui/uieditor/widgets/pc/utility/textbacking" ) --[[ @ 0]]

CoD.PCTabbedScoreboardAccessMapPrompt = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.PCTabbedScoreboardAccessMapPrompt.__defaultWidth = 1720 --[[ @ 0]]
CoD.PCTabbedScoreboardAccessMapPrompt.__defaultHeight = 40 --[[ @ 0]]
CoD.PCTabbedScoreboardAccessMapPrompt.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.PCTabbedScoreboardAccessMapPrompt ) --[[ @ 0]]
	self.id = "PCTabbedScoreboardAccessMapPrompt" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local TextBacking = CoD.TextBacking.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	TextBacking.Blur:setAlpha( 0.65 ) --[[ @ 0]]
	TextBacking.Backing:setRGB( 0.13, 0.13, 0.13 ) --[[ @ 0]]
	self:addElement( TextBacking ) --[[ @ 0]]
	self.TextBacking = TextBacking --[[ @ 0]]
	
	local AccessScoreboardPrompt = LUI.UIText.new( 0.5, 0.5, -860, 860, 0.5, 0.5, -20, 20 ) --[[ @ 0]]
	AccessScoreboardPrompt:setRGB( 0.76, 0.76, 0.76 ) --[[ @ 0]]
	AccessScoreboardPrompt:setScale( 0.55, 0.55 ) --[[ @ 0]]
	AccessScoreboardPrompt:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_29294677CBFFED66" ) ) --[[ @ 0]]
	AccessScoreboardPrompt:setTTF( "dinnext_regular" ) --[[ @ 0]]
	AccessScoreboardPrompt:setLetterSpacing( 3 ) --[[ @ 0]]
	AccessScoreboardPrompt:setAlignment( Enum[@"LUIAlignment"][@"hash_1FEEB12BCB0D7041"] ) --[[ @ 0]]
	AccessScoreboardPrompt:setAlignment( Enum[@"LUIAlignment"][@"hash_E821F0ECFF8D1C7"] ) --[[ @ 0]]
	self:addElement( AccessScoreboardPrompt ) --[[ @ 0]]
	self.AccessScoreboardPrompt = AccessScoreboardPrompt --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return not IsMouseOrKeyboard( f1_arg1 )
			end
		},
		{
			stateName = "Scores",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsModelValueEqualToEnum( f1_arg1, "scoreboardInfo.activeTab", CoD.HUDUtility.GameStatusMode.MODE_SHOW_SCORES )
			end
		},
		{
			stateName = "Map",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsModelValueEqualToEnum( f1_arg1, "scoreboardInfo.activeTab", CoD.HUDUtility.GameStatusMode.MODE_SHOW_MAP )
			end
		}
	} ) --[[ @ 0]]
	self:appendEventHandler( "input_source_changed", function ( f5_arg0, f5_arg1 )
		f5_arg1.menu = f5_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( self, f5_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local f1_local3 = self --[[ @ 0]]
	local f1_local4 = self.subscribeToModel --[[ @ 0]]
	local f1_local5 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local4( f1_local3, f1_local5.LastInput, function ( f6_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f6_arg0:get(),
			modelName = "LastInput"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local3 = self --[[ @ 0]]
	f1_local4 = self.subscribeToModel --[[ @ 0]]
	f1_local5 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local4( f1_local3, f1_local5["scoreboardInfo.activeTab"], function ( f7_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f7_arg0:get(),
			modelName = "scoreboardInfo.activeTab"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.PCTabbedScoreboardAccessMapPrompt.__resetProperties = function ( f8_arg0 )
	f8_arg0.TextBacking:completeAnimation() --[[ @ 0]]
	f8_arg0.AccessScoreboardPrompt:completeAnimation() --[[ @ 0]]
	f8_arg0.TextBacking:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	f8_arg0.TextBacking:setAlpha( 1 ) --[[ @ 0]]
	f8_arg0.AccessScoreboardPrompt:setTopBottom( 0.5, 0.5, -20, 20 ) --[[ @ 0]]
	f8_arg0.AccessScoreboardPrompt:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.PCTabbedScoreboardAccessMapPrompt.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f9_arg0, f9_arg1 )
			f9_arg0:__resetProperties() --[[ @ 0]]
			f9_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f9_arg0.TextBacking:completeAnimation() --[[ @ 0]]
			f9_arg0.TextBacking:setAlpha( 0 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.TextBacking ) --[[ @ 0]]
			f9_arg0.AccessScoreboardPrompt:completeAnimation() --[[ @ 0]]
			f9_arg0.AccessScoreboardPrompt:setAlpha( 0 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.AccessScoreboardPrompt ) --[[ @ 0]]
		end
	},
	Hidden = {
		DefaultClip = function ( f10_arg0, f10_arg1 )
			f10_arg0:__resetProperties() --[[ @ 0]]
			f10_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f10_arg0.TextBacking:completeAnimation() --[[ @ 0]]
			f10_arg0.TextBacking:setAlpha( 0 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.TextBacking ) --[[ @ 0]]
			f10_arg0.AccessScoreboardPrompt:completeAnimation() --[[ @ 0]]
			f10_arg0.AccessScoreboardPrompt:setAlpha( 0 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.AccessScoreboardPrompt ) --[[ @ 0]]
		end
	},
	Scores = {
		DefaultClip = function ( f11_arg0, f11_arg1 )
			f11_arg0:__resetProperties() --[[ @ 0]]
			f11_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f11_arg0.TextBacking:completeAnimation() --[[ @ 0]]
			f11_arg0.TextBacking:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
			f11_arg0.clipFinished( f11_arg0.TextBacking ) --[[ @ 0]]
			f11_arg0.AccessScoreboardPrompt:completeAnimation() --[[ @ 0]]
			f11_arg0.AccessScoreboardPrompt:setTopBottom( 0.5, 0.5, -20, 20 ) --[[ @ 0]]
			f11_arg0.clipFinished( f11_arg0.AccessScoreboardPrompt ) --[[ @ 0]]
		end
	},
	Map = {
		DefaultClip = function ( f12_arg0, f12_arg1 )
			f12_arg0:__resetProperties() --[[ @ 0]]
			f12_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f12_arg0.TextBacking:completeAnimation() --[[ @ 0]]
			f12_arg0.TextBacking:setTopBottom( 0, 1, 75, 75 ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.TextBacking ) --[[ @ 0]]
			f12_arg0.AccessScoreboardPrompt:completeAnimation() --[[ @ 0]]
			f12_arg0.AccessScoreboardPrompt:setTopBottom( 0.5, 0.5, 55, 95 ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.AccessScoreboardPrompt ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.PCTabbedScoreboardAccessMapPrompt.__onClose = function ( f13_arg0 )
	f13_arg0.TextBacking:close() --[[ @ 0]]
end
 --[[ @ 0]]
