-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:50
require( "x64:34d5f4daea1dd74a" ) --[[ @ 0]]
require( "ui/uieditor/widgets/startmenu/options/startmenuoptionsbackground" ) --[[ @ 0]]

CoD.MPSpecialistHUBBindWheel = InheritFrom( CoD.Menu ) --[[ @ 0]]
LUI.createMenu.MPSpecialistHUBBindWheel = function ( f1_arg0, f1_arg1 )
	local self = CoD.Menu.NewForUIEditor( "MPSpecialistHUBBindWheel", f1_arg0 ) --[[ @ 0]]
	local f1_local1 = self --[[ @ 0]]
	CoD.BaseUtility.SetPropertiesFromUserData( self, f1_arg1 ) --[[ @ 0]]
	MenuHidesFreeCursor( f1_local1, f1_arg0 ) --[[ @ 0]]
	CoD.HUDUtility.SetupQuickSprayModels( f1_arg0, f1_local1 ) --[[ @ 0]]
	SetProperty( self, "disableKeyboardNavigation", true ) --[[ @ 0]]
	CoD.BaseUtility.InitControllerModel( f1_arg0, "MPSpecialistHUBBindWheel.NoBackground", false ) --[[ @ 0]]
	SetCharacterModeToCurrentSessionMode( self, self, f1_arg0 ) --[[ @ 0]]
	local Blur = SetMenuProperty --[[ @ 0]]
	local Background = f1_local1 --[[ @ 0]]
	local framewidget = "_model" --[[ @ 0]]
	local MPSpecialistHUBBindWheelSafeAreaContainer = Engine[@"getmodelforcontroller"]( f1_arg0 ) --[[ @ 0]]
	Blur( Background, framewidget, MPSpecialistHUBBindWheelSafeAreaContainer:create( "MPSpecialistHUBBindWheel" ) ) --[[ @ 0]]
	CoD.BaseUtility.InitControllerModel( f1_arg0, "MPSpecialistHUBBindWheel.CanSelectWedge", false ) --[[ @ 0]]
	self:setClass( CoD.MPSpecialistHUBBindWheel ) --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self:setOwner( f1_arg0 ) --[[ @ 0]]
	self:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	self:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	self:playSound( "menu_open", f1_arg0 ) --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	
	Blur = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	Blur:setRGB( 0.08, 0.08, 0.08 ) --[[ @ 0]]
	Blur:setAlpha( 0 ) --[[ @ 0]]
	Blur:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_E2354BE557C4C7A" ) ) --[[ @ 0]]
	Blur:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( Blur ) --[[ @ 0]]
	self.Blur = Blur --[[ @ 0]]
	
	Background = CoD.StartMenuOptionsBackground.new( f1_local1, f1_arg0, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	self:addElement( Background ) --[[ @ 0]]
	self.Background = Background --[[ @ 0]]
	
	framewidget = LUI.UIFrame.new( f1_local1, f1_arg0, 0, 0, false ) --[[ @ 0]]
	framewidget:setLeftRight( 0.5, 0.5, -960, 960 ) --[[ @ 0]]
	framewidget:setTopBottom( 0.5, 0.5, -540, 540 ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( framewidget, "createFrameWidget", function ( element, controller )
		UpdateAllMenuButtonPrompts( f1_local1, f1_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( framewidget ) --[[ @ 0]]
	self.framewidget = framewidget --[[ @ 0]]
	
	MPSpecialistHUBBindWheelSafeAreaContainer = CoD.MPSpecialistHUBBindWheel_SafeAreaContainer.new( f1_local1, f1_arg0, 0, 0, 0, 1920, 0, 0, 0, 1080 ) --[[ @ 0]]
	MPSpecialistHUBBindWheelSafeAreaContainer.CommonHeader.subtitle.StageTitle:setText( LocalizeToUpperString( @"hash_687EAA7A4C9006D2" ) ) --[[ @ 0]]
	MPSpecialistHUBBindWheelSafeAreaContainer:subscribeToGlobalModel( f1_arg0, "LobbyRoot", "lobbyTitle", function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			MPSpecialistHUBBindWheelSafeAreaContainer.CommonHeader.subtitle.subtitle:setText( Engine[@"hash_4F9F1239CFD921FE"]( f3_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self.__on_menuOpened_MPSpecialistHUBBindWheelSafeAreaContainer = function ( f4_arg0, f4_arg1, f4_arg2, f4_arg3 )
		local f4_local0 = MPSpecialistHUBBindWheelSafeAreaContainer --[[ @ 0]]
		if not IsPC() then
			SizeToSafeArea( f4_local0, f4_arg1 ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	f1_local1:addMenuOpenedCallback( self.__on_menuOpened_MPSpecialistHUBBindWheelSafeAreaContainer ) --[[ @ 0]]
	self:addElement( MPSpecialistHUBBindWheelSafeAreaContainer ) --[[ @ 0]]
	self.MPSpecialistHUBBindWheelSafeAreaContainer = MPSpecialistHUBBindWheelSafeAreaContainer --[[ @ 0]]
	
	framewidget:linkToElementModel( MPSpecialistHUBBindWheelSafeAreaContainer.CommonTabBarLeftAlign.Tabs.grid, "tabWidget", true, function ( model )
		local f5_local0 = model:get() --[[ @ 0]]
		if f5_local0 ~= nil then
			framewidget:changeFrameWidget( f5_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	local f1_local6 = self --[[ @ 0]]
	local f1_local7 = self.subscribeToModel --[[ @ 0]]
	local f1_local8 = Engine[@"getmodelforcontroller"]( f1_arg0 ) --[[ @ 0]]
	f1_local7( f1_local6, f1_local8["MPSpecialistHUBBindWheel.CanSelectWedge"], function ( f6_arg0, f6_arg1 )
		CoD.Menu.UpdateButtonShownState( f6_arg1, f1_local1, f1_arg0, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:registerEventHandler( "occlusion_change", function ( self, event )
		local f7_local0 = nil --[[ @ 0]]
		if self.OcclusionChange then
			f7_local0 = self:OcclusionChange( event ) --[[ @ 0]]
		elseif self.super.OcclusionChange then
			f7_local0 = self.super:OcclusionChange( event ) --[[ @ 0]]
		end
		if IsEventPropertyEqualTo( event, "occluded", true ) then
			MenuUnhideFreeCursor( f1_local1, f1_arg0 ) --[[ @ 0]]
		else
			MenuHidesFreeCursor( f1_local1, f1_arg0 ) --[[ @ 0]]
		end
		if not f7_local0 then
			f7_local0 = self:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f7_local0
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"luibutton"][@"lui_key_xbb_pscircle"], nil, function ( element, menu, controller, model )
		PlaySoundAlias( "uin_list_close_generic" ) --[[ @ 0]]
		GoBack( self, controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xbb_pscircle"], @"menu/back", nil, nil ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"luibutton"][@"lui_key_xba_pscross"], nil, function ( element, menu, controller, model )
		if IsDesiredFrameWidget( controller, self.framewidget, "MPSpecialistHUBBindWheelInternal" ) and CoD.ModelUtility.IsControllerModelValueTrue( controller, "MPSpecialistHUBBindWheel.CanSelectWedge" ) then
			CoD.PlayerRoleUtility.OpenGestureTagMenu( menu, controller ) --[[ @ 0]]
			PlaySoundAlias( "uin_radial_confirm" ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsDesiredFrameWidget( controller, self.framewidget, "MPSpecialistHUBBindWheelInternal" ) and CoD.ModelUtility.IsControllerModelValueTrue( controller, "MPSpecialistHUBBindWheel.CanSelectWedge" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"menu/select", nil, nil ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"luibutton"][@"lui_key_right"], nil, function ( element, menu, controller, model )
		if MenuPropertyIsTrue( menu, "_allowsQuickSelect" ) and IsDpadButton( model ) and IsDesiredFrameWidget( controller, self.framewidget, "MPSpecialistHUBBindWheelInternal" ) then
			CoD.PlayerRoleUtility.OpenQuickSlotGestureTagMenu( menu, controller ) --[[ @ 0]]
			PlaySoundAlias( "uin_radial_confirm" ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if MenuPropertyIsTrue( menu, "_allowsQuickSelect" ) and IsDpadButton( nil ) and IsDesiredFrameWidget( controller, self.framewidget, "MPSpecialistHUBBindWheelInternal" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_right"], @"hash_0", nil, nil ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( self, "close", function ( element )
		SaveLoadoutGeneric( f1_arg0 ) --[[ @ 0]]
		ClearMenuSavedState( f1_local1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	framewidget.id = "framewidget" --[[ @ 0]]
	MPSpecialistHUBBindWheelSafeAreaContainer.id = "MPSpecialistHUBBindWheelSafeAreaContainer" --[[ @ 0]]
	self:processEvent( {
		name = "menu_loaded",
		controller = f1_arg0
	} ) --[[ @ 0]]
	self.__defaultFocus = framewidget --[[ @ 0]]
	if CoD.isPC and (IsKeyboard( f1_arg0 ) or self.ignoreCursor) then
		self:restoreState( f1_arg0 ) --[[ @ 0]]
	end
	self.__on_close_removeOverrides = function ()
		f1_local1:removeMenuOpenedCallback( self.__on_menuOpened_MPSpecialistHUBBindWheelSafeAreaContainer ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.MPSpecialistHUBBindWheel.__onClose = function ( f16_arg0 )
	f16_arg0.__on_close_removeOverrides() --[[ @ 0]]
	f16_arg0.framewidget:close() --[[ @ 0]]
	f16_arg0.Background:close() --[[ @ 0]]
	f16_arg0.MPSpecialistHUBBindWheelSafeAreaContainer:close() --[[ @ 0]]
end
 --[[ @ 0]]
