-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:33
require( "ui/uieditor/widgets/customgames/customgames_optioncategorybutton" ) --[[ @ 0]]
require( "ui/uieditor/widgets/customgames/customgames_settingslider" ) --[[ @ 0]]
require( "ui/uieditor/widgets/gamesettings/gamesettings_background" ) --[[ @ 0]]
require( "ui/uieditor/widgets/gamesettings/gamesettings_selectediteminfo" ) --[[ @ 0]]
require( "ui/uieditor/widgets/scrollbars/verticalcounter" ) --[[ @ 0]]

CoD.GameSettings_ScopeRestrictionSettings = InheritFrom( CoD.Menu ) --[[ @ 0]]
LUI.createMenu.GameSettings_ScopeRestrictionSettings = function ( f1_arg0, f1_arg1 )
	local self = CoD.Menu.NewForUIEditor( "GameSettings_ScopeRestrictionSettings", f1_arg0 ) --[[ @ 0]]
	local f1_local1 = self --[[ @ 0]]
	MenuHidesFreeCursor( f1_local1, f1_arg0 ) --[[ @ 0]]
	self:setClass( CoD.GameSettings_ScopeRestrictionSettings ) --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self:setOwner( f1_arg0 ) --[[ @ 0]]
	self:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	self:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	self:playSound( "menu_open", f1_arg0 ) --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	
	local GameSettingsBackground = CoD.GameSettings_Background.new( f1_local1, f1_arg0, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	GameSettingsBackground.BackingBlur:setAlpha( 0 ) --[[ @ 0]]
	GameSettingsBackground.MenuFrame.CommonHeader.BGSceneBlur:setAlpha( 0 ) --[[ @ 0]]
	GameSettingsBackground.MenuFrame.CommonHeader.subtitle.StageTitle:setText( LocalizeToUpperString( @"hash_408B13CD4A57F560" ) ) --[[ @ 0]]
	GameSettingsBackground:subscribeToGlobalModel( f1_arg0, "LobbyRoot", "lobbyTitle", function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			GameSettingsBackground.MenuFrame.CommonHeader.subtitle.subtitle:setText( Engine[@"hash_4F9F1239CFD921FE"]( f2_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( GameSettingsBackground ) --[[ @ 0]]
	self.GameSettingsBackground = GameSettingsBackground --[[ @ 0]]
	
	local f1_local3 = nil --[[ @ 0]]
	
	local OptionCategoryGrid = LUI.GridLayout.new( f1_local1, f1_arg0, false, 0, 0, 8, 0, nil, nil, false, false, false, false ) --[[ @ 0]]
	OptionCategoryGrid:setLeftRight( 0, 0, 100, 350 ) --[[ @ 0]]
	OptionCategoryGrid:setTopBottom( 0, 0, 114, 1286 ) --[[ @ 0]]
	OptionCategoryGrid:setWidgetType( CoD.CustomGames_OptionCategoryButton ) --[[ @ 0]]
	OptionCategoryGrid:setVerticalCount( 10 ) --[[ @ 0]]
	OptionCategoryGrid:setSpacing( 8 ) --[[ @ 0]]
	OptionCategoryGrid:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	OptionCategoryGrid:setDataSource( "WeaponScopeOptionCategories" ) --[[ @ 0]]
	self:addElement( OptionCategoryGrid ) --[[ @ 0]]
	self.OptionCategoryGrid = OptionCategoryGrid --[[ @ 0]]
	
	local f1_local5 = nil --[[ @ 0]]
	
	local SlidersPC = LUI.UIList.new( f1_local1, f1_arg0, 8, 0, nil, false, false, false, false ) --[[ @ 0]]
	SlidersPC:setLeftRight( 0, 0, 367, 1067 ) --[[ @ 0]]
	SlidersPC:setTopBottom( 0, 0, 114, 922 ) --[[ @ 0]]
	SlidersPC:setWidgetType( CoD.CustomGames_SettingSlider ) --[[ @ 0]]
	SlidersPC:setVerticalCount( 12 ) --[[ @ 0]]
	SlidersPC:setSpacing( 8 ) --[[ @ 0]]
	SlidersPC:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	SlidersPC:setVerticalCounter( CoD.verticalCounter ) --[[ @ 0]]
	SlidersPC:registerEventHandler( "list_item_gain_focus", function ( element, event )
		local f3_local0 = nil --[[ @ 0]]
		ProcessListAction( self, element, f1_arg0, f1_local1 ) --[[ @ 0]]
		GameSettingsButtonGainFocus( self, element, f1_arg0 ) --[[ @ 0]]
		SetCurrentElementAsActive( self, element, f1_arg0 ) --[[ @ 0]]
		return f3_local0
	end ) --[[ @ 0]]
	self:addElement( SlidersPC ) --[[ @ 0]]
	self.SlidersPC = SlidersPC --[[ @ 0]]
	
	local f1_local7 = nil --[[ @ 0]]
	f1_local7 = LUI.UIElement.createFake() --[[ @ 0]]
	self.OptionCategoryList = f1_local7 --[[ @ 0]]
	local f1_local8 = nil --[[ @ 0]]
	f1_local8 = LUI.UIElement.createFake() --[[ @ 0]]
	self.Sliders = f1_local8 --[[ @ 0]]
	
	local GameSettingsSelectedItemInfo = CoD.GameSettings_SelectedItemInfo.new( f1_local1, f1_arg0, 0, 1, 59, 59, -0.31, 0.69, 262, 464 ) --[[ @ 0]]
	GameSettingsSelectedItemInfo.GameModeName:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( GameSettingsSelectedItemInfo ) --[[ @ 0]]
	self.GameSettingsSelectedItemInfo = GameSettingsSelectedItemInfo --[[ @ 0]]
	
	SlidersPC:linkToElementModel( OptionCategoryGrid, "optionsListDatasource", true, function ( model )
		local f4_local0 = model:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			SlidersPC:setDataSource( f4_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	f1_local8:linkToElementModel( f1_local7, "optionsListDatasource", true, function ( model )
		local f5_local0 = model:get() --[[ @ 0]]
		if f5_local0 ~= nil then
			f1_local8:setDataSource( f5_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:appendEventHandler( "input_source_changed", function ( f6_arg0, f6_arg1 )
		f6_arg1.menu = f6_arg1.menu or f1_local1 --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f6_arg0, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f6_arg0, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3820DDD869ABBFAA"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local f1_local10 = self --[[ @ 0]]
	local f1_local11 = self.subscribeToModel --[[ @ 0]]
	local f1_local12 = Engine[@"GetModelForController"]( f1_arg0 ) --[[ @ 0]]
	f1_local11( f1_local10, f1_local12.LastInput, function ( f7_arg0, f7_arg1 )
		CoD.Menu.UpdateButtonShownState( f7_arg1, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( f7_arg1, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3820DDD869ABBFAA"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"], "ESCAPE", function ( element, menu, controller, model )
		GoBack( self, controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"], @"hash_370A9FDC87CD3D48", nil, "ESCAPE" ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"], nil, function ( element, menu, controller, model )
		if IsGamepad( controller ) then
			ResetGameSettings() --[[ @ 0]]
			PlaySoundAlias( "uin_party_ease_slide" ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsGamepad( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"], @"hash_5FA987631536BD44", Enum[@"hash_3BEBDBAEEB3ECCCA"][@"hash_72919C98A7A845F0"] | 1500 << Enum[@"hash_3BEBDBAEEB3ECCCA"][@"hash_176ADD225D738C93"], nil ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"LUIButton"][@"hash_3820DDD869ABBFAA"], "ui_contextual_2", function ( element, menu, controller, model )
		if IsMouseOrKeyboard( controller ) then
			OpenResetGameSettingsPopup( self, element, controller, "", menu ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsMouseOrKeyboard( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3820DDD869ABBFAA"], @"hash_5FA987631536BD44", nil, "ui_contextual_2" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self.__on_menuOpened_self = function ( f14_arg0, f14_arg1, f14_arg2, f14_arg3 )
		local f14_local0 = self --[[ @ 0]]
		if IsPC() then
			CoD.OptionsUtility.SetCurrentActiveWeaponScopeCategory( f14_arg2 ) --[[ @ 0]]
			HideWidget( self.OptionCategoryGrid ) --[[ @ 0]]
			SetFocusToElement( self, "SlidersPC", f14_arg1 ) --[[ @ 0]]
			CoD.GridAndListUtility.SetFocusToFirstSelectableItem( self.SlidersPC ) --[[ @ 0]]
		else
			CoD.OptionsUtility.SetCurrentActiveWeaponScopeCategory( f14_arg2 ) --[[ @ 0]]
			HideWidget( self.OptionCategoryList ) --[[ @ 0]]
			SetFocusToElement( self, "Sliders", f14_arg1 ) --[[ @ 0]]
			CoD.GridAndListUtility.SetFocusToFirstSelectableItem( self.Sliders ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	f1_local1:addMenuOpenedCallback( self.__on_menuOpened_self ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( self, "close", function ( element )
		CoD.OptionsUtility.ClearInfoModels() --[[ @ 0]]
	end ) --[[ @ 0]]
	GameSettingsBackground.MenuFrame:setModel( self.buttonModel, f1_arg0 ) --[[ @ 0]]
	if CoD.isPC then
		GameSettingsBackground.id = "GameSettingsBackground" --[[ @ 0]]
	end
	OptionCategoryGrid.id = "OptionCategoryGrid" --[[ @ 0]]
	SlidersPC.id = "SlidersPC" --[[ @ 0]]
	f1_local7.id = "OptionCategoryList" --[[ @ 0]]
	f1_local8.id = "Sliders" --[[ @ 0]]
	self:processEvent( {
		name = "menu_loaded",
		controller = f1_arg0
	} ) --[[ @ 0]]
	self.__on_close_removeOverrides = function ()
		f1_local1:removeMenuOpenedCallback( self.__on_menuOpened_self ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg0 ) --[[ @ 0]]
	end
	f1_local11 = self --[[ @ 0]]
	f1_local11 = SlidersPC --[[ @ 0]]
	if IsPC() then
		SetElementProperty( f1_local11, "ignoreSavedActive", true ) --[[ @ 0]]
	end
	return self
end
 --[[ @ 0]]
CoD.GameSettings_ScopeRestrictionSettings.__onClose = function ( f17_arg0 )
	f17_arg0.__on_close_removeOverrides() --[[ @ 0]]
	f17_arg0.SlidersPC:close() --[[ @ 0]]
	f17_arg0.Sliders:close() --[[ @ 0]]
	f17_arg0.GameSettingsBackground:close() --[[ @ 0]]
	f17_arg0.OptionCategoryGrid:close() --[[ @ 0]]
	f17_arg0.OptionCategoryList:close() --[[ @ 0]]
	f17_arg0.GameSettingsSelectedItemInfo:close() --[[ @ 0]]
end
 --[[ @ 0]]
