-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:50
require( "x64:4686355579696a18" ) --[[ @ 0]]
require( "x64:494fbc5cbde7d92d" ) --[[ @ 0]]
require( "x64:7192a347560f0f5d" ) --[[ @ 0]]

CoD.SpecialEventRewardsWidget = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.SpecialEventRewardsWidget.__defaultWidth = 453 --[[ @ 0]]
CoD.SpecialEventRewardsWidget.__defaultHeight = 100 --[[ @ 0]]
CoD.SpecialEventRewardsWidget.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.SpecialEventRewardsWidget ) --[[ @ 0]]
	self.id = "SpecialEventRewardsWidget" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local BG = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	BG:setRGB( 0.23, 0.23, 0.23 ) --[[ @ 0]]
	BG:setAlpha( 0.25 ) --[[ @ 0]]
	self:addElement( BG ) --[[ @ 0]]
	self.BG = BG --[[ @ 0]]
	
	local MainRewardText = LUI.UIText.new( 0, 0, 107, 447, 0, 0, 5, 25 ) --[[ @ 0]]
	MainRewardText:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	MainRewardText:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	MainRewardText:setLetterSpacing( 2 ) --[[ @ 0]]
	MainRewardText:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	MainRewardText:setAlignment( Enum[@"luialignment"][@"hash_E821F0ECFF8D1C7"] ) --[[ @ 0]]
	MainRewardText:linkToElementModel( self, "taskLargeRewardName", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			MainRewardText:setText( LocalizeToUpperString( f2_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( MainRewardText ) --[[ @ 0]]
	self.MainRewardText = MainRewardText --[[ @ 0]]
	
	local MainReward = CoD.SpecialEventSmallRewardWidget.new( f1_arg0, f1_arg1, 0, 0, 5, 95, 0, 0, 5, 95 ) --[[ @ 0]]
	MainReward:linkToElementModel( self, "taskLargeRewardIcon", true, function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			MainReward.FixedAspectRatioImage:setImage( RegisterImage( f3_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( MainReward ) --[[ @ 0]]
	self.MainReward = MainReward --[[ @ 0]]
	
	local RewardGrid = LUI.GridLayout.new( f1_arg0, f1_arg1, false, 0, 0, -8, 0, nil, nil, false, false, false, false ) --[[ @ 0]]
	RewardGrid:setLeftRight( 0, 0, 107, 399 ) --[[ @ 0]]
	RewardGrid:setTopBottom( 0, 0, 41, 97 ) --[[ @ 0]]
	RewardGrid:setWidgetType( CoD.SpecialEventRewardWidget ) --[[ @ 0]]
	RewardGrid:setHorizontalCount( 2 ) --[[ @ 0]]
	RewardGrid:setSpacing( -8 ) --[[ @ 0]]
	RewardGrid:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	RewardGrid:setDataSource( "SpecialEventRewards" ) --[[ @ 0]]
	self:addElement( RewardGrid ) --[[ @ 0]]
	self.RewardGrid = RewardGrid --[[ @ 0]]
	
	local ZMDailyCallingsTierSkipNotification = CoD.ZMDailyCallingsTierSkipNotification.new( f1_arg0, f1_arg1, 0, 0, 0, 190, 0.5, 0.5, -20, 36 ) --[[ @ 0]]
	ZMDailyCallingsTierSkipNotification:mergeStateConditions( {
		{
			stateName = "Zombies",
			condition = function ( menu, element, event )
				return AlwaysTrue()
			end
		}
	} ) --[[ @ 0]]
	ZMDailyCallingsTierSkipNotification:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( ZMDailyCallingsTierSkipNotification ) --[[ @ 0]]
	self.ZMDailyCallingsTierSkipNotification = ZMDailyCallingsTierSkipNotification --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "DailyLayout",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg1, "showDailyLayout" )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "showDailyLayout", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "showDailyLayout"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	RewardGrid.id = "RewardGrid" --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.SpecialEventRewardsWidget.__resetProperties = function ( f7_arg0 )
	f7_arg0.MainRewardText:completeAnimation() --[[ @ 0]]
	f7_arg0.MainReward:completeAnimation() --[[ @ 0]]
	f7_arg0.ZMDailyCallingsTierSkipNotification:completeAnimation() --[[ @ 0]]
	f7_arg0.RewardGrid:completeAnimation() --[[ @ 0]]
	f7_arg0.MainRewardText:setAlpha( 1 ) --[[ @ 0]]
	f7_arg0.MainReward:setAlpha( 1 ) --[[ @ 0]]
	f7_arg0.ZMDailyCallingsTierSkipNotification:setLeftRight( 0, 0, 0, 190 ) --[[ @ 0]]
	f7_arg0.ZMDailyCallingsTierSkipNotification:setTopBottom( 0.5, 0.5, -20, 36 ) --[[ @ 0]]
	f7_arg0.ZMDailyCallingsTierSkipNotification:setAlpha( 0 ) --[[ @ 0]]
	f7_arg0.RewardGrid:setLeftRight( 0, 0, 107, 399 ) --[[ @ 0]]
	f7_arg0.RewardGrid:setTopBottom( 0, 0, 41, 97 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.SpecialEventRewardsWidget.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f8_arg0, f8_arg1 )
			f8_arg0:__resetProperties() --[[ @ 0]]
			f8_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	DailyLayout = {
		DefaultClip = function ( f9_arg0, f9_arg1 )
			f9_arg0:__resetProperties() --[[ @ 0]]
			f9_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f9_arg0.MainRewardText:completeAnimation() --[[ @ 0]]
			f9_arg0.MainRewardText:setAlpha( 0 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.MainRewardText ) --[[ @ 0]]
			f9_arg0.MainReward:completeAnimation() --[[ @ 0]]
			f9_arg0.MainReward:setAlpha( 0 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.MainReward ) --[[ @ 0]]
			f9_arg0.RewardGrid:completeAnimation() --[[ @ 0]]
			f9_arg0.RewardGrid:setLeftRight( 0, 0, 213, 493 ) --[[ @ 0]]
			f9_arg0.RewardGrid:setTopBottom( 0, 0, 23, 79 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.RewardGrid ) --[[ @ 0]]
			f9_arg0.ZMDailyCallingsTierSkipNotification:completeAnimation() --[[ @ 0]]
			f9_arg0.ZMDailyCallingsTierSkipNotification:setLeftRight( 0, 0, 15, 205 ) --[[ @ 0]]
			f9_arg0.ZMDailyCallingsTierSkipNotification:setTopBottom( 0.5, 0.5, -27, 29 ) --[[ @ 0]]
			f9_arg0.ZMDailyCallingsTierSkipNotification:setAlpha( 1 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.ZMDailyCallingsTierSkipNotification ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.SpecialEventRewardsWidget.__onClose = function ( f10_arg0 )
	f10_arg0.MainRewardText:close() --[[ @ 0]]
	f10_arg0.MainReward:close() --[[ @ 0]]
	f10_arg0.RewardGrid:close() --[[ @ 0]]
	f10_arg0.ZMDailyCallingsTierSkipNotification:close() --[[ @ 0]]
end
 --[[ @ 0]]
