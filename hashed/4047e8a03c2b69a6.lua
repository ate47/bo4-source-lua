-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:49
require( "x64:55f8cf56752aa71b" ) --[[ @ 0]]
require( "x64:40a6c788fd067cb9" ) --[[ @ 0]]
require( "x64:5147880f65713969" ) --[[ @ 0]]

CoD.ZMTalismanStatusButtonInternal = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.ZMTalismanStatusButtonInternal.__defaultWidth = 216 --[[ @ 0]]
CoD.ZMTalismanStatusButtonInternal.__defaultHeight = 216 --[[ @ 0]]
CoD.ZMTalismanStatusButtonInternal.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.ZMTalismanStatusButtonInternal ) --[[ @ 0]]
	self.id = "ZMTalismanStatusButtonInternal" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local Talisman = CoD.ZMTalismanSlot.new( f1_arg0, f1_arg1, 0, 0, 63, 153, 0, 0, 63, 153 ) --[[ @ 0]]
	Talisman:linkToElementModel( self, nil, false, function ( model )
		Talisman:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( Talisman ) --[[ @ 0]]
	self.Talisman = Talisman --[[ @ 0]]
	
	local BannerBG = LUI.UIImage.new( 0.5, 0.5, -45, 45, 1, 1, -61, -16 ) --[[ @ 0]]
	BannerBG:setImage( RegisterImage( @"hash_2A938C74C48DDB56" ) ) --[[ @ 0]]
	self:addElement( BannerBG ) --[[ @ 0]]
	self.BannerBG = BannerBG --[[ @ 0]]
	
	local Brackets = LUI.UIImage.new( 0, 0, 0, 216, 0, 0, 0, 216 ) --[[ @ 0]]
	Brackets:setRGB( ColorSet.T8__BEIGE__HEADER.r, ColorSet.T8__BEIGE__HEADER.g, ColorSet.T8__BEIGE__HEADER.b ) --[[ @ 0]]
	Brackets:setAlpha( 0.5 ) --[[ @ 0]]
	Brackets:setImage( RegisterImage( @"hash_661E31A40BB33DD9" ) ) --[[ @ 0]]
	self:addElement( Brackets ) --[[ @ 0]]
	self.Brackets = Brackets --[[ @ 0]]
	
	local Dots = LUI.UIImage.new( 0, 0, 0, 216, 0, 0, 0, 216 ) --[[ @ 0]]
	Dots:setRGB( 0.59, 0.13, 0.13 ) --[[ @ 0]]
	Dots:setAlpha( 0.3 ) --[[ @ 0]]
	Dots:setImage( RegisterImage( @"hash_4EC502DE0EAF1860" ) ) --[[ @ 0]]
	self:addElement( Dots ) --[[ @ 0]]
	self.Dots = Dots --[[ @ 0]]
	
	local ElixirCount = CoD.EquippedBGBCount.new( f1_arg0, f1_arg1, 0.5, 0.5, -39, 39, 1, 1, -57, -33 ) --[[ @ 0]]
	ElixirCount:mergeStateConditions( {
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return not CoD.CACUtility.IsCACItemConsumable( menu, element, Enum[@"statindexoffset"][@"hash_15544C104CD15F10"] )
			end
		}
	} ) --[[ @ 0]]
	ElixirCount:linkToElementModel( ElixirCount, "itemIndex", true, function ( model )
		f1_arg0:updateElementState( ElixirCount, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "itemIndex"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	ElixirCount:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	ElixirCount:linkToElementModel( self, nil, false, function ( model )
		ElixirCount:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	ElixirCount:linkToElementModel( self, "itemIndex", true, function ( model )
		local f6_local0 = model:get() --[[ @ 0]]
		if f6_local0 ~= nil then
			ElixirCount.Count:setText( CoD.CACUtility.GetConsumableCountFromIndex( f1_arg1, f1_arg0, Enum[@"statindexoffset"][@"hash_15544C104CD15F10"], f6_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( ElixirCount ) --[[ @ 0]]
	self.ElixirCount = ElixirCount --[[ @ 0]]
	
	local CommonButtonOutline = CoD.CommonButtonOutline.new( f1_arg0, f1_arg1, 0, 1, 41.5, -40.5, 0, 1, 39.5, -44.5 ) --[[ @ 0]]
	CommonButtonOutline:mergeStateConditions( {
		{
			stateName = "Disabled",
			condition = function ( menu, element, event )
				return not IsLive()
			end
		}
	} ) --[[ @ 0]]
	local f1_local7 = CommonButtonOutline --[[ @ 0]]
	local Lock = CommonButtonOutline.subscribeToModel --[[ @ 0]]
	local f1_local9 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	Lock( f1_local7, f1_local9["lobbyRoot.lobbyNetworkMode"], function ( f8_arg0 )
		f1_arg0:updateElementState( CommonButtonOutline, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f8_arg0:get(),
			modelName = "lobbyRoot.lobbyNetworkMode"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local7 = CommonButtonOutline --[[ @ 0]]
	Lock = CommonButtonOutline.subscribeToModel --[[ @ 0]]
	f1_local9 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	Lock( f1_local7, f1_local9["lobbyRoot.lobbyNav"], function ( f9_arg0 )
		f1_arg0:updateElementState( CommonButtonOutline, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f9_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	CommonButtonOutline:setZRot( 45 ) --[[ @ 0]]
	CommonButtonOutline.Lines:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( CommonButtonOutline ) --[[ @ 0]]
	self.CommonButtonOutline = CommonButtonOutline --[[ @ 0]]
	
	Lock = LUI.UIImage.new( 0.5, 0.5, -25, 25, 0.5, 0.5, -25, 25 ) --[[ @ 0]]
	Lock:setAlpha( 0 ) --[[ @ 0]]
	Lock:setImage( RegisterImage( @"uie_ui_icon_global_lock" ) ) --[[ @ 0]]
	self:addElement( Lock ) --[[ @ 0]]
	self.Lock = Lock --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Locked",
			condition = function ( menu, element, event )
				return not IsLive()
			end
		}
	} ) --[[ @ 0]]
	f1_local9 = self --[[ @ 0]]
	f1_local7 = self.subscribeToModel --[[ @ 0]]
	local f1_local10 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local7( f1_local9, f1_local10["lobbyRoot.lobbyNetworkMode"], function ( f11_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f11_arg0:get(),
			modelName = "lobbyRoot.lobbyNetworkMode"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local9 = self --[[ @ 0]]
	f1_local7 = self.subscribeToModel --[[ @ 0]]
	f1_local10 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local7( f1_local9, f1_local10["lobbyRoot.lobbyNav"], function ( f12_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f12_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	CommonButtonOutline.id = "CommonButtonOutline" --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.ZMTalismanStatusButtonInternal.__resetProperties = function ( f13_arg0 )
	f13_arg0.Talisman:completeAnimation() --[[ @ 0]]
	f13_arg0.Brackets:completeAnimation() --[[ @ 0]]
	f13_arg0.Dots:completeAnimation() --[[ @ 0]]
	f13_arg0.Lock:completeAnimation() --[[ @ 0]]
	f13_arg0.BannerBG:completeAnimation() --[[ @ 0]]
	f13_arg0.ElixirCount:completeAnimation() --[[ @ 0]]
	f13_arg0.Talisman:setAlpha( 1 ) --[[ @ 0]]
	f13_arg0.Talisman:setScale( 1, 1 ) --[[ @ 0]]
	f13_arg0.Brackets:setRGB( ColorSet.T8__BEIGE__HEADER.r, ColorSet.T8__BEIGE__HEADER.g, ColorSet.T8__BEIGE__HEADER.b ) --[[ @ 0]]
	f13_arg0.Brackets:setAlpha( 0.5 ) --[[ @ 0]]
	f13_arg0.Brackets:setScale( 1, 1 ) --[[ @ 0]]
	f13_arg0.Dots:setRGB( 0.59, 0.13, 0.13 ) --[[ @ 0]]
	f13_arg0.Dots:setAlpha( 0.3 ) --[[ @ 0]]
	f13_arg0.Dots:setScale( 1, 1 ) --[[ @ 0]]
	f13_arg0.Lock:setAlpha( 0 ) --[[ @ 0]]
	f13_arg0.BannerBG:setAlpha( 1 ) --[[ @ 0]]
	f13_arg0.ElixirCount:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ZMTalismanStatusButtonInternal.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f14_arg0, f14_arg1 )
			f14_arg0:__resetProperties() --[[ @ 0]]
			f14_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end,
		ChildFocus = function ( f15_arg0, f15_arg1 )
			f15_arg0:__resetProperties() --[[ @ 0]]
			f15_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f15_arg0.Talisman:completeAnimation() --[[ @ 0]]
			f15_arg0.Talisman:setScale( 1.02, 1.02 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.Talisman ) --[[ @ 0]]
			f15_arg0.Brackets:completeAnimation() --[[ @ 0]]
			f15_arg0.Brackets:setRGB( ColorSet.T8__BIEGE.r, ColorSet.T8__BIEGE.g, ColorSet.T8__BIEGE.b ) --[[ @ 0]]
			f15_arg0.Brackets:setAlpha( 0.8 ) --[[ @ 0]]
			f15_arg0.Brackets:setScale( 1.02, 1.02 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.Brackets ) --[[ @ 0]]
			f15_arg0.Dots:completeAnimation() --[[ @ 0]]
			f15_arg0.Dots:setRGB( 0.89, 0.12, 0.12 ) --[[ @ 0]]
			f15_arg0.Dots:setAlpha( 1 ) --[[ @ 0]]
			f15_arg0.Dots:setScale( 1.02, 1.02 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.Dots ) --[[ @ 0]]
		end,
		GainChildFocus = function ( f16_arg0, f16_arg1 )
			f16_arg0:__resetProperties() --[[ @ 0]]
			f16_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			local f16_local0 = function ( f17_arg0 )
				f16_arg0.Talisman:beginAnimation( 200 ) --[[ @ 0]]
				f16_arg0.Talisman:setScale( 1.02, 1.02 ) --[[ @ 0]]
				f16_arg0.Talisman:registerEventHandler( "interrupted_keyframe", f16_arg0.clipInterrupted ) --[[ @ 0]]
				f16_arg0.Talisman:registerEventHandler( "transition_complete_keyframe", f16_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f16_arg0.Talisman:completeAnimation() --[[ @ 0]]
			f16_arg0.Talisman:setScale( 1, 1 ) --[[ @ 0]]
			f16_local0( f16_arg0.Talisman ) --[[ @ 0]]
			local f16_local1 = function ( f18_arg0 )
				f16_arg0.Brackets:beginAnimation( 200 ) --[[ @ 0]]
				f16_arg0.Brackets:setRGB( ColorSet.T8__BIEGE.r, ColorSet.T8__BIEGE.g, ColorSet.T8__BIEGE.b ) --[[ @ 0]]
				f16_arg0.Brackets:setAlpha( 0.8 ) --[[ @ 0]]
				f16_arg0.Brackets:setScale( 1.02, 1.02 ) --[[ @ 0]]
				f16_arg0.Brackets:registerEventHandler( "interrupted_keyframe", f16_arg0.clipInterrupted ) --[[ @ 0]]
				f16_arg0.Brackets:registerEventHandler( "transition_complete_keyframe", f16_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f16_arg0.Brackets:completeAnimation() --[[ @ 0]]
			f16_arg0.Brackets:setRGB( ColorSet.T8__BEIGE__HEADER.r, ColorSet.T8__BEIGE__HEADER.g, ColorSet.T8__BEIGE__HEADER.b ) --[[ @ 0]]
			f16_arg0.Brackets:setAlpha( 0.5 ) --[[ @ 0]]
			f16_arg0.Brackets:setScale( 1, 1 ) --[[ @ 0]]
			f16_local1( f16_arg0.Brackets ) --[[ @ 0]]
			local f16_local2 = function ( f19_arg0 )
				f16_arg0.Dots:beginAnimation( 200 ) --[[ @ 0]]
				f16_arg0.Dots:setRGB( 0.89, 0.12, 0.12 ) --[[ @ 0]]
				f16_arg0.Dots:setAlpha( 1 ) --[[ @ 0]]
				f16_arg0.Dots:setScale( 1.02, 1.02 ) --[[ @ 0]]
				f16_arg0.Dots:registerEventHandler( "interrupted_keyframe", f16_arg0.clipInterrupted ) --[[ @ 0]]
				f16_arg0.Dots:registerEventHandler( "transition_complete_keyframe", f16_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f16_arg0.Dots:completeAnimation() --[[ @ 0]]
			f16_arg0.Dots:setRGB( 0.59, 0.13, 0.13 ) --[[ @ 0]]
			f16_arg0.Dots:setAlpha( 0.3 ) --[[ @ 0]]
			f16_arg0.Dots:setScale( 1, 1 ) --[[ @ 0]]
			f16_local2( f16_arg0.Dots ) --[[ @ 0]]
		end,
		LoseChildFocus = function ( f20_arg0, f20_arg1 )
			f20_arg0:__resetProperties() --[[ @ 0]]
			f20_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			local f20_local0 = function ( f21_arg0 )
				f20_arg0.Talisman:beginAnimation( 200 ) --[[ @ 0]]
				f20_arg0.Talisman:setScale( 1, 1 ) --[[ @ 0]]
				f20_arg0.Talisman:registerEventHandler( "interrupted_keyframe", f20_arg0.clipInterrupted ) --[[ @ 0]]
				f20_arg0.Talisman:registerEventHandler( "transition_complete_keyframe", f20_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f20_arg0.Talisman:completeAnimation() --[[ @ 0]]
			f20_arg0.Talisman:setScale( 1.02, 1.02 ) --[[ @ 0]]
			f20_local0( f20_arg0.Talisman ) --[[ @ 0]]
			local f20_local1 = function ( f22_arg0 )
				f20_arg0.Brackets:beginAnimation( 200 ) --[[ @ 0]]
				f20_arg0.Brackets:setRGB( ColorSet.T8__BEIGE__HEADER.r, ColorSet.T8__BEIGE__HEADER.g, ColorSet.T8__BEIGE__HEADER.b ) --[[ @ 0]]
				f20_arg0.Brackets:setAlpha( 0.5 ) --[[ @ 0]]
				f20_arg0.Brackets:setScale( 1, 1 ) --[[ @ 0]]
				f20_arg0.Brackets:registerEventHandler( "interrupted_keyframe", f20_arg0.clipInterrupted ) --[[ @ 0]]
				f20_arg0.Brackets:registerEventHandler( "transition_complete_keyframe", f20_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f20_arg0.Brackets:completeAnimation() --[[ @ 0]]
			f20_arg0.Brackets:setRGB( ColorSet.T8__BIEGE.r, ColorSet.T8__BIEGE.g, ColorSet.T8__BIEGE.b ) --[[ @ 0]]
			f20_arg0.Brackets:setAlpha( 0.8 ) --[[ @ 0]]
			f20_arg0.Brackets:setScale( 1.02, 1.02 ) --[[ @ 0]]
			f20_local1( f20_arg0.Brackets ) --[[ @ 0]]
			local f20_local2 = function ( f23_arg0 )
				f20_arg0.Dots:beginAnimation( 200 ) --[[ @ 0]]
				f20_arg0.Dots:setRGB( 0.59, 0.13, 0.13 ) --[[ @ 0]]
				f20_arg0.Dots:setAlpha( 0.3 ) --[[ @ 0]]
				f20_arg0.Dots:setScale( 1, 1 ) --[[ @ 0]]
				f20_arg0.Dots:registerEventHandler( "interrupted_keyframe", f20_arg0.clipInterrupted ) --[[ @ 0]]
				f20_arg0.Dots:registerEventHandler( "transition_complete_keyframe", f20_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f20_arg0.Dots:completeAnimation() --[[ @ 0]]
			f20_arg0.Dots:setRGB( 0.89, 0.12, 0.12 ) --[[ @ 0]]
			f20_arg0.Dots:setAlpha( 1 ) --[[ @ 0]]
			f20_arg0.Dots:setScale( 1.02, 1.02 ) --[[ @ 0]]
			f20_local2( f20_arg0.Dots ) --[[ @ 0]]
		end
	},
	Locked = {
		DefaultClip = function ( f24_arg0, f24_arg1 )
			f24_arg0:__resetProperties() --[[ @ 0]]
			f24_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f24_arg0.Talisman:completeAnimation() --[[ @ 0]]
			f24_arg0.Talisman:setAlpha( 0 ) --[[ @ 0]]
			f24_arg0.clipFinished( f24_arg0.Talisman ) --[[ @ 0]]
			f24_arg0.BannerBG:completeAnimation() --[[ @ 0]]
			f24_arg0.BannerBG:setAlpha( 0 ) --[[ @ 0]]
			f24_arg0.clipFinished( f24_arg0.BannerBG ) --[[ @ 0]]
			f24_arg0.ElixirCount:completeAnimation() --[[ @ 0]]
			f24_arg0.ElixirCount:setAlpha( 0 ) --[[ @ 0]]
			f24_arg0.clipFinished( f24_arg0.ElixirCount ) --[[ @ 0]]
			f24_arg0.Lock:completeAnimation() --[[ @ 0]]
			f24_arg0.Lock:setAlpha( 1 ) --[[ @ 0]]
			f24_arg0.clipFinished( f24_arg0.Lock ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.ZMTalismanStatusButtonInternal.__onClose = function ( f25_arg0 )
	f25_arg0.Talisman:close() --[[ @ 0]]
	f25_arg0.ElixirCount:close() --[[ @ 0]]
	f25_arg0.CommonButtonOutline:close() --[[ @ 0]]
end
 --[[ @ 0]]
