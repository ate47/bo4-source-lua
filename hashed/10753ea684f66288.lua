-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:32
require( "ui/uieditor/widgets/bumperbuttonwithkeymouse" ) --[[ @ 0]]

CoD.StartMenu_Options_PrivacySettingsScrollPrompt = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.StartMenu_Options_PrivacySettingsScrollPrompt.__defaultWidth = 300 --[[ @ 0]]
CoD.StartMenu_Options_PrivacySettingsScrollPrompt.__defaultHeight = 37 --[[ @ 0]]
CoD.StartMenu_Options_PrivacySettingsScrollPrompt.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.StartMenu_Options_PrivacySettingsScrollPrompt ) --[[ @ 0]]
	self.id = "StartMenu_Options_PrivacySettingsScrollPrompt" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.onlyChildrenFocusable = CoD.isPC --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local currentItem = LUI.UIText.new( 0.5, 0.5, -57, -12, 0.5, 0.5, -9, 9 ) --[[ @ 0]]
	currentItem:setAlpha( 0.65 ) --[[ @ 0]]
	currentItem:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	currentItem:setAlignment( Enum[@"LUIAlignment"][@"hash_3830CFD395E6AA0A"] ) --[[ @ 0]]
	currentItem:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	currentItem:subscribeToGlobalModel( f1_arg1, "PrivacySettingManagementForm", "currentPage", function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			currentItem:setText( f2_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( currentItem ) --[[ @ 0]]
	self.currentItem = currentItem --[[ @ 0]]
	
	local dividor = LUI.UIText.new( 0.5, 0.5, -4.5, 4.5, 0.5, 0.5, -9, 9 ) --[[ @ 0]]
	dividor:setAlpha( 0.65 ) --[[ @ 0]]
	dividor:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_6993C1A7DD3452BA" ) ) --[[ @ 0]]
	dividor:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	dividor:setAlignment( Enum[@"LUIAlignment"][@"hash_1FEEB12BCB0D7041"] ) --[[ @ 0]]
	self:addElement( dividor ) --[[ @ 0]]
	self.dividor = dividor --[[ @ 0]]
	
	local count = LUI.UIText.new( 0.5, 0.5, 12, 57, 0.5, 0.5, -9, 9 ) --[[ @ 0]]
	count:setAlpha( 0.65 ) --[[ @ 0]]
	count:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	count:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	count:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	count:subscribeToGlobalModel( f1_arg1, "PrivacySettingManagementForm", "lastPage", function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			count:setText( f3_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( count ) --[[ @ 0]]
	self.count = count --[[ @ 0]]
	
	local RightPageOver = CoD.BumperButtonWithKeyMouse.new( f1_arg0, f1_arg1, 0.5, 0.5, 34.5, 101.5, 0, 0, -4, 31 ) --[[ @ 0]]
	RightPageOver.KeyMouseImage:setImage( RegisterImage( @"uie_bumperright" ) ) --[[ @ 0]]
	RightPageOver:subscribeToGlobalModel( f1_arg1, "Controller", "right_shoulder_button_image", function ( model )
		local f4_local0 = model:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			RightPageOver.ControllerImage:setImage( RegisterImage( f4_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( RightPageOver ) --[[ @ 0]]
	self.RightPageOver = RightPageOver --[[ @ 0]]
	
	local LeftPageOver = CoD.BumperButtonWithKeyMouse.new( f1_arg0, f1_arg1, 0.5, 0.5, -101.5, -34.5, 0, 0, -4, 31 ) --[[ @ 0]]
	LeftPageOver:subscribeToGlobalModel( f1_arg1, "Controller", "left_shoulder_button_image", function ( model )
		local f5_local0 = model:get() --[[ @ 0]]
		if f5_local0 ~= nil then
			LeftPageOver.ControllerImage:setImage( RegisterImage( f5_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( LeftPageOver ) --[[ @ 0]]
	self.LeftPageOver = LeftPageOver --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "AtLeftAndRight",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalDataSourceModelValueLessThan( f1_arg1, "PrivacySettingManagementForm", "lastPage", 2 )
			end
		},
		{
			stateName = "AtLeft",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalDataSourceModelValueEqualTo( f1_arg1, "PrivacySettingManagementForm", "currentPage", 1 )
			end
		},
		{
			stateName = "AtRight",
			condition = function ( menu, element, event )
				return CoD.OptionsUtility.IsOnLastPrivacySettingsDescPage( f1_arg1 )
			end
		}
	} ) --[[ @ 0]]
	local f1_local6 = self --[[ @ 0]]
	local f1_local7 = self.subscribeToModel --[[ @ 0]]
	local f1_local8 = DataSources.PrivacySettingManagementForm.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local7( f1_local6, f1_local8.lastPage, function ( f9_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f9_arg0:get(),
			modelName = "lastPage"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local6 = self --[[ @ 0]]
	f1_local7 = self.subscribeToModel --[[ @ 0]]
	f1_local8 = DataSources.PrivacySettingManagementForm.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local7( f1_local6, f1_local8.currentPage, function ( f10_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f10_arg0:get(),
			modelName = "currentPage"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	if CoD.isPC then
		RightPageOver.id = "RightPageOver" --[[ @ 0]]
	end
	if CoD.isPC then
		LeftPageOver.id = "LeftPageOver" --[[ @ 0]]
	end
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.StartMenu_Options_PrivacySettingsScrollPrompt.__resetProperties = function ( f11_arg0 )
	f11_arg0.currentItem:completeAnimation() --[[ @ 0]]
	f11_arg0.dividor:completeAnimation() --[[ @ 0]]
	f11_arg0.count:completeAnimation() --[[ @ 0]]
	f11_arg0.LeftPageOver:completeAnimation() --[[ @ 0]]
	f11_arg0.RightPageOver:completeAnimation() --[[ @ 0]]
	f11_arg0.currentItem:setAlpha( 0.65 ) --[[ @ 0]]
	f11_arg0.dividor:setAlpha( 0.65 ) --[[ @ 0]]
	f11_arg0.count:setAlpha( 0.65 ) --[[ @ 0]]
	f11_arg0.LeftPageOver:setAlpha( 1 ) --[[ @ 0]]
	f11_arg0.RightPageOver:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.StartMenu_Options_PrivacySettingsScrollPrompt.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f12_arg0, f12_arg1 )
			f12_arg0:__resetProperties() --[[ @ 0]]
			f12_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f12_arg0.currentItem:completeAnimation() --[[ @ 0]]
			f12_arg0.currentItem:setAlpha( 1 ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.currentItem ) --[[ @ 0]]
			f12_arg0.dividor:completeAnimation() --[[ @ 0]]
			f12_arg0.dividor:setAlpha( 1 ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.dividor ) --[[ @ 0]]
			f12_arg0.count:completeAnimation() --[[ @ 0]]
			f12_arg0.count:setAlpha( 1 ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.count ) --[[ @ 0]]
		end
	},
	AtLeftAndRight = {
		DefaultClip = function ( f13_arg0, f13_arg1 )
			f13_arg0:__resetProperties() --[[ @ 0]]
			f13_arg0:setupElementClipCounter( 5 ) --[[ @ 0]]
			f13_arg0.currentItem:completeAnimation() --[[ @ 0]]
			f13_arg0.currentItem:setAlpha( 0 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.currentItem ) --[[ @ 0]]
			f13_arg0.dividor:completeAnimation() --[[ @ 0]]
			f13_arg0.dividor:setAlpha( 0 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.dividor ) --[[ @ 0]]
			f13_arg0.count:completeAnimation() --[[ @ 0]]
			f13_arg0.count:setAlpha( 0 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.count ) --[[ @ 0]]
			f13_arg0.RightPageOver:completeAnimation() --[[ @ 0]]
			f13_arg0.RightPageOver:setAlpha( 0 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.RightPageOver ) --[[ @ 0]]
			f13_arg0.LeftPageOver:completeAnimation() --[[ @ 0]]
			f13_arg0.LeftPageOver:setAlpha( 0 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.LeftPageOver ) --[[ @ 0]]
		end
	},
	AtLeft = {
		DefaultClip = function ( f14_arg0, f14_arg1 )
			f14_arg0:__resetProperties() --[[ @ 0]]
			f14_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f14_arg0.currentItem:completeAnimation() --[[ @ 0]]
			f14_arg0.currentItem:setAlpha( 1 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.currentItem ) --[[ @ 0]]
			f14_arg0.dividor:completeAnimation() --[[ @ 0]]
			f14_arg0.dividor:setAlpha( 1 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.dividor ) --[[ @ 0]]
			f14_arg0.count:completeAnimation() --[[ @ 0]]
			f14_arg0.count:setAlpha( 1 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.count ) --[[ @ 0]]
			f14_arg0.LeftPageOver:completeAnimation() --[[ @ 0]]
			f14_arg0.LeftPageOver:setAlpha( 0.3 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.LeftPageOver ) --[[ @ 0]]
		end
	},
	AtRight = {
		DefaultClip = function ( f15_arg0, f15_arg1 )
			f15_arg0:__resetProperties() --[[ @ 0]]
			f15_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f15_arg0.currentItem:completeAnimation() --[[ @ 0]]
			f15_arg0.currentItem:setAlpha( 1 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.currentItem ) --[[ @ 0]]
			f15_arg0.dividor:completeAnimation() --[[ @ 0]]
			f15_arg0.dividor:setAlpha( 1 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.dividor ) --[[ @ 0]]
			f15_arg0.count:completeAnimation() --[[ @ 0]]
			f15_arg0.count:setAlpha( 1 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.count ) --[[ @ 0]]
			f15_arg0.RightPageOver:completeAnimation() --[[ @ 0]]
			f15_arg0.RightPageOver:setAlpha( 0.3 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.RightPageOver ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.StartMenu_Options_PrivacySettingsScrollPrompt.__onClose = function ( f16_arg0 )
	f16_arg0.currentItem:close() --[[ @ 0]]
	f16_arg0.count:close() --[[ @ 0]]
	f16_arg0.RightPageOver:close() --[[ @ 0]]
	f16_arg0.LeftPageOver:close() --[[ @ 0]]
end
 --[[ @ 0]]
