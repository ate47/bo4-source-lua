-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
require( "ui/uieditor/widgets/store/storecommontextbacking" ) --[[ @ 0]]

CoD.DiscountDetailsInfoPanel = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.DiscountDetailsInfoPanel.__defaultWidth = 558 --[[ @ 0]]
CoD.DiscountDetailsInfoPanel.__defaultHeight = 246 --[[ @ 0]]
CoD.DiscountDetailsInfoPanel.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.DiscountDetailsInfoPanel ) --[[ @ 0]]
	self.id = "DiscountDetailsInfoPanel" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local SceneBlur = LUI.UIImage.new( 0, 0, 6, 552, 0, 0, 6.5, 231.5 ) --[[ @ 0]]
	SceneBlur:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_E2354BE557C4C7A" ) ) --[[ @ 0]]
	SceneBlur:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( SceneBlur ) --[[ @ 0]]
	self.SceneBlur = SceneBlur --[[ @ 0]]
	
	local Box = LUI.UIImage.new( 0, 0, 6, 552, 0, 0, 6.5, 231.5 ) --[[ @ 0]]
	Box:setAlpha( 0.01 ) --[[ @ 0]]
	self:addElement( Box ) --[[ @ 0]]
	self.Box = Box --[[ @ 0]]
	
	local DotTiledBacking = CoD.StoreCommonTextBacking.new( f1_arg0, f1_arg1, 0, 0, 6, 552, 0, 0, 7, 232 ) --[[ @ 0]]
	DotTiledBacking:setAlpha( 0.15 ) --[[ @ 0]]
	self:addElement( DotTiledBacking ) --[[ @ 0]]
	self.DotTiledBacking = DotTiledBacking --[[ @ 0]]
	
	local ButtonTopLine9Slice = LUI.UIImage.new( 0, 0, 0, 558, 0, 0, 0, 20 ) --[[ @ 0]]
	ButtonTopLine9Slice:setAlpha( 0.25 ) --[[ @ 0]]
	ButtonTopLine9Slice:setImage( RegisterImage( @"uie_ui_menu_cac_secondary_button_top_line" ) ) --[[ @ 0]]
	ButtonTopLine9Slice:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_add" ) ) --[[ @ 0]]
	ButtonTopLine9Slice:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	ButtonTopLine9Slice:setupNineSliceShader( 120, 10 ) --[[ @ 0]]
	self:addElement( ButtonTopLine9Slice ) --[[ @ 0]]
	self.ButtonTopLine9Slice = ButtonTopLine9Slice --[[ @ 0]]
	
	local ButtonBottomLine9Slice = LUI.UIImage.new( 0, 0, 0, 558, 0, 0, 224, 244 ) --[[ @ 0]]
	ButtonBottomLine9Slice:setAlpha( 0.25 ) --[[ @ 0]]
	ButtonBottomLine9Slice:setImage( RegisterImage( @"uie_ui_menu_cac_secondary_button_top_line" ) ) --[[ @ 0]]
	ButtonBottomLine9Slice:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_add" ) ) --[[ @ 0]]
	ButtonBottomLine9Slice:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	ButtonBottomLine9Slice:setupNineSliceShader( 120, 10 ) --[[ @ 0]]
	self:addElement( ButtonBottomLine9Slice ) --[[ @ 0]]
	self.ButtonBottomLine9Slice = ButtonBottomLine9Slice --[[ @ 0]]
	
	local SubExtraText = LUI.UIText.new( 0, 0, 27, 527, 0, 0, 191, 209 ) --[[ @ 0]]
	SubExtraText:setTTF( "dinnext_regular" ) --[[ @ 0]]
	SubExtraText:setLetterSpacing( 1 ) --[[ @ 0]]
	SubExtraText:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	SubExtraText:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	SubExtraText:linkToElementModel( self, "subExtraText", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			SubExtraText:setText( Engine[@"hash_4F9F1239CFD921FE"]( f2_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( SubExtraText ) --[[ @ 0]]
	self.SubExtraText = SubExtraText --[[ @ 0]]
	
	local MainExtraText = LUI.UIText.new( 0, 0, 27, 527, 0, 0, 165, 185 ) --[[ @ 0]]
	MainExtraText:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	MainExtraText:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	MainExtraText:setLetterSpacing( 2 ) --[[ @ 0]]
	MainExtraText:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	MainExtraText:setAlignment( Enum[@"LUIAlignment"][@"hash_E821F0ECFF8D1C7"] ) --[[ @ 0]]
	MainExtraText:linkToElementModel( self, "mainExtraText", true, function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			MainExtraText:setText( ToUpper( f3_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( MainExtraText ) --[[ @ 0]]
	self.MainExtraText = MainExtraText --[[ @ 0]]
	
	local Desc = LUI.UIText.new( 0, 0, 27, 527, 0, 0, 55.5, 73.5 ) --[[ @ 0]]
	Desc:setTTF( "dinnext_regular" ) --[[ @ 0]]
	Desc:setLetterSpacing( 1 ) --[[ @ 0]]
	Desc:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	Desc:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	Desc:linkToElementModel( self, "desc", true, function ( model )
		local f4_local0 = model:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			Desc:setText( f4_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Desc ) --[[ @ 0]]
	self.Desc = Desc --[[ @ 0]]
	
	local Name = LUI.UIText.new( 0, 0, 27, 527, 0, 0, 19.5, 49.5 ) --[[ @ 0]]
	Name:setRGB( ColorSet.T8__BIEGE.r, ColorSet.T8__BIEGE.g, ColorSet.T8__BIEGE.b ) --[[ @ 0]]
	Name:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	Name:setLetterSpacing( 4 ) --[[ @ 0]]
	Name:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	Name:setAlignment( Enum[@"LUIAlignment"][@"hash_E821F0ECFF8D1C7"] ) --[[ @ 0]]
	Name:linkToElementModel( self, "name", true, function ( model )
		local f5_local0 = model:get() --[[ @ 0]]
		if f5_local0 ~= nil then
			Name:setText( LocalizeToUpperString( f5_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Name ) --[[ @ 0]]
	self.Name = Name --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "ButtonPrompts",
			condition = function ( menu, element, event )
				local f6_local0 --[[ @ 0]]
				if not MenuPropertyIsTrue( menu, "__hideSupplyChainDetailsButtons" ) then
					f6_local0 = CoD.BlackMarketUtility.ShowSupplyChainDetailsButtonPrompts( element, f1_arg1 ) --[[ @ 0]]
				else
					f6_local0 = false --[[ @ 0]]
				end
				return f6_local0
			end
		},
		{
			stateName = "NoRarity",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualToEnum( element, f1_arg1, "rarity", Enum[@"LootRarityType"][@"hash_18556B83CAD0D180"] ) and not CoD.ModelUtility.IsSelfModelValueEqualTo( element, f1_arg1, "itemCategory", @"specialist" )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "allowTogglePreview", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "allowTogglePreview"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:linkToElementModel( self, "gesture_index", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "gesture_index"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:linkToElementModel( self, "movieName", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "movieName"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:linkToElementModel( self, "allowFrozenMoment", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "allowFrozenMoment"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:linkToElementModel( self, "rarity", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "rarity"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:linkToElementModel( self, "itemCategory", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "itemCategory"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.DiscountDetailsInfoPanel.__onClose = function ( f14_arg0 )
	f14_arg0.DotTiledBacking:close() --[[ @ 0]]
	f14_arg0.SubExtraText:close() --[[ @ 0]]
	f14_arg0.MainExtraText:close() --[[ @ 0]]
	f14_arg0.Desc:close() --[[ @ 0]]
	f14_arg0.Name:close() --[[ @ 0]]
end
 --[[ @ 0]]
