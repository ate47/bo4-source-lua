-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:51
require( "ui/uieditor/widgets/cac/cac_background_slide_panel_short" ) --[[ @ 0]]
require( "x64:28a564360a773656" ) --[[ @ 0]]
require( "x64:14bb610f0602df09" ) --[[ @ 0]]
require( "x64:8904074a6536944" ) --[[ @ 0]]
require( "x64:1f88675da04d26fd" ) --[[ @ 0]]
require( "x64:32136d2b295cb55e" ) --[[ @ 0]]
require( "ui/uieditor/widgets/footer/footercontainer_frontend_right" ) --[[ @ 0]]
require( "ui/uieditor/widgets/pc/utility/xcammousecontrol" ) --[[ @ 0]]

CoD.WeaponPersonalization = InheritFrom( CoD.Menu ) --[[ @ 0]]
LUI.createMenu.WeaponPersonalization = function ( f1_arg0, f1_arg1 )
	local self = CoD.Menu.NewForUIEditor( "WeaponPersonalization", f1_arg0 ) --[[ @ 0]]
	local f1_local1 = self --[[ @ 0]]
	SetModelToGlobalDataSource( f1_arg0, self, "WeaponPersonalization" ) --[[ @ 0]]
	CoD.BaseUtility.SetPropertiesFromUserData( self, f1_arg1 ) --[[ @ 0]]
	SetControllerModelValue( f1_arg0, "WeaponPersonalization.listUpdate", 0 ) --[[ @ 0]]
	CoD.WeaponOptionsUtility.SetWeaponOptionsCategory( f1_local1, f1_arg0 ) --[[ @ 0]]
	CoD.WeaponOptionsUtility.SetupWeaponPersonalizationMenuModels( f1_local1, f1_arg0 ) --[[ @ 0]]
	CoD.BaseUtility.InitControllerModel( f1_arg0, "armoryAttachmentUpdated" ) --[[ @ 0]]
	CoD.WeaponOptionsUtility.InitPaintCansCountModel( f1_arg0 ) --[[ @ 0]]
	self:setClass( CoD.WeaponPersonalization ) --[[ @ 0]]
	self.soundSet = "FrontendMain" --[[ @ 0]]
	self:setOwner( f1_arg0 ) --[[ @ 0]]
	self:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	self:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	self:playSound( "menu_open", f1_arg0 ) --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_local1:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	local XCamMouseControl = nil --[[ @ 0]]
	
	XCamMouseControl = CoD.XCamMouseControl.new( f1_local1, f1_arg0, 0, 1, 0, 0, 0, 0, 146, 646 ) --[[ @ 0]]
	self:addElement( XCamMouseControl ) --[[ @ 0]]
	self.XCamMouseControl = XCamMouseControl --[[ @ 0]]
	
	local BackgroundSlidePanel = CoD.cac_background_slide_panel_short.new( f1_local1, f1_arg0, 0, 1, 0, 0, 0.5, 0.5, 75, 697 ) --[[ @ 0]]
	self:addElement( BackgroundSlidePanel ) --[[ @ 0]]
	self.BackgroundSlidePanel = BackgroundSlidePanel --[[ @ 0]]
	
	local FooterContainerFrontendRight = CoD.FooterContainer_Frontend_Right.new( f1_local1, f1_arg0, 0, 1, 0, 0, 1, 1, -48, 0 ) --[[ @ 0]]
	FooterContainerFrontendRight:registerEventHandler( "menu_loaded", function ( element, event )
		local f2_local0 = nil --[[ @ 0]]
		if element.menuLoaded then
			f2_local0 = element:menuLoaded( event ) --[[ @ 0]]
		elseif element.super.menuLoaded then
			f2_local0 = element.super:menuLoaded( event ) --[[ @ 0]]
		end
		if not IsPC() then
			SizeToSafeArea( element, f1_arg0 ) --[[ @ 0]]
		end
		if not f2_local0 then
			f2_local0 = element:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f2_local0
	end ) --[[ @ 0]]
	self:addElement( FooterContainerFrontendRight ) --[[ @ 0]]
	self.FooterContainerFrontendRight = FooterContainerFrontendRight --[[ @ 0]]
	
	local WeaponOptionInfo = CoD.WeaponOptionInfo.new( f1_local1, f1_arg0, 0.5, 0.5, -960, 960, 0.5, 0.5, -76, 68 ) --[[ @ 0]]
	WeaponOptionInfo:linkToElementModel( self, nil, false, function ( model )
		WeaponOptionInfo:setModel( model, f1_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( WeaponOptionInfo ) --[[ @ 0]]
	self.WeaponOptionInfo = WeaponOptionInfo --[[ @ 0]]
	
	local HeaderContainer = CoD.WeaponPersonalizationHeaderContainer.new( f1_local1, f1_arg0, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	HeaderContainer:linkToElementModel( self, nil, false, function ( model )
		HeaderContainer:setModel( model, f1_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	HeaderContainer:registerEventHandler( "menu_loaded", function ( element, event )
		local f5_local0 = nil --[[ @ 0]]
		if element.menuLoaded then
			f5_local0 = element:menuLoaded( event ) --[[ @ 0]]
		elseif element.super.menuLoaded then
			f5_local0 = element.super:menuLoaded( event ) --[[ @ 0]]
		end
		if not IsPC() then
			SizeToSafeArea( element, f1_arg0 ) --[[ @ 0]]
		end
		if not f5_local0 then
			f5_local0 = element:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f5_local0
	end ) --[[ @ 0]]
	self:addElement( HeaderContainer ) --[[ @ 0]]
	self.HeaderContainer = HeaderContainer --[[ @ 0]]
	
	local PaintCanCount = CoD.PaintCanCount.new( f1_local1, f1_arg0, 0.5, 0.5, -798, -618, 0, 0, 115.5, 247.5 ) --[[ @ 0]]
	self:addElement( PaintCanCount ) --[[ @ 0]]
	self.PaintCanCount = PaintCanCount --[[ @ 0]]
	
	local PrestigeAttachmentGrid = CoD.PrestigeAttachmentGrid.new( f1_local1, f1_arg0, 0.5, 0.5, 390, 790, 0, 0, 131.5, 231.5 ) --[[ @ 0]]
	PrestigeAttachmentGrid:mergeStateConditions( {
		{
			stateName = "Visible",
			condition = function ( menu, element, event )
				return not CoD.BlackMarketUtility.IsCurrentLootSeasonAtLeast( 4 )
			end
		}
	} ) --[[ @ 0]]
	local f1_local9 = PrestigeAttachmentGrid --[[ @ 0]]
	local OptionsContainer = PrestigeAttachmentGrid.subscribeToModel --[[ @ 0]]
	local f1_local11 = DataSources.AutoEvents.getModel( f1_arg0 ) --[[ @ 0]]
	OptionsContainer( f1_local9, f1_local11.cycled, function ( f7_arg0 )
		f1_local1:updateElementState( PrestigeAttachmentGrid, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f7_arg0:get(),
			modelName = "cycled"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:addElement( PrestigeAttachmentGrid ) --[[ @ 0]]
	self.PrestigeAttachmentGrid = PrestigeAttachmentGrid --[[ @ 0]]
	
	OptionsContainer = CoD.WeaponPersonalizationOptionsContainer.new( f1_local1, f1_arg0, 0.5, 0.5, -842.5, 902.5, 0.5, 0.5, 143, 413 ) --[[ @ 0]]
	OptionsContainer:linkToElementModel( self, nil, false, function ( model )
		OptionsContainer:setModel( model, f1_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( OptionsContainer ) --[[ @ 0]]
	self.OptionsContainer = OptionsContainer --[[ @ 0]]
	
	WeaponOptionInfo:linkToElementModel( HeaderContainer.CategoryList.Tabs.grid, nil, false, function ( model )
		WeaponOptionInfo.CamoOriginWidget:setModel( model, f1_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	OptionsContainer:linkToElementModel( OptionsContainer.CamoOptions.CamoFilterList, "frameWidget", true, function ( model )
		local f10_local0 = model:get() --[[ @ 0]]
		if f10_local0 ~= nil then
			OptionsContainer.CamoListFrame:changeFrameWidget( f10_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"luibutton"][@"lui_key_xbb_pscircle"], nil, function ( element, menu, controller, model )
		CoD.CACUtility.PlayChooseScreenOutro( menu, controller, "Close" ) --[[ @ 0]]
		DelayGoBack( menu, controller, 200 ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xbb_pscircle"], @"hash_778D439E1B360368", nil, nil ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( self, "close", function ( element )
		PaintshopWeaponList_Back( self, element, f1_arg0 ) --[[ @ 0]]
		ClearMenuSavedState( f1_local1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	if CoD.isPC then
		XCamMouseControl.id = "XCamMouseControl" --[[ @ 0]]
	end
	FooterContainerFrontendRight:setModel( self.buttonModel, f1_arg0 ) --[[ @ 0]]
	if CoD.isPC then
		FooterContainerFrontendRight.id = "FooterContainerFrontendRight" --[[ @ 0]]
	end
	HeaderContainer.id = "HeaderContainer" --[[ @ 0]]
	PrestigeAttachmentGrid.id = "PrestigeAttachmentGrid" --[[ @ 0]]
	OptionsContainer.id = "OptionsContainer" --[[ @ 0]]
	self:processEvent( {
		name = "menu_loaded",
		controller = f1_arg0
	} ) --[[ @ 0]]
	self.__defaultFocus = OptionsContainer --[[ @ 0]]
	if CoD.isPC and (IsKeyboard( f1_arg0 ) or self.ignoreCursor) then
		self:restoreState( f1_arg0 ) --[[ @ 0]]
	end
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg0 ) --[[ @ 0]]
	end
	
	f1_local9 = self --[[ @ 0]]
	CoD.CACUtility.PlayChooseScreenIntro( f1_local1, f1_arg0, 200, "Open", true ) --[[ @ 0]]
	CoD.WeaponOptionsUtility.ResetWeaponOptions( f1_local1, f1_arg0 ) --[[ @ 0]]
	UpdateAllMenuButtonPrompts( f1_local1, f1_arg0 ) --[[ @ 0]]
	CoD.BreadcrumbUtility.UpdateWeaponAccessoryBreadcrumbs( f1_local1, f1_arg0 ) --[[ @ 0]]
	CoD.BreadcrumbUtility.UpdateWeaponDeathFxBreadcrumbs( f1_local1, f1_arg0 ) --[[ @ 0]]
	CoD.BreadcrumbUtility.UpdateWeaponCamoBreadcrumbs( f1_local1, f1_arg0 ) --[[ @ 0]]
	return self
end
 --[[ @ 0]]
CoD.WeaponPersonalization.__resetProperties = function ( f14_arg0 )
	f14_arg0.BackgroundSlidePanel:completeAnimation() --[[ @ 0]]
	f14_arg0.BackgroundSlidePanel:setTopBottom( 0.5, 0.5, 75, 697 ) --[[ @ 0]]
	f14_arg0.BackgroundSlidePanel:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.WeaponPersonalization.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f15_arg0, f15_arg1 )
			f15_arg0:__resetProperties() --[[ @ 0]]
			f15_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f15_arg0.BackgroundSlidePanel:completeAnimation() --[[ @ 0]]
			f15_arg0.BackgroundSlidePanel:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.BackgroundSlidePanel ) --[[ @ 0]]
		end,
		Open = function ( f16_arg0, f16_arg1 )
			f16_arg0:__resetProperties() --[[ @ 0]]
			f16_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f16_local0 = function ( f17_arg0 )
				local f17_local0 = function ( f18_arg0 )
					f18_arg0:beginAnimation( 100, Enum[@"luitween"][@"luitween_ease_both"] ) --[[ @ 0]]
					f18_arg0:setTopBottom( 0.5, 0.5, 75, 697 ) --[[ @ 0]]
					f18_arg0:setAlpha( 1 ) --[[ @ 0]]
					f18_arg0:registerEventHandler( "transition_complete_keyframe", f16_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f16_arg0.BackgroundSlidePanel:beginAnimation( 100 ) --[[ @ 0]]
				f16_arg0.BackgroundSlidePanel:setTopBottom( 0.5, 0.5, 275, 897 ) --[[ @ 0]]
				f16_arg0.BackgroundSlidePanel:registerEventHandler( "interrupted_keyframe", f16_arg0.clipInterrupted ) --[[ @ 0]]
				f16_arg0.BackgroundSlidePanel:registerEventHandler( "transition_complete_keyframe", f17_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f16_arg0.BackgroundSlidePanel:completeAnimation() --[[ @ 0]]
			f16_arg0.BackgroundSlidePanel:setTopBottom( 0.5, 0.5, 475, 1097 ) --[[ @ 0]]
			f16_arg0.BackgroundSlidePanel:setAlpha( 0 ) --[[ @ 0]]
			f16_local0( f16_arg0.BackgroundSlidePanel ) --[[ @ 0]]
		end,
		Close = function ( f19_arg0, f19_arg1 )
			f19_arg0:__resetProperties() --[[ @ 0]]
			f19_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f19_local0 = function ( f20_arg0 )
				f20_arg0:beginAnimation( 100, Enum[@"luitween"][@"luitween_ease_out"] ) --[[ @ 0]]
				f20_arg0:setTopBottom( 0.5, 0.5, 275, 897 ) --[[ @ 0]]
				f20_arg0:setAlpha( 0 ) --[[ @ 0]]
				f20_arg0:registerEventHandler( "transition_complete_keyframe", f19_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f19_arg0.BackgroundSlidePanel:beginAnimation( 50 ) --[[ @ 0]]
			f19_arg0.BackgroundSlidePanel:setTopBottom( 0.5, 0.5, 75, 697 ) --[[ @ 0]]
			f19_arg0.BackgroundSlidePanel:setAlpha( 1 ) --[[ @ 0]]
			f19_arg0.BackgroundSlidePanel:registerEventHandler( "interrupted_keyframe", f19_arg0.clipInterrupted ) --[[ @ 0]]
			f19_arg0.BackgroundSlidePanel:registerEventHandler( "transition_complete_keyframe", f19_local0 ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.WeaponPersonalization.__onClose = function ( f21_arg0 )
	f21_arg0.WeaponOptionInfo:close() --[[ @ 0]]
	f21_arg0.OptionsContainer:close() --[[ @ 0]]
	f21_arg0.XCamMouseControl:close() --[[ @ 0]]
	f21_arg0.BackgroundSlidePanel:close() --[[ @ 0]]
	f21_arg0.FooterContainerFrontendRight:close() --[[ @ 0]]
	f21_arg0.HeaderContainer:close() --[[ @ 0]]
	f21_arg0.PaintCanCount:close() --[[ @ 0]]
	f21_arg0.PrestigeAttachmentGrid:close() --[[ @ 0]]
end
 --[[ @ 0]]
