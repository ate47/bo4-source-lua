-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
require( "ui/uieditor/widgets/common/commonwipemeterwithglow" ) --[[ @ 0]]

CoD.ButtonFrame_XPMeterInfo = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.ButtonFrame_XPMeterInfo.__defaultWidth = 500 --[[ @ 0]]
CoD.ButtonFrame_XPMeterInfo.__defaultHeight = 51 --[[ @ 0]]
CoD.ButtonFrame_XPMeterInfo.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.ButtonFrame_XPMeterInfo ) --[[ @ 0]]
	self.id = "ButtonFrame_XPMeterInfo" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local LevelMeterBgTint = LUI.UIImage.new( 0, 1, 0, -54, 0.5, 0.5, -7.5, 0.5 ) --[[ @ 0]]
	LevelMeterBgTint:setRGB( 0.92, 0.92, 0.92 ) --[[ @ 0]]
	LevelMeterBgTint:setAlpha( 0.05 ) --[[ @ 0]]
	self:addElement( LevelMeterBgTint ) --[[ @ 0]]
	self.LevelMeterBgTint = LevelMeterBgTint --[[ @ 0]]
	
	local LevelMeterBg = LUI.UIImage.new( 0, 1, -2, -54, 0.5, 0.5, -12.5, 5.5 ) --[[ @ 0]]
	LevelMeterBg:setImage( RegisterImage( @"uie_ui_menu_inspection_level_meter_bg" ) ) --[[ @ 0]]
	LevelMeterBg:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_F755127C95CF5B6" ) ) --[[ @ 0]]
	LevelMeterBg:setShaderVector( 0, 2, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( LevelMeterBg ) --[[ @ 0]]
	self.LevelMeterBg = LevelMeterBg --[[ @ 0]]
	
	local CurrentXPMeter = CoD.CommonWipeMeterWithGlow.new( f1_arg0, f1_arg1, 0, 1, 0, -56, 0, 0, 16, 28 ) --[[ @ 0]]
	CurrentXPMeter.Meter:setRGB( 1, 0.73, 0 ) --[[ @ 0]]
	CurrentXPMeter.Meter:setImage( RegisterImage( @"uie_ui_menu_aar_levelup_bar" ) ) --[[ @ 0]]
	CurrentXPMeter.Meter:setShaderVector( 0, 0.25, 0, 0, 0 ) --[[ @ 0]]
	CurrentXPMeter.MeterAdd:setAlpha( 0.3 ) --[[ @ 0]]
	CurrentXPMeter.MeterAdd:setImage( RegisterImage( @"uie_ui_menu_aar_levelup_bar" ) ) --[[ @ 0]]
	CurrentXPMeter.MeterGlow:setRGB( 0.39, 0.18, 0 ) --[[ @ 0]]
	CurrentXPMeter.MeterGlow:setImage( RegisterImage( @"uie_ui_menu_aar_levelup_bar_glow" ) ) --[[ @ 0]]
	CurrentXPMeter.MeterGlow:setShaderVector( 0, 0.25, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( CurrentXPMeter ) --[[ @ 0]]
	self.CurrentXPMeter = CurrentXPMeter --[[ @ 0]]
	
	local CurrentXPText = LUI.UIText.new( 0, 0, 0, 110, 0, 0, 29.5, 50.5 ) --[[ @ 0]]
	CurrentXPText:setText( "" ) --[[ @ 0]]
	CurrentXPText:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	CurrentXPText:setLetterSpacing( 1 ) --[[ @ 0]]
	CurrentXPText:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	self:addElement( CurrentXPText ) --[[ @ 0]]
	self.CurrentXPText = CurrentXPText --[[ @ 0]]
	
	local NeededXPText = LUI.UIText.new( 1, 1, -167, -57, 0, 0, 29.5, 50.5 ) --[[ @ 0]]
	NeededXPText:setRGB( 0.92, 0.92, 0.92 ) --[[ @ 0]]
	NeededXPText:setText( "" ) --[[ @ 0]]
	NeededXPText:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	NeededXPText:setLetterSpacing( 1 ) --[[ @ 0]]
	NeededXPText:setAlignment( Enum[@"LUIAlignment"][@"hash_3830CFD395E6AA0A"] ) --[[ @ 0]]
	self:addElement( NeededXPText ) --[[ @ 0]]
	self.NeededXPText = NeededXPText --[[ @ 0]]
	
	local RankIcon = LUI.UIImage.new( 1, 1, -48, 0, 0, 0, -2, 46 ) --[[ @ 0]]
	self:addElement( RankIcon ) --[[ @ 0]]
	self.RankIcon = RankIcon --[[ @ 0]]
	
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.ButtonFrame_XPMeterInfo.__resetProperties = function ( f2_arg0 )
	f2_arg0.CurrentXPMeter:completeAnimation() --[[ @ 0]]
	f2_arg0.CurrentXPText:completeAnimation() --[[ @ 0]]
	f2_arg0.NeededXPText:completeAnimation() --[[ @ 0]]
	f2_arg0.CurrentXPMeter:setRGB( 1, 1, 1 ) --[[ @ 0]]
	f2_arg0.CurrentXPMeter.Meter:setRGB( 1, 0.73, 0 ) --[[ @ 0]]
	f2_arg0.CurrentXPMeter.MeterGlow:setRGB( 0.39, 0.18, 0 ) --[[ @ 0]]
	f2_arg0.CurrentXPText:setRGB( 1, 1, 1 ) --[[ @ 0]]
	f2_arg0.CurrentXPText:setAlpha( 1 ) --[[ @ 0]]
	f2_arg0.NeededXPText:setRGB( 0.92, 0.92, 0.92 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ButtonFrame_XPMeterInfo.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f3_arg0, f3_arg1 )
			f3_arg0:__resetProperties() --[[ @ 0]]
			f3_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f3_arg0.CurrentXPMeter:completeAnimation() --[[ @ 0]]
			f3_arg0.CurrentXPMeter.Meter:completeAnimation() --[[ @ 0]]
			f3_arg0.CurrentXPMeter.MeterGlow:completeAnimation() --[[ @ 0]]
			f3_arg0.CurrentXPMeter.Meter:setRGB( ColorSet.Orange.r, ColorSet.Orange.g, ColorSet.Orange.b ) --[[ @ 0]]
			f3_arg0.CurrentXPMeter.MeterGlow:setRGB( ColorSet.Orange.r, ColorSet.Orange.g, ColorSet.Orange.b ) --[[ @ 0]]
			f3_arg0.clipFinished( f3_arg0.CurrentXPMeter ) --[[ @ 0]]
			f3_arg0.CurrentXPText:completeAnimation() --[[ @ 0]]
			f3_arg0.CurrentXPText:setRGB( 0.69, 0.56, 0.04 ) --[[ @ 0]]
			f3_arg0.clipFinished( f3_arg0.CurrentXPText ) --[[ @ 0]]
			f3_arg0.NeededXPText:completeAnimation() --[[ @ 0]]
			f3_arg0.NeededXPText:setRGB( 0.92, 0.92, 0.92 ) --[[ @ 0]]
			f3_arg0.clipFinished( f3_arg0.NeededXPText ) --[[ @ 0]]
		end
	},
	Prestige = {
		DefaultClip = function ( f4_arg0, f4_arg1 )
			f4_arg0:__resetProperties() --[[ @ 0]]
			f4_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f4_arg0.CurrentXPMeter:completeAnimation() --[[ @ 0]]
			f4_arg0.CurrentXPMeter.Meter:completeAnimation() --[[ @ 0]]
			f4_arg0.CurrentXPMeter.MeterGlow:completeAnimation() --[[ @ 0]]
			f4_arg0.CurrentXPMeter:setRGB( 1, 1, 1 ) --[[ @ 0]]
			f4_arg0.CurrentXPMeter.Meter:setRGB( 0.23, 0.51, 0.68 ) --[[ @ 0]]
			f4_arg0.CurrentXPMeter.MeterGlow:setRGB( 0.05, 0.25, 0.36 ) --[[ @ 0]]
			f4_arg0.clipFinished( f4_arg0.CurrentXPMeter ) --[[ @ 0]]
			f4_arg0.CurrentXPText:completeAnimation() --[[ @ 0]]
			f4_arg0.CurrentXPText:setAlpha( 0 ) --[[ @ 0]]
			f4_arg0.clipFinished( f4_arg0.CurrentXPText ) --[[ @ 0]]
			f4_arg0.NeededXPText:completeAnimation() --[[ @ 0]]
			f4_arg0.NeededXPText:setRGB( 0.35, 0.52, 0.62 ) --[[ @ 0]]
			f4_arg0.clipFinished( f4_arg0.NeededXPText ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.ButtonFrame_XPMeterInfo.__onClose = function ( f5_arg0 )
	f5_arg0.CurrentXPMeter:close() --[[ @ 0]]
end
 --[[ @ 0]]
