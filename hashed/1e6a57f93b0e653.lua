-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:33
require( "x64:6341ce33d59fafd1" ) --[[ @ 0]]
require( "x64:7c894f1061c2c2a8" ) --[[ @ 0]]
require( "x64:12190adaba331dcb" ) --[[ @ 0]]

CoD.PositionDraft_FocusedCharacterInfo = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.PositionDraft_FocusedCharacterInfo.__defaultWidth = 1201 --[[ @ 0]]
CoD.PositionDraft_FocusedCharacterInfo.__defaultHeight = 210 --[[ @ 0]]
CoD.PositionDraft_FocusedCharacterInfo.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.PositionDraft_FocusedCharacterInfo ) --[[ @ 0]]
	self.id = "PositionDraft_FocusedCharacterInfo" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local SignatureEquipment = CoD.StartMenu_SignatureItem.new( f1_arg0, f1_arg1, 0, 0, 0, 540, 0, 0, 94, 209 ) --[[ @ 0]]
	SignatureEquipment:setZoom( 10 ) --[[ @ 0]]
	SignatureEquipment:linkToElementModel( self, "ability", false, function ( model )
		SignatureEquipment:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( SignatureEquipment ) --[[ @ 0]]
	self.SignatureEquipment = SignatureEquipment --[[ @ 0]]
	
	local SignatureAbility = CoD.StartMenu_SignatureItem.new( f1_arg0, f1_arg1, 0, 0, 566, 1106, 0, 0, 94, 209 ) --[[ @ 0]]
	SignatureAbility:setZoom( 10 ) --[[ @ 0]]
	SignatureAbility:linkToElementModel( self, "equipment", false, function ( model )
		SignatureAbility:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( SignatureAbility ) --[[ @ 0]]
	self.SignatureAbility = SignatureAbility --[[ @ 0]]
	
	local FocusedCharacterName = CoD.PositionDraft_FocusedCharacterName.new( f1_arg0, f1_arg1, 0, 0, -12, 666, 0, 0, -1, 62 ) --[[ @ 0]]
	FocusedCharacterName:linkToElementModel( self, nil, false, function ( model )
		FocusedCharacterName:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( FocusedCharacterName ) --[[ @ 0]]
	self.FocusedCharacterName = FocusedCharacterName --[[ @ 0]]
	
	local RestrictedText = CoD.RestrictedItemWarningText.new( f1_arg0, f1_arg1, 0.5, 0.5, -293, 201, 0.5, 0.5, -58, -28 ) --[[ @ 0]]
	RestrictedText:mergeStateConditions( {
		{
			stateName = "CharacterRestricted",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsModelValueTrue( f1_arg1, "PositionDraft.focusedCharacterIsRestricted" ) and CoD.HUDUtility.IsGameTypeCWL()
			end
		},
		{
			stateName = "Visible",
			condition = function ( menu, element, event )
				local f6_local0 --[[ @ 0]]
				if not CoD.DirectorUtility.ShowDirectorPregame( f1_arg1 ) and not IsPublicWZLobby() then
					f6_local0 = CoD.ModelUtility.IsModelValueTrue( f1_arg1, "PositionDraft.focusedCharacterHasRestriction" ) --[[ @ 0]]
				else
					f6_local0 = false --[[ @ 0]]
				end
				return f6_local0
			end
		}
	} ) --[[ @ 0]]
	local f1_local5 = RestrictedText --[[ @ 0]]
	local f1_local6 = RestrictedText.subscribeToModel --[[ @ 0]]
	local f1_local7 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local6( f1_local5, f1_local7["PositionDraft.focusedCharacterIsRestricted"], function ( f7_arg0 )
		f1_arg0:updateElementState( RestrictedText, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f7_arg0:get(),
			modelName = "PositionDraft.focusedCharacterIsRestricted"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local5 = RestrictedText --[[ @ 0]]
	f1_local6 = RestrictedText.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local6( f1_local5, f1_local7["lobbyRoot.lobbyNav"], function ( f8_arg0 )
		f1_arg0:updateElementState( RestrictedText, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f8_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local5 = RestrictedText --[[ @ 0]]
	f1_local6 = RestrictedText.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local6( f1_local5, f1_local7["PositionDraft.focusedCharacterHasRestriction"], function ( f9_arg0 )
		f1_arg0:updateElementState( RestrictedText, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f9_arg0:get(),
			modelName = "PositionDraft.focusedCharacterHasRestriction"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	RestrictedText:linkToElementModel( self, nil, false, function ( model )
		RestrictedText:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( RestrictedText ) --[[ @ 0]]
	self.RestrictedText = RestrictedText --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Visible",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsModelValueGreaterThan( f1_arg1, "PositionDraft.focusedCharacterIndex", 0 )
			end
		}
	} ) --[[ @ 0]]
	f1_local5 = self --[[ @ 0]]
	f1_local6 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local6( f1_local5, f1_local7["PositionDraft.focusedCharacterIndex"], function ( f12_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f12_arg0:get(),
			modelName = "PositionDraft.focusedCharacterIndex"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.PositionDraft_FocusedCharacterInfo.__resetProperties = function ( f13_arg0 )
	f13_arg0.SignatureEquipment:completeAnimation() --[[ @ 0]]
	f13_arg0.SignatureAbility:completeAnimation() --[[ @ 0]]
	f13_arg0.FocusedCharacterName:completeAnimation() --[[ @ 0]]
	f13_arg0.SignatureEquipment:setAlpha( 1 ) --[[ @ 0]]
	f13_arg0.SignatureAbility:setAlpha( 1 ) --[[ @ 0]]
	f13_arg0.FocusedCharacterName:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.PositionDraft_FocusedCharacterInfo.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f14_arg0, f14_arg1 )
			f14_arg0:__resetProperties() --[[ @ 0]]
			f14_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f14_arg0.SignatureEquipment:completeAnimation() --[[ @ 0]]
			f14_arg0.SignatureEquipment:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.SignatureEquipment ) --[[ @ 0]]
			f14_arg0.SignatureAbility:completeAnimation() --[[ @ 0]]
			f14_arg0.SignatureAbility:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.SignatureAbility ) --[[ @ 0]]
			f14_arg0.FocusedCharacterName:completeAnimation() --[[ @ 0]]
			f14_arg0.FocusedCharacterName:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.FocusedCharacterName ) --[[ @ 0]]
		end
	},
	Visible = {
		DefaultClip = function ( f15_arg0, f15_arg1 )
			f15_arg0:__resetProperties() --[[ @ 0]]
			f15_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.PositionDraft_FocusedCharacterInfo.__onClose = function ( f16_arg0 )
	f16_arg0.SignatureEquipment:close() --[[ @ 0]]
	f16_arg0.SignatureAbility:close() --[[ @ 0]]
	f16_arg0.FocusedCharacterName:close() --[[ @ 0]]
	f16_arg0.RestrictedText:close() --[[ @ 0]]
end
 --[[ @ 0]]
