-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:33
require( "x64:3548e655549337ec" ) --[[ @ 0]]

CoD.DirectorTheaterModeSelectButton = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.DirectorTheaterModeSelectButton.__defaultWidth = 390 --[[ @ 0]]
CoD.DirectorTheaterModeSelectButton.__defaultHeight = 280 --[[ @ 0]]
CoD.DirectorTheaterModeSelectButton.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.DirectorTheaterModeSelectButton ) --[[ @ 0]]
	self.id = "DirectorTheaterModeSelectButton" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local DirectorTheaterModeSelectButtonInternal = CoD.DirectorTheaterModeSelectButtonInternal.new( f1_arg0, f1_arg1, 0, 1, 0, 0, -0, 1, 0, 0 ) --[[ @ 0]]
	DirectorTheaterModeSelectButtonInternal:linkToElementModel( self, nil, false, function ( model )
		DirectorTheaterModeSelectButtonInternal:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	DirectorTheaterModeSelectButtonInternal:linkToElementModel( self, "subtitle", true, function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			DirectorTheaterModeSelectButtonInternal.ButtonText:setText( LocalizeToUpperString( f3_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( DirectorTheaterModeSelectButtonInternal ) --[[ @ 0]]
	self.DirectorTheaterModeSelectButtonInternal = DirectorTheaterModeSelectButtonInternal --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Locked",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg1, "locked" )
			end
		},
		{
			stateName = "Unselectable",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "locked", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "locked"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	DirectorTheaterModeSelectButtonInternal.id = "DirectorTheaterModeSelectButtonInternal" --[[ @ 0]]
	self.__defaultFocus = DirectorTheaterModeSelectButtonInternal --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.DirectorTheaterModeSelectButton.__resetProperties = function ( f7_arg0 )
	f7_arg0.DirectorTheaterModeSelectButtonInternal:completeAnimation() --[[ @ 0]]
	f7_arg0.DirectorTheaterModeSelectButtonInternal:setScale( 1, 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorTheaterModeSelectButton.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f8_arg0, f8_arg1 )
			f8_arg0:__resetProperties() --[[ @ 0]]
			f8_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end,
		ChildFocus = function ( f9_arg0, f9_arg1 )
			f9_arg0:__resetProperties() --[[ @ 0]]
			f9_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f9_arg0.DirectorTheaterModeSelectButtonInternal:completeAnimation() --[[ @ 0]]
			f9_arg0.DirectorTheaterModeSelectButtonInternal:setScale( 1.05, 1.05 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.DirectorTheaterModeSelectButtonInternal ) --[[ @ 0]]
		end,
		GainChildFocus = function ( f10_arg0, f10_arg1 )
			f10_arg0:__resetProperties() --[[ @ 0]]
			f10_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f10_local0 = function ( f11_arg0 )
				f10_arg0.DirectorTheaterModeSelectButtonInternal:beginAnimation( 200 ) --[[ @ 0]]
				f10_arg0.DirectorTheaterModeSelectButtonInternal:setScale( 1.05, 1.05 ) --[[ @ 0]]
				f10_arg0.DirectorTheaterModeSelectButtonInternal:registerEventHandler( "interrupted_keyframe", f10_arg0.clipInterrupted ) --[[ @ 0]]
				f10_arg0.DirectorTheaterModeSelectButtonInternal:registerEventHandler( "transition_complete_keyframe", f10_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f10_arg0.DirectorTheaterModeSelectButtonInternal:completeAnimation() --[[ @ 0]]
			f10_arg0.DirectorTheaterModeSelectButtonInternal:setScale( 1, 1 ) --[[ @ 0]]
			f10_local0( f10_arg0.DirectorTheaterModeSelectButtonInternal ) --[[ @ 0]]
		end,
		LoseChildFocus = function ( f12_arg0, f12_arg1 )
			f12_arg0:__resetProperties() --[[ @ 0]]
			f12_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f12_local0 = function ( f13_arg0 )
				f12_arg0.DirectorTheaterModeSelectButtonInternal:beginAnimation( 200 ) --[[ @ 0]]
				f12_arg0.DirectorTheaterModeSelectButtonInternal:setScale( 1, 1 ) --[[ @ 0]]
				f12_arg0.DirectorTheaterModeSelectButtonInternal:registerEventHandler( "interrupted_keyframe", f12_arg0.clipInterrupted ) --[[ @ 0]]
				f12_arg0.DirectorTheaterModeSelectButtonInternal:registerEventHandler( "transition_complete_keyframe", f12_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f12_arg0.DirectorTheaterModeSelectButtonInternal:completeAnimation() --[[ @ 0]]
			f12_arg0.DirectorTheaterModeSelectButtonInternal:setScale( 1.05, 1.05 ) --[[ @ 0]]
			f12_local0( f12_arg0.DirectorTheaterModeSelectButtonInternal ) --[[ @ 0]]
		end
	},
	Locked = {
		DefaultClip = function ( f14_arg0, f14_arg1 )
			f14_arg0:__resetProperties() --[[ @ 0]]
			f14_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	Unselectable = {
		DefaultClip = function ( f15_arg0, f15_arg1 )
			f15_arg0:__resetProperties() --[[ @ 0]]
			f15_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.DirectorTheaterModeSelectButton.__onClose = function ( f16_arg0 )
	f16_arg0.DirectorTheaterModeSelectButtonInternal:close() --[[ @ 0]]
end
 --[[ @ 0]]
