-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:33
require( "x64:1dddc350afc94b48" ) --[[ @ 0]]
require( "x64:3ad2dd10539beaf7" ) --[[ @ 0]]

CoD.zm_laststand_client = InheritFrom( CoD.Menu ) --[[ @ 0]]
LUI.createMenu.zm_laststand_client = function ( f1_arg0, f1_arg1 )
	local self = CoD.Menu.NewForUIEditor( "zm_laststand_client", f1_arg0 ) --[[ @ 0]]
	local f1_local1 = self --[[ @ 0]]
	self:setClass( CoD.zm_laststand_client ) --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self:setOwner( f1_arg0 ) --[[ @ 0]]
	self:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	self:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	self:playSound( "menu_open", f1_arg0 ) --[[ @ 0]]
	self.ignoreCursor = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_local1:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local DecorativeBGAnim = CoD.Hud_ZM_LastStand_DecorativeBGInternal.new( f1_local1, f1_arg0, 0.5, 0.5, -88, 88, 1, 1, -413, -237 ) --[[ @ 0]]
	DecorativeBGAnim:setRGB( 0, 0, 0 ) --[[ @ 0]]
	self:addElement( DecorativeBGAnim ) --[[ @ 0]]
	self.DecorativeBGAnim = DecorativeBGAnim --[[ @ 0]]
	
	local bleedout_clock = LUI.UIImage.new( 0.5, 0.5, -128, 0, 1, 1, -268.5, -140.5 ) --[[ @ 0]]
	bleedout_clock:setRGB( 1, 0, 0 ) --[[ @ 0]]
	bleedout_clock:setAlpha( 0.9 ) --[[ @ 0]]
	bleedout_clock:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_clock_normal" ) ) --[[ @ 0]]
	bleedout_clock:setShaderVector( 0, -0.03, 0, 0, 0 ) --[[ @ 0]]
	bleedout_clock:setShaderVector( 1, 0.5, 0, 0, 0 ) --[[ @ 0]]
	bleedout_clock:setShaderVector( 2, 0.5, 0, 0, 0 ) --[[ @ 0]]
	bleedout_clock:setShaderVector( 3, 0.18, 0, 0, 0 ) --[[ @ 0]]
	bleedout_clock:setShaderVector( 4, 4, 0.04, 0, 0 ) --[[ @ 0]]
	self:addElement( bleedout_clock ) --[[ @ 0]]
	self.bleedout_clock = bleedout_clock --[[ @ 0]]
	
	local revive_clock = LUI.UIImage.new( 0.5, 0.5, 0, 136, 1, 1, -268.5, -140.5 ) --[[ @ 0]]
	revive_clock:setRGB( 0.12, 1, 0 ) --[[ @ 0]]
	revive_clock:setYRot( 180 ) --[[ @ 0]]
	revive_clock:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_clock_normal" ) ) --[[ @ 0]]
	revive_clock:setShaderVector( 0, -0.21, 0, 0, 0 ) --[[ @ 0]]
	revive_clock:setShaderVector( 1, 0.5, 0, 0, 0 ) --[[ @ 0]]
	revive_clock:setShaderVector( 2, 0.5, 0, 0, 0 ) --[[ @ 0]]
	revive_clock:setShaderVector( 3, 0, 0, 0, 0 ) --[[ @ 0]]
	revive_clock:setShaderVector( 4, 0, 0.06, 0, 0 ) --[[ @ 0]]
	self:addElement( revive_clock ) --[[ @ 0]]
	self.revive_clock = revive_clock --[[ @ 0]]
	
	local bleedout_label = LUI.UIText.new( 0.5, 0.5, -100, 100, 1, 1, -370.5, -340.5 ) --[[ @ 0]]
	bleedout_label:setRGB( ColorSet.T8_ZM_BLUE.r, ColorSet.T8_ZM_BLUE.g, ColorSet.T8_ZM_BLUE.b ) --[[ @ 0]]
	bleedout_label:setTTF( "skorzhen" ) --[[ @ 0]]
	bleedout_label:setAlignment( Enum[@"LUIAlignment"][@"hash_1FEEB12BCB0D7041"] ) --[[ @ 0]]
	bleedout_label:linkToElementModel( self, "num_downs", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			bleedout_label:setText( CoD.ZombieUtility.GetNumDownsText( f2_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( bleedout_label ) --[[ @ 0]]
	self.bleedout_label = bleedout_label --[[ @ 0]]
	
	local ReviveBarBG2 = LUI.UIImage.new( 0.5, 0.5, -148, 148, 1, 1, -320, -292 ) --[[ @ 0]]
	ReviveBarBG2:setAlpha( 0 ) --[[ @ 0]]
	ReviveBarBG2:setYRot( 180 ) --[[ @ 0]]
	ReviveBarBG2:setScale( 0.81, 0.6 ) --[[ @ 0]]
	ReviveBarBG2:setImage( RegisterImage( @"uie_zm_hud_revive_meterbg" ) ) --[[ @ 0]]
	self:addElement( ReviveBarBG2 ) --[[ @ 0]]
	self.ReviveBarBG2 = ReviveBarBG2 --[[ @ 0]]
	
	local revive_bar = LUI.UIImage.new( 0.5, 0.5, -148, 148, 1, 1, -320, -292 ) --[[ @ 0]]
	revive_bar:setAlpha( 0 ) --[[ @ 0]]
	revive_bar:setScale( 0.8, 0.6 ) --[[ @ 0]]
	revive_bar:setImage( RegisterImage( @"uie_zm_hud_revive_meterfg" ) ) --[[ @ 0]]
	revive_bar:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_wipe_normal" ) ) --[[ @ 0]]
	revive_bar:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	revive_bar:setShaderVector( 2, 1, 0, 0, 0 ) --[[ @ 0]]
	revive_bar:setShaderVector( 3, 0, 0, 0, 0 ) --[[ @ 0]]
	revive_bar:setShaderVector( 4, 0, 0, 0, 0 ) --[[ @ 0]]
	revive_bar:linkToElementModel( self, "revive_progress", true, function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			revive_bar:setShaderVector( 0, CoD.GetVectorComponentFromString( f3_local0, 1 ), CoD.GetVectorComponentFromString( f3_local0, 2 ), CoD.GetVectorComponentFromString( f3_local0, 3 ), CoD.GetVectorComponentFromString( f3_local0, 4 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( revive_bar ) --[[ @ 0]]
	self.revive_bar = revive_bar --[[ @ 0]]
	
	local ReviveBarBG = LUI.UIImage.new( 0.5, 0.5, -148, 148, 1, 1, -340, -312 ) --[[ @ 0]]
	ReviveBarBG:setImage( RegisterImage( @"uie_zm_hud_revive_meterbg" ) ) --[[ @ 0]]
	self:addElement( ReviveBarBG ) --[[ @ 0]]
	self.ReviveBarBG = ReviveBarBG --[[ @ 0]]
	
	local bleedout_bar = LUI.UIImage.new( 0.5, 0.5, -148, 148, 1, 1, -340, -312 ) --[[ @ 0]]
	bleedout_bar:setImage( RegisterImage( @"uie_zm_hud_bleedout_meterfg" ) ) --[[ @ 0]]
	bleedout_bar:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_wipe_normal" ) ) --[[ @ 0]]
	bleedout_bar:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	bleedout_bar:setShaderVector( 2, 1, 0, 0, 0 ) --[[ @ 0]]
	bleedout_bar:setShaderVector( 3, 0, 0, 0, 0 ) --[[ @ 0]]
	bleedout_bar:setShaderVector( 4, 0, 0.02, 0.05, 0 ) --[[ @ 0]]
	bleedout_bar:linkToElementModel( self, "bleedout_progress", true, function ( model )
		local f4_local0 = model:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			bleedout_bar:setShaderVector( 0, CoD.GetVectorComponentFromString( f4_local0, 1 ), CoD.GetVectorComponentFromString( f4_local0, 2 ), CoD.GetVectorComponentFromString( f4_local0, 3 ), CoD.GetVectorComponentFromString( f4_local0, 4 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( bleedout_bar ) --[[ @ 0]]
	self.bleedout_bar = bleedout_bar --[[ @ 0]]
	
	local PerkList = LUI.UIList.new( f1_local1, f1_arg0, 16, 0, nil, false, false, false, false ) --[[ @ 0]]
	PerkList:setLeftRight( 0.5, 0.5, -152, 152 ) --[[ @ 0]]
	PerkList:setTopBottom( 1, 1, -477, -413 ) --[[ @ 0]]
	PerkList:setWidgetType( CoD.Hud_ZM_LastStand_Bleedout_Perk_Bar_Item ) --[[ @ 0]]
	PerkList:setHorizontalCount( 4 ) --[[ @ 0]]
	PerkList:setSpacing( 16 ) --[[ @ 0]]
	PerkList:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	PerkList:setDataSource( "BleedoutPerkVapors" ) --[[ @ 0]]
	self:addElement( PerkList ) --[[ @ 0]]
	self.PerkList = PerkList --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Trials_HUDDeactivated",
			condition = function ( menu, element, event )
				return CoD.HUDUtility.IsAnyGameType( f1_arg0, "ztrials" ) and CoD.ModelUtility.IsGlobalModelValueEqualTo( "ZMHudGlobal.trials.hudDeactivated", 1 )
			end
		},
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				local f6_local0 = Engine[@"IsVisibilityBitSet"]( f1_arg0, Enum[@"UIVisibilityBit"][@"hash_4B8E9B69F4B87954"] ) --[[ @ 0]]
				if not f6_local0 then
					f6_local0 = Engine[@"IsVisibilityBitSet"]( f1_arg0, Enum[@"UIVisibilityBit"][@"hash_5D3ABF9A2753CE40"] ) --[[ @ 0]]
					if not f6_local0 then
						f6_local0 = Engine[@"IsVisibilityBitSet"]( f1_arg0, Enum[@"UIVisibilityBit"][@"hash_11CDCB451655ABCF"] ) --[[ @ 0]]
						if not f6_local0 then
							f6_local0 = Engine[@"IsVisibilityBitSet"]( f1_arg0, Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"] ) --[[ @ 0]]
							if not f6_local0 then
								if Engine[@"IsVisibilityBitSet"]( f1_arg0, Enum[@"UIVisibilityBit"][@"hash_7ADC477DDE486DD7"] ) then
									f6_local0 = Engine[@"IsVisibilityBitSet"]( f1_arg0, Enum[@"UIVisibilityBit"][@"hash_523CD9BAB9B9F4C8"] ) --[[ @ 0]]
									if not f6_local0 then
										f6_local0 = Engine[@"IsVisibilityBitSet"]( f1_arg0, Enum[@"UIVisibilityBit"][@"hash_68A5E996D4528DA2"] ) --[[ @ 0]]
										if not f6_local0 then
											f6_local0 = Engine[@"IsVisibilityBitSet"]( f1_arg0, Enum[@"UIVisibilityBit"][@"hash_5A77EB9347BE4DFF"] ) --[[ @ 0]]
											if not f6_local0 then
												f6_local0 = Engine[@"IsVisibilityBitSet"]( f1_arg0, Enum[@"UIVisibilityBit"][@"hash_624E603C16FCC38F"] ) --[[ @ 0]]
												if not f6_local0 then
													f6_local0 = Engine[@"IsVisibilityBitSet"]( f1_arg0, Enum[@"UIVisibilityBit"][@"hash_54828BED794DA0A5"] ) --[[ @ 0]]
													if not f6_local0 then
														f6_local0 = Engine[@"IsVisibilityBitSet"]( f1_arg0, Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"] ) --[[ @ 0]]
														if not f6_local0 then
															f6_local0 = Engine[@"IsVisibilityBitSet"]( f1_arg0, Enum[@"UIVisibilityBit"][@"hash_11E59914E91E423A"] ) --[[ @ 0]]
															if not f6_local0 then
																f6_local0 = Engine[@"IsVisibilityBitSet"]( f1_arg0, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) --[[ @ 0]]
																if not f6_local0 then
																	f6_local0 = not Engine[@"IsVisibilityBitSet"]( f1_arg0, Enum[@"UIVisibilityBit"][@"hash_BB045E46E88E762"] ) --[[ @ 0]]
																end
															end
														end
													end
												end
											end
										end
									end
								else
									f6_local0 = true --[[ @ 0]]
								end
							end
						end
					end
				end
				return f6_local0
			end
		},
		{
			stateName = "ServerPaused",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsModelValueTrue( f1_arg0, "hudItems.serverPaused" )
			end
		},
		{
			stateName = "Revive",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueGreaterThan( element, f1_arg0, "revive_progress", 0 )
			end
		}
	} ) --[[ @ 0]]
	local f1_local11 = self --[[ @ 0]]
	local f1_local12 = self.subscribeToModel --[[ @ 0]]
	local f1_local13 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local12( f1_local11, f1_local13["ZMHudGlobal.trials.hudDeactivated"], function ( f9_arg0 )
		f1_local1:updateElementState( self, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f9_arg0:get(),
			modelName = "ZMHudGlobal.trials.hudDeactivated"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local11 = self --[[ @ 0]]
	f1_local12 = self.subscribeToModel --[[ @ 0]]
	f1_local13 = Engine[@"GetModelForController"]( f1_arg0 ) --[[ @ 0]]
	f1_local12( f1_local11, f1_local13["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_4B8E9B69F4B87954"]], function ( f10_arg0 )
		f1_local1:updateElementState( self, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f10_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_4B8E9B69F4B87954"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local11 = self --[[ @ 0]]
	f1_local12 = self.subscribeToModel --[[ @ 0]]
	f1_local13 = Engine[@"GetModelForController"]( f1_arg0 ) --[[ @ 0]]
	f1_local12( f1_local11, f1_local13["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5D3ABF9A2753CE40"]], function ( f11_arg0 )
		f1_local1:updateElementState( self, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f11_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5D3ABF9A2753CE40"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local11 = self --[[ @ 0]]
	f1_local12 = self.subscribeToModel --[[ @ 0]]
	f1_local13 = Engine[@"GetModelForController"]( f1_arg0 ) --[[ @ 0]]
	f1_local12( f1_local11, f1_local13["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_11CDCB451655ABCF"]], function ( f12_arg0 )
		f1_local1:updateElementState( self, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f12_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_11CDCB451655ABCF"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local11 = self --[[ @ 0]]
	f1_local12 = self.subscribeToModel --[[ @ 0]]
	f1_local13 = Engine[@"GetModelForController"]( f1_arg0 ) --[[ @ 0]]
	f1_local12( f1_local11, f1_local13["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"]], function ( f13_arg0 )
		f1_local1:updateElementState( self, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f13_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local11 = self --[[ @ 0]]
	f1_local12 = self.subscribeToModel --[[ @ 0]]
	f1_local13 = Engine[@"GetModelForController"]( f1_arg0 ) --[[ @ 0]]
	f1_local12( f1_local11, f1_local13["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_7ADC477DDE486DD7"]], function ( f14_arg0 )
		f1_local1:updateElementState( self, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f14_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_7ADC477DDE486DD7"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local11 = self --[[ @ 0]]
	f1_local12 = self.subscribeToModel --[[ @ 0]]
	f1_local13 = Engine[@"GetModelForController"]( f1_arg0 ) --[[ @ 0]]
	f1_local12( f1_local11, f1_local13["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_523CD9BAB9B9F4C8"]], function ( f15_arg0 )
		f1_local1:updateElementState( self, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f15_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_523CD9BAB9B9F4C8"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local11 = self --[[ @ 0]]
	f1_local12 = self.subscribeToModel --[[ @ 0]]
	f1_local13 = Engine[@"GetModelForController"]( f1_arg0 ) --[[ @ 0]]
	f1_local12( f1_local11, f1_local13["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_68A5E996D4528DA2"]], function ( f16_arg0 )
		f1_local1:updateElementState( self, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f16_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_68A5E996D4528DA2"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local11 = self --[[ @ 0]]
	f1_local12 = self.subscribeToModel --[[ @ 0]]
	f1_local13 = Engine[@"GetModelForController"]( f1_arg0 ) --[[ @ 0]]
	f1_local12( f1_local11, f1_local13["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5A77EB9347BE4DFF"]], function ( f17_arg0 )
		f1_local1:updateElementState( self, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f17_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5A77EB9347BE4DFF"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local11 = self --[[ @ 0]]
	f1_local12 = self.subscribeToModel --[[ @ 0]]
	f1_local13 = Engine[@"GetModelForController"]( f1_arg0 ) --[[ @ 0]]
	f1_local12( f1_local11, f1_local13["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_624E603C16FCC38F"]], function ( f18_arg0 )
		f1_local1:updateElementState( self, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f18_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_624E603C16FCC38F"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local11 = self --[[ @ 0]]
	f1_local12 = self.subscribeToModel --[[ @ 0]]
	f1_local13 = Engine[@"GetModelForController"]( f1_arg0 ) --[[ @ 0]]
	f1_local12( f1_local11, f1_local13["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_54828BED794DA0A5"]], function ( f19_arg0 )
		f1_local1:updateElementState( self, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f19_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_54828BED794DA0A5"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local11 = self --[[ @ 0]]
	f1_local12 = self.subscribeToModel --[[ @ 0]]
	f1_local13 = Engine[@"GetModelForController"]( f1_arg0 ) --[[ @ 0]]
	f1_local12( f1_local11, f1_local13["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"]], function ( f20_arg0 )
		f1_local1:updateElementState( self, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f20_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local11 = self --[[ @ 0]]
	f1_local12 = self.subscribeToModel --[[ @ 0]]
	f1_local13 = Engine[@"GetModelForController"]( f1_arg0 ) --[[ @ 0]]
	f1_local12( f1_local11, f1_local13["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_11E59914E91E423A"]], function ( f21_arg0 )
		f1_local1:updateElementState( self, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f21_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_11E59914E91E423A"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local11 = self --[[ @ 0]]
	f1_local12 = self.subscribeToModel --[[ @ 0]]
	f1_local13 = Engine[@"GetModelForController"]( f1_arg0 ) --[[ @ 0]]
	f1_local12( f1_local11, f1_local13["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"]], function ( f22_arg0 )
		f1_local1:updateElementState( self, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f22_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local11 = self --[[ @ 0]]
	f1_local12 = self.subscribeToModel --[[ @ 0]]
	f1_local13 = Engine[@"GetModelForController"]( f1_arg0 ) --[[ @ 0]]
	f1_local12( f1_local11, f1_local13["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_BB045E46E88E762"]], function ( f23_arg0 )
		f1_local1:updateElementState( self, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f23_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_BB045E46E88E762"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local11 = self --[[ @ 0]]
	f1_local12 = self.subscribeToModel --[[ @ 0]]
	f1_local13 = Engine[@"GetModelForController"]( f1_arg0 ) --[[ @ 0]]
	f1_local12( f1_local11, f1_local13["hudItems.serverPaused"], function ( f24_arg0 )
		f1_local1:updateElementState( self, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f24_arg0:get(),
			modelName = "hudItems.serverPaused"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:linkToElementModel( self, "revive_progress", true, function ( model )
		f1_local1:updateElementState( self, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = model:get(),
			modelName = "revive_progress"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	PerkList.id = "PerkList" --[[ @ 0]]
	self:processEvent( {
		name = "menu_loaded",
		controller = f1_arg0
	} ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg0 ) --[[ @ 0]]
	end
	
	f1_local12 = self --[[ @ 0]]
	CoD.ZMPerkUtility.SubscribeForBleedoutPerkModelUpdate( self, f1_arg0 ) --[[ @ 0]]
	return self
end
 --[[ @ 0]]
CoD.zm_laststand_client.__resetProperties = function ( f26_arg0 )
	f26_arg0.DecorativeBGAnim:completeAnimation() --[[ @ 0]]
	f26_arg0.bleedout_bar:completeAnimation() --[[ @ 0]]
	f26_arg0.ReviveBarBG:completeAnimation() --[[ @ 0]]
	f26_arg0.bleedout_label:completeAnimation() --[[ @ 0]]
	f26_arg0.revive_clock:completeAnimation() --[[ @ 0]]
	f26_arg0.bleedout_clock:completeAnimation() --[[ @ 0]]
	f26_arg0.PerkList:completeAnimation() --[[ @ 0]]
	f26_arg0.revive_bar:completeAnimation() --[[ @ 0]]
	f26_arg0.ReviveBarBG2:completeAnimation() --[[ @ 0]]
	f26_arg0.DecorativeBGAnim:setAlpha( 1 ) --[[ @ 0]]
	f26_arg0.DecorativeBGAnim:setScale( 1, 1 ) --[[ @ 0]]
	f26_arg0.bleedout_bar:setAlpha( 1 ) --[[ @ 0]]
	f26_arg0.bleedout_bar:setScale( 1, 1 ) --[[ @ 0]]
	f26_arg0.ReviveBarBG:setAlpha( 1 ) --[[ @ 0]]
	f26_arg0.ReviveBarBG:setScale( 1, 1 ) --[[ @ 0]]
	f26_arg0.bleedout_label:setAlpha( 1 ) --[[ @ 0]]
	f26_arg0.bleedout_label:setScale( 1, 1 ) --[[ @ 0]]
	f26_arg0.revive_clock:setAlpha( 1 ) --[[ @ 0]]
	f26_arg0.bleedout_clock:setAlpha( 0.9 ) --[[ @ 0]]
	f26_arg0.PerkList:setAlpha( 1 ) --[[ @ 0]]
	f26_arg0.revive_bar:setAlpha( 0 ) --[[ @ 0]]
	f26_arg0.revive_bar:setScale( 0.8, 0.6 ) --[[ @ 0]]
	f26_arg0.ReviveBarBG2:setAlpha( 0 ) --[[ @ 0]]
	f26_arg0.ReviveBarBG2:setScale( 0.81, 0.6 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.zm_laststand_client.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f27_arg0, f27_arg1 )
			f27_arg0:__resetProperties() --[[ @ 0]]
			f27_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			local f27_local0 = function ( f28_arg0 )
				f27_arg0.DecorativeBGAnim:beginAnimation( 200, Enum[@"hash_1F50FFF429AB1890"][@"hash_15193EA7825DC097"] ) --[[ @ 0]]
				f27_arg0.DecorativeBGAnim:setAlpha( 1 ) --[[ @ 0]]
				f27_arg0.DecorativeBGAnim:setScale( 1, 1 ) --[[ @ 0]]
				f27_arg0.DecorativeBGAnim:registerEventHandler( "interrupted_keyframe", f27_arg0.clipInterrupted ) --[[ @ 0]]
				f27_arg0.DecorativeBGAnim:registerEventHandler( "transition_complete_keyframe", f27_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f27_arg0.DecorativeBGAnim:completeAnimation() --[[ @ 0]]
			f27_arg0.DecorativeBGAnim:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.DecorativeBGAnim:setScale( 2, 2 ) --[[ @ 0]]
			f27_local0( f27_arg0.DecorativeBGAnim ) --[[ @ 0]]
			local f27_local1 = function ( f29_arg0 )
				local f29_local0 = function ( f30_arg0 )
					f30_arg0:beginAnimation( 200, Enum[@"hash_1F50FFF429AB1890"][@"hash_15193EA7825DC097"] ) --[[ @ 0]]
					f30_arg0:setAlpha( 1 ) --[[ @ 0]]
					f30_arg0:setScale( 1, 1 ) --[[ @ 0]]
					f30_arg0:registerEventHandler( "transition_complete_keyframe", f27_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f27_arg0.bleedout_label:beginAnimation( 100 ) --[[ @ 0]]
				f27_arg0.bleedout_label:registerEventHandler( "interrupted_keyframe", f27_arg0.clipInterrupted ) --[[ @ 0]]
				f27_arg0.bleedout_label:registerEventHandler( "transition_complete_keyframe", f29_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f27_arg0.bleedout_label:completeAnimation() --[[ @ 0]]
			f27_arg0.bleedout_label:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.bleedout_label:setScale( 2, 2 ) --[[ @ 0]]
			f27_local1( f27_arg0.bleedout_label ) --[[ @ 0]]
			local f27_local2 = function ( f31_arg0 )
				local f31_local0 = function ( f32_arg0 )
					f32_arg0:beginAnimation( 200, Enum[@"hash_1F50FFF429AB1890"][@"hash_15193EA7825DC097"] ) --[[ @ 0]]
					f32_arg0:setAlpha( 1 ) --[[ @ 0]]
					f32_arg0:setScale( 1, 1 ) --[[ @ 0]]
					f32_arg0:registerEventHandler( "transition_complete_keyframe", f27_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f27_arg0.ReviveBarBG:beginAnimation( 200 ) --[[ @ 0]]
				f27_arg0.ReviveBarBG:registerEventHandler( "interrupted_keyframe", f27_arg0.clipInterrupted ) --[[ @ 0]]
				f27_arg0.ReviveBarBG:registerEventHandler( "transition_complete_keyframe", f31_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f27_arg0.ReviveBarBG:completeAnimation() --[[ @ 0]]
			f27_arg0.ReviveBarBG:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.ReviveBarBG:setScale( 2, 2 ) --[[ @ 0]]
			f27_local2( f27_arg0.ReviveBarBG ) --[[ @ 0]]
			local f27_local3 = function ( f33_arg0 )
				local f33_local0 = function ( f34_arg0 )
					f34_arg0:beginAnimation( 200, Enum[@"hash_1F50FFF429AB1890"][@"hash_15193EA7825DC097"] ) --[[ @ 0]]
					f34_arg0:setAlpha( 1 ) --[[ @ 0]]
					f34_arg0:setScale( 1, 1 ) --[[ @ 0]]
					f34_arg0:registerEventHandler( "transition_complete_keyframe", f27_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f27_arg0.bleedout_bar:beginAnimation( 200 ) --[[ @ 0]]
				f27_arg0.bleedout_bar:registerEventHandler( "interrupted_keyframe", f27_arg0.clipInterrupted ) --[[ @ 0]]
				f27_arg0.bleedout_bar:registerEventHandler( "transition_complete_keyframe", f33_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f27_arg0.bleedout_bar:completeAnimation() --[[ @ 0]]
			f27_arg0.bleedout_bar:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.bleedout_bar:setScale( 2, 2 ) --[[ @ 0]]
			f27_local3( f27_arg0.bleedout_bar ) --[[ @ 0]]
		end
	},
	Trials_HUDDeactivated = {
		DefaultClip = function ( f35_arg0, f35_arg1 )
			f35_arg0:__resetProperties() --[[ @ 0]]
			f35_arg0:setupElementClipCounter( 9 ) --[[ @ 0]]
			f35_arg0.DecorativeBGAnim:completeAnimation() --[[ @ 0]]
			f35_arg0.DecorativeBGAnim:setAlpha( 0 ) --[[ @ 0]]
			f35_arg0.clipFinished( f35_arg0.DecorativeBGAnim ) --[[ @ 0]]
			f35_arg0.bleedout_clock:completeAnimation() --[[ @ 0]]
			f35_arg0.bleedout_clock:setAlpha( 0 ) --[[ @ 0]]
			f35_arg0.clipFinished( f35_arg0.bleedout_clock ) --[[ @ 0]]
			f35_arg0.revive_clock:completeAnimation() --[[ @ 0]]
			f35_arg0.revive_clock:setAlpha( 0 ) --[[ @ 0]]
			f35_arg0.clipFinished( f35_arg0.revive_clock ) --[[ @ 0]]
			f35_arg0.bleedout_label:completeAnimation() --[[ @ 0]]
			f35_arg0.bleedout_label:setAlpha( 0 ) --[[ @ 0]]
			f35_arg0.clipFinished( f35_arg0.bleedout_label ) --[[ @ 0]]
			f35_arg0.ReviveBarBG2:completeAnimation() --[[ @ 0]]
			f35_arg0.ReviveBarBG2:setAlpha( 0 ) --[[ @ 0]]
			f35_arg0.clipFinished( f35_arg0.ReviveBarBG2 ) --[[ @ 0]]
			f35_arg0.revive_bar:completeAnimation() --[[ @ 0]]
			f35_arg0.revive_bar:setAlpha( 0 ) --[[ @ 0]]
			f35_arg0.clipFinished( f35_arg0.revive_bar ) --[[ @ 0]]
			f35_arg0.ReviveBarBG:completeAnimation() --[[ @ 0]]
			f35_arg0.ReviveBarBG:setAlpha( 0 ) --[[ @ 0]]
			f35_arg0.clipFinished( f35_arg0.ReviveBarBG ) --[[ @ 0]]
			f35_arg0.bleedout_bar:completeAnimation() --[[ @ 0]]
			f35_arg0.bleedout_bar:setAlpha( 0 ) --[[ @ 0]]
			f35_arg0.clipFinished( f35_arg0.bleedout_bar ) --[[ @ 0]]
			f35_arg0.PerkList:completeAnimation() --[[ @ 0]]
			f35_arg0.PerkList:setAlpha( 0 ) --[[ @ 0]]
			f35_arg0.clipFinished( f35_arg0.PerkList ) --[[ @ 0]]
		end
	},
	Hidden = {
		DefaultClip = function ( f36_arg0, f36_arg1 )
			f36_arg0:__resetProperties() --[[ @ 0]]
			f36_arg0:setupElementClipCounter( 9 ) --[[ @ 0]]
			f36_arg0.DecorativeBGAnim:completeAnimation() --[[ @ 0]]
			f36_arg0.DecorativeBGAnim:setAlpha( 0 ) --[[ @ 0]]
			f36_arg0.clipFinished( f36_arg0.DecorativeBGAnim ) --[[ @ 0]]
			f36_arg0.bleedout_clock:completeAnimation() --[[ @ 0]]
			f36_arg0.bleedout_clock:setAlpha( 0 ) --[[ @ 0]]
			f36_arg0.clipFinished( f36_arg0.bleedout_clock ) --[[ @ 0]]
			f36_arg0.revive_clock:completeAnimation() --[[ @ 0]]
			f36_arg0.revive_clock:setAlpha( 0 ) --[[ @ 0]]
			f36_arg0.clipFinished( f36_arg0.revive_clock ) --[[ @ 0]]
			f36_arg0.bleedout_label:completeAnimation() --[[ @ 0]]
			f36_arg0.bleedout_label:setAlpha( 0 ) --[[ @ 0]]
			f36_arg0.clipFinished( f36_arg0.bleedout_label ) --[[ @ 0]]
			f36_arg0.ReviveBarBG2:completeAnimation() --[[ @ 0]]
			f36_arg0.ReviveBarBG2:setAlpha( 0 ) --[[ @ 0]]
			f36_arg0.clipFinished( f36_arg0.ReviveBarBG2 ) --[[ @ 0]]
			f36_arg0.revive_bar:completeAnimation() --[[ @ 0]]
			f36_arg0.revive_bar:setAlpha( 0 ) --[[ @ 0]]
			f36_arg0.clipFinished( f36_arg0.revive_bar ) --[[ @ 0]]
			f36_arg0.ReviveBarBG:completeAnimation() --[[ @ 0]]
			f36_arg0.ReviveBarBG:setAlpha( 0 ) --[[ @ 0]]
			f36_arg0.clipFinished( f36_arg0.ReviveBarBG ) --[[ @ 0]]
			f36_arg0.bleedout_bar:completeAnimation() --[[ @ 0]]
			f36_arg0.bleedout_bar:setAlpha( 0 ) --[[ @ 0]]
			f36_arg0.clipFinished( f36_arg0.bleedout_bar ) --[[ @ 0]]
			f36_arg0.PerkList:completeAnimation() --[[ @ 0]]
			f36_arg0.PerkList:setAlpha( 0 ) --[[ @ 0]]
			f36_arg0.clipFinished( f36_arg0.PerkList ) --[[ @ 0]]
		end
	},
	ServerPaused = {
		DefaultClip = function ( f37_arg0, f37_arg1 )
			f37_arg0:__resetProperties() --[[ @ 0]]
			f37_arg0:setupElementClipCounter( 9 ) --[[ @ 0]]
			f37_arg0.DecorativeBGAnim:completeAnimation() --[[ @ 0]]
			f37_arg0.DecorativeBGAnim:setAlpha( 0 ) --[[ @ 0]]
			f37_arg0.clipFinished( f37_arg0.DecorativeBGAnim ) --[[ @ 0]]
			f37_arg0.bleedout_clock:completeAnimation() --[[ @ 0]]
			f37_arg0.bleedout_clock:setAlpha( 0 ) --[[ @ 0]]
			f37_arg0.clipFinished( f37_arg0.bleedout_clock ) --[[ @ 0]]
			f37_arg0.revive_clock:completeAnimation() --[[ @ 0]]
			f37_arg0.revive_clock:setAlpha( 0 ) --[[ @ 0]]
			f37_arg0.clipFinished( f37_arg0.revive_clock ) --[[ @ 0]]
			f37_arg0.bleedout_label:completeAnimation() --[[ @ 0]]
			f37_arg0.bleedout_label:setAlpha( 0 ) --[[ @ 0]]
			f37_arg0.clipFinished( f37_arg0.bleedout_label ) --[[ @ 0]]
			f37_arg0.ReviveBarBG2:completeAnimation() --[[ @ 0]]
			f37_arg0.ReviveBarBG2:setAlpha( 0 ) --[[ @ 0]]
			f37_arg0.clipFinished( f37_arg0.ReviveBarBG2 ) --[[ @ 0]]
			f37_arg0.revive_bar:completeAnimation() --[[ @ 0]]
			f37_arg0.revive_bar:setAlpha( 0 ) --[[ @ 0]]
			f37_arg0.clipFinished( f37_arg0.revive_bar ) --[[ @ 0]]
			f37_arg0.ReviveBarBG:completeAnimation() --[[ @ 0]]
			f37_arg0.ReviveBarBG:setAlpha( 0 ) --[[ @ 0]]
			f37_arg0.clipFinished( f37_arg0.ReviveBarBG ) --[[ @ 0]]
			f37_arg0.bleedout_bar:completeAnimation() --[[ @ 0]]
			f37_arg0.bleedout_bar:setAlpha( 0 ) --[[ @ 0]]
			f37_arg0.clipFinished( f37_arg0.bleedout_bar ) --[[ @ 0]]
			f37_arg0.PerkList:completeAnimation() --[[ @ 0]]
			f37_arg0.PerkList:setAlpha( 0 ) --[[ @ 0]]
			f37_arg0.clipFinished( f37_arg0.PerkList ) --[[ @ 0]]
		end
	},
	Revive = {
		DefaultClip = function ( f38_arg0, f38_arg1 )
			f38_arg0:__resetProperties() --[[ @ 0]]
			f38_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			local f38_local0 = function ( f39_arg0 )
				f38_arg0.ReviveBarBG2:beginAnimation( 200, Enum[@"hash_1F50FFF429AB1890"][@"hash_15193EA7825DC097"] ) --[[ @ 0]]
				f38_arg0.ReviveBarBG2:setAlpha( 1 ) --[[ @ 0]]
				f38_arg0.ReviveBarBG2:setScale( 0.81, 0.6 ) --[[ @ 0]]
				f38_arg0.ReviveBarBG2:registerEventHandler( "interrupted_keyframe", f38_arg0.clipInterrupted ) --[[ @ 0]]
				f38_arg0.ReviveBarBG2:registerEventHandler( "transition_complete_keyframe", f38_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f38_arg0.ReviveBarBG2:completeAnimation() --[[ @ 0]]
			f38_arg0.ReviveBarBG2:setAlpha( 0 ) --[[ @ 0]]
			f38_arg0.ReviveBarBG2:setScale( 1.62, 1.2 ) --[[ @ 0]]
			f38_local0( f38_arg0.ReviveBarBG2 ) --[[ @ 0]]
			local f38_local1 = function ( f40_arg0 )
				f38_arg0.revive_bar:beginAnimation( 200, Enum[@"hash_1F50FFF429AB1890"][@"hash_15193EA7825DC097"] ) --[[ @ 0]]
				f38_arg0.revive_bar:setAlpha( 1 ) --[[ @ 0]]
				f38_arg0.revive_bar:setScale( 0.8, 0.6 ) --[[ @ 0]]
				f38_arg0.revive_bar:registerEventHandler( "interrupted_keyframe", f38_arg0.clipInterrupted ) --[[ @ 0]]
				f38_arg0.revive_bar:registerEventHandler( "transition_complete_keyframe", f38_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f38_arg0.revive_bar:completeAnimation() --[[ @ 0]]
			f38_arg0.revive_bar:setAlpha( 0 ) --[[ @ 0]]
			f38_arg0.revive_bar:setScale( 1.6, 1.2 ) --[[ @ 0]]
			f38_local1( f38_arg0.revive_bar ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.zm_laststand_client.__onClose = function ( f41_arg0 )
	f41_arg0.DecorativeBGAnim:close() --[[ @ 0]]
	f41_arg0.bleedout_label:close() --[[ @ 0]]
	f41_arg0.revive_bar:close() --[[ @ 0]]
	f41_arg0.bleedout_bar:close() --[[ @ 0]]
	f41_arg0.PerkList:close() --[[ @ 0]]
end
 --[[ @ 0]]
