-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:35
require( "x64:2f7f78c2a715db3e" ) --[[ @ 0]]

CoD.ZMPerkVaporItemChargeCountListWidget = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.ZMPerkVaporItemChargeCountListWidget.__defaultWidth = 36 --[[ @ 0]]
CoD.ZMPerkVaporItemChargeCountListWidget.__defaultHeight = 24 --[[ @ 0]]
CoD.ZMPerkVaporItemChargeCountListWidget.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.ZMPerkVaporItemChargeCountListWidget ) --[[ @ 0]]
	self.id = "ZMPerkVaporItemChargeCountListWidget" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local ZMEquipmentItemCounter = CoD.ZMEquipmentItemCounter.new( f1_arg0, f1_arg1, 0, 0, 0, 36, 0, 0, 0, 24 ) --[[ @ 0]]
	ZMEquipmentItemCounter:mergeStateConditions( {
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		}
	} ) --[[ @ 0]]
	ZMEquipmentItemCounter:linkToElementModel( self, "chargeCount", true, function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			ZMEquipmentItemCounter.Quantity:setText( CoD.BaseUtility.AlreadyLocalized( f3_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( ZMEquipmentItemCounter ) --[[ @ 0]]
	self.ZMEquipmentItemCounter = ZMEquipmentItemCounter --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Visible",
			condition = function ( menu, element, event )
				return CoD.ZMPerkUtility.IsPerkSpecificItem( element, f1_arg1, @"perk_widows_wine" )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "itemIndex", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "itemIndex"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.ZMPerkVaporItemChargeCountListWidget.__resetProperties = function ( f6_arg0 )
	f6_arg0.ZMEquipmentItemCounter:completeAnimation() --[[ @ 0]]
	f6_arg0.ZMEquipmentItemCounter:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ZMPerkVaporItemChargeCountListWidget.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f7_arg0, f7_arg1 )
			f7_arg0:__resetProperties() --[[ @ 0]]
			f7_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f7_arg0.ZMEquipmentItemCounter:completeAnimation() --[[ @ 0]]
			f7_arg0.ZMEquipmentItemCounter:setAlpha( 0 ) --[[ @ 0]]
			f7_arg0.clipFinished( f7_arg0.ZMEquipmentItemCounter ) --[[ @ 0]]
		end
	},
	Visible = {
		DefaultClip = function ( f8_arg0, f8_arg1 )
			f8_arg0:__resetProperties() --[[ @ 0]]
			f8_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f8_arg0.ZMEquipmentItemCounter:completeAnimation() --[[ @ 0]]
			f8_arg0.ZMEquipmentItemCounter:setAlpha( 1 ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.ZMEquipmentItemCounter ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.ZMPerkVaporItemChargeCountListWidget.__onClose = function ( f9_arg0 )
	f9_arg0.ZMEquipmentItemCounter:close() --[[ @ 0]]
end
 --[[ @ 0]]
