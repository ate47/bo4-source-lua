-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
require( "x64:225acac8f33a8459" ) --[[ @ 0]]

CoD.InGameTrialsRulesBackground = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.InGameTrialsRulesBackground.__defaultWidth = 1188 --[[ @ 0]]
CoD.InGameTrialsRulesBackground.__defaultHeight = 696 --[[ @ 0]]
CoD.InGameTrialsRulesBackground.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIHorizontalList.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9, 10, false ) --[[ @ 0]]
	self:setAlignment( LUI.Alignment.Left ) --[[ @ 0]]
	self:setClass( CoD.InGameTrialsRulesBackground ) --[[ @ 0]]
	self.id = "InGameTrialsRulesBackground" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	
	local Bronze = CoD.InGameTrialsRulesColumn.new( f1_arg0, f1_arg1, 0.5, 0.5, -594, -206, 0.5, 0.5, -348, 348 ) --[[ @ 0]]
	Bronze:mergeStateConditions( {
		{
			stateName = "AwardedCopy",
			condition = function ( menu, element, event )
				return CoD.ZombieUtility.IsHighestRoundSurvivedGreaterThanOrEqualTo( f1_arg1, 10 )
			end
		},
		{
			stateName = "Awarded",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalDataSourceModelValueGreaterThan( f1_arg1, "ZMHudGlobal", "trials.roundNumber", 10 )
			end
		}
	} ) --[[ @ 0]]
	local Gold = Bronze --[[ @ 0]]
	local Silver = Bronze.subscribeToModel --[[ @ 0]]
	local f1_local4 = DataSources.ZMHudGlobal.getModel( f1_arg1 ) --[[ @ 0]]
	Silver( Gold, f1_local4["trials.roundNumber"], function ( f4_arg0 )
		f1_arg0:updateElementState( Bronze, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f4_arg0:get(),
			modelName = "trials.roundNumber"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:addElement( Bronze ) --[[ @ 0]]
	self.Bronze = Bronze --[[ @ 0]]
	
	Silver = CoD.InGameTrialsRulesColumn.new( f1_arg0, f1_arg1, 0.5, 0.5, -196, 192, 0.5, 0.5, -348, 348 ) --[[ @ 0]]
	Silver:mergeStateConditions( {
		{
			stateName = "AwardedCopy",
			condition = function ( menu, element, event )
				return CoD.ZombieUtility.IsHighestRoundSurvivedGreaterThanOrEqualTo( f1_arg1, 20 )
			end
		},
		{
			stateName = "Awarded",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalDataSourceModelValueGreaterThan( f1_arg1, "ZMHudGlobal", "trials.roundNumber", 20 )
			end
		}
	} ) --[[ @ 0]]
	f1_local4 = Silver --[[ @ 0]]
	Gold = Silver.subscribeToModel --[[ @ 0]]
	local f1_local5 = DataSources.ZMHudGlobal.getModel( f1_arg1 ) --[[ @ 0]]
	Gold( f1_local4, f1_local5["trials.roundNumber"], function ( f7_arg0 )
		f1_arg0:updateElementState( Silver, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f7_arg0:get(),
			modelName = "trials.roundNumber"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	Silver.Background:setImage( RegisterImage( @"uie_trial_rules_silver_normal" ) ) --[[ @ 0]]
	Silver.Medal:setImage( RegisterImage( @"uie_trial_medal_silver" ) ) --[[ @ 0]]
	self:addElement( Silver ) --[[ @ 0]]
	self.Silver = Silver --[[ @ 0]]
	
	Gold = CoD.InGameTrialsRulesColumn.new( f1_arg0, f1_arg1, 0.5, 0.5, 202, 590, 0.5, 0.5, -348, 348 ) --[[ @ 0]]
	Gold:mergeStateConditions( {
		{
			stateName = "AwardedCopy",
			condition = function ( menu, element, event )
				return CoD.ZombieUtility.IsHighestRoundSurvivedGreaterThanOrEqualTo( f1_arg1, 30 )
			end
		},
		{
			stateName = "Awarded",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalDataSourceModelValueGreaterThan( f1_arg1, "ZMHudGlobal", "trials.roundNumber", 30 )
			end
		}
	} ) --[[ @ 0]]
	f1_local5 = Gold --[[ @ 0]]
	f1_local4 = Gold.subscribeToModel --[[ @ 0]]
	local f1_local6 = DataSources.ZMHudGlobal.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local4( f1_local5, f1_local6["trials.roundNumber"], function ( f10_arg0 )
		f1_arg0:updateElementState( Gold, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f10_arg0:get(),
			modelName = "trials.roundNumber"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	Gold.Background:setImage( RegisterImage( @"uie_trial_rules_gold_normal" ) ) --[[ @ 0]]
	Gold.Medal:setImage( RegisterImage( @"uie_trial_medal_gold" ) ) --[[ @ 0]]
	self:addElement( Gold ) --[[ @ 0]]
	self.Gold = Gold --[[ @ 0]]
	
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.InGameTrialsRulesBackground.__onClose = function ( f11_arg0 )
	f11_arg0.Bronze:close() --[[ @ 0]]
	f11_arg0.Silver:close() --[[ @ 0]]
	f11_arg0.Gold:close() --[[ @ 0]]
end
 --[[ @ 0]]
