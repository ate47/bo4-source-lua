-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:50
require( "ui/uieditor/widgets/cac/newbreadcrumb" ) --[[ @ 0]]
require( "x64:5acbed692442191c" ) --[[ @ 0]]
require( "ui/uieditor/widgets/pc/utility/verticallistspacer" ) --[[ @ 0]]

CoD.ItemHintTextBreadcrumb = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.ItemHintTextBreadcrumb.__defaultWidth = 346 --[[ @ 0]]
CoD.ItemHintTextBreadcrumb.__defaultHeight = 34 --[[ @ 0]]
CoD.ItemHintTextBreadcrumb.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIHorizontalList.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9, 0, true ) --[[ @ 0]]
	self:setAlignment( LUI.Alignment.Center ) --[[ @ 0]]
	self:setClass( CoD.ItemHintTextBreadcrumb ) --[[ @ 0]]
	self.id = "ItemHintTextBreadcrumb" --[[ @ 0]]
	self.soundSet = "FrontendMain" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local CommonCornerPips = CoD.CommonCornerPips02.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	CommonCornerPips.Bg:setAlpha( 1 ) --[[ @ 0]]
	CommonCornerPips.TiledBacking:setAlpha( 1 ) --[[ @ 0]]
	self:addElement( CommonCornerPips ) --[[ @ 0]]
	self.CommonCornerPips = CommonCornerPips --[[ @ 0]]
	
	local Spacer01 = CoD.VerticalListSpacer.new( f1_arg0, f1_arg1, 0, 0, 2.5, 11.5, 0, 0, -8.5, 42.5 ) --[[ @ 0]]
	self:addElement( Spacer01 ) --[[ @ 0]]
	self.Spacer01 = Spacer01 --[[ @ 0]]
	
	local textCenterAlign = LUI.UIText.new( 0, 0, 11.5, 307.5, 0.5, 0.5, -10, 10 ) --[[ @ 0]]
	textCenterAlign:setText( "" ) --[[ @ 0]]
	textCenterAlign:setTTF( "dinnext_regular" ) --[[ @ 0]]
	textCenterAlign:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	textCenterAlign:setBackingType( 1 ) --[[ @ 0]]
	textCenterAlign:setBackingXPadding( 15 ) --[[ @ 0]]
	textCenterAlign:setBackingYPadding( 7 ) --[[ @ 0]]
	self:addElement( textCenterAlign ) --[[ @ 0]]
	self.textCenterAlign = textCenterAlign --[[ @ 0]]
	
	local Spacer = CoD.VerticalListSpacer.new( f1_arg0, f1_arg1, 0, 0, 307.5, 316.5, 0, 0, -8.5, 42.5 ) --[[ @ 0]]
	self:addElement( Spacer ) --[[ @ 0]]
	self.Spacer = Spacer --[[ @ 0]]
	
	local Breadcrumb = CoD.NewBreadcrumb.new( f1_arg0, f1_arg1, 0, 0, 316.5, 334.5, 0.5, 0.5, -11, 7 ) --[[ @ 0]]
	Breadcrumb:mergeStateConditions( {
		{
			stateName = "Visible",
			condition = function ( menu, element, event )
				local f2_local0 = IsLive() --[[ @ 0]]
				if f2_local0 then
					if not IsInGame() then
						f2_local0 = CoD.ModelUtility.IsSelfModelValueGreaterThan( element, f1_arg1, "breadcrumbCount", 0 ) --[[ @ 0]]
					else
						f2_local0 = false --[[ @ 0]]
					end
				end
				return f2_local0
			end
		}
	} ) --[[ @ 0]]
	local f1_local6 = Breadcrumb --[[ @ 0]]
	local Spacer2 = Breadcrumb.subscribeToModel --[[ @ 0]]
	local f1_local8 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	Spacer2( f1_local6, f1_local8["lobbyRoot.lobbyNetworkMode"], function ( f3_arg0 )
		f1_arg0:updateElementState( Breadcrumb, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f3_arg0:get(),
			modelName = "lobbyRoot.lobbyNetworkMode"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local6 = Breadcrumb --[[ @ 0]]
	Spacer2 = Breadcrumb.subscribeToModel --[[ @ 0]]
	f1_local8 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	Spacer2( f1_local6, f1_local8["lobbyRoot.lobbyNav"], function ( f4_arg0 )
		f1_arg0:updateElementState( Breadcrumb, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f4_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	Breadcrumb:linkToElementModel( Breadcrumb, "breadcrumbCount", true, function ( model )
		f1_arg0:updateElementState( Breadcrumb, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "breadcrumbCount"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( Breadcrumb ) --[[ @ 0]]
	self.Breadcrumb = Breadcrumb --[[ @ 0]]
	
	Spacer2 = CoD.VerticalListSpacer.new( f1_arg0, f1_arg1, 0, 0, 334.5, 343.5, 0, 0, -8.5, 42.5 ) --[[ @ 0]]
	self:addElement( Spacer2 ) --[[ @ 0]]
	self.Spacer2 = Spacer2 --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Mouse",
			condition = function ( menu, element, event )
				return IsMouseOrKeyboard( f1_arg1 )
			end
		},
		{
			stateName = "NoHintText",
			condition = function ( menu, element, event )
				return not HasHintText( element )
			end
		},
		{
			stateName = "CenterAlign",
			condition = function ( menu, element, event )
				return true
			end
		}
	} ) --[[ @ 0]]
	self:appendEventHandler( "input_source_changed", function ( f9_arg0, f9_arg1 )
		f9_arg1.menu = f9_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( self, f9_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	f1_local8 = self --[[ @ 0]]
	f1_local6 = self.subscribeToModel --[[ @ 0]]
	local f1_local9 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local6( f1_local8, f1_local9.LastInput, function ( f10_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f10_arg0:get(),
			modelName = "LastInput"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:linkToElementModel( self, nil, true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = nil
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.ItemHintTextBreadcrumb.__resetProperties = function ( f12_arg0 )
	f12_arg0.textCenterAlign:completeAnimation() --[[ @ 0]]
	f12_arg0.Breadcrumb:completeAnimation() --[[ @ 0]]
	f12_arg0.CommonCornerPips:completeAnimation() --[[ @ 0]]
	f12_arg0.textCenterAlign:setAlpha( 1 ) --[[ @ 0]]
	f12_arg0.Breadcrumb:setAlpha( 1 ) --[[ @ 0]]
	f12_arg0.CommonCornerPips:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ItemHintTextBreadcrumb.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f13_arg0, f13_arg1 )
			f13_arg0:__resetProperties() --[[ @ 0]]
			f13_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	Mouse = {
		DefaultClip = function ( f14_arg0, f14_arg1 )
			f14_arg0:__resetProperties() --[[ @ 0]]
			f14_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f14_arg0.CommonCornerPips:completeAnimation() --[[ @ 0]]
			f14_arg0.CommonCornerPips:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.CommonCornerPips ) --[[ @ 0]]
			f14_arg0.textCenterAlign:completeAnimation() --[[ @ 0]]
			f14_arg0.textCenterAlign:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.textCenterAlign ) --[[ @ 0]]
			f14_arg0.Breadcrumb:completeAnimation() --[[ @ 0]]
			f14_arg0.Breadcrumb:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.Breadcrumb ) --[[ @ 0]]
		end
	},
	NoHintText = {
		DefaultClip = function ( f15_arg0, f15_arg1 )
			f15_arg0:__resetProperties() --[[ @ 0]]
			f15_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f15_arg0.CommonCornerPips:completeAnimation() --[[ @ 0]]
			f15_arg0.CommonCornerPips:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.CommonCornerPips ) --[[ @ 0]]
			f15_arg0.textCenterAlign:completeAnimation() --[[ @ 0]]
			f15_arg0.textCenterAlign:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.textCenterAlign ) --[[ @ 0]]
			f15_arg0.Breadcrumb:completeAnimation() --[[ @ 0]]
			f15_arg0.Breadcrumb:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.Breadcrumb ) --[[ @ 0]]
		end
	},
	CenterAlign = {
		DefaultClip = function ( f16_arg0, f16_arg1 )
			f16_arg0:__resetProperties() --[[ @ 0]]
			f16_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.ItemHintTextBreadcrumb.__onClose = function ( f17_arg0 )
	f17_arg0.CommonCornerPips:close() --[[ @ 0]]
	f17_arg0.Spacer01:close() --[[ @ 0]]
	f17_arg0.Spacer:close() --[[ @ 0]]
	f17_arg0.Breadcrumb:close() --[[ @ 0]]
	f17_arg0.Spacer2:close() --[[ @ 0]]
end
 --[[ @ 0]]
