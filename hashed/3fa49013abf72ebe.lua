-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:49
require( "x64:4b86237f42f877c0" ) --[[ @ 0]]
require( "x64:493a575a7ca17e04" ) --[[ @ 0]]

CoD.KillcamPlayerHealth = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.KillcamPlayerHealth.__defaultWidth = 400 --[[ @ 0]]
CoD.KillcamPlayerHealth.__defaultHeight = 32 --[[ @ 0]]
CoD.KillcamPlayerHealth.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.KillcamPlayerHealth ) --[[ @ 0]]
	self.id = "KillcamPlayerHealth" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	
	local Backer = LUI.UIImage.new( 0, 0, 19, 321, 0, 0, 10, 23 ) --[[ @ 0]]
	Backer:setRGB( 0, 0, 0 ) --[[ @ 0]]
	Backer:setAlpha( 0.7 ) --[[ @ 0]]
	self:addElement( Backer ) --[[ @ 0]]
	self.Backer = Backer --[[ @ 0]]
	
	local ArmorBar = CoD.ArmorBarKillCam.new( f1_arg0, f1_arg1, 0, 0, 22.5, 316.5, 0, 0, 2, 6 ) --[[ @ 0]]
	ArmorBar:linkToElementModel( self, nil, false, function ( model )
		ArmorBar:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( ArmorBar ) --[[ @ 0]]
	self.ArmorBar = ArmorBar --[[ @ 0]]
	
	local HealthBar = CoD.HealthBar.new( f1_arg0, f1_arg1, 0, 0, 20.5, 319.5, 0, 0, 8.5, 24.5 ) --[[ @ 0]]
	HealthBar.Backer:setAlpha( 0 ) --[[ @ 0]]
	HealthBar.HealthFill:setRGB( ColorSet.FriendlyHealthBar.r, ColorSet.FriendlyHealthBar.g, ColorSet.FriendlyHealthBar.b ) --[[ @ 0]]
	HealthBar:linkToElementModel( self, "health", false, function ( model )
		HealthBar:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( HealthBar ) --[[ @ 0]]
	self.HealthBar = HealthBar --[[ @ 0]]
	
	local HealthValue = LUI.UIText.new( 0, 0, 328, 392, 0, 0, 3, 29 ) --[[ @ 0]]
	HealthValue:setTTF( "0arame_mono_stencil" ) --[[ @ 0]]
	HealthValue:setRFTMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	HealthValue:setLetterSpacing( 2 ) --[[ @ 0]]
	HealthValue:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	HealthValue:setAlignment( Enum[@"luialignment"][@"lui_alignment_bottom"] ) --[[ @ 0]]
	HealthValue:linkToElementModel( self, "health.healthValue", true, function ( model )
		local f4_local0 = model:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			HealthValue:setText( f4_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( HealthValue ) --[[ @ 0]]
	self.HealthValue = HealthValue --[[ @ 0]]
	
	local LeftLed02 = LUI.UIImage.new( 0, 0, 158, 339, 0, 0, -4, 36 ) --[[ @ 0]]
	LeftLed02:setRGB( 0, 0, 0 ) --[[ @ 0]]
	LeftLed02:setAlpha( 0.17 ) --[[ @ 0]]
	LeftLed02:setScale( 0.94, 0.94 ) --[[ @ 0]]
	LeftLed02:setImage( RegisterImage( @"uie_ui_hud_core_player_widget_led_status" ) ) --[[ @ 0]]
	LeftLed02:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_wipe_delta_normal" ) ) --[[ @ 0]]
	LeftLed02:setShaderVector( 0, 0, 0.89, 0, 0 ) --[[ @ 0]]
	LeftLed02:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	LeftLed02:setShaderVector( 2, 0.39, 0.63, 0, 0 ) --[[ @ 0]]
	LeftLed02:setShaderVector( 3, 0, 0, 0, 0 ) --[[ @ 0]]
	LeftLed02:setShaderVector( 4, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( LeftLed02 ) --[[ @ 0]]
	self.LeftLed02 = LeftLed02 --[[ @ 0]]
	
	local LeftLed01 = LUI.UIImage.new( 0, 0, 6, 187, 0, 0, -4, 36 ) --[[ @ 0]]
	LeftLed01:setRGB( 0, 0, 0 ) --[[ @ 0]]
	LeftLed01:setAlpha( 0.17 ) --[[ @ 0]]
	LeftLed01:setScale( 0.94, 0.94 ) --[[ @ 0]]
	LeftLed01:setImage( RegisterImage( @"uie_ui_hud_core_player_widget_led_status" ) ) --[[ @ 0]]
	LeftLed01:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_wipe_delta_normal" ) ) --[[ @ 0]]
	LeftLed01:setShaderVector( 0, 0, 1, 0, 0 ) --[[ @ 0]]
	LeftLed01:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	LeftLed01:setShaderVector( 2, 0.36, 0.63, 0, 0 ) --[[ @ 0]]
	LeftLed01:setShaderVector( 3, 0, 0, 0, 0 ) --[[ @ 0]]
	LeftLed01:setShaderVector( 4, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( LeftLed01 ) --[[ @ 0]]
	self.LeftLed01 = LeftLed01 --[[ @ 0]]
	
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	local f1_local7 = self --[[ @ 0]]
	CoD.HUDUtility.UpdateClientHealth( self, f1_arg1 ) --[[ @ 0]]
	CoD.HealthUtility.InitHealthBarLossPulse( self, self.HealthBar, f1_arg1, CoD.KillcamHealthBarPulse, f1_arg0 ) --[[ @ 0]]
	return self
end
 --[[ @ 0]]
CoD.KillcamPlayerHealth.__onClose = function ( f5_arg0 )
	f5_arg0.ArmorBar:close() --[[ @ 0]]
	f5_arg0.HealthBar:close() --[[ @ 0]]
	f5_arg0.HealthValue:close() --[[ @ 0]]
end
 --[[ @ 0]]
