-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:49
require( "x64:f00a10fc8301da2" ) --[[ @ 0]]
require( "x64:11a70a3d7e2725e9" ) --[[ @ 0]]
require( "x64:24fef7f34e3f5ca0" ) --[[ @ 0]]
require( "x64:46ee653ade3452f5" ) --[[ @ 0]]

CoD.AARMeritReportTab = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.AARMeritReportTab.__defaultWidth = 1920 --[[ @ 0]]
CoD.AARMeritReportTab.__defaultHeight = 900 --[[ @ 0]]
CoD.AARMeritReportTab.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	CoD.AARUtility.SetupMeritRewardModels( f1_arg0, f1_arg1, true ) --[[ @ 0]]
	self:setClass( CoD.AARMeritReportTab ) --[[ @ 0]]
	self.id = "AARMeritReportTab" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local AarMpBacking = CoD.AARCommonBacking.new( f1_arg0, f1_arg1, 0.5, 0.5, -1000, 1000, 0.5, 0.5, -540, 540 ) --[[ @ 0]]
	AarMpBacking.Backer:setRGB( 0, 0, 0 ) --[[ @ 0]]
	AarMpBacking.Backer:setAlpha( 0.5 ) --[[ @ 0]]
	self:addElement( AarMpBacking ) --[[ @ 0]]
	self.AarMpBacking = AarMpBacking --[[ @ 0]]
	
	local ScorestreakAspectRatioFix = nil --[[ @ 0]]
	
	ScorestreakAspectRatioFix = CoD.Scorestreak_AspectRatioFix.new( f1_arg0, f1_arg1, 0, 1, 0, 0, -0.1, 1.1, 0, 0 ) --[[ @ 0]]
	ScorestreakAspectRatioFix:mergeStateConditions( {
		{
			stateName = "Warzone",
			condition = function ( menu, element, event )
				return AlwaysTrue()
			end
		}
	} ) --[[ @ 0]]
	self:addElement( ScorestreakAspectRatioFix ) --[[ @ 0]]
	self.ScorestreakAspectRatioFix = ScorestreakAspectRatioFix --[[ @ 0]]
	
	local MeritReport = CoD.MeritReportWidget.new( f1_arg0, f1_arg1, 0.5, 0.5, -960, 960, 0.5, 0.5, -540, 540 ) --[[ @ 0]]
	MeritReport:mergeStateConditions( {
		{
			stateName = "ContractsEnabled",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		},
		{
			stateName = "ContractsEnabledTabs",
			condition = function ( menu, element, event )
				return IsBooleanDvarSet( "ui_enableContractsAndBounties" )
			end
		}
	} ) --[[ @ 0]]
	MeritReport:subscribeToGlobalModel( f1_arg1, "AARMeritReport", nil, function ( model )
		MeritReport:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( MeritReport ) --[[ @ 0]]
	self.MeritReport = MeritReport --[[ @ 0]]
	
	local DoubleXPIcon = CoD.DoubleXPIcon.new( f1_arg0, f1_arg1, 0.5, 0.5, 605, 677, 0.5, 0.5, 348, 420 ) --[[ @ 0]]
	self:addElement( DoubleXPIcon ) --[[ @ 0]]
	self.DoubleXPIcon = DoubleXPIcon --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Visible",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsModelValueEqualToEnum( f1_arg1, "AAR.activeTab", CoD.AARUtility.AARTabs.AAR_MERIT )
			end
		}
	} ) --[[ @ 0]]
	local f1_local5 = self --[[ @ 0]]
	local f1_local6 = self.subscribeToModel --[[ @ 0]]
	local f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local6( f1_local5, f1_local7["AAR.activeTab"], function ( f7_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f7_arg0:get(),
			modelName = "AAR.activeTab"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:subscribeToGlobalModel( f1_arg1, "PerController", "AAR.activeTab", function ( model )
		local f8_local0 = self --[[ @ 0]]
		if CoD.ModelUtility.IsModelValueEqualToEnum( f1_arg1, "AAR.activeTab", CoD.AARUtility.AARTabs.AAR_MERIT ) then
			CoD.AARUtility.SetupMeritRewardModels( f1_arg0, f1_arg1, true ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.AARMeritReportTab.__resetProperties = function ( f9_arg0 )
	f9_arg0.MeritReport:completeAnimation() --[[ @ 0]]
	f9_arg0.AarMpBacking:completeAnimation() --[[ @ 0]]
	f9_arg0.DoubleXPIcon:completeAnimation() --[[ @ 0]]
	f9_arg0.MeritReport:setAlpha( 1 ) --[[ @ 0]]
	f9_arg0.AarMpBacking:setAlpha( 1 ) --[[ @ 0]]
	f9_arg0.DoubleXPIcon:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.AARMeritReportTab.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f10_arg0, f10_arg1 )
			f10_arg0:__resetProperties() --[[ @ 0]]
			f10_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f10_arg0.AarMpBacking:completeAnimation() --[[ @ 0]]
			f10_arg0.AarMpBacking:setAlpha( 0 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.AarMpBacking ) --[[ @ 0]]
			f10_arg0.MeritReport:completeAnimation() --[[ @ 0]]
			f10_arg0.MeritReport:setAlpha( 0 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.MeritReport ) --[[ @ 0]]
			f10_arg0.DoubleXPIcon:completeAnimation() --[[ @ 0]]
			f10_arg0.DoubleXPIcon:setAlpha( 0 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.DoubleXPIcon ) --[[ @ 0]]
		end
	},
	Visible = {
		DefaultClip = function ( f11_arg0, f11_arg1 )
			f11_arg0:__resetProperties() --[[ @ 0]]
			f11_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			local f11_local0 = function ( f12_arg0 )
				f11_arg0.AarMpBacking:beginAnimation( 150, Enum[@"luitween"][@"luitween_ease_in"] ) --[[ @ 0]]
				f11_arg0.AarMpBacking:registerEventHandler( "interrupted_keyframe", f11_arg0.clipInterrupted ) --[[ @ 0]]
				f11_arg0.AarMpBacking:registerEventHandler( "transition_complete_keyframe", f11_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f11_arg0.AarMpBacking:completeAnimation() --[[ @ 0]]
			f11_arg0.AarMpBacking:setAlpha( 1 ) --[[ @ 0]]
			f11_local0( f11_arg0.AarMpBacking ) --[[ @ 0]]
			local f11_local1 = function ( f13_arg0 )
				local f13_local0 = function ( f14_arg0 )
					f14_arg0:beginAnimation( 150 ) --[[ @ 0]]
					f14_arg0:setAlpha( 1 ) --[[ @ 0]]
					f14_arg0:registerEventHandler( "transition_complete_keyframe", f11_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f11_arg0.MeritReport:beginAnimation( 150 ) --[[ @ 0]]
				f11_arg0.MeritReport:registerEventHandler( "interrupted_keyframe", f11_arg0.clipInterrupted ) --[[ @ 0]]
				f11_arg0.MeritReport:registerEventHandler( "transition_complete_keyframe", f13_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f11_arg0.MeritReport:completeAnimation() --[[ @ 0]]
			f11_arg0.MeritReport:setAlpha( 0 ) --[[ @ 0]]
			f11_local1( f11_arg0.MeritReport ) --[[ @ 0]]
			local f11_local2 = function ( f15_arg0 )
				f11_arg0.DoubleXPIcon:beginAnimation( 300 ) --[[ @ 0]]
				f11_arg0.DoubleXPIcon:setAlpha( 1 ) --[[ @ 0]]
				f11_arg0.DoubleXPIcon:registerEventHandler( "interrupted_keyframe", f11_arg0.clipInterrupted ) --[[ @ 0]]
				f11_arg0.DoubleXPIcon:registerEventHandler( "transition_complete_keyframe", f11_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f11_arg0.DoubleXPIcon:completeAnimation() --[[ @ 0]]
			f11_arg0.DoubleXPIcon:setAlpha( 0 ) --[[ @ 0]]
			f11_local2( f11_arg0.DoubleXPIcon ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.AARMeritReportTab.__onClose = function ( f16_arg0 )
	f16_arg0.AarMpBacking:close() --[[ @ 0]]
	f16_arg0.ScorestreakAspectRatioFix:close() --[[ @ 0]]
	f16_arg0.MeritReport:close() --[[ @ 0]]
	f16_arg0.DoubleXPIcon:close() --[[ @ 0]]
end
 --[[ @ 0]]
