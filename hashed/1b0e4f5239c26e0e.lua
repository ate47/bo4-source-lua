-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:48
require( "x64:519825e759c0fc6c" ) --[[ @ 0]]
require( "x64:32e6578419b866ab" ) --[[ @ 0]]
require( "x64:7f91cf6839d25705" ) --[[ @ 0]]
require( "x64:57553d3c19005336" ) --[[ @ 0]]

CoD.DirectorLaboratoryButton = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.DirectorLaboratoryButton.__defaultWidth = 354 --[[ @ 0]]
CoD.DirectorLaboratoryButton.__defaultHeight = 110 --[[ @ 0]]
CoD.DirectorLaboratoryButton.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.DirectorLaboratoryButton ) --[[ @ 0]]
	self.id = "DirectorLaboratoryButton" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local DirectorLaboratoryButtonInternal = CoD.DirectorLaboratoryButtonInternal.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	DirectorLaboratoryButtonInternal:registerEventHandler( "gain_focus", function ( element, event )
		local f2_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f2_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f2_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		return f2_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( DirectorLaboratoryButtonInternal, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"], nil, function ( element, menu, controller, model )
		if not IsPlayerAGuest( controller ) then
			PlaySoundAlias( "uin_toggle_generic" ) --[[ @ 0]]
			OpenOverlay( self, "Laboratory", controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsPlayerAGuest( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"hash_96D9A8F7540D6B6", nil, nil ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( DirectorLaboratoryButtonInternal ) --[[ @ 0]]
	self.DirectorLaboratoryButtonInternal = DirectorLaboratoryButtonInternal --[[ @ 0]]
	
	local ZMDoubleNPWidget = CoD.ZMDoubleNPWidget.new( f1_arg0, f1_arg1, 0, 0, 26, 71, 0, 0, -52, -7 ) --[[ @ 0]]
	self:addElement( ZMDoubleNPWidget ) --[[ @ 0]]
	self.ZMDoubleNPWidget = ZMDoubleNPWidget --[[ @ 0]]
	
	local DirectorLobbyTierSkipNotification = CoD.DirectorLobbyTierSkipNotification.new( f1_arg0, f1_arg1, 0, 0, 0, 354, 0, 0, -70, -10 ) --[[ @ 0]]
	DirectorLobbyTierSkipNotification:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( DirectorLobbyTierSkipNotification ) --[[ @ 0]]
	self.DirectorLobbyTierSkipNotification = DirectorLobbyTierSkipNotification --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "DailyTierSkipHidden",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalDataSourceModelValueTrue( f1_arg1, "DirectorZMLoadoutPreview", "ZMLoadoutPreviewInfoShown" )
			end
		},
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return not IsLobbyNetworkModeLive()
			end
		}
	} ) --[[ @ 0]]
	local f1_local4 = self --[[ @ 0]]
	local f1_local5 = self.subscribeToModel --[[ @ 0]]
	local f1_local6 = DataSources.DirectorZMLoadoutPreview.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local5( f1_local4, f1_local6.ZMLoadoutPreviewInfoShown, function ( f7_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f7_arg0:get(),
			modelName = "ZMLoadoutPreviewInfoShown"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local4 = self --[[ @ 0]]
	f1_local5 = self.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local5( f1_local4, f1_local6["lobbyRoot.lobbyNav"], function ( f8_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f8_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	DirectorLaboratoryButtonInternal.id = "DirectorLaboratoryButtonInternal" --[[ @ 0]]
	self.__defaultFocus = DirectorLaboratoryButtonInternal --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.DirectorLaboratoryButton.__resetProperties = function ( f9_arg0 )
	f9_arg0.DirectorLaboratoryButtonInternal:completeAnimation() --[[ @ 0]]
	f9_arg0.ZMDoubleNPWidget:completeAnimation() --[[ @ 0]]
	f9_arg0.DirectorLobbyTierSkipNotification:completeAnimation() --[[ @ 0]]
	f9_arg0.DirectorLaboratoryButtonInternal:setAlpha( 1 ) --[[ @ 0]]
	f9_arg0.DirectorLaboratoryButtonInternal:setScale( 1, 1 ) --[[ @ 0]]
	f9_arg0.ZMDoubleNPWidget:setAlpha( 1 ) --[[ @ 0]]
	f9_arg0.DirectorLobbyTierSkipNotification:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorLaboratoryButton.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f10_arg0, f10_arg1 )
			f10_arg0:__resetProperties() --[[ @ 0]]
			f10_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end,
		ChildFocus = function ( f11_arg0, f11_arg1 )
			f11_arg0:__resetProperties() --[[ @ 0]]
			f11_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f11_arg0.DirectorLaboratoryButtonInternal:completeAnimation() --[[ @ 0]]
			f11_arg0.DirectorLaboratoryButtonInternal:setScale( 1.05, 1.05 ) --[[ @ 0]]
			f11_arg0.clipFinished( f11_arg0.DirectorLaboratoryButtonInternal ) --[[ @ 0]]
		end,
		GainChildFocus = function ( f12_arg0, f12_arg1 )
			f12_arg0:__resetProperties() --[[ @ 0]]
			f12_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f12_local0 = function ( f13_arg0 )
				f12_arg0.DirectorLaboratoryButtonInternal:beginAnimation( 150 ) --[[ @ 0]]
				f12_arg0.DirectorLaboratoryButtonInternal:setScale( 1.05, 1.05 ) --[[ @ 0]]
				f12_arg0.DirectorLaboratoryButtonInternal:registerEventHandler( "interrupted_keyframe", f12_arg0.clipInterrupted ) --[[ @ 0]]
				f12_arg0.DirectorLaboratoryButtonInternal:registerEventHandler( "transition_complete_keyframe", f12_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f12_arg0.DirectorLaboratoryButtonInternal:completeAnimation() --[[ @ 0]]
			f12_arg0.DirectorLaboratoryButtonInternal:setScale( 1, 1 ) --[[ @ 0]]
			f12_local0( f12_arg0.DirectorLaboratoryButtonInternal ) --[[ @ 0]]
		end,
		LoseChildFocus = function ( f14_arg0, f14_arg1 )
			f14_arg0:__resetProperties() --[[ @ 0]]
			f14_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f14_local0 = function ( f15_arg0 )
				f14_arg0.DirectorLaboratoryButtonInternal:beginAnimation( 100 ) --[[ @ 0]]
				f14_arg0.DirectorLaboratoryButtonInternal:setScale( 1, 1 ) --[[ @ 0]]
				f14_arg0.DirectorLaboratoryButtonInternal:registerEventHandler( "interrupted_keyframe", f14_arg0.clipInterrupted ) --[[ @ 0]]
				f14_arg0.DirectorLaboratoryButtonInternal:registerEventHandler( "transition_complete_keyframe", f14_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f14_arg0.DirectorLaboratoryButtonInternal:completeAnimation() --[[ @ 0]]
			f14_arg0.DirectorLaboratoryButtonInternal:setScale( 1.05, 1.05 ) --[[ @ 0]]
			f14_local0( f14_arg0.DirectorLaboratoryButtonInternal ) --[[ @ 0]]
		end
	},
	DailyTierSkipHidden = {
		DefaultClip = function ( f16_arg0, f16_arg1 )
			f16_arg0:__resetProperties() --[[ @ 0]]
			f16_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f16_arg0.ZMDoubleNPWidget:completeAnimation() --[[ @ 0]]
			f16_arg0.ZMDoubleNPWidget:setAlpha( 0 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.ZMDoubleNPWidget ) --[[ @ 0]]
			f16_arg0.DirectorLobbyTierSkipNotification:completeAnimation() --[[ @ 0]]
			f16_arg0.DirectorLobbyTierSkipNotification:setAlpha( 0 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.DirectorLobbyTierSkipNotification ) --[[ @ 0]]
		end
	},
	Hidden = {
		DefaultClip = function ( f17_arg0, f17_arg1 )
			f17_arg0:__resetProperties() --[[ @ 0]]
			f17_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f17_arg0.DirectorLaboratoryButtonInternal:completeAnimation() --[[ @ 0]]
			f17_arg0.DirectorLaboratoryButtonInternal:setAlpha( 0 ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.DirectorLaboratoryButtonInternal ) --[[ @ 0]]
			f17_arg0.ZMDoubleNPWidget:completeAnimation() --[[ @ 0]]
			f17_arg0.ZMDoubleNPWidget:setAlpha( 0 ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.ZMDoubleNPWidget ) --[[ @ 0]]
			f17_arg0.DirectorLobbyTierSkipNotification:completeAnimation() --[[ @ 0]]
			f17_arg0.DirectorLobbyTierSkipNotification:setAlpha( 0 ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.DirectorLobbyTierSkipNotification ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.DirectorLaboratoryButton.__onClose = function ( f18_arg0 )
	f18_arg0.DirectorLaboratoryButtonInternal:close() --[[ @ 0]]
	f18_arg0.ZMDoubleNPWidget:close() --[[ @ 0]]
	f18_arg0.DirectorLobbyTierSkipNotification:close() --[[ @ 0]]
end
 --[[ @ 0]]
