-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:35
require( "ui/uieditor/widgets/customgames/customgames_optioncategorybutton" ) --[[ @ 0]]
require( "x64:2fb61775b944bf26" ) --[[ @ 0]]
require( "ui/uieditor/widgets/customgames/customgames_settingslider" ) --[[ @ 0]]
require( "ui/uieditor/widgets/gamesettings/gamesettings_selectediteminfo" ) --[[ @ 0]]
require( "ui/uieditor/widgets/scrollbars/verticalcounter" ) --[[ @ 0]]

CoD.GameSettings_Restriction = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.GameSettings_Restriction.__defaultWidth = 1920 --[[ @ 0]]
CoD.GameSettings_Restriction.__defaultHeight = 877 --[[ @ 0]]
CoD.GameSettings_Restriction.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	CoD.OptionsUtility.InitCurrentActiveRestrictionCategoryIndex() --[[ @ 0]]
	CoD.BaseUtility.InitGlobalModel( "GametypeSettings.CACRestrictionTabIndex", nil ) --[[ @ 0]]
	SetProperty( self, "CACCategoryIndex", 1 ) --[[ @ 0]]
	self:setClass( CoD.GameSettings_Restriction ) --[[ @ 0]]
	self.id = "GameSettings_Restriction" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	local f1_local1 = nil --[[ @ 0]]
	
	local CACRestrictionCategoriesPC = LUI.UIList.new( f1_arg0, f1_arg1, 20, 0, nil, false, false, false, false ) --[[ @ 0]]
	CACRestrictionCategoriesPC:setLeftRight( 0, 0, 335, 1101 ) --[[ @ 0]]
	CACRestrictionCategoriesPC:setTopBottom( 0, 0, 19, 523 ) --[[ @ 0]]
	CACRestrictionCategoriesPC:setScale( 0.91, 1 ) --[[ @ 0]]
	CACRestrictionCategoriesPC:setWidgetType( CoD.CustomGames_Restrictions_CategoryButton ) --[[ @ 0]]
	CACRestrictionCategoriesPC:setHorizontalCount( 3 ) --[[ @ 0]]
	CACRestrictionCategoriesPC:setVerticalCount( 2 ) --[[ @ 0]]
	CACRestrictionCategoriesPC:setSpacing( 20 ) --[[ @ 0]]
	CACRestrictionCategoriesPC:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	CACRestrictionCategoriesPC:registerEventHandler( "list_item_gain_focus", function ( element, event )
		local f2_local0 = nil --[[ @ 0]]
		GameSettingsButtonGainFocus( self, element, f1_arg1 ) --[[ @ 0]]
		SetCurrentElementAsActive( self, element, f1_arg1 ) --[[ @ 0]]
		return f2_local0
	end ) --[[ @ 0]]
	CACRestrictionCategoriesPC:registerEventHandler( "gain_focus", function ( element, event )
		local f3_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f3_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f3_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		SetElementCanBeNavigatedTo( self.OptionCategoryGrid, false ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"] ) --[[ @ 0]]
		return f3_local0
	end ) --[[ @ 0]]
	CACRestrictionCategoriesPC:registerEventHandler( "lose_focus", function ( element, event )
		local f4_local0 = nil --[[ @ 0]]
		if element.loseFocus then
			f4_local0 = element:loseFocus( event ) --[[ @ 0]]
		elseif element.super.loseFocus then
			f4_local0 = element.super:loseFocus( event ) --[[ @ 0]]
		end
		SetElementCanBeNavigatedTo( self.OptionCategoryGrid, true ) --[[ @ 0]]
		return f4_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( CACRestrictionCategoriesPC, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		ProcessListAction( self, element, controller, menu ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_0", nil, "ui_confirm" ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( CACRestrictionCategoriesPC, f1_arg1, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"], nil, function ( element, menu, controller, model )
		SetFocusToElement( self, "OptionCategoryGrid", controller ) --[[ @ 0]]
		CoD.OptionsUtility.SetFocusToGrid( self.OptionCategoryGrid ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"], @"hash_0", nil, nil ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	self:addElement( CACRestrictionCategoriesPC ) --[[ @ 0]]
	self.CACRestrictionCategoriesPC = CACRestrictionCategoriesPC --[[ @ 0]]
	
	local f1_local3 = nil --[[ @ 0]]
	
	local SlidersPC = LUI.UIList.new( f1_arg0, f1_arg1, 8, 0, nil, false, false, false, false ) --[[ @ 0]]
	SlidersPC:setLeftRight( 0, 0, 367, 1067 ) --[[ @ 0]]
	SlidersPC:setTopBottom( 0, 0, 10, 818 ) --[[ @ 0]]
	SlidersPC:setWidgetType( CoD.CustomGames_SettingSlider ) --[[ @ 0]]
	SlidersPC:setVerticalCount( 12 ) --[[ @ 0]]
	SlidersPC:setSpacing( 8 ) --[[ @ 0]]
	SlidersPC:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	SlidersPC:setVerticalCounter( CoD.verticalCounter ) --[[ @ 0]]
	SlidersPC:registerEventHandler( "list_item_gain_focus", function ( element, event )
		local f9_local0 = nil --[[ @ 0]]
		ProcessListAction( self, element, f1_arg1, f1_arg0 ) --[[ @ 0]]
		GameSettingsButtonGainFocus( self, element, f1_arg1 ) --[[ @ 0]]
		SetCurrentElementAsActive( self, element, f1_arg1 ) --[[ @ 0]]
		return f9_local0
	end ) --[[ @ 0]]
	SlidersPC:registerEventHandler( "gain_focus", function ( element, event )
		local f10_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f10_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f10_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		SetElementCanBeNavigatedTo( self.OptionCategoryGrid, false ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"] ) --[[ @ 0]]
		return f10_local0
	end ) --[[ @ 0]]
	SlidersPC:registerEventHandler( "lose_focus", function ( element, event )
		local f11_local0 = nil --[[ @ 0]]
		if element.loseFocus then
			f11_local0 = element:loseFocus( event ) --[[ @ 0]]
		elseif element.super.loseFocus then
			f11_local0 = element.super:loseFocus( event ) --[[ @ 0]]
		end
		SetElementCanBeNavigatedTo( self.OptionCategoryGrid, true ) --[[ @ 0]]
		return f11_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( SlidersPC, f1_arg1, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"], nil, function ( element, menu, controller, model )
		SetFocusToElement( self, "OptionCategoryGrid", controller ) --[[ @ 0]]
		CoD.OptionsUtility.SetFocusToGrid( self.OptionCategoryGrid ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"], @"hash_0", nil, nil ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	self:addElement( SlidersPC ) --[[ @ 0]]
	self.SlidersPC = SlidersPC --[[ @ 0]]
	
	local f1_local5 = nil --[[ @ 0]]
	
	local OptionCategoryGrid = LUI.GridLayout.new( f1_arg0, f1_arg1, false, 0, 0, 8, 0, nil, nil, false, false, false, false ) --[[ @ 0]]
	OptionCategoryGrid:setLeftRight( 0, 0, 100, 350 ) --[[ @ 0]]
	OptionCategoryGrid:setTopBottom( 0, 0, 10, 710 ) --[[ @ 0]]
	OptionCategoryGrid:setWidgetType( CoD.CustomGames_OptionCategoryButton ) --[[ @ 0]]
	OptionCategoryGrid:setVerticalCount( 6 ) --[[ @ 0]]
	OptionCategoryGrid:setSpacing( 8 ) --[[ @ 0]]
	OptionCategoryGrid:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	OptionCategoryGrid:setDataSource( "RestrictionOptionCategories" ) --[[ @ 0]]
	OptionCategoryGrid:registerEventHandler( "gain_focus", function ( element, event )
		local f14_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f14_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f14_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f14_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( OptionCategoryGrid, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], nil, function ( element, menu, controller, model )
		SetCurrentElementAsActive( self, element, controller ) --[[ @ 0]]
		CoD.OptionsUtility.SetCurrentActiveRestrictionCategoryIndex( element ) --[[ @ 0]]
		CoD.OptionsUtility.SetFocusToRestrictionOptionsList( self, controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, nil ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	self:addElement( OptionCategoryGrid ) --[[ @ 0]]
	self.OptionCategoryGrid = OptionCategoryGrid --[[ @ 0]]
	
	local f1_local7 = nil --[[ @ 0]]
	f1_local7 = LUI.UIElement.createFake() --[[ @ 0]]
	self.CACRestrictionCategories = f1_local7 --[[ @ 0]]
	local f1_local8 = nil --[[ @ 0]]
	f1_local8 = LUI.UIElement.createFake() --[[ @ 0]]
	self.Sliders = f1_local8 --[[ @ 0]]
	local f1_local9 = nil --[[ @ 0]]
	f1_local9 = LUI.UIElement.createFake() --[[ @ 0]]
	self.OptionCategoryList = f1_local9 --[[ @ 0]]
	
	local GameSettingsSelectedItemInfo = CoD.GameSettings_SelectedItemInfo.new( f1_arg0, f1_arg1, 0, 1, 0, 0, -0.5, 0.5, 234, 436 ) --[[ @ 0]]
	GameSettingsSelectedItemInfo.GameModeName:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( GameSettingsSelectedItemInfo ) --[[ @ 0]]
	self.GameSettingsSelectedItemInfo = GameSettingsSelectedItemInfo --[[ @ 0]]
	
	CACRestrictionCategoriesPC:linkToElementModel( OptionCategoryGrid, "optionsListDatasource", true, function ( model )
		local f17_local0 = model:get() --[[ @ 0]]
		if f17_local0 ~= nil then
			CACRestrictionCategoriesPC:setDataSource( f17_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	SlidersPC:linkToElementModel( OptionCategoryGrid, "optionsListDatasource", true, function ( model )
		local f18_local0 = model:get() --[[ @ 0]]
		if f18_local0 ~= nil then
			SlidersPC:setDataSource( f18_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	f1_local7:linkToElementModel( f1_local9, "optionsListDatasource", true, function ( model )
		local f19_local0 = model:get() --[[ @ 0]]
		if f19_local0 ~= nil then
			f1_local7:setDataSource( f19_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	f1_local8:linkToElementModel( f1_local9, "optionsListDatasource", true, function ( model )
		local f20_local0 = model:get() --[[ @ 0]]
		if f20_local0 ~= nil then
			f1_local8:setDataSource( f20_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:mergeStateConditions( {
		{
			stateName = "CACCategoryActive",
			condition = function ( menu, element, event )
				return CoD.OptionsUtility.IsCACCategoryActive( self )
			end
		}
	} ) --[[ @ 0]]
	local f1_local11 = self --[[ @ 0]]
	local f1_local12 = self.subscribeToModel --[[ @ 0]]
	local f1_local13 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local12( f1_local11, f1_local13.ActiveRestrictionCategoryIndex, function ( f22_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f22_arg0:get(),
			modelName = "ActiveRestrictionCategoryIndex"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( self, "close", function ( element )
		SetControllerModelValue( f1_arg1, "customGamesEdit", false ) --[[ @ 0]]
	end ) --[[ @ 0]]
	CACRestrictionCategoriesPC.id = "CACRestrictionCategoriesPC" --[[ @ 0]]
	SlidersPC.id = "SlidersPC" --[[ @ 0]]
	OptionCategoryGrid.id = "OptionCategoryGrid" --[[ @ 0]]
	f1_local7.id = "CACRestrictionCategories" --[[ @ 0]]
	f1_local8.id = "Sliders" --[[ @ 0]]
	f1_local9.id = "OptionCategoryList" --[[ @ 0]]
	self.__defaultFocus = f1_local9 --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PreLoadFunc then
		PreLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	f1_local12 = self --[[ @ 0]]
	if IsPC() then
		ChangeDefaultFocus( self, self.OptionCategoryGrid ) --[[ @ 0]]
		ForceCheckDefaultPCFocus( self.OptionCategoryGrid, f1_arg0, f1_arg1 ) --[[ @ 0]]
	end
	f1_local12 = CACRestrictionCategoriesPC --[[ @ 0]]
	if IsPC() then
		SetElementProperty( self.CACRestrictionCategoriesPC, "openRestriction", true ) --[[ @ 0]]
	end
	f1_local12 = SlidersPC --[[ @ 0]]
	if IsPC() then
		SetElementCanBeNavigatedTo( f1_local12, false ) --[[ @ 0]]
		SetElementProperty( f1_local12, "ignoreSavedActive", true ) --[[ @ 0]]
		SetElementProperty( self.SlidersPC, "openRestriction", false ) --[[ @ 0]]
	end
	f1_local12 = f1_local7 --[[ @ 0]]
	SetElementProperty( self.CACRestrictionCategories, "openRestriction", true ) --[[ @ 0]]
	SetElementCanBeNavigatedTo( f1_local12, false ) --[[ @ 0]]
	SetElementCanBeNavigatedTo( f1_local8, false ) --[[ @ 0]]
	SetElementCanBeNavigatedTo( f1_local9, false ) --[[ @ 0]]
	return self
end
 --[[ @ 0]]
CoD.GameSettings_Restriction.__resetProperties = function ( f24_arg0 )
	f24_arg0.CACRestrictionCategoriesPC:completeAnimation() --[[ @ 0]]
	f24_arg0.CACRestrictionCategories:completeAnimation() --[[ @ 0]]
	f24_arg0.Sliders:completeAnimation() --[[ @ 0]]
	f24_arg0.SlidersPC:completeAnimation() --[[ @ 0]]
	f24_arg0.CACRestrictionCategoriesPC:setAlpha( 1 ) --[[ @ 0]]
	f24_arg0.CACRestrictionCategories:setAlpha( 1 ) --[[ @ 0]]
	f24_arg0.Sliders:setAlpha( 1 ) --[[ @ 0]]
	f24_arg0.SlidersPC:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.GameSettings_Restriction.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f25_arg0, f25_arg1 )
			f25_arg0:__resetProperties() --[[ @ 0]]
			f25_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f25_arg0.CACRestrictionCategoriesPC:completeAnimation() --[[ @ 0]]
			f25_arg0.CACRestrictionCategoriesPC:setAlpha( 0 ) --[[ @ 0]]
			f25_arg0.clipFinished( f25_arg0.CACRestrictionCategoriesPC ) --[[ @ 0]]
			f25_arg0.CACRestrictionCategories:completeAnimation() --[[ @ 0]]
			f25_arg0.CACRestrictionCategories:setAlpha( 0 ) --[[ @ 0]]
			f25_arg0.clipFinished( f25_arg0.CACRestrictionCategories ) --[[ @ 0]]
		end
	},
	CACCategoryActive = {
		DefaultClip = function ( f26_arg0, f26_arg1 )
			f26_arg0:__resetProperties() --[[ @ 0]]
			f26_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f26_arg0.CACRestrictionCategoriesPC:completeAnimation() --[[ @ 0]]
			f26_arg0.CACRestrictionCategoriesPC:setAlpha( 1 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.CACRestrictionCategoriesPC ) --[[ @ 0]]
			f26_arg0.SlidersPC:completeAnimation() --[[ @ 0]]
			f26_arg0.SlidersPC:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.SlidersPC ) --[[ @ 0]]
			f26_arg0.Sliders:completeAnimation() --[[ @ 0]]
			f26_arg0.Sliders:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.Sliders ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.GameSettings_Restriction.__onClose = function ( f27_arg0 )
	f27_arg0.CACRestrictionCategoriesPC:close() --[[ @ 0]]
	f27_arg0.SlidersPC:close() --[[ @ 0]]
	f27_arg0.CACRestrictionCategories:close() --[[ @ 0]]
	f27_arg0.Sliders:close() --[[ @ 0]]
	f27_arg0.OptionCategoryGrid:close() --[[ @ 0]]
	f27_arg0.OptionCategoryList:close() --[[ @ 0]]
	f27_arg0.GameSettingsSelectedItemInfo:close() --[[ @ 0]]
end
 --[[ @ 0]]
