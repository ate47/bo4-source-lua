-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:49
require( "ui/uieditor/widgets/aar_t8/summary/aarperformancebg" ) --[[ @ 0]]

CoD.ZMGenericSummaryStatWidget = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.ZMGenericSummaryStatWidget.__defaultWidth = 182 --[[ @ 0]]
CoD.ZMGenericSummaryStatWidget.__defaultHeight = 140 --[[ @ 0]]
CoD.ZMGenericSummaryStatWidget.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.ZMGenericSummaryStatWidget ) --[[ @ 0]]
	self.id = "ZMGenericSummaryStatWidget" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local PerformBg = CoD.AARPerformanceBg.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 0, 45.5, 109.5 ) --[[ @ 0]]
	self:addElement( PerformBg ) --[[ @ 0]]
	self.PerformBg = PerformBg --[[ @ 0]]
	
	local ValueGlow = LUI.UIText.new( 0.03, 0.98, 0, 0, 0, 0, 67.5, 93.5 ) --[[ @ 0]]
	ValueGlow:setRGB( ColorSet.PlayerYellow.r, ColorSet.PlayerYellow.g, ColorSet.PlayerYellow.b ) --[[ @ 0]]
	ValueGlow:setAlpha( 0.4 ) --[[ @ 0]]
	ValueGlow:setTTF( "skorzhen" ) --[[ @ 0]]
	ValueGlow:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_90D57B1E92D39D7" ) ) --[[ @ 0]]
	ValueGlow:setShaderVector( 0, 0.3, 0, 0, 0 ) --[[ @ 0]]
	ValueGlow:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	ValueGlow:setShaderVector( 2, 1, 0, 0, 0.8 ) --[[ @ 0]]
	ValueGlow:setLetterSpacing( 1 ) --[[ @ 0]]
	ValueGlow:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	ValueGlow:setAlignment( Enum[@"luialignment"][@"lui_alignment_middle"] ) --[[ @ 0]]
	ValueGlow:linkToElementModel( self, "value", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			ValueGlow:setText( f2_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( ValueGlow ) --[[ @ 0]]
	self.ValueGlow = ValueGlow --[[ @ 0]]
	
	local ValueGlow2 = LUI.UIText.new( 0.03, 0.98, 0, 0, 0, 0, 67.5, 93.5 ) --[[ @ 0]]
	ValueGlow2:setRGB( ColorSet.PlayerYellow.r, ColorSet.PlayerYellow.g, ColorSet.PlayerYellow.b ) --[[ @ 0]]
	ValueGlow2:setAlpha( 0 ) --[[ @ 0]]
	ValueGlow2:setTTF( "skorzhen" ) --[[ @ 0]]
	ValueGlow2:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_90D57B1E92D39D7" ) ) --[[ @ 0]]
	ValueGlow2:setShaderVector( 0, 0.3, 0, 0, 0 ) --[[ @ 0]]
	ValueGlow2:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	ValueGlow2:setShaderVector( 2, 1, 0, 0, 0.8 ) --[[ @ 0]]
	ValueGlow2:setLetterSpacing( 1 ) --[[ @ 0]]
	ValueGlow2:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	ValueGlow2:setAlignment( Enum[@"luialignment"][@"lui_alignment_middle"] ) --[[ @ 0]]
	ValueGlow2:linkToElementModel( self, "value", true, function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			ValueGlow2:setText( f3_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( ValueGlow2 ) --[[ @ 0]]
	self.ValueGlow2 = ValueGlow2 --[[ @ 0]]
	
	local Value = LUI.UIText.new( 0.03, 0.98, 0, 0, 0, 0, 67.5, 93.5 ) --[[ @ 0]]
	Value:setRGB( ColorSet.PlayerYellow.r, ColorSet.PlayerYellow.g, ColorSet.PlayerYellow.b ) --[[ @ 0]]
	Value:setAlpha( 0.8 ) --[[ @ 0]]
	Value:setTTF( "skorzhen" ) --[[ @ 0]]
	Value:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_171E049B161CD00A" ) ) --[[ @ 0]]
	Value:setLetterSpacing( 1 ) --[[ @ 0]]
	Value:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	Value:setAlignment( Enum[@"luialignment"][@"lui_alignment_middle"] ) --[[ @ 0]]
	Value:linkToElementModel( self, "value", true, function ( model )
		local f4_local0 = model:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			Value:setText( f4_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Value ) --[[ @ 0]]
	self.Value = Value --[[ @ 0]]
	
	local Title = LUI.UIText.new( 0, 1, 0, 0, 0, 0, 20.5, 38.5 ) --[[ @ 0]]
	Title:setRGB( ColorSet.PlayerYellow.r, ColorSet.PlayerYellow.g, ColorSet.PlayerYellow.b ) --[[ @ 0]]
	Title:setAlpha( 0.5 ) --[[ @ 0]]
	Title:setTTF( "dinnext_regular" ) --[[ @ 0]]
	Title:setLetterSpacing( 1 ) --[[ @ 0]]
	Title:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	Title:setAlignment( Enum[@"luialignment"][@"lui_alignment_bottom"] ) --[[ @ 0]]
	Title:linkToElementModel( self, "title", true, function ( model )
		local f5_local0 = model:get() --[[ @ 0]]
		if f5_local0 ~= nil then
			Title:setText( LocalizeToUpperString( f5_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Title ) --[[ @ 0]]
	self.Title = Title --[[ @ 0]]
	
	local YellowLine = LUI.UIImage.new( 0, 1, 0, 0, 0, 0, 41.5, 49.5 ) --[[ @ 0]]
	YellowLine:setImage( RegisterImage( @"hash_1E6E505307F7B8D7" ) ) --[[ @ 0]]
	YellowLine:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_normal" ) ) --[[ @ 0]]
	YellowLine:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	YellowLine:setupNineSliceShader( 3, 60 ) --[[ @ 0]]
	self:addElement( YellowLine ) --[[ @ 0]]
	self.YellowLine = YellowLine --[[ @ 0]]
	
	local TopBar = LUI.UIImage.new( -0.02, 1.02, 0, 0, 0, 0, 37.5, 45.5 ) --[[ @ 0]]
	TopBar:setImage( RegisterImage( @"uie_ui_hud_zm_aar_common_bar" ) ) --[[ @ 0]]
	TopBar:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_normal" ) ) --[[ @ 0]]
	TopBar:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	TopBar:setupNineSliceShader( 20, 4 ) --[[ @ 0]]
	self:addElement( TopBar ) --[[ @ 0]]
	self.TopBar = TopBar --[[ @ 0]]
	
	local TopBarAdd = LUI.UIImage.new( -0.02, 1.02, 0, 0, 0, 0, 37.5, 45.5 ) --[[ @ 0]]
	TopBarAdd:setRGB( 0.92, 0.92, 0.92 ) --[[ @ 0]]
	TopBarAdd:setAlpha( 0 ) --[[ @ 0]]
	TopBarAdd:setImage( RegisterImage( @"uie_ui_hud_zm_aar_common_bar" ) ) --[[ @ 0]]
	TopBarAdd:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_add" ) ) --[[ @ 0]]
	TopBarAdd:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	TopBarAdd:setupNineSliceShader( 20, 4 ) --[[ @ 0]]
	self:addElement( TopBarAdd ) --[[ @ 0]]
	self.TopBarAdd = TopBarAdd --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "TraditionalChinese",
			condition = function ( menu, element, event )
				return IsCurrentLanguageTraditionalChinese()
			end
		}
	} ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.ZMGenericSummaryStatWidget.__resetProperties = function ( f7_arg0 )
	f7_arg0.Title:completeAnimation() --[[ @ 0]]
	f7_arg0.Title:setTopBottom( 0, 0, 20.5, 38.5 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ZMGenericSummaryStatWidget.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f8_arg0, f8_arg1 )
			f8_arg0:__resetProperties() --[[ @ 0]]
			f8_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	TraditionalChinese = {
		DefaultClip = function ( f9_arg0, f9_arg1 )
			f9_arg0:__resetProperties() --[[ @ 0]]
			f9_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f9_arg0.Title:completeAnimation() --[[ @ 0]]
			f9_arg0.Title:setTopBottom( 0, 0, 17, 34 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.Title ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.ZMGenericSummaryStatWidget.__onClose = function ( f10_arg0 )
	f10_arg0.PerformBg:close() --[[ @ 0]]
	f10_arg0.ValueGlow:close() --[[ @ 0]]
	f10_arg0.ValueGlow2:close() --[[ @ 0]]
	f10_arg0.Value:close() --[[ @ 0]]
	f10_arg0.Title:close() --[[ @ 0]]
end
 --[[ @ 0]]
