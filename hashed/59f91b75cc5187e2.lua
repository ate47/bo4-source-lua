-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:50
require( "ui/uieditor/widgets/lobby/localserverplayerlistrow" ) --[[ @ 0]]
require( "ui/uieditor/widgets/startmenu/options/startmenuoptionsmainframe" ) --[[ @ 0]]

CoD.LANServerBrowserDetails = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.LANServerBrowserDetails.__defaultWidth = 515 --[[ @ 0]]
CoD.LANServerBrowserDetails.__defaultHeight = 610 --[[ @ 0]]
CoD.LANServerBrowserDetails.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.LANServerBrowserDetails ) --[[ @ 0]]
	self.id = "LANServerBrowserDetails" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local NoiseTiledBacking = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	NoiseTiledBacking:setAlpha( 0.8 ) --[[ @ 0]]
	NoiseTiledBacking:setImage( RegisterImage( @"uie_ui_menu_specialist_hub_repeat_bg" ) ) --[[ @ 0]]
	NoiseTiledBacking:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_16CBE95C250C6D15" ) ) --[[ @ 0]]
	NoiseTiledBacking:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	NoiseTiledBacking:setupNineSliceShader( 196, 88 ) --[[ @ 0]]
	self:addElement( NoiseTiledBacking ) --[[ @ 0]]
	self.NoiseTiledBacking = NoiseTiledBacking --[[ @ 0]]
	
	local Mainframe = CoD.StartMenuOptionsMainFrame.new( f1_arg0, f1_arg1, 0, 0, 0, 515, 0, 0, 0, 610 ) --[[ @ 0]]
	Mainframe:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	Mainframe:setAlpha( 0.01 ) --[[ @ 0]]
	self:addElement( Mainframe ) --[[ @ 0]]
	self.Mainframe = Mainframe --[[ @ 0]]
	
	local PlayerList = LUI.UIList.new( f1_arg0, f1_arg1, 4, 0, nil, false, false, false, false ) --[[ @ 0]]
	PlayerList:setLeftRight( 0, 0, 6, 510 ) --[[ @ 0]]
	PlayerList:setTopBottom( 0, 0, 350, 610 ) --[[ @ 0]]
	PlayerList:setWidgetType( CoD.LocalServerPlayerListRow ) --[[ @ 0]]
	PlayerList:setHorizontalCount( 2 ) --[[ @ 0]]
	PlayerList:setVerticalCount( 6 ) --[[ @ 0]]
	PlayerList:setSpacing( 4 ) --[[ @ 0]]
	PlayerList:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	PlayerList:setDataSource( "LocalServerPlayer" ) --[[ @ 0]]
	self:addElement( PlayerList ) --[[ @ 0]]
	self.PlayerList = PlayerList --[[ @ 0]]
	
	local TiledPlusGrid = LUI.UIImage.new( 0, 0, -181, 515, 0, 0, -92, 657 ) --[[ @ 0]]
	TiledPlusGrid:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	TiledPlusGrid:setAlpha( 0.1 ) --[[ @ 0]]
	TiledPlusGrid:setImage( RegisterImage( @"uie_ui_hud_vehicle_hellstorm_repeat_plusgrid" ) ) --[[ @ 0]]
	TiledPlusGrid:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_67C9C02F608D0A75" ) ) --[[ @ 0]]
	TiledPlusGrid:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	TiledPlusGrid:setupNineSliceShader( 220, 220 ) --[[ @ 0]]
	self:addElement( TiledPlusGrid ) --[[ @ 0]]
	self.TiledPlusGrid = TiledPlusGrid --[[ @ 0]]
	
	local PlayerListTitle = LUI.UIText.new( 0, 0, 5, 225, 0, 0, 321, 341 ) --[[ @ 0]]
	PlayerListTitle:setRGB( ColorSet.T8__OFF__GRAY.r, ColorSet.T8__OFF__GRAY.g, ColorSet.T8__OFF__GRAY.b ) --[[ @ 0]]
	PlayerListTitle:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_78AA6A380B90C9BA" ) ) --[[ @ 0]]
	PlayerListTitle:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	PlayerListTitle:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	self:addElement( PlayerListTitle ) --[[ @ 0]]
	self.PlayerListTitle = PlayerListTitle --[[ @ 0]]
	
	local MapImage = LUI.UIImage.new( 0, 0, 0, 515, 0, 0, 0, 292 ) --[[ @ 0]]
	MapImage:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_1A02C44161370F6D" ) ) --[[ @ 0]]
	MapImage:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	MapImage:setShaderVector( 1, 1, 1, 0, 0 ) --[[ @ 0]]
	MapImage:setShaderVector( 2, 0, 0, 0, 0 ) --[[ @ 0]]
	MapImage:linkToElementModel( self, "mapName", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			MapImage:setImage( RegisterImage( CoD.MapUtility.MapNameToMapImage( CoD.MapUtility.ConvertMapNameToXHash( f2_local0 ) ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( MapImage ) --[[ @ 0]]
	self.MapImage = MapImage --[[ @ 0]]
	
	local MapBackImage = LUI.UIImage.new( 0, 0, 0, 515, 0, 0, 218, 293 ) --[[ @ 0]]
	MapBackImage:setRGB( 0, 0, 0 ) --[[ @ 0]]
	MapBackImage:setAlpha( 0.6 ) --[[ @ 0]]
	self:addElement( MapBackImage ) --[[ @ 0]]
	self.MapBackImage = MapBackImage --[[ @ 0]]
	
	local GameType = LUI.UIText.new( 0, 0, 16.5, 510.5, 0, 0, 222, 252 ) --[[ @ 0]]
	GameType:setRGB( 1, 0.84, 0 ) --[[ @ 0]]
	GameType:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	GameType:setLetterSpacing( 2 ) --[[ @ 0]]
	GameType:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	GameType:linkToElementModel( self, "gameType", true, function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			GameType:setText( CoD.GameTypeUtility.GameTypeToLocalizeToUpperName( CoD.GameTypeUtility.ConvertMapNameToLocalizedXHash( f3_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( GameType ) --[[ @ 0]]
	self.GameType = GameType --[[ @ 0]]
	
	local MapName = LUI.UIText.new( 0, 0, 16.5, 500.5, 0, 0, 248, 293 ) --[[ @ 0]]
	MapName:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	MapName:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	MapName:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	MapName:setAlignment( Enum[@"luialignment"][@"hash_E821F0ECFF8D1C7"] ) --[[ @ 0]]
	MapName:linkToElementModel( self, "mapName", true, function ( model )
		local f4_local0 = model:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			MapName:setText( CoD.MapUtility.MapNameToLocalizedToUpperName( CoD.MapUtility.ConvertMapNameToLocalizedXHash( f4_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( MapName ) --[[ @ 0]]
	self.MapName = MapName --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Invisible",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelPathNil( self, f1_arg1, "" )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, nil, true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = nil
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	PlayerList.id = "PlayerList" --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.LANServerBrowserDetails.__resetProperties = function ( f7_arg0 )
	f7_arg0.GameType:completeAnimation() --[[ @ 0]]
	f7_arg0.MapName:completeAnimation() --[[ @ 0]]
	f7_arg0.MapImage:completeAnimation() --[[ @ 0]]
	f7_arg0.PlayerListTitle:completeAnimation() --[[ @ 0]]
	f7_arg0.PlayerList:completeAnimation() --[[ @ 0]]
	f7_arg0.MapBackImage:completeAnimation() --[[ @ 0]]
	f7_arg0.GameType:setLeftRight( 0, 0, 16.5, 510.5 ) --[[ @ 0]]
	f7_arg0.GameType:setTopBottom( 0, 0, 222, 252 ) --[[ @ 0]]
	f7_arg0.GameType:setAlpha( 1 ) --[[ @ 0]]
	f7_arg0.MapName:setLeftRight( 0, 0, 16.5, 500.5 ) --[[ @ 0]]
	f7_arg0.MapName:setAlpha( 1 ) --[[ @ 0]]
	f7_arg0.MapImage:setAlpha( 1 ) --[[ @ 0]]
	f7_arg0.PlayerListTitle:setAlpha( 1 ) --[[ @ 0]]
	f7_arg0.PlayerList:setAlpha( 1 ) --[[ @ 0]]
	f7_arg0.MapBackImage:setAlpha( 0.6 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.LANServerBrowserDetails.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f8_arg0, f8_arg1 )
			f8_arg0:__resetProperties() --[[ @ 0]]
			f8_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f8_arg0.GameType:completeAnimation() --[[ @ 0]]
			f8_arg0.GameType:setLeftRight( 0, 0, 0, 171 ) --[[ @ 0]]
			f8_arg0.GameType:setTopBottom( 0, 0, 218, 248 ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.GameType ) --[[ @ 0]]
			f8_arg0.MapName:completeAnimation() --[[ @ 0]]
			f8_arg0.MapName:setLeftRight( 0, 0, 0, 255 ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.MapName ) --[[ @ 0]]
		end
	},
	Invisible = {
		DefaultClip = function ( f9_arg0, f9_arg1 )
			f9_arg0:__resetProperties() --[[ @ 0]]
			f9_arg0:setupElementClipCounter( 6 ) --[[ @ 0]]
			f9_arg0.PlayerList:completeAnimation() --[[ @ 0]]
			f9_arg0.PlayerList:setAlpha( 0 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.PlayerList ) --[[ @ 0]]
			f9_arg0.PlayerListTitle:completeAnimation() --[[ @ 0]]
			f9_arg0.PlayerListTitle:setAlpha( 0 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.PlayerListTitle ) --[[ @ 0]]
			f9_arg0.MapImage:completeAnimation() --[[ @ 0]]
			f9_arg0.MapImage:setAlpha( 0 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.MapImage ) --[[ @ 0]]
			f9_arg0.MapBackImage:completeAnimation() --[[ @ 0]]
			f9_arg0.MapBackImage:setAlpha( 0 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.MapBackImage ) --[[ @ 0]]
			f9_arg0.GameType:completeAnimation() --[[ @ 0]]
			f9_arg0.GameType:setTopBottom( 0, 0, 218, 248 ) --[[ @ 0]]
			f9_arg0.GameType:setAlpha( 0 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.GameType ) --[[ @ 0]]
			f9_arg0.MapName:completeAnimation() --[[ @ 0]]
			f9_arg0.MapName:setAlpha( 0 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.MapName ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.LANServerBrowserDetails.__onClose = function ( f10_arg0 )
	f10_arg0.Mainframe:close() --[[ @ 0]]
	f10_arg0.PlayerList:close() --[[ @ 0]]
	f10_arg0.MapImage:close() --[[ @ 0]]
	f10_arg0.GameType:close() --[[ @ 0]]
	f10_arg0.MapName:close() --[[ @ 0]]
end
 --[[ @ 0]]
