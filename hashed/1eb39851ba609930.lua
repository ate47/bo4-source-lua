-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:48
require( "x64:6e95436bf279d160" ) --[[ @ 0]]
require( "x64:17bfec74b48e738a" ) --[[ @ 0]]
require( "ui/uieditor/widgets/vehiclehuds/hellstorm/vhud_hellstorm_reticle" ) --[[ @ 0]]

CoD.vhud_hellstorm_internal = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.vhud_hellstorm_internal.__defaultWidth = 1920 --[[ @ 0]]
CoD.vhud_hellstorm_internal.__defaultHeight = 1080 --[[ @ 0]]
CoD.vhud_hellstorm_internal.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.vhud_hellstorm_internal ) --[[ @ 0]]
	self.id = "vhud_hellstorm_internal" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local vhudhellstormreticle = CoD.vhud_hellstorm_reticle.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	vhudhellstormreticle:linkToElementModel( self, nil, false, function ( model )
		vhudhellstormreticle:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( vhudhellstormreticle ) --[[ @ 0]]
	self.vhudhellstormreticle = vhudhellstormreticle --[[ @ 0]]
	
	local vhudhellstormProximityWarning = CoD.vhud_hellstorm_ProximityWarning.new( f1_arg0, f1_arg1, 0.5, 0.5, -171, 171, 0.5, 0.5, -266, -229 ) --[[ @ 0]]
	vhudhellstormProximityWarning:mergeStateConditions( {
		{
			stateName = "ApproachingTarget",
			condition = function ( menu, element, event )
				return IsCampaign() and CoD.ModelUtility.IsModelValueEqualTo( f1_arg1, "vehicle.collisionWarning", 1 )
			end
		},
		{
			stateName = "TargetInRange",
			condition = function ( menu, element, event )
				return IsCampaign() and CoD.ModelUtility.IsModelValueEqualTo( f1_arg1, "vehicle.collisionWarning", 2 )
			end
		}
	} ) --[[ @ 0]]
	local f1_local3 = vhudhellstormProximityWarning --[[ @ 0]]
	local vhudhellstormbuttonlayout = vhudhellstormProximityWarning.subscribeToModel --[[ @ 0]]
	local f1_local5 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	vhudhellstormbuttonlayout( f1_local3, f1_local5["lobbyRoot.lobbyNav"], function ( f5_arg0 )
		f1_arg0:updateElementState( vhudhellstormProximityWarning, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f5_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local3 = vhudhellstormProximityWarning --[[ @ 0]]
	vhudhellstormbuttonlayout = vhudhellstormProximityWarning.subscribeToModel --[[ @ 0]]
	f1_local5 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	vhudhellstormbuttonlayout( f1_local3, f1_local5["vehicle.collisionWarning"], function ( f6_arg0 )
		f1_arg0:updateElementState( vhudhellstormProximityWarning, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f6_arg0:get(),
			modelName = "vehicle.collisionWarning"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:addElement( vhudhellstormProximityWarning ) --[[ @ 0]]
	self.vhudhellstormProximityWarning = vhudhellstormProximityWarning --[[ @ 0]]
	
	vhudhellstormbuttonlayout = CoD.vhud_hellstorm_button_layout.new( f1_arg0, f1_arg1, 0.5, 0.5, -960, 960, 0.5, 0.5, -540, 540 ) --[[ @ 0]]
	vhudhellstormbuttonlayout:linkToElementModel( self, "bindings", false, function ( model )
		vhudhellstormbuttonlayout:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( vhudhellstormbuttonlayout ) --[[ @ 0]]
	self.vhudhellstormbuttonlayout = vhudhellstormbuttonlayout --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "HiddenCodCaster",
			condition = function ( menu, element, event )
				return IsCodCaster( f1_arg1 )
			end
		}
	} ) --[[ @ 0]]
	f1_local5 = self --[[ @ 0]]
	f1_local3 = self.subscribeToModel --[[ @ 0]]
	local f1_local6 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local3( f1_local5, f1_local6["factions.isCoDCaster"], function ( f9_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f9_arg0:get(),
			modelName = "factions.isCoDCaster"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PreLoadFunc then
		PreLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	f1_local3 = self --[[ @ 0]]
	f1_local3 = vhudhellstormbuttonlayout --[[ @ 0]]
	if IsPC() then
		SizeToHudArea( self.vhudhellstormbuttonlayout, f1_arg1 ) --[[ @ 0]]
	end
	return self
end
 --[[ @ 0]]
CoD.vhud_hellstorm_internal.__resetProperties = function ( f10_arg0 )
	f10_arg0.vhudhellstormbuttonlayout:completeAnimation() --[[ @ 0]]
	f10_arg0.vhudhellstormbuttonlayout:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.vhud_hellstorm_internal.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f11_arg0, f11_arg1 )
			f11_arg0:__resetProperties() --[[ @ 0]]
			f11_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	HiddenCodCaster = {
		DefaultClip = function ( f12_arg0, f12_arg1 )
			f12_arg0:__resetProperties() --[[ @ 0]]
			f12_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f12_arg0.vhudhellstormbuttonlayout:completeAnimation() --[[ @ 0]]
			f12_arg0.vhudhellstormbuttonlayout:setAlpha( 0 ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.vhudhellstormbuttonlayout ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.vhud_hellstorm_internal.__onClose = function ( f13_arg0 )
	f13_arg0.vhudhellstormreticle:close() --[[ @ 0]]
	f13_arg0.vhudhellstormProximityWarning:close() --[[ @ 0]]
	f13_arg0.vhudhellstormbuttonlayout:close() --[[ @ 0]]
end
 --[[ @ 0]]
