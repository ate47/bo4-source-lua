-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
require( "x64:2478f2bd71f935fd" ) --[[ @ 0]]

CoD.WarzoneQuickInventoryMenuItemSmall_Internal = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.WarzoneQuickInventoryMenuItemSmall_Internal.__defaultWidth = 92 --[[ @ 0]]
CoD.WarzoneQuickInventoryMenuItemSmall_Internal.__defaultHeight = 90 --[[ @ 0]]
CoD.WarzoneQuickInventoryMenuItemSmall_Internal.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.WarzoneQuickInventoryMenuItemSmall_Internal ) --[[ @ 0]]
	self.id = "WarzoneQuickInventoryMenuItemSmall_Internal" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local Blur = LUI.UIImage.new( 0, 0, 11, 78, 0, 0, 13, 75 ) --[[ @ 0]]
	Blur:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_E2354BE557C4C7A" ) ) --[[ @ 0]]
	Blur:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( Blur ) --[[ @ 0]]
	self.Blur = Blur --[[ @ 0]]
	
	local Backing = LUI.UIImage.new( 0.5, 0.5, -35, 32, 0.5, 0.5, -32, 30 ) --[[ @ 0]]
	Backing:setRGB( 0.34, 0.32, 0.2 ) --[[ @ 0]]
	Backing:setAlpha( 0.95 ) --[[ @ 0]]
	self:addElement( Backing ) --[[ @ 0]]
	self.Backing = Backing --[[ @ 0]]
	
	local Icon = LUI.UIImage.new( 0.5, 0.5, -38, 38, 0.5, 0.5, -42, 34 ) --[[ @ 0]]
	Icon:setScale( 0.72, 0.72 ) --[[ @ 0]]
	Icon:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_saturation_normal" ) ) --[[ @ 0]]
	Icon:setShaderVector( 0, 1, 0, 0, 0 ) --[[ @ 0]]
	Icon:linkToElementModel( self, "icon", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			Icon:setImage( RegisterImage( f2_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Icon ) --[[ @ 0]]
	self.Icon = Icon --[[ @ 0]]
	
	local StackCount = CoD.WarzoneInventoryCounter.new( f1_arg0, f1_arg1, 0.5, 0.5, 20, 40, 0.5, 0.5, 21, 41 ) --[[ @ 0]]
	StackCount:setAlpha( 0 ) --[[ @ 0]]
	StackCount:linkToElementModel( self, nil, false, function ( model )
		StackCount:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	StackCount:linkToElementModel( self, "stackCount", true, function ( model )
		local f4_local0 = model:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			StackCount.Counter:setText( f4_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( StackCount ) --[[ @ 0]]
	self.StackCount = StackCount --[[ @ 0]]
	
	local Border = LUI.UIImage.new( 0, 0, 0, 88, 0, 0, 0.5, 88.5 ) --[[ @ 0]]
	Border:setRGB( 0, 0, 0 ) --[[ @ 0]]
	Border:setImage( RegisterImage( @"uie_ui_hud_wz_hud_core_qe_border" ) ) --[[ @ 0]]
	Border:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_feather_edges" ) ) --[[ @ 0]]
	Border:setShaderVector( 0, 0.01, 0.1, 0.01, 0.1 ) --[[ @ 0]]
	self:addElement( Border ) --[[ @ 0]]
	self.Border = Border --[[ @ 0]]
	
	local triangles = LUI.UIImage.new( 0, 0, 0.5, 88.5, 0, 0, 0.5, 88.5 ) --[[ @ 0]]
	triangles:setRGB( 0, 0, 0 ) --[[ @ 0]]
	triangles:setImage( RegisterImage( @"uie_ui_hud_wz_hud_core_qe_triangles" ) ) --[[ @ 0]]
	self:addElement( triangles ) --[[ @ 0]]
	self.triangles = triangles --[[ @ 0]]
	
	local LED = LUI.UIImage.new( 0, 0, 0, 88, 0, 0, 0.5, 88.5 ) --[[ @ 0]]
	LED:setRGB( 0.29, 0.28, 0.22 ) --[[ @ 0]]
	LED:setAlpha( 0.08 ) --[[ @ 0]]
	LED:setImage( RegisterImage( @"uie_ui_hud_wz_hud_core_qe_led" ) ) --[[ @ 0]]
	self:addElement( LED ) --[[ @ 0]]
	self.LED = LED --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Empty",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualToEnum( element, f1_arg1, "id", CoD.WZUtility.InventoryItem.INVENTORY_ITEM_NONE )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "id", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "id"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.WarzoneQuickInventoryMenuItemSmall_Internal.__resetProperties = function ( f7_arg0 )
	f7_arg0.Icon:completeAnimation() --[[ @ 0]]
	f7_arg0.StackCount:completeAnimation() --[[ @ 0]]
	f7_arg0.Icon:setAlpha( 1 ) --[[ @ 0]]
	f7_arg0.StackCount:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.WarzoneQuickInventoryMenuItemSmall_Internal.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f8_arg0, f8_arg1 )
			f8_arg0:__resetProperties() --[[ @ 0]]
			f8_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f8_arg0.Icon:completeAnimation() --[[ @ 0]]
			f8_arg0.Icon:setAlpha( 1 ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.Icon ) --[[ @ 0]]
		end,
		GainFocus = function ( f9_arg0, f9_arg1 )
			f9_arg0:__resetProperties() --[[ @ 0]]
			f9_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f9_arg0.Icon:completeAnimation() --[[ @ 0]]
			f9_arg0.Icon:setAlpha( 1 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.Icon ) --[[ @ 0]]
		end,
		LoseFocus = function ( f10_arg0, f10_arg1 )
			f10_arg0:__resetProperties() --[[ @ 0]]
			f10_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f10_arg0.Icon:completeAnimation() --[[ @ 0]]
			f10_arg0.Icon:setAlpha( 1 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.Icon ) --[[ @ 0]]
		end
	},
	Empty = {
		DefaultClip = function ( f11_arg0, f11_arg1 )
			f11_arg0:__resetProperties() --[[ @ 0]]
			f11_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f11_arg0.Icon:completeAnimation() --[[ @ 0]]
			f11_arg0.Icon:setAlpha( 0 ) --[[ @ 0]]
			f11_arg0.clipFinished( f11_arg0.Icon ) --[[ @ 0]]
			f11_arg0.StackCount:completeAnimation() --[[ @ 0]]
			f11_arg0.StackCount:setAlpha( 0 ) --[[ @ 0]]
			f11_arg0.clipFinished( f11_arg0.StackCount ) --[[ @ 0]]
		end,
		Focus = function ( f12_arg0, f12_arg1 )
			f12_arg0:__resetProperties() --[[ @ 0]]
			f12_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f12_arg0.Icon:completeAnimation() --[[ @ 0]]
			f12_arg0.Icon:setAlpha( 0 ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.Icon ) --[[ @ 0]]
			f12_arg0.StackCount:completeAnimation() --[[ @ 0]]
			f12_arg0.StackCount:setAlpha( 0 ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.StackCount ) --[[ @ 0]]
		end,
		GainFocus = function ( f13_arg0, f13_arg1 )
			f13_arg0:__resetProperties() --[[ @ 0]]
			f13_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f13_arg0.Icon:completeAnimation() --[[ @ 0]]
			f13_arg0.Icon:setAlpha( 0 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.Icon ) --[[ @ 0]]
			f13_arg0.StackCount:completeAnimation() --[[ @ 0]]
			f13_arg0.StackCount:setAlpha( 0 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.StackCount ) --[[ @ 0]]
		end,
		LoseFocus = function ( f14_arg0, f14_arg1 )
			f14_arg0:__resetProperties() --[[ @ 0]]
			f14_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f14_arg0.Icon:completeAnimation() --[[ @ 0]]
			f14_arg0.Icon:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.Icon ) --[[ @ 0]]
			f14_arg0.StackCount:completeAnimation() --[[ @ 0]]
			f14_arg0.StackCount:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.StackCount ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.WarzoneQuickInventoryMenuItemSmall_Internal.__onClose = function ( f15_arg0 )
	f15_arg0.Icon:close() --[[ @ 0]]
	f15_arg0.StackCount:close() --[[ @ 0]]
end
 --[[ @ 0]]
