-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:48
require( "ui/uieditor/widgets/common/commoncenteredpopup" ) --[[ @ 0]]
require( "x64:fe9df26e257edb3" ) --[[ @ 0]]
require( "ui/uieditor/widgets/scrollbars/verticalcounter" ) --[[ @ 0]]
require( "ui/uieditor/widgets/pc/pc_smallclosebutton" ) --[[ @ 0]]

CoD.CustomGames_LobbySettings = InheritFrom( CoD.Menu ) --[[ @ 0]]
LUI.createMenu.CustomGames_LobbySettings = function ( f1_arg0, f1_arg1 )
	local self = CoD.Menu.NewForUIEditor( "CustomGames_LobbySettings", f1_arg0 ) --[[ @ 0]]
	local f1_local1 = self --[[ @ 0]]
	self:setClass( CoD.CustomGames_LobbySettings ) --[[ @ 0]]
	self.soundSet = "FrontendMain" --[[ @ 0]]
	self:setOwner( f1_arg0 ) --[[ @ 0]]
	self:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	self:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	self:playSound( "menu_open", f1_arg0 ) --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_local1:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local CommomCenteredPopup = CoD.CommonCenteredPopup.new( f1_local1, f1_arg0, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	CommomCenteredPopup.TitleText:setText( LocalizeToUpperString( @"hash_22A7AF016510CD32" ) ) --[[ @ 0]]
	CommomCenteredPopup.HeaderBackground:setAlpha( 0 ) --[[ @ 0]]
	CommomCenteredPopup.HeaderTopBar:setAlpha( 0 ) --[[ @ 0]]
	CommomCenteredPopup.HeaderBottomBar:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( CommomCenteredPopup ) --[[ @ 0]]
	self.CommomCenteredPopup = CommomCenteredPopup --[[ @ 0]]
	
	local LobbySettingsList = LUI.UIList.new( f1_local1, f1_arg0, 8, 0, nil, false, false, false, false ) --[[ @ 0]]
	LobbySettingsList:setLeftRight( 0.5, 0.5, -250, 250 ) --[[ @ 0]]
	LobbySettingsList:setTopBottom( 0.5, 0.5, -380, 224 ) --[[ @ 0]]
	LobbySettingsList:setAutoScaleContent( true ) --[[ @ 0]]
	LobbySettingsList:setWidgetType( CoD.CustomGames_SettingSliderNoCustom ) --[[ @ 0]]
	LobbySettingsList:setVerticalCount( 9 ) --[[ @ 0]]
	LobbySettingsList:setSpacing( 8 ) --[[ @ 0]]
	LobbySettingsList:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	LobbySettingsList:setVerticalCounter( CoD.verticalCounter ) --[[ @ 0]]
	LobbySettingsList:setDataSource( "GlobalLobbyOptionList" ) --[[ @ 0]]
	self:addElement( LobbySettingsList ) --[[ @ 0]]
	self.LobbySettingsList = LobbySettingsList --[[ @ 0]]
	
	local SettingDescription = LUI.UIText.new( 0.5, 0.5, -250, 250, 0.5, 0.5, 269, 290 ) --[[ @ 0]]
	SettingDescription:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	SettingDescription:setTTF( "dinnext_regular" ) --[[ @ 0]]
	SettingDescription:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	SettingDescription:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	self:addElement( SettingDescription ) --[[ @ 0]]
	self.SettingDescription = SettingDescription --[[ @ 0]]
	
	local PCSmallCloseButton = nil --[[ @ 0]]
	
	PCSmallCloseButton = CoD.PC_SmallCloseButton.new( f1_local1, f1_arg0, 0.5, 0.5, 308, 342, 0.5, 0.5, -439.5, -405.5 ) --[[ @ 0]]
	PCSmallCloseButton:registerEventHandler( "gain_focus", function ( element, event )
		local f2_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f2_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f2_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_local1, f1_arg0, Enum[@"luibutton"][@"lui_key_none"] ) --[[ @ 0]]
		return f2_local0
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( PCSmallCloseButton, f1_arg0, Enum[@"luibutton"][@"lui_key_none"], "MOUSE1", function ( element, menu, controller, model )
		ClearMenuSavedState( menu ) --[[ @ 0]]
		CoD.DirectorUtility.ForceNotifyPrivateClientUpdate() --[[ @ 0]]
		GoBack( self, controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_none"], @"hash_0", nil, "MOUSE1" ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( PCSmallCloseButton, f1_arg0, Enum[@"luibutton"][@"lui_key_none"], "ui_confirm", function ( element, menu, controller, model )
		ClearMenuSavedState( menu ) --[[ @ 0]]
		CoD.DirectorUtility.ForceNotifyPrivateClientUpdate() --[[ @ 0]]
		GoBack( self, controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_none"], @"hash_0", nil, "ui_confirm" ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	self:addElement( PCSmallCloseButton ) --[[ @ 0]]
	self.PCSmallCloseButton = PCSmallCloseButton --[[ @ 0]]
	
	SettingDescription:linkToElementModel( LobbySettingsList, "desc", true, function ( model )
		local f7_local0 = model:get() --[[ @ 0]]
		if f7_local0 ~= nil then
			SettingDescription:setText( Engine[@"hash_4F9F1239CFD921FE"]( f7_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:mergeStateConditions( {
		{
			stateName = "KBM",
			condition = function ( menu, element, event )
				return IsMouseOrKeyboard( f1_arg0 )
			end
		}
	} ) --[[ @ 0]]
	self:appendEventHandler( "input_source_changed", function ( f9_arg0, f9_arg1 )
		f9_arg1.menu = f9_arg1.menu or f1_local1 --[[ @ 0]]
		f1_local1:updateElementState( self, f9_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local f1_local6 = self --[[ @ 0]]
	local f1_local7 = self.subscribeToModel --[[ @ 0]]
	local f1_local8 = Engine[@"getmodelforcontroller"]( f1_arg0 ) --[[ @ 0]]
	f1_local7( f1_local6, f1_local8.LastInput, function ( f10_arg0 )
		f1_local1:updateElementState( self, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f10_arg0:get(),
			modelName = "LastInput"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"luibutton"][@"lui_key_xbb_pscircle"], nil, function ( element, menu, controller, model )
		GoBack( self, controller ) --[[ @ 0]]
		ClearMenuSavedState( menu ) --[[ @ 0]]
		CoD.DirectorUtility.ForceNotifyPrivateClientUpdate() --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xbb_pscircle"], @"menu/back", nil, nil ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	CommomCenteredPopup.buttons:setModel( self.buttonModel, f1_arg0 ) --[[ @ 0]]
	if CoD.isPC then
		CommomCenteredPopup.id = "CommomCenteredPopup" --[[ @ 0]]
	end
	LobbySettingsList.id = "LobbySettingsList" --[[ @ 0]]
	if CoD.isPC then
		PCSmallCloseButton.id = "PCSmallCloseButton" --[[ @ 0]]
	end
	self:processEvent( {
		name = "menu_loaded",
		controller = f1_arg0
	} ) --[[ @ 0]]
	self.__defaultFocus = LobbySettingsList --[[ @ 0]]
	if CoD.isPC and (IsKeyboard( f1_arg0 ) or self.ignoreCursor) then
		self:restoreState( f1_arg0 ) --[[ @ 0]]
	end
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg0 ) --[[ @ 0]]
	end
	
	f1_local7 = self --[[ @ 0]]
	MenuHidesFreeCursor( f1_local1, f1_arg0 ) --[[ @ 0]]
	return self
end
 --[[ @ 0]]
CoD.CustomGames_LobbySettings.__resetProperties = function ( f13_arg0 )
	f13_arg0.LobbySettingsList:completeAnimation() --[[ @ 0]]
	f13_arg0.SettingDescription:completeAnimation() --[[ @ 0]]
	f13_arg0.LobbySettingsList:setLeftRight( 0.5, 0.5, -250, 250 ) --[[ @ 0]]
	f13_arg0.SettingDescription:setLeftRight( 0.5, 0.5, -250, 250 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.CustomGames_LobbySettings.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f14_arg0, f14_arg1 )
			f14_arg0:__resetProperties() --[[ @ 0]]
			f14_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	KBM = {
		DefaultClip = function ( f15_arg0, f15_arg1 )
			f15_arg0:__resetProperties() --[[ @ 0]]
			f15_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f15_arg0.LobbySettingsList:completeAnimation() --[[ @ 0]]
			f15_arg0.LobbySettingsList:setLeftRight( 0.5, 0.5, -290, 290 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.LobbySettingsList ) --[[ @ 0]]
			f15_arg0.SettingDescription:completeAnimation() --[[ @ 0]]
			f15_arg0.SettingDescription:setLeftRight( 0.5, 0.5, -290, 290 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.SettingDescription ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.CustomGames_LobbySettings.__onClose = function ( f16_arg0 )
	f16_arg0.SettingDescription:close() --[[ @ 0]]
	f16_arg0.CommomCenteredPopup:close() --[[ @ 0]]
	f16_arg0.LobbySettingsList:close() --[[ @ 0]]
	f16_arg0.PCSmallCloseButton:close() --[[ @ 0]]
end
 --[[ @ 0]]
