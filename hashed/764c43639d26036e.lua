-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:50
CoD.WarzoneCastTimeContainer = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.WarzoneCastTimeContainer.__defaultWidth = 32 --[[ @ 0]]
CoD.WarzoneCastTimeContainer.__defaultHeight = 32 --[[ @ 0]]
CoD.WarzoneCastTimeContainer.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.WarzoneCastTimeContainer ) --[[ @ 0]]
	self.id = "WarzoneCastTimeContainer" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	local Backing = nil --[[ @ 0]]
	
	Backing = LUI.UIImage.new( 0.5, 0.5, -36, 32, 0.5, 0.5, -30, 30 ) --[[ @ 0]]
	Backing:setRGB( 0.34, 0.32, 0.2 ) --[[ @ 0]]
	Backing:setAlpha( 0 ) --[[ @ 0]]
	Backing:setImage( RegisterImage( @"uie_ui_hud_wz_hud_core_player_widget_ability_backer" ) ) --[[ @ 0]]
	self:addElement( Backing ) --[[ @ 0]]
	self.Backing = Backing --[[ @ 0]]
	
	local ClockMeterAdd = nil --[[ @ 0]]
	
	ClockMeterAdd = LUI.UIImage.new( 0.5, 0.5, -35, 31, 0.5, 0.5, -29, 29 ) --[[ @ 0]]
	ClockMeterAdd:setRGB( 0, 0, 0 ) --[[ @ 0]]
	ClockMeterAdd:setAlpha( 0.8 ) --[[ @ 0]]
	ClockMeterAdd:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_clock_normal" ) ) --[[ @ 0]]
	ClockMeterAdd:setShaderVector( 1, 0.5, 0, 0, 0 ) --[[ @ 0]]
	ClockMeterAdd:setShaderVector( 2, 0.5, 0, 0, 0 ) --[[ @ 0]]
	ClockMeterAdd:setShaderVector( 3, 0, 0, 0, 0 ) --[[ @ 0]]
	ClockMeterAdd:setShaderVector( 4, 0, 0, 0, 0 ) --[[ @ 0]]
	ClockMeterAdd:linkToElementModel( self, "castTimeFraction", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			ClockMeterAdd:setShaderVector( 0, CoD.GetVectorComponentFromString( f2_local0, 1 ), CoD.GetVectorComponentFromString( f2_local0, 2 ), CoD.GetVectorComponentFromString( f2_local0, 3 ), CoD.GetVectorComponentFromString( f2_local0, 4 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( ClockMeterAdd ) --[[ @ 0]]
	self.ClockMeterAdd = ClockMeterAdd --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "InUse",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueGreaterThan( self, f1_arg1, "castTimeFraction", 0 )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "castTimeFraction", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "castTimeFraction"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.WarzoneCastTimeContainer.__resetProperties = function ( f5_arg0 )
	f5_arg0.Backing:completeAnimation() --[[ @ 0]]
	f5_arg0.Backing:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.WarzoneCastTimeContainer.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f6_arg0, f6_arg1 )
			f6_arg0:__resetProperties() --[[ @ 0]]
			f6_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	InUse = {
		DefaultClip = function ( f7_arg0, f7_arg1 )
			f7_arg0:__resetProperties() --[[ @ 0]]
			f7_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f7_arg0.Backing:completeAnimation() --[[ @ 0]]
			f7_arg0.Backing:setAlpha( 0.85 ) --[[ @ 0]]
			f7_arg0.clipFinished( f7_arg0.Backing ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.WarzoneCastTimeContainer.__onClose = function ( f8_arg0 )
	f8_arg0.ClockMeterAdd:close() --[[ @ 0]]
end
 --[[ @ 0]]
