-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:49
require( "lua/lobby/common/lobbycore" ) --[[ @ 0]]

Lobby.Launch = {} --[[ @ 0]]
Lobby.Launch.hostLaunch = {} --[[ @ 0]]
Lobby.Launch.clientLaunch = {} --[[ @ 0]]
Lobby.Launch.printInterval = 5000 --[[ @ 0]]
Lobby.Launch.IsHostLaunching = function ()
	if Lobby.Launch.hostLaunch.startTime ~= nil then
		return true
	elseif Engine[@"lobbyhostlaunchtaskinprogress"] and Engine[@"lobbyhostlaunchtaskinprogress"]() then
		return true
	else
		return false
	end
end
 --[[ @ 0]]
Lobby.Launch.OnHostLaunch = function ( f2_arg0 )
	if f2_arg0.stage == Enum[@"launchgamestate"][@"launch_game_state_start"] then
		return Lobby.Launch.HostLaunchInit()
	elseif f2_arg0.stage == Enum[@"launchgamestate"][@"launch_game_state_pump"] then
		return Lobby.Launch.HostLaunchPump( f2_arg0 )
	else
		Engine[@"hash_3141E84ACAAE0A4E"]() --[[ @ 0]]
		return Lobby.Launch.HostLaunchClear()
	end
end
 --[[ @ 0]]
Lobby.Launch.HostLaunchInit = function ()
	Engine[@"forcenotifymodelsubscriptions"]( Engine[@"createmodel"]( Engine[@"getglobalmodel"](), "lobbyRoot.closePopups" ) ) --[[ @ 0]]
	Lobby.Launch.hostLaunch = {} --[[ @ 0]]
	Lobby.Launch.hostLaunch.fadeToBlack = false --[[ @ 0]]
	local f3_local0 = Engine[@"milliseconds"]() --[[ @ 0]]
	Engine[@"setmodelvalue"]( Engine[@"createmodel"]( Engine[@"getglobalmodel"](), "lobbyRoot.hideMenusForGameStart" ), 1 ) --[[ @ 0]]
	Lobby.Launch.hostLaunch.startTime = f3_local0 --[[ @ 0]]
	Lobby.Launch.hostLaunch.printAtTime = f3_local0 + Lobby.Launch.printInterval --[[ @ 0]]
	Lobby.Launch.hostLaunch.fadeToBlackTime = f3_local0 + Dvar[@"lobbylaunch_fadetoblackdelay"]:get() --[[ @ 0]]
	Lobby.Launch.hostLaunch.launchTime = f3_local0 + Dvar[@"lobbylaunch_gamelaunchdelay"]:get() --[[ @ 0]]
	Lobby.Launch.hostLaunch.waitForClientAckTime = f3_local0 + Dvar[@"lobbylaunch_waitforclientackdelay"]:get() --[[ @ 0]]
	Lobby.Timer.ResetUIModel() --[[ @ 0]]
	Engine[@"setmodelvalue"]( Engine[@"createmodel"]( Engine[@"getglobalmodel"](), "lobbyRoot.spinnerActive" ), true ) --[[ @ 0]]
	return true
end
 --[[ @ 0]]
Lobby.Launch.MapImagePreloading = function ( f4_arg0 )
	local f4_local0 = false --[[ @ 0]]
	if Engine[@"currentsessionmode"]() == Enum[@"emodes"][@"mode_zombies"] then
		if (Engine[@"getlobbyclientcount"]( f4_arg0, Engine[@"lobbygetcontrollinglobbysession"]( Enum[@"lobbymodule"][@"lobby_module_client"] ), Enum[@"lobbyclientfiltertype"][@"lobby_client_filter_type_all"] ) or 0) <= 1 and Engine[@"lobbygetgametype"]() ~= "ztutorial" then
			f4_local0 = false --[[ @ 0]]
		else
			f4_local0 = true --[[ @ 0]]
		end
	end
	local f4_local1 = Engine[@"converttoxhash"]( Engine[@"lobbygetmap"]() ) --[[ @ 0]]
	local f4_local2 --[[ @ 0]]
	if not f4_local0 then
		f4_local2 = LuaUtils.GetMapsTable() --[[ @ 0]]
		f4_local2 = f4_local2[f4_local1] --[[ @ 0]]
		if f4_local2 then
			f4_local2 = LuaUtils.GetMapsTable() --[[ @ 0]]
			f4_local2 = f4_local2[f4_local1].introMovie --[[ @ 0]]
		end
	else
		f4_local2 = false --[[ @ 0]]
	end
	if f4_local2 then
		return false
	end
	local f4_local3 = LuaUtils.GetMapsTable() --[[ @ 0]]
	f4_local3 = f4_local3[f4_local1] --[[ @ 0]]
	if f4_local3 then
		f4_local3 = LuaUtils.GetMapsTable() --[[ @ 0]]
		f4_local3 = f4_local3[f4_local1].loadingImage --[[ @ 0]]
	end
	if f4_local3 and not Engine[@"hash_8A31148EE1BE3B1"]( f4_local3 ) then
		return true
	end
	return false
end
 --[[ @ 0]]
Lobby.Launch.HostLaunchPump = function ( f5_arg0 )
	local f5_local0 = Engine[@"getlobbyuiscreen"]() --[[ @ 0]]
	if f5_local0 == LobbyData.GetLobbyMenuIDByName( LuaEnum.UI.DIRECTOR_ONLINE_MP_PUBLIC ) then
		local f5_local1 = false --[[ @ 0]]
		local f5_local2 = Engine[@"getlobbyclientcount"]( Enum[@"lobbymodule"][@"lobby_module_host"], Enum[@"lobbytype"][@"lobby_type_game"], Enum[@"lobbyclientfiltertype"][@"lobby_client_filter_type_all"] ) --[[ @ 0]]
		if f5_local2 < Dvar[@"party_minplayers"]:get() then
			Engine[@"printwarning"]( Enum[@"consolelabel_e"][@"con_label_lobbyhost"], "Lobby.Launch.LaunchGameExec: Not enough players (" .. tostring( f5_local2 ) .. "/" .. tostring( Dvar[@"party_minplayers"]:get() ) .. "), restart timer.\n" ) --[[ @ 0]]
			f5_local1 = true --[[ @ 0]]
		end
		if CoDShared.IsGametypeTeamBased() == true and Engine[@"currentsessionmode"]() ~= Enum[@"emodes"][@"mode_warzone"] then
			local f5_local3 = Engine[@"lobbygetsessionclients"]( Enum[@"lobbymodule"][@"lobby_module_host"], Enum[@"lobbytype"][@"lobby_type_game"] ) --[[ @ 0]]
			if f5_local3 ~= nil then
				local f5_local4 = 0 --[[ @ 0]]
				local f5_local5 = 0 --[[ @ 0]]
				for f5_local9, f5_local10 in ipairs( f5_local3.sessionClients ) --[[ @ 0]] do
					if f5_local10.team == Enum[@"team_t"][@"team_allies"] then
						f5_local4 = f5_local4 + 1 --[[ @ 0]]
					end
					if f5_local10.team == Enum[@"team_t"][@"team_axis"] then
						f5_local5 = f5_local5 + 1 --[[ @ 0]]
					end
				end
				if math.abs( f5_local4 - f5_local5 ) > 1 then
					Engine[@"printwarning"]( Enum[@"consolelabel_e"][@"con_label_lobbyhost"], "Lobby.Launch.LaunchGameExec: Teams are not balanced (teamAlliesCount: " .. tostring( f5_local4 ) .. "/teamAxisCount: " .. tostring( f5_local5 ) .. "), restart timer.\n" ) --[[ @ 0]]
					f5_local1 = true --[[ @ 0]]
				end
			end
		end
		if Engine[@"isdevelopmentbuild"]() and Engine[@"getdvarbool"]( "lobby_forceBalanced" ) == true then
			f5_local1 = false --[[ @ 0]]
		end
		if f5_local1 == true then
			Engine[@"lobbylaunchclear"]() --[[ @ 0]]
			Lobby.Launch.HostLaunchClear() --[[ @ 0]]
			local f5_local3 = LobbyData.GetLobbyMenuByID( f5_local0 ) --[[ @ 0]]
			Lobby.Timer.HostingLobby( {
				controller = Engine[@"getprimarycontroller"](),
				lobbyType = Enum[@"lobbytype"][@"lobby_type_game"],
				mainMode = f5_local3[@"mainmode"],
				lobbyTimerType = f5_local3[@"hash_5558B67A321D1120"],
				matchEnded = true,
				status = Lobby.Timer.LOBBY_STATUS.RESET_TO_NEED
			} ) --[[ @ 0]]
			return false
		end
	end
	if Engine[@"getmodelvalue"]( Engine[@"createmodel"]( Engine[@"getglobalmodel"](), "lobbyRoot.spinnerActive" ) ) == false then
		Engine[@"setmodelvalue"]( Engine[@"createmodel"]( Engine[@"getglobalmodel"](), "lobbyRoot.spinnerActive" ), true ) --[[ @ 0]]
	end
	if not f5_arg0.hasAllClientsGotLatestStateMsg and Engine[@"milliseconds"]() < Lobby.Launch.hostLaunch.waitForClientAckTime then
		return false
	elseif not Engine[@"isdedicatedserver"]() then
		if Lobby.Launch.MapImagePreloading( Enum[@"lobbymodule"][@"lobby_module_host"] ) then
			return false
		elseif not Engine[@"iscommonfastfileloaded"]() then
			local f5_local1 = Engine[@"milliseconds"]() --[[ @ 0]]
			if f5_local1 > Lobby.Launch.hostLaunch.printAtTime then
				Lobby.Launch.hostLaunch.printAtTime = f5_local1 + Lobby.Launch.printInterval --[[ @ 0]]
				Engine[@"printinfo"]( Enum[@"consolelabel_e"][@"con_label_live_matchmaking"], "Waiting for common FF \n" ) --[[ @ 0]]
			end
			return false
		end
	end
	if Engine[@"currentsessionmode"]() ~= Enum[@"emodes"][@"mode_warzone"] then
		Engine[@"markplaylistrotationentryplayed"]( Enum[@"lobbymodule"][@"lobby_module_host"], Engine[@"lobbygetcontrollinglobbysession"]( Enum[@"lobbymodule"][@"lobby_module_host"] ) ) --[[ @ 0]]
	end
	return true
end
 --[[ @ 0]]
Lobby.Launch.HostLaunchClear = function ()
	Engine[@"setmodelvalue"]( Engine[@"createmodel"]( Engine[@"getglobalmodel"](), "lobbyRoot.hideMenusForGameStart" ), 0 ) --[[ @ 0]]
	Engine[@"setmodelvalue"]( Engine[@"createmodel"]( Engine[@"getglobalmodel"](), "lobbyRoot.spinnerActive" ), false ) --[[ @ 0]]
	Lobby.Launch.hostLaunch.startTime = nil --[[ @ 0]]
	return true
end
 --[[ @ 0]]
Lobby.Launch.OnClientLaunch = function ( f7_arg0 )
	if f7_arg0.stage == Enum[@"launchgamestate"][@"launch_game_state_start"] then
		return Lobby.Launch.ClientLaunchInit( f7_arg0.justConnected )
	elseif f7_arg0.stage == Enum[@"launchgamestate"][@"launch_game_state_pump"] then
		return Lobby.Launch.ClientLaunchPump()
	else
		Engine[@"hash_3141E84ACAAE0A4E"]() --[[ @ 0]]
		return Lobby.Launch.ClientLaunchClear()
	end
end
 --[[ @ 0]]
Lobby.Launch.ClientLaunchInit = function ( f8_arg0 )
	if not LobbyVM.CanClientLaunch( f8_arg0 ) then
		return false
	end
	Engine[@"forcenotifymodelsubscriptions"]( Engine[@"createmodel"]( Engine[@"getglobalmodel"](), "lobbyRoot.closePopups" ) ) --[[ @ 0]]
	Lobby.Launch.clientLaunch = {} --[[ @ 0]]
	Lobby.Launch.clientLaunch.fadeToBlack = false --[[ @ 0]]
	local f8_local0 = Dvar[@"lobbylaunch_fadetoblackdelay"]:get() --[[ @ 0]]
	local f8_local1 = Dvar[@"lobbylaunch_gamelaunchdelay"]:get() --[[ @ 0]]
	if f8_arg0 then
		f8_local0 = Dvar[@"lobbylaunch_fadetoblackdelayonconnect"]:get() --[[ @ 0]]
		f8_local1 = Dvar[@"lobbylaunch_gamelaunchdelayonconnect"]:get() --[[ @ 0]]
	end
	Engine[@"setmodelvalue"]( Engine[@"createmodel"]( Engine[@"getglobalmodel"](), "lobbyRoot.hideMenusForGameStart" ), 1 ) --[[ @ 0]]
	local f8_local2 = Engine[@"milliseconds"]() --[[ @ 0]]
	Lobby.Launch.clientLaunch.startTime = f8_local2 --[[ @ 0]]
	Lobby.Launch.clientLaunch.fadeToBlackTime = f8_local2 + f8_local0 --[[ @ 0]]
	Lobby.Launch.clientLaunch.launchTime = f8_local2 + f8_local1 --[[ @ 0]]
	Lobby.Launch.clientLaunch.printAtTime = f8_local2 + Lobby.Launch.printInterval --[[ @ 0]]
	Lobby.Timer.ResetUIModel() --[[ @ 0]]
	Engine[@"setmodelvalue"]( Engine[@"createmodel"]( Engine[@"getglobalmodel"](), "lobbyRoot.spinnerActive" ), true ) --[[ @ 0]]
	return true
end
 --[[ @ 0]]
Lobby.Launch.ClientLaunchPump = function ()
	if Engine[@"getmodelvalue"]( Engine[@"createmodel"]( Engine[@"getglobalmodel"](), "lobbyRoot.spinnerActive" ) ) == false then
		Engine[@"setmodelvalue"]( Engine[@"createmodel"]( Engine[@"getglobalmodel"](), "lobbyRoot.spinnerActive" ), true ) --[[ @ 0]]
	end
	if false == Lobby.Launch.clientLaunch.fadeToBlack and Engine[@"milliseconds"]() > Lobby.Launch.clientLaunch.fadeToBlackTime then
		Lobby.Launch.clientLaunch.fadeToBlack = true --[[ @ 0]]
		Engine[@"setmodelvalue"]( Engine[@"createmodel"]( Engine[@"getglobalmodel"](), "lobbyRoot.hideMenusForGameStart" ), 1 ) --[[ @ 0]]
	end
	if Lobby.Launch.MapImagePreloading( Enum[@"lobbymodule"][@"lobby_module_client"] ) then
		return false
	elseif Lobby.Launch.clientLaunch.launchTime ~= nil and Engine[@"milliseconds"]() < Lobby.Launch.clientLaunch.launchTime then
		return false
	elseif not Engine[@"iscommonfastfileloaded"]() then
		local f9_local0 = Engine[@"milliseconds"]() --[[ @ 0]]
		if f9_local0 > Lobby.Launch.clientLaunch.printAtTime then
			Lobby.Launch.clientLaunch.printAtTime = f9_local0 + Lobby.Launch.printInterval --[[ @ 0]]
			Engine[@"printinfo"]( Enum[@"consolelabel_e"][@"con_label_live_matchmaking"], "Client Waiting for common FF \n" ) --[[ @ 0]]
		end
		return false
	elseif 1 == Dvar[@"hash_3F1DE3CEF5A9E0DB"]:get() and LuaUtils.IsArenaPublicGame() then
		Engine[@"hash_208587B36B7F8EF5"]( Engine[@"getprimarycontroller"](), Enum[@"hash_6DB66542051E7C15"][@"hash_78D8FC5F8CDC337F"] ) --[[ @ 0]]
	end
	return true
end
 --[[ @ 0]]
Lobby.Launch.ClientLaunchClear = function ()
	Engine[@"setmodelvalue"]( Engine[@"createmodel"]( Engine[@"getglobalmodel"](), "lobbyRoot.hideMenusForGameStart" ), 0 ) --[[ @ 0]]
	Engine[@"setmodelvalue"]( Engine[@"createmodel"]( Engine[@"getglobalmodel"](), "lobbyRoot.spinnerActive" ), false ) --[[ @ 0]]
	return true
end
 --[[ @ 0]]
