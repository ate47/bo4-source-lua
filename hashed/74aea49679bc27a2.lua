-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:50
require( "x64:31de8827d6e28e46" ) --[[ @ 0]]

CoD.WaypointCenterSimple = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.WaypointCenterSimple.__defaultWidth = 76 --[[ @ 0]]
CoD.WaypointCenterSimple.__defaultHeight = 76 --[[ @ 0]]
CoD.WaypointCenterSimple.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.WaypointCenterSimple ) --[[ @ 0]]
	self.id = "WaypointCenterSimple" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local waypointCenterImage = CoD.WaypointIconSimple.new( f1_arg0, f1_arg1, 0.5, 0.5, -38, 38, 0.5, 0.5, -38, 38 ) --[[ @ 0]]
	waypointCenterImage:linkToElementModel( self, nil, false, function ( model )
		waypointCenterImage:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( waypointCenterImage ) --[[ @ 0]]
	self.waypointCenterImage = waypointCenterImage --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "PulsingCP",
			condition = function ( menu, element, event )
				return CoD.WaypointUtility.ShouldShowWaypointAsPulsing( f1_arg1, self ) and IsCampaign()
			end
		},
		{
			stateName = "Pulsing",
			condition = function ( menu, element, event )
				return CoD.WaypointUtility.ShouldShowWaypointAsPulsing( f1_arg1, self )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "progress", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "progress"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:linkToElementModel( self, "clientUseMask", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "clientUseMask"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local f1_local2 = self --[[ @ 0]]
	local f1_local3 = self.subscribeToModel --[[ @ 0]]
	local f1_local4 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local3( f1_local2, f1_local4["lobbyRoot.lobbyNav"], function ( f7_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f7_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.WaypointCenterSimple.__resetProperties = function ( f8_arg0 )
	f8_arg0.waypointCenterImage:completeAnimation() --[[ @ 0]]
	f8_arg0.waypointCenterImage:setRGB( 1, 1, 1 ) --[[ @ 0]]
	f8_arg0.waypointCenterImage:setAlpha( 1 ) --[[ @ 0]]
	f8_arg0.waypointCenterImage:setScale( 1, 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.WaypointCenterSimple.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f9_arg0, f9_arg1 )
			f9_arg0:__resetProperties() --[[ @ 0]]
			f9_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	PulsingCP = {
		DefaultClip = function ( f10_arg0, f10_arg1 )
			f10_arg0:__resetProperties() --[[ @ 0]]
			f10_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f10_local0 = function ( f11_arg0 )
				local f11_local0 = function ( f12_arg0 )
					f12_arg0:beginAnimation( 480 ) --[[ @ 0]]
					f12_arg0:setAlpha( 1 ) --[[ @ 0]]
					f12_arg0:setScale( 1, 1 ) --[[ @ 0]]
					f12_arg0:registerEventHandler( "transition_complete_keyframe", f10_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f10_arg0.waypointCenterImage:beginAnimation( 120 ) --[[ @ 0]]
				f10_arg0.waypointCenterImage:setRGB( 1, 1, 1 ) --[[ @ 0]]
				f10_arg0.waypointCenterImage:setAlpha( 0.51 ) --[[ @ 0]]
				f10_arg0.waypointCenterImage:setScale( 1.1, 1.1 ) --[[ @ 0]]
				f10_arg0.waypointCenterImage:registerEventHandler( "interrupted_keyframe", f10_arg0.clipInterrupted ) --[[ @ 0]]
				f10_arg0.waypointCenterImage:registerEventHandler( "transition_complete_keyframe", f11_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f10_arg0.waypointCenterImage:completeAnimation() --[[ @ 0]]
			f10_arg0.waypointCenterImage:setRGB( 1, 0, 0 ) --[[ @ 0]]
			f10_arg0.waypointCenterImage:setAlpha( 1 ) --[[ @ 0]]
			f10_arg0.waypointCenterImage:setScale( 1, 1 ) --[[ @ 0]]
			f10_local0( f10_arg0.waypointCenterImage ) --[[ @ 0]]
			f10_arg0.nextClip = "DefaultClip" --[[ @ 0]]
		end
	},
	Pulsing = {
		DefaultClip = function ( f13_arg0, f13_arg1 )
			f13_arg0:__resetProperties() --[[ @ 0]]
			f13_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f13_local0 = function ( f14_arg0 )
				local f14_local0 = function ( f15_arg0 )
					f15_arg0:beginAnimation( 880 ) --[[ @ 0]]
					f15_arg0:setAlpha( 1 ) --[[ @ 0]]
					f15_arg0:setScale( 1, 1 ) --[[ @ 0]]
					f15_arg0:registerEventHandler( "transition_complete_keyframe", f13_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f13_arg0.waypointCenterImage:beginAnimation( 120 ) --[[ @ 0]]
				f13_arg0.waypointCenterImage:setAlpha( 0.51 ) --[[ @ 0]]
				f13_arg0.waypointCenterImage:setScale( 1.1, 1.1 ) --[[ @ 0]]
				f13_arg0.waypointCenterImage:registerEventHandler( "interrupted_keyframe", f13_arg0.clipInterrupted ) --[[ @ 0]]
				f13_arg0.waypointCenterImage:registerEventHandler( "transition_complete_keyframe", f14_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f13_arg0.waypointCenterImage:completeAnimation() --[[ @ 0]]
			f13_arg0.waypointCenterImage:setAlpha( 1 ) --[[ @ 0]]
			f13_arg0.waypointCenterImage:setScale( 1, 1 ) --[[ @ 0]]
			f13_local0( f13_arg0.waypointCenterImage ) --[[ @ 0]]
			f13_arg0.nextClip = "DefaultClip" --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.WaypointCenterSimple.__onClose = function ( f16_arg0 )
	f16_arg0.waypointCenterImage:close() --[[ @ 0]]
end
 --[[ @ 0]]
