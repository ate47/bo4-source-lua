-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:33
require( "ui/uieditor/widgets/pc/utility/verticallistspacer" ) --[[ @ 0]]
require( "x64:f1f9f9b9d79987c" ) --[[ @ 0]]
require( "x64:51a063cf71f3a1f9" ) --[[ @ 0]]
require( "x64:265a583181416924" ) --[[ @ 0]]

CoD.WarzoneInventoryUnlockMissionObjective = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.WarzoneInventoryUnlockMissionObjective.__defaultWidth = 310 --[[ @ 0]]
CoD.WarzoneInventoryUnlockMissionObjective.__defaultHeight = 120 --[[ @ 0]]
CoD.WarzoneInventoryUnlockMissionObjective.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIVerticalList.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9, 5, true ) --[[ @ 0]]
	self:setAlignment( LUI.Alignment.Top ) --[[ @ 0]]
	self:setClass( CoD.WarzoneInventoryUnlockMissionObjective ) --[[ @ 0]]
	self.id = "WarzoneInventoryUnlockMissionObjective" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local WarzoneInventoryUnlockMissionBacking = CoD.WarzoneInventoryUnlockMissionBacking.new( f1_arg0, f1_arg1, 0, 1, -4, -4, 0, 1, 0, 0 ) --[[ @ 0]]
	WarzoneInventoryUnlockMissionBacking.BackingTint:setRGB( 0.07, 0.07, 0.07 ) --[[ @ 0]]
	self:addElement( WarzoneInventoryUnlockMissionBacking ) --[[ @ 0]]
	self.WarzoneInventoryUnlockMissionBacking = WarzoneInventoryUnlockMissionBacking --[[ @ 0]]
	
	local description = LUI.UIText.new( 0, 0.9, 9, 9, 0, 0, 0, 20 ) --[[ @ 0]]
	description:setRGB( ColorSet.T8__BEIGE__HEADER.r, ColorSet.T8__BEIGE__HEADER.g, ColorSet.T8__BEIGE__HEADER.b ) --[[ @ 0]]
	description:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_61346019482BDC3C" ) ) --[[ @ 0]]
	description:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	description:setLetterSpacing( 1 ) --[[ @ 0]]
	description:setAlignment( Engine[@"hash_67F8853DC3581AA4"]( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) ) --[[ @ 0]]
	description:setAlignment( Engine[@"hash_67F8853DC3581AA4"]( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) ) --[[ @ 0]]
	self:addElement( description ) --[[ @ 0]]
	self.description = description --[[ @ 0]]
	
	local ButtonTopLine9Slice = LUI.UIImage.new( 0, 0, 4, 304, 0, 0, 25, 45 ) --[[ @ 0]]
	ButtonTopLine9Slice:setAlpha( 0.2 ) --[[ @ 0]]
	ButtonTopLine9Slice:setImage( RegisterImage( @"uie_ui_menu_cac_secondary_button_top_line" ) ) --[[ @ 0]]
	ButtonTopLine9Slice:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_add" ) ) --[[ @ 0]]
	ButtonTopLine9Slice:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	ButtonTopLine9Slice:setupNineSliceShader( 120, 10 ) --[[ @ 0]]
	self:addElement( ButtonTopLine9Slice ) --[[ @ 0]]
	self.ButtonTopLine9Slice = ButtonTopLine9Slice --[[ @ 0]]
	
	local characterMissionLabel = LUI.UIText.new( 0, 0.9, 9, -1, 0, 0, 50, 70 ) --[[ @ 0]]
	characterMissionLabel:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	characterMissionLabel:setText( LocalizeToUpperString( @"hash_3A1B2CAFC0534BF5" ) ) --[[ @ 0]]
	characterMissionLabel:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	characterMissionLabel:setLetterSpacing( 4 ) --[[ @ 0]]
	characterMissionLabel:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	characterMissionLabel:setAlignment( Enum[@"LUIAlignment"][@"hash_E821F0ECFF8D1C7"] ) --[[ @ 0]]
	self:addElement( characterMissionLabel ) --[[ @ 0]]
	self.characterMissionLabel = characterMissionLabel --[[ @ 0]]
	
	local alreadyCompleted = LUI.UIText.new( 0, 0.94, 9, 9, 0, 0, 75, 95 ) --[[ @ 0]]
	alreadyCompleted:setRGB( ColorSet.T8__BEIGE__HEADER.r, ColorSet.T8__BEIGE__HEADER.g, ColorSet.T8__BEIGE__HEADER.b ) --[[ @ 0]]
	alreadyCompleted:setAlpha( 0 ) --[[ @ 0]]
	alreadyCompleted:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_1BA819F632BB248A" ) ) --[[ @ 0]]
	alreadyCompleted:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	alreadyCompleted:setLetterSpacing( 1 ) --[[ @ 0]]
	alreadyCompleted:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	alreadyCompleted:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	self:addElement( alreadyCompleted ) --[[ @ 0]]
	self.alreadyCompleted = alreadyCompleted --[[ @ 0]]
	
	local objective1 = LUI.UIText.new( 0.03, 0.93, 32, 0, 0, 0, 100, 120 ) --[[ @ 0]]
	objective1:setRGB( ColorSet.T8__BEIGE__HEADER.r, ColorSet.T8__BEIGE__HEADER.g, ColorSet.T8__BEIGE__HEADER.b ) --[[ @ 0]]
	objective1:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	objective1:setLetterSpacing( 1 ) --[[ @ 0]]
	objective1:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	objective1:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	objective1:setBackingType( 1 ) --[[ @ 0]]
	objective1:setBackingWidget( CoD.WarzoneInventoryUnlockMissionObjectiveBG, f1_arg0, f1_arg1 ) --[[ @ 0]]
	objective1:setBackingXPadding( 24 ) --[[ @ 0]]
	objective1:linkToElementModel( self, "objective1.description", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			objective1:setText( CoD.WZUtility.GetWZInventoryUnlockDescription( f1_arg1, self:getModel(), 1, f2_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	objective1:linkToElementModel( self, "objective1", false, function ( model )
		objective1:setBackingModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( objective1, "setText", function ( element, controller )
		if IsTextEmpty( element ) then
			HideWidget( element ) --[[ @ 0]]
		elseif not IsTextEmpty( element ) and not IsElementInState( self, "AlreadyCompleted" ) then
			ShowWidget( element ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( objective1 ) --[[ @ 0]]
	self.objective1 = objective1 --[[ @ 0]]
	
	local objective2 = LUI.UIText.new( 0.03, 0.93, 32, 0, 0, 0, 125, 145 ) --[[ @ 0]]
	objective2:setRGB( ColorSet.T8__BEIGE__HEADER.r, ColorSet.T8__BEIGE__HEADER.g, ColorSet.T8__BEIGE__HEADER.b ) --[[ @ 0]]
	objective2:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	objective2:setLetterSpacing( 1 ) --[[ @ 0]]
	objective2:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	objective2:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	objective2:setBackingType( 1 ) --[[ @ 0]]
	objective2:setBackingWidget( CoD.WarzoneInventoryUnlockMissionObjectiveBG, f1_arg0, f1_arg1 ) --[[ @ 0]]
	objective2:setBackingXPadding( 24 ) --[[ @ 0]]
	objective2:linkToElementModel( self, "objective2.description", true, function ( model )
		local f5_local0 = model:get() --[[ @ 0]]
		if f5_local0 ~= nil then
			objective2:setText( CoD.WZUtility.GetWZInventoryUnlockDescription( f1_arg1, self:getModel(), 2, f5_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	objective2:linkToElementModel( self, "objective2", false, function ( model )
		objective2:setBackingModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( objective2, "setText", function ( element, controller )
		if IsTextEmpty( element ) then
			HideWidget( element ) --[[ @ 0]]
		elseif not IsTextEmpty( element ) and not IsElementInState( self, "AlreadyCompleted" ) then
			ShowWidget( element ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( objective2 ) --[[ @ 0]]
	self.objective2 = objective2 --[[ @ 0]]
	
	local objective3 = LUI.UIText.new( 0.03, 0.93, 32, 0, 0, 0, 150, 170 ) --[[ @ 0]]
	objective3:setRGB( ColorSet.T8__BEIGE__HEADER.r, ColorSet.T8__BEIGE__HEADER.g, ColorSet.T8__BEIGE__HEADER.b ) --[[ @ 0]]
	objective3:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	objective3:setLetterSpacing( 1 ) --[[ @ 0]]
	objective3:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	objective3:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	objective3:setBackingType( 1 ) --[[ @ 0]]
	objective3:setBackingWidget( CoD.WarzoneInventoryUnlockMissionObjectiveBG, f1_arg0, f1_arg1 ) --[[ @ 0]]
	objective3:setBackingXPadding( 24 ) --[[ @ 0]]
	objective3:linkToElementModel( self, "objective3.description", true, function ( model )
		local f8_local0 = model:get() --[[ @ 0]]
		if f8_local0 ~= nil then
			objective3:setText( CoD.WZUtility.GetWZInventoryUnlockDescription( f1_arg1, self:getModel(), 3, f8_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	objective3:linkToElementModel( self, "objective3", false, function ( model )
		objective3:setBackingModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( objective3, "setText", function ( element, controller )
		if IsTextEmpty( element ) then
			HideWidget( element ) --[[ @ 0]]
		elseif not IsTextEmpty( element ) and not IsElementInState( self, "AlreadyCompleted" ) then
			ShowWidget( element ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( objective3 ) --[[ @ 0]]
	self.objective3 = objective3 --[[ @ 0]]
	
	local objective4 = LUI.UIText.new( 0.03, 0.93, 32, 0, 0, 0, 175, 195 ) --[[ @ 0]]
	objective4:setRGB( ColorSet.T8__BEIGE__HEADER.r, ColorSet.T8__BEIGE__HEADER.g, ColorSet.T8__BEIGE__HEADER.b ) --[[ @ 0]]
	objective4:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	objective4:setLetterSpacing( 1 ) --[[ @ 0]]
	objective4:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	objective4:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	objective4:setBackingType( 1 ) --[[ @ 0]]
	objective4:setBackingWidget( CoD.WarzoneInventoryUnlockMissionObjectiveBG, f1_arg0, f1_arg1 ) --[[ @ 0]]
	objective4:setBackingXPadding( 24 ) --[[ @ 0]]
	objective4:linkToElementModel( self, "objective4.description", true, function ( model )
		local f11_local0 = model:get() --[[ @ 0]]
		if f11_local0 ~= nil then
			objective4:setText( CoD.WZUtility.GetWZInventoryUnlockDescription( f1_arg1, self:getModel(), 4, f11_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	objective4:linkToElementModel( self, "objective4", false, function ( model )
		objective4:setBackingModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( objective4, "setText", function ( element, controller )
		if IsTextEmpty( element ) then
			HideWidget( element ) --[[ @ 0]]
		elseif not IsTextEmpty( element ) and not IsElementInState( self, "AlreadyCompleted" ) then
			ShowWidget( element ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( objective4 ) --[[ @ 0]]
	self.objective4 = objective4 --[[ @ 0]]
	
	local objective5 = LUI.UIText.new( 0.03, 0.93, 32, 0, 0, 0, 200, 220 ) --[[ @ 0]]
	objective5:setRGB( ColorSet.T8__BEIGE__HEADER.r, ColorSet.T8__BEIGE__HEADER.g, ColorSet.T8__BEIGE__HEADER.b ) --[[ @ 0]]
	objective5:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	objective5:setLetterSpacing( 1 ) --[[ @ 0]]
	objective5:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	objective5:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	objective5:setBackingType( 1 ) --[[ @ 0]]
	objective5:setBackingWidget( CoD.WarzoneInventoryUnlockMissionObjectiveBG, f1_arg0, f1_arg1 ) --[[ @ 0]]
	objective5:setBackingXPadding( 24 ) --[[ @ 0]]
	objective5:linkToElementModel( self, "objective5.description", true, function ( model )
		local f14_local0 = model:get() --[[ @ 0]]
		if f14_local0 ~= nil then
			objective5:setText( CoD.WZUtility.GetWZInventoryUnlockDescription( f1_arg1, self:getModel(), 5, f14_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	objective5:linkToElementModel( self, "objective5", false, function ( model )
		objective5:setBackingModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( objective5, "setText", function ( element, controller )
		if IsTextEmpty( element ) then
			HideWidget( element ) --[[ @ 0]]
		elseif not IsTextEmpty( element ) and not IsElementInState( self, "AlreadyCompleted" ) then
			ShowWidget( element ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( objective5 ) --[[ @ 0]]
	self.objective5 = objective5 --[[ @ 0]]
	
	local VerticalListSpacer2 = CoD.VerticalListSpacer.new( f1_arg0, f1_arg1, 0, 0, -224.5, 525.5, 0, 0, 225, 228 ) --[[ @ 0]]
	self:addElement( VerticalListSpacer2 ) --[[ @ 0]]
	self.VerticalListSpacer2 = VerticalListSpacer2 --[[ @ 0]]
	
	local rewardLabel = LUI.UIText.new( 0, 0.9, 9, -1, 0, 0, 233, 253 ) --[[ @ 0]]
	rewardLabel:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	rewardLabel:setText( LocalizeToUpperString( @"hash_77F76A40DC7B0F5E" ) ) --[[ @ 0]]
	rewardLabel:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	rewardLabel:setLetterSpacing( 4 ) --[[ @ 0]]
	rewardLabel:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	rewardLabel:setAlignment( Enum[@"LUIAlignment"][@"hash_E821F0ECFF8D1C7"] ) --[[ @ 0]]
	self:addElement( rewardLabel ) --[[ @ 0]]
	self.rewardLabel = rewardLabel --[[ @ 0]]
	
	local WarzoneInventoryUnlockMissionReward = CoD.WarzoneInventoryUnlockMissionReward.new( f1_arg0, f1_arg1, 0, 0.97, 0, 0, 0, 0, 258, 310 ) --[[ @ 0]]
	WarzoneInventoryUnlockMissionReward:linkToElementModel( self, nil, false, function ( model )
		WarzoneInventoryUnlockMissionReward:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( WarzoneInventoryUnlockMissionReward ) --[[ @ 0]]
	self.WarzoneInventoryUnlockMissionReward = WarzoneInventoryUnlockMissionReward --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "AlreadyCompleted",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualTo( element, f1_arg1, "completed", 2 )
			end
		},
		{
			stateName = "AsianLanguages",
			condition = function ( menu, element, event )
				return CoD.BaseUtility.IsCurrentLanguageAsian()
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "completed", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "completed"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( self, "setText", function ( element, controller )
		
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.WarzoneInventoryUnlockMissionObjective.__resetProperties = function ( f22_arg0 )
	f22_arg0.objective1:completeAnimation() --[[ @ 0]]
	f22_arg0.objective2:completeAnimation() --[[ @ 0]]
	f22_arg0.objective3:completeAnimation() --[[ @ 0]]
	f22_arg0.objective4:completeAnimation() --[[ @ 0]]
	f22_arg0.objective5:completeAnimation() --[[ @ 0]]
	f22_arg0.alreadyCompleted:completeAnimation() --[[ @ 0]]
	f22_arg0.description:completeAnimation() --[[ @ 0]]
	f22_arg0.objective1:setTopBottom( 0, 0, 100, 120 ) --[[ @ 0]]
	f22_arg0.objective1:setAlpha( 1 ) --[[ @ 0]]
	f22_arg0.objective1:setLetterSpacing( 1 ) --[[ @ 0]]
	f22_arg0.objective2:setTopBottom( 0, 0, 125, 145 ) --[[ @ 0]]
	f22_arg0.objective2:setAlpha( 1 ) --[[ @ 0]]
	f22_arg0.objective2:setLetterSpacing( 1 ) --[[ @ 0]]
	f22_arg0.objective3:setTopBottom( 0, 0, 150, 170 ) --[[ @ 0]]
	f22_arg0.objective3:setAlpha( 1 ) --[[ @ 0]]
	f22_arg0.objective3:setLetterSpacing( 1 ) --[[ @ 0]]
	f22_arg0.objective4:setTopBottom( 0, 0, 175, 195 ) --[[ @ 0]]
	f22_arg0.objective4:setAlpha( 1 ) --[[ @ 0]]
	f22_arg0.objective4:setLetterSpacing( 1 ) --[[ @ 0]]
	f22_arg0.objective5:setTopBottom( 0, 0, 200, 220 ) --[[ @ 0]]
	f22_arg0.objective5:setRGB( ColorSet.T8__BEIGE__HEADER.r, ColorSet.T8__BEIGE__HEADER.g, ColorSet.T8__BEIGE__HEADER.b ) --[[ @ 0]]
	f22_arg0.objective5:setAlpha( 1 ) --[[ @ 0]]
	f22_arg0.objective5:setLetterSpacing( 1 ) --[[ @ 0]]
	f22_arg0.alreadyCompleted:setAlpha( 0 ) --[[ @ 0]]
	f22_arg0.description:setTopBottom( 0, 0, 0, 20 ) --[[ @ 0]]
	f22_arg0.description:setLetterSpacing( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.WarzoneInventoryUnlockMissionObjective.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f23_arg0, f23_arg1 )
			f23_arg0:__resetProperties() --[[ @ 0]]
			f23_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	AlreadyCompleted = {
		DefaultClip = function ( f24_arg0, f24_arg1 )
			f24_arg0:__resetProperties() --[[ @ 0]]
			f24_arg0:setupElementClipCounter( 6 ) --[[ @ 0]]
			f24_arg0.alreadyCompleted:completeAnimation() --[[ @ 0]]
			f24_arg0.alreadyCompleted:setAlpha( 1 ) --[[ @ 0]]
			f24_arg0.clipFinished( f24_arg0.alreadyCompleted ) --[[ @ 0]]
			f24_arg0.objective1:completeAnimation() --[[ @ 0]]
			f24_arg0.objective1:setAlpha( 0 ) --[[ @ 0]]
			f24_arg0.clipFinished( f24_arg0.objective1 ) --[[ @ 0]]
			f24_arg0.objective2:completeAnimation() --[[ @ 0]]
			f24_arg0.objective2:setAlpha( 0 ) --[[ @ 0]]
			f24_arg0.clipFinished( f24_arg0.objective2 ) --[[ @ 0]]
			f24_arg0.objective3:completeAnimation() --[[ @ 0]]
			f24_arg0.objective3:setAlpha( 0 ) --[[ @ 0]]
			f24_arg0.clipFinished( f24_arg0.objective3 ) --[[ @ 0]]
			f24_arg0.objective4:completeAnimation() --[[ @ 0]]
			f24_arg0.objective4:setAlpha( 0 ) --[[ @ 0]]
			f24_arg0.clipFinished( f24_arg0.objective4 ) --[[ @ 0]]
			f24_arg0.objective5:completeAnimation() --[[ @ 0]]
			f24_arg0.objective5:setAlpha( 0 ) --[[ @ 0]]
			f24_arg0.clipFinished( f24_arg0.objective5 ) --[[ @ 0]]
		end
	},
	AsianLanguages = {
		DefaultClip = function ( f25_arg0, f25_arg1 )
			f25_arg0:__resetProperties() --[[ @ 0]]
			f25_arg0:setupElementClipCounter( 6 ) --[[ @ 0]]
			f25_arg0.description:completeAnimation() --[[ @ 0]]
			f25_arg0.description:setTopBottom( 0, 0, 0, 12 ) --[[ @ 0]]
			f25_arg0.description:setLetterSpacing( 2 ) --[[ @ 0]]
			f25_arg0.clipFinished( f25_arg0.description ) --[[ @ 0]]
			f25_arg0.objective1:completeAnimation() --[[ @ 0]]
			f25_arg0.objective1:setTopBottom( 0, 0, 100, 112 ) --[[ @ 0]]
			f25_arg0.objective1:setLetterSpacing( 2 ) --[[ @ 0]]
			f25_arg0.clipFinished( f25_arg0.objective1 ) --[[ @ 0]]
			f25_arg0.objective2:completeAnimation() --[[ @ 0]]
			f25_arg0.objective2:setTopBottom( 0, 0, 125, 137 ) --[[ @ 0]]
			f25_arg0.objective2:setLetterSpacing( 2 ) --[[ @ 0]]
			f25_arg0.clipFinished( f25_arg0.objective2 ) --[[ @ 0]]
			f25_arg0.objective3:completeAnimation() --[[ @ 0]]
			f25_arg0.objective3:setTopBottom( 0, 0, 150, 162 ) --[[ @ 0]]
			f25_arg0.objective3:setLetterSpacing( 2 ) --[[ @ 0]]
			f25_arg0.clipFinished( f25_arg0.objective3 ) --[[ @ 0]]
			f25_arg0.objective4:completeAnimation() --[[ @ 0]]
			f25_arg0.objective4:setTopBottom( 0, 0, 175, 187 ) --[[ @ 0]]
			f25_arg0.objective4:setLetterSpacing( 2 ) --[[ @ 0]]
			f25_arg0.clipFinished( f25_arg0.objective4 ) --[[ @ 0]]
			f25_arg0.objective5:completeAnimation() --[[ @ 0]]
			f25_arg0.objective5:setTopBottom( 0, 0, 200, 212 ) --[[ @ 0]]
			f25_arg0.objective5:setRGB( 0.66, 0.63, 0.52 ) --[[ @ 0]]
			f25_arg0.objective5:setLetterSpacing( 2 ) --[[ @ 0]]
			f25_arg0.clipFinished( f25_arg0.objective5 ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.WarzoneInventoryUnlockMissionObjective.__onClose = function ( f26_arg0 )
	f26_arg0.WarzoneInventoryUnlockMissionBacking:close() --[[ @ 0]]
	f26_arg0.objective1:close() --[[ @ 0]]
	f26_arg0.objective2:close() --[[ @ 0]]
	f26_arg0.objective3:close() --[[ @ 0]]
	f26_arg0.objective4:close() --[[ @ 0]]
	f26_arg0.objective5:close() --[[ @ 0]]
	f26_arg0.VerticalListSpacer2:close() --[[ @ 0]]
	f26_arg0.WarzoneInventoryUnlockMissionReward:close() --[[ @ 0]]
end
 --[[ @ 0]]
