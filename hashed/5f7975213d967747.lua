-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:50
require( "x64:3f85d1adfa3a0c8e" ) --[[ @ 0]]
require( "x64:1b3af0fce9f653ed" ) --[[ @ 0]]

CoD.Archives_Audio = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.Archives_Audio.__defaultWidth = 1920 --[[ @ 0]]
CoD.Archives_Audio.__defaultHeight = 780 --[[ @ 0]]
CoD.Archives_Audio.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.Archives_Audio ) --[[ @ 0]]
	self.id = "Archives_Audio" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	
	local AudioList = LUI.UIList.new( f1_arg0, f1_arg1, 10, 0, nil, false, false, false, false ) --[[ @ 0]]
	AudioList:setLeftRight( 0.5, 0.5, -760, -250 ) --[[ @ 0]]
	AudioList:setTopBottom( 0.5, 0.5, -339.5, 326.5 ) --[[ @ 0]]
	AudioList:setWidgetType( CoD.ArchivesVideoButton ) --[[ @ 0]]
	AudioList:setVerticalCount( 13 ) --[[ @ 0]]
	AudioList:setSpacing( 10 ) --[[ @ 0]]
	AudioList:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	AudioList:setDataSource( "ArchivesAudioList" ) --[[ @ 0]]
	AudioList:linkToElementModel( AudioList, "alias", true, function ( model, f2_arg1 )
		CoD.Menu.UpdateButtonShownState( f2_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	AudioList:registerEventHandler( "gain_focus", function ( element, event )
		local f3_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f3_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f3_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		return f3_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( AudioList, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"], nil, function ( element, menu, controller, model )
		if CoD.ModelUtility.IsSelfModelValueNonEmptyString( element, controller, "alias" ) and not IsElementInState( element, "MatureContentFiltered" ) then
			CoD.CTUtility.PlayArchivesAudio( menu, controller, element ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if CoD.ModelUtility.IsSelfModelValueNonEmptyString( element, controller, "alias" ) and not IsElementInState( element, "MatureContentFiltered" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"menu/play", nil, nil ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( AudioList, "close", function ( element )
		CoD.CTUtility.StopArchivesAudio( f1_arg0, f1_arg1, element ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( AudioList ) --[[ @ 0]]
	self.AudioList = AudioList --[[ @ 0]]
	
	local ArchivesIntelPreview = CoD.ArchivesIntelPreview.new( f1_arg0, f1_arg1, 0.5, 0.5, 248, 758, 0.5, 0.5, -339.5, 160.5 ) --[[ @ 0]]
	self:addElement( ArchivesIntelPreview ) --[[ @ 0]]
	self.ArchivesIntelPreview = ArchivesIntelPreview --[[ @ 0]]
	
	ArchivesIntelPreview:linkToElementModel( AudioList, nil, false, function ( model )
		ArchivesIntelPreview:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	AudioList.id = "AudioList" --[[ @ 0]]
	self.__defaultFocus = AudioList --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.Archives_Audio.__onClose = function ( f8_arg0 )
	f8_arg0.ArchivesIntelPreview:close() --[[ @ 0]]
	f8_arg0.AudioList:close() --[[ @ 0]]
end
 --[[ @ 0]]
