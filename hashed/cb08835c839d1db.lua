-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:51
require( "ui/uieditor/widgets/hud/zm_fx/zmfx_spark2ext" ) --[[ @ 0]]

CoD.Hud_ZM_Trial_Global_Tracker = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.Hud_ZM_Trial_Global_Tracker.__defaultWidth = 129 --[[ @ 0]]
CoD.Hud_ZM_Trial_Global_Tracker.__defaultHeight = 56 --[[ @ 0]]
CoD.Hud_ZM_Trial_Global_Tracker.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.Hud_ZM_Trial_Global_Tracker ) --[[ @ 0]]
	self.id = "Hud_ZM_Trial_Global_Tracker" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local objBg = LUI.UIImage.new( 0, 0, -1.5, 80.5, 0, 0, 1, 60 ) --[[ @ 0]]
	objBg:setAlpha( 0 ) --[[ @ 0]]
	objBg:setImage( RegisterImage( @"hash_675D661B612187DF" ) ) --[[ @ 0]]
	self:addElement( objBg ) --[[ @ 0]]
	self.objBg = objBg --[[ @ 0]]
	
	local CheckBox2 = LUI.UIImage.new( 0, 0, 0, 45, 0, 0, 5, 50 ) --[[ @ 0]]
	CheckBox2:setImage( RegisterImage( @"hash_63A6C1FB3B354832" ) ) --[[ @ 0]]
	self:addElement( CheckBox2 ) --[[ @ 0]]
	self.CheckBox2 = CheckBox2 --[[ @ 0]]
	
	local white = LUI.UIImage.new( 0, 0, 0, 55, 0, 0, 0, 55 ) --[[ @ 0]]
	white:setAlpha( 0 ) --[[ @ 0]]
	white:setImage( RegisterImage( @"hash_7C7BD74A16D7054B" ) ) --[[ @ 0]]
	self:addElement( white ) --[[ @ 0]]
	self.white = white --[[ @ 0]]
	
	local yellow = LUI.UIImage.new( 0, 0, 0, 55, 0, 0, 0, 55 ) --[[ @ 0]]
	yellow:setRGB( ColorSet.EnemyOrange.r, ColorSet.EnemyOrange.g, ColorSet.EnemyOrange.b ) --[[ @ 0]]
	yellow:setAlpha( 0 ) --[[ @ 0]]
	yellow:setImage( RegisterImage( @"hash_601E5C0EED08D22D" ) ) --[[ @ 0]]
	yellow:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_wipe_normal" ) ) --[[ @ 0]]
	yellow:setShaderVector( 0, 1, 0, 0, 0 ) --[[ @ 0]]
	yellow:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	yellow:setShaderVector( 2, 1, 0, 0, 0 ) --[[ @ 0]]
	yellow:setShaderVector( 3, 0, 0, 0, 0 ) --[[ @ 0]]
	yellow:setShaderVector( 4, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( yellow ) --[[ @ 0]]
	self.yellow = yellow --[[ @ 0]]
	
	local glow = LUI.UIImage.new( 0, 0, 0, 55, 0, 0, 0, 55 ) --[[ @ 0]]
	glow:setRGB( ColorSet.EnemyOrange.r, ColorSet.EnemyOrange.g, ColorSet.EnemyOrange.b ) --[[ @ 0]]
	glow:setAlpha( 0 ) --[[ @ 0]]
	glow:setImage( RegisterImage( @"hash_601E5C0EED08D22D" ) ) --[[ @ 0]]
	self:addElement( glow ) --[[ @ 0]]
	self.glow = glow --[[ @ 0]]
	
	local ZmFxSpark2Ext0 = CoD.ZmFx_Spark2Ext.new( f1_arg0, f1_arg1, 0, 0, -1, 84, 0, 0, -68, 60 ) --[[ @ 0]]
	ZmFxSpark2Ext0:setAlpha( 0 ) --[[ @ 0]]
	ZmFxSpark2Ext0:setZRot( 9 ) --[[ @ 0]]
	ZmFxSpark2Ext0:setRFTMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	self:addElement( ZmFxSpark2Ext0 ) --[[ @ 0]]
	self.ZmFxSpark2Ext0 = ZmFxSpark2Ext0 --[[ @ 0]]
	
	local Counter = LUI.UIText.new( 0, 0, 5.5, 134.5, 0, 0, 22, 49 ) --[[ @ 0]]
	Counter:setTTF( "skorzhen" ) --[[ @ 0]]
	Counter:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	Counter.__String_Reference = function ( f2_arg0 )
		local f2_local0 = f2_arg0:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			Counter:setText( CoD.ZombieUtility.GetGlobalTrialsCounterProgress( self:getModel(), f1_arg1, f2_local0 ) ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	Counter:linkToElementModel( self, "globalCounterValue", true, Counter.__String_Reference ) --[[ @ 0]]
	Counter.__String_Reference_FullPath = function ()
		local f3_local0 = self:getModel() --[[ @ 0]]
		if f3_local0 then
			f3_local0 = self:getModel() --[[ @ 0]]
			f3_local0 = f3_local0.globalCounterValue --[[ @ 0]]
		end
		if f3_local0 then
			Counter.__String_Reference( f3_local0 ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	self:addElement( Counter ) --[[ @ 0]]
	self.Counter = Counter --[[ @ 0]]
	
	Counter:linkToElementModel( self, "globalCounterMax", true, Counter.__String_Reference_FullPath ) --[[ @ 0]]
	self:mergeStateConditions( {
		{
			stateName = "Counter",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualToEnum( element, f1_arg1, "globalCheckState", CoD.ZombieUtility.TrialsInfoStates.STATE_COUNTER ) and not CoD.ModelUtility.IsGlobalModelValueTrue( "ZMHudGlobal.trials.infoHidden" )
			end
		},
		{
			stateName = "Checked",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualToEnum( element, f1_arg1, "globalCheckState", CoD.ZombieUtility.TrialsInfoStates.STATE_CHECKED ) and not CoD.ModelUtility.IsGlobalModelValueTrue( "ZMHudGlobal.trials.infoHidden" )
			end
		},
		{
			stateName = "Unchecked",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualToEnum( element, f1_arg1, "globalCheckState", CoD.ZombieUtility.TrialsInfoStates.STATE_UNCHECKED ) and not CoD.ModelUtility.IsGlobalModelValueTrue( "ZMHudGlobal.trials.infoHidden" )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "globalCheckState", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "globalCheckState"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local f1_local8 = self --[[ @ 0]]
	local f1_local9 = self.subscribeToModel --[[ @ 0]]
	local f1_local10 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local9( f1_local8, f1_local10["ZMHudGlobal.trials.infoHidden"], function ( f8_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f8_arg0:get(),
			modelName = "ZMHudGlobal.trials.infoHidden"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.Hud_ZM_Trial_Global_Tracker.__resetProperties = function ( f9_arg0 )
	f9_arg0.Counter:completeAnimation() --[[ @ 0]]
	f9_arg0.CheckBox2:completeAnimation() --[[ @ 0]]
	f9_arg0.objBg:completeAnimation() --[[ @ 0]]
	f9_arg0.white:completeAnimation() --[[ @ 0]]
	f9_arg0.ZmFxSpark2Ext0:completeAnimation() --[[ @ 0]]
	f9_arg0.glow:completeAnimation() --[[ @ 0]]
	f9_arg0.Counter:setLeftRight( 0, 0, 5.5, 134.5 ) --[[ @ 0]]
	f9_arg0.Counter:setTopBottom( 0, 0, 22, 49 ) --[[ @ 0]]
	f9_arg0.Counter:setAlpha( 1 ) --[[ @ 0]]
	f9_arg0.CheckBox2:setAlpha( 1 ) --[[ @ 0]]
	f9_arg0.CheckBox2:setImage( RegisterImage( @"hash_63A6C1FB3B354832" ) ) --[[ @ 0]]
	f9_arg0.objBg:setLeftRight( 0, 0, -1.5, 80.5 ) --[[ @ 0]]
	f9_arg0.objBg:setAlpha( 0 ) --[[ @ 0]]
	f9_arg0.white:setAlpha( 0 ) --[[ @ 0]]
	f9_arg0.white:setImage( RegisterImage( @"hash_7C7BD74A16D7054B" ) ) --[[ @ 0]]
	f9_arg0.ZmFxSpark2Ext0:setLeftRight( 0, 0, -1, 84 ) --[[ @ 0]]
	f9_arg0.ZmFxSpark2Ext0:setTopBottom( 0, 0, -68, 60 ) --[[ @ 0]]
	f9_arg0.ZmFxSpark2Ext0:setAlpha( 0 ) --[[ @ 0]]
	f9_arg0.glow:setRGB( ColorSet.EnemyOrange.r, ColorSet.EnemyOrange.g, ColorSet.EnemyOrange.b ) --[[ @ 0]]
	f9_arg0.glow:setAlpha( 0 ) --[[ @ 0]]
	f9_arg0.glow:setImage( RegisterImage( @"hash_601E5C0EED08D22D" ) ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.Hud_ZM_Trial_Global_Tracker.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f10_arg0, f10_arg1 )
			f10_arg0:__resetProperties() --[[ @ 0]]
			f10_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f10_arg0.CheckBox2:completeAnimation() --[[ @ 0]]
			f10_arg0.CheckBox2:setAlpha( 0 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.CheckBox2 ) --[[ @ 0]]
			f10_arg0.Counter:completeAnimation() --[[ @ 0]]
			f10_arg0.Counter:setAlpha( 0 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.Counter ) --[[ @ 0]]
		end
	},
	Counter = {
		DefaultClip = function ( f11_arg0, f11_arg1 )
			f11_arg0:__resetProperties() --[[ @ 0]]
			f11_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f11_arg0.objBg:completeAnimation() --[[ @ 0]]
			f11_arg0.objBg:setLeftRight( 0, 0, -7.5, 74.5 ) --[[ @ 0]]
			f11_arg0.objBg:setAlpha( 1 ) --[[ @ 0]]
			f11_arg0.clipFinished( f11_arg0.objBg ) --[[ @ 0]]
			f11_arg0.CheckBox2:completeAnimation() --[[ @ 0]]
			f11_arg0.CheckBox2:setAlpha( 0 ) --[[ @ 0]]
			f11_arg0.clipFinished( f11_arg0.CheckBox2 ) --[[ @ 0]]
		end
	},
	Checked = {
		DefaultClip = function ( f12_arg0, f12_arg1 )
			f12_arg0:__resetProperties() --[[ @ 0]]
			f12_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f12_arg0.CheckBox2:completeAnimation() --[[ @ 0]]
			f12_arg0.CheckBox2:setImage( RegisterImage( @"hash_63A6C1FB3B354832" ) ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.CheckBox2 ) --[[ @ 0]]
			f12_arg0.white:completeAnimation() --[[ @ 0]]
			f12_arg0.white:setAlpha( 1 ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.white ) --[[ @ 0]]
			f12_arg0.Counter:completeAnimation() --[[ @ 0]]
			f12_arg0.Counter:setAlpha( 0 ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.Counter ) --[[ @ 0]]
		end
	},
	Unchecked = {
		DefaultClip = function ( f13_arg0, f13_arg1 )
			f13_arg0:__resetProperties() --[[ @ 0]]
			f13_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f13_arg0.Counter:completeAnimation() --[[ @ 0]]
			f13_arg0.Counter:setAlpha( 0 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.Counter ) --[[ @ 0]]
		end,
		Checked = function ( f14_arg0, f14_arg1 )
			f14_arg0:__resetProperties() --[[ @ 0]]
			f14_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			local f14_local0 = function ( f15_arg0 )
				local f15_local0 = function ( f16_arg0 )
					local f16_local0 = function ( f17_arg0 )
						f17_arg0:beginAnimation( 430 ) --[[ @ 0]]
						f17_arg0:registerEventHandler( "transition_complete_keyframe", f14_arg0.clipFinished ) --[[ @ 0]]
					end
					 --[[ @ 0]]
					f16_arg0:beginAnimation( 279 ) --[[ @ 0]]
					f16_arg0:setAlpha( 1 ) --[[ @ 0]]
					f16_arg0:registerEventHandler( "transition_complete_keyframe", f16_local0 ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f14_arg0.white:beginAnimation( 1150 ) --[[ @ 0]]
				f14_arg0.white:registerEventHandler( "interrupted_keyframe", f14_arg0.clipInterrupted ) --[[ @ 0]]
				f14_arg0.white:registerEventHandler( "transition_complete_keyframe", f15_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f14_arg0.white:completeAnimation() --[[ @ 0]]
			f14_arg0.white:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.white:setImage( RegisterImage( @"hash_7C7BD74A16D7054B" ) ) --[[ @ 0]]
			f14_local0( f14_arg0.white ) --[[ @ 0]]
			local f14_local1 = function ( f18_arg0 )
				local f18_local0 = function ( f19_arg0 )
					local f19_local0 = function ( f20_arg0 )
						local f20_local0 = function ( f21_arg0 )
							f21_arg0:beginAnimation( 670 ) --[[ @ 0]]
							f21_arg0:setAlpha( 0 ) --[[ @ 0]]
							f21_arg0:registerEventHandler( "transition_complete_keyframe", f14_arg0.clipFinished ) --[[ @ 0]]
						end
						 --[[ @ 0]]
						f20_arg0:beginAnimation( 349 ) --[[ @ 0]]
						f20_arg0:registerEventHandler( "transition_complete_keyframe", f20_local0 ) --[[ @ 0]]
					end
					 --[[ @ 0]]
					f19_arg0:beginAnimation( 270 ) --[[ @ 0]]
					f19_arg0:setAlpha( 1 ) --[[ @ 0]]
					f19_arg0:registerEventHandler( "transition_complete_keyframe", f19_local0 ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f14_arg0.glow:beginAnimation( 530 ) --[[ @ 0]]
				f14_arg0.glow:registerEventHandler( "interrupted_keyframe", f14_arg0.clipInterrupted ) --[[ @ 0]]
				f14_arg0.glow:registerEventHandler( "transition_complete_keyframe", f18_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f14_arg0.glow:completeAnimation() --[[ @ 0]]
			f14_arg0.glow:setRGB( ColorSet.EnemyOrange.r, ColorSet.EnemyOrange.g, ColorSet.EnemyOrange.b ) --[[ @ 0]]
			f14_arg0.glow:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.glow:setImage( RegisterImage( @"hash_601E5C0EED08D22D" ) ) --[[ @ 0]]
			f14_local1( f14_arg0.glow ) --[[ @ 0]]
			local f14_local2 = function ( f22_arg0 )
				local f22_local0 = function ( f23_arg0 )
					local f23_local0 = function ( f24_arg0 )
						local f24_local0 = function ( f25_arg0 )
							f25_arg0:beginAnimation( 370 ) --[[ @ 0]]
							f25_arg0:setAlpha( 0 ) --[[ @ 0]]
							f25_arg0:registerEventHandler( "transition_complete_keyframe", f14_arg0.clipFinished ) --[[ @ 0]]
						end
						 --[[ @ 0]]
						f24_arg0:beginAnimation( 590 ) --[[ @ 0]]
						f24_arg0:setLeftRight( 0, 0, 12.5, 97.5 ) --[[ @ 0]]
						f24_arg0:setTopBottom( 0, 0, -103, 25 ) --[[ @ 0]]
						f24_arg0:registerEventHandler( "transition_complete_keyframe", f24_local0 ) --[[ @ 0]]
					end
					 --[[ @ 0]]
					f23_arg0:beginAnimation( 299 ) --[[ @ 0]]
					f23_arg0:setLeftRight( 0, 0, -15, 70 ) --[[ @ 0]]
					f23_arg0:setTopBottom( 0, 0, -73, 55 ) --[[ @ 0]]
					f23_arg0:registerEventHandler( "transition_complete_keyframe", f23_local0 ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f14_arg0.ZmFxSpark2Ext0:beginAnimation( 180 ) --[[ @ 0]]
				f14_arg0.ZmFxSpark2Ext0:setLeftRight( 0, 0, -28.75, 56.25 ) --[[ @ 0]]
				f14_arg0.ZmFxSpark2Ext0:setTopBottom( 0, 0, -85.5, 42.5 ) --[[ @ 0]]
				f14_arg0.ZmFxSpark2Ext0:setAlpha( 1 ) --[[ @ 0]]
				f14_arg0.ZmFxSpark2Ext0:registerEventHandler( "interrupted_keyframe", f14_arg0.clipInterrupted ) --[[ @ 0]]
				f14_arg0.ZmFxSpark2Ext0:registerEventHandler( "transition_complete_keyframe", f22_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f14_arg0.ZmFxSpark2Ext0:completeAnimation() --[[ @ 0]]
			f14_arg0.ZmFxSpark2Ext0:setLeftRight( 0, 0, -37, 48 ) --[[ @ 0]]
			f14_arg0.ZmFxSpark2Ext0:setTopBottom( 0, 0, -93, 35 ) --[[ @ 0]]
			f14_arg0.ZmFxSpark2Ext0:setAlpha( 0 ) --[[ @ 0]]
			f14_local2( f14_arg0.ZmFxSpark2Ext0 ) --[[ @ 0]]
			local f14_local3 = function ( f26_arg0 )
				f14_arg0.Counter:beginAnimation( 1070 ) --[[ @ 0]]
				f14_arg0.Counter:registerEventHandler( "interrupted_keyframe", f14_arg0.clipInterrupted ) --[[ @ 0]]
				f14_arg0.Counter:registerEventHandler( "transition_complete_keyframe", f14_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f14_arg0.Counter:completeAnimation() --[[ @ 0]]
			f14_arg0.Counter:setLeftRight( 0, 0, 48.5, 134.5 ) --[[ @ 0]]
			f14_arg0.Counter:setTopBottom( 0, 0, 18, 55 ) --[[ @ 0]]
			f14_arg0.Counter:setAlpha( 0 ) --[[ @ 0]]
			f14_local3( f14_arg0.Counter ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.Hud_ZM_Trial_Global_Tracker.__onClose = function ( f27_arg0 )
	f27_arg0.ZmFxSpark2Ext0:close() --[[ @ 0]]
	f27_arg0.Counter:close() --[[ @ 0]]
end
 --[[ @ 0]]
