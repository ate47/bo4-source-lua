-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:49
require( "ui/uieditor/widgets/vehiclehuds/mothership/vhud_ms_notificationflir" ) --[[ @ 0]]
require( "ui/uieditor/widgets/vehiclehuds/mothership/vhud_ms_notificationoptic" ) --[[ @ 0]]

CoD.vhud_ms_StatusWidgetBottom = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.vhud_ms_StatusWidgetBottom.__defaultWidth = 208 --[[ @ 0]]
CoD.vhud_ms_StatusWidgetBottom.__defaultHeight = 45 --[[ @ 0]]
CoD.vhud_ms_StatusWidgetBottom.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIHorizontalList.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9, -20, false ) --[[ @ 0]]
	self:setAlignment( LUI.Alignment.Center ) --[[ @ 0]]
	self:setClass( CoD.vhud_ms_StatusWidgetBottom ) --[[ @ 0]]
	self.id = "vhud_ms_StatusWidgetBottom" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local vhudmsNotificationOptic = CoD.vhud_ms_NotificationOptic.new( f1_arg0, f1_arg1, 0.5, 0.5, -107, 15, 0.5, 0.5, -22.5, 22.5 ) --[[ @ 0]]
	vhudmsNotificationOptic:mergeStateConditions( {
		{
			stateName = "Active",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualToEnum( element, f1_arg1, "fullscreenFilter", Enum[@"vehiclefullscreenfilter"][@"vehicle_fullscreen_filter_infrared"] )
			end
		}
	} ) --[[ @ 0]]
	vhudmsNotificationOptic:linkToElementModel( vhudmsNotificationOptic, "fullscreenFilter", true, function ( model )
		f1_arg0:updateElementState( vhudmsNotificationOptic, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "fullscreenFilter"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	vhudmsNotificationOptic:linkToElementModel( self, nil, false, function ( model )
		vhudmsNotificationOptic:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( vhudmsNotificationOptic ) --[[ @ 0]]
	self.vhudmsNotificationOptic = vhudmsNotificationOptic --[[ @ 0]]
	
	local vhudmsNotificationFlir0 = CoD.vhud_ms_NotificationFlir.new( f1_arg0, f1_arg1, 0.5, 0.5, -15, 107, 0.5, 0.5, -22.5, 22.5 ) --[[ @ 0]]
	vhudmsNotificationFlir0:mergeStateConditions( {
		{
			stateName = "Active",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualToEnum( element, f1_arg1, "fullscreenFilter", Enum[@"vehiclefullscreenfilter"][@"vehicle_fullscreen_filter_flir"] )
			end
		}
	} ) --[[ @ 0]]
	vhudmsNotificationFlir0:linkToElementModel( vhudmsNotificationFlir0, "fullscreenFilter", true, function ( model )
		f1_arg0:updateElementState( vhudmsNotificationFlir0, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "fullscreenFilter"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	vhudmsNotificationFlir0:linkToElementModel( self, nil, false, function ( model )
		vhudmsNotificationFlir0:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( vhudmsNotificationFlir0 ) --[[ @ 0]]
	self.vhudmsNotificationFlir0 = vhudmsNotificationFlir0 --[[ @ 0]]
	
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.vhud_ms_StatusWidgetBottom.__onClose = function ( f8_arg0 )
	f8_arg0.vhudmsNotificationOptic:close() --[[ @ 0]]
	f8_arg0.vhudmsNotificationFlir0:close() --[[ @ 0]]
end
 --[[ @ 0]]
