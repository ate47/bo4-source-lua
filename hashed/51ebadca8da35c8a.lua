-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:50
require( "ui/uieditor/widgets/systemoverlays/systemoverlay_fademask" ) --[[ @ 0]]
require( "ui/uieditor/widgets/systemoverlays/systemoverlay_supportwidget" ) --[[ @ 0]]
require( "ui/uieditor/widgets/systemoverlays/systemoverlayspinner" ) --[[ @ 0]]
require( "x64:3e1b76d902bbc762" ) --[[ @ 0]]

CoD.systemOverlay_Compact_BasicFrame = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.systemOverlay_Compact_BasicFrame.__defaultWidth = 1920 --[[ @ 0]]
CoD.systemOverlay_Compact_BasicFrame.__defaultHeight = 286 --[[ @ 0]]
CoD.systemOverlay_Compact_BasicFrame.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.systemOverlay_Compact_BasicFrame ) --[[ @ 0]]
	self.id = "systemOverlay_Compact_BasicFrame" --[[ @ 0]]
	self.soundSet = "overlay" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local supportInfo = CoD.systemOverlay_supportWidget.new( f1_arg0, f1_arg1, 0, 0, 0, 549, 1, 1, -36, 0 ) --[[ @ 0]]
	supportInfo:linkToElementModel( self, nil, false, function ( model )
		supportInfo:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( supportInfo ) --[[ @ 0]]
	self.supportInfo = supportInfo --[[ @ 0]]
	
	local SystemOverlaySpinner = CoD.SystemOverlaySpinner.new( f1_arg0, f1_arg1, 0, 0, 639, 1088, 0, 0, 102.5, 123.5 ) --[[ @ 0]]
	SystemOverlaySpinner:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( SystemOverlaySpinner ) --[[ @ 0]]
	self.SystemOverlaySpinner = SystemOverlaySpinner --[[ @ 0]]
	
	local systemOverlayFadeMask = CoD.systemOverlay_FadeMask.new( f1_arg0, f1_arg1, 0, 0, 254, 750, 0, 0, 0, 286 ) --[[ @ 0]]
	systemOverlayFadeMask:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( systemOverlayFadeMask ) --[[ @ 0]]
	self.systemOverlayFadeMask = systemOverlayFadeMask --[[ @ 0]]
	
	local f1_local4 = nil --[[ @ 0]]
	f1_local4 = LUI.UIElement.createFake() --[[ @ 0]]
	self.foreground = f1_local4 --[[ @ 0]]
	local foregroundPC = nil --[[ @ 0]]
	
	foregroundPC = CoD.systemOverlay_Layout_GenericForeground_PC.new( f1_arg0, f1_arg1, 0, 0, 0, 1920, 0, 0, 0, 286 ) --[[ @ 0]]
	foregroundPC:setAlpha( 0 ) --[[ @ 0]]
	foregroundPC.options:setHorizontalCount( 4 ) --[[ @ 0]]
	foregroundPC:linkToElementModel( self, nil, false, function ( model )
		foregroundPC:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( foregroundPC ) --[[ @ 0]]
	self.foregroundPC = foregroundPC --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "PC",
			condition = function ( menu, element, event )
				return IsPC()
			end
		}
	} ) --[[ @ 0]]
	self.__on_menuOpened_self = function ( f5_arg0, f5_arg1, f5_arg2, f5_arg3 )
		local f5_local0 = self --[[ @ 0]]
		PlaySoundAlias( "uin_warning_generic" ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	f1_arg0:addMenuOpenedCallback( self.__on_menuOpened_self ) --[[ @ 0]]
	f1_local4.id = "foreground" --[[ @ 0]]
	if CoD.isPC then
		foregroundPC.id = "foregroundPC" --[[ @ 0]]
	end
	self.__defaultFocus = f1_local4 --[[ @ 0]]
	self.__on_close_removeOverrides = function ()
		f1_arg0:removeMenuOpenedCallback( self.__on_menuOpened_self ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	local f1_local6 = self --[[ @ 0]]
	if IsPC() then
		SetProperty( self, "__defaultFocus", foregroundPC ) --[[ @ 0]]
	end
	return self
end
 --[[ @ 0]]
CoD.systemOverlay_Compact_BasicFrame.__resetProperties = function ( f7_arg0 )
	f7_arg0.foregroundPC:completeAnimation() --[[ @ 0]]
	f7_arg0.foreground:completeAnimation() --[[ @ 0]]
	f7_arg0.foregroundPC:setLeftRight( 0, 0, 0, 1920 ) --[[ @ 0]]
	f7_arg0.foregroundPC:setTopBottom( 0, 0, 0, 286 ) --[[ @ 0]]
	f7_arg0.foregroundPC:setAlpha( 0 ) --[[ @ 0]]
	f7_arg0.foreground:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.systemOverlay_Compact_BasicFrame.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f8_arg0, f8_arg1 )
			f8_arg0:__resetProperties() --[[ @ 0]]
			f8_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	PC = {
		DefaultClip = function ( f9_arg0, f9_arg1 )
			f9_arg0:__resetProperties() --[[ @ 0]]
			f9_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f9_arg0.foreground:completeAnimation() --[[ @ 0]]
			f9_arg0.foreground:setAlpha( 0 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.foreground ) --[[ @ 0]]
			f9_arg0.foregroundPC:completeAnimation() --[[ @ 0]]
			f9_arg0.foregroundPC:setLeftRight( 0, 0, 0, 1920 ) --[[ @ 0]]
			f9_arg0.foregroundPC:setTopBottom( 0, 0, 0, 294 ) --[[ @ 0]]
			f9_arg0.foregroundPC:setAlpha( 1 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.foregroundPC ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.systemOverlay_Compact_BasicFrame.__onClose = function ( f10_arg0 )
	f10_arg0.__on_close_removeOverrides() --[[ @ 0]]
	f10_arg0.supportInfo:close() --[[ @ 0]]
	f10_arg0.SystemOverlaySpinner:close() --[[ @ 0]]
	f10_arg0.systemOverlayFadeMask:close() --[[ @ 0]]
	f10_arg0.foreground:close() --[[ @ 0]]
	f10_arg0.foregroundPC:close() --[[ @ 0]]
end
 --[[ @ 0]]
