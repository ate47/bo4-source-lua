-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:51
require( "x64:4aa44494b051bf23" ) --[[ @ 0]]
require( "x64:6c4e49820c5fffc4" ) --[[ @ 0]]

CoD.WeaponPickup = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.WeaponPickup.__defaultWidth = 1100 --[[ @ 0]]
CoD.WeaponPickup.__defaultHeight = 250 --[[ @ 0]]
CoD.WeaponPickup.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	CoD.BaseUtility.CreateControllerModel( f1_arg1, "interactivePrompt.activeObjectiveID" ) --[[ @ 0]]
	self:setClass( CoD.WeaponPickup ) --[[ @ 0]]
	self.id = "WeaponPickup" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local LineImage = LUI.UIImage.new( 0.5, 0.5, -4, 4, 1, 1, -180, 0 ) --[[ @ 0]]
	LineImage:setAlpha( 0.25 ) --[[ @ 0]]
	LineImage:setImage( RegisterImage( @"hash_56C9564494BB3117" ) ) --[[ @ 0]]
	self:addElement( LineImage ) --[[ @ 0]]
	self.LineImage = LineImage --[[ @ 0]]
	
	local ArrowImage = LUI.UIImage.new( 0.5, 0.5, -22.5, 22.5, 1, 1, -77.5, -32.5 ) --[[ @ 0]]
	ArrowImage:setImage( RegisterImage( @"uie_ui_hud_weaponpickup_arrow" ) ) --[[ @ 0]]
	self:addElement( ArrowImage ) --[[ @ 0]]
	self.ArrowImage = ArrowImage --[[ @ 0]]
	
	local PickupHintImage = CoD.WeaponPickupWeaponIcon.new( f1_arg0, f1_arg1, 0.5, 0.5, -78, 78, 0, 0, 40, 121 ) --[[ @ 0]]
	self:addElement( PickupHintImage ) --[[ @ 0]]
	self.PickupHintImage = PickupHintImage --[[ @ 0]]
	
	local WeaponPickupPrompt = CoD.WeaponPickupPrompt.new( f1_arg0, f1_arg1, 0.5, 0.5, -550, 550, 0, 0, 0, 40 ) --[[ @ 0]]
	WeaponPickupPrompt:linkToElementModel( self, nil, false, function ( model )
		WeaponPickupPrompt:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( WeaponPickupPrompt ) --[[ @ 0]]
	self.WeaponPickupPrompt = WeaponPickupPrompt --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "ThirdPersonHidden",
			condition = function ( menu, element, event )
				return CoD.HUDUtility.IsMultiplayer() and CoD.WeaponUtility.ShouldHidePickupsForThirdPersonWeapon( f1_arg1 )
			end
		},
		{
			stateName = "GameModeHidden",
			condition = function ( menu, element, event )
				return CoD.HUDUtility.ShouldHideWeaponPickup()
			end
		},
		{
			stateName = "Hacked",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsModelValueGreaterThan( f1_arg1, "hudItems.hacked", 0 )
			end
		},
		{
			stateName = "EMP",
			condition = function ( menu, element, event )
				return IsVisibilityBitSet( f1_arg1, Enum[@"uivisibilitybit"][@"bit_emp_active"] )
			end
		},
		{
			stateName = "ActiveSnap",
			condition = function ( menu, element, event )
				local f7_local0 = CoD.WaypointUtility.IsWeaponPickupActive( f1_arg1, self ) --[[ @ 0]]
				if f7_local0 then
					f7_local0 = CoD.ModelUtility.IsSelfModelValueTrue( self, f1_arg1, "isOffscreen" ) --[[ @ 0]]
					if f7_local0 then
						if not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_final_killcam"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_hud_hardcore"] ) and Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_hud_visible"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_guided_missile"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_killcam"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_remote_killstreak_static"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_remote_missile"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_vehicle"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_is_demo_playing"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_is_flash_banged"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_nemesis_killcam"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_play_of_the_match"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_round_end_killcam"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_scoreboard_open"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_selecting_locational_killstreak"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_spectating_client"] ) then
							f7_local0 = not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_ui_active"] ) --[[ @ 0]]
						else
							f7_local0 = false --[[ @ 0]]
						end
					end
				end
				return f7_local0
			end
		},
		{
			stateName = "Active",
			condition = function ( menu, element, event )
				local f8_local0 = CoD.WaypointUtility.IsWeaponPickupActive( f1_arg1, self ) --[[ @ 0]]
				if f8_local0 then
					if not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_final_killcam"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_hud_hardcore"] ) and Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_hud_visible"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_guided_missile"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_killcam"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_remote_killstreak_static"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_remote_missile"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_vehicle"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_is_demo_playing"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_is_flash_banged"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_nemesis_killcam"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_play_of_the_match"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_round_end_killcam"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_scoreboard_open"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_selecting_locational_killstreak"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_spectating_client"] ) then
						f8_local0 = not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_ui_active"] ) --[[ @ 0]]
					else
						f8_local0 = false --[[ @ 0]]
					end
				end
				return f8_local0
			end
		},
		{
			stateName = "InRangeFar",
			condition = function ( menu, element, event )
				local f9_local0 = CoD.WaypointUtility.IsWeaponPickupInRange( f1_arg1, self ) --[[ @ 0]]
				if f9_local0 then
					f9_local0 = CoD.ModelUtility.IsSelfModelValueEqualTo( element, f1_arg1, "gamemodeFlags", 1 ) --[[ @ 0]]
					if f9_local0 then
						if not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_final_killcam"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_hud_hardcore"] ) and Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_hud_visible"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_guided_missile"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_killcam"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_remote_killstreak_static"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_remote_missile"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_vehicle"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_is_demo_playing"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_is_flash_banged"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_nemesis_killcam"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_play_of_the_match"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_round_end_killcam"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_scoreboard_open"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_selecting_locational_killstreak"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_spectating_client"] ) then
							f9_local0 = not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_ui_active"] ) --[[ @ 0]]
						else
							f9_local0 = false --[[ @ 0]]
						end
					end
				end
				return f9_local0
			end
		},
		{
			stateName = "InRange",
			condition = function ( menu, element, event )
				local f10_local0 = CoD.WaypointUtility.IsWeaponPickupInRange( f1_arg1, self ) --[[ @ 0]]
				if f10_local0 then
					if not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_final_killcam"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_hud_hardcore"] ) and Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_hud_visible"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_guided_missile"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_killcam"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_remote_killstreak_static"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_remote_missile"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_in_vehicle"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_is_demo_playing"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_is_flash_banged"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_nemesis_killcam"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_play_of_the_match"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_round_end_killcam"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_scoreboard_open"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_selecting_locational_killstreak"] ) and not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_spectating_client"] ) then
						f10_local0 = not Engine[@"isvisibilitybitset"]( f1_arg1, Enum[@"uivisibilitybit"][@"bit_ui_active"] ) --[[ @ 0]]
					else
						f10_local0 = false --[[ @ 0]]
					end
				end
				return f10_local0
			end
		}
	} ) --[[ @ 0]]
	local f1_local5 = self --[[ @ 0]]
	local f1_local6 = self.subscribeToModel --[[ @ 0]]
	local f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local6( f1_local5, f1_local7["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_third_person"]], function ( f11_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f11_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_third_person"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local5 = self --[[ @ 0]]
	f1_local6 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local6( f1_local5, f1_local7["hudItems.hacked"], function ( f12_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f12_arg0:get(),
			modelName = "hudItems.hacked"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local5 = self --[[ @ 0]]
	f1_local6 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local6( f1_local5, f1_local7["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_emp_active"]], function ( f13_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f13_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_emp_active"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local5 = self --[[ @ 0]]
	f1_local6 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = DataSources.HUDItems.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local6( f1_local5, f1_local7.showPickupHint, function ( f14_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f14_arg0:get(),
			modelName = "showPickupHint"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local5 = self --[[ @ 0]]
	f1_local6 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = DataSources.HUDItems.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local6( f1_local5, f1_local7["inventory.open"], function ( f15_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f15_arg0:get(),
			modelName = "inventory.open"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local5 = self --[[ @ 0]]
	f1_local6 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local6( f1_local5, f1_local7["interactivePrompt.activeObjectiveID"], function ( f16_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f16_arg0:get(),
			modelName = "interactivePrompt.activeObjectiveID"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:linkToElementModel( self, "isOffscreen", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "isOffscreen"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	f1_local5 = self --[[ @ 0]]
	f1_local6 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local6( f1_local5, f1_local7["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_final_killcam"]], function ( f18_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f18_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_final_killcam"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local5 = self --[[ @ 0]]
	f1_local6 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local6( f1_local5, f1_local7["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_hud_hardcore"]], function ( f19_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f19_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_hud_hardcore"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local5 = self --[[ @ 0]]
	f1_local6 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local6( f1_local5, f1_local7["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_hud_visible"]], function ( f20_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f20_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_hud_visible"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local5 = self --[[ @ 0]]
	f1_local6 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local6( f1_local5, f1_local7["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_guided_missile"]], function ( f21_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f21_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_guided_missile"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local5 = self --[[ @ 0]]
	f1_local6 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local6( f1_local5, f1_local7["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_killcam"]], function ( f22_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f22_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_killcam"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local5 = self --[[ @ 0]]
	f1_local6 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local6( f1_local5, f1_local7["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_remote_killstreak_static"]], function ( f23_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f23_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_remote_killstreak_static"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local5 = self --[[ @ 0]]
	f1_local6 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local6( f1_local5, f1_local7["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_remote_missile"]], function ( f24_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f24_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_remote_missile"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local5 = self --[[ @ 0]]
	f1_local6 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local6( f1_local5, f1_local7["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_vehicle"]], function ( f25_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f25_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_in_vehicle"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local5 = self --[[ @ 0]]
	f1_local6 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local6( f1_local5, f1_local7["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_demo_playing"]], function ( f26_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f26_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_demo_playing"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local5 = self --[[ @ 0]]
	f1_local6 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local6( f1_local5, f1_local7["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_flash_banged"]], function ( f27_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f27_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_is_flash_banged"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local5 = self --[[ @ 0]]
	f1_local6 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local6( f1_local5, f1_local7["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_nemesis_killcam"]], function ( f28_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f28_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_nemesis_killcam"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local5 = self --[[ @ 0]]
	f1_local6 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local6( f1_local5, f1_local7["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_play_of_the_match"]], function ( f29_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f29_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_play_of_the_match"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local5 = self --[[ @ 0]]
	f1_local6 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local6( f1_local5, f1_local7["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_round_end_killcam"]], function ( f30_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f30_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_round_end_killcam"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local5 = self --[[ @ 0]]
	f1_local6 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local6( f1_local5, f1_local7["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_scoreboard_open"]], function ( f31_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f31_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_scoreboard_open"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local5 = self --[[ @ 0]]
	f1_local6 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local6( f1_local5, f1_local7["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_selecting_locational_killstreak"]], function ( f32_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f32_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_selecting_locational_killstreak"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local5 = self --[[ @ 0]]
	f1_local6 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local6( f1_local5, f1_local7["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_spectating_client"]], function ( f33_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f33_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_spectating_client"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local5 = self --[[ @ 0]]
	f1_local6 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local6( f1_local5, f1_local7["UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_ui_active"]], function ( f34_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f34_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"uivisibilitybit"][@"bit_ui_active"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:linkToElementModel( self, "gamemodeFlags", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "gamemodeFlags"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.WeaponPickup.__resetProperties = function ( f36_arg0 )
	f36_arg0.WeaponPickupPrompt:completeAnimation() --[[ @ 0]]
	f36_arg0.LineImage:completeAnimation() --[[ @ 0]]
	f36_arg0.ArrowImage:completeAnimation() --[[ @ 0]]
	f36_arg0.PickupHintImage:completeAnimation() --[[ @ 0]]
	f36_arg0.WeaponPickupPrompt:setTopBottom( 0, 0, 0, 40 ) --[[ @ 0]]
	f36_arg0.WeaponPickupPrompt:setAlpha( 1 ) --[[ @ 0]]
	f36_arg0.LineImage:setTopBottom( 1, 1, -180, 0 ) --[[ @ 0]]
	f36_arg0.LineImage:setAlpha( 0.25 ) --[[ @ 0]]
	f36_arg0.ArrowImage:setTopBottom( 1, 1, -77.5, -32.5 ) --[[ @ 0]]
	f36_arg0.ArrowImage:setAlpha( 1 ) --[[ @ 0]]
	f36_arg0.ArrowImage:setScale( 1, 1 ) --[[ @ 0]]
	f36_arg0.PickupHintImage:setTopBottom( 0, 0, 40, 121 ) --[[ @ 0]]
	f36_arg0.PickupHintImage:setAlpha( 1 ) --[[ @ 0]]
	f36_arg0.PickupHintImage:setScale( 1, 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.WeaponPickup.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f37_arg0, f37_arg1 )
			f37_arg0:__resetProperties() --[[ @ 0]]
			f37_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f37_arg0.LineImage:completeAnimation() --[[ @ 0]]
			f37_arg0.LineImage:setTopBottom( 1, 1, -155, 0 ) --[[ @ 0]]
			f37_arg0.LineImage:setAlpha( 0 ) --[[ @ 0]]
			f37_arg0.clipFinished( f37_arg0.LineImage ) --[[ @ 0]]
			f37_arg0.ArrowImage:completeAnimation() --[[ @ 0]]
			f37_arg0.ArrowImage:setAlpha( 0 ) --[[ @ 0]]
			f37_arg0.clipFinished( f37_arg0.ArrowImage ) --[[ @ 0]]
			f37_arg0.PickupHintImage:completeAnimation() --[[ @ 0]]
			f37_arg0.PickupHintImage:setAlpha( 0 ) --[[ @ 0]]
			f37_arg0.clipFinished( f37_arg0.PickupHintImage ) --[[ @ 0]]
			f37_arg0.WeaponPickupPrompt:completeAnimation() --[[ @ 0]]
			f37_arg0.WeaponPickupPrompt:setAlpha( 0 ) --[[ @ 0]]
			f37_arg0.clipFinished( f37_arg0.WeaponPickupPrompt ) --[[ @ 0]]
		end,
		Active = function ( f38_arg0, f38_arg1 )
			f38_arg0:__resetProperties() --[[ @ 0]]
			f38_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f38_arg0.ArrowImage:completeAnimation() --[[ @ 0]]
			f38_arg0.ArrowImage:setAlpha( 0 ) --[[ @ 0]]
			f38_arg0.clipFinished( f38_arg0.ArrowImage ) --[[ @ 0]]
		end,
		InRangeFar = function ( f39_arg0, f39_arg1 )
			f39_arg0:__resetProperties() --[[ @ 0]]
			f39_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			local f39_local0 = function ( f40_arg0 )
				local f40_local0 = function ( f41_arg0 )
					f41_arg0:beginAnimation( 49 ) --[[ @ 0]]
					f41_arg0:setTopBottom( 1, 1, -34, 0 ) --[[ @ 0]]
					f41_arg0:setAlpha( 1 ) --[[ @ 0]]
					f41_arg0:registerEventHandler( "transition_complete_keyframe", f39_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f39_arg0.LineImage:beginAnimation( 150 ) --[[ @ 0]]
				f39_arg0.LineImage:setTopBottom( 1, 1, -30.5, 0 ) --[[ @ 0]]
				f39_arg0.LineImage:registerEventHandler( "interrupted_keyframe", f39_arg0.clipInterrupted ) --[[ @ 0]]
				f39_arg0.LineImage:registerEventHandler( "transition_complete_keyframe", f40_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f39_arg0.LineImage:completeAnimation() --[[ @ 0]]
			f39_arg0.LineImage:setTopBottom( 1, 1, -20, 0 ) --[[ @ 0]]
			f39_arg0.LineImage:setAlpha( 0 ) --[[ @ 0]]
			f39_local0( f39_arg0.LineImage ) --[[ @ 0]]
			local f39_local1 = function ( f42_arg0 )
				local f42_local0 = function ( f43_arg0 )
					f43_arg0:beginAnimation( 49 ) --[[ @ 0]]
					f43_arg0:setAlpha( 1 ) --[[ @ 0]]
					f43_arg0:registerEventHandler( "transition_complete_keyframe", f39_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f39_arg0.ArrowImage:beginAnimation( 150 ) --[[ @ 0]]
				f39_arg0.ArrowImage:registerEventHandler( "interrupted_keyframe", f39_arg0.clipInterrupted ) --[[ @ 0]]
				f39_arg0.ArrowImage:registerEventHandler( "transition_complete_keyframe", f42_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f39_arg0.ArrowImage:completeAnimation() --[[ @ 0]]
			f39_arg0.ArrowImage:setAlpha( 0 ) --[[ @ 0]]
			f39_local1( f39_arg0.ArrowImage ) --[[ @ 0]]
			f39_arg0.PickupHintImage:completeAnimation() --[[ @ 0]]
			f39_arg0.PickupHintImage:setAlpha( 0 ) --[[ @ 0]]
			f39_arg0.clipFinished( f39_arg0.PickupHintImage ) --[[ @ 0]]
			f39_arg0.WeaponPickupPrompt:completeAnimation() --[[ @ 0]]
			f39_arg0.WeaponPickupPrompt:setAlpha( 0 ) --[[ @ 0]]
			f39_arg0.clipFinished( f39_arg0.WeaponPickupPrompt ) --[[ @ 0]]
		end
	},
	ThirdPersonHidden = {
		DefaultClip = function ( f44_arg0, f44_arg1 )
			f44_arg0:__resetProperties() --[[ @ 0]]
			f44_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f44_arg0.LineImage:completeAnimation() --[[ @ 0]]
			f44_arg0.LineImage:setAlpha( 0 ) --[[ @ 0]]
			f44_arg0.clipFinished( f44_arg0.LineImage ) --[[ @ 0]]
			f44_arg0.ArrowImage:completeAnimation() --[[ @ 0]]
			f44_arg0.ArrowImage:setAlpha( 0 ) --[[ @ 0]]
			f44_arg0.clipFinished( f44_arg0.ArrowImage ) --[[ @ 0]]
			f44_arg0.PickupHintImage:completeAnimation() --[[ @ 0]]
			f44_arg0.PickupHintImage:setAlpha( 0 ) --[[ @ 0]]
			f44_arg0.clipFinished( f44_arg0.PickupHintImage ) --[[ @ 0]]
			f44_arg0.WeaponPickupPrompt:completeAnimation() --[[ @ 0]]
			f44_arg0.WeaponPickupPrompt:setAlpha( 0 ) --[[ @ 0]]
			f44_arg0.clipFinished( f44_arg0.WeaponPickupPrompt ) --[[ @ 0]]
		end
	},
	GameModeHidden = {
		DefaultClip = function ( f45_arg0, f45_arg1 )
			f45_arg0:__resetProperties() --[[ @ 0]]
			f45_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f45_arg0.LineImage:completeAnimation() --[[ @ 0]]
			f45_arg0.LineImage:setAlpha( 0 ) --[[ @ 0]]
			f45_arg0.clipFinished( f45_arg0.LineImage ) --[[ @ 0]]
			f45_arg0.ArrowImage:completeAnimation() --[[ @ 0]]
			f45_arg0.ArrowImage:setAlpha( 0 ) --[[ @ 0]]
			f45_arg0.clipFinished( f45_arg0.ArrowImage ) --[[ @ 0]]
			f45_arg0.PickupHintImage:completeAnimation() --[[ @ 0]]
			f45_arg0.PickupHintImage:setAlpha( 0 ) --[[ @ 0]]
			f45_arg0.clipFinished( f45_arg0.PickupHintImage ) --[[ @ 0]]
			f45_arg0.WeaponPickupPrompt:completeAnimation() --[[ @ 0]]
			f45_arg0.WeaponPickupPrompt:setAlpha( 0 ) --[[ @ 0]]
			f45_arg0.clipFinished( f45_arg0.WeaponPickupPrompt ) --[[ @ 0]]
		end
	},
	Hacked = {
		DefaultClip = function ( f46_arg0, f46_arg1 )
			f46_arg0:__resetProperties() --[[ @ 0]]
			f46_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f46_arg0.LineImage:completeAnimation() --[[ @ 0]]
			f46_arg0.LineImage:setAlpha( 0 ) --[[ @ 0]]
			f46_arg0.clipFinished( f46_arg0.LineImage ) --[[ @ 0]]
			f46_arg0.ArrowImage:completeAnimation() --[[ @ 0]]
			f46_arg0.ArrowImage:setAlpha( 0 ) --[[ @ 0]]
			f46_arg0.clipFinished( f46_arg0.ArrowImage ) --[[ @ 0]]
			f46_arg0.PickupHintImage:completeAnimation() --[[ @ 0]]
			f46_arg0.PickupHintImage:setAlpha( 0 ) --[[ @ 0]]
			f46_arg0.clipFinished( f46_arg0.PickupHintImage ) --[[ @ 0]]
			f46_arg0.WeaponPickupPrompt:completeAnimation() --[[ @ 0]]
			f46_arg0.WeaponPickupPrompt:setAlpha( 0 ) --[[ @ 0]]
			f46_arg0.clipFinished( f46_arg0.WeaponPickupPrompt ) --[[ @ 0]]
		end
	},
	EMP = {
		DefaultClip = function ( f47_arg0, f47_arg1 )
			f47_arg0:__resetProperties() --[[ @ 0]]
			f47_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f47_arg0.LineImage:completeAnimation() --[[ @ 0]]
			f47_arg0.LineImage:setAlpha( 0 ) --[[ @ 0]]
			f47_arg0.clipFinished( f47_arg0.LineImage ) --[[ @ 0]]
			f47_arg0.ArrowImage:completeAnimation() --[[ @ 0]]
			f47_arg0.ArrowImage:setAlpha( 0 ) --[[ @ 0]]
			f47_arg0.clipFinished( f47_arg0.ArrowImage ) --[[ @ 0]]
			f47_arg0.PickupHintImage:completeAnimation() --[[ @ 0]]
			f47_arg0.PickupHintImage:setAlpha( 0 ) --[[ @ 0]]
			f47_arg0.clipFinished( f47_arg0.PickupHintImage ) --[[ @ 0]]
			f47_arg0.WeaponPickupPrompt:completeAnimation() --[[ @ 0]]
			f47_arg0.WeaponPickupPrompt:setAlpha( 0 ) --[[ @ 0]]
			f47_arg0.clipFinished( f47_arg0.WeaponPickupPrompt ) --[[ @ 0]]
		end
	},
	ActiveSnap = {
		DefaultClip = function ( f48_arg0, f48_arg1 )
			f48_arg0:__resetProperties() --[[ @ 0]]
			f48_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f48_arg0.LineImage:completeAnimation() --[[ @ 0]]
			f48_arg0.LineImage:setAlpha( 0 ) --[[ @ 0]]
			f48_arg0.clipFinished( f48_arg0.LineImage ) --[[ @ 0]]
			f48_arg0.ArrowImage:completeAnimation() --[[ @ 0]]
			f48_arg0.ArrowImage:setAlpha( 0 ) --[[ @ 0]]
			f48_arg0.ArrowImage:setScale( 0.15, 0.15 ) --[[ @ 0]]
			f48_arg0.clipFinished( f48_arg0.ArrowImage ) --[[ @ 0]]
			f48_arg0.PickupHintImage:completeAnimation() --[[ @ 0]]
			f48_arg0.PickupHintImage:setTopBottom( 0, 0, 125, 206 ) --[[ @ 0]]
			f48_arg0.clipFinished( f48_arg0.PickupHintImage ) --[[ @ 0]]
			f48_arg0.WeaponPickupPrompt:completeAnimation() --[[ @ 0]]
			f48_arg0.WeaponPickupPrompt:setTopBottom( 0, 0, 85, 125 ) --[[ @ 0]]
			f48_arg0.WeaponPickupPrompt:setAlpha( 1 ) --[[ @ 0]]
			f48_arg0.clipFinished( f48_arg0.WeaponPickupPrompt ) --[[ @ 0]]
		end
	},
	Active = {
		DefaultClip = function ( f49_arg0, f49_arg1 )
			f49_arg0:__resetProperties() --[[ @ 0]]
			f49_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f49_arg0.LineImage:completeAnimation() --[[ @ 0]]
			f49_arg0.LineImage:setAlpha( 0.25 ) --[[ @ 0]]
			f49_arg0.clipFinished( f49_arg0.LineImage ) --[[ @ 0]]
			f49_arg0.ArrowImage:completeAnimation() --[[ @ 0]]
			f49_arg0.ArrowImage:setAlpha( 0 ) --[[ @ 0]]
			f49_arg0.clipFinished( f49_arg0.ArrowImage ) --[[ @ 0]]
			f49_arg0.WeaponPickupPrompt:completeAnimation() --[[ @ 0]]
			f49_arg0.WeaponPickupPrompt:setAlpha( 1 ) --[[ @ 0]]
			f49_arg0.clipFinished( f49_arg0.WeaponPickupPrompt ) --[[ @ 0]]
		end,
		InRange = function ( f50_arg0, f50_arg1 )
			f50_arg0:__resetProperties() --[[ @ 0]]
			f50_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f50_arg0.LineImage:completeAnimation() --[[ @ 0]]
			f50_arg0.LineImage:setTopBottom( 1, 1, -180, 0 ) --[[ @ 0]]
			f50_arg0.LineImage:setAlpha( 0.25 ) --[[ @ 0]]
			f50_arg0.clipFinished( f50_arg0.LineImage ) --[[ @ 0]]
			f50_arg0.ArrowImage:completeAnimation() --[[ @ 0]]
			f50_arg0.ArrowImage:setAlpha( 0 ) --[[ @ 0]]
			f50_arg0.clipFinished( f50_arg0.ArrowImage ) --[[ @ 0]]
			local f50_local0 = function ( f51_arg0 )
				local f51_local0 = function ( f52_arg0 )
					f52_arg0:beginAnimation( 120 ) --[[ @ 0]]
					f52_arg0:setTopBottom( 0, 0, 10, 50 ) --[[ @ 0]]
					f52_arg0:setAlpha( 0 ) --[[ @ 0]]
					f52_arg0:registerEventHandler( "transition_complete_keyframe", f50_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f50_arg0.WeaponPickupPrompt:beginAnimation( 60 ) --[[ @ 0]]
				f50_arg0.WeaponPickupPrompt:setAlpha( 0.67 ) --[[ @ 0]]
				f50_arg0.WeaponPickupPrompt:registerEventHandler( "interrupted_keyframe", f50_arg0.clipInterrupted ) --[[ @ 0]]
				f50_arg0.WeaponPickupPrompt:registerEventHandler( "transition_complete_keyframe", f51_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f50_arg0.WeaponPickupPrompt:completeAnimation() --[[ @ 0]]
			f50_arg0.WeaponPickupPrompt:setTopBottom( 0, 0, 0, 40 ) --[[ @ 0]]
			f50_arg0.WeaponPickupPrompt:setAlpha( 1 ) --[[ @ 0]]
			f50_local0( f50_arg0.WeaponPickupPrompt ) --[[ @ 0]]
		end
	},
	InRangeFar = {
		DefaultClip = function ( f53_arg0, f53_arg1 )
			f53_arg0:__resetProperties() --[[ @ 0]]
			f53_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f53_arg0.LineImage:completeAnimation() --[[ @ 0]]
			f53_arg0.LineImage:setTopBottom( 1, 1, -34, 0 ) --[[ @ 0]]
			f53_arg0.LineImage:setAlpha( 1 ) --[[ @ 0]]
			f53_arg0.clipFinished( f53_arg0.LineImage ) --[[ @ 0]]
			f53_arg0.ArrowImage:completeAnimation() --[[ @ 0]]
			f53_arg0.ArrowImage:setAlpha( 1 ) --[[ @ 0]]
			f53_arg0.clipFinished( f53_arg0.ArrowImage ) --[[ @ 0]]
			f53_arg0.PickupHintImage:completeAnimation() --[[ @ 0]]
			f53_arg0.PickupHintImage:setAlpha( 0 ) --[[ @ 0]]
			f53_arg0.clipFinished( f53_arg0.PickupHintImage ) --[[ @ 0]]
			f53_arg0.WeaponPickupPrompt:completeAnimation() --[[ @ 0]]
			f53_arg0.WeaponPickupPrompt:setAlpha( 0 ) --[[ @ 0]]
			f53_arg0.clipFinished( f53_arg0.WeaponPickupPrompt ) --[[ @ 0]]
		end,
		Active = function ( f54_arg0, f54_arg1 )
			f54_arg0:__resetProperties() --[[ @ 0]]
			f54_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			local f54_local0 = function ( f55_arg0 )
				f54_arg0.LineImage:beginAnimation( 100 ) --[[ @ 0]]
				f54_arg0.LineImage:setTopBottom( 1, 1, -180, 0 ) --[[ @ 0]]
				f54_arg0.LineImage:setAlpha( 0.25 ) --[[ @ 0]]
				f54_arg0.LineImage:registerEventHandler( "interrupted_keyframe", f54_arg0.clipInterrupted ) --[[ @ 0]]
				f54_arg0.LineImage:registerEventHandler( "transition_complete_keyframe", f54_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f54_arg0.LineImage:completeAnimation() --[[ @ 0]]
			f54_arg0.LineImage:setTopBottom( 1, 1, -34, 0 ) --[[ @ 0]]
			f54_arg0.LineImage:setAlpha( 1 ) --[[ @ 0]]
			f54_local0( f54_arg0.LineImage ) --[[ @ 0]]
			local f54_local1 = function ( f56_arg0 )
				local f56_local0 = function ( f57_arg0 )
					f57_arg0:beginAnimation( 59 ) --[[ @ 0]]
					f57_arg0:setAlpha( 0 ) --[[ @ 0]]
					f57_arg0:registerEventHandler( "transition_complete_keyframe", f54_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f54_arg0.ArrowImage:beginAnimation( 100 ) --[[ @ 0]]
				f54_arg0.ArrowImage:setTopBottom( 1, 1, -222.5, -177.5 ) --[[ @ 0]]
				f54_arg0.ArrowImage:registerEventHandler( "interrupted_keyframe", f54_arg0.clipInterrupted ) --[[ @ 0]]
				f54_arg0.ArrowImage:registerEventHandler( "transition_complete_keyframe", f56_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f54_arg0.ArrowImage:completeAnimation() --[[ @ 0]]
			f54_arg0.ArrowImage:setTopBottom( 1, 1, -77.5, -32.5 ) --[[ @ 0]]
			f54_arg0.ArrowImage:setAlpha( 1 ) --[[ @ 0]]
			f54_local1( f54_arg0.ArrowImage ) --[[ @ 0]]
			local f54_local2 = function ( f58_arg0 )
				local f58_local0 = function ( f59_arg0 )
					f59_arg0:beginAnimation( 59 ) --[[ @ 0]]
					f59_arg0:setAlpha( 1 ) --[[ @ 0]]
					f59_arg0:setScale( 1, 1 ) --[[ @ 0]]
					f59_arg0:registerEventHandler( "transition_complete_keyframe", f54_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f54_arg0.PickupHintImage:beginAnimation( 100 ) --[[ @ 0]]
				f54_arg0.PickupHintImage:registerEventHandler( "interrupted_keyframe", f54_arg0.clipInterrupted ) --[[ @ 0]]
				f54_arg0.PickupHintImage:registerEventHandler( "transition_complete_keyframe", f58_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f54_arg0.PickupHintImage:completeAnimation() --[[ @ 0]]
			f54_arg0.PickupHintImage:setAlpha( 0 ) --[[ @ 0]]
			f54_arg0.PickupHintImage:setScale( 0.5, 0.5 ) --[[ @ 0]]
			f54_local2( f54_arg0.PickupHintImage ) --[[ @ 0]]
			local f54_local3 = function ( f60_arg0 )
				local f60_local0 = function ( f61_arg0 )
					local f61_local0 = function ( f62_arg0 )
						f62_arg0:beginAnimation( 60 ) --[[ @ 0]]
						f62_arg0:setAlpha( 1 ) --[[ @ 0]]
						f62_arg0:registerEventHandler( "transition_complete_keyframe", f54_arg0.clipFinished ) --[[ @ 0]]
					end
					 --[[ @ 0]]
					f61_arg0:beginAnimation( 120 ) --[[ @ 0]]
					f61_arg0:setTopBottom( 0, 0, 0, 40 ) --[[ @ 0]]
					f61_arg0:setAlpha( 0.67 ) --[[ @ 0]]
					f61_arg0:registerEventHandler( "transition_complete_keyframe", f61_local0 ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f54_arg0.WeaponPickupPrompt:beginAnimation( 160 ) --[[ @ 0]]
				f54_arg0.WeaponPickupPrompt:registerEventHandler( "interrupted_keyframe", f54_arg0.clipInterrupted ) --[[ @ 0]]
				f54_arg0.WeaponPickupPrompt:registerEventHandler( "transition_complete_keyframe", f60_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f54_arg0.WeaponPickupPrompt:completeAnimation() --[[ @ 0]]
			f54_arg0.WeaponPickupPrompt:setTopBottom( 0, 0, 10, 50 ) --[[ @ 0]]
			f54_arg0.WeaponPickupPrompt:setAlpha( 0 ) --[[ @ 0]]
			f54_local3( f54_arg0.WeaponPickupPrompt ) --[[ @ 0]]
		end,
		DefaultState = function ( f63_arg0, f63_arg1 )
			f63_arg0:__resetProperties() --[[ @ 0]]
			f63_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			local f63_local0 = function ( f64_arg0 )
				f63_arg0.LineImage:beginAnimation( 50 ) --[[ @ 0]]
				f63_arg0.LineImage:setAlpha( 0 ) --[[ @ 0]]
				f63_arg0.LineImage:registerEventHandler( "interrupted_keyframe", f63_arg0.clipInterrupted ) --[[ @ 0]]
				f63_arg0.LineImage:registerEventHandler( "transition_complete_keyframe", f63_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f63_arg0.LineImage:completeAnimation() --[[ @ 0]]
			f63_arg0.LineImage:setTopBottom( 1, 1, -34, 0 ) --[[ @ 0]]
			f63_arg0.LineImage:setAlpha( 1 ) --[[ @ 0]]
			f63_local0( f63_arg0.LineImage ) --[[ @ 0]]
			local f63_local1 = function ( f65_arg0 )
				f63_arg0.ArrowImage:beginAnimation( 50 ) --[[ @ 0]]
				f63_arg0.ArrowImage:setAlpha( 0 ) --[[ @ 0]]
				f63_arg0.ArrowImage:registerEventHandler( "interrupted_keyframe", f63_arg0.clipInterrupted ) --[[ @ 0]]
				f63_arg0.ArrowImage:registerEventHandler( "transition_complete_keyframe", f63_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f63_arg0.ArrowImage:completeAnimation() --[[ @ 0]]
			f63_arg0.ArrowImage:setAlpha( 1 ) --[[ @ 0]]
			f63_local1( f63_arg0.ArrowImage ) --[[ @ 0]]
			f63_arg0.PickupHintImage:completeAnimation() --[[ @ 0]]
			f63_arg0.PickupHintImage:setAlpha( 0 ) --[[ @ 0]]
			f63_arg0.clipFinished( f63_arg0.PickupHintImage ) --[[ @ 0]]
			f63_arg0.WeaponPickupPrompt:completeAnimation() --[[ @ 0]]
			f63_arg0.WeaponPickupPrompt:setAlpha( 0 ) --[[ @ 0]]
			f63_arg0.clipFinished( f63_arg0.WeaponPickupPrompt ) --[[ @ 0]]
		end,
		InRange = function ( f66_arg0, f66_arg1 )
			f66_arg0:__resetProperties() --[[ @ 0]]
			f66_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			local f66_local0 = function ( f67_arg0 )
				f66_arg0.LineImage:beginAnimation( 100 ) --[[ @ 0]]
				f66_arg0.LineImage:setTopBottom( 1, 1, -180, 0 ) --[[ @ 0]]
				f66_arg0.LineImage:setAlpha( 0.25 ) --[[ @ 0]]
				f66_arg0.LineImage:registerEventHandler( "interrupted_keyframe", f66_arg0.clipInterrupted ) --[[ @ 0]]
				f66_arg0.LineImage:registerEventHandler( "transition_complete_keyframe", f66_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f66_arg0.LineImage:completeAnimation() --[[ @ 0]]
			f66_arg0.LineImage:setTopBottom( 1, 1, -34, 0 ) --[[ @ 0]]
			f66_arg0.LineImage:setAlpha( 1 ) --[[ @ 0]]
			f66_local0( f66_arg0.LineImage ) --[[ @ 0]]
			local f66_local1 = function ( f68_arg0 )
				local f68_local0 = function ( f69_arg0 )
					f69_arg0:beginAnimation( 59 ) --[[ @ 0]]
					f69_arg0:setAlpha( 0 ) --[[ @ 0]]
					f69_arg0:registerEventHandler( "transition_complete_keyframe", f66_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f66_arg0.ArrowImage:beginAnimation( 100 ) --[[ @ 0]]
				f66_arg0.ArrowImage:setTopBottom( 1, 1, -222.5, -177.5 ) --[[ @ 0]]
				f66_arg0.ArrowImage:registerEventHandler( "interrupted_keyframe", f66_arg0.clipInterrupted ) --[[ @ 0]]
				f66_arg0.ArrowImage:registerEventHandler( "transition_complete_keyframe", f68_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f66_arg0.ArrowImage:completeAnimation() --[[ @ 0]]
			f66_arg0.ArrowImage:setTopBottom( 1, 1, -77.5, -32.5 ) --[[ @ 0]]
			f66_arg0.ArrowImage:setAlpha( 1 ) --[[ @ 0]]
			f66_local1( f66_arg0.ArrowImage ) --[[ @ 0]]
			local f66_local2 = function ( f70_arg0 )
				local f70_local0 = function ( f71_arg0 )
					f71_arg0:beginAnimation( 59 ) --[[ @ 0]]
					f71_arg0:setAlpha( 1 ) --[[ @ 0]]
					f71_arg0:setScale( 1, 1 ) --[[ @ 0]]
					f71_arg0:registerEventHandler( "transition_complete_keyframe", f66_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f66_arg0.PickupHintImage:beginAnimation( 100 ) --[[ @ 0]]
				f66_arg0.PickupHintImage:registerEventHandler( "interrupted_keyframe", f66_arg0.clipInterrupted ) --[[ @ 0]]
				f66_arg0.PickupHintImage:registerEventHandler( "transition_complete_keyframe", f70_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f66_arg0.PickupHintImage:completeAnimation() --[[ @ 0]]
			f66_arg0.PickupHintImage:setAlpha( 0 ) --[[ @ 0]]
			f66_arg0.PickupHintImage:setScale( 0.5, 0.5 ) --[[ @ 0]]
			f66_local2( f66_arg0.PickupHintImage ) --[[ @ 0]]
			local f66_local3 = function ( f72_arg0 )
				f66_arg0.WeaponPickupPrompt:beginAnimation( 160 ) --[[ @ 0]]
				f66_arg0.WeaponPickupPrompt:registerEventHandler( "interrupted_keyframe", f66_arg0.clipInterrupted ) --[[ @ 0]]
				f66_arg0.WeaponPickupPrompt:registerEventHandler( "transition_complete_keyframe", f66_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f66_arg0.WeaponPickupPrompt:completeAnimation() --[[ @ 0]]
			f66_arg0.WeaponPickupPrompt:setTopBottom( 0, 0, 10, 50 ) --[[ @ 0]]
			f66_arg0.WeaponPickupPrompt:setAlpha( 0 ) --[[ @ 0]]
			f66_local3( f66_arg0.WeaponPickupPrompt ) --[[ @ 0]]
		end
	},
	InRange = {
		DefaultClip = function ( f73_arg0, f73_arg1 )
			f73_arg0:__resetProperties() --[[ @ 0]]
			f73_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f73_arg0.LineImage:completeAnimation() --[[ @ 0]]
			f73_arg0.LineImage:setAlpha( 0.25 ) --[[ @ 0]]
			f73_arg0.clipFinished( f73_arg0.LineImage ) --[[ @ 0]]
			f73_arg0.ArrowImage:completeAnimation() --[[ @ 0]]
			f73_arg0.ArrowImage:setAlpha( 0 ) --[[ @ 0]]
			f73_arg0.clipFinished( f73_arg0.ArrowImage ) --[[ @ 0]]
			f73_arg0.WeaponPickupPrompt:completeAnimation() --[[ @ 0]]
			f73_arg0.WeaponPickupPrompt:setAlpha( 0 ) --[[ @ 0]]
			f73_arg0.clipFinished( f73_arg0.WeaponPickupPrompt ) --[[ @ 0]]
		end,
		Active = function ( f74_arg0, f74_arg1 )
			f74_arg0:__resetProperties() --[[ @ 0]]
			f74_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f74_arg0.LineImage:completeAnimation() --[[ @ 0]]
			f74_arg0.LineImage:setTopBottom( 1, 1, -180, 0 ) --[[ @ 0]]
			f74_arg0.LineImage:setAlpha( 0.25 ) --[[ @ 0]]
			f74_arg0.clipFinished( f74_arg0.LineImage ) --[[ @ 0]]
			f74_arg0.ArrowImage:completeAnimation() --[[ @ 0]]
			f74_arg0.ArrowImage:setAlpha( 0 ) --[[ @ 0]]
			f74_arg0.clipFinished( f74_arg0.ArrowImage ) --[[ @ 0]]
			f74_arg0.WeaponPickupPrompt:completeAnimation() --[[ @ 0]]
			f74_arg0.WeaponPickupPrompt:setAlpha( 1 ) --[[ @ 0]]
			f74_arg0.clipFinished( f74_arg0.WeaponPickupPrompt ) --[[ @ 0]]
		end,
		InRangeFar = function ( f75_arg0, f75_arg1 )
			f75_arg0:__resetProperties() --[[ @ 0]]
			f75_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			local f75_local0 = function ( f76_arg0 )
				local f76_local0 = function ( f77_arg0 )
					f77_arg0:beginAnimation( 100 ) --[[ @ 0]]
					f77_arg0:setTopBottom( 1, 1, -34, 0 ) --[[ @ 0]]
					f77_arg0:setAlpha( 1 ) --[[ @ 0]]
					f77_arg0:registerEventHandler( "transition_complete_keyframe", f75_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f75_arg0.LineImage:beginAnimation( 59 ) --[[ @ 0]]
				f75_arg0.LineImage:registerEventHandler( "interrupted_keyframe", f75_arg0.clipInterrupted ) --[[ @ 0]]
				f75_arg0.LineImage:registerEventHandler( "transition_complete_keyframe", f76_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f75_arg0.LineImage:completeAnimation() --[[ @ 0]]
			f75_arg0.LineImage:setTopBottom( 1, 1, -180, 0 ) --[[ @ 0]]
			f75_arg0.LineImage:setAlpha( 0.25 ) --[[ @ 0]]
			f75_local0( f75_arg0.LineImage ) --[[ @ 0]]
			local f75_local1 = function ( f78_arg0 )
				local f78_local0 = function ( f79_arg0 )
					f79_arg0:beginAnimation( 100 ) --[[ @ 0]]
					f79_arg0:setTopBottom( 1, 1, -77.5, -32.5 ) --[[ @ 0]]
					f79_arg0:registerEventHandler( "transition_complete_keyframe", f75_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f75_arg0.ArrowImage:beginAnimation( 59 ) --[[ @ 0]]
				f75_arg0.ArrowImage:setAlpha( 1 ) --[[ @ 0]]
				f75_arg0.ArrowImage:registerEventHandler( "interrupted_keyframe", f75_arg0.clipInterrupted ) --[[ @ 0]]
				f75_arg0.ArrowImage:registerEventHandler( "transition_complete_keyframe", f78_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f75_arg0.ArrowImage:completeAnimation() --[[ @ 0]]
			f75_arg0.ArrowImage:setTopBottom( 1, 1, -222.5, -177.5 ) --[[ @ 0]]
			f75_arg0.ArrowImage:setAlpha( 0 ) --[[ @ 0]]
			f75_local1( f75_arg0.ArrowImage ) --[[ @ 0]]
			local f75_local2 = function ( f80_arg0 )
				f75_arg0.PickupHintImage:beginAnimation( 60 ) --[[ @ 0]]
				f75_arg0.PickupHintImage:setAlpha( 0 ) --[[ @ 0]]
				f75_arg0.PickupHintImage:setScale( 0.5, 0.5 ) --[[ @ 0]]
				f75_arg0.PickupHintImage:registerEventHandler( "interrupted_keyframe", f75_arg0.clipInterrupted ) --[[ @ 0]]
				f75_arg0.PickupHintImage:registerEventHandler( "transition_complete_keyframe", f75_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f75_arg0.PickupHintImage:completeAnimation() --[[ @ 0]]
			f75_arg0.PickupHintImage:setAlpha( 1 ) --[[ @ 0]]
			f75_arg0.PickupHintImage:setScale( 1, 1 ) --[[ @ 0]]
			f75_local2( f75_arg0.PickupHintImage ) --[[ @ 0]]
			local f75_local3 = function ( f81_arg0 )
				f75_arg0.WeaponPickupPrompt:beginAnimation( 160 ) --[[ @ 0]]
				f75_arg0.WeaponPickupPrompt:registerEventHandler( "interrupted_keyframe", f75_arg0.clipInterrupted ) --[[ @ 0]]
				f75_arg0.WeaponPickupPrompt:registerEventHandler( "transition_complete_keyframe", f75_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f75_arg0.WeaponPickupPrompt:completeAnimation() --[[ @ 0]]
			f75_arg0.WeaponPickupPrompt:setTopBottom( 0, 0, 10, 50 ) --[[ @ 0]]
			f75_arg0.WeaponPickupPrompt:setAlpha( 0 ) --[[ @ 0]]
			f75_local3( f75_arg0.WeaponPickupPrompt ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.WeaponPickup.__onClose = function ( f82_arg0 )
	f82_arg0.PickupHintImage:close() --[[ @ 0]]
	f82_arg0.WeaponPickupPrompt:close() --[[ @ 0]]
end
 --[[ @ 0]]
