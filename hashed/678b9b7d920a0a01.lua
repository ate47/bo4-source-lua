-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
require( "ui/uieditor/widgets/aar_t8/levelup/aarxpmeter" ) --[[ @ 0]]
require( "x64:21e60cbe5188f2c2" ) --[[ @ 0]]
require( "x64:68fd38b89728974a" ) --[[ @ 0]]
require( "x64:22718c2daeffcc4b" ) --[[ @ 0]]
require( "x64:5125bdc86bbab0bf" ) --[[ @ 0]]
require( "x64:7e97ae2edf67ce32" ) --[[ @ 0]]

CoD.MeritReportWidget = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.MeritReportWidget.__defaultWidth = 1920 --[[ @ 0]]
CoD.MeritReportWidget.__defaultHeight = 1080 --[[ @ 0]]
CoD.MeritReportWidget.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.MeritReportWidget ) --[[ @ 0]]
	self.id = "MeritReportWidget" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local MeritOverlayManualHeader = CoD.MeritOverlayManualHeader.new( f1_arg0, f1_arg1, 0.5, 0.5, -960, 960, 0.5, 0.5, -540, 540 ) --[[ @ 0]]
	MeritOverlayManualHeader:mergeStateConditions( {
		{
			stateName = "NoIntro",
			condition = function ( menu, element, event )
				return CoD.BaseUtility.IsSelfInState( self, "ContractsEnabledTabs" )
			end
		}
	} ) --[[ @ 0]]
	MeritOverlayManualHeader:subscribeToGlobalModel( f1_arg1, "AARMeritReport", nil, function ( model )
		MeritOverlayManualHeader:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( MeritOverlayManualHeader ) --[[ @ 0]]
	self.MeritOverlayManualHeader = MeritOverlayManualHeader --[[ @ 0]]
	
	local XpMeter = CoD.AARXpMeter.new( f1_arg0, f1_arg1, 0.5, 0.5, -877, 423, 0.5, 0.5, 464, 484 ) --[[ @ 0]]
	XpMeter:mergeStateConditions( {
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		},
		{
			stateName = "MaxRank",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueGreaterThanOrEqualTo( element, f1_arg1, "rank", CoD.RankUtility.GetRankCap() + 1 )
			end
		}
	} ) --[[ @ 0]]
	XpMeter:linkToElementModel( XpMeter, "rank", true, function ( model )
		f1_arg0:updateElementState( XpMeter, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "rank"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	XpMeter.maxRankText:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_4F80010008304EC0" ) ) --[[ @ 0]]
	XpMeter:subscribeToGlobalModel( f1_arg1, "AARMeritReport", "earnedXpProgress", function ( model )
		local f7_local0 = model:get() --[[ @ 0]]
		if f7_local0 ~= nil then
			XpMeter.EarnedXP.Meter:setShaderVector( 0, CoD.GetVectorComponentFromString( f7_local0, 1 ), CoD.GetVectorComponentFromString( f7_local0, 2 ), CoD.GetVectorComponentFromString( f7_local0, 3 ), CoD.GetVectorComponentFromString( f7_local0, 4 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	XpMeter:subscribeToGlobalModel( f1_arg1, "AARMeritReport", "earnedXpProgress", function ( model )
		local f8_local0 = model:get() --[[ @ 0]]
		if f8_local0 ~= nil then
			XpMeter.EarnedXP.MeterGlow:setShaderVector( 0, CoD.GetVectorComponentFromString( f8_local0, 1 ), CoD.GetVectorComponentFromString( f8_local0, 2 ), CoD.GetVectorComponentFromString( f8_local0, 3 ), CoD.GetVectorComponentFromString( f8_local0, 4 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	XpMeter:subscribeToGlobalModel( f1_arg1, "AARMeritReport", "previousXpProgress", function ( model )
		local f9_local0 = model:get() --[[ @ 0]]
		if f9_local0 ~= nil then
			XpMeter.PreviousXP.Meter:setShaderVector( 0, CoD.GetVectorComponentFromString( f9_local0, 1 ), CoD.GetVectorComponentFromString( f9_local0, 2 ), CoD.GetVectorComponentFromString( f9_local0, 3 ), CoD.GetVectorComponentFromString( f9_local0, 4 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	XpMeter:subscribeToGlobalModel( f1_arg1, "AARMeritReport", "previousXpProgress", function ( model )
		local f10_local0 = model:get() --[[ @ 0]]
		if f10_local0 ~= nil then
			XpMeter.PreviousXP.MeterGlow:setShaderVector( 0, CoD.GetVectorComponentFromString( f10_local0, 1 ), CoD.GetVectorComponentFromString( f10_local0, 2 ), CoD.GetVectorComponentFromString( f10_local0, 3 ), CoD.GetVectorComponentFromString( f10_local0, 4 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	XpMeter:linkToElementModel( self, nil, false, function ( model )
		XpMeter:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	XpMeter:linkToElementModel( self, "earnedXpProgress", true, function ( model )
		local f12_local0 = model:get() --[[ @ 0]]
		if f12_local0 ~= nil then
			XpMeter.EarnedXP.MeterAdd:setShaderVector( 0, CoD.GetVectorComponentFromString( f12_local0, 1 ), CoD.GetVectorComponentFromString( f12_local0, 2 ), CoD.GetVectorComponentFromString( f12_local0, 3 ), CoD.GetVectorComponentFromString( f12_local0, 4 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	XpMeter:linkToElementModel( self, "previousXpProgress", true, function ( model )
		local f13_local0 = model:get() --[[ @ 0]]
		if f13_local0 ~= nil then
			XpMeter.PreviousXP.MeterAdd:setShaderVector( 0, CoD.GetVectorComponentFromString( f13_local0, 1 ), CoD.GetVectorComponentFromString( f13_local0, 2 ), CoD.GetVectorComponentFromString( f13_local0, 3 ), CoD.GetVectorComponentFromString( f13_local0, 4 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	XpMeter:linkToElementModel( self, "xpEarnedDuringMatch", true, function ( model )
		local f14_local0 = model:get() --[[ @ 0]]
		if f14_local0 ~= nil then
			XpMeter.xpEarnedText:setText( CoD.BaseUtility.AlreadyLocalized( f14_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	XpMeter:linkToElementModel( self, "xpNeededForLevelUp", true, function ( model )
		local f15_local0 = model:get() --[[ @ 0]]
		if f15_local0 ~= nil then
			XpMeter.xpNeededText:setText( LocalizeIntoString( @"hash_F8D3A275EFD4C8A", f15_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( XpMeter ) --[[ @ 0]]
	self.XpMeter = XpMeter --[[ @ 0]]
	
	local MeritBoard = CoD.MeritOverlayBoard.new( f1_arg0, f1_arg1, 0, 0, 402.5, 1517.5, 0, 0, 590, 870 ) --[[ @ 0]]
	MeritBoard:linkToElementModel( self, nil, false, function ( model )
		MeritBoard:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( MeritBoard ) --[[ @ 0]]
	self.MeritBoard = MeritBoard --[[ @ 0]]
	
	local MeritBoardWithMedals = CoD.MeritOverlayBoardWithMedals.new( f1_arg0, f1_arg1, 0.5, 0.5, -270, 270, 0.5, 0.5, -232, 396 ) --[[ @ 0]]
	MeritBoardWithMedals:mergeStateConditions( {
		{
			stateName = "NoIntro",
			condition = function ( menu, element, event )
				return CoD.BaseUtility.IsSelfInState( self, "ContractsEnabledTabs" )
			end
		}
	} ) --[[ @ 0]]
	MeritBoardWithMedals:setAlpha( 0 ) --[[ @ 0]]
	MeritBoardWithMedals:linkToElementModel( self, nil, false, function ( model )
		MeritBoardWithMedals:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( MeritBoardWithMedals ) --[[ @ 0]]
	self.MeritBoardWithMedals = MeritBoardWithMedals --[[ @ 0]]
	
	local Echelon = CoD.AAREchelon.new( f1_arg0, f1_arg1, 0.5, 0.5, -200, 200, 0, 0, 150, 550 ) --[[ @ 0]]
	Echelon:linkToElementModel( self, nil, false, function ( model )
		Echelon:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( Echelon ) --[[ @ 0]]
	self.Echelon = Echelon --[[ @ 0]]
	
	local ChallengeCoin = CoD.ChallengeCoin.new( f1_arg0, f1_arg1, 0, 0, 307.5, 507.5, 0, 0, 500, 700 ) --[[ @ 0]]
	ChallengeCoin:setZRot( 7 ) --[[ @ 0]]
	ChallengeCoin:subscribeToGlobalModel( f1_arg1, "AARMeritReport", nil, function ( model )
		ChallengeCoin:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	ChallengeCoin:linkToElementModel( self, "challengeCoinImage", true, function ( model )
		local f21_local0 = model:get() --[[ @ 0]]
		if f21_local0 ~= nil then
			ChallengeCoin.ChallengeCoinImage:setImage( RegisterImage( f21_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	ChallengeCoin:linkToElementModel( self, "challengeCoinImage", true, function ( model )
		local f22_local0 = ChallengeCoin --[[ @ 0]]
		PlayClipOnElement( self, {
			elementName = "ChallengeCoin",
			clipName = "Slam"
		}, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( ChallengeCoin ) --[[ @ 0]]
	self.ChallengeCoin = ChallengeCoin --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "ContractsEnabled",
			condition = function ( menu, element, event )
				return IsBooleanDvarSet( "ui_enableContractsAndBounties" )
			end
		},
		{
			stateName = "ContractsEnabledTabs",
			condition = function ( menu, element, event )
				return true
			end
		}
	} ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( self, "setState", function ( element, controller, f25_arg2, f25_arg3, f25_arg4 )
		UpdateElementState( self, "MeritBoardWithMedals", controller ) --[[ @ 0]]
		UpdateElementState( self, "MeritOverlayManualHeader", controller ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:subscribeToGlobalModel( f1_arg1, "AARMeritReport", "showRank", function ( model )
		local f26_local0 = self --[[ @ 0]]
		CoD.AARUtility.DelayAndOpenMeritMedal( self, f1_arg1, 0.25 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:subscribeToGlobalModel( f1_arg1, "AARMeritReport", "showRankDone", function ( model )
		local f27_local0 = self --[[ @ 0]]
		CoD.AARUtility.DelayAndCloseMeritMedal( self, f1_arg1, 4 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	local f1_local7 = self --[[ @ 0]]
	CoD.AARUtility.SetupAnimateMeritRankUp( self, f1_arg1 ) --[[ @ 0]]
	return self
end
 --[[ @ 0]]
CoD.MeritReportWidget.__resetProperties = function ( f28_arg0 )
	f28_arg0.Echelon:completeAnimation() --[[ @ 0]]
	f28_arg0.MeritBoard:completeAnimation() --[[ @ 0]]
	f28_arg0.XpMeter:completeAnimation() --[[ @ 0]]
	f28_arg0.ChallengeCoin:completeAnimation() --[[ @ 0]]
	f28_arg0.MeritOverlayManualHeader:completeAnimation() --[[ @ 0]]
	f28_arg0.MeritBoardWithMedals:completeAnimation() --[[ @ 0]]
	f28_arg0.Echelon:setAlpha( 1 ) --[[ @ 0]]
	f28_arg0.MeritBoard:setAlpha( 1 ) --[[ @ 0]]
	f28_arg0.XpMeter:setAlpha( 1 ) --[[ @ 0]]
	f28_arg0.ChallengeCoin:setLeftRight( 0, 0, 307.5, 507.5 ) --[[ @ 0]]
	f28_arg0.ChallengeCoin:setTopBottom( 0, 0, 500, 700 ) --[[ @ 0]]
	f28_arg0.ChallengeCoin:setAlpha( 1 ) --[[ @ 0]]
	f28_arg0.ChallengeCoin:setZRot( 7 ) --[[ @ 0]]
	f28_arg0.ChallengeCoin:setScale( 1, 1 ) --[[ @ 0]]
	f28_arg0.MeritOverlayManualHeader:setTopBottom( 0.5, 0.5, -540, 540 ) --[[ @ 0]]
	f28_arg0.MeritOverlayManualHeader:setAlpha( 1 ) --[[ @ 0]]
	f28_arg0.MeritBoardWithMedals:setAlpha( 0 ) --[[ @ 0]]
	f28_arg0.MeritBoardWithMedals:setScale( 1, 1 ) --[[ @ 0]]
	f28_arg0.MeritBoardWithMedals.MeritOverlayManualLayoutVerticalBG.MeritsHeader:setAlpha( 1 ) --[[ @ 0]]
	f28_arg0.MeritBoardWithMedals.MeritOverlayManualLayoutVerticalBG.Title:setAlpha( 1 ) --[[ @ 0]]
	f28_arg0.MeritBoardWithMedals.MeritOverlayManualLayoutVertical:setAlpha( 1 ) --[[ @ 0]]
	f28_arg0.MeritBoardWithMedals.AAREchelon:setAlpha( 1 ) --[[ @ 0]]
	f28_arg0.MeritBoardWithMedals.AAREchelon.blurBg:setAlpha( 0 ) --[[ @ 0]]
	f28_arg0.MeritBoardWithMedals.AAREchelon.NoiseTiledBacking:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.MeritReportWidget.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f29_arg0, f29_arg1 )
			f29_arg0:__resetProperties() --[[ @ 0]]
			f29_arg0:setupElementClipCounter( 5 ) --[[ @ 0]]
			f29_arg0.MeritOverlayManualHeader:completeAnimation() --[[ @ 0]]
			f29_arg0.MeritOverlayManualHeader:setAlpha( 0 ) --[[ @ 0]]
			f29_arg0.clipFinished( f29_arg0.MeritOverlayManualHeader ) --[[ @ 0]]
			local f29_local0 = function ( f30_arg0 )
				local f30_local0 = function ( f31_arg0 )
					f31_arg0:beginAnimation( 99, Enum[@"hash_1F50FFF429AB1890"][@"hash_66F6186B702830BC"] ) --[[ @ 0]]
					f31_arg0:setAlpha( 1 ) --[[ @ 0]]
					f31_arg0:registerEventHandler( "transition_complete_keyframe", f29_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f29_arg0.XpMeter:beginAnimation( 350 ) --[[ @ 0]]
				f29_arg0.XpMeter:registerEventHandler( "interrupted_keyframe", f29_arg0.clipInterrupted ) --[[ @ 0]]
				f29_arg0.XpMeter:registerEventHandler( "transition_complete_keyframe", f30_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f29_arg0.XpMeter:completeAnimation() --[[ @ 0]]
			f29_arg0.XpMeter:setAlpha( 0 ) --[[ @ 0]]
			f29_local0( f29_arg0.XpMeter ) --[[ @ 0]]
			local f29_local1 = function ( f32_arg0 )
				local f32_local0 = function ( f33_arg0 )
					f33_arg0:beginAnimation( 150 ) --[[ @ 0]]
					f33_arg0:setAlpha( 1 ) --[[ @ 0]]
					f33_arg0:registerEventHandler( "transition_complete_keyframe", f29_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f29_arg0.MeritBoard:beginAnimation( 150 ) --[[ @ 0]]
				f29_arg0.MeritBoard:registerEventHandler( "interrupted_keyframe", f29_arg0.clipInterrupted ) --[[ @ 0]]
				f29_arg0.MeritBoard:registerEventHandler( "transition_complete_keyframe", f32_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f29_arg0.MeritBoard:completeAnimation() --[[ @ 0]]
			f29_arg0.MeritBoard:setAlpha( 0 ) --[[ @ 0]]
			f29_local1( f29_arg0.MeritBoard ) --[[ @ 0]]
			local f29_local2 = function ( f34_arg0 )
				f29_arg0.Echelon:beginAnimation( 100, Enum[@"hash_1F50FFF429AB1890"][@"hash_2053CEB9A0427197"] ) --[[ @ 0]]
				f29_arg0.Echelon:setAlpha( 1 ) --[[ @ 0]]
				f29_arg0.Echelon:registerEventHandler( "interrupted_keyframe", f29_arg0.clipInterrupted ) --[[ @ 0]]
				f29_arg0.Echelon:registerEventHandler( "transition_complete_keyframe", f29_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f29_arg0.Echelon:completeAnimation() --[[ @ 0]]
			f29_arg0.Echelon:setAlpha( 0 ) --[[ @ 0]]
			f29_local2( f29_arg0.Echelon ) --[[ @ 0]]
			local f29_local3 = function ( f35_arg0 )
				local f35_local0 = function ( f36_arg0 )
					local f36_local0 = function ( f37_arg0 )
						f37_arg0:beginAnimation( 50 ) --[[ @ 0]]
						f37_arg0:setAlpha( 1 ) --[[ @ 0]]
						f37_arg0:setScale( 1, 1 ) --[[ @ 0]]
						f37_arg0:registerEventHandler( "transition_complete_keyframe", f29_arg0.clipFinished ) --[[ @ 0]]
					end
					 --[[ @ 0]]
					f36_arg0:beginAnimation( 150, Enum[@"hash_1F50FFF429AB1890"][@"hash_2053CEB9A0427197"] ) --[[ @ 0]]
					f36_arg0:setAlpha( 0.75 ) --[[ @ 0]]
					f36_arg0:setZRot( 7 ) --[[ @ 0]]
					f36_arg0:setScale( 0.97, 0.97 ) --[[ @ 0]]
					f36_arg0:registerEventHandler( "transition_complete_keyframe", f36_local0 ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f29_arg0.ChallengeCoin:beginAnimation( 400 ) --[[ @ 0]]
				f29_arg0.ChallengeCoin:registerEventHandler( "interrupted_keyframe", f29_arg0.clipInterrupted ) --[[ @ 0]]
				f29_arg0.ChallengeCoin:registerEventHandler( "transition_complete_keyframe", f35_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f29_arg0.ChallengeCoin:completeAnimation() --[[ @ 0]]
			f29_arg0.ChallengeCoin:setAlpha( 0 ) --[[ @ 0]]
			f29_arg0.ChallengeCoin:setZRot( 30 ) --[[ @ 0]]
			f29_arg0.ChallengeCoin:setScale( 2.5, 2.5 ) --[[ @ 0]]
			f29_local3( f29_arg0.ChallengeCoin ) --[[ @ 0]]
		end
	},
	ContractsEnabled = {
		DefaultClip = function ( f38_arg0, f38_arg1 )
			f38_arg0:__resetProperties() --[[ @ 0]]
			f38_arg0:setupElementClipCounter( 6 ) --[[ @ 0]]
			f38_arg0.MeritOverlayManualHeader:completeAnimation() --[[ @ 0]]
			f38_arg0.MeritOverlayManualHeader:setAlpha( 1 ) --[[ @ 0]]
			f38_arg0.clipFinished( f38_arg0.MeritOverlayManualHeader ) --[[ @ 0]]
			f38_arg0.XpMeter:completeAnimation() --[[ @ 0]]
			f38_arg0.XpMeter:setAlpha( 0 ) --[[ @ 0]]
			f38_arg0.clipFinished( f38_arg0.XpMeter ) --[[ @ 0]]
			f38_arg0.MeritBoard:completeAnimation() --[[ @ 0]]
			f38_arg0.MeritBoard:setAlpha( 0 ) --[[ @ 0]]
			f38_arg0.clipFinished( f38_arg0.MeritBoard ) --[[ @ 0]]
			local f38_local0 = function ( f39_arg0 )
				local f39_local0 = function ( f40_arg0 )
					local f40_local0 = function ( f41_arg0 )
						f41_arg0:beginAnimation( 50 ) --[[ @ 0]]
						f41_arg0:setAlpha( 1 ) --[[ @ 0]]
						f41_arg0:setScale( 1, 1 ) --[[ @ 0]]
						f41_arg0:registerEventHandler( "transition_complete_keyframe", f38_arg0.clipFinished ) --[[ @ 0]]
					end
					 --[[ @ 0]]
					f40_arg0:beginAnimation( 99 ) --[[ @ 0]]
					f40_arg0:setAlpha( 0.67 ) --[[ @ 0]]
					f40_arg0:setScale( 0.9, 0.9 ) --[[ @ 0]]
					f40_arg0:registerEventHandler( "transition_complete_keyframe", f40_local0 ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f38_arg0.MeritBoardWithMedals:beginAnimation( 150 ) --[[ @ 0]]
				f38_arg0.MeritBoardWithMedals:setScale( 1.54, 1.54 ) --[[ @ 0]]
				f38_arg0.MeritBoardWithMedals:registerEventHandler( "interrupted_keyframe", f38_arg0.clipInterrupted ) --[[ @ 0]]
				f38_arg0.MeritBoardWithMedals:registerEventHandler( "transition_complete_keyframe", f39_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f38_arg0.MeritBoardWithMedals:completeAnimation() --[[ @ 0]]
			f38_arg0.MeritBoardWithMedals.MeritOverlayManualLayoutVerticalBG.MeritsHeader:completeAnimation() --[[ @ 0]]
			f38_arg0.MeritBoardWithMedals.MeritOverlayManualLayoutVerticalBG.Title:completeAnimation() --[[ @ 0]]
			f38_arg0.MeritBoardWithMedals.MeritOverlayManualLayoutVertical:completeAnimation() --[[ @ 0]]
			f38_arg0.MeritBoardWithMedals.AAREchelon:completeAnimation() --[[ @ 0]]
			f38_arg0.MeritBoardWithMedals.AAREchelon.blurBg:completeAnimation() --[[ @ 0]]
			f38_arg0.MeritBoardWithMedals.AAREchelon.NoiseTiledBacking:completeAnimation() --[[ @ 0]]
			f38_arg0.MeritBoardWithMedals:setAlpha( 0 ) --[[ @ 0]]
			f38_arg0.MeritBoardWithMedals:setScale( 2.5, 2.5 ) --[[ @ 0]]
			f38_arg0.MeritBoardWithMedals.MeritOverlayManualLayoutVerticalBG.MeritsHeader:setAlpha( 1 ) --[[ @ 0]]
			f38_arg0.MeritBoardWithMedals.MeritOverlayManualLayoutVerticalBG.Title:setAlpha( 1 ) --[[ @ 0]]
			f38_arg0.MeritBoardWithMedals.MeritOverlayManualLayoutVertical:setAlpha( 1 ) --[[ @ 0]]
			f38_arg0.MeritBoardWithMedals.AAREchelon:setAlpha( 0 ) --[[ @ 0]]
			f38_arg0.MeritBoardWithMedals.AAREchelon.blurBg:setAlpha( 0 ) --[[ @ 0]]
			f38_arg0.MeritBoardWithMedals.AAREchelon.NoiseTiledBacking:setAlpha( 1 ) --[[ @ 0]]
			f38_local0( f38_arg0.MeritBoardWithMedals ) --[[ @ 0]]
			f38_arg0.Echelon:completeAnimation() --[[ @ 0]]
			f38_arg0.Echelon:setAlpha( 0 ) --[[ @ 0]]
			f38_arg0.clipFinished( f38_arg0.Echelon ) --[[ @ 0]]
			local f38_local1 = function ( f42_arg0 )
				local f42_local0 = function ( f43_arg0 )
					local f43_local0 = function ( f44_arg0 )
						f44_arg0:beginAnimation( 50 ) --[[ @ 0]]
						f44_arg0:setAlpha( 1 ) --[[ @ 0]]
						f44_arg0:setScale( 1, 1 ) --[[ @ 0]]
						f44_arg0:registerEventHandler( "transition_complete_keyframe", f38_arg0.clipFinished ) --[[ @ 0]]
					end
					 --[[ @ 0]]
					f43_arg0:beginAnimation( 149, Enum[@"hash_1F50FFF429AB1890"][@"hash_2053CEB9A0427197"] ) --[[ @ 0]]
					f43_arg0:setAlpha( 0.75 ) --[[ @ 0]]
					f43_arg0:setScale( 0.97, 0.97 ) --[[ @ 0]]
					f43_arg0:registerEventHandler( "transition_complete_keyframe", f43_local0 ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f38_arg0.ChallengeCoin:beginAnimation( 430 ) --[[ @ 0]]
				f38_arg0.ChallengeCoin:registerEventHandler( "interrupted_keyframe", f38_arg0.clipInterrupted ) --[[ @ 0]]
				f38_arg0.ChallengeCoin:registerEventHandler( "transition_complete_keyframe", f42_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f38_arg0.ChallengeCoin:completeAnimation() --[[ @ 0]]
			f38_arg0.ChallengeCoin:setLeftRight( 0, 0, 1564.5, 1764.5 ) --[[ @ 0]]
			f38_arg0.ChallengeCoin:setTopBottom( 0, 0, 40, 240 ) --[[ @ 0]]
			f38_arg0.ChallengeCoin:setAlpha( 0 ) --[[ @ 0]]
			f38_arg0.ChallengeCoin:setZRot( 0 ) --[[ @ 0]]
			f38_arg0.ChallengeCoin:setScale( 2.5, 2.5 ) --[[ @ 0]]
			f38_local1( f38_arg0.ChallengeCoin ) --[[ @ 0]]
		end,
		MedalIntro = function ( f45_arg0, f45_arg1 )
			f45_arg0:__resetProperties() --[[ @ 0]]
			f45_arg0:setupElementClipCounter( 6 ) --[[ @ 0]]
			f45_arg0.MeritOverlayManualHeader:completeAnimation() --[[ @ 0]]
			f45_arg0.MeritOverlayManualHeader:setAlpha( 1 ) --[[ @ 0]]
			f45_arg0.clipFinished( f45_arg0.MeritOverlayManualHeader ) --[[ @ 0]]
			f45_arg0.XpMeter:completeAnimation() --[[ @ 0]]
			f45_arg0.XpMeter:setAlpha( 0 ) --[[ @ 0]]
			f45_arg0.clipFinished( f45_arg0.XpMeter ) --[[ @ 0]]
			f45_arg0.MeritBoard:completeAnimation() --[[ @ 0]]
			f45_arg0.MeritBoard:setAlpha( 0 ) --[[ @ 0]]
			f45_arg0.clipFinished( f45_arg0.MeritBoard ) --[[ @ 0]]
			local f45_local0 = function ( f46_arg0 )
				f45_arg0.MeritBoardWithMedals:beginAnimation( 100 ) --[[ @ 0]]
				f45_arg0.MeritBoardWithMedals.MeritOverlayManualLayoutVerticalBG.MeritsHeader:beginAnimation( 100 ) --[[ @ 0]]
				f45_arg0.MeritBoardWithMedals.MeritOverlayManualLayoutVertical:beginAnimation( 100 ) --[[ @ 0]]
				f45_arg0.MeritBoardWithMedals.AAREchelon:beginAnimation( 100 ) --[[ @ 0]]
				f45_arg0.MeritBoardWithMedals.MeritOverlayManualLayoutVerticalBG.MeritsHeader:setAlpha( 0 ) --[[ @ 0]]
				f45_arg0.MeritBoardWithMedals.MeritOverlayManualLayoutVertical:setAlpha( 0 ) --[[ @ 0]]
				f45_arg0.MeritBoardWithMedals.AAREchelon:setAlpha( 1 ) --[[ @ 0]]
				f45_arg0.MeritBoardWithMedals:registerEventHandler( "interrupted_keyframe", f45_arg0.clipInterrupted ) --[[ @ 0]]
				f45_arg0.MeritBoardWithMedals:registerEventHandler( "transition_complete_keyframe", f45_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f45_arg0.MeritBoardWithMedals:completeAnimation() --[[ @ 0]]
			f45_arg0.MeritBoardWithMedals.MeritOverlayManualLayoutVerticalBG.MeritsHeader:completeAnimation() --[[ @ 0]]
			f45_arg0.MeritBoardWithMedals.MeritOverlayManualLayoutVerticalBG.Title:completeAnimation() --[[ @ 0]]
			f45_arg0.MeritBoardWithMedals.MeritOverlayManualLayoutVertical:completeAnimation() --[[ @ 0]]
			f45_arg0.MeritBoardWithMedals.AAREchelon:completeAnimation() --[[ @ 0]]
			f45_arg0.MeritBoardWithMedals:setAlpha( 1 ) --[[ @ 0]]
			f45_arg0.MeritBoardWithMedals:setScale( 1, 1 ) --[[ @ 0]]
			f45_arg0.MeritBoardWithMedals.MeritOverlayManualLayoutVerticalBG.MeritsHeader:setAlpha( 1 ) --[[ @ 0]]
			f45_arg0.MeritBoardWithMedals.MeritOverlayManualLayoutVerticalBG.Title:setAlpha( 1 ) --[[ @ 0]]
			f45_arg0.MeritBoardWithMedals.MeritOverlayManualLayoutVertical:setAlpha( 1 ) --[[ @ 0]]
			f45_arg0.MeritBoardWithMedals.AAREchelon:setAlpha( 0 ) --[[ @ 0]]
			f45_local0( f45_arg0.MeritBoardWithMedals ) --[[ @ 0]]
			f45_arg0.Echelon:completeAnimation() --[[ @ 0]]
			f45_arg0.Echelon:setAlpha( 0 ) --[[ @ 0]]
			f45_arg0.clipFinished( f45_arg0.Echelon ) --[[ @ 0]]
			f45_arg0.ChallengeCoin:completeAnimation() --[[ @ 0]]
			f45_arg0.ChallengeCoin:setLeftRight( 0, 0, 1564.5, 1764.5 ) --[[ @ 0]]
			f45_arg0.ChallengeCoin:setTopBottom( 0, 0, 40, 240 ) --[[ @ 0]]
			f45_arg0.ChallengeCoin:setAlpha( 1 ) --[[ @ 0]]
			f45_arg0.ChallengeCoin:setZRot( 0 ) --[[ @ 0]]
			f45_arg0.ChallengeCoin:setScale( 1, 1 ) --[[ @ 0]]
			f45_arg0.clipFinished( f45_arg0.ChallengeCoin ) --[[ @ 0]]
		end,
		MedalOutro = function ( f47_arg0, f47_arg1 )
			f47_arg0:__resetProperties() --[[ @ 0]]
			f47_arg0:setupElementClipCounter( 6 ) --[[ @ 0]]
			f47_arg0.MeritOverlayManualHeader:completeAnimation() --[[ @ 0]]
			f47_arg0.MeritOverlayManualHeader:setAlpha( 1 ) --[[ @ 0]]
			f47_arg0.clipFinished( f47_arg0.MeritOverlayManualHeader ) --[[ @ 0]]
			f47_arg0.XpMeter:completeAnimation() --[[ @ 0]]
			f47_arg0.XpMeter:setAlpha( 0 ) --[[ @ 0]]
			f47_arg0.clipFinished( f47_arg0.XpMeter ) --[[ @ 0]]
			f47_arg0.MeritBoard:completeAnimation() --[[ @ 0]]
			f47_arg0.MeritBoard:setAlpha( 0 ) --[[ @ 0]]
			f47_arg0.clipFinished( f47_arg0.MeritBoard ) --[[ @ 0]]
			local f47_local0 = function ( f48_arg0 )
				f47_arg0.MeritBoardWithMedals:beginAnimation( 300 ) --[[ @ 0]]
				f47_arg0.MeritBoardWithMedals.MeritOverlayManualLayoutVerticalBG.MeritsHeader:beginAnimation( 300 ) --[[ @ 0]]
				f47_arg0.MeritBoardWithMedals.MeritOverlayManualLayoutVertical:beginAnimation( 300 ) --[[ @ 0]]
				f47_arg0.MeritBoardWithMedals.AAREchelon:beginAnimation( 300 ) --[[ @ 0]]
				f47_arg0.MeritBoardWithMedals.MeritOverlayManualLayoutVerticalBG.MeritsHeader:setAlpha( 1 ) --[[ @ 0]]
				f47_arg0.MeritBoardWithMedals.MeritOverlayManualLayoutVertical:setAlpha( 1 ) --[[ @ 0]]
				f47_arg0.MeritBoardWithMedals.AAREchelon:setAlpha( 0 ) --[[ @ 0]]
				f47_arg0.MeritBoardWithMedals:registerEventHandler( "interrupted_keyframe", f47_arg0.clipInterrupted ) --[[ @ 0]]
				f47_arg0.MeritBoardWithMedals:registerEventHandler( "transition_complete_keyframe", f47_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f47_arg0.MeritBoardWithMedals:completeAnimation() --[[ @ 0]]
			f47_arg0.MeritBoardWithMedals.MeritOverlayManualLayoutVerticalBG.MeritsHeader:completeAnimation() --[[ @ 0]]
			f47_arg0.MeritBoardWithMedals.MeritOverlayManualLayoutVerticalBG.Title:completeAnimation() --[[ @ 0]]
			f47_arg0.MeritBoardWithMedals.MeritOverlayManualLayoutVertical:completeAnimation() --[[ @ 0]]
			f47_arg0.MeritBoardWithMedals.AAREchelon:completeAnimation() --[[ @ 0]]
			f47_arg0.MeritBoardWithMedals:setAlpha( 1 ) --[[ @ 0]]
			f47_arg0.MeritBoardWithMedals:setScale( 1, 1 ) --[[ @ 0]]
			f47_arg0.MeritBoardWithMedals.MeritOverlayManualLayoutVerticalBG.MeritsHeader:setAlpha( 0 ) --[[ @ 0]]
			f47_arg0.MeritBoardWithMedals.MeritOverlayManualLayoutVerticalBG.Title:setAlpha( 1 ) --[[ @ 0]]
			f47_arg0.MeritBoardWithMedals.MeritOverlayManualLayoutVertical:setAlpha( 0 ) --[[ @ 0]]
			f47_arg0.MeritBoardWithMedals.AAREchelon:setAlpha( 1 ) --[[ @ 0]]
			f47_local0( f47_arg0.MeritBoardWithMedals ) --[[ @ 0]]
			f47_arg0.Echelon:completeAnimation() --[[ @ 0]]
			f47_arg0.Echelon:setAlpha( 0 ) --[[ @ 0]]
			f47_arg0.clipFinished( f47_arg0.Echelon ) --[[ @ 0]]
			f47_arg0.ChallengeCoin:completeAnimation() --[[ @ 0]]
			f47_arg0.ChallengeCoin:setLeftRight( 0, 0, 1564.5, 1764.5 ) --[[ @ 0]]
			f47_arg0.ChallengeCoin:setTopBottom( 0, 0, 40, 240 ) --[[ @ 0]]
			f47_arg0.ChallengeCoin:setAlpha( 1 ) --[[ @ 0]]
			f47_arg0.ChallengeCoin:setZRot( 0 ) --[[ @ 0]]
			f47_arg0.ChallengeCoin:setScale( 1, 1 ) --[[ @ 0]]
			f47_arg0.clipFinished( f47_arg0.ChallengeCoin ) --[[ @ 0]]
		end
	},
	ContractsEnabledTabs = {
		DefaultClip = function ( f49_arg0, f49_arg1 )
			f49_arg0:__resetProperties() --[[ @ 0]]
			f49_arg0:setupElementClipCounter( 6 ) --[[ @ 0]]
			f49_arg0.MeritOverlayManualHeader:completeAnimation() --[[ @ 0]]
			f49_arg0.MeritOverlayManualHeader:setTopBottom( 0.5, 0.5, -480, 600 ) --[[ @ 0]]
			f49_arg0.MeritOverlayManualHeader:setAlpha( 1 ) --[[ @ 0]]
			f49_arg0.clipFinished( f49_arg0.MeritOverlayManualHeader ) --[[ @ 0]]
			f49_arg0.XpMeter:completeAnimation() --[[ @ 0]]
			f49_arg0.XpMeter:setAlpha( 0 ) --[[ @ 0]]
			f49_arg0.clipFinished( f49_arg0.XpMeter ) --[[ @ 0]]
			f49_arg0.MeritBoard:completeAnimation() --[[ @ 0]]
			f49_arg0.MeritBoard:setAlpha( 0 ) --[[ @ 0]]
			f49_arg0.clipFinished( f49_arg0.MeritBoard ) --[[ @ 0]]
			f49_arg0.MeritBoardWithMedals:completeAnimation() --[[ @ 0]]
			f49_arg0.MeritBoardWithMedals.AAREchelon:completeAnimation() --[[ @ 0]]
			f49_arg0.MeritBoardWithMedals:setAlpha( 1 ) --[[ @ 0]]
			f49_arg0.MeritBoardWithMedals:setScale( 1, 1 ) --[[ @ 0]]
			f49_arg0.MeritBoardWithMedals.AAREchelon:setAlpha( 0 ) --[[ @ 0]]
			f49_arg0.clipFinished( f49_arg0.MeritBoardWithMedals ) --[[ @ 0]]
			f49_arg0.Echelon:completeAnimation() --[[ @ 0]]
			f49_arg0.Echelon:setAlpha( 0 ) --[[ @ 0]]
			f49_arg0.clipFinished( f49_arg0.Echelon ) --[[ @ 0]]
			f49_arg0.ChallengeCoin:completeAnimation() --[[ @ 0]]
			f49_arg0.ChallengeCoin:setLeftRight( 0, 0, 1564.5, 1764.5 ) --[[ @ 0]]
			f49_arg0.ChallengeCoin:setTopBottom( 0, 0, 100, 300 ) --[[ @ 0]]
			f49_arg0.ChallengeCoin:setAlpha( 1 ) --[[ @ 0]]
			f49_arg0.ChallengeCoin:setZRot( 0 ) --[[ @ 0]]
			f49_arg0.ChallengeCoin:setScale( 1, 1 ) --[[ @ 0]]
			f49_arg0.clipFinished( f49_arg0.ChallengeCoin ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.MeritReportWidget.__onClose = function ( f50_arg0 )
	f50_arg0.MeritOverlayManualHeader:close() --[[ @ 0]]
	f50_arg0.XpMeter:close() --[[ @ 0]]
	f50_arg0.MeritBoard:close() --[[ @ 0]]
	f50_arg0.MeritBoardWithMedals:close() --[[ @ 0]]
	f50_arg0.Echelon:close() --[[ @ 0]]
	f50_arg0.ChallengeCoin:close() --[[ @ 0]]
end
 --[[ @ 0]]
