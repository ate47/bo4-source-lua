-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:48
require( "x64:41ad734fb8d6d92" ) --[[ @ 0]]

CoD.BountyHunterAmmoBuyInternal = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.BountyHunterAmmoBuyInternal.__defaultWidth = 280 --[[ @ 0]]
CoD.BountyHunterAmmoBuyInternal.__defaultHeight = 48 --[[ @ 0]]
CoD.BountyHunterAmmoBuyInternal.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.BountyHunterAmmoBuyInternal ) --[[ @ 0]]
	self.id = "BountyHunterAmmoBuyInternal" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local SceneBlur = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	SceneBlur:setAlpha( 0 ) --[[ @ 0]]
	SceneBlur:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_E2354BE557C4C7A" ) ) --[[ @ 0]]
	SceneBlur:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( SceneBlur ) --[[ @ 0]]
	self.SceneBlur = SceneBlur --[[ @ 0]]
	
	local FocusGlow = LUI.UIImage.new( 0, 1, -133, 133, 0, 1, -15, 15 ) --[[ @ 0]]
	FocusGlow:setAlpha( 0 ) --[[ @ 0]]
	FocusGlow:setImage( RegisterImage( @"uie_ui_menu_common_focus_glow_large" ) ) --[[ @ 0]]
	FocusGlow:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_6DAB59B2CAE01851" ) ) --[[ @ 0]]
	FocusGlow:setShaderVector( 0, 0, 0, 0.25, 0.25 ) --[[ @ 0]]
	FocusGlow:setShaderVector( 1, 1.2, 0, 0, 0 ) --[[ @ 0]]
	FocusGlow:setupNineSliceShader( 300, 300 ) --[[ @ 0]]
	self:addElement( FocusGlow ) --[[ @ 0]]
	self.FocusGlow = FocusGlow --[[ @ 0]]
	
	local NoiseTiledBackingMain = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	NoiseTiledBackingMain:setAlpha( 0.8 ) --[[ @ 0]]
	NoiseTiledBackingMain:setImage( RegisterImage( @"uie_ui_menu_specialist_hub_repeat_bg" ) ) --[[ @ 0]]
	NoiseTiledBackingMain:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_16CBE95C250C6D15" ) ) --[[ @ 0]]
	NoiseTiledBackingMain:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	NoiseTiledBackingMain:setupNineSliceShader( 196, 88 ) --[[ @ 0]]
	self:addElement( NoiseTiledBackingMain ) --[[ @ 0]]
	self.NoiseTiledBackingMain = NoiseTiledBackingMain --[[ @ 0]]
	
	local SelectOvelay = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	SelectOvelay:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	SelectOvelay:setAlpha( 0.01 ) --[[ @ 0]]
	self:addElement( SelectOvelay ) --[[ @ 0]]
	self.SelectOvelay = SelectOvelay --[[ @ 0]]
	
	local ButtonBGTiled = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	ButtonBGTiled:setRGB( 0.28, 0.28, 0.28 ) --[[ @ 0]]
	ButtonBGTiled:setAlpha( 0.8 ) --[[ @ 0]]
	ButtonBGTiled:setImage( RegisterImage( @"hash_7D78A9159503BFBB" ) ) --[[ @ 0]]
	ButtonBGTiled:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_16CBE95C250C6D15" ) ) --[[ @ 0]]
	ButtonBGTiled:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	ButtonBGTiled:setupNineSliceShader( 16, 16 ) --[[ @ 0]]
	self:addElement( ButtonBGTiled ) --[[ @ 0]]
	self.ButtonBGTiled = ButtonBGTiled --[[ @ 0]]
	
	local PixelGrid = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	PixelGrid:setAlpha( 0.05 ) --[[ @ 0]]
	PixelGrid:setImage( RegisterImage( @"uie_ui_hud_notifications_pixelpattern" ) ) --[[ @ 0]]
	PixelGrid:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_16CBE95C250C6D15" ) ) --[[ @ 0]]
	PixelGrid:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	PixelGrid:setupNineSliceShader( 128, 128 ) --[[ @ 0]]
	self:addElement( PixelGrid ) --[[ @ 0]]
	self.PixelGrid = PixelGrid --[[ @ 0]]
	
	local NoiseTiledBacking = LUI.UIImage.new( 0, 0, 55.5, 219.5, 0.5, 0.5, -12, 10 ) --[[ @ 0]]
	NoiseTiledBacking:setRGB( 0.41, 0.55, 0.22 ) --[[ @ 0]]
	NoiseTiledBacking:setAlpha( 0.5 ) --[[ @ 0]]
	NoiseTiledBacking:setImage( RegisterImage( @"hash_1519D21799A7D188" ) ) --[[ @ 0]]
	NoiseTiledBacking:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_16CBE95C250C6D15" ) ) --[[ @ 0]]
	NoiseTiledBacking:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	NoiseTiledBacking:setupNineSliceShader( 16, 16 ) --[[ @ 0]]
	self:addElement( NoiseTiledBacking ) --[[ @ 0]]
	self.NoiseTiledBacking = NoiseTiledBacking --[[ @ 0]]
	
	local NoiseTiledBacking2 = LUI.UIImage.new( 0, 0, 53.5, 55.5, 0.5, 0.5, -12, 10 ) --[[ @ 0]]
	NoiseTiledBacking2:setRGB( 0.75, 0.92, 0.59 ) --[[ @ 0]]
	NoiseTiledBacking2:setImage( RegisterImage( @"hash_1519D21799A7D188" ) ) --[[ @ 0]]
	NoiseTiledBacking2:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_16CBE95C250C6D15" ) ) --[[ @ 0]]
	NoiseTiledBacking2:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	NoiseTiledBacking2:setupNineSliceShader( 16, 16 ) --[[ @ 0]]
	self:addElement( NoiseTiledBacking2 ) --[[ @ 0]]
	self.NoiseTiledBacking2 = NoiseTiledBacking2 --[[ @ 0]]
	
	local Refill = LUI.UIText.new( 0, 0, 59.5, 161.5, 0.5, 0.5, -9.5, 9.5 ) --[[ @ 0]]
	Refill:setRGB( 0.07, 0.09, 0.04 ) --[[ @ 0]]
	Refill:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_3D5AA68BA080C3B6" ) ) --[[ @ 0]]
	Refill:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	Refill:setLetterSpacing( 2 ) --[[ @ 0]]
	Refill:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	Refill:setAlignment( Enum[@"luialignment"][@"hash_E821F0ECFF8D1C7"] ) --[[ @ 0]]
	self:addElement( Refill ) --[[ @ 0]]
	self.Refill = Refill --[[ @ 0]]
	
	local DollarSign = LUI.UIText.new( 0, 0, 165.5, 181.5, 0.5, 0.5, -9.5, 9.5 ) --[[ @ 0]]
	DollarSign:setRGB( 0.75, 0.92, 0.59 ) --[[ @ 0]]
	DollarSign:setText( CoD.BaseUtility.AlreadyLocalized( "$" ) ) --[[ @ 0]]
	DollarSign:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	DollarSign:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	DollarSign:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	self:addElement( DollarSign ) --[[ @ 0]]
	self.DollarSign = DollarSign --[[ @ 0]]
	
	local Cost = LUI.UIText.new( 0, 0, 177.5, 225.5, 0.5, 0.5, -9.5, 9.5 ) --[[ @ 0]]
	Cost:setRGB( 0.75, 0.92, 0.59 ) --[[ @ 0]]
	Cost:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	Cost:setLetterSpacing( 2 ) --[[ @ 0]]
	Cost:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	Cost:linkToElementModel( self, "refillCost", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			Cost:setText( f2_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Cost ) --[[ @ 0]]
	self.Cost = Cost --[[ @ 0]]
	
	local Full = LUI.UIText.new( 0, 0, 177.5, 225.5, 0.5, 0.5, -9.5, 9.5 ) --[[ @ 0]]
	Full:setRGB( 0, 0, 0 ) --[[ @ 0]]
	Full:setAlpha( 0 ) --[[ @ 0]]
	Full:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_3FE53EF0EFB00EBB" ) ) --[[ @ 0]]
	Full:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	Full:setLetterSpacing( 2 ) --[[ @ 0]]
	Full:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	self:addElement( Full ) --[[ @ 0]]
	self.Full = Full --[[ @ 0]]
	
	local AmmoImage = LUI.UIImage.new( 1, 1, -35.5, 1.5, 0.5, 0.5, -64, -27 ) --[[ @ 0]]
	AmmoImage:setImage( RegisterImage( @"uie_ui_icon_bounty_hunter_pickup_ammo" ) ) --[[ @ 0]]
	self:addElement( AmmoImage ) --[[ @ 0]]
	self.AmmoImage = AmmoImage --[[ @ 0]]
	
	local MaxAmmo2 = LUI.UIText.new( 1, 1, -75.5, -21.5, 0.5, 0.5, -53, -32 ) --[[ @ 0]]
	MaxAmmo2:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	MaxAmmo2:setLetterSpacing( 2 ) --[[ @ 0]]
	MaxAmmo2:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	MaxAmmo2:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	MaxAmmo2:linkToElementModel( self, "ammoMax", true, function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			MaxAmmo2:setText( CoD.BaseUtility.AlreadyLocalized( f3_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( MaxAmmo2 ) --[[ @ 0]]
	self.MaxAmmo2 = MaxAmmo2 --[[ @ 0]]
	
	local CurrentAmmo = LUI.UIText.new( 1, 1, -140.5, -88.5, 0.5, 0.5, -53, -32 ) --[[ @ 0]]
	CurrentAmmo:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	CurrentAmmo:setLetterSpacing( 2 ) --[[ @ 0]]
	CurrentAmmo:setAlignment( Enum[@"luialignment"][@"lui_alignment_right"] ) --[[ @ 0]]
	CurrentAmmo:linkToElementModel( self, "ammoCurrent", true, function ( model )
		local f4_local0 = model:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			CurrentAmmo:setText( CoD.BaseUtility.AlreadyLocalized( f4_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( CurrentAmmo ) --[[ @ 0]]
	self.CurrentAmmo = CurrentAmmo --[[ @ 0]]
	
	local MaxAmmoPreview = LUI.UIText.new( 1, 1, -140.5, -88.5, 0.5, 0.5, -53, -32 ) --[[ @ 0]]
	MaxAmmoPreview:setRGB( 0, 1, 0.04 ) --[[ @ 0]]
	MaxAmmoPreview:setAlpha( 0 ) --[[ @ 0]]
	MaxAmmoPreview:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	MaxAmmoPreview:setLetterSpacing( 2 ) --[[ @ 0]]
	MaxAmmoPreview:setAlignment( Enum[@"luialignment"][@"lui_alignment_right"] ) --[[ @ 0]]
	MaxAmmoPreview:linkToElementModel( self, "ammoMax", true, function ( model )
		local f5_local0 = model:get() --[[ @ 0]]
		if f5_local0 ~= nil then
			MaxAmmoPreview:setText( CoD.BaseUtility.AlreadyLocalized( f5_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( MaxAmmoPreview ) --[[ @ 0]]
	self.MaxAmmoPreview = MaxAmmoPreview --[[ @ 0]]
	
	local Slash = LUI.UIText.new( 1, 1, -91.5, -72.5, 0.5, 0.5, -51.5, -33.5 ) --[[ @ 0]]
	Slash:setText( CoD.BaseUtility.AlreadyLocalized( "/" ) ) --[[ @ 0]]
	Slash:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	Slash:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	Slash:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	self:addElement( Slash ) --[[ @ 0]]
	self.Slash = Slash --[[ @ 0]]
	
	local CommonButtonOutlineThin = CoD.CommonButtonOutlineThin.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	CommonButtonOutlineThin.FocusGlow:setScale( 1, 0.9 ) --[[ @ 0]]
	self:addElement( CommonButtonOutlineThin ) --[[ @ 0]]
	self.CommonButtonOutlineThin = CommonButtonOutlineThin --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "NoWeapon",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueNilOrZero( element, f1_arg1, "packageID" )
			end
		},
		{
			stateName = "NoAmmoWeapon",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueNilOrZero( element, f1_arg1, "ammoMax" )
			end
		},
		{
			stateName = "Purchased",
			condition = function ( menu, element, event )
				return CoD.BountyHunterUtility.IsAmmoAtMax( self, f1_arg1 )
			end
		},
		{
			stateName = "CannotAfford",
			condition = function ( menu, element, event )
				return CoD.BountyHunterUtility.IsRefillTooExpensive( self, f1_arg1 )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "packageID", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "packageID"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:linkToElementModel( self, "ammoMax", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "ammoMax"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:linkToElementModel( self, "ammoCurrent", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "ammoCurrent"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:linkToElementModel( self, "refillCost", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "refillCost"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local f1_local19 = self --[[ @ 0]]
	local f1_local20 = self.subscribeToModel --[[ @ 0]]
	local f1_local21 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local20( f1_local19, f1_local21["luielement.BountyHunterLoadout.money"], function ( f14_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f14_arg0:get(),
			modelName = "luielement.BountyHunterLoadout.money"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	CommonButtonOutlineThin.id = "CommonButtonOutlineThin" --[[ @ 0]]
	self.__defaultFocus = CommonButtonOutlineThin --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.BountyHunterAmmoBuyInternal.__resetProperties = function ( f15_arg0 )
	f15_arg0.MaxAmmoPreview:completeAnimation() --[[ @ 0]]
	f15_arg0.CurrentAmmo:completeAnimation() --[[ @ 0]]
	f15_arg0.SelectOvelay:completeAnimation() --[[ @ 0]]
	f15_arg0.AmmoImage:completeAnimation() --[[ @ 0]]
	f15_arg0.Cost:completeAnimation() --[[ @ 0]]
	f15_arg0.DollarSign:completeAnimation() --[[ @ 0]]
	f15_arg0.Refill:completeAnimation() --[[ @ 0]]
	f15_arg0.NoiseTiledBacking:completeAnimation() --[[ @ 0]]
	f15_arg0.NoiseTiledBacking2:completeAnimation() --[[ @ 0]]
	f15_arg0.ButtonBGTiled:completeAnimation() --[[ @ 0]]
	f15_arg0.PixelGrid:completeAnimation() --[[ @ 0]]
	f15_arg0.Slash:completeAnimation() --[[ @ 0]]
	f15_arg0.MaxAmmo2:completeAnimation() --[[ @ 0]]
	f15_arg0.CommonButtonOutlineThin:completeAnimation() --[[ @ 0]]
	f15_arg0.NoiseTiledBackingMain:completeAnimation() --[[ @ 0]]
	f15_arg0.Full:completeAnimation() --[[ @ 0]]
	f15_arg0.MaxAmmoPreview:setAlpha( 0 ) --[[ @ 0]]
	f15_arg0.CurrentAmmo:setAlpha( 1 ) --[[ @ 0]]
	f15_arg0.SelectOvelay:setAlpha( 0.01 ) --[[ @ 0]]
	f15_arg0.AmmoImage:setAlpha( 1 ) --[[ @ 0]]
	f15_arg0.Cost:setRGB( 0.75, 0.92, 0.59 ) --[[ @ 0]]
	f15_arg0.Cost:setAlpha( 1 ) --[[ @ 0]]
	f15_arg0.DollarSign:setRGB( 0.75, 0.92, 0.59 ) --[[ @ 0]]
	f15_arg0.DollarSign:setAlpha( 1 ) --[[ @ 0]]
	f15_arg0.Refill:setRGB( 0.07, 0.09, 0.04 ) --[[ @ 0]]
	f15_arg0.Refill:setAlpha( 1 ) --[[ @ 0]]
	f15_arg0.NoiseTiledBacking:setRGB( 0.41, 0.55, 0.22 ) --[[ @ 0]]
	f15_arg0.NoiseTiledBacking:setAlpha( 0.5 ) --[[ @ 0]]
	f15_arg0.NoiseTiledBacking2:setRGB( 0.75, 0.92, 0.59 ) --[[ @ 0]]
	f15_arg0.NoiseTiledBacking2:setAlpha( 1 ) --[[ @ 0]]
	f15_arg0.ButtonBGTiled:setAlpha( 0.8 ) --[[ @ 0]]
	f15_arg0.PixelGrid:setAlpha( 0.05 ) --[[ @ 0]]
	f15_arg0.Slash:setAlpha( 1 ) --[[ @ 0]]
	f15_arg0.MaxAmmo2:setAlpha( 1 ) --[[ @ 0]]
	f15_arg0.CommonButtonOutlineThin:setAlpha( 1 ) --[[ @ 0]]
	f15_arg0.NoiseTiledBackingMain:setAlpha( 0.8 ) --[[ @ 0]]
	f15_arg0.Full:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.BountyHunterAmmoBuyInternal.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f16_arg0, f16_arg1 )
			f16_arg0:__resetProperties() --[[ @ 0]]
			f16_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end,
		ChildFocus = function ( f17_arg0, f17_arg1 )
			f17_arg0:__resetProperties() --[[ @ 0]]
			f17_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f17_arg0.SelectOvelay:completeAnimation() --[[ @ 0]]
			f17_arg0.SelectOvelay:setAlpha( 0.04 ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.SelectOvelay ) --[[ @ 0]]
			f17_arg0.CurrentAmmo:completeAnimation() --[[ @ 0]]
			f17_arg0.CurrentAmmo:setAlpha( 0 ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.CurrentAmmo ) --[[ @ 0]]
			f17_arg0.MaxAmmoPreview:completeAnimation() --[[ @ 0]]
			f17_arg0.MaxAmmoPreview:setAlpha( 1 ) --[[ @ 0]]
			f17_arg0.clipFinished( f17_arg0.MaxAmmoPreview ) --[[ @ 0]]
		end,
		GainChildFocus = function ( f18_arg0, f18_arg1 )
			f18_arg0:__resetProperties() --[[ @ 0]]
			f18_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			local f18_local0 = function ( f19_arg0 )
				f18_arg0.SelectOvelay:beginAnimation( 200 ) --[[ @ 0]]
				f18_arg0.SelectOvelay:setAlpha( 0.04 ) --[[ @ 0]]
				f18_arg0.SelectOvelay:registerEventHandler( "interrupted_keyframe", f18_arg0.clipInterrupted ) --[[ @ 0]]
				f18_arg0.SelectOvelay:registerEventHandler( "transition_complete_keyframe", f18_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f18_arg0.SelectOvelay:completeAnimation() --[[ @ 0]]
			f18_arg0.SelectOvelay:setAlpha( 0.01 ) --[[ @ 0]]
			f18_local0( f18_arg0.SelectOvelay ) --[[ @ 0]]
			local f18_local1 = function ( f20_arg0 )
				f18_arg0.CurrentAmmo:beginAnimation( 200 ) --[[ @ 0]]
				f18_arg0.CurrentAmmo:setAlpha( 0 ) --[[ @ 0]]
				f18_arg0.CurrentAmmo:registerEventHandler( "interrupted_keyframe", f18_arg0.clipInterrupted ) --[[ @ 0]]
				f18_arg0.CurrentAmmo:registerEventHandler( "transition_complete_keyframe", f18_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f18_arg0.CurrentAmmo:completeAnimation() --[[ @ 0]]
			f18_arg0.CurrentAmmo:setAlpha( 1 ) --[[ @ 0]]
			f18_local1( f18_arg0.CurrentAmmo ) --[[ @ 0]]
			local f18_local2 = function ( f21_arg0 )
				f18_arg0.MaxAmmoPreview:beginAnimation( 200 ) --[[ @ 0]]
				f18_arg0.MaxAmmoPreview:setAlpha( 1 ) --[[ @ 0]]
				f18_arg0.MaxAmmoPreview:registerEventHandler( "interrupted_keyframe", f18_arg0.clipInterrupted ) --[[ @ 0]]
				f18_arg0.MaxAmmoPreview:registerEventHandler( "transition_complete_keyframe", f18_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f18_arg0.MaxAmmoPreview:completeAnimation() --[[ @ 0]]
			f18_arg0.MaxAmmoPreview:setAlpha( 0 ) --[[ @ 0]]
			f18_local2( f18_arg0.MaxAmmoPreview ) --[[ @ 0]]
		end,
		LoseChildFocus = function ( f22_arg0, f22_arg1 )
			f22_arg0:__resetProperties() --[[ @ 0]]
			f22_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			local f22_local0 = function ( f23_arg0 )
				f22_arg0.SelectOvelay:beginAnimation( 200 ) --[[ @ 0]]
				f22_arg0.SelectOvelay:setAlpha( 0.01 ) --[[ @ 0]]
				f22_arg0.SelectOvelay:registerEventHandler( "interrupted_keyframe", f22_arg0.clipInterrupted ) --[[ @ 0]]
				f22_arg0.SelectOvelay:registerEventHandler( "transition_complete_keyframe", f22_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f22_arg0.SelectOvelay:completeAnimation() --[[ @ 0]]
			f22_arg0.SelectOvelay:setAlpha( 0.04 ) --[[ @ 0]]
			f22_local0( f22_arg0.SelectOvelay ) --[[ @ 0]]
			local f22_local1 = function ( f24_arg0 )
				f22_arg0.CurrentAmmo:beginAnimation( 200 ) --[[ @ 0]]
				f22_arg0.CurrentAmmo:setAlpha( 1 ) --[[ @ 0]]
				f22_arg0.CurrentAmmo:registerEventHandler( "interrupted_keyframe", f22_arg0.clipInterrupted ) --[[ @ 0]]
				f22_arg0.CurrentAmmo:registerEventHandler( "transition_complete_keyframe", f22_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f22_arg0.CurrentAmmo:completeAnimation() --[[ @ 0]]
			f22_arg0.CurrentAmmo:setAlpha( 0 ) --[[ @ 0]]
			f22_local1( f22_arg0.CurrentAmmo ) --[[ @ 0]]
			local f22_local2 = function ( f25_arg0 )
				f22_arg0.MaxAmmoPreview:beginAnimation( 200 ) --[[ @ 0]]
				f22_arg0.MaxAmmoPreview:setAlpha( 0 ) --[[ @ 0]]
				f22_arg0.MaxAmmoPreview:registerEventHandler( "interrupted_keyframe", f22_arg0.clipInterrupted ) --[[ @ 0]]
				f22_arg0.MaxAmmoPreview:registerEventHandler( "transition_complete_keyframe", f22_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f22_arg0.MaxAmmoPreview:completeAnimation() --[[ @ 0]]
			f22_arg0.MaxAmmoPreview:setAlpha( 1 ) --[[ @ 0]]
			f22_local2( f22_arg0.MaxAmmoPreview ) --[[ @ 0]]
		end
	},
	NoWeapon = {
		DefaultClip = function ( f26_arg0, f26_arg1 )
			f26_arg0:__resetProperties() --[[ @ 0]]
			f26_arg0:setupElementClipCounter( 13 ) --[[ @ 0]]
			f26_arg0.NoiseTiledBackingMain:completeAnimation() --[[ @ 0]]
			f26_arg0.NoiseTiledBackingMain:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.NoiseTiledBackingMain ) --[[ @ 0]]
			f26_arg0.ButtonBGTiled:completeAnimation() --[[ @ 0]]
			f26_arg0.ButtonBGTiled:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.ButtonBGTiled ) --[[ @ 0]]
			f26_arg0.PixelGrid:completeAnimation() --[[ @ 0]]
			f26_arg0.PixelGrid:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.PixelGrid ) --[[ @ 0]]
			f26_arg0.NoiseTiledBacking:completeAnimation() --[[ @ 0]]
			f26_arg0.NoiseTiledBacking:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.NoiseTiledBacking ) --[[ @ 0]]
			f26_arg0.NoiseTiledBacking2:completeAnimation() --[[ @ 0]]
			f26_arg0.NoiseTiledBacking2:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.NoiseTiledBacking2 ) --[[ @ 0]]
			f26_arg0.Refill:completeAnimation() --[[ @ 0]]
			f26_arg0.Refill:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.Refill ) --[[ @ 0]]
			f26_arg0.DollarSign:completeAnimation() --[[ @ 0]]
			f26_arg0.DollarSign:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.DollarSign ) --[[ @ 0]]
			f26_arg0.Cost:completeAnimation() --[[ @ 0]]
			f26_arg0.Cost:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.Cost ) --[[ @ 0]]
			f26_arg0.AmmoImage:completeAnimation() --[[ @ 0]]
			f26_arg0.AmmoImage:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.AmmoImage ) --[[ @ 0]]
			f26_arg0.MaxAmmo2:completeAnimation() --[[ @ 0]]
			f26_arg0.MaxAmmo2:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.MaxAmmo2 ) --[[ @ 0]]
			f26_arg0.CurrentAmmo:completeAnimation() --[[ @ 0]]
			f26_arg0.CurrentAmmo:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.CurrentAmmo ) --[[ @ 0]]
			f26_arg0.Slash:completeAnimation() --[[ @ 0]]
			f26_arg0.Slash:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.Slash ) --[[ @ 0]]
			f26_arg0.CommonButtonOutlineThin:completeAnimation() --[[ @ 0]]
			f26_arg0.CommonButtonOutlineThin:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.CommonButtonOutlineThin ) --[[ @ 0]]
		end
	},
	NoAmmoWeapon = {
		DefaultClip = function ( f27_arg0, f27_arg1 )
			f27_arg0:__resetProperties() --[[ @ 0]]
			f27_arg0:setupElementClipCounter( 13 ) --[[ @ 0]]
			f27_arg0.NoiseTiledBackingMain:completeAnimation() --[[ @ 0]]
			f27_arg0.NoiseTiledBackingMain:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.NoiseTiledBackingMain ) --[[ @ 0]]
			f27_arg0.ButtonBGTiled:completeAnimation() --[[ @ 0]]
			f27_arg0.ButtonBGTiled:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.ButtonBGTiled ) --[[ @ 0]]
			f27_arg0.PixelGrid:completeAnimation() --[[ @ 0]]
			f27_arg0.PixelGrid:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.PixelGrid ) --[[ @ 0]]
			f27_arg0.NoiseTiledBacking:completeAnimation() --[[ @ 0]]
			f27_arg0.NoiseTiledBacking:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.NoiseTiledBacking ) --[[ @ 0]]
			f27_arg0.NoiseTiledBacking2:completeAnimation() --[[ @ 0]]
			f27_arg0.NoiseTiledBacking2:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.NoiseTiledBacking2 ) --[[ @ 0]]
			f27_arg0.Refill:completeAnimation() --[[ @ 0]]
			f27_arg0.Refill:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.Refill ) --[[ @ 0]]
			f27_arg0.DollarSign:completeAnimation() --[[ @ 0]]
			f27_arg0.DollarSign:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.DollarSign ) --[[ @ 0]]
			f27_arg0.Cost:completeAnimation() --[[ @ 0]]
			f27_arg0.Cost:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.Cost ) --[[ @ 0]]
			f27_arg0.AmmoImage:completeAnimation() --[[ @ 0]]
			f27_arg0.AmmoImage:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.AmmoImage ) --[[ @ 0]]
			f27_arg0.MaxAmmo2:completeAnimation() --[[ @ 0]]
			f27_arg0.MaxAmmo2:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.MaxAmmo2 ) --[[ @ 0]]
			f27_arg0.CurrentAmmo:completeAnimation() --[[ @ 0]]
			f27_arg0.CurrentAmmo:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.CurrentAmmo ) --[[ @ 0]]
			f27_arg0.Slash:completeAnimation() --[[ @ 0]]
			f27_arg0.Slash:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.Slash ) --[[ @ 0]]
			f27_arg0.CommonButtonOutlineThin:completeAnimation() --[[ @ 0]]
			f27_arg0.CommonButtonOutlineThin:setAlpha( 0 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.CommonButtonOutlineThin ) --[[ @ 0]]
		end
	},
	Purchased = {
		DefaultClip = function ( f28_arg0, f28_arg1 )
			f28_arg0:__resetProperties() --[[ @ 0]]
			f28_arg0:setupElementClipCounter( 5 ) --[[ @ 0]]
			f28_arg0.NoiseTiledBacking:completeAnimation() --[[ @ 0]]
			f28_arg0.NoiseTiledBacking:setAlpha( 0 ) --[[ @ 0]]
			f28_arg0.clipFinished( f28_arg0.NoiseTiledBacking ) --[[ @ 0]]
			f28_arg0.NoiseTiledBacking2:completeAnimation() --[[ @ 0]]
			f28_arg0.NoiseTiledBacking2:setAlpha( 0 ) --[[ @ 0]]
			f28_arg0.clipFinished( f28_arg0.NoiseTiledBacking2 ) --[[ @ 0]]
			f28_arg0.DollarSign:completeAnimation() --[[ @ 0]]
			f28_arg0.DollarSign:setAlpha( 0 ) --[[ @ 0]]
			f28_arg0.clipFinished( f28_arg0.DollarSign ) --[[ @ 0]]
			f28_arg0.Cost:completeAnimation() --[[ @ 0]]
			f28_arg0.Cost:setAlpha( 0 ) --[[ @ 0]]
			f28_arg0.clipFinished( f28_arg0.Cost ) --[[ @ 0]]
			f28_arg0.Full:completeAnimation() --[[ @ 0]]
			f28_arg0.Full:setAlpha( 1 ) --[[ @ 0]]
			f28_arg0.clipFinished( f28_arg0.Full ) --[[ @ 0]]
		end
	},
	CannotAfford = {
		DefaultClip = function ( f29_arg0, f29_arg1 )
			f29_arg0:__resetProperties() --[[ @ 0]]
			f29_arg0:setupElementClipCounter( 5 ) --[[ @ 0]]
			f29_arg0.NoiseTiledBacking:completeAnimation() --[[ @ 0]]
			f29_arg0.NoiseTiledBacking:setRGB( 0.55, 0.22, 0.22 ) --[[ @ 0]]
			f29_arg0.NoiseTiledBacking:setAlpha( 0.75 ) --[[ @ 0]]
			f29_arg0.clipFinished( f29_arg0.NoiseTiledBacking ) --[[ @ 0]]
			f29_arg0.NoiseTiledBacking2:completeAnimation() --[[ @ 0]]
			f29_arg0.NoiseTiledBacking2:setRGB( 1, 0.14, 0.14 ) --[[ @ 0]]
			f29_arg0.clipFinished( f29_arg0.NoiseTiledBacking2 ) --[[ @ 0]]
			f29_arg0.Refill:completeAnimation() --[[ @ 0]]
			f29_arg0.Refill:setRGB( 0.09, 0.04, 0.04 ) --[[ @ 0]]
			f29_arg0.clipFinished( f29_arg0.Refill ) --[[ @ 0]]
			f29_arg0.DollarSign:completeAnimation() --[[ @ 0]]
			f29_arg0.DollarSign:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
			f29_arg0.clipFinished( f29_arg0.DollarSign ) --[[ @ 0]]
			f29_arg0.Cost:completeAnimation() --[[ @ 0]]
			f29_arg0.Cost:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
			f29_arg0.clipFinished( f29_arg0.Cost ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.BountyHunterAmmoBuyInternal.__onClose = function ( f30_arg0 )
	f30_arg0.Cost:close() --[[ @ 0]]
	f30_arg0.MaxAmmo2:close() --[[ @ 0]]
	f30_arg0.CurrentAmmo:close() --[[ @ 0]]
	f30_arg0.MaxAmmoPreview:close() --[[ @ 0]]
	f30_arg0.CommonButtonOutlineThin:close() --[[ @ 0]]
end
 --[[ @ 0]]
