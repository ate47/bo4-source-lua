-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
CoD.genericVHUDProgressBar = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.genericVHUDProgressBar.__defaultWidth = 130 --[[ @ 0]]
CoD.genericVHUDProgressBar.__defaultHeight = 39 --[[ @ 0]]
CoD.genericVHUDProgressBar.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.genericVHUDProgressBar ) --[[ @ 0]]
	self.id = "genericVHUDProgressBar" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local flashingText = LUI.UIText.new( 0, 1, 0, 0, 0, 0, 4.5, 19.5 ) --[[ @ 0]]
	flashingText:setAlpha( 0 ) --[[ @ 0]]
	flashingText:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_73C4EEC8614F780F" ) ) --[[ @ 0]]
	flashingText:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	flashingText:setAlignment( Enum[@"LUIAlignment"][@"hash_3830CFD395E6AA0A"] ) --[[ @ 0]]
	flashingText:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	self:addElement( flashingText ) --[[ @ 0]]
	self.flashingText = flashingText --[[ @ 0]]
	
	local SignalText = LUI.UIText.new( 0, 1, 0, 0, 0, 0, 0, 24 ) --[[ @ 0]]
	SignalText:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_774F45BCDE2B3C58" ) ) --[[ @ 0]]
	SignalText:setTTF( "default" ) --[[ @ 0]]
	SignalText:setRFTMaterial( LUI.UIImage.GetCachedMaterial( @"uie_aberration_cheap_blur" ) ) --[[ @ 0]]
	SignalText:setShaderVector( 0, 0, 1, 0, 0 ) --[[ @ 0]]
	SignalText:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	SignalText:setShaderVector( 2, 0, 0, 0, 0 ) --[[ @ 0]]
	SignalText:setShaderVector( 3, 0, 0, 0, 0 ) --[[ @ 0]]
	SignalText:setShaderVector( 4, 0, 0, 0, 0 ) --[[ @ 0]]
	SignalText:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	SignalText:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	self:addElement( SignalText ) --[[ @ 0]]
	self.SignalText = SignalText --[[ @ 0]]
	
	local backing = LUI.UIImage.new( 0, 0, 0, 130, 0, 0, 24, 39 ) --[[ @ 0]]
	backing:setRGB( 0.17, 0.17, 0.17 ) --[[ @ 0]]
	self:addElement( backing ) --[[ @ 0]]
	self.backing = backing --[[ @ 0]]
	
	local fill = LUI.UIImage.new( 0, 1, 2, -2, 0, 0, 26, 37 ) --[[ @ 0]]
	fill:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_wipe_normal" ) ) --[[ @ 0]]
	fill:setShaderVector( 0, 1, 0, 0, 0 ) --[[ @ 0]]
	fill:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	fill:setShaderVector( 2, 1, 0, 0, 0 ) --[[ @ 0]]
	fill:setShaderVector( 3, 0, 0, 0, 0 ) --[[ @ 0]]
	fill:setShaderVector( 4, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( fill ) --[[ @ 0]]
	self.fill = fill --[[ @ 0]]
	
	local rechargeMeter = LUI.UIImage.new( 0, 1, 2, -2, 0, 0, 26, 37 ) --[[ @ 0]]
	rechargeMeter:setRGB( 0.56, 0.56, 0.56 ) --[[ @ 0]]
	rechargeMeter:setAlpha( 0 ) --[[ @ 0]]
	rechargeMeter:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_wipe_normal" ) ) --[[ @ 0]]
	rechargeMeter:setShaderVector( 0, 1, 0, 0, 0 ) --[[ @ 0]]
	rechargeMeter:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	rechargeMeter:setShaderVector( 2, 1, 0, 0, 0 ) --[[ @ 0]]
	rechargeMeter:setShaderVector( 3, 0, 0, 0, 0 ) --[[ @ 0]]
	rechargeMeter:setShaderVector( 4, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( rechargeMeter ) --[[ @ 0]]
	self.rechargeMeter = rechargeMeter --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		},
		{
			stateName = "FlashText",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		},
		{
			stateName = "Recharging",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		}
	} ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( self, "setState", function ( element, controller, f5_arg2, f5_arg3, f5_arg4 )
		if IsSelfInState( self, "Hidden" ) then
			SetHeight( self, 0 ) --[[ @ 0]]
		else
			RestoreWidgetHeight( self ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.genericVHUDProgressBar.__resetProperties = function ( f6_arg0 )
	f6_arg0.SignalText:completeAnimation() --[[ @ 0]]
	f6_arg0.backing:completeAnimation() --[[ @ 0]]
	f6_arg0.fill:completeAnimation() --[[ @ 0]]
	f6_arg0.flashingText:completeAnimation() --[[ @ 0]]
	f6_arg0.rechargeMeter:completeAnimation() --[[ @ 0]]
	f6_arg0.SignalText:setRGB( 1, 1, 1 ) --[[ @ 0]]
	f6_arg0.SignalText:setAlpha( 1 ) --[[ @ 0]]
	f6_arg0.backing:setAlpha( 1 ) --[[ @ 0]]
	f6_arg0.fill:setAlpha( 1 ) --[[ @ 0]]
	f6_arg0.flashingText:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	f6_arg0.flashingText:setTopBottom( 0, 0, 4.5, 19.5 ) --[[ @ 0]]
	f6_arg0.flashingText:setAlpha( 0 ) --[[ @ 0]]
	f6_arg0.flashingText:setAlignment( Enum[@"LUIAlignment"][@"hash_3830CFD395E6AA0A"] ) --[[ @ 0]]
	f6_arg0.rechargeMeter:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.genericVHUDProgressBar.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f7_arg0, f7_arg1 )
			f7_arg0:__resetProperties() --[[ @ 0]]
			f7_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	Hidden = {
		DefaultClip = function ( f8_arg0, f8_arg1 )
			f8_arg0:__resetProperties() --[[ @ 0]]
			f8_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f8_arg0.flashingText:completeAnimation() --[[ @ 0]]
			f8_arg0.flashingText:setAlpha( 0 ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.flashingText ) --[[ @ 0]]
			f8_arg0.SignalText:completeAnimation() --[[ @ 0]]
			f8_arg0.SignalText:setAlpha( 0 ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.SignalText ) --[[ @ 0]]
			f8_arg0.backing:completeAnimation() --[[ @ 0]]
			f8_arg0.backing:setAlpha( 0 ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.backing ) --[[ @ 0]]
			f8_arg0.fill:completeAnimation() --[[ @ 0]]
			f8_arg0.fill:setAlpha( 0 ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.fill ) --[[ @ 0]]
		end
	},
	FlashText = {
		DefaultClip = function ( f9_arg0, f9_arg1 )
			f9_arg0:__resetProperties() --[[ @ 0]]
			f9_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			local f9_local0 = function ( f10_arg0 )
				local f10_local0 = function ( f11_arg0 )
					local f11_local0 = function ( f12_arg0 )
						f12_arg0:beginAnimation( 290 ) --[[ @ 0]]
						f12_arg0:setAlpha( 0.3 ) --[[ @ 0]]
						f12_arg0:registerEventHandler( "transition_complete_keyframe", f9_arg0.clipFinished ) --[[ @ 0]]
					end
					 --[[ @ 0]]
					f11_arg0:beginAnimation( 399 ) --[[ @ 0]]
					f11_arg0:registerEventHandler( "transition_complete_keyframe", f11_local0 ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f9_arg0.flashingText:beginAnimation( 300 ) --[[ @ 0]]
				f9_arg0.flashingText:setAlpha( 1 ) --[[ @ 0]]
				f9_arg0.flashingText:registerEventHandler( "interrupted_keyframe", f9_arg0.clipInterrupted ) --[[ @ 0]]
				f9_arg0.flashingText:registerEventHandler( "transition_complete_keyframe", f10_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f9_arg0.flashingText:completeAnimation() --[[ @ 0]]
			f9_arg0.flashingText:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
			f9_arg0.flashingText:setTopBottom( 0, 0, 22, 37 ) --[[ @ 0]]
			f9_arg0.flashingText:setAlpha( 0.3 ) --[[ @ 0]]
			f9_arg0.flashingText:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
			f9_local0( f9_arg0.flashingText ) --[[ @ 0]]
			f9_arg0.SignalText:completeAnimation() --[[ @ 0]]
			f9_arg0.SignalText:setAlpha( 1 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.SignalText ) --[[ @ 0]]
			f9_arg0.backing:completeAnimation() --[[ @ 0]]
			f9_arg0.backing:setAlpha( 0 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.backing ) --[[ @ 0]]
			f9_arg0.fill:completeAnimation() --[[ @ 0]]
			f9_arg0.fill:setAlpha( 0 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.fill ) --[[ @ 0]]
			f9_arg0.nextClip = "DefaultClip" --[[ @ 0]]
		end
	},
	Recharging = {
		DefaultClip = function ( f13_arg0, f13_arg1 )
			f13_arg0:__resetProperties() --[[ @ 0]]
			f13_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			local f13_local0 = function ( f14_arg0 )
				local f14_local0 = function ( f15_arg0 )
					local f15_local0 = function ( f16_arg0 )
						f16_arg0:beginAnimation( 290 ) --[[ @ 0]]
						f16_arg0:setAlpha( 0.3 ) --[[ @ 0]]
						f16_arg0:registerEventHandler( "transition_complete_keyframe", f13_arg0.clipFinished ) --[[ @ 0]]
					end
					 --[[ @ 0]]
					f15_arg0:beginAnimation( 399 ) --[[ @ 0]]
					f15_arg0:registerEventHandler( "transition_complete_keyframe", f15_local0 ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f13_arg0.flashingText:beginAnimation( 300 ) --[[ @ 0]]
				f13_arg0.flashingText:setAlpha( 1 ) --[[ @ 0]]
				f13_arg0.flashingText:registerEventHandler( "interrupted_keyframe", f13_arg0.clipInterrupted ) --[[ @ 0]]
				f13_arg0.flashingText:registerEventHandler( "transition_complete_keyframe", f14_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f13_arg0.flashingText:completeAnimation() --[[ @ 0]]
			f13_arg0.flashingText:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
			f13_arg0.flashingText:setTopBottom( 0, 0, 4.5, 19.5 ) --[[ @ 0]]
			f13_arg0.flashingText:setAlpha( 0.3 ) --[[ @ 0]]
			f13_arg0.flashingText:setAlignment( Enum[@"LUIAlignment"][@"hash_3830CFD395E6AA0A"] ) --[[ @ 0]]
			f13_local0( f13_arg0.flashingText ) --[[ @ 0]]
			f13_arg0.SignalText:completeAnimation() --[[ @ 0]]
			f13_arg0.SignalText:setRGB( 0.56, 0.56, 0.56 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.SignalText ) --[[ @ 0]]
			f13_arg0.fill:completeAnimation() --[[ @ 0]]
			f13_arg0.fill:setAlpha( 0 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.fill ) --[[ @ 0]]
			f13_arg0.rechargeMeter:completeAnimation() --[[ @ 0]]
			f13_arg0.rechargeMeter:setAlpha( 1 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.rechargeMeter ) --[[ @ 0]]
			f13_arg0.nextClip = "DefaultClip" --[[ @ 0]]
		end
	}
} --[[ @ 0]]
