-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
CoD.freeCursorCautionInfo = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.freeCursorCautionInfo.__defaultWidth = 405 --[[ @ 0]]
CoD.freeCursorCautionInfo.__defaultHeight = 100 --[[ @ 0]]
CoD.freeCursorCautionInfo.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.freeCursorCautionInfo ) --[[ @ 0]]
	self.id = "freeCursorCautionInfo" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local background = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	background:setRGB( 0.97, 0.92, 0.1 ) --[[ @ 0]]
	background:setAlpha( 0.9 ) --[[ @ 0]]
	self:addElement( background ) --[[ @ 0]]
	self.background = background --[[ @ 0]]
	
	local cautionText = LUI.UIText.new( 0, 0, 20, 400, 0, 0, 0, 18 ) --[[ @ 0]]
	cautionText:setRGB( 0.29, 0.3, 0.31 ) --[[ @ 0]]
	cautionText:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	cautionText:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_171E049B161CD00A" ) ) --[[ @ 0]]
	cautionText:setLineSpacing( 4 ) --[[ @ 0]]
	cautionText:setAlignment( Enum[@"LUIAlignment"][@"hash_3830CFD395E6AA0A"] ) --[[ @ 0]]
	cautionText:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	cautionText:linkToElementModel( self, "cautionDescription", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			cautionText:setText( Engine[@"hash_4F9F1239CFD921FE"]( f2_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( cautionText, "setText", function ( element, controller )
		if IsTextEmpty( element ) then
			CollapseFreeCursorElement( self ) --[[ @ 0]]
		elseif not IsTextEmpty( element ) and CoD.ModelUtility.AreButtonModelValueBitsSet( f1_arg1, Enum[@"LUIButton"][@"hash_3820DDD869ABBFAA"], Enum[@"LUIButtonFlags"][@"hash_5253A6F6CAAAE464"] ) then
			UpdateWidgetHeightToMultilineText( self, self.cautionText, 2 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( cautionText ) --[[ @ 0]]
	self.cautionText = cautionText --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Visible",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueNonEmptyString( element, f1_arg1, "cautionDescription" ) and CoD.ModelUtility.AreButtonModelValueBitsSet( f1_arg1, Enum[@"LUIButton"][@"hash_3820DDD869ABBFAA"], Enum[@"LUIButtonFlags"][@"hash_5253A6F6CAAAE464"] )
			end
		},
		{
			stateName = "VisiblePC",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueNonEmptyString( element, f1_arg1, "cautionDescription" ) and CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg1, "detailedViewPC" )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "cautionDescription", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "cautionDescription"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local f1_local3 = self --[[ @ 0]]
	local f1_local4 = self.subscribeToModel --[[ @ 0]]
	local f1_local5 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local4( f1_local3, f1_local5["ButtonBits." .. Enum[@"LUIButton"][@"hash_3820DDD869ABBFAA"]], function ( f7_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f7_arg0:get(),
			modelName = "ButtonBits." .. Enum[@"LUIButton"][@"hash_3820DDD869ABBFAA"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:linkToElementModel( self, "detailedViewPC", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "detailedViewPC"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( self, "setState", function ( element, controller, f9_arg2, f9_arg3, f9_arg4 )
		if IsSelfInState( self, "Visible" ) then
			UpdateWidgetHeightToMultilineText( self, self.cautionText, 2 ) --[[ @ 0]]
		else
			CollapseFreeCursorElement( self ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	f1_local4 = self --[[ @ 0]]
	CoD.FreeCursorUtility.UseLocalHeight( self ) --[[ @ 0]]
	return self
end
 --[[ @ 0]]
CoD.freeCursorCautionInfo.__resetProperties = function ( f10_arg0 )
	f10_arg0.background:completeAnimation() --[[ @ 0]]
	f10_arg0.cautionText:completeAnimation() --[[ @ 0]]
	f10_arg0.background:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	f10_arg0.background:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	f10_arg0.background:setAlpha( 0.9 ) --[[ @ 0]]
	f10_arg0.cautionText:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.freeCursorCautionInfo.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f11_arg0, f11_arg1 )
			f11_arg0:__resetProperties() --[[ @ 0]]
			f11_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f11_arg0.background:completeAnimation() --[[ @ 0]]
			f11_arg0.background:setAlpha( 0 ) --[[ @ 0]]
			f11_arg0.clipFinished( f11_arg0.background ) --[[ @ 0]]
			f11_arg0.cautionText:completeAnimation() --[[ @ 0]]
			f11_arg0.cautionText:setAlpha( 0 ) --[[ @ 0]]
			f11_arg0.clipFinished( f11_arg0.cautionText ) --[[ @ 0]]
		end,
		Visible = function ( f12_arg0, f12_arg1 )
			f12_arg0:__resetProperties() --[[ @ 0]]
			f12_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			local f12_local0 = function ( f13_arg0 )
				local f13_local0 = function ( f14_arg0 )
					f14_arg0:beginAnimation( 50 ) --[[ @ 0]]
					f14_arg0:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
					f14_arg0:registerEventHandler( "transition_complete_keyframe", f12_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f12_arg0.background:beginAnimation( 130 ) --[[ @ 0]]
				f12_arg0.background:registerEventHandler( "interrupted_keyframe", f12_arg0.clipInterrupted ) --[[ @ 0]]
				f12_arg0.background:registerEventHandler( "transition_complete_keyframe", f13_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f12_arg0.background:completeAnimation() --[[ @ 0]]
			f12_arg0.background:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
			f12_arg0.background:setTopBottom( 0, 0, 0, 0 ) --[[ @ 0]]
			f12_local0( f12_arg0.background ) --[[ @ 0]]
			local f12_local1 = function ( f15_arg0 )
				local f15_local0 = function ( f16_arg0 )
					f16_arg0:beginAnimation( 20 ) --[[ @ 0]]
					f16_arg0:setAlpha( 1 ) --[[ @ 0]]
					f16_arg0:registerEventHandler( "transition_complete_keyframe", f12_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f12_arg0.cautionText:beginAnimation( 130 ) --[[ @ 0]]
				f12_arg0.cautionText:registerEventHandler( "interrupted_keyframe", f12_arg0.clipInterrupted ) --[[ @ 0]]
				f12_arg0.cautionText:registerEventHandler( "transition_complete_keyframe", f15_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f12_arg0.cautionText:completeAnimation() --[[ @ 0]]
			f12_arg0.cautionText:setAlpha( 0 ) --[[ @ 0]]
			f12_local1( f12_arg0.cautionText ) --[[ @ 0]]
		end,
		VisiblePC = function ( f17_arg0, f17_arg1 )
			f17_arg0:__resetProperties() --[[ @ 0]]
			f17_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			local f17_local0 = function ( f18_arg0 )
				local f18_local0 = function ( f19_arg0 )
					f19_arg0:beginAnimation( 50 ) --[[ @ 0]]
					f19_arg0:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
					f19_arg0:registerEventHandler( "transition_complete_keyframe", f17_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f17_arg0.background:beginAnimation( 130 ) --[[ @ 0]]
				f17_arg0.background:registerEventHandler( "interrupted_keyframe", f17_arg0.clipInterrupted ) --[[ @ 0]]
				f17_arg0.background:registerEventHandler( "transition_complete_keyframe", f18_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f17_arg0.background:completeAnimation() --[[ @ 0]]
			f17_arg0.background:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
			f17_arg0.background:setTopBottom( 0, 0, 0, 0 ) --[[ @ 0]]
			f17_local0( f17_arg0.background ) --[[ @ 0]]
			local f17_local1 = function ( f20_arg0 )
				local f20_local0 = function ( f21_arg0 )
					f21_arg0:beginAnimation( 20 ) --[[ @ 0]]
					f21_arg0:setAlpha( 1 ) --[[ @ 0]]
					f21_arg0:registerEventHandler( "transition_complete_keyframe", f17_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f17_arg0.cautionText:beginAnimation( 130 ) --[[ @ 0]]
				f17_arg0.cautionText:registerEventHandler( "interrupted_keyframe", f17_arg0.clipInterrupted ) --[[ @ 0]]
				f17_arg0.cautionText:registerEventHandler( "transition_complete_keyframe", f20_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f17_arg0.cautionText:completeAnimation() --[[ @ 0]]
			f17_arg0.cautionText:setAlpha( 0 ) --[[ @ 0]]
			f17_local1( f17_arg0.cautionText ) --[[ @ 0]]
		end
	},
	Visible = {
		DefaultClip = function ( f22_arg0, f22_arg1 )
			f22_arg0:__resetProperties() --[[ @ 0]]
			f22_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f22_arg0.background:completeAnimation() --[[ @ 0]]
			f22_arg0.background:setAlpha( 0.9 ) --[[ @ 0]]
			f22_arg0.clipFinished( f22_arg0.background ) --[[ @ 0]]
			f22_arg0.cautionText:completeAnimation() --[[ @ 0]]
			f22_arg0.cautionText:setAlpha( 1 ) --[[ @ 0]]
			f22_arg0.clipFinished( f22_arg0.cautionText ) --[[ @ 0]]
		end
	},
	VisiblePC = {
		DefaultClip = function ( f23_arg0, f23_arg1 )
			f23_arg0:__resetProperties() --[[ @ 0]]
			f23_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f23_arg0.background:completeAnimation() --[[ @ 0]]
			f23_arg0.background:setAlpha( 0.9 ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.background ) --[[ @ 0]]
			f23_arg0.cautionText:completeAnimation() --[[ @ 0]]
			f23_arg0.cautionText:setAlpha( 1 ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.cautionText ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.freeCursorCautionInfo.__onClose = function ( f24_arg0 )
	f24_arg0.cautionText:close() --[[ @ 0]]
end
 --[[ @ 0]]
