-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:49
CoD.Codcaster_timer_nl = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.Codcaster_timer_nl.__defaultWidth = 100 --[[ @ 0]]
CoD.Codcaster_timer_nl.__defaultHeight = 27 --[[ @ 0]]
CoD.Codcaster_timer_nl.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.Codcaster_timer_nl ) --[[ @ 0]]
	self.id = "Codcaster_timer_nl" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local GameTimerShadow = LUI.UIText.new( 0, 0, 1, 101, 0, 0, -3, 31 ) --[[ @ 0]]
	GameTimerShadow:setRGB( 0, 0, 0 ) --[[ @ 0]]
	GameTimerShadow:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	GameTimerShadow:setLineSpacing( -1 ) --[[ @ 0]]
	GameTimerShadow:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	GameTimerShadow:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	GameTimerShadow:setupGameTimer() --[[ @ 0]]
	GameTimerShadow:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	self:addElement( GameTimerShadow ) --[[ @ 0]]
	self.GameTimerShadow = GameTimerShadow --[[ @ 0]]
	
	local GameTimer = LUI.UIText.new( 0, 0, 0, 100, 0, 0, -4, 30 ) --[[ @ 0]]
	GameTimer:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	GameTimer:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	GameTimer:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	GameTimer:setupGameTimer() --[[ @ 0]]
	GameTimer:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	self:addElement( GameTimer ) --[[ @ 0]]
	self.GameTimer = GameTimer --[[ @ 0]]
	
	local NotimerShadow = LUI.UIText.new( 0, 0, 0.5, 100.5, 0, 0, 5, 21 ) --[[ @ 0]]
	NotimerShadow:setRGB( 0, 0, 0 ) --[[ @ 0]]
	NotimerShadow:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_18E8304D25283DA6" ) ) --[[ @ 0]]
	NotimerShadow:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	NotimerShadow:setLetterSpacing( -1 ) --[[ @ 0]]
	NotimerShadow:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	NotimerShadow:setAlignment( Enum[@"luialignment"][@"hash_E821F0ECFF8D1C7"] ) --[[ @ 0]]
	self:addElement( NotimerShadow ) --[[ @ 0]]
	self.NotimerShadow = NotimerShadow --[[ @ 0]]
	
	local Notimer = LUI.UIText.new( 0, 0, 0, 100, 0, 0, 4.5, 20.5 ) --[[ @ 0]]
	Notimer:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_18E8304D25283DA6" ) ) --[[ @ 0]]
	Notimer:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	Notimer:setLetterSpacing( -1 ) --[[ @ 0]]
	Notimer:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	Notimer:setAlignment( Enum[@"luialignment"][@"hash_E821F0ECFF8D1C7"] ) --[[ @ 0]]
	self:addElement( Notimer ) --[[ @ 0]]
	self.Notimer = Notimer --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "active",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsModelValueGreaterThan( f1_arg1, "gameScore.gameTimeEnd", 0 ) and not CoD.ModelUtility.IsModelValueEqualTo( f1_arg1, "gameScore.gameTimeLow", 1 )
			end
		},
		{
			stateName = "timelow",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsModelValueGreaterThan( f1_arg1, "gameScore.gameTimeEnd", 0 )
			end
		},
		{
			stateName = "notimelimit",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsModelValueEqualTo( f1_arg1, "gameScore.gameTimeLimit", 0 )
			end
		}
	} ) --[[ @ 0]]
	local f1_local5 = self --[[ @ 0]]
	local f1_local6 = self.subscribeToModel --[[ @ 0]]
	local f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local6( f1_local5, f1_local7["gameScore.gameTimeEnd"], function ( f5_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f5_arg0:get(),
			modelName = "gameScore.gameTimeEnd"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local5 = self --[[ @ 0]]
	f1_local6 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local6( f1_local5, f1_local7["gameScore.gameTimeLow"], function ( f6_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f6_arg0:get(),
			modelName = "gameScore.gameTimeLow"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local5 = self --[[ @ 0]]
	f1_local6 = self.subscribeToModel --[[ @ 0]]
	f1_local7 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local6( f1_local5, f1_local7["gameScore.gameTimeLimit"], function ( f7_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f7_arg0:get(),
			modelName = "gameScore.gameTimeLimit"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.Codcaster_timer_nl.__resetProperties = function ( f8_arg0 )
	f8_arg0.Notimer:completeAnimation() --[[ @ 0]]
	f8_arg0.NotimerShadow:completeAnimation() --[[ @ 0]]
	f8_arg0.GameTimer:completeAnimation() --[[ @ 0]]
	f8_arg0.Notimer:setAlpha( 1 ) --[[ @ 0]]
	f8_arg0.NotimerShadow:setAlpha( 1 ) --[[ @ 0]]
	f8_arg0.GameTimer:setRGB( 1, 1, 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.Codcaster_timer_nl.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f9_arg0, f9_arg1 )
			f9_arg0:__resetProperties() --[[ @ 0]]
			f9_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	active = {
		DefaultClip = function ( f10_arg0, f10_arg1 )
			f10_arg0:__resetProperties() --[[ @ 0]]
			f10_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f10_arg0.NotimerShadow:completeAnimation() --[[ @ 0]]
			f10_arg0.NotimerShadow:setAlpha( 0 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.NotimerShadow ) --[[ @ 0]]
			f10_arg0.Notimer:completeAnimation() --[[ @ 0]]
			f10_arg0.Notimer:setAlpha( 0 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.Notimer ) --[[ @ 0]]
		end
	},
	timelow = {
		DefaultClip = function ( f11_arg0, f11_arg1 )
			f11_arg0:__resetProperties() --[[ @ 0]]
			f11_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f11_arg0.GameTimer:completeAnimation() --[[ @ 0]]
			f11_arg0.GameTimer:setRGB( ColorSet.ResistanceHigh.r, ColorSet.ResistanceHigh.g, ColorSet.ResistanceHigh.b ) --[[ @ 0]]
			f11_arg0.clipFinished( f11_arg0.GameTimer ) --[[ @ 0]]
			f11_arg0.NotimerShadow:completeAnimation() --[[ @ 0]]
			f11_arg0.NotimerShadow:setAlpha( 0 ) --[[ @ 0]]
			f11_arg0.clipFinished( f11_arg0.NotimerShadow ) --[[ @ 0]]
			f11_arg0.Notimer:completeAnimation() --[[ @ 0]]
			f11_arg0.Notimer:setAlpha( 0 ) --[[ @ 0]]
			f11_arg0.clipFinished( f11_arg0.Notimer ) --[[ @ 0]]
		end
	},
	notimelimit = {
		DefaultClip = function ( f12_arg0, f12_arg1 )
			f12_arg0:__resetProperties() --[[ @ 0]]
			f12_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
