-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:49
require( "x64:168d2be12a9d6269" ) --[[ @ 0]]

CoD.LeaguePlayRubyList = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.LeaguePlayRubyList.__defaultWidth = 150 --[[ @ 0]]
CoD.LeaguePlayRubyList.__defaultHeight = 40 --[[ @ 0]]
CoD.LeaguePlayRubyList.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIHorizontalList.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9, 0, false ) --[[ @ 0]]
	self:setAlignment( LUI.Alignment.Center ) --[[ @ 0]]
	self:setClass( CoD.LeaguePlayRubyList ) --[[ @ 0]]
	self.id = "LeaguePlayRubyList" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local Ruby1 = CoD.LeaguePlayRuby.new( f1_arg0, f1_arg1, 0.5, 0.5, -100, -60, 0.5, 0.5, -20, 20 ) --[[ @ 0]]
	self:addElement( Ruby1 ) --[[ @ 0]]
	self.Ruby1 = Ruby1 --[[ @ 0]]
	
	local Ruby2 = CoD.LeaguePlayRuby.new( f1_arg0, f1_arg1, 0.5, 0.5, -60, -20, 0.5, 0.5, -20, 20 ) --[[ @ 0]]
	self:addElement( Ruby2 ) --[[ @ 0]]
	self.Ruby2 = Ruby2 --[[ @ 0]]
	
	local Ruby3 = CoD.LeaguePlayRuby.new( f1_arg0, f1_arg1, 0.5, 0.5, -20, 20, 0.5, 0.5, -20, 20 ) --[[ @ 0]]
	self:addElement( Ruby3 ) --[[ @ 0]]
	self.Ruby3 = Ruby3 --[[ @ 0]]
	
	local Ruby4 = CoD.LeaguePlayRuby.new( f1_arg0, f1_arg1, 0.5, 0.5, 20, 60, 0.5, 0.5, -20, 20 ) --[[ @ 0]]
	self:addElement( Ruby4 ) --[[ @ 0]]
	self.Ruby4 = Ruby4 --[[ @ 0]]
	
	local Ruby5 = CoD.LeaguePlayRuby.new( f1_arg0, f1_arg1, 0.5, 0.5, 60, 100, 0.5, 0.5, -20, 20 ) --[[ @ 0]]
	self:addElement( Ruby5 ) --[[ @ 0]]
	self.Ruby5 = Ruby5 --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Tier1Rewards",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualTo( element, f1_arg1, "rubies", LuaUtils.GetRubiesForLeaguePlacementTier( 1 ) )
			end
		},
		{
			stateName = "Tier2Rewards",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualTo( element, f1_arg1, "rubies", LuaUtils.GetRubiesForLeaguePlacementTier( 2 ) )
			end
		},
		{
			stateName = "Tier3Rewards",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualTo( element, f1_arg1, "rubies", LuaUtils.GetRubiesForLeaguePlacementTier( 3 ) )
			end
		},
		{
			stateName = "Tier4Rewards",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualTo( element, f1_arg1, "rubies", LuaUtils.GetRubiesForLeaguePlacementTier( 4 ) )
			end
		},
		{
			stateName = "Tier5Rewards",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualTo( element, f1_arg1, "rubies", LuaUtils.GetRubiesForLeaguePlacementTier( 5 ) )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "rubies", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "rubies"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.LeaguePlayRubyList.__resetProperties = function ( f8_arg0 )
	f8_arg0.Ruby1:completeAnimation() --[[ @ 0]]
	f8_arg0.Ruby2:completeAnimation() --[[ @ 0]]
	f8_arg0.Ruby4:completeAnimation() --[[ @ 0]]
	f8_arg0.Ruby3:completeAnimation() --[[ @ 0]]
	f8_arg0.Ruby5:completeAnimation() --[[ @ 0]]
	f8_arg0.Ruby1:setAlpha( 1 ) --[[ @ 0]]
	f8_arg0.Ruby2:setAlpha( 1 ) --[[ @ 0]]
	f8_arg0.Ruby4:setAlpha( 1 ) --[[ @ 0]]
	f8_arg0.Ruby3:setAlpha( 1 ) --[[ @ 0]]
	f8_arg0.Ruby5:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.LeaguePlayRubyList.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f9_arg0, f9_arg1 )
			f9_arg0:__resetProperties() --[[ @ 0]]
			f9_arg0:setupElementClipCounter( 5 ) --[[ @ 0]]
			f9_arg0.Ruby1:completeAnimation() --[[ @ 0]]
			f9_arg0.Ruby1:setAlpha( 0 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.Ruby1 ) --[[ @ 0]]
			f9_arg0.Ruby2:completeAnimation() --[[ @ 0]]
			f9_arg0.Ruby2:setAlpha( 0 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.Ruby2 ) --[[ @ 0]]
			f9_arg0.Ruby3:completeAnimation() --[[ @ 0]]
			f9_arg0.Ruby3:setAlpha( 0 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.Ruby3 ) --[[ @ 0]]
			f9_arg0.Ruby4:completeAnimation() --[[ @ 0]]
			f9_arg0.Ruby4:setAlpha( 0 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.Ruby4 ) --[[ @ 0]]
			f9_arg0.Ruby5:completeAnimation() --[[ @ 0]]
			f9_arg0.Ruby5:setAlpha( 0 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.Ruby5 ) --[[ @ 0]]
		end
	},
	Tier1Rewards = {
		DefaultClip = function ( f10_arg0, f10_arg1 )
			f10_arg0:__resetProperties() --[[ @ 0]]
			f10_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	Tier2Rewards = {
		DefaultClip = function ( f11_arg0, f11_arg1 )
			f11_arg0:__resetProperties() --[[ @ 0]]
			f11_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f11_arg0.Ruby5:completeAnimation() --[[ @ 0]]
			f11_arg0.Ruby5:setAlpha( 0 ) --[[ @ 0]]
			f11_arg0.clipFinished( f11_arg0.Ruby5 ) --[[ @ 0]]
		end
	},
	Tier3Rewards = {
		DefaultClip = function ( f12_arg0, f12_arg1 )
			f12_arg0:__resetProperties() --[[ @ 0]]
			f12_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f12_arg0.Ruby4:completeAnimation() --[[ @ 0]]
			f12_arg0.Ruby4:setAlpha( 0 ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.Ruby4 ) --[[ @ 0]]
			f12_arg0.Ruby5:completeAnimation() --[[ @ 0]]
			f12_arg0.Ruby5:setAlpha( 0 ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.Ruby5 ) --[[ @ 0]]
		end
	},
	Tier4Rewards = {
		DefaultClip = function ( f13_arg0, f13_arg1 )
			f13_arg0:__resetProperties() --[[ @ 0]]
			f13_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f13_arg0.Ruby3:completeAnimation() --[[ @ 0]]
			f13_arg0.Ruby3:setAlpha( 0 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.Ruby3 ) --[[ @ 0]]
			f13_arg0.Ruby4:completeAnimation() --[[ @ 0]]
			f13_arg0.Ruby4:setAlpha( 0 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.Ruby4 ) --[[ @ 0]]
			f13_arg0.Ruby5:completeAnimation() --[[ @ 0]]
			f13_arg0.Ruby5:setAlpha( 0 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.Ruby5 ) --[[ @ 0]]
		end
	},
	Tier5Rewards = {
		DefaultClip = function ( f14_arg0, f14_arg1 )
			f14_arg0:__resetProperties() --[[ @ 0]]
			f14_arg0:setupElementClipCounter( 5 ) --[[ @ 0]]
			f14_arg0.Ruby1:completeAnimation() --[[ @ 0]]
			f14_arg0.Ruby1:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.Ruby1 ) --[[ @ 0]]
			f14_arg0.Ruby2:completeAnimation() --[[ @ 0]]
			f14_arg0.Ruby2:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.Ruby2 ) --[[ @ 0]]
			f14_arg0.Ruby3:completeAnimation() --[[ @ 0]]
			f14_arg0.Ruby3:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.Ruby3 ) --[[ @ 0]]
			f14_arg0.Ruby4:completeAnimation() --[[ @ 0]]
			f14_arg0.Ruby4:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.Ruby4 ) --[[ @ 0]]
			f14_arg0.Ruby5:completeAnimation() --[[ @ 0]]
			f14_arg0.Ruby5:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.Ruby5 ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.LeaguePlayRubyList.__onClose = function ( f15_arg0 )
	f15_arg0.Ruby1:close() --[[ @ 0]]
	f15_arg0.Ruby2:close() --[[ @ 0]]
	f15_arg0.Ruby3:close() --[[ @ 0]]
	f15_arg0.Ruby4:close() --[[ @ 0]]
	f15_arg0.Ruby5:close() --[[ @ 0]]
end
 --[[ @ 0]]
