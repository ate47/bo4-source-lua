-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:50
require( "ui/uieditor/widgets/backgroundframes/genericmenuframe" ) --[[ @ 0]]
require( "x64:6436f2d3868d3737" ) --[[ @ 0]]
require( "x64:7c8e36d66138f434" ) --[[ @ 0]]
require( "ui/uieditor/widgets/scrollbars/verticalcounter" ) --[[ @ 0]]
require( "ui/uieditor/widgets/startmenu/options/startmenuoptionsbackground" ) --[[ @ 0]]

CoD.Prestige_CustomizeIcon = InheritFrom( CoD.Menu ) --[[ @ 0]]
LUI.createMenu.Prestige_CustomizeIcon = function ( f1_arg0, f1_arg1 )
	local self = CoD.Menu.NewForUIEditor( "Prestige_CustomizeIcon", f1_arg0 ) --[[ @ 0]]
	local f1_local1 = self --[[ @ 0]]
	self:setClass( CoD.Prestige_CustomizeIcon ) --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self:setOwner( f1_arg0 ) --[[ @ 0]]
	self:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	self:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	self:playSound( "menu_open", f1_arg0 ) --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	
	local Background = CoD.StartMenuOptionsBackground.new( f1_local1, f1_arg0, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	self:addElement( Background ) --[[ @ 0]]
	self.Background = Background --[[ @ 0]]
	
	local BlackBacking = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	BlackBacking:setRGB( 0, 0, 0 ) --[[ @ 0]]
	BlackBacking:setAlpha( 0.2 ) --[[ @ 0]]
	self:addElement( BlackBacking ) --[[ @ 0]]
	self.BlackBacking = BlackBacking --[[ @ 0]]
	
	local TiledPlusGrid = LUI.UIImage.new( 0.5, 0.5, -1095, 960, 0.5, 0.5, -540, 540 ) --[[ @ 0]]
	TiledPlusGrid:setAlpha( 0.05 ) --[[ @ 0]]
	TiledPlusGrid:setImage( RegisterImage( @"uie_ui_hud_vehicle_hellstorm_repeat_plusgrid" ) ) --[[ @ 0]]
	TiledPlusGrid:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_67C9C02F608D0A75" ) ) --[[ @ 0]]
	TiledPlusGrid:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	TiledPlusGrid:setupNineSliceShader( 220, 220 ) --[[ @ 0]]
	self:addElement( TiledPlusGrid ) --[[ @ 0]]
	self.TiledPlusGrid = TiledPlusGrid --[[ @ 0]]
	
	local GenericMenuFrame = CoD.GenericMenuFrame.new( f1_local1, f1_arg0, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	GenericMenuFrame.CommonHeader.subtitle.StageTitle:setText( LocalizeToUpperString( CoD.CustomizePrestigeIconUtility.GetCustomizePrestigeIconMenuTitleString( @"hash_7754A8D073F00C06" ) ) ) --[[ @ 0]]
	GenericMenuFrame.CommonHeader.subtitle.subtitle:setText( "" ) --[[ @ 0]]
	self:addElement( GenericMenuFrame ) --[[ @ 0]]
	self.GenericMenuFrame = GenericMenuFrame --[[ @ 0]]
	
	local Details = CoD.CustomizeIconDetails.new( f1_local1, f1_arg0, 0.5, 0.5, 217, 617, 0.5, 0.5, -322, 322 ) --[[ @ 0]]
	Details:mergeStateConditions( {
		{
			stateName = "LockedVictoryCoin",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg0, "isLockedByWins" ) and CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg0, "isLocked" )
			end
		},
		{
			stateName = "Locked",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg0, "isLocked" )
			end
		}
	} ) --[[ @ 0]]
	Details:linkToElementModel( Details, "isLockedByWins", true, function ( model )
		f1_local1:updateElementState( Details, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = model:get(),
			modelName = "isLockedByWins"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	Details:linkToElementModel( Details, "isLocked", true, function ( model )
		f1_local1:updateElementState( Details, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = model:get(),
			modelName = "isLocked"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( Details ) --[[ @ 0]]
	self.Details = Details --[[ @ 0]]
	
	local IconList = LUI.UIList.new( f1_local1, f1_arg0, 20, 0, nil, true, false, false, false ) --[[ @ 0]]
	IconList:setLeftRight( 0.5, 0.5, -622, 130 ) --[[ @ 0]]
	IconList:setTopBottom( 0.5, 0.5, -322, 322 ) --[[ @ 0]]
	IconList:setWidgetType( CoD.CustomizeIconGridItem ) --[[ @ 0]]
	IconList:setHorizontalCount( 4 ) --[[ @ 0]]
	IconList:setVerticalCount( 4 ) --[[ @ 0]]
	IconList:setSpacing( 20 ) --[[ @ 0]]
	IconList:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	IconList:setVerticalCounter( CoD.verticalCounter ) --[[ @ 0]]
	IconList:setDataSource( "PrestigeIcon" ) --[[ @ 0]]
	IconList:registerEventHandler( "gain_focus", function ( element, event )
		local f6_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f6_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f6_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_local1, f1_arg0, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		return f6_local0
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( IconList, f1_arg0, Enum[@"luibutton"][@"lui_key_xba_pscross"], nil, function ( element, menu, controller, model )
		CoD.CustomizePrestigeIconUtility.PrestigeIconSelected( menu, element, controller ) --[[ @ 0]]
		UpdateElementDataSource( self, "IconList" ) --[[ @ 0]]
		CoD.PrestigeUtility.ClearHasPrestigedStatus( self, controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"menu/select", nil, nil ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	self:addElement( IconList ) --[[ @ 0]]
	self.IconList = IconList --[[ @ 0]]
	
	Details:linkToElementModel( IconList, nil, false, function ( model )
		Details:setModel( model, f1_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:registerEventHandler( "list_item_gain_focus", function ( self, event )
		local f10_local0 = nil --[[ @ 0]]
		UpdateElementState( self, "Details", f1_arg0 ) --[[ @ 0]]
		return f10_local0
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"luibutton"][@"lui_key_xbb_pscircle"], nil, function ( element, menu, controller, model )
		GoBack( self, controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xbb_pscircle"], @"menu/back", nil, nil ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	if CoD.isPC then
		GenericMenuFrame.id = "GenericMenuFrame" --[[ @ 0]]
	end
	IconList.id = "IconList" --[[ @ 0]]
	self:processEvent( {
		name = "menu_loaded",
		controller = f1_arg0
	} ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.Prestige_CustomizeIcon.__onClose = function ( f13_arg0 )
	f13_arg0.Details:close() --[[ @ 0]]
	f13_arg0.Background:close() --[[ @ 0]]
	f13_arg0.GenericMenuFrame:close() --[[ @ 0]]
	f13_arg0.IconList:close() --[[ @ 0]]
end
 --[[ @ 0]]
