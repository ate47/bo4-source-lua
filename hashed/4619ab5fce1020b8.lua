-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:49
require( "x64:2c2f840fd2528321" ) --[[ @ 0]]
require( "x64:396b29a3176ada0f" ) --[[ @ 0]]
require( "x64:1c61a61dbc4fee01" ) --[[ @ 0]]
require( "ui/uieditor/widgets/footer/fe_footerrighslidein" ) --[[ @ 0]]
require( "ui/uieditor/widgets/theater/theater_hinttext" ) --[[ @ 0]]

CoD.FileshareOptions = InheritFrom( CoD.Menu ) --[[ @ 0]]
LUI.createMenu.FileshareOptions = function ( f1_arg0, f1_arg1 )
	local self = CoD.Menu.NewForUIEditor( "FileshareOptions", f1_arg0 ) --[[ @ 0]]
	local f1_local1 = self --[[ @ 0]]
	SetGlobalModelValueArg( "fileshareRoot.deleteTask.state", Enum[@"filesharetaskuistate"][@"fileshare_task_ui_idle"] ) --[[ @ 0]]
	CoD.FileshareUtility.UpdateCurrentQuota( f1_arg0 ) --[[ @ 0]]
	self:setClass( CoD.FileshareOptions ) --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self:setOwner( f1_arg0 ) --[[ @ 0]]
	self:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	self:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	self:playSound( "menu_open", f1_arg0 ) --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_local1:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local Blackfade = LUI.UIImage.new( 0.39, 0.61, -740, 740, 0, 0, 0, 1080 ) --[[ @ 0]]
	Blackfade:setRGB( 0, 0, 0 ) --[[ @ 0]]
	Blackfade:setAlpha( 0.35 ) --[[ @ 0]]
	self:addElement( Blackfade ) --[[ @ 0]]
	self.Blackfade = Blackfade --[[ @ 0]]
	
	local tileTexture = LUI.UIImage.new( 1, 1, -532, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	tileTexture:setAlpha( 0.5 ) --[[ @ 0]]
	tileTexture:setImage( RegisterImage( @"uie_t7_tile_texture" ) ) --[[ @ 0]]
	tileTexture:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_tile_scroll" ) ) --[[ @ 0]]
	tileTexture:setShaderVector( 0, 30, 55, 0, 0 ) --[[ @ 0]]
	tileTexture:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( tileTexture ) --[[ @ 0]]
	self.tileTexture = tileTexture --[[ @ 0]]
	
	local leftBackground = LUI.UIImage.new( 1, 1, -532, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	leftBackground:setRGB( 0.04, 0.04, 0.04 ) --[[ @ 0]]
	leftBackground:setAlpha( 0.98 ) --[[ @ 0]]
	self:addElement( leftBackground ) --[[ @ 0]]
	self.leftBackground = leftBackground --[[ @ 0]]
	
	local OptionsList = LUI.UIList.new( f1_local1, f1_arg0, 2, 0, nil, false, false, false, false ) --[[ @ 0]]
	OptionsList:setLeftRight( 1, 1, -451, -51 ) --[[ @ 0]]
	OptionsList:setTopBottom( 0, 0, 498, 558 ) --[[ @ 0]]
	OptionsList:setWidgetType( CoD.EmblemOptionsButton ) --[[ @ 0]]
	OptionsList:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	OptionsList:setDataSource( "FileshareOptionsButtonList" ) --[[ @ 0]]
	OptionsList:registerEventHandler( "gain_focus", function ( element, event )
		local f2_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f2_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f2_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_local1, f1_arg0, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		return f2_local0
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( OptionsList, f1_arg0, Enum[@"luibutton"][@"lui_key_xba_pscross"], "ui_confirm", function ( element, menu, controller, model )
		ProcessListAction( self, element, controller, menu ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"menu/select", nil, "ui_confirm" ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	self:addElement( OptionsList ) --[[ @ 0]]
	self.OptionsList = OptionsList --[[ @ 0]]
	
	local Title = LUI.UIText.new( 1, 1, -451, -21, 0, 0, 35, 80 ) --[[ @ 0]]
	Title:setRGB( ColorSet.T8__BEIGE__HEADER.r, ColorSet.T8__BEIGE__HEADER.g, ColorSet.T8__BEIGE__HEADER.b ) --[[ @ 0]]
	Title:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_2FA47140D97F89D" ) ) --[[ @ 0]]
	Title:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	Title:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	Title:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	self:addElement( Title ) --[[ @ 0]]
	self.Title = Title --[[ @ 0]]
	
	local Border00 = LUI.UIImage.new( 1, 1, -533, -531, 0, 0, 0, 1080 ) --[[ @ 0]]
	Border00:setAlpha( 0.42 ) --[[ @ 0]]
	self:addElement( Border00 ) --[[ @ 0]]
	self.Border00 = Border00 --[[ @ 0]]
	
	local Border0 = LUI.UIImage.new( 1, 1, -533, -531, 0, 0, 0, 1080 ) --[[ @ 0]]
	Border0:setAlpha( 0.42 ) --[[ @ 0]]
	self:addElement( Border0 ) --[[ @ 0]]
	self.Border0 = Border0 --[[ @ 0]]
	
	local fefooterRighSlideIn = CoD.fe_footerRighSlideIn.new( f1_local1, f1_arg0, 1, 1, -670, -22, 1, 1, -48, 0 ) --[[ @ 0]]
	fefooterRighSlideIn:registerEventHandler( "menu_loaded", function ( element, event )
		local f5_local0 = nil --[[ @ 0]]
		if element.menuLoaded then
			f5_local0 = element:menuLoaded( event ) --[[ @ 0]]
		elseif element.super.menuLoaded then
			f5_local0 = element.super:menuLoaded( event ) --[[ @ 0]]
		end
		SizeToSafeArea( element, f1_arg0 ) --[[ @ 0]]
		if not f5_local0 then
			f5_local0 = element:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f5_local0
	end ) --[[ @ 0]]
	self:addElement( fefooterRighSlideIn ) --[[ @ 0]]
	self.fefooterRighSlideIn = fefooterRighSlideIn --[[ @ 0]]
	
	local hintText = CoD.Theater_HintText.new( f1_local1, f1_arg0, 0, 0, 1469, 1869, 0, 0, 578, 598 ) --[[ @ 0]]
	self:addElement( hintText ) --[[ @ 0]]
	self.hintText = hintText --[[ @ 0]]
	
	local SlotsUsedWidget = CoD.SlotsUsedWidget.new( f1_local1, f1_arg0, 0, 0, 1404, 1934, 0, 0, 874, 967 ) --[[ @ 0]]
	SlotsUsedWidget:mergeStateConditions( {
		{
			stateName = "Warning",
			condition = function ( menu, element, event )
				return CoD.FileshareUtility.IsLowOnSlots( f1_arg0 ) and not CoD.FileshareUtility.AreSlotsFull( f1_arg0 )
			end
		},
		{
			stateName = "SlotsFull",
			condition = function ( menu, element, event )
				return CoD.FileshareUtility.AreSlotsFull( f1_arg0 )
			end
		}
	} ) --[[ @ 0]]
	SlotsUsedWidget.Title:setText( LocalizeToUpperString( @"hash_50E192601D65F99E" ) ) --[[ @ 0]]
	SlotsUsedWidget:subscribeToGlobalModel( f1_arg0, "FileshareRoot", "currentCategoryQuota", function ( model )
		local f8_local0 = model:get() --[[ @ 0]]
		if f8_local0 ~= nil then
			SlotsUsedWidget.Total:setText( f8_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	SlotsUsedWidget:subscribeToGlobalModel( f1_arg0, "FileshareRoot", "currentCategoryQuotaUsed", function ( model )
		local f9_local0 = model:get() --[[ @ 0]]
		if f9_local0 ~= nil then
			SlotsUsedWidget.Used:setText( f9_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	SlotsUsedWidget:subscribeToGlobalModel( f1_arg0, "FileshareRoot", "currentCategoryQuota", function ( model )
		local f10_local0 = model:get() --[[ @ 0]]
		if f10_local0 ~= nil then
			SlotsUsedWidget.totalBar:setShaderVector( 1, SetVectorComponent( 2, 1, CoD.GetVectorComponentFromString( f10_local0, 1 ), CoD.GetVectorComponentFromString( f10_local0, 2 ), CoD.GetVectorComponentFromString( f10_local0, 3 ), CoD.GetVectorComponentFromString( f10_local0, 4 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	SlotsUsedWidget:subscribeToGlobalModel( f1_arg0, "FileshareRoot", "currentCategoryQuota", function ( model )
		local f11_local0 = model:get() --[[ @ 0]]
		if f11_local0 ~= nil then
			SlotsUsedWidget.usedBar:setShaderVector( 1, SetVectorComponent( 2, 1, CoD.GetVectorComponentFromString( f11_local0, 1 ), CoD.GetVectorComponentFromString( f11_local0, 2 ), CoD.GetVectorComponentFromString( f11_local0, 3 ), CoD.GetVectorComponentFromString( f11_local0, 4 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	SlotsUsedWidget:subscribeToGlobalModel( f1_arg0, "FileshareRoot", "currentCategoryQuotaUsedPercent", function ( model )
		local f12_local0 = model:get() --[[ @ 0]]
		if f12_local0 ~= nil then
			SlotsUsedWidget.usedBar:setShaderVector( 2, SetVectorComponent( 4, 1, SetVectorComponent( 3, 0, SetVectorComponent( 1, 0, SwapVectorComponents( 1, 2, CoD.GetVectorComponentFromString( f12_local0, 1 ), CoD.GetVectorComponentFromString( f12_local0, 2 ), CoD.GetVectorComponentFromString( f12_local0, 3 ), CoD.GetVectorComponentFromString( f12_local0, 4 ) ) ) ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	SlotsUsedWidget:subscribeToGlobalModel( f1_arg0, "GlobalModel", "FileshareRoot.ready", function ( model )
		local f13_local0 = SlotsUsedWidget --[[ @ 0]]
		CoD.FileshareUtility.UpdateCurrentQuota( f1_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( SlotsUsedWidget ) --[[ @ 0]]
	self.SlotsUsedWidget = SlotsUsedWidget --[[ @ 0]]
	
	local FileshareSelectedItemPreview = CoD.FileshareSelectedItemPreview.new( f1_local1, f1_arg0, 0, 0, 1398, 1898, 0, 0, 80, 460 ) --[[ @ 0]]
	FileshareSelectedItemPreview:subscribeToGlobalModel( f1_arg0, "FileshareSelectedItem", nil, function ( model )
		FileshareSelectedItemPreview:setModel( model, f1_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( FileshareSelectedItemPreview ) --[[ @ 0]]
	self.FileshareSelectedItemPreview = FileshareSelectedItemPreview --[[ @ 0]]
	
	hintText:linkToElementModel( OptionsList, "hintText", true, function ( model )
		local f15_local0 = model:get() --[[ @ 0]]
		if f15_local0 ~= nil then
			hintText.ItemHintText:setText( Engine[@"hash_4F9F1239CFD921FE"]( f15_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:mergeStateConditions( {
		{
			stateName = "PC",
			condition = function ( menu, element, event )
				return IsPC()
			end
		}
	} ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"luibutton"][@"lui_key_xbb_pscircle"], nil, function ( element, menu, controller, model )
		GoBack( self, controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xbb_pscircle"], @"menu/back", nil, nil ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( self, "close", function ( element )
		ClearMenuSavedState( f1_local1 ) --[[ @ 0]]
		PreserveThumbnails( f1_arg0, false ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:subscribeToGlobalModel( f1_arg0, "GlobalModel", "fileshareRoot.publishTask.state", function ( model )
		local f20_local0 = self --[[ @ 0]]
		if CoD.ModelUtility.IsGlobalModelValueEqualToEnum( "fileshareRoot.publishTask.state", Enum[@"filesharetaskuistate"][@"fileshare_task_ui_done"] ) and CoD.ModelUtility.IsGlobalModelValueTrue( "fileshareRoot.publishTask.success" ) then
			GoBack( self, f1_arg0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:subscribeToGlobalModel( f1_arg0, "GlobalModel", "fileshareRoot.deleteTask.state", function ( model )
		local f21_local0 = self --[[ @ 0]]
		if CoD.ModelUtility.IsGlobalModelValueEqualToEnum( "fileshareRoot.deleteTask.state", Enum[@"filesharetaskuistate"][@"fileshare_task_ui_done"] ) and CoD.ModelUtility.IsGlobalModelValueTrue( "fileshareRoot.deleteTask.success" ) then
			CoD.FileshareUtility.ShowToast( f1_arg0, CoD.FileshareUtility.ToastTypes.DELETE ) --[[ @ 0]]
			CoD.FileshareUtility.DeleteDone( self, f21_local0, f1_arg0, "", f1_local1 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	OptionsList.id = "OptionsList" --[[ @ 0]]
	fefooterRighSlideIn.buttons:setModel( self.buttonModel, f1_arg0 ) --[[ @ 0]]
	if CoD.isPC then
		fefooterRighSlideIn.id = "fefooterRighSlideIn" --[[ @ 0]]
	end
	self:processEvent( {
		name = "menu_loaded",
		controller = f1_arg0
	} ) --[[ @ 0]]
	self.__defaultFocus = OptionsList --[[ @ 0]]
	if CoD.isPC and (IsKeyboard( f1_arg0 ) or self.ignoreCursor) then
		self:restoreState( f1_arg0 ) --[[ @ 0]]
	end
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg0 ) --[[ @ 0]]
	end
	
	local f1_local13 = self --[[ @ 0]]
	CoD.GridAndListUtility.SetFocusToFirstSelectableItem( self.OptionsList ) --[[ @ 0]]
	f1_local13 = SlotsUsedWidget --[[ @ 0]]
	CoD.FileshareUtility.UpdateCurrentQuota( f1_arg0 ) --[[ @ 0]]
	return self
end
 --[[ @ 0]]
CoD.FileshareOptions.__resetProperties = function ( f22_arg0 )
	f22_arg0.hintText:completeAnimation() --[[ @ 0]]
	f22_arg0.fefooterRighSlideIn:completeAnimation() --[[ @ 0]]
	f22_arg0.Border0:completeAnimation() --[[ @ 0]]
	f22_arg0.Border00:completeAnimation() --[[ @ 0]]
	f22_arg0.Title:completeAnimation() --[[ @ 0]]
	f22_arg0.OptionsList:completeAnimation() --[[ @ 0]]
	f22_arg0.leftBackground:completeAnimation() --[[ @ 0]]
	f22_arg0.tileTexture:completeAnimation() --[[ @ 0]]
	f22_arg0.SlotsUsedWidget:completeAnimation() --[[ @ 0]]
	f22_arg0.hintText:setLeftRight( 0, 0, 1469, 1869 ) --[[ @ 0]]
	f22_arg0.hintText:setAlpha( 1 ) --[[ @ 0]]
	f22_arg0.fefooterRighSlideIn:setLeftRight( 1, 1, -670, -22 ) --[[ @ 0]]
	f22_arg0.fefooterRighSlideIn:setAlpha( 1 ) --[[ @ 0]]
	f22_arg0.Border0:setLeftRight( 1, 1, -533, -531 ) --[[ @ 0]]
	f22_arg0.Border00:setLeftRight( 1, 1, -533, -531 ) --[[ @ 0]]
	f22_arg0.Title:setLeftRight( 1, 1, -451, -21 ) --[[ @ 0]]
	f22_arg0.OptionsList:setLeftRight( 1, 1, -451, -51 ) --[[ @ 0]]
	f22_arg0.OptionsList:setTopBottom( 0, 0, 498, 558 ) --[[ @ 0]]
	f22_arg0.leftBackground:setLeftRight( 1, 1, -532, 0 ) --[[ @ 0]]
	f22_arg0.tileTexture:setLeftRight( 1, 1, -532, 0 ) --[[ @ 0]]
	f22_arg0.SlotsUsedWidget:setLeftRight( 0, 0, 1404, 1934 ) --[[ @ 0]]
	f22_arg0.SlotsUsedWidget:setTopBottom( 0, 0, 874, 967 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.FileshareOptions.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f23_arg0, f23_arg1 )
			f23_arg0:__resetProperties() --[[ @ 0]]
			f23_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	PC = {
		DefaultClip = function ( f24_arg0, f24_arg1 )
			f24_arg0:__resetProperties() --[[ @ 0]]
			f24_arg0:setupElementClipCounter( 9 ) --[[ @ 0]]
			f24_arg0.tileTexture:completeAnimation() --[[ @ 0]]
			f24_arg0.tileTexture:setLeftRight( 0.5, 0.5, -266, 266 ) --[[ @ 0]]
			f24_arg0.clipFinished( f24_arg0.tileTexture ) --[[ @ 0]]
			f24_arg0.leftBackground:completeAnimation() --[[ @ 0]]
			f24_arg0.leftBackground:setLeftRight( 0.5, 0.5, -266, 266 ) --[[ @ 0]]
			f24_arg0.clipFinished( f24_arg0.leftBackground ) --[[ @ 0]]
			f24_arg0.OptionsList:completeAnimation() --[[ @ 0]]
			f24_arg0.OptionsList:setLeftRight( 0.5, 0.5, -200, 200 ) --[[ @ 0]]
			f24_arg0.OptionsList:setTopBottom( 0, 0, 593, 839 ) --[[ @ 0]]
			f24_arg0.clipFinished( f24_arg0.OptionsList ) --[[ @ 0]]
			f24_arg0.Title:completeAnimation() --[[ @ 0]]
			f24_arg0.Title:setLeftRight( 0.5, 0.5, -215, 215 ) --[[ @ 0]]
			f24_arg0.clipFinished( f24_arg0.Title ) --[[ @ 0]]
			f24_arg0.Border00:completeAnimation() --[[ @ 0]]
			f24_arg0.Border00:setLeftRight( 0.5, 0.5, 265, 267 ) --[[ @ 0]]
			f24_arg0.clipFinished( f24_arg0.Border00 ) --[[ @ 0]]
			f24_arg0.Border0:completeAnimation() --[[ @ 0]]
			f24_arg0.Border0:setLeftRight( 0.5, 0.5, -267, -265 ) --[[ @ 0]]
			f24_arg0.clipFinished( f24_arg0.Border0 ) --[[ @ 0]]
			f24_arg0.fefooterRighSlideIn:completeAnimation() --[[ @ 0]]
			f24_arg0.fefooterRighSlideIn:setLeftRight( 0.5, 0.5, -324, 324 ) --[[ @ 0]]
			f24_arg0.fefooterRighSlideIn:setAlpha( 0 ) --[[ @ 0]]
			f24_arg0.clipFinished( f24_arg0.fefooterRighSlideIn ) --[[ @ 0]]
			f24_arg0.hintText:completeAnimation() --[[ @ 0]]
			f24_arg0.hintText:setLeftRight( 0.5, 0.5, -210, 210 ) --[[ @ 0]]
			f24_arg0.hintText:setAlpha( 0 ) --[[ @ 0]]
			f24_arg0.clipFinished( f24_arg0.hintText ) --[[ @ 0]]
			f24_arg0.SlotsUsedWidget:completeAnimation() --[[ @ 0]]
			f24_arg0.SlotsUsedWidget:setLeftRight( 0.5, 0.5, -250, 250 ) --[[ @ 0]]
			f24_arg0.SlotsUsedWidget:setTopBottom( 0.5, 0.5, 324, 454 ) --[[ @ 0]]
			f24_arg0.clipFinished( f24_arg0.SlotsUsedWidget ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.FileshareOptions.__onClose = function ( f25_arg0 )
	f25_arg0.hintText:close() --[[ @ 0]]
	f25_arg0.OptionsList:close() --[[ @ 0]]
	f25_arg0.fefooterRighSlideIn:close() --[[ @ 0]]
	f25_arg0.SlotsUsedWidget:close() --[[ @ 0]]
	f25_arg0.FileshareSelectedItemPreview:close() --[[ @ 0]]
end
 --[[ @ 0]]
