-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:49
require( "x64:53b9fcb643fbe613" ) --[[ @ 0]]
require( "x64:246728994d8c06c0" ) --[[ @ 0]]

CoD.ZMCallingsWidget = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.ZMCallingsWidget.__defaultWidth = 477 --[[ @ 0]]
CoD.ZMCallingsWidget.__defaultHeight = 382 --[[ @ 0]]
CoD.ZMCallingsWidget.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	CoD.BaseUtility.CreateGlobalModel( "AutoEvents.cycled" ) --[[ @ 0]]
	self:setClass( CoD.ZMCallingsWidget ) --[[ @ 0]]
	self.id = "ZMCallingsWidget" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local CommonDetailPanel2 = CoD.CommonDetailPanel02.new( f1_arg0, f1_arg1, 0, 0, 0, 477, 0, 0, 0, 382 ) --[[ @ 0]]
	CommonDetailPanel2.BackingBlur:setAlpha( 0 ) --[[ @ 0]]
	CommonDetailPanel2.BackingTint:setAlpha( 0.5 ) --[[ @ 0]]
	self:addElement( CommonDetailPanel2 ) --[[ @ 0]]
	self.CommonDetailPanel2 = CommonDetailPanel2 --[[ @ 0]]
	
	local SpecialEventWidget = CoD.SpecialEventWidget.new( f1_arg0, f1_arg1, 0, 0, 0, 477, 0, 0, 0, 382 ) --[[ @ 0]]
	SpecialEventWidget:mergeStateConditions( {
		{
			stateName = "DailyCompleteLayoutSmall",
			condition = function ( menu, element, event )
				local f2_local0 = CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg1, "showDailyLayout" ) --[[ @ 0]]
				if f2_local0 then
					f2_local0 = CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg1, "allTasksComplete" ) --[[ @ 0]]
					if f2_local0 then
						f2_local0 = CoD.BaseUtility.IsSelfInState( self, "DailyCallingSmall" ) --[[ @ 0]]
					end
				end
				return f2_local0
			end
		},
		{
			stateName = "DailyLayoutSmall",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg1, "showDailyLayout" ) and CoD.BaseUtility.IsSelfInState( self, "DailyCallingSmall" )
			end
		}
	} ) --[[ @ 0]]
	SpecialEventWidget:linkToElementModel( SpecialEventWidget, "showDailyLayout", true, function ( model )
		f1_arg0:updateElementState( SpecialEventWidget, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "showDailyLayout"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	SpecialEventWidget:linkToElementModel( SpecialEventWidget, "allTasksComplete", true, function ( model )
		f1_arg0:updateElementState( SpecialEventWidget, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "allTasksComplete"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	SpecialEventWidget.RewardQuantityText.RewardGrid:setDataSource( "DailyCallingRewards" ) --[[ @ 0]]
	SpecialEventWidget.SpecialEventPips:setAlpha( 0 ) --[[ @ 0]]
	SpecialEventWidget:subscribeToGlobalModel( f1_arg1, "DailyCallingInfo", nil, function ( model )
		SpecialEventWidget:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( SpecialEventWidget ) --[[ @ 0]]
	self.SpecialEventWidget = SpecialEventWidget --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "DailyCallingSmall",
			condition = function ( menu, element, event )
				return IsIntDvarNonZero( "zm_active_daily_calling" ) and AlwaysFalse()
			end
		},
		{
			stateName = "DailyCalling",
			condition = function ( menu, element, event )
				return IsIntDvarNonZero( "zm_active_daily_calling" )
			end
		}
	} ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( self, "setState", function ( element, controller, f9_arg2, f9_arg3, f9_arg4 )
		UpdateElementState( self, "SpecialEventWidget", controller ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:subscribeToGlobalModel( f1_arg1, "GlobalModel", "AutoEvents.cycled", function ( model )
		local f10_local0 = self --[[ @ 0]]
		UpdateSelfState( self, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	SpecialEventWidget.id = "SpecialEventWidget" --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.ZMCallingsWidget.__resetProperties = function ( f11_arg0 )
	f11_arg0.SpecialEventWidget:completeAnimation() --[[ @ 0]]
	f11_arg0.CommonDetailPanel2:completeAnimation() --[[ @ 0]]
	f11_arg0.SpecialEventWidget:setAlpha( 1 ) --[[ @ 0]]
	f11_arg0.CommonDetailPanel2:setTopBottom( 0, 0, 0, 382 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ZMCallingsWidget.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f12_arg0, f12_arg1 )
			f12_arg0:__resetProperties() --[[ @ 0]]
			f12_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f12_arg0.SpecialEventWidget:completeAnimation() --[[ @ 0]]
			f12_arg0.SpecialEventWidget:setAlpha( 0 ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.SpecialEventWidget ) --[[ @ 0]]
		end
	},
	DailyCallingSmall = {
		DefaultClip = function ( f13_arg0, f13_arg1 )
			f13_arg0:__resetProperties() --[[ @ 0]]
			f13_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f13_arg0.CommonDetailPanel2:completeAnimation() --[[ @ 0]]
			f13_arg0.CommonDetailPanel2:setTopBottom( 0, 0, 0, 269 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.CommonDetailPanel2 ) --[[ @ 0]]
			f13_arg0.SpecialEventWidget:completeAnimation() --[[ @ 0]]
			f13_arg0.SpecialEventWidget:setAlpha( 1 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.SpecialEventWidget ) --[[ @ 0]]
		end
	},
	DailyCalling = {
		DefaultClip = function ( f14_arg0, f14_arg1 )
			f14_arg0:__resetProperties() --[[ @ 0]]
			f14_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f14_arg0.SpecialEventWidget:completeAnimation() --[[ @ 0]]
			f14_arg0.SpecialEventWidget:setAlpha( 1 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.SpecialEventWidget ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.ZMCallingsWidget.__onClose = function ( f15_arg0 )
	f15_arg0.CommonDetailPanel2:close() --[[ @ 0]]
	f15_arg0.SpecialEventWidget:close() --[[ @ 0]]
end
 --[[ @ 0]]
