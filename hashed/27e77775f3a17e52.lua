-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:48
Lobby.Scheduler = {} --[[ @ 0]]
Lobby.Scheduler.LastPumpTime = nil --[[ @ 0]]
Lobby.Scheduler.LastActiveEvents = {} --[[ @ 0]]
Lobby.Scheduler.CustomRules = {} --[[ @ 0]]
Lobby.Scheduler.ExecEvents = function ( f1_arg0, f1_arg1 )
	
end
 --[[ @ 0]]
Lobby.Scheduler.ExecEvents = function ( f2_arg0, f2_arg1 )
	for f2_local3, f2_local4 in pairs( f2_arg0 ) --[[ @ 0]] do
		local f2_local5 = f2_local3 .. f2_arg1 --[[ @ 0]]
		Engine[@"printinfo"]( Enum[@"consolelabel_e"][@"con_label_lobby"], "Exec rule: " .. f2_local5 .. "\n" ) --[[ @ 0]]
		Engine[@"execautoeventruleset"]( f2_local5 ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
Lobby.Scheduler.GetPlatform = function ()
	if Engine[@"hash_25AE97B58D7132F3"]() == "orbis" then
		return "ps4"
	elseif Engine[@"hash_25AE97B58D7132F3"]() == "durango" then
		return "xbox"
	elseif Engine[@"hash_25AE97B58D7132F3"]() == "pc" then
		return "pc"
	else
		Engine[@"printerror"]( Enum[@"consolelabel_e"][@"con_label_lobby"], "Autoevent: Platform not detected.'\n" ) --[[ @ 0]]
		return "unknown"
	end
end
 --[[ @ 0]]
Lobby.Scheduler.IsInCustomRule = function ( f4_arg0 )
	if f4_arg0 == nil or f4_arg0 == "" then
		return true
	elseif nil == Lobby.Scheduler.CustomRules or Lobby.Scheduler.CustomRules[f4_arg0] == nil then
		Engine[@"printerror"]( Enum[@"consolelabel_e"][@"con_label_lobby"], "Autoevent: Invalid custom rule '" .. f4_arg0 .. "'\n" ) --[[ @ 0]]
		return false
	else
		return Lobby.Scheduler.CustomRules[f4_arg0]()
	end
end
 --[[ @ 0]]
Lobby.Scheduler.GetScheduledEvents = function ( f5_arg0, f5_arg1 )
	local f5_local0 = "events" --[[ @ 0]]
	local f5_local1 = "gamedata/events/schedule_" .. Lobby.Scheduler.GetPlatform() .. ".csv" --[[ @ 0]]
	local f5_local2 = Engine[@"gettablerowcount"]( f5_local1 ) --[[ @ 0]]
	local f5_local3 = false --[[ @ 0]]
	for f5_local4 = 0 --[[ @ 0]], f5_local2 - 1, 1 do
		local f5_local7 = Engine[@"tablelookupgetcolumnvalueforrow"]( f5_local1, f5_local4, 3 ) --[[ @ 0]]
		local f5_local8 = Engine[@"tablelookupgetcolumnvalueforrow"]( f5_local1, f5_local4, 4 ) --[[ @ 0]]
		local f5_local9 = Engine[@"tablelookupgetcolumnvalueforrow"]( f5_local1, f5_local4, 5 ) --[[ @ 0]]
		local f5_local10 = Engine[@"tablelookupgetcolumnvalueforrow"]( f5_local1, f5_local4, 6 ) --[[ @ 0]]
		local f5_local11 = Engine[@"tablelookupgetcolumnvalueforrow"]( f5_local1, f5_local4, 0 ) --[[ @ 0]]
		local f5_local12 = Engine[@"tablelookupgetcolumnvalueforrow"]( f5_local1, f5_local4, 1 ) --[[ @ 0]]
		local f5_local13 = Engine[@"tablelookupgetcolumnvalueforrow"]( f5_local1, f5_local4, 2 ) --[[ @ 0]]
		if Engine[@"isinrange"]( tostring( Engine[@"getcurrentutctimestr"]() ), f5_local12, f5_local13 ) and (Engine[@"isdedicatedserver"]() or f5_local8 == nil or f5_local8 == "" or CoDShared.IsInExperiment( f5_local8, f5_local9 )) and Lobby.Scheduler.IsInCustomRule( f5_local10 ) then
			f5_arg0[f5_local11] = true --[[ @ 0]]
			if Lobby.Scheduler.LastActiveEvents[f5_local11] == nil then
				Engine[@"printinfo"]( Enum[@"consolelabel_e"][@"con_label_lobby"], "Autoevent: ACTIVATING event3 '" .. f5_local11 .. "' [" .. Engine[@"getcurrentutctimestr"]() .. "]\n" ) --[[ @ 0]]
				f5_local3 = true --[[ @ 0]]
			end
			local f5_local14 = Engine[@"structtablelookupstring"]( f5_local0, "name", f5_local11 .. "_ON", "timer_name" ) --[[ @ 0]]
			if f5_local14 ~= nil and f5_local14 ~= "" then
				local f5_local15 = Engine[@"createmodel"]( Engine[@"getglobalmodel"](), "AutoEvents" ) --[[ @ 0]]
				Engine[@"setmodelvalue"]( Engine[@"createmodel"]( f5_local15, f5_local14 ), LuaUtils.SecondsToTimeRemainingString( Engine[@"getsecondsremainingserver"]( f5_local13 ) + 1 ) ) --[[ @ 0]]
				Engine[@"setmodelvalue"]( Engine[@"createmodel"]( f5_local15, f5_local14 .. "_raw" ), Engine[@"getsecondsremainingserver"]( f5_local13 ) + 1 ) --[[ @ 0]]
				Engine[@"setmodelvalue"]( Engine[@"createmodel"]( f5_local15, f5_local14 .. "_red" ), Engine[@"getsecondsremainingserver"]( f5_local13 ) < 300 ) --[[ @ 0]]
			end
		end
		f5_arg1[f5_local11] = true --[[ @ 0]]
	end
	return f5_local3
end
 --[[ @ 0]]
Lobby.Scheduler.GetRotatingEvents = function ( f6_arg0, f6_arg1 )
	local f6_local0 = "" --[[ @ 0]]
	if Engine[@"hash_6E6099BDC574E648"] ~= nil then
		f6_local0 = Engine[@"hash_6E6099BDC574E648"]() --[[ @ 0]]
	end
	local f6_local1 = false --[[ @ 0]]
	if f6_local0 == nil or f6_local0 == "" then
		return 
	elseif f6_local0 ~= "rotation_pause_featured" then
		f6_arg0[f6_local0] = true --[[ @ 0]]
	end
	if Lobby.Scheduler.LastActiveEvents[f6_local0] == nil then
		Engine[@"printinfo"]( Enum[@"consolelabel_e"][@"con_label_lobby"], "Autoevent: ACTIVATING event '" .. f6_local0 .. "' [" .. Engine[@"getcurrentutctimestr"]() .. "]\n" ) --[[ @ 0]]
		f6_local1 = true --[[ @ 0]]
	end
	local f6_local2 = "gamedata/events/rotation.csv" --[[ @ 0]]
	local f6_local3 = Engine[@"gettablerowcount"]( f6_local2 ) --[[ @ 0]]
	for f6_local4 = 0 --[[ @ 0]], f6_local3 - 1, 1 do
		f6_arg1[Engine[@"tablelookupgetcolumnvalueforrow"]( f6_local2, f6_local4, 0 )] = true --[[ @ 0]]
	end
	return f6_local1
end
 --[[ @ 0]]
Lobby.Scheduler.ParseEvents = function ( f7_arg0 )
	local f7_local0 = {} --[[ @ 0]]
	local f7_local1 = {} --[[ @ 0]]
	local f7_local2 = Lobby.Scheduler.GetScheduledEvents( f7_local0, f7_local1 ) --[[ @ 0]]
	local f7_local3 = Lobby.Scheduler.GetRotatingEvents( f7_local0, f7_local1 ) --[[ @ 0]]
	local f7_local4 = false --[[ @ 0]]
	for f7_local8, f7_local9 in pairs( Lobby.Scheduler.LastActiveEvents ) --[[ @ 0]] do
		if f7_local0[f7_local8] == nil then
			Engine[@"printinfo"]( Enum[@"consolelabel_e"][@"con_label_lobby"], "Autoevent: DEACTIVATING event '" .. f7_local8 .. "' [" .. Engine[@"getcurrentutctimestr"]() .. "]\n" ) --[[ @ 0]]
			f7_local4 = true --[[ @ 0]]
		end
	end
	if f7_arg0 or f7_local2 == true or f7_local3 == true or f7_local4 == true then
		Lobby.Scheduler.ExecEvents( f7_local1, "_OFF" ) --[[ @ 0]]
		Lobby.Scheduler.ExecEvents( f7_local0, "_ON" ) --[[ @ 0]]
		Engine[@"hash_11922CB1488C6C6C"]() --[[ @ 0]]
		Engine[@"hash_386B354136A4AF18"]() --[[ @ 0]]
		f7_local6 = Engine[@"createmodel"]( Engine[@"createmodel"]( Engine[@"getglobalmodel"](), "AutoEvents" ), "cycled" ) --[[ @ 0]]
		if not Engine[@"setmodelvalue"]( f7_local6, 1 ) then
			Engine[@"forcenotifymodelsubscriptions"]( f7_local6 ) --[[ @ 0]]
		end
		for f7_local7 = 0 --[[ @ 0]], Engine[@"getmaxcontrollercount"]() - 1, 1 do
			if Engine[@"arestatsfetched"]( f7_local7 ) then
				Engine[@"hash_35DE9A824C285D86"]( f7_local7 ) --[[ @ 0]]
			end
		end
	end
	Engine[@"setmodelvalue"]( Engine[@"createmodel"]( Engine[@"createmodel"]( Engine[@"getglobalmodel"](), "AutoEvents" ), "initialized" ), true ) --[[ @ 0]]
	Lobby.Scheduler.LastActiveEvents = f7_local0 --[[ @ 0]]
end
 --[[ @ 0]]
Lobby.Scheduler.ParseEventsSecure = function ()
	if Engine[@"getlobbynetworkmode"]() == Enum[@"lobbynetworkmode"][@"lobby_networkmode_live"] then
		Engine[@"printerror"]( Enum[@"consolelabel_e"][@"con_label_lobby"], "Autoevent: ParseEventsSecure not overridden by the ffotd. Autoevents are disabled.'\n" ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
Lobby.Scheduler.Pump = function ()
	if Engine[@"getlobbynetworkmode"]() ~= Enum[@"lobbynetworkmode"][@"lobby_networkmode_live"] or Engine[@"isingame"]() then
		return 
	elseif not Dvar[@"live_autoeventenabled"]:get() then
		return 
	else
		Lobby.Scheduler.ParseEventsSecure() --[[ @ 0]]
	end
end
 --[[ @ 0]]
