-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:35
require( "x64:34a46c5eb417fe54" ) --[[ @ 0]]

CoD.PaintjobEditorSafeAreaContainer = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.PaintjobEditorSafeAreaContainer.__defaultWidth = 1920 --[[ @ 0]]
CoD.PaintjobEditorSafeAreaContainer.__defaultHeight = 1080 --[[ @ 0]]
CoD.PaintjobEditorSafeAreaContainer.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.PaintjobEditorSafeAreaContainer ) --[[ @ 0]]
	self.id = "PaintjobEditorSafeAreaContainer" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	
	local layerProperties = CoD.EmblemEditorLayerProperties.new( f1_arg0, f1_arg1, 0.5, 0.5, -347.5, 347.5, 0, 0, 51, 335 ) --[[ @ 0]]
	layerProperties:mergeStateConditions( {
		{
			stateName = "KBMEditMode",
			condition = function ( menu, element, event )
				return IsMouseOrKeyboard( f1_arg1 ) and CoD.ModelUtility.IsModelValueEqualToEnum( f1_arg1, "Emblem.EmblemProperties.editorMode", Enum[@"CustomizationEditorMode"][@"hash_5E2FFAEFF67F59AD"] )
			end
		},
		{
			stateName = "EditModeLayerProperties",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsModelValueEqualToEnum( f1_arg1, "Emblem.EmblemProperties.editorMode", Enum[@"CustomizationEditorMode"][@"hash_5E2FFAEFF67F59AD"] )
			end
		}
	} ) --[[ @ 0]]
	layerProperties:appendEventHandler( "input_source_changed", function ( f4_arg0, f4_arg1 )
		f4_arg1.menu = f4_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( layerProperties, f4_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local f1_local2 = layerProperties --[[ @ 0]]
	local f1_local3 = layerProperties.subscribeToModel --[[ @ 0]]
	local f1_local4 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local3( f1_local2, f1_local4.LastInput, function ( f5_arg0 )
		f1_arg0:updateElementState( layerProperties, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f5_arg0:get(),
			modelName = "LastInput"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local2 = layerProperties --[[ @ 0]]
	f1_local3 = layerProperties.subscribeToModel --[[ @ 0]]
	f1_local4 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local3( f1_local2, f1_local4["Emblem.EmblemProperties.editorMode"], function ( f6_arg0 )
		f1_arg0:updateElementState( layerProperties, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f6_arg0:get(),
			modelName = "Emblem.EmblemProperties.editorMode"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	layerProperties:subscribeToGlobalModel( f1_arg1, "EmblemSelectedLayerProperties", nil, function ( model )
		layerProperties:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( layerProperties ) --[[ @ 0]]
	self.layerProperties = layerProperties --[[ @ 0]]
	
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.PaintjobEditorSafeAreaContainer.__onClose = function ( f8_arg0 )
	f8_arg0.layerProperties:close() --[[ @ 0]]
end
 --[[ @ 0]]
