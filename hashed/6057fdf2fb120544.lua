-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
require( "ui/uieditor/widgets/backgroundframes/genericmenuframeidentity" ) --[[ @ 0]]
require( "x64:736fb83ae1c0a689" ) --[[ @ 0]]
require( "ui/uieditor/widgets/store/storerightpane" ) --[[ @ 0]]
require( "ui/uieditor/widgets/director/directorpregamebutton" ) --[[ @ 0]]

CoD.Store = InheritFrom( CoD.Menu ) --[[ @ 0]]
LUI.createMenu.Store = function ( f1_arg0, f1_arg1 )
	local self = CoD.Menu.NewForUIEditor( "Store", f1_arg0 ) --[[ @ 0]]
	local f1_local1 = self --[[ @ 0]]
	SetControllerModelValue( f1_arg0, "StoreRoot.isCategoryListInFocus", 1 ) --[[ @ 0]]
	SetProperty( self, "disablePopupOpenCloseAnim", true ) --[[ @ 0]]
	CoD.BaseUtility.SetPropertiesFromUserData( self, f1_arg1 ) --[[ @ 0]]
	CoD.BaseUtility.CreateGlobalModel( "lobbyRoot.owns_MP" ) --[[ @ 0]]
	self:setClass( CoD.Store ) --[[ @ 0]]
	self.soundSet = "ChooseDecal" --[[ @ 0]]
	self:setOwner( f1_arg0 ) --[[ @ 0]]
	self:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	self:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	self:playSound( "menu_open", f1_arg0 ) --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_local1:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local Background = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	Background:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_E2354BE557C4C7A" ) ) --[[ @ 0]]
	Background:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( Background ) --[[ @ 0]]
	self.Background = Background --[[ @ 0]]
	
	local BackgroundImage = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	BackgroundImage:setAlpha( 0.85 ) --[[ @ 0]]
	BackgroundImage:setImage( RegisterImage( @"uie_fe_cp_background" ) ) --[[ @ 0]]
	self:addElement( BackgroundImage ) --[[ @ 0]]
	self.BackgroundImage = BackgroundImage --[[ @ 0]]
	
	local editorBackground = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	editorBackground:setRGB( 0, 0, 0 ) --[[ @ 0]]
	editorBackground:setAlpha( 0.5 ) --[[ @ 0]]
	self:addElement( editorBackground ) --[[ @ 0]]
	self.editorBackground = editorBackground --[[ @ 0]]
	
	local GenericMenuFrameIdentity = CoD.GenericMenuFrameIdentity.new( f1_local1, f1_arg0, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	GenericMenuFrameIdentity.CommonHeader.subtitle.StageTitle:setText( LocalizeToUpperString( @"hash_4191CDDA584B4408" ) ) --[[ @ 0]]
	GenericMenuFrameIdentity:subscribeToGlobalModel( f1_arg0, "LobbyRoot", "lobbyTitle", function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			GenericMenuFrameIdentity.CommonHeader.subtitle.subtitle:setText( Engine[@"hash_4F9F1239CFD921FE"]( f2_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( GenericMenuFrameIdentity ) --[[ @ 0]]
	self.GenericMenuFrameIdentity = GenericMenuFrameIdentity --[[ @ 0]]
	
	local f1_local6 = nil --[[ @ 0]]
	f1_local6 = LUI.UIElement.createFake() --[[ @ 0]]
	self.productFrame = f1_local6 --[[ @ 0]]
	local f1_local7 = nil --[[ @ 0]]
	
	local productFramePC = LUI.UIFrame.new( f1_local1, f1_arg0, 0, 0, false ) --[[ @ 0]]
	productFramePC:setLeftRight( 0.5, 0.5, -693, 699 ) --[[ @ 0]]
	productFramePC:setTopBottom( 0.5, 0.5, -340, 340 ) --[[ @ 0]]
	productFramePC:registerEventHandler( "record_curr_focused_elem_id", function ( element, event )
		local f3_local0 = nil --[[ @ 0]]
		if element.RecordCurrFocusedElemID then
			f3_local0 = element:RecordCurrFocusedElemID( event ) --[[ @ 0]]
		elseif element.super.RecordCurrFocusedElemID then
			f3_local0 = element.super:RecordCurrFocusedElemID( event ) --[[ @ 0]]
		end
		if not IsPerControllerTablePropertyValue( f1_arg0, "selectedStoreCategory", "featured" ) then
			
		else
			
		end
		return f3_local0
	end ) --[[ @ 0]]
	self:addElement( productFramePC ) --[[ @ 0]]
	self.productFramePC = productFramePC --[[ @ 0]]
	
	local f1_local9 = nil --[[ @ 0]]
	f1_local9 = LUI.UIElement.createFake() --[[ @ 0]]
	self.storeCategoryList = f1_local9 --[[ @ 0]]
	local f1_local10 = nil --[[ @ 0]]
	
	local storeCategoryListPC = LUI.GridLayout.new( f1_local1, f1_arg0, false, 0, 0, 8, 0, nil, nil, false, false, false, false ) --[[ @ 0]]
	storeCategoryListPC:setLeftRight( 0.5, 0.5, -904.5, -580.5 ) --[[ @ 0]]
	storeCategoryListPC:setTopBottom( 0.5, 0.5, -403.5, 116.5 ) --[[ @ 0]]
	storeCategoryListPC:setAlpha( 0 ) --[[ @ 0]]
	storeCategoryListPC:setWidgetType( CoD.StoreCategoryButton ) --[[ @ 0]]
	storeCategoryListPC:setVerticalCount( 6 ) --[[ @ 0]]
	storeCategoryListPC:setSpacing( 8 ) --[[ @ 0]]
	storeCategoryListPC:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	storeCategoryListPC:setDataSource( "StoreCategoryList" ) --[[ @ 0]]
	storeCategoryListPC:registerEventHandler( "list_item_gain_focus", function ( element, event )
		local f4_local0 = nil --[[ @ 0]]
		SetSelectedStoreCategory( self, element, f1_arg0 ) --[[ @ 0]]
		SetControllerModelValue( f1_arg0, "StoreRoot.isCategoryListInFocus", 1 ) --[[ @ 0]]
		ForceNotifyControllerModel( f1_arg0, "StoreRoot.ready" ) --[[ @ 0]]
		return f4_local0
	end ) --[[ @ 0]]
	storeCategoryListPC:registerEventHandler( "gain_focus", function ( element, event )
		local f5_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f5_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f5_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f5_local0
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( storeCategoryListPC, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], nil, function ( element, menu, controller, model )
		SetSelectedStoreCategory( self, element, controller ) --[[ @ 0]]
		SetControllerModelValue( controller, "StoreRoot.isCategoryListInFocus", 1 ) --[[ @ 0]]
		ForceNotifyControllerModel( controller, "StoreRoot.ready" ) --[[ @ 0]]
		SetCurrentElementAsActive( self, element, controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_0", nil, nil ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( storeCategoryListPC, "setDataSource", function ( element, controller )
		SetCurrentElementAsActive( self, element, f1_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( storeCategoryListPC ) --[[ @ 0]]
	self.storeCategoryListPC = storeCategoryListPC --[[ @ 0]]
	
	local StoreRightPane = CoD.StoreRightPane.new( f1_local1, f1_arg0, 0.5, 0.5, 1021.5, 1603.5, 0.5, 0.5, -394.5, 394.5 ) --[[ @ 0]]
	self:addElement( StoreRightPane ) --[[ @ 0]]
	self.StoreRightPane = StoreRightPane --[[ @ 0]]
	
	local TransactionDeepLinkButton = nil --[[ @ 0]]
	
	TransactionDeepLinkButton = CoD.DirectorPreGameButton.new( f1_local1, f1_arg0, 0.5, 0.5, 541, 771, 0.5, 0.5, 406, 476 ) --[[ @ 0]]
	TransactionDeepLinkButton.DirectorCustomStartButton.MiddleText:setText( LocalizeToUpperString( @"hash_44031C820A02E7BA" ) ) --[[ @ 0]]
	TransactionDeepLinkButton.DirectorCustomStartButton.MiddleTextFocus:setText( LocalizeToUpperString( @"hash_44031C820A02E7BA" ) ) --[[ @ 0]]
	TransactionDeepLinkButton:registerEventHandler( "gain_focus", function ( element, event )
		local f9_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f9_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f9_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"] ) --[[ @ 0]]
		return f9_local0
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( TransactionDeepLinkButton, f1_arg0, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], "ui_confirm", function ( element, menu, controller, model )
		if IsPC() and CoD.PCKoreaUtility.IsInKorea() then
			CoD.PCKoreaUtility.OpenTransactionsDeepLinkStore( controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsPC() and CoD.PCKoreaUtility.IsInKorea() then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], @"hash_0", nil, "ui_confirm" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( TransactionDeepLinkButton, f1_arg0, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], "MOUSE1", function ( element, menu, controller, model )
		if IsPC() and CoD.PCKoreaUtility.IsInKorea() then
			CoD.PCKoreaUtility.OpenTransactionsDeepLinkStore( controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsPC() and CoD.PCKoreaUtility.IsInKorea() then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], @"hash_0", nil, "MOUSE1" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( TransactionDeepLinkButton ) --[[ @ 0]]
	self.TransactionDeepLinkButton = TransactionDeepLinkButton --[[ @ 0]]
	
	f1_local6:linkToElementModel( f1_local9, nil, false, function ( model )
		f1_local6:setModel( model, f1_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	f1_local6:linkToElementModel( f1_local9, "frameWidget", true, function ( model )
		local f15_local0 = model:get() --[[ @ 0]]
		if f15_local0 ~= nil then
			f1_local6:changeFrameWidget( f15_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	productFramePC:linkToElementModel( storeCategoryListPC, nil, false, function ( model )
		productFramePC:setModel( model, f1_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	productFramePC:linkToElementModel( storeCategoryListPC, "frameWidget", true, function ( model )
		local f17_local0 = model:get() --[[ @ 0]]
		if f17_local0 ~= nil then
			productFramePC:changeFrameWidget( f17_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self.StoreRightPane:linkToElementModel( self, nil, false, function ( model )
		StoreRightPane:setModel( model, f1_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:registerEventHandler( "occlusion_change", function ( self, event )
		local f19_local0 = nil --[[ @ 0]]
		if self.OcclusionChange then
			f19_local0 = self:OcclusionChange( event ) --[[ @ 0]]
		elseif self.super.OcclusionChange then
			f19_local0 = self.super:OcclusionChange( event ) --[[ @ 0]]
		end
		if IsEventPropertyEqualTo( event, "occluded", true ) then
			HidePsStoreIcon( f1_arg0 ) --[[ @ 0]]
		else
			ShowPsStoreIcon( f1_arg0, Enum[@"hash_6784DC8CE13E1E13"][@"center"] ) --[[ @ 0]]
		end
		if not f19_local0 then
			f19_local0 = self:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f19_local0
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"], "ESCAPE", function ( element, menu, controller, model )
		if IsMenuInState( menu, "DefaultState" ) then
			RecordStoreLastFocusedItemViewed( self, element, controller, menu ) --[[ @ 0]]
			GoBack( self, controller ) --[[ @ 0]]
			ClearMenuSavedState( menu ) --[[ @ 0]]
			return true
		elseif IsMenuInState( menu, "ProductFocused" ) then
			SetMenuState( menu, "DefaultState", controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsMenuInState( menu, "DefaultState" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"], @"hash_370A9FDC87CD3D48", nil, "ESCAPE" ) --[[ @ 0]]
			return true
		elseif IsMenuInState( menu, "ProductFocused" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"], @"hash_370A9FDC87CD3D48", nil, "ESCAPE" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"], nil, function ( element, menu, controller, model )
		if not IsPC() then
			RedeemCode( self, element, controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsPC() then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_4C083113BC81F23F"], @"hash_2AC7CDF7FDA3D9D3", nil, nil ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( self, "close", function ( element )
		HidePsStoreIcon( f1_arg0 ) --[[ @ 0]]
		ClearSelectedStoreCategory( f1_arg0 ) --[[ @ 0]]
		SetControllerModelValue( f1_arg0, "StoreRoot.isCategoryListInFocus", 0 ) --[[ @ 0]]
		SetGlobalModelValueArg( "UpdateOnStoreClose", 1 ) --[[ @ 0]]
		ClearMenuSavedState( f1_local1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:subscribeToGlobalModel( f1_arg0, "GlobalModel", "RefreshDWInventoryMenu", function ( model )
		local f25_local0 = self --[[ @ 0]]
		if IsPC() then
			UpdateDataSource( self, self.storeCategoryListPC, f1_arg0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:subscribeToGlobalModel( f1_arg0, "PerController", "battlenetCheckoutStatus", function ( model )
		local f26_local0 = self --[[ @ 0]]
		if IsPC() and CoD.ModelUtility.IsModelValueEqualTo( f1_arg0, "battlenetCheckoutStatus", 1 ) and CoD.ModelUtility.IsGlobalModelValueEqualTo( "lobbyRoot.owns_MP", true ) and CoD.ModelUtility.IsGlobalModelValueEqualTo( "lobbyRoot.StoreOpenedInTrial", true ) then
			OpenSystemOverlay( self, f1_local1, f1_arg0, "RestartGameAfterPurchasePopup" ) --[[ @ 0]]
		elseif IsPC() and CoD.ModelUtility.IsModelValueEqualTo( f1_arg0, "battlenetCheckoutStatus", 1 ) then
			CoD.PCUtility.RefreshPlayerInfo( self ) --[[ @ 0]]
		elseif IsPC() and CoD.ModelUtility.IsModelValueEqualTo( f1_arg0, "battlenetCheckoutStatus", 4 ) then
			CoD.PCUtility.SetStoreOpenedInTrial( self ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	GenericMenuFrameIdentity:setModel( self.buttonModel, f1_arg0 ) --[[ @ 0]]
	GenericMenuFrameIdentity.id = "GenericMenuFrameIdentity" --[[ @ 0]]
	f1_local6.id = "productFrame" --[[ @ 0]]
	productFramePC.id = "productFramePC" --[[ @ 0]]
	f1_local9.id = "storeCategoryList" --[[ @ 0]]
	storeCategoryListPC.id = "storeCategoryListPC" --[[ @ 0]]
	StoreRightPane.id = "StoreRightPane" --[[ @ 0]]
	if CoD.isPC then
		TransactionDeepLinkButton.id = "TransactionDeepLinkButton" --[[ @ 0]]
	end
	self:processEvent( {
		name = "menu_loaded",
		controller = f1_arg0
	} ) --[[ @ 0]]
	self.__defaultFocus = f1_local6 --[[ @ 0]]
	if CoD.isPC and (IsKeyboard( f1_arg0 ) or self.ignoreCursor) then
		self:restoreState( f1_arg0 ) --[[ @ 0]]
	end
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg0 ) --[[ @ 0]]
	end
	local f1_local14 = self --[[ @ 0]]
	if IsPC() then
		ChangeDefaultFocus( self, self.productFramePC ) --[[ @ 0]]
		UpdateButtonPromptState( f1_local1, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"] ) --[[ @ 0]]
	end
	f1_local14 = f1_local9 --[[ @ 0]]
	AutoSelectFeaturedCategory( self, f1_arg0 ) --[[ @ 0]]
	f1_local14 = storeCategoryListPC --[[ @ 0]]
	AutoSelectFeaturedCategory( self, f1_arg0 ) --[[ @ 0]]
	f1_local14 = TransactionDeepLinkButton --[[ @ 0]]
	if IsPC() and not CoD.PCKoreaUtility.ShowTransactionHistoryButton() then
		ReplaceElementWithFake( self, "TransactionDeepLinkButton" ) --[[ @ 0]]
	end
	return self
end
 --[[ @ 0]]
CoD.Store.__resetProperties = function ( f27_arg0 )
	f27_arg0.storeCategoryList:completeAnimation() --[[ @ 0]]
	f27_arg0.productFrame:completeAnimation() --[[ @ 0]]
	f27_arg0.StoreRightPane:completeAnimation() --[[ @ 0]]
	f27_arg0.storeCategoryListPC:completeAnimation() --[[ @ 0]]
	f27_arg0.storeCategoryList:setLeftRight( 0.5, 0.5, -905.5, -581.5 ) --[[ @ 0]]
	f27_arg0.storeCategoryList:setAlpha( 0 ) --[[ @ 0]]
	f27_arg0.productFrame:setLeftRight( 0.5, 0.5, -693, 699 ) --[[ @ 0]]
	f27_arg0.StoreRightPane:setLeftRight( 0.5, 0.5, 1021.5, 1603.5 ) --[[ @ 0]]
	f27_arg0.StoreRightPane:setTopBottom( 0.5, 0.5, -394.5, 394.5 ) --[[ @ 0]]
	f27_arg0.StoreRightPane:setAlpha( 1 ) --[[ @ 0]]
	f27_arg0.storeCategoryListPC:setLeftRight( 0.5, 0.5, -904.5, -580.5 ) --[[ @ 0]]
	f27_arg0.storeCategoryListPC:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.Store.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f28_arg0, f28_arg1 )
			f28_arg0:__resetProperties() --[[ @ 0]]
			f28_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f28_arg0.productFrame:completeAnimation() --[[ @ 0]]
			f28_arg0.productFrame:setLeftRight( 0, 0, 267, 1659 ) --[[ @ 0]]
			f28_arg0.clipFinished( f28_arg0.productFrame ) --[[ @ 0]]
			f28_arg0.storeCategoryList:completeAnimation() --[[ @ 0]]
			f28_arg0.storeCategoryList:setLeftRight( 0, 0, 55.5, 400.5 ) --[[ @ 0]]
			f28_arg0.storeCategoryList:setAlpha( 1 ) --[[ @ 0]]
			f28_arg0.clipFinished( f28_arg0.storeCategoryList ) --[[ @ 0]]
			f28_arg0.storeCategoryListPC:completeAnimation() --[[ @ 0]]
			f28_arg0.storeCategoryListPC:setAlpha( 1 ) --[[ @ 0]]
			f28_arg0.clipFinished( f28_arg0.storeCategoryListPC ) --[[ @ 0]]
			f28_arg0.StoreRightPane:completeAnimation() --[[ @ 0]]
			f28_arg0.StoreRightPane.frameWidget:completeAnimation() --[[ @ 0]]
			f28_arg0.StoreRightPane:setLeftRight( 0, 0, 1981.5, 2563.5 ) --[[ @ 0]]
			f28_arg0.StoreRightPane:setTopBottom( 0, 0, 145.5, 934.5 ) --[[ @ 0]]
			f28_arg0.StoreRightPane:setAlpha( 0 ) --[[ @ 0]]
			f28_arg0.clipFinished( f28_arg0.StoreRightPane ) --[[ @ 0]]
		end,
		ProductFocused = function ( f29_arg0, f29_arg1 )
			f29_arg0:__resetProperties() --[[ @ 0]]
			f29_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f29_local0 = function ( f30_arg0 )
				f29_arg0.productFrame:beginAnimation( 200 ) --[[ @ 0]]
				f29_arg0.productFrame:setLeftRight( 0, 0, 55.5, 1447.5 ) --[[ @ 0]]
				f29_arg0.productFrame:registerEventHandler( "interrupted_keyframe", f29_arg0.clipInterrupted ) --[[ @ 0]]
				f29_arg0.productFrame:registerEventHandler( "transition_complete_keyframe", f29_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f29_arg0.productFrame:completeAnimation() --[[ @ 0]]
			f29_arg0.productFrame:setLeftRight( 0, 0, 267, 1659 ) --[[ @ 0]]
			f29_local0( f29_arg0.productFrame ) --[[ @ 0]]
			local f29_local1 = function ( f31_arg0 )
				f29_arg0.storeCategoryList:beginAnimation( 200 ) --[[ @ 0]]
				f29_arg0.storeCategoryList:setLeftRight( 0, 0, -472.5, -127.5 ) --[[ @ 0]]
				f29_arg0.storeCategoryList:registerEventHandler( "interrupted_keyframe", f29_arg0.clipInterrupted ) --[[ @ 0]]
				f29_arg0.storeCategoryList:registerEventHandler( "transition_complete_keyframe", f29_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f29_arg0.storeCategoryList:completeAnimation() --[[ @ 0]]
			f29_arg0.storeCategoryList:setLeftRight( 0, 0, 55.5, 400.5 ) --[[ @ 0]]
			f29_local1( f29_arg0.storeCategoryList ) --[[ @ 0]]
			local f29_local2 = function ( f32_arg0 )
				f29_arg0.StoreRightPane:beginAnimation( 200 ) --[[ @ 0]]
				f29_arg0.StoreRightPane:setLeftRight( 0, 0, 1250, 1832 ) --[[ @ 0]]
				f29_arg0.StoreRightPane:setAlpha( 1 ) --[[ @ 0]]
				f29_arg0.StoreRightPane:registerEventHandler( "interrupted_keyframe", f29_arg0.clipInterrupted ) --[[ @ 0]]
				f29_arg0.StoreRightPane:registerEventHandler( "transition_complete_keyframe", function ( element, event )
					f29_arg0.clipFinished( element, event ) --[[ @ 0]]
				end ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f29_arg0.StoreRightPane:completeAnimation() --[[ @ 0]]
			f29_arg0.StoreRightPane.frameWidget:completeAnimation() --[[ @ 0]]
			f29_arg0.StoreRightPane:setLeftRight( 0, 0, 1981.5, 2563.5 ) --[[ @ 0]]
			f29_arg0.StoreRightPane:setTopBottom( 0, 0, 145.5, 934.5 ) --[[ @ 0]]
			f29_arg0.StoreRightPane:setAlpha( 0 ) --[[ @ 0]]
			f29_local2( f29_arg0.StoreRightPane ) --[[ @ 0]]
		end
	},
	ProductFocused = {
		DefaultClip = function ( f34_arg0, f34_arg1 )
			f34_arg0:__resetProperties() --[[ @ 0]]
			f34_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f34_arg0.productFrame:completeAnimation() --[[ @ 0]]
			f34_arg0.productFrame:setLeftRight( 0, 0, 55.5, 1447.5 ) --[[ @ 0]]
			f34_arg0.clipFinished( f34_arg0.productFrame ) --[[ @ 0]]
			f34_arg0.storeCategoryList:completeAnimation() --[[ @ 0]]
			f34_arg0.storeCategoryList:setLeftRight( 0, 0, -472.5, -127.5 ) --[[ @ 0]]
			f34_arg0.storeCategoryList:setAlpha( 1 ) --[[ @ 0]]
			f34_arg0.clipFinished( f34_arg0.storeCategoryList ) --[[ @ 0]]
			f34_arg0.storeCategoryListPC:completeAnimation() --[[ @ 0]]
			f34_arg0.storeCategoryListPC:setLeftRight( 0, 0, -472.5, -127.5 ) --[[ @ 0]]
			f34_arg0.storeCategoryListPC:setAlpha( 1 ) --[[ @ 0]]
			f34_arg0.clipFinished( f34_arg0.storeCategoryListPC ) --[[ @ 0]]
			f34_arg0.StoreRightPane:completeAnimation() --[[ @ 0]]
			f34_arg0.StoreRightPane.frameWidget:completeAnimation() --[[ @ 0]]
			f34_arg0.StoreRightPane:setLeftRight( 0, 0, 1248, 1830 ) --[[ @ 0]]
			f34_arg0.StoreRightPane:setTopBottom( 0, 0, 145.5, 934.5 ) --[[ @ 0]]
			f34_arg0.StoreRightPane:setAlpha( 1 ) --[[ @ 0]]
			f34_arg0.clipFinished( f34_arg0.StoreRightPane ) --[[ @ 0]]
		end,
		DefaultState = function ( f35_arg0, f35_arg1 )
			f35_arg0:__resetProperties() --[[ @ 0]]
			f35_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f35_local0 = function ( f36_arg0 )
				f35_arg0.productFrame:beginAnimation( 200 ) --[[ @ 0]]
				f35_arg0.productFrame:setLeftRight( 0, 0, 267, 1659 ) --[[ @ 0]]
				f35_arg0.productFrame:registerEventHandler( "interrupted_keyframe", f35_arg0.clipInterrupted ) --[[ @ 0]]
				f35_arg0.productFrame:registerEventHandler( "transition_complete_keyframe", f35_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f35_arg0.productFrame:completeAnimation() --[[ @ 0]]
			f35_arg0.productFrame:setLeftRight( 0, 0, 55.5, 1447.5 ) --[[ @ 0]]
			f35_local0( f35_arg0.productFrame ) --[[ @ 0]]
			local f35_local1 = function ( f37_arg0 )
				f35_arg0.storeCategoryList:beginAnimation( 200 ) --[[ @ 0]]
				f35_arg0.storeCategoryList:setLeftRight( 0, 0, 55.5, 400.5 ) --[[ @ 0]]
				f35_arg0.storeCategoryList:registerEventHandler( "interrupted_keyframe", f35_arg0.clipInterrupted ) --[[ @ 0]]
				f35_arg0.storeCategoryList:registerEventHandler( "transition_complete_keyframe", f35_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f35_arg0.storeCategoryList:completeAnimation() --[[ @ 0]]
			f35_arg0.storeCategoryList:setLeftRight( 0, 0, -472.5, -127.5 ) --[[ @ 0]]
			f35_local1( f35_arg0.storeCategoryList ) --[[ @ 0]]
			local f35_local2 = function ( f38_arg0 )
				f35_arg0.StoreRightPane:beginAnimation( 200 ) --[[ @ 0]]
				f35_arg0.StoreRightPane:setLeftRight( 0.5, 0.5, 1981.5, 2563.5 ) --[[ @ 0]]
				f35_arg0.StoreRightPane:setTopBottom( 0.5, 0.5, 145.5, 934.5 ) --[[ @ 0]]
				f35_arg0.StoreRightPane:setAlpha( 0 ) --[[ @ 0]]
				f35_arg0.StoreRightPane:registerEventHandler( "interrupted_keyframe", f35_arg0.clipInterrupted ) --[[ @ 0]]
				f35_arg0.StoreRightPane:registerEventHandler( "transition_complete_keyframe", function ( element, event )
					f35_arg0.clipFinished( element, event ) --[[ @ 0]]
				end ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f35_arg0.StoreRightPane:completeAnimation() --[[ @ 0]]
			f35_arg0.StoreRightPane.frameWidget:completeAnimation() --[[ @ 0]]
			f35_arg0.StoreRightPane:setLeftRight( 0, 0, 1248, 1830 ) --[[ @ 0]]
			f35_arg0.StoreRightPane:setTopBottom( 0, 0, 145.5, 934.5 ) --[[ @ 0]]
			f35_arg0.StoreRightPane:setAlpha( 1 ) --[[ @ 0]]
			f35_local2( f35_arg0.StoreRightPane ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.Store.__onClose = function ( f40_arg0 )
	f40_arg0.productFrame:close() --[[ @ 0]]
	f40_arg0.productFramePC:close() --[[ @ 0]]
	f40_arg0.GenericMenuFrameIdentity:close() --[[ @ 0]]
	f40_arg0.storeCategoryList:close() --[[ @ 0]]
	f40_arg0.storeCategoryListPC:close() --[[ @ 0]]
	f40_arg0.StoreRightPane:close() --[[ @ 0]]
	f40_arg0.TransactionDeepLinkButton:close() --[[ @ 0]]
end
 --[[ @ 0]]
