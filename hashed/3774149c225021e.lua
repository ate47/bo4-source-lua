-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:33
CoD.EMP_ScoreInfo = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.EMP_ScoreInfo.__defaultWidth = 511 --[[ @ 0]]
CoD.EMP_ScoreInfo.__defaultHeight = 256 --[[ @ 0]]
CoD.EMP_ScoreInfo.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.EMP_ScoreInfo ) --[[ @ 0]]
	self.id = "EMP_ScoreInfo" --[[ @ 0]]
	self.soundSet = "HUD" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local EMPbacker = LUI.UIImage.new( 0, 0, 0.5, 332.5, 0, 0, -2.5, 85.5 ) --[[ @ 0]]
	EMPbacker:setRGB( 0, 0, 0 ) --[[ @ 0]]
	EMPbacker:setAlpha( 0 ) --[[ @ 0]]
	EMPbacker:setImage( RegisterImage( @"uie_ui_hud_wz_hud_core_player" ) ) --[[ @ 0]]
	self:addElement( EMPbacker ) --[[ @ 0]]
	self.EMPbacker = EMPbacker --[[ @ 0]]
	
	local EMPScoreInfoBlackOps = LUI.UIImage.new( 0, 0, 0, 332, 1, 1, -256, -168 ) --[[ @ 0]]
	EMPScoreInfoBlackOps:setImage( RegisterImage( @"uie_ui_hud_wz_hud_core_player" ) ) --[[ @ 0]]
	EMPScoreInfoBlackOps:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_emp" ) ) --[[ @ 0]]
	EMPScoreInfoBlackOps:setShaderVector( 0, 26, 0, 0, 0 ) --[[ @ 0]]
	EMPScoreInfoBlackOps:setShaderVector( 1, 1, 0, 0, 0 ) --[[ @ 0]]
	EMPScoreInfoBlackOps:setShaderVector( 2, 1, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( EMPScoreInfoBlackOps ) --[[ @ 0]]
	self.EMPScoreInfoBlackOps = EMPScoreInfoBlackOps --[[ @ 0]]
	
	local EMPScoreInfoCDP = LUI.UIImage.new( 0, 0, 0, 332, 1, 1, -256, -168 ) --[[ @ 0]]
	EMPScoreInfoCDP:setAlpha( 0 ) --[[ @ 0]]
	EMPScoreInfoCDP:setImage( RegisterImage( @"uie_ui_hud_wz_hud_core_player" ) ) --[[ @ 0]]
	EMPScoreInfoCDP:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_emp" ) ) --[[ @ 0]]
	EMPScoreInfoCDP:setShaderVector( 0, 26, 0, 0, 0 ) --[[ @ 0]]
	EMPScoreInfoCDP:setShaderVector( 1, 1, 0, 0, 0 ) --[[ @ 0]]
	EMPScoreInfoCDP:setShaderVector( 2, 1, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( EMPScoreInfoCDP ) --[[ @ 0]]
	self.EMPScoreInfoCDP = EMPScoreInfoCDP --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "HideForVisibilityBits",
			condition = function ( menu, element, event )
				local f2_local0 = Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_4B8E9B69F4B87954"] ) --[[ @ 0]]
				if not f2_local0 then
					f2_local0 = Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_5D3ABF9A2753CE40"] ) --[[ @ 0]]
					if not f2_local0 then
						if Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_59333FC97F7870"] ) then
							f2_local0 = Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"] ) --[[ @ 0]]
							if not f2_local0 then
								f2_local0 = Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_669C28E2FCA82769"] ) --[[ @ 0]]
								if not f2_local0 then
									if Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_7ADC477DDE486DD7"] ) then
										f2_local0 = Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_523CD9BAB9B9F4C8"] ) --[[ @ 0]]
										if not f2_local0 then
											f2_local0 = Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_68A5E996D4528DA2"] ) --[[ @ 0]]
											if not f2_local0 then
												f2_local0 = Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_47B52A87BC9AA4C7"] ) --[[ @ 0]]
												if not f2_local0 then
													f2_local0 = Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_6668F0686232679"] ) --[[ @ 0]]
													if not f2_local0 then
														f2_local0 = Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"] ) --[[ @ 0]]
														if not f2_local0 then
															f2_local0 = Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_1999FA50941A83B"] ) --[[ @ 0]]
															if not f2_local0 then
																f2_local0 = Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_66FFF566DCC09BBD"] ) --[[ @ 0]]
																if not f2_local0 then
																	f2_local0 = Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"] ) --[[ @ 0]]
																end
															end
														end
													end
												end
											end
										end
									else
										f2_local0 = true --[[ @ 0]]
									end
								else
									return f2_local0
								end
							else
								return f2_local0
							end
						end
						f2_local0 = true --[[ @ 0]]
					end
				end
				return f2_local0
			end
		},
		{
			stateName = "HideForCodCaster",
			condition = function ( menu, element, event )
				return CoD.CodCasterUtility.CodCasterEnabledAndProfileVarEqualTo( f1_arg1, "shoutcaster_ds_teamscore", false )
			end
		},
		{
			stateName = "axis",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsModelValueEqualTo( f1_arg1, "factions.playerFactionName", "axis" )
			end
		},
		{
			stateName = "allies",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsModelValueEqualTo( f1_arg1, "factions.playerFactionName", "allies" )
			end
		},
		{
			stateName = "emblem",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsModelValueEqualTo( f1_arg1, "factions.playerFactionName", "free" )
			end
		}
	} ) --[[ @ 0]]
	local f1_local4 = self --[[ @ 0]]
	local f1_local5 = self.subscribeToModel --[[ @ 0]]
	local f1_local6 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local5( f1_local4, f1_local6["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_4B8E9B69F4B87954"]], function ( f7_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f7_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_4B8E9B69F4B87954"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local4 = self --[[ @ 0]]
	f1_local5 = self.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local5( f1_local4, f1_local6["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5D3ABF9A2753CE40"]], function ( f8_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f8_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5D3ABF9A2753CE40"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local4 = self --[[ @ 0]]
	f1_local5 = self.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local5( f1_local4, f1_local6["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_59333FC97F7870"]], function ( f9_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f9_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_59333FC97F7870"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local4 = self --[[ @ 0]]
	f1_local5 = self.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local5( f1_local4, f1_local6["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"]], function ( f10_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f10_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_5198075B069840DC"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local4 = self --[[ @ 0]]
	f1_local5 = self.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local5( f1_local4, f1_local6["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_669C28E2FCA82769"]], function ( f11_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f11_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_669C28E2FCA82769"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local4 = self --[[ @ 0]]
	f1_local5 = self.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local5( f1_local4, f1_local6["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_7ADC477DDE486DD7"]], function ( f12_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f12_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_7ADC477DDE486DD7"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local4 = self --[[ @ 0]]
	f1_local5 = self.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local5( f1_local4, f1_local6["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_523CD9BAB9B9F4C8"]], function ( f13_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f13_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_523CD9BAB9B9F4C8"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local4 = self --[[ @ 0]]
	f1_local5 = self.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local5( f1_local4, f1_local6["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_68A5E996D4528DA2"]], function ( f14_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f14_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_68A5E996D4528DA2"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local4 = self --[[ @ 0]]
	f1_local5 = self.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local5( f1_local4, f1_local6["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_47B52A87BC9AA4C7"]], function ( f15_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f15_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_47B52A87BC9AA4C7"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local4 = self --[[ @ 0]]
	f1_local5 = self.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local5( f1_local4, f1_local6["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_6668F0686232679"]], function ( f16_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f16_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_6668F0686232679"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local4 = self --[[ @ 0]]
	f1_local5 = self.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local5( f1_local4, f1_local6["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"]], function ( f17_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f17_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_4F4EDA8B636F3F04"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local4 = self --[[ @ 0]]
	f1_local5 = self.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local5( f1_local4, f1_local6["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_1999FA50941A83B"]], function ( f18_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f18_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_1999FA50941A83B"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local4 = self --[[ @ 0]]
	f1_local5 = self.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local5( f1_local4, f1_local6["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_66FFF566DCC09BBD"]], function ( f19_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f19_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_66FFF566DCC09BBD"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local4 = self --[[ @ 0]]
	f1_local5 = self.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local5( f1_local4, f1_local6["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"]], function ( f20_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f20_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_2A69E34E231CE8B6"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local4 = self --[[ @ 0]]
	f1_local5 = self.subscribeToModel --[[ @ 0]]
	f1_local6 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local5( f1_local4, f1_local6["factions.playerFactionName"], function ( f21_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f21_arg0:get(),
			modelName = "factions.playerFactionName"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.EMP_ScoreInfo.__resetProperties = function ( f22_arg0 )
	f22_arg0.EMPScoreInfoBlackOps:completeAnimation() --[[ @ 0]]
	f22_arg0.EMPScoreInfoCDP:completeAnimation() --[[ @ 0]]
	f22_arg0.EMPbacker:completeAnimation() --[[ @ 0]]
	f22_arg0.EMPScoreInfoBlackOps:setAlpha( 1 ) --[[ @ 0]]
	f22_arg0.EMPScoreInfoCDP:setAlpha( 0 ) --[[ @ 0]]
	f22_arg0.EMPbacker:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.EMP_ScoreInfo.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f23_arg0, f23_arg1 )
			f23_arg0:__resetProperties() --[[ @ 0]]
			f23_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f23_arg0.EMPScoreInfoBlackOps:completeAnimation() --[[ @ 0]]
			f23_arg0.EMPScoreInfoBlackOps:setAlpha( 0 ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.EMPScoreInfoBlackOps ) --[[ @ 0]]
			f23_arg0.EMPScoreInfoCDP:completeAnimation() --[[ @ 0]]
			f23_arg0.EMPScoreInfoCDP:setAlpha( 0 ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.EMPScoreInfoCDP ) --[[ @ 0]]
		end
	},
	HideForVisibilityBits = {
		DefaultClip = function ( f24_arg0, f24_arg1 )
			f24_arg0:__resetProperties() --[[ @ 0]]
			f24_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f24_arg0.EMPScoreInfoBlackOps:completeAnimation() --[[ @ 0]]
			f24_arg0.EMPScoreInfoBlackOps:setAlpha( 0 ) --[[ @ 0]]
			f24_arg0.clipFinished( f24_arg0.EMPScoreInfoBlackOps ) --[[ @ 0]]
			f24_arg0.EMPScoreInfoCDP:completeAnimation() --[[ @ 0]]
			f24_arg0.EMPScoreInfoCDP:setAlpha( 0 ) --[[ @ 0]]
			f24_arg0.clipFinished( f24_arg0.EMPScoreInfoCDP ) --[[ @ 0]]
		end
	},
	HideForCodCaster = {
		DefaultClip = function ( f25_arg0, f25_arg1 )
			f25_arg0:__resetProperties() --[[ @ 0]]
			f25_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f25_arg0.EMPScoreInfoBlackOps:completeAnimation() --[[ @ 0]]
			f25_arg0.EMPScoreInfoBlackOps:setAlpha( 0 ) --[[ @ 0]]
			f25_arg0.clipFinished( f25_arg0.EMPScoreInfoBlackOps ) --[[ @ 0]]
		end
	},
	axis = {
		DefaultClip = function ( f26_arg0, f26_arg1 )
			f26_arg0:__resetProperties() --[[ @ 0]]
			f26_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f26_arg0.EMPbacker:completeAnimation() --[[ @ 0]]
			f26_arg0.EMPbacker:setAlpha( 0.9 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.EMPbacker ) --[[ @ 0]]
			f26_arg0.EMPScoreInfoBlackOps:completeAnimation() --[[ @ 0]]
			f26_arg0.EMPScoreInfoBlackOps:setAlpha( 0 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.EMPScoreInfoBlackOps ) --[[ @ 0]]
			f26_arg0.EMPScoreInfoCDP:completeAnimation() --[[ @ 0]]
			f26_arg0.EMPScoreInfoCDP:setAlpha( 1 ) --[[ @ 0]]
			f26_arg0.clipFinished( f26_arg0.EMPScoreInfoCDP ) --[[ @ 0]]
		end
	},
	allies = {
		DefaultClip = function ( f27_arg0, f27_arg1 )
			f27_arg0:__resetProperties() --[[ @ 0]]
			f27_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f27_arg0.EMPbacker:completeAnimation() --[[ @ 0]]
			f27_arg0.EMPbacker:setAlpha( 0.9 ) --[[ @ 0]]
			f27_arg0.clipFinished( f27_arg0.EMPbacker ) --[[ @ 0]]
		end
	},
	emblem = {
		DefaultClip = function ( f28_arg0, f28_arg1 )
			f28_arg0:__resetProperties() --[[ @ 0]]
			f28_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f28_arg0.EMPbacker:completeAnimation() --[[ @ 0]]
			f28_arg0.EMPbacker:setAlpha( 0.9 ) --[[ @ 0]]
			f28_arg0.clipFinished( f28_arg0.EMPbacker ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
