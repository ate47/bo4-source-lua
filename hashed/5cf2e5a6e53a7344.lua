-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:50
require( "x64:2d361ac3553c22a" ) --[[ @ 0]]

CoD.TrialInfoBannerWidget = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.TrialInfoBannerWidget.__defaultWidth = 300 --[[ @ 0]]
CoD.TrialInfoBannerWidget.__defaultHeight = 35 --[[ @ 0]]
CoD.TrialInfoBannerWidget.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.TrialInfoBannerWidget ) --[[ @ 0]]
	self.id = "TrialInfoBannerWidget" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local Backing = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	Backing:setRGB( 0, 0, 0 ) --[[ @ 0]]
	Backing:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( Backing ) --[[ @ 0]]
	self.Backing = Backing --[[ @ 0]]
	
	local InfoText = LUI.UIText.new( 0, 0, 35, 535, 0, 0, 8, 28 ) --[[ @ 0]]
	InfoText:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_262486486346EC3F" ) ) --[[ @ 0]]
	InfoText:setTTF( "dinnext_regular" ) --[[ @ 0]]
	InfoText:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	InfoText:setAlignment( Enum[@"luialignment"][@"hash_E821F0ECFF8D1C7"] ) --[[ @ 0]]
	self:addElement( InfoText ) --[[ @ 0]]
	self.InfoText = InfoText --[[ @ 0]]
	
	local TrialWidget = CoD.TrialWidget.new( f1_arg0, f1_arg1, 0, 0, 5, 30, 0.5, 0.5, -12.5, 12.5 ) --[[ @ 0]]
	TrialWidget:mergeStateConditions( {
		{
			stateName = "Shown",
			condition = function ( menu, element, event )
				return AlwaysTrue()
			end
		}
	} ) --[[ @ 0]]
	self:addElement( TrialWidget ) --[[ @ 0]]
	self.TrialWidget = TrialWidget --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Shown",
			condition = function ( menu, element, event )
				return IsGameTrial()
			end
		},
		{
			stateName = "ShownLarge",
			condition = function ( menu, element, event )
				return IsGameTrial() and AlwaysFalse()
			end
		},
		{
			stateName = "ShownWrap",
			condition = function ( menu, element, event )
				return IsGameTrial() and AlwaysFalse()
			end
		},
		{
			stateName = "ShownLargeWrap",
			condition = function ( menu, element, event )
				return IsGameTrial() and AlwaysFalse()
			end
		}
	} ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.TrialInfoBannerWidget.__resetProperties = function ( f7_arg0 )
	f7_arg0.InfoText:completeAnimation() --[[ @ 0]]
	f7_arg0.TrialWidget:completeAnimation() --[[ @ 0]]
	f7_arg0.Backing:completeAnimation() --[[ @ 0]]
	f7_arg0.InfoText:setLeftRight( 0, 0, 35, 535 ) --[[ @ 0]]
	f7_arg0.InfoText:setAlpha( 1 ) --[[ @ 0]]
	f7_arg0.InfoText:setAlignment( Enum[@"luialignment"][@"hash_E821F0ECFF8D1C7"] ) --[[ @ 0]]
	f7_arg0.TrialWidget:setAlpha( 1 ) --[[ @ 0]]
	f7_arg0.Backing:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.TrialInfoBannerWidget.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f8_arg0, f8_arg1 )
			f8_arg0:__resetProperties() --[[ @ 0]]
			f8_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f8_arg0.Backing:completeAnimation() --[[ @ 0]]
			f8_arg0.Backing:setAlpha( 0 ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.Backing ) --[[ @ 0]]
			f8_arg0.InfoText:completeAnimation() --[[ @ 0]]
			f8_arg0.InfoText:setAlpha( 0 ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.InfoText ) --[[ @ 0]]
			f8_arg0.TrialWidget:completeAnimation() --[[ @ 0]]
			f8_arg0.TrialWidget:setAlpha( 0 ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.TrialWidget ) --[[ @ 0]]
		end
	},
	Shown = {
		DefaultClip = function ( f9_arg0, f9_arg1 )
			f9_arg0:__resetProperties() --[[ @ 0]]
			f9_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	ShownLarge = {
		DefaultClip = function ( f10_arg0, f10_arg1 )
			f10_arg0:__resetProperties() --[[ @ 0]]
			f10_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f10_arg0.InfoText:completeAnimation() --[[ @ 0]]
			f10_arg0.InfoText:setLeftRight( 0, 0, 35, 807 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.InfoText ) --[[ @ 0]]
		end
	},
	ShownWrap = {
		DefaultClip = function ( f11_arg0, f11_arg1 )
			f11_arg0:__resetProperties() --[[ @ 0]]
			f11_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f11_arg0.InfoText:completeAnimation() --[[ @ 0]]
			f11_arg0.InfoText:setLeftRight( 0, 0, 35, 547 ) --[[ @ 0]]
			f11_arg0.InfoText:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
			f11_arg0.clipFinished( f11_arg0.InfoText ) --[[ @ 0]]
		end
	},
	ShownLargeWrap = {
		DefaultClip = function ( f12_arg0, f12_arg1 )
			f12_arg0:__resetProperties() --[[ @ 0]]
			f12_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f12_arg0.InfoText:completeAnimation() --[[ @ 0]]
			f12_arg0.InfoText:setLeftRight( 0, 0, 35, 807 ) --[[ @ 0]]
			f12_arg0.InfoText:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
			f12_arg0.clipFinished( f12_arg0.InfoText ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.TrialInfoBannerWidget.__onClose = function ( f13_arg0 )
	f13_arg0.TrialWidget:close() --[[ @ 0]]
end
 --[[ @ 0]]
