-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:33
require( "ui/uieditor/widgets/vehiclehuds/genericvhuddamagearea" ) --[[ @ 0]]
require( "x64:6a8d56a316c6ad40" ) --[[ @ 0]]
require( "x64:79c40147e90bec2c" ) --[[ @ 0]]
require( "x64:1d84206e83dbcd1d" ) --[[ @ 0]]
require( "x64:493547a1e84ec106" ) --[[ @ 0]]
require( "x64:189111f3cd54c92f" ) --[[ @ 0]]
require( "x64:295d15a81bcb0281" ) --[[ @ 0]]

CoD.genericVHUDReticleOverlay = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.genericVHUDReticleOverlay.__defaultWidth = 1920 --[[ @ 0]]
CoD.genericVHUDReticleOverlay.__defaultHeight = 1080 --[[ @ 0]]
CoD.genericVHUDReticleOverlay.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.genericVHUDReticleOverlay ) --[[ @ 0]]
	self.id = "genericVHUDReticleOverlay" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local genericVHUDdamageArea = CoD.genericVHUDdamageArea.new( f1_arg0, f1_arg1, 1, 1, -246, -96, 0, 0, 54, 204 ) --[[ @ 0]]
	genericVHUDdamageArea:mergeStateConditions( {
		{
			stateName = "Invisible",
			condition = function ( menu, element, event )
				return not CoD.ModelUtility.IsGlobalDataSourceModelValueNonEmptyString( f1_arg1, "VehicleInfo", "damageFillImage" )
			end
		}
	} ) --[[ @ 0]]
	local timeRemainingBar = genericVHUDdamageArea --[[ @ 0]]
	local genericVHUDRightContainer = genericVHUDdamageArea.subscribeToModel --[[ @ 0]]
	local missileProximityAlert = DataSources.VehicleInfo.getModel( f1_arg1 ) --[[ @ 0]]
	genericVHUDRightContainer( timeRemainingBar, missileProximityAlert.damageFillImage, function ( f3_arg0 )
		f1_arg0:updateElementState( genericVHUDdamageArea, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f3_arg0:get(),
			modelName = "damageFillImage"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	genericVHUDdamageArea:linkToElementModel( self, nil, false, function ( model )
		genericVHUDdamageArea:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	genericVHUDdamageArea:linkToElementModel( self, "bindings.color", true, function ( model )
		local f5_local0 = model:get() --[[ @ 0]]
		if f5_local0 ~= nil then
			genericVHUDdamageArea.lineBack:setRGB( f5_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	genericVHUDdamageArea:linkToElementModel( self, "overlayImage", true, function ( model )
		local f6_local0 = model:get() --[[ @ 0]]
		if f6_local0 ~= nil then
			genericVHUDdamageArea.lineBack:setImage( RegisterImage( f6_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	genericVHUDdamageArea:linkToElementModel( self, "damageFillImage", true, function ( model )
		local f7_local0 = model:get() --[[ @ 0]]
		if f7_local0 ~= nil then
			genericVHUDdamageArea.fill:setImage( RegisterImage( f7_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	genericVHUDdamageArea:linkToElementModel( self, "bindings.color", true, function ( model )
		local f8_local0 = model:get() --[[ @ 0]]
		if f8_local0 ~= nil then
			genericVHUDdamageArea.lineFront:setRGB( f8_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	genericVHUDdamageArea:linkToElementModel( self, "overlayImage", true, function ( model )
		local f9_local0 = model:get() --[[ @ 0]]
		if f9_local0 ~= nil then
			genericVHUDdamageArea.lineFront:setImage( RegisterImage( f9_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( genericVHUDdamageArea ) --[[ @ 0]]
	self.genericVHUDdamageArea = genericVHUDdamageArea --[[ @ 0]]
	
	genericVHUDRightContainer = CoD.genericVHUDRightContainer.new( f1_arg0, f1_arg1, 0, 0, 1691, 1824, 0.5, 0.5, -350, 350 ) --[[ @ 0]]
	genericVHUDRightContainer:linkToElementModel( self, nil, false, function ( model )
		genericVHUDRightContainer:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( genericVHUDRightContainer ) --[[ @ 0]]
	self.genericVHUDRightContainer = genericVHUDRightContainer --[[ @ 0]]
	
	timeRemainingBar = CoD.genericVHUDTimeBar.new( f1_arg0, f1_arg1, 0, 0, 1452, 1824, 0, 0, 18, 104 ) --[[ @ 0]]
	timeRemainingBar:mergeStateConditions( {
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return not CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg1, "showTimeRemaining" )
			end
		}
	} ) --[[ @ 0]]
	timeRemainingBar:linkToElementModel( timeRemainingBar, "showTimeRemaining", true, function ( model )
		f1_arg0:updateElementState( timeRemainingBar, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "showTimeRemaining"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	timeRemainingBar:linkToElementModel( self, "bindings.color", true, function ( model )
		local f13_local0 = model:get() --[[ @ 0]]
		if f13_local0 ~= nil then
			timeRemainingBar:setRGB( f13_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	timeRemainingBar:linkToElementModel( self, nil, false, function ( model )
		timeRemainingBar:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( timeRemainingBar ) --[[ @ 0]]
	self.timeRemainingBar = timeRemainingBar --[[ @ 0]]
	
	missileProximityAlert = CoD.missileProximityAlert.new( f1_arg0, f1_arg1, 0.5, 0.5, -150, 170, 1, 1, -241, -200 ) --[[ @ 0]]
	missileProximityAlert:linkToElementModel( self, nil, false, function ( model )
		missileProximityAlert:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( missileProximityAlert ) --[[ @ 0]]
	self.missileProximityAlert = missileProximityAlert --[[ @ 0]]
	
	local vehicleCollisionWarning = CoD.vehicleCollisionWarning.new( f1_arg0, f1_arg1, 0.5, 0.5, -125, 125, 1, 1, -291, -250 ) --[[ @ 0]]
	vehicleCollisionWarning:linkToElementModel( self, nil, false, function ( model )
		vehicleCollisionWarning:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( vehicleCollisionWarning ) --[[ @ 0]]
	self.vehicleCollisionWarning = vehicleCollisionWarning --[[ @ 0]]
	
	local PooledVehicleHealthWidget = CoD.genericVHUDHealthAndRadar.new( f1_arg0, f1_arg1, 1, 1, -293, 0, 1, 1, -749, 0 ) --[[ @ 0]]
	PooledVehicleHealthWidget:linkToElementModel( self, nil, false, function ( model )
		PooledVehicleHealthWidget:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( PooledVehicleHealthWidget ) --[[ @ 0]]
	self.PooledVehicleHealthWidget = PooledVehicleHealthWidget --[[ @ 0]]
	
	local vehicleMalfunctionWarning = CoD.vehicleMalfunctionWarning.new( f1_arg0, f1_arg1, 0.5, 0.5, -151, 99, 0, 0, 216.5, 257.5 ) --[[ @ 0]]
	vehicleMalfunctionWarning:linkToElementModel( self, nil, false, function ( model )
		vehicleMalfunctionWarning:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( vehicleMalfunctionWarning ) --[[ @ 0]]
	self.vehicleMalfunctionWarning = vehicleMalfunctionWarning --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Visible",
			condition = function ( menu, element, event )
				return IsCampaign() and Engine[@"IsVisibilityBitSet"]( f1_arg1, Enum[@"UIVisibilityBit"][@"hash_7ADC477DDE486DD7"] )
			end
		}
	} ) --[[ @ 0]]
	local f1_local8 = self --[[ @ 0]]
	local f1_local9 = self.subscribeToModel --[[ @ 0]]
	local f1_local10 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	f1_local9( f1_local8, f1_local10["lobbyRoot.lobbyNav"], function ( f20_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f20_arg0:get(),
			modelName = "lobbyRoot.lobbyNav"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local8 = self --[[ @ 0]]
	f1_local9 = self.subscribeToModel --[[ @ 0]]
	f1_local10 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local9( f1_local8, f1_local10["UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_7ADC477DDE486DD7"]], function ( f21_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f21_arg0:get(),
			modelName = "UIVisibilityBit." .. Enum[@"UIVisibilityBit"][@"hash_7ADC477DDE486DD7"]
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.genericVHUDReticleOverlay.__resetProperties = function ( f22_arg0 )
	f22_arg0.PooledVehicleHealthWidget:completeAnimation() --[[ @ 0]]
	f22_arg0.vehicleCollisionWarning:completeAnimation() --[[ @ 0]]
	f22_arg0.missileProximityAlert:completeAnimation() --[[ @ 0]]
	f22_arg0.timeRemainingBar:completeAnimation() --[[ @ 0]]
	f22_arg0.genericVHUDRightContainer:completeAnimation() --[[ @ 0]]
	f22_arg0.genericVHUDdamageArea:completeAnimation() --[[ @ 0]]
	f22_arg0.PooledVehicleHealthWidget:setAlpha( 1 ) --[[ @ 0]]
	f22_arg0.vehicleCollisionWarning:setAlpha( 1 ) --[[ @ 0]]
	f22_arg0.missileProximityAlert:setAlpha( 1 ) --[[ @ 0]]
	f22_arg0.timeRemainingBar:setAlpha( 1 ) --[[ @ 0]]
	f22_arg0.genericVHUDRightContainer:setAlpha( 1 ) --[[ @ 0]]
	f22_arg0.genericVHUDdamageArea:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.genericVHUDReticleOverlay.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f23_arg0, f23_arg1 )
			f23_arg0:__resetProperties() --[[ @ 0]]
			f23_arg0:setupElementClipCounter( 6 ) --[[ @ 0]]
			f23_arg0.genericVHUDdamageArea:completeAnimation() --[[ @ 0]]
			f23_arg0.genericVHUDdamageArea:setAlpha( 0 ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.genericVHUDdamageArea ) --[[ @ 0]]
			f23_arg0.genericVHUDRightContainer:completeAnimation() --[[ @ 0]]
			f23_arg0.genericVHUDRightContainer:setAlpha( 0 ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.genericVHUDRightContainer ) --[[ @ 0]]
			f23_arg0.timeRemainingBar:completeAnimation() --[[ @ 0]]
			f23_arg0.timeRemainingBar:setAlpha( 0 ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.timeRemainingBar ) --[[ @ 0]]
			f23_arg0.missileProximityAlert:completeAnimation() --[[ @ 0]]
			f23_arg0.missileProximityAlert:setAlpha( 0 ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.missileProximityAlert ) --[[ @ 0]]
			f23_arg0.vehicleCollisionWarning:completeAnimation() --[[ @ 0]]
			f23_arg0.vehicleCollisionWarning:setAlpha( 0 ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.vehicleCollisionWarning ) --[[ @ 0]]
			f23_arg0.PooledVehicleHealthWidget:completeAnimation() --[[ @ 0]]
			f23_arg0.PooledVehicleHealthWidget:setAlpha( 0 ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.PooledVehicleHealthWidget ) --[[ @ 0]]
		end
	},
	Visible = {
		DefaultClip = function ( f24_arg0, f24_arg1 )
			f24_arg0:__resetProperties() --[[ @ 0]]
			f24_arg0:setupElementClipCounter( 6 ) --[[ @ 0]]
			f24_arg0.genericVHUDdamageArea:completeAnimation() --[[ @ 0]]
			f24_arg0.genericVHUDdamageArea:setAlpha( 1 ) --[[ @ 0]]
			f24_arg0.clipFinished( f24_arg0.genericVHUDdamageArea ) --[[ @ 0]]
			f24_arg0.genericVHUDRightContainer:completeAnimation() --[[ @ 0]]
			f24_arg0.genericVHUDRightContainer:setAlpha( 1 ) --[[ @ 0]]
			f24_arg0.clipFinished( f24_arg0.genericVHUDRightContainer ) --[[ @ 0]]
			f24_arg0.timeRemainingBar:completeAnimation() --[[ @ 0]]
			f24_arg0.timeRemainingBar:setAlpha( 1 ) --[[ @ 0]]
			f24_arg0.clipFinished( f24_arg0.timeRemainingBar ) --[[ @ 0]]
			f24_arg0.missileProximityAlert:completeAnimation() --[[ @ 0]]
			f24_arg0.missileProximityAlert:setAlpha( 1 ) --[[ @ 0]]
			f24_arg0.clipFinished( f24_arg0.missileProximityAlert ) --[[ @ 0]]
			f24_arg0.vehicleCollisionWarning:completeAnimation() --[[ @ 0]]
			f24_arg0.vehicleCollisionWarning:setAlpha( 1 ) --[[ @ 0]]
			f24_arg0.clipFinished( f24_arg0.vehicleCollisionWarning ) --[[ @ 0]]
			f24_arg0.PooledVehicleHealthWidget:completeAnimation() --[[ @ 0]]
			f24_arg0.PooledVehicleHealthWidget:setAlpha( 1 ) --[[ @ 0]]
			f24_arg0.clipFinished( f24_arg0.PooledVehicleHealthWidget ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.genericVHUDReticleOverlay.__onClose = function ( f25_arg0 )
	f25_arg0.genericVHUDdamageArea:close() --[[ @ 0]]
	f25_arg0.genericVHUDRightContainer:close() --[[ @ 0]]
	f25_arg0.timeRemainingBar:close() --[[ @ 0]]
	f25_arg0.missileProximityAlert:close() --[[ @ 0]]
	f25_arg0.vehicleCollisionWarning:close() --[[ @ 0]]
	f25_arg0.PooledVehicleHealthWidget:close() --[[ @ 0]]
	f25_arg0.vehicleMalfunctionWarning:close() --[[ @ 0]]
end
 --[[ @ 0]]
