-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:35
require( "x64:325eec9c0fe7758" ) --[[ @ 0]]
require( "x64:5caea96c5773ca4d" ) --[[ @ 0]]

CoD.WarzoneQuickInventoryMenuItemSmall = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.WarzoneQuickInventoryMenuItemSmall.__defaultWidth = 70 --[[ @ 0]]
CoD.WarzoneQuickInventoryMenuItemSmall.__defaultHeight = 70 --[[ @ 0]]
CoD.WarzoneQuickInventoryMenuItemSmall.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.WarzoneQuickInventoryMenuItemSmall ) --[[ @ 0]]
	self.id = "WarzoneQuickInventoryMenuItemSmall" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local ActiveBG = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	ActiveBG:setRGB( ColorSet.Orange.r, ColorSet.Orange.g, ColorSet.Orange.b ) --[[ @ 0]]
	ActiveBG:setAlpha( 0 ) --[[ @ 0]]
	ActiveBG:setMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	self:addElement( ActiveBG ) --[[ @ 0]]
	self.ActiveBG = ActiveBG --[[ @ 0]]
	
	local internal = CoD.WarzoneQuickInventoryMenuItemSmall_Internal.new( f1_arg0, f1_arg1, 0.5, 0.5, -46, 46, 0.5, 0.5, -45, 45 ) --[[ @ 0]]
	internal:setScale( 0.9, 0.9 ) --[[ @ 0]]
	internal:linkToElementModel( self, nil, false, function ( model )
		internal:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( internal ) --[[ @ 0]]
	self.internal = internal --[[ @ 0]]
	
	local ConsumedProgress = LUI.UIImage.new( 0.5, 0.5, -48, 44, 0.5, 0.5, -45, 45 ) --[[ @ 0]]
	ConsumedProgress:setRGB( 0, 0, 0 ) --[[ @ 0]]
	ConsumedProgress:setAlpha( 0.8 ) --[[ @ 0]]
	ConsumedProgress:setScale( 0.66, 0.66 ) --[[ @ 0]]
	ConsumedProgress:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_clock_normal" ) ) --[[ @ 0]]
	ConsumedProgress:setShaderVector( 1, 0.5, 0, 0, 0 ) --[[ @ 0]]
	ConsumedProgress:setShaderVector( 2, 0.5, 0, 0, 0 ) --[[ @ 0]]
	ConsumedProgress:setShaderVector( 3, 0, 0, 0, 0 ) --[[ @ 0]]
	ConsumedProgress:setShaderVector( 4, 0, 0, 0, 0 ) --[[ @ 0]]
	ConsumedProgress:linkToElementModel( self, "endStartFraction", true, function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			ConsumedProgress:setShaderVector( 0, CoD.GetVectorComponentFromString( f3_local0, 1 ), CoD.GetVectorComponentFromString( f3_local0, 2 ), CoD.GetVectorComponentFromString( f3_local0, 3 ), CoD.GetVectorComponentFromString( f3_local0, 4 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( ConsumedProgress ) --[[ @ 0]]
	self.ConsumedProgress = ConsumedProgress --[[ @ 0]]
	
	local castTimer = nil --[[ @ 0]]
	
	castTimer = LUI.UIImage.new( 0.5, 0.5, -16, 16, 0.5, 0.5, -16, 16 ) --[[ @ 0]]
	castTimer:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	castTimer:setImage( RegisterImage( @"uie_ui_icon_controller_radial_fill_hud" ) ) --[[ @ 0]]
	castTimer:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_clock_normal" ) ) --[[ @ 0]]
	castTimer:setShaderVector( 1, 0.5, 0, 0, 0 ) --[[ @ 0]]
	castTimer:setShaderVector( 2, 0.5, 0, 0, 0 ) --[[ @ 0]]
	castTimer:setShaderVector( 3, 0, 0, 0, 0 ) --[[ @ 0]]
	castTimer:setShaderVector( 4, 0, 0, 0, 0 ) --[[ @ 0]]
	castTimer:linkToElementModel( self, "castTimeFraction", true, function ( model )
		local f4_local0 = model:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			castTimer:setShaderVector( 0, CoD.GetVectorComponentFromString( f4_local0, 1 ), CoD.GetVectorComponentFromString( f4_local0, 2 ), CoD.GetVectorComponentFromString( f4_local0, 3 ), CoD.GetVectorComponentFromString( f4_local0, 4 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( castTimer ) --[[ @ 0]]
	self.castTimer = castTimer --[[ @ 0]]
	
	local NotAvailable = LUI.UIImage.new( 0, 0, 2, 90, 0, 0, 1, 89 ) --[[ @ 0]]
	NotAvailable:setAlpha( 0 ) --[[ @ 0]]
	NotAvailable:setImage( RegisterImage( @"uie_ui_hud_wz_hud_core_drop_x" ) ) --[[ @ 0]]
	NotAvailable:setMaterial( LUI.UIImage.GetCachedMaterial( @"ui_add" ) ) --[[ @ 0]]
	self:addElement( NotAvailable ) --[[ @ 0]]
	self.NotAvailable = NotAvailable --[[ @ 0]]
	
	local EMP = CoD.Warzone_EMP_QuickEquip.new( f1_arg0, f1_arg1, 0, 0, -13, 75, 0, 0, -6.5, 77.5 ) --[[ @ 0]]
	self:addElement( EMP ) --[[ @ 0]]
	self.EMP = EMP --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Invisible",
			condition = function ( menu, element, event )
				local f5_local0 = IsPC() --[[ @ 0]]
				if f5_local0 then
					f5_local0 = AlwaysFalse() --[[ @ 0]]
					if f5_local0 then
						f5_local0 = CoD.ModelUtility.IsSelfModelValueEqualTo( element, f1_arg1, "endStartFraction", 0 ) --[[ @ 0]]
					end
				end
				return f5_local0
			end
		},
		{
			stateName = "Disabled",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualTo( element, f1_arg1, "disabled", 1 )
			end
		},
		{
			stateName = "NotAvailable",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueEqualTo( element, f1_arg1, "notAvailable", 1 )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "endStartFraction", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "endStartFraction"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:linkToElementModel( self, "disabled", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "disabled"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:linkToElementModel( self, "notAvailable", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "notAvailable"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	internal.id = "internal" --[[ @ 0]]
	self.__defaultFocus = internal --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.WarzoneQuickInventoryMenuItemSmall.__resetProperties = function ( f11_arg0 )
	f11_arg0.internal:completeAnimation() --[[ @ 0]]
	f11_arg0.ConsumedProgress:completeAnimation() --[[ @ 0]]
	f11_arg0.castTimer:completeAnimation() --[[ @ 0]]
	f11_arg0.NotAvailable:completeAnimation() --[[ @ 0]]
	f11_arg0.internal:setRGB( 1, 1, 1 ) --[[ @ 0]]
	f11_arg0.internal:setAlpha( 1 ) --[[ @ 0]]
	f11_arg0.internal:setScale( 0.9, 0.9 ) --[[ @ 0]]
	f11_arg0.ConsumedProgress:setAlpha( 0.8 ) --[[ @ 0]]
	f11_arg0.castTimer:setAlpha( 1 ) --[[ @ 0]]
	f11_arg0.NotAvailable:setAlpha( 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.WarzoneQuickInventoryMenuItemSmall.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f12_arg0, f12_arg1 )
			f12_arg0:__resetProperties() --[[ @ 0]]
			f12_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end,
		ChildFocus = function ( f13_arg0, f13_arg1 )
			f13_arg0:__resetProperties() --[[ @ 0]]
			f13_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f13_arg0.internal:completeAnimation() --[[ @ 0]]
			f13_arg0.internal:setScale( 1.08, 1.08 ) --[[ @ 0]]
			f13_arg0.clipFinished( f13_arg0.internal ) --[[ @ 0]]
		end,
		GainChildFocus = function ( f14_arg0, f14_arg1 )
			f14_arg0:__resetProperties() --[[ @ 0]]
			f14_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f14_local0 = function ( f15_arg0 )
				f14_arg0.internal:beginAnimation( 140 ) --[[ @ 0]]
				f14_arg0.internal:setScale( 1.08, 1.08 ) --[[ @ 0]]
				f14_arg0.internal:registerEventHandler( "interrupted_keyframe", f14_arg0.clipInterrupted ) --[[ @ 0]]
				f14_arg0.internal:registerEventHandler( "transition_complete_keyframe", f14_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f14_arg0.internal:completeAnimation() --[[ @ 0]]
			f14_arg0.internal:setScale( 1, 1 ) --[[ @ 0]]
			f14_local0( f14_arg0.internal ) --[[ @ 0]]
		end,
		LoseChildFocus = function ( f16_arg0, f16_arg1 )
			f16_arg0:__resetProperties() --[[ @ 0]]
			f16_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f16_local0 = function ( f17_arg0 )
				f16_arg0.internal:beginAnimation( 140 ) --[[ @ 0]]
				f16_arg0.internal:setScale( 1, 1 ) --[[ @ 0]]
				f16_arg0.internal:registerEventHandler( "interrupted_keyframe", f16_arg0.clipInterrupted ) --[[ @ 0]]
				f16_arg0.internal:registerEventHandler( "transition_complete_keyframe", f16_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f16_arg0.internal:completeAnimation() --[[ @ 0]]
			f16_arg0.internal:setScale( 1.08, 1.08 ) --[[ @ 0]]
			f16_local0( f16_arg0.internal ) --[[ @ 0]]
		end
	},
	Invisible = {
		DefaultClip = function ( f18_arg0, f18_arg1 )
			f18_arg0:__resetProperties() --[[ @ 0]]
			f18_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f18_arg0.internal:completeAnimation() --[[ @ 0]]
			f18_arg0.internal:setAlpha( 0 ) --[[ @ 0]]
			f18_arg0.clipFinished( f18_arg0.internal ) --[[ @ 0]]
			f18_arg0.ConsumedProgress:completeAnimation() --[[ @ 0]]
			f18_arg0.ConsumedProgress:setAlpha( 0 ) --[[ @ 0]]
			f18_arg0.clipFinished( f18_arg0.ConsumedProgress ) --[[ @ 0]]
			f18_arg0.castTimer:completeAnimation() --[[ @ 0]]
			f18_arg0.castTimer:setAlpha( 0 ) --[[ @ 0]]
			f18_arg0.clipFinished( f18_arg0.castTimer ) --[[ @ 0]]
		end
	},
	Disabled = {
		DefaultClip = function ( f19_arg0, f19_arg1 )
			f19_arg0:__resetProperties() --[[ @ 0]]
			f19_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f19_arg0.internal:completeAnimation() --[[ @ 0]]
			f19_arg0.internal:setAlpha( 0 ) --[[ @ 0]]
			f19_arg0.clipFinished( f19_arg0.internal ) --[[ @ 0]]
			f19_arg0.ConsumedProgress:completeAnimation() --[[ @ 0]]
			f19_arg0.ConsumedProgress:setAlpha( 0 ) --[[ @ 0]]
			f19_arg0.clipFinished( f19_arg0.ConsumedProgress ) --[[ @ 0]]
			f19_arg0.castTimer:completeAnimation() --[[ @ 0]]
			f19_arg0.castTimer:setAlpha( 0 ) --[[ @ 0]]
			f19_arg0.clipFinished( f19_arg0.castTimer ) --[[ @ 0]]
		end
	},
	NotAvailable = {
		DefaultClip = function ( f20_arg0, f20_arg1 )
			f20_arg0:__resetProperties() --[[ @ 0]]
			f20_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f20_arg0.NotAvailable:completeAnimation() --[[ @ 0]]
			f20_arg0.NotAvailable:setAlpha( 1 ) --[[ @ 0]]
			f20_arg0.clipFinished( f20_arg0.NotAvailable ) --[[ @ 0]]
		end,
		ChildFocus = function ( f21_arg0, f21_arg1 )
			f21_arg0:__resetProperties() --[[ @ 0]]
			f21_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f21_arg0.internal:completeAnimation() --[[ @ 0]]
			f21_arg0.internal:setRGB( 1, 1, 1 ) --[[ @ 0]]
			f21_arg0.internal:setScale( 1.14, 1.14 ) --[[ @ 0]]
			f21_arg0.clipFinished( f21_arg0.internal ) --[[ @ 0]]
			f21_arg0.NotAvailable:completeAnimation() --[[ @ 0]]
			f21_arg0.NotAvailable:setAlpha( 1 ) --[[ @ 0]]
			f21_arg0.clipFinished( f21_arg0.NotAvailable ) --[[ @ 0]]
		end,
		GainChildFocus = function ( f22_arg0, f22_arg1 )
			f22_arg0:__resetProperties() --[[ @ 0]]
			f22_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			local f22_local0 = function ( f23_arg0 )
				f22_arg0.internal:beginAnimation( 200, Enum[@"hash_1F50FFF429AB1890"][@"hash_2053CEB9A0427197"] ) --[[ @ 0]]
				f22_arg0.internal:setScale( 1.14, 1.14 ) --[[ @ 0]]
				f22_arg0.internal:registerEventHandler( "interrupted_keyframe", f22_arg0.clipInterrupted ) --[[ @ 0]]
				f22_arg0.internal:registerEventHandler( "transition_complete_keyframe", f22_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f22_arg0.internal:completeAnimation() --[[ @ 0]]
			f22_arg0.internal:setScale( 1, 1 ) --[[ @ 0]]
			f22_local0( f22_arg0.internal ) --[[ @ 0]]
			f22_arg0.NotAvailable:completeAnimation() --[[ @ 0]]
			f22_arg0.NotAvailable:setAlpha( 1 ) --[[ @ 0]]
			f22_arg0.clipFinished( f22_arg0.NotAvailable ) --[[ @ 0]]
		end,
		LoseChildFocus = function ( f24_arg0, f24_arg1 )
			f24_arg0:__resetProperties() --[[ @ 0]]
			f24_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			local f24_local0 = function ( f25_arg0 )
				f24_arg0.internal:beginAnimation( 200, Enum[@"hash_1F50FFF429AB1890"][@"hash_2053CEB9A0427197"] ) --[[ @ 0]]
				f24_arg0.internal:setScale( 1, 1 ) --[[ @ 0]]
				f24_arg0.internal:registerEventHandler( "interrupted_keyframe", f24_arg0.clipInterrupted ) --[[ @ 0]]
				f24_arg0.internal:registerEventHandler( "transition_complete_keyframe", f24_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f24_arg0.internal:completeAnimation() --[[ @ 0]]
			f24_arg0.internal:setScale( 1.14, 1.14 ) --[[ @ 0]]
			f24_local0( f24_arg0.internal ) --[[ @ 0]]
			f24_arg0.NotAvailable:completeAnimation() --[[ @ 0]]
			f24_arg0.NotAvailable:setAlpha( 1 ) --[[ @ 0]]
			f24_arg0.clipFinished( f24_arg0.NotAvailable ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.WarzoneQuickInventoryMenuItemSmall.__onClose = function ( f26_arg0 )
	f26_arg0.internal:close() --[[ @ 0]]
	f26_arg0.ConsumedProgress:close() --[[ @ 0]]
	f26_arg0.castTimer:close() --[[ @ 0]]
	f26_arg0.EMP:close() --[[ @ 0]]
end
 --[[ @ 0]]
