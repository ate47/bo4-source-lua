-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:33
require( "ui/uieditor/widgets/systemoverlays/featureoverlay_button" ) --[[ @ 0]]
require( "ui/uieditor/widgets/pc/startmenu/pc_flexibleverticaltextblock" ) --[[ @ 0]]
require( "ui/uieditor/widgets/pc/startmenu/pc_flexibleverticaltextblock_title" ) --[[ @ 0]]

CoD.PC_StartMenu_Options_HUDBounds_Hints = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.PC_StartMenu_Options_HUDBounds_Hints.__defaultWidth = 762 --[[ @ 0]]
CoD.PC_StartMenu_Options_HUDBounds_Hints.__defaultHeight = 1080 --[[ @ 0]]
CoD.PC_StartMenu_Options_HUDBounds_Hints.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.PC_StartMenu_Options_HUDBounds_Hints ) --[[ @ 0]]
	self.id = "PC_StartMenu_Options_HUDBounds_Hints" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	local Title = nil --[[ @ 0]]
	
	Title = CoD.PC_FlexibleVerticalTextBlock_Title.new( f1_arg0, f1_arg1, 0, 0, 0, 762, 0, 0, 384, 449 ) --[[ @ 0]]
	Title:setRGB( 0.88, 0.88, 0.88 ) --[[ @ 0]]
	Title.Text:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_4C765F03779D1A07" ) ) --[[ @ 0]]
	self:addElement( Title ) --[[ @ 0]]
	self.Title = Title --[[ @ 0]]
	
	local Description = nil --[[ @ 0]]
	
	Description = CoD.PC_FlexibleVerticalTextBlock.new( f1_arg0, f1_arg1, 0, 0, 0, 762, 0, 0, 499, 524 ) --[[ @ 0]]
	Description:setRGB( 0.51, 0.51, 0.51 ) --[[ @ 0]]
	Description.Text:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_31595AE9DC82ED99" ) ) --[[ @ 0]]
	self:addElement( Description ) --[[ @ 0]]
	self.Description = Description --[[ @ 0]]
	
	local Hints = nil --[[ @ 0]]
	
	Hints = CoD.PC_FlexibleVerticalTextBlock.new( f1_arg0, f1_arg1, 0, 0, 0, 762, 0, 0, 574, 584 ) --[[ @ 0]]
	Hints:setRGB( 0.51, 0.51, 0.51 ) --[[ @ 0]]
	Hints:setAlpha( 0 ) --[[ @ 0]]
	Hints.Text:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_710C2584D47698D1" ) ) --[[ @ 0]]
	self:addElement( Hints ) --[[ @ 0]]
	self.Hints = Hints --[[ @ 0]]
	
	local confirmButton = CoD.featureOverlay_Button.new( f1_arg0, f1_arg1, 0, 0, 25.5, 255.5, 0, 0, 624, 684 ) --[[ @ 0]]
	confirmButton.ButtonContainer.Blur:setAlpha( 0 ) --[[ @ 0]]
	confirmButton.ButtonContainer.Title:setText( LocalizeToUpperString( @"hash_67D14DF1D6CBE990" ) ) --[[ @ 0]]
	confirmButton.ButtonContainer.Icon:setRGB( 0.4, 0.55, 0.22 ) --[[ @ 0]]
	confirmButton.ButtonContainer.Icon:setImage( RegisterImage( @"uie_success_icon" ) ) --[[ @ 0]]
	confirmButton:registerEventHandler( "gain_focus", function ( element, event )
		local f2_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f2_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f2_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f2_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( confirmButton, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "MOUSE1", function ( element, menu, controller, model )
		DispatchEventToRoot( self, "update_safe_area", controller ) --[[ @ 0]]
		GoBack( self, controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_0", nil, "MOUSE1" ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	self:addElement( confirmButton ) --[[ @ 0]]
	self.confirmButton = confirmButton --[[ @ 0]]
	
	local cancelButton = CoD.featureOverlay_Button.new( f1_arg0, f1_arg1, 0.5, 0.5, -115.5, 114.5, 0, 0, 624, 684 ) --[[ @ 0]]
	cancelButton.ButtonContainer.Blur:setAlpha( 0 ) --[[ @ 0]]
	cancelButton.ButtonContainer.Title:setText( LocalizeToUpperString( @"hash_7C2E92C54C2BE289" ) ) --[[ @ 0]]
	cancelButton.ButtonContainer.Icon:setRGB( 0.72, 0.21, 0.21 ) --[[ @ 0]]
	cancelButton.ButtonContainer.Icon:setImage( RegisterImage( @"uie_error_icon" ) ) --[[ @ 0]]
	cancelButton:registerEventHandler( "gain_focus", function ( element, event )
		local f5_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f5_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f5_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f5_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( cancelButton, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "MOUSE1", function ( element, menu, controller, model )
		SetSafeArea( self, menu, controller, "HUDBoundsTweakable_vertical", CoD.SafeArea.InitialY ) --[[ @ 0]]
		SetSafeArea( self, menu, controller, "HUDBoundsTweakable_horizontal", CoD.SafeArea.InitialX ) --[[ @ 0]]
		DispatchEventToRoot( self, "update_safe_area", controller ) --[[ @ 0]]
		GoBack( self, controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_0", nil, "MOUSE1" ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	self:addElement( cancelButton ) --[[ @ 0]]
	self.cancelButton = cancelButton --[[ @ 0]]
	
	local resetButton = CoD.featureOverlay_Button.new( f1_arg0, f1_arg1, 1, 1, -255.5, -25.5, 0, 0, 624, 684 ) --[[ @ 0]]
	resetButton.ButtonContainer.Blur:setAlpha( 0 ) --[[ @ 0]]
	resetButton.ButtonContainer.Title:setText( LocalizeToUpperString( @"hash_49BC2B49A2A1CCB1" ) ) --[[ @ 0]]
	resetButton.ButtonContainer.Icon:setRGB( 0.42, 0.42, 0.42 ) --[[ @ 0]]
	resetButton.ButtonContainer.Icon:setImage( RegisterImage( @"uie_reset_icon" ) ) --[[ @ 0]]
	resetButton:registerEventHandler( "gain_focus", function ( element, event )
		local f8_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f8_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f8_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f8_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( resetButton, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "MOUSE1", function ( element, menu, controller, model )
		ResetSafeAreaHorizontal( self, self, controller ) --[[ @ 0]]
		SetSafeArea( self, self, controller, "HUDBoundsTweakable_vertical", CoD.SafeArea.Maximum ) --[[ @ 0]]
		DispatchEventToRoot( element, "update_safe_area", controller ) --[[ @ 0]]
		GoBack( self, controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_0", nil, "MOUSE1" ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	self:addElement( resetButton ) --[[ @ 0]]
	self.resetButton = resetButton --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Gamepad",
			condition = function ( menu, element, event )
				return IsGamepad( f1_arg1 )
			end
		}
	} ) --[[ @ 0]]
	self:appendEventHandler( "input_source_changed", function ( f12_arg0, f12_arg1 )
		f12_arg1.menu = f12_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( self, f12_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local f1_local7 = self --[[ @ 0]]
	local f1_local8 = self.subscribeToModel --[[ @ 0]]
	local f1_local9 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local8( f1_local7, f1_local9.LastInput, function ( f13_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f13_arg0:get(),
			modelName = "LastInput"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	confirmButton.id = "confirmButton" --[[ @ 0]]
	cancelButton.id = "cancelButton" --[[ @ 0]]
	resetButton.id = "resetButton" --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.PC_StartMenu_Options_HUDBounds_Hints.__resetProperties = function ( f14_arg0 )
	f14_arg0.Hints:completeAnimation() --[[ @ 0]]
	f14_arg0.confirmButton:completeAnimation() --[[ @ 0]]
	f14_arg0.cancelButton:completeAnimation() --[[ @ 0]]
	f14_arg0.resetButton:completeAnimation() --[[ @ 0]]
	f14_arg0.Hints:setAlpha( 0 ) --[[ @ 0]]
	f14_arg0.Hints.Text:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_710C2584D47698D1" ) ) --[[ @ 0]]
	f14_arg0.confirmButton:setAlpha( 1 ) --[[ @ 0]]
	f14_arg0.cancelButton:setAlpha( 1 ) --[[ @ 0]]
	f14_arg0.resetButton:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.PC_StartMenu_Options_HUDBounds_Hints.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f15_arg0, f15_arg1 )
			f15_arg0:__resetProperties() --[[ @ 0]]
			f15_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f15_arg0.Title:completeAnimation() --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.Title ) --[[ @ 0]]
			f15_arg0.Hints:completeAnimation() --[[ @ 0]]
			f15_arg0.Hints:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.Hints ) --[[ @ 0]]
		end
	},
	Gamepad = {
		DefaultClip = function ( f16_arg0, f16_arg1 )
			f16_arg0:__resetProperties() --[[ @ 0]]
			f16_arg0:setupElementClipCounter( 4 ) --[[ @ 0]]
			f16_arg0.Hints:completeAnimation() --[[ @ 0]]
			f16_arg0.Hints.Text:completeAnimation() --[[ @ 0]]
			f16_arg0.Hints:setAlpha( 1 ) --[[ @ 0]]
			f16_arg0.Hints.Text:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_61F6665A4B327348" ) ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.Hints ) --[[ @ 0]]
			f16_arg0.confirmButton:completeAnimation() --[[ @ 0]]
			f16_arg0.confirmButton:setAlpha( 0 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.confirmButton ) --[[ @ 0]]
			f16_arg0.cancelButton:completeAnimation() --[[ @ 0]]
			f16_arg0.cancelButton:setAlpha( 0 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.cancelButton ) --[[ @ 0]]
			f16_arg0.resetButton:completeAnimation() --[[ @ 0]]
			f16_arg0.resetButton:setAlpha( 0 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.resetButton ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.PC_StartMenu_Options_HUDBounds_Hints.__onClose = function ( f17_arg0 )
	f17_arg0.Title:close() --[[ @ 0]]
	f17_arg0.Description:close() --[[ @ 0]]
	f17_arg0.Hints:close() --[[ @ 0]]
	f17_arg0.confirmButton:close() --[[ @ 0]]
	f17_arg0.cancelButton:close() --[[ @ 0]]
	f17_arg0.resetButton:close() --[[ @ 0]]
end
 --[[ @ 0]]
