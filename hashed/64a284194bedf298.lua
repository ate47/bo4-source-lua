-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:50
require( "x64:7a0ea5c4d6136584" ) --[[ @ 0]]
require( "x64:5520ac0ef70d2063" ) --[[ @ 0]]

CoD.WZAARContractReward = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.WZAARContractReward.__defaultWidth = 345 --[[ @ 0]]
CoD.WZAARContractReward.__defaultHeight = 56 --[[ @ 0]]
CoD.WZAARContractReward.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.WZAARContractReward ) --[[ @ 0]]
	self.id = "WZAARContractReward" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local Background = LUI.UIImage.new( 0, 0, 0, 345, 0, 0, 0, 56 ) --[[ @ 0]]
	Background:setRGB( 0.2, 0.2, 0.2 ) --[[ @ 0]]
	Background:setAlpha( 0.7 ) --[[ @ 0]]
	self:addElement( Background ) --[[ @ 0]]
	self.Background = Background --[[ @ 0]]
	
	local BMActiveContractXpReward = CoD.BM_ActiveContractXpReward.new( f1_arg0, f1_arg1, 0, 0, 42.5, 172.5, 0, 0, 3, 53 ) --[[ @ 0]]
	BMActiveContractXpReward:linkToElementModel( self, "xp", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			BMActiveContractXpReward.RewardsAmount:setText( f2_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( BMActiveContractXpReward ) --[[ @ 0]]
	self.BMActiveContractXpReward = BMActiveContractXpReward --[[ @ 0]]
	
	local GenericReward = CoD.BM_ActiveContractItemReward.new( f1_arg0, f1_arg1, 0, 0, 192.5, 322.5, 0, 0, 3, 53 ) --[[ @ 0]]
	GenericReward:linkToElementModel( self, "cases", true, function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			GenericReward.RewardsAmount:setText( f3_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( GenericReward ) --[[ @ 0]]
	self.GenericReward = GenericReward --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "XPOnly",
			condition = function ( menu, element, event )
				return not CoD.ModelUtility.IsSelfModelValueGreaterThan( element, f1_arg1, "cases", 0 )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "cases", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "cases"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.WZAARContractReward.__resetProperties = function ( f6_arg0 )
	f6_arg0.GenericReward:completeAnimation() --[[ @ 0]]
	f6_arg0.BMActiveContractXpReward:completeAnimation() --[[ @ 0]]
	f6_arg0.GenericReward:setAlpha( 1 ) --[[ @ 0]]
	f6_arg0.BMActiveContractXpReward:setLeftRight( 0, 0, 42.5, 172.5 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.WZAARContractReward.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f7_arg0, f7_arg1 )
			f7_arg0:__resetProperties() --[[ @ 0]]
			f7_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	XPOnly = {
		DefaultClip = function ( f8_arg0, f8_arg1 )
			f8_arg0:__resetProperties() --[[ @ 0]]
			f8_arg0:setupElementClipCounter( 2 ) --[[ @ 0]]
			f8_arg0.BMActiveContractXpReward:completeAnimation() --[[ @ 0]]
			f8_arg0.BMActiveContractXpReward:setLeftRight( 0, 0, 131.5, 261.5 ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.BMActiveContractXpReward ) --[[ @ 0]]
			f8_arg0.GenericReward:completeAnimation() --[[ @ 0]]
			f8_arg0.GenericReward:setAlpha( 0 ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.GenericReward ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.WZAARContractReward.__onClose = function ( f9_arg0 )
	f9_arg0.BMActiveContractXpReward:close() --[[ @ 0]]
	f9_arg0.GenericReward:close() --[[ @ 0]]
end
 --[[ @ 0]]
