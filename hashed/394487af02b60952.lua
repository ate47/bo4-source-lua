-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:33
require( "x64:58e954fb331b89f8" ) --[[ @ 0]]
require( "x64:6d72b72bc4de143f" ) --[[ @ 0]]
require( "x64:a05d396c91b3e63" ) --[[ @ 0]]

CoD.AmmoWidget_WeaponInfo = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.AmmoWidget_WeaponInfo.__defaultWidth = 239 --[[ @ 0]]
CoD.AmmoWidget_WeaponInfo.__defaultHeight = 97 --[[ @ 0]]
CoD.AmmoWidget_WeaponInfo.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.AmmoWidget_WeaponInfo ) --[[ @ 0]]
	self.id = "AmmoWidget_WeaponInfo" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local WeaponImage = CoD.AmmoWidget_WeaponImage.new( f1_arg0, f1_arg1, 0, 0, 0, 164, 0, 0, 16.5, 68.5 ) --[[ @ 0]]
	WeaponImage:linkToElementModel( self, nil, false, function ( model )
		WeaponImage:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( WeaponImage ) --[[ @ 0]]
	self.WeaponImage = WeaponImage --[[ @ 0]]
	
	local WeaponAmmoCount2 = CoD.AmmoWidgetMP_ClipInfo.new( f1_arg0, f1_arg1, 0, 0, -326, -262, 0, 0, -3, 58 ) --[[ @ 0]]
	WeaponAmmoCount2:setAlpha( 0.08 ) --[[ @ 0]]
	WeaponAmmoCount2:linkToElementModel( self, nil, false, function ( model )
		WeaponAmmoCount2:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( WeaponAmmoCount2 ) --[[ @ 0]]
	self.WeaponAmmoCount2 = WeaponAmmoCount2 --[[ @ 0]]
	
	local WeaponAmmoCount = CoD.AmmoWidgetMP_ClipInfo.new( f1_arg0, f1_arg1, 0, 0, -330, -266, 0, 0, 1, 62 ) --[[ @ 0]]
	WeaponAmmoCount:linkToElementModel( self, nil, false, function ( model )
		WeaponAmmoCount:setModel( model, f1_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( WeaponAmmoCount ) --[[ @ 0]]
	self.WeaponAmmoCount = WeaponAmmoCount --[[ @ 0]]
	
	local grappleWeapon = LUI.UIImage.new( 0, 0, 142, 207, 0, 0, -28, 2 ) --[[ @ 0]]
	grappleWeapon:setAlpha( 0 ) --[[ @ 0]]
	grappleWeapon:setZRot( -70 ) --[[ @ 0]]
	grappleWeapon:linkToElementModel( self, "dwGrappleWeapon", true, function ( model )
		local f5_local0 = model:get() --[[ @ 0]]
		if f5_local0 ~= nil then
			grappleWeapon:setImage( RegisterImage( GetHudImageFromItemIndex( f5_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( grappleWeapon ) --[[ @ 0]]
	self.grappleWeapon = grappleWeapon --[[ @ 0]]
	
	local AmmoHeal_Prompt = CoD.AmmoWidget_Prompt.new( f1_arg0, f1_arg1, 0, 0, -318, -254, 0, 0, 78, 90 ) --[[ @ 0]]
	AmmoHeal_Prompt:mergeStateConditions( {
		{
			stateName = "LowAmmo",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		},
		{
			stateName = "LowHealth",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		}
	} ) --[[ @ 0]]
	AmmoHeal_Prompt:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( AmmoHeal_Prompt ) --[[ @ 0]]
	self.AmmoHeal_Prompt = AmmoHeal_Prompt --[[ @ 0]]
	
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.AmmoWidget_WeaponInfo.__resetProperties = function ( f8_arg0 )
	f8_arg0.WeaponAmmoCount:completeAnimation() --[[ @ 0]]
	f8_arg0.WeaponAmmoCount:setLeftRight( 0, 0, -330, -266 ) --[[ @ 0]]
	f8_arg0.WeaponAmmoCount:setTopBottom( 0, 0, 1, 62 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.AmmoWidget_WeaponInfo.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f9_arg0, f9_arg1 )
			f9_arg0:__resetProperties() --[[ @ 0]]
			f9_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	Warzone = {
		DefaultClip = function ( f10_arg0, f10_arg1 )
			f10_arg0:__resetProperties() --[[ @ 0]]
			f10_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f10_arg0.WeaponAmmoCount:completeAnimation() --[[ @ 0]]
			f10_arg0.WeaponAmmoCount:setLeftRight( 0, 0, -323, -259 ) --[[ @ 0]]
			f10_arg0.WeaponAmmoCount:setTopBottom( 0, 0, -33.5, 27.5 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.WeaponAmmoCount ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.AmmoWidget_WeaponInfo.__onClose = function ( f11_arg0 )
	f11_arg0.WeaponImage:close() --[[ @ 0]]
	f11_arg0.WeaponAmmoCount2:close() --[[ @ 0]]
	f11_arg0.WeaponAmmoCount:close() --[[ @ 0]]
	f11_arg0.grappleWeapon:close() --[[ @ 0]]
	f11_arg0.AmmoHeal_Prompt:close() --[[ @ 0]]
end
 --[[ @ 0]]
