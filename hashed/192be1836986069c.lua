-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:48
CoD.Tak5Reticle_LockOn = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.Tak5Reticle_LockOn.__defaultWidth = 150 --[[ @ 0]]
CoD.Tak5Reticle_LockOn.__defaultHeight = 150 --[[ @ 0]]
CoD.Tak5Reticle_LockOn.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.Tak5Reticle_LockOn ) --[[ @ 0]]
	self.id = "Tak5Reticle_LockOn" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local reticleBg = LUI.UIImage.new( 0, 0, 54, 96, 0, 0, 54, 96 ) --[[ @ 0]]
	reticleBg:setAlpha( 0.25 ) --[[ @ 0]]
	reticleBg:setImage( RegisterImage( @"uie_ui_hud_tak5_reticle_center_backing" ) ) --[[ @ 0]]
	self:addElement( reticleBg ) --[[ @ 0]]
	self.reticleBg = reticleBg --[[ @ 0]]
	
	local LockOn = LUI.UIImage.new( 0.5, 0.5, -50, 50, 0.5, 0.5, -50, 50 ) --[[ @ 0]]
	LockOn:setRGB( ColorSet.CleanseBar.r, ColorSet.CleanseBar.g, ColorSet.CleanseBar.b ) --[[ @ 0]]
	LockOn:setZRot( 135 ) --[[ @ 0]]
	LockOn:setImage( RegisterImage( @"uie_ui_hud_tak5_reticle_pointer" ) ) --[[ @ 0]]
	self:addElement( LockOn ) --[[ @ 0]]
	self.LockOn = LockOn --[[ @ 0]]
	
	local LockOnAdd = LUI.UIImage.new( 0.5, 0.5, -50, 50, 0.5, 0.5, -50, 50 ) --[[ @ 0]]
	LockOnAdd:setAlpha( 0.2 ) --[[ @ 0]]
	LockOnAdd:setZRot( 135 ) --[[ @ 0]]
	LockOnAdd:setImage( RegisterImage( @"uie_ui_hud_tak5_reticle_pointer" ) ) --[[ @ 0]]
	LockOnAdd:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_31CC85D0A86303B0" ) ) --[[ @ 0]]
	LockOnAdd:setShaderVector( 0, 1.5, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( LockOnAdd ) --[[ @ 0]]
	self.LockOnAdd = LockOnAdd --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "AlreadyBoosted",
			condition = function ( menu, element, event )
				return CoD.HUDUtility.IsTeammateHealTargetAlreadyBoosted( f1_arg1 )
			end
		},
		{
			stateName = "LockedOn",
			condition = function ( menu, element, event )
				return CoD.HUDUtility.IsTeammateHealTargeting( f1_arg1 )
			end
		}
	} ) --[[ @ 0]]
	local f1_local4 = self --[[ @ 0]]
	local f1_local5 = self.subscribeToModel --[[ @ 0]]
	local f1_local6 = DataSources.TeammateHealTargeting.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local5( f1_local4, f1_local6.status, function ( f4_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f4_arg0:get(),
			modelName = "status"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local4 = self --[[ @ 0]]
	f1_local5 = self.subscribeToModel --[[ @ 0]]
	f1_local6 = DataSources.TeammateHealTargeting.getModel( f1_arg1 ) --[[ @ 0]]
	f1_local5( f1_local4, f1_local6.targetClientNum, function ( f5_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f5_arg0:get(),
			modelName = "targetClientNum"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:subscribeToGlobalModel( f1_arg1, "TeammateHealTargeting", "targetClientNum", function ( model )
		local f6_local0 = self --[[ @ 0]]
		if not CoD.ModelUtility.IsGlobalDataSourceModelValueEqualTo( f1_arg1, "TeammateHealTargeting", "targetClientNum", LuaDefine.INVALID_CLIENT_INDEX ) then
			PlayClip( self, "TargetChange", f1_arg1 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.Tak5Reticle_LockOn.__resetProperties = function ( f7_arg0 )
	f7_arg0.LockOn:completeAnimation() --[[ @ 0]]
	f7_arg0.reticleBg:completeAnimation() --[[ @ 0]]
	f7_arg0.LockOnAdd:completeAnimation() --[[ @ 0]]
	f7_arg0.LockOn:setRGB( ColorSet.CleanseBar.r, ColorSet.CleanseBar.g, ColorSet.CleanseBar.b ) --[[ @ 0]]
	f7_arg0.LockOn:setAlpha( 1 ) --[[ @ 0]]
	f7_arg0.LockOn:setZRot( 135 ) --[[ @ 0]]
	f7_arg0.LockOn:setScale( 1, 1 ) --[[ @ 0]]
	f7_arg0.reticleBg:setAlpha( 0.25 ) --[[ @ 0]]
	f7_arg0.reticleBg:setScale( 1, 1 ) --[[ @ 0]]
	f7_arg0.LockOnAdd:setAlpha( 0.2 ) --[[ @ 0]]
	f7_arg0.LockOnAdd:setZRot( 135 ) --[[ @ 0]]
	f7_arg0.LockOnAdd:setScale( 1, 1 ) --[[ @ 0]]
	f7_arg0.LockOnAdd:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_31CC85D0A86303B0" ) ) --[[ @ 0]]
	f7_arg0.LockOnAdd:setShaderVector( 0, 1.5, 0, 0, 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.Tak5Reticle_LockOn.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f8_arg0, f8_arg1 )
			f8_arg0:__resetProperties() --[[ @ 0]]
			f8_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f8_arg0.reticleBg:completeAnimation() --[[ @ 0]]
			f8_arg0.reticleBg:setScale( 0.6, 0.6 ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.reticleBg ) --[[ @ 0]]
			f8_arg0.LockOn:completeAnimation() --[[ @ 0]]
			f8_arg0.LockOn:setZRot( 135 ) --[[ @ 0]]
			f8_arg0.LockOn:setScale( 0.25, 0.25 ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.LockOn ) --[[ @ 0]]
			f8_arg0.LockOnAdd:completeAnimation() --[[ @ 0]]
			f8_arg0.LockOnAdd:setAlpha( 0.2 ) --[[ @ 0]]
			f8_arg0.LockOnAdd:setZRot( 135 ) --[[ @ 0]]
			f8_arg0.LockOnAdd:setScale( 0.25, 0.25 ) --[[ @ 0]]
			f8_arg0.LockOnAdd:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_31CC85D0A86303B0" ) ) --[[ @ 0]]
			f8_arg0.LockOnAdd:setShaderVector( 0, 1.5, 0, 0, 0 ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.LockOnAdd ) --[[ @ 0]]
		end
	},
	AlreadyBoosted = {
		DefaultClip = function ( f9_arg0, f9_arg1 )
			f9_arg0:__resetProperties() --[[ @ 0]]
			f9_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f9_arg0.reticleBg:completeAnimation() --[[ @ 0]]
			f9_arg0.reticleBg:setScale( 0.5, 0.5 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.reticleBg ) --[[ @ 0]]
			f9_arg0.LockOn:completeAnimation() --[[ @ 0]]
			f9_arg0.LockOn:setRGB( 1, 1, 1 ) --[[ @ 0]]
			f9_arg0.LockOn:setAlpha( 0.5 ) --[[ @ 0]]
			f9_arg0.LockOn:setZRot( 135 ) --[[ @ 0]]
			f9_arg0.LockOn:setScale( 0.5, 0.5 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.LockOn ) --[[ @ 0]]
			f9_arg0.LockOnAdd:completeAnimation() --[[ @ 0]]
			f9_arg0.LockOnAdd:setAlpha( 0 ) --[[ @ 0]]
			f9_arg0.LockOnAdd:setScale( 0.5, 0.5 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.LockOnAdd ) --[[ @ 0]]
		end,
		TargetChange = function ( f10_arg0, f10_arg1 )
			f10_arg0:__resetProperties() --[[ @ 0]]
			f10_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			local f10_local0 = function ( f11_arg0 )
				f10_arg0.reticleBg:beginAnimation( 60, Enum[@"luitween"][@"luitween_ease_in"] ) --[[ @ 0]]
				f10_arg0.reticleBg:setAlpha( 0.25 ) --[[ @ 0]]
				f10_arg0.reticleBg:setScale( 0.5, 0.5 ) --[[ @ 0]]
				f10_arg0.reticleBg:registerEventHandler( "interrupted_keyframe", f10_arg0.clipInterrupted ) --[[ @ 0]]
				f10_arg0.reticleBg:registerEventHandler( "transition_complete_keyframe", f10_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f10_arg0.reticleBg:completeAnimation() --[[ @ 0]]
			f10_arg0.reticleBg:setAlpha( 0.5 ) --[[ @ 0]]
			f10_arg0.reticleBg:setScale( 0.8, 0.8 ) --[[ @ 0]]
			f10_local0( f10_arg0.reticleBg ) --[[ @ 0]]
			local f10_local1 = function ( f12_arg0 )
				f10_arg0.LockOn:beginAnimation( 60 ) --[[ @ 0]]
				f10_arg0.LockOn:setZRot( 135 ) --[[ @ 0]]
				f10_arg0.LockOn:setScale( 0.5, 0.5 ) --[[ @ 0]]
				f10_arg0.LockOn:registerEventHandler( "interrupted_keyframe", f10_arg0.clipInterrupted ) --[[ @ 0]]
				f10_arg0.LockOn:registerEventHandler( "transition_complete_keyframe", f10_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f10_arg0.LockOn:completeAnimation() --[[ @ 0]]
			f10_arg0.LockOn:setRGB( 1, 1, 1 ) --[[ @ 0]]
			f10_arg0.LockOn:setAlpha( 0.5 ) --[[ @ 0]]
			f10_arg0.LockOn:setZRot( 0 ) --[[ @ 0]]
			f10_arg0.LockOn:setScale( 0.4, 0.4 ) --[[ @ 0]]
			f10_local1( f10_arg0.LockOn ) --[[ @ 0]]
			local f10_local2 = function ( f13_arg0 )
				local f13_local0 = function ( f14_arg0 )
					f14_arg0:beginAnimation( 30 ) --[[ @ 0]]
					f14_arg0:setAlpha( 0 ) --[[ @ 0]]
					f14_arg0:setZRot( 135 ) --[[ @ 0]]
					f14_arg0:setScale( 0.5, 0.5 ) --[[ @ 0]]
					f14_arg0:registerEventHandler( "transition_complete_keyframe", f10_arg0.clipFinished ) --[[ @ 0]]
				end
				 --[[ @ 0]]
				f10_arg0.LockOnAdd:beginAnimation( 30 ) --[[ @ 0]]
				f10_arg0.LockOnAdd:setAlpha( 0.1 ) --[[ @ 0]]
				f10_arg0.LockOnAdd:setZRot( 68 ) --[[ @ 0]]
				f10_arg0.LockOnAdd:setScale( 0.45, 0.45 ) --[[ @ 0]]
				f10_arg0.LockOnAdd:registerEventHandler( "interrupted_keyframe", f10_arg0.clipInterrupted ) --[[ @ 0]]
				f10_arg0.LockOnAdd:registerEventHandler( "transition_complete_keyframe", f13_local0 ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f10_arg0.LockOnAdd:completeAnimation() --[[ @ 0]]
			f10_arg0.LockOnAdd:setAlpha( 0 ) --[[ @ 0]]
			f10_arg0.LockOnAdd:setZRot( 0 ) --[[ @ 0]]
			f10_arg0.LockOnAdd:setScale( 0.4, 0.4 ) --[[ @ 0]]
			f10_local2( f10_arg0.LockOnAdd ) --[[ @ 0]]
		end
	},
	LockedOn = {
		DefaultClip = function ( f15_arg0, f15_arg1 )
			f15_arg0:__resetProperties() --[[ @ 0]]
			f15_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f15_arg0.reticleBg:completeAnimation() --[[ @ 0]]
			f15_arg0.reticleBg:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.reticleBg:setScale( 1, 1 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.reticleBg ) --[[ @ 0]]
			f15_arg0.LockOn:completeAnimation() --[[ @ 0]]
			f15_arg0.LockOn:setRGB( 0.92, 0.89, 0.72 ) --[[ @ 0]]
			f15_arg0.LockOn:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.LockOn:setZRot( 0 ) --[[ @ 0]]
			f15_arg0.LockOn:setScale( 1, 1 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.LockOn ) --[[ @ 0]]
			f15_arg0.LockOnAdd:completeAnimation() --[[ @ 0]]
			f15_arg0.LockOnAdd:setAlpha( 0 ) --[[ @ 0]]
			f15_arg0.LockOnAdd:setZRot( 0 ) --[[ @ 0]]
			f15_arg0.LockOnAdd:setScale( 1, 1 ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.LockOnAdd ) --[[ @ 0]]
		end,
		TargetChange = function ( f16_arg0, f16_arg1 )
			f16_arg0:__resetProperties() --[[ @ 0]]
			f16_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f16_arg0.reticleBg:completeAnimation() --[[ @ 0]]
			f16_arg0.reticleBg:setAlpha( 0 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.reticleBg ) --[[ @ 0]]
			f16_arg0.LockOn:completeAnimation() --[[ @ 0]]
			f16_arg0.LockOn:setAlpha( 0 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.LockOn ) --[[ @ 0]]
			f16_arg0.LockOnAdd:completeAnimation() --[[ @ 0]]
			f16_arg0.LockOnAdd:setAlpha( 0 ) --[[ @ 0]]
			f16_arg0.clipFinished( f16_arg0.LockOnAdd ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
