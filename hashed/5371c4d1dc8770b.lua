-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
CoD.ZMLaboratoryUtility = {} --[[ @ 0]]
require( "ui/utility/overlayutility" ) --[[ @ 0]]
CoD.ZMLaboratoryUtility.LabAnimState = {
	NOT_PLAYING = 0,
	NOT_PLAYING_TO_PLAYING = 1,
	PLAYING = 2,
	PLAYING_TO_MIX_AGAIN = 3,
	MIX_AGAIN = 4,
	MIX_AGAIN_TO_PLAYING = 5,
	MIX_AGAIN_TO_NOT_PLAYING = 6
} --[[ @ 0]]
CoD.ZMLaboratoryUtility.RarityColorSets = {
	[0] = ColorSet.BlackMarketCommon,
	[1] = ColorSet.BlackMarketRare,
	[2] = ColorSet.BlackMarketLegendary,
	[3] = ColorSet.BlackMarketEpic,
	[4] = ColorSet.RewardCamo
} --[[ @ 0]]
CoD.ZMLaboratoryUtility.RarityStrings = {
	[0] = @"hash_1E73A287484FA8DE",
	[1] = @"hash_1D14011B788D0CF7",
	[2] = @"hash_499BE3404C6F5504",
	[3] = @"hash_7CC5E57AF2A3CF36",
	[4] = @"hash_36928619D00F39CF"
} --[[ @ 0]]
CoD.ZMLaboratoryUtility.MaxSpecialOffers = 3 --[[ @ 0]]
CoD.ZMLaboratoryUtility.DefaultConcoctions = {
	{
		assetName = @"hash_779BC77A16DA8FC1"
	},
	{
		assetName = @"hash_72EDCDA659369510"
	},
	{
		assetName = @"hash_72014B7851942E17"
	}
} --[[ @ 0]]
CoD.ZMLaboratoryUtility.MaxResults = 4 --[[ @ 0]]
CoD.ZMLaboratoryUtility.ResultModels = {
	{
		modelName = "result",
		default = @"hash_0"
	},
	{
		modelName = "quantity",
		default = 0
	}
} --[[ @ 0]]
CoD.ZMLaboratoryUtility.ResetResults = function ( f1_arg0 )
	for f1_local0 = 1 --[[ @ 0]], CoD.ZMLaboratoryUtility.MaxResults, 1 do
		local f1_local3 = f1_arg0:create( f1_local0 .. "" ) --[[ @ 0]]
		for f1_local7, f1_local8 in ipairs( CoD.ZMLaboratoryUtility.ResultModels ) --[[ @ 0]] do
			local f1_local9 = f1_local3:create( f1_local8.modelName ) --[[ @ 0]]
			f1_local9:set( f1_local8.default ) --[[ @ 0]]
		end
	end
	local f1_local0 = f1_arg0:create( "ready" ) --[[ @ 0]]
	f1_local0:set( false ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ZMLaboratoryUtility.GetResults = function ( f2_arg0 )
	local f2_local0 = {} --[[ @ 0]]
	for f2_local1 = 1 --[[ @ 0]], CoD.ZMLaboratoryUtility.MaxResults, 1 do
		local f2_local4 = f2_arg0:create( f2_local1 .. "" ) --[[ @ 0]]
		local f2_local5 = {} --[[ @ 0]]
		for f2_local9, f2_local10 in ipairs( CoD.ZMLaboratoryUtility.ResultModels ) --[[ @ 0]] do
			local f2_local11 = f2_local10.modelName --[[ @ 0]]
			local f2_local12 = f2_local4:create( f2_local10.modelName ) --[[ @ 0]]
			f2_local5[f2_local11] = f2_local12:get() or f2_local10.default --[[ @ 0]]
		end
		f2_local0[f2_local1] = f2_local5 --[[ @ 0]]
	end
	return f2_local0
end
 --[[ @ 0]]
CoD.ZMLaboratoryUtility.GetLabModel = function ( f3_arg0 )
	local f3_local0 = Engine[@"GetModelForController"]( f3_arg0 ) --[[ @ 0]]
	return f3_local0:create( "Laboratory" )
end
 --[[ @ 0]]
CoD.ZMLaboratoryUtility.DoLootQueryAndSendClientScriptNotify = function ( f4_arg0, f4_arg1, f4_arg2, f4_arg3, f4_arg4 )
	local f4_local0 = function ()
		Engine[@"SendClientScriptNotify"]( f4_arg2, "np_item_play_anim" ) --[[ @ 0]]
		CoD.ZMLaboratoryUtility.AttemptLootQuery( f4_arg0, f4_arg1, f4_arg2, f4_arg3, f4_arg4 ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	if CoD.isPC then
		CoD.PCUtility.DisplayPrePurchasePopup( f4_local0, f4_arg4, f4_arg2, {
			labElement = f4_arg1
		} ) --[[ @ 0]]
	else
		f4_local0() --[[ @ 0]]
	end
end
 --[[ @ 0]]
CoD.ZMLaboratoryUtility.IsInAnimState = function ( f6_arg0, f6_arg1, f6_arg2, f6_arg3 )
	local f6_local0 = CoD.ZMLaboratoryUtility.GetLabModel( f6_arg0 ) --[[ @ 0]]
	f6_local0 = f6_local0.animState:get() --[[ @ 0]]
	local f6_local1 --[[ @ 0]]
	if (not f6_arg1 or f6_local0 ~= f6_arg1) and (not f6_arg2 or f6_local0 ~= f6_arg2) then
		local f6_local2 = f6_arg3 --[[ @ 0]]
		if f6_local0 ~= f6_arg3 then
			f6_local1 = false --[[ @ 0]]
		end
	end
	f6_local1 = f6_local2 and true --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ZMLaboratoryUtility.GetLaboratoryBannerOffer = function ()
	return Dvar[@"hash_1522D365E2D9088E"]:exists() and Engine[@"hash_1C53F8D38DF9042B"]( Dvar[@"hash_1522D365E2D9088E"]:get() )
end
 --[[ @ 0]]
CoD.ZMLaboratoryUtility.GetLaboratorySpecialOffer = function ( f8_arg0 )
	local f8_local0 = Engine[@"hash_254084D7CA2317BB"]( "laboratory_special_offer_" .. f8_arg0 ) --[[ @ 0]]
	return f8_local0 and Engine[@"hash_1C53F8D38DF9042B"]( f8_local0 )
end
 --[[ @ 0]]
CoD.ZMLaboratoryUtility.IsOfferAvailable = function ( f9_arg0 )
	if not f9_arg0 or f9_arg0 == "" or f9_arg0 == @"hash_0" then
		return false
	end
	for f9_local0 = 1 --[[ @ 0]], CoD.ZMLaboratoryUtility.MaxSpecialOffers, 1 do
		if Engine[@"hash_1C53F8D38DF9042B"]( Engine[@"hash_254084D7CA2317BB"]( "laboratory_special_offer_" .. f9_local0 ) ) == f9_arg0 then
			return true
		end
	end
	return false
end
 --[[ @ 0]]
CoD.ZMLaboratoryUtility.IsInAnimState1 = function ( f10_arg0, f10_arg1 )
	return CoD.ZMLaboratoryUtility.IsInAnimState( f10_arg0, f10_arg1 )
end
 --[[ @ 0]]
CoD.ZMLaboratoryUtility.IsInAnimState2 = function ( f11_arg0, f11_arg1, f11_arg2 )
	return CoD.ZMLaboratoryUtility.IsInAnimState( f11_arg0, f11_arg1, f11_arg2 )
end
 --[[ @ 0]]
CoD.ZMLaboratoryUtility.IsInAnimState3 = function ( f12_arg0, f12_arg1, f12_arg2, f12_arg3 )
	return CoD.ZMLaboratoryUtility.IsInAnimState( f12_arg0, f12_arg1, f12_arg2, f12_arg3 )
end
 --[[ @ 0]]
CoD.ZMLaboratoryUtility.CanPurchase = function ( f13_arg0, f13_arg1 )
	local f13_local0 = CoD.SafeGetModelValue( f13_arg1:getModel(), "plasmaPrice" ) --[[ @ 0]]
	if (not Dvar[@"hash_3659A867DE4952AA"]:exists() or tonumber( Dvar[@"hash_3659A867DE4952AA"]:get() ) == 0) and f13_local0 and f13_local0 > 0 then
		return f13_local0 <= Engine[@"hash_2F40679B550DCCA2"]( f13_arg0, CoD.Currencies.ZM_NEBULIUM_PLASMA )
	else
		return true
	end
end
 --[[ @ 0]]
CoD.ZMLaboratoryUtility.CanPurchaseMore = function ( f14_arg0, f14_arg1 )
	local f14_local0 = f14_arg1:getModel() --[[ @ 0]]
	local f14_local1 = f14_local0.maxQuantity --[[ @ 0]]
	if f14_local1 then
		f14_local1 = f14_local0.maxQuantity:get() --[[ @ 0]]
	end
	local f14_local2 = f14_local0.skuID --[[ @ 0]]
	if f14_local2 then
		f14_local2 = f14_local0.skuID:get() --[[ @ 0]]
	end
	if f14_local1 and f14_local1 > 0 and f14_local2 then
		if f14_local1 <= Engine[@"hash_5352DC095BBB2A45"]( f14_arg0, tostring( f14_local2 ) ) then
			return false
		else
			return true
		end
	else
		return true
	end
end
 --[[ @ 0]]
CoD.ZMLaboratoryUtility.HasOfferExpired = function ( f15_arg0 )
	local f15_local0 = f15_arg0 and f15_arg0:getModel() --[[ @ 0]]
	local f15_local1 = f15_local0 and f15_local0.offerAssetName --[[ @ 0]]
	local f15_local2 = f15_local1 and f15_local1:get() --[[ @ 0]]
	if not f15_local2 or f15_local2 == "" then
		return true
	else
		return not CoD.ZMLaboratoryUtility.IsOfferAvailable( f15_local2 )
	end
end
 --[[ @ 0]]
CoD.ZMLaboratoryUtility.ClientScriptNotifyFocusChanged = function ( f16_arg0, f16_arg1, f16_arg2, f16_arg3 )
	if f16_arg1.focusChangedNotifyParams then
		Engine[@"SendClientScriptNotify"]( f16_arg2, "np_item_focus_changed", f16_arg1.focusChangedNotifyParams ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
CoD.ZMLaboratoryUtility.AttemptLootQuery = function ( f17_arg0, f17_arg1, f17_arg2, f17_arg3, f17_arg4 )
	local f17_local0 = CoD.ZMLaboratoryUtility.GetLabModel( f17_arg2 ) --[[ @ 0]]
	f17_local0.disableInput:set( 1 ) --[[ @ 0]]
	if f17_arg1:getModel() then
		f17_local0 = f17_arg1:getModel() --[[ @ 0]]
		if f17_local0.dropType ~= nil then
			f17_local0 = f17_arg1:getModel() --[[ @ 0]]
			if f17_local0.dropType:get() == 0 then
				return 
			elseif f17_arg4._animStateDisableInputSubscription then
				f17_arg4:removeSubscription( f17_arg4._animStateDisableInputSubscription ) --[[ @ 0]]
				f17_arg4._animStateDisableInputSubscription = nil --[[ @ 0]]
			end
			if not f17_arg4._animStateDisableInputSubscription then
				local f17_local1 = f17_arg4 --[[ @ 0]]
				f17_local0 = f17_arg4.subscribeToModel --[[ @ 0]]
				local f17_local2 = CoD.ZMLaboratoryUtility.GetLabModel( f17_arg2 ) --[[ @ 0]]
				f17_arg4._animStateDisableInputSubscription = f17_local0( f17_local1, f17_local2.animState, function ( f18_arg0 )
					if f18_arg0:get() == CoD.ZMLaboratoryUtility.LabAnimState.PLAYING then
						CoD.ZMLaboratoryUtility.DoLootQuery( f17_arg0, f17_arg1, f17_arg2, f17_arg3, f17_arg4 ) --[[ @ 0]]
						if f17_arg4._animStateDisableInputSubscription then
							f17_arg4:removeSubscription( f17_arg4._animStateDisableInputSubscription ) --[[ @ 0]]
							f17_arg4._animStateDisableInputSubscription = nil --[[ @ 0]]
						end
					end
				end, false ) --[[ @ 0]]
			end
			if CoD.isPC then
				CoD.PCUtility.LockUIShortcutInput( f17_arg4, f17_arg2 ) --[[ @ 0]]
			end
			f17_arg4:addElement( LUI.UITimer.newElementTimer( 100, true, function ( f19_arg0 )
				local f19_local0 = CoD.ZMLaboratoryUtility.GetLabModel( f19_arg0 ) --[[ @ 0]]
				f19_local0.disableInput:set( 0 ) --[[ @ 0]]
			end, f17_arg2 ) ) --[[ @ 0]]
		end
	end
	return 
end
 --[[ @ 0]]
CoD.ZMLaboratoryUtility.DoLootQuery = function ( f20_arg0, f20_arg1, f20_arg2, f20_arg3, f20_arg4 )
	local f20_local0 = CoD.ZMLaboratoryUtility.GetLabModel( f20_arg2 ) --[[ @ 0]]
	f20_local0 = f20_local0.results --[[ @ 0]]
	local f20_local1 = Dvar[@"hash_3659A867DE4952AA"]:exists() --[[ @ 0]]
	if f20_local1 then
		f20_local1 = tonumber( Dvar[@"hash_3659A867DE4952AA"]:get() ) > 0 --[[ @ 0]]
	end
	CoD.ZMLaboratoryUtility.ResetResults( f20_local0 ) --[[ @ 0]]
	local f20_local2 = f20_arg1:getModel() --[[ @ 0]]
	f20_local2 = f20_local2.dropType:get() --[[ @ 0]]
	if (not f20_local1 or f20_local1 == false) and Engine[@"hash_622EAAB59AA27E9B"]( "ui_zm_laboratory_simulate_timeout" ) ~= 1 then
		local f20_local3 = Dvar[@"hash_4A8CF37DD4FD801B"]:get() --[[ @ 0]]
		local f20_local4 = "{}" --[[ @ 0]]
		if f20_local3 and f20_local3 ~= nil then
			f20_local4 = string.format( "{\"zm_drop_versions\":[%s] }", f20_local3 ) --[[ @ 0]]
		end
		local f20_local5 = {
			controller = f20_arg2,
			dropType = f20_local2,
			payload = f20_local4
		} --[[ @ 0]]
		Engine[@"hash_787AE7E64BA5AD61"]( "OpenZombieLootDrop", f20_local5 ) --[[ @ 0]]
	end
	local f20_local3 = 30 --[[ @ 0]]
	local f20_local4 = 0 --[[ @ 0]]
	local f20_local6 = function ()
		local f21_local0 = CoD.ZMLaboratoryUtility.GetLabModel( f20_arg2 ) --[[ @ 0]]
		if f21_local0.animState:get() == CoD.ZMLaboratoryUtility.LabAnimState.PLAYING and (f20_local0.ready:get() == true or f20_local1 == true) then
			f20_arg4.LaboratoryBottleLabelList.BottleLabels.showResults = true --[[ @ 0]]
			f20_arg4.LaboratoryBottleLabelList.BottleLabels:updateDataSource() --[[ @ 0]]
			Engine[@"SendClientScriptNotify"]( f20_arg2, "lab_set_rewards" ) --[[ @ 0]]
		elseif f20_local4 < f20_local3 then
			f20_arg4:addElement( LUI.UITimer.newElementTimer( 250, true, f20_local5 ) ) --[[ @ 0]]
			f20_local4 = f20_local4 + 1 --[[ @ 0]]
		else
			
		end
	end
	 --[[ @ 0]]
	f20_local6() --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ZMLaboratoryUtility.AddExperimentalConcoctions = function ( f22_arg0 )
	if not IsBooleanDvarSet( "laboratory_exp_enabled" ) then
		return nil
	end
	local f22_local0 = {} --[[ @ 0]]
	local f22_local1 = {
		"conc1",
		"conc2",
		"conc3"
	} --[[ @ 0]]
	local f22_local2 = {
		[@"hash_779BC77A16DA8FC1"] = true,
		[@"hash_72EDCDA659369510"] = true,
		[@"hash_72014B7851942E17"] = true,
		[@"hash_2FE8FB3F9FAECDCB"] = true,
		[@"hash_243897ED56A7FA90"] = true,
		[@"hash_1C397582F494CF23"] = true,
		[@"hash_2BAD77EDD75C1AB5"] = true,
		[@"hash_4C13641FD37219DC"] = true
	} --[[ @ 0]]
	for f22_local7, f22_local8 in ipairs( f22_local1 ) --[[ @ 0]] do
		local f22_local6 = CoD.StoreUtility.GetExperimentModifier( f22_arg0, f22_local8 ) --[[ @ 0]]
		if f22_local6 == nil or f22_local6 == "" or f22_local6 == 0 then
			return nil
		end
		f22_local6 = Engine[@"hash_1C53F8D38DF9042B"]( f22_local6 ) --[[ @ 0]]
		if not f22_local2[f22_local6] then
			return nil
		end
		table.insert( f22_local0, {
			assetName = f22_local6
		} ) --[[ @ 0]]
	end
	return f22_local0
end
 --[[ @ 0]]
CoD.ZMLaboratoryUtility.SetupLaboratoryMenu = function ( f23_arg0, f23_arg1 )
	local f23_local0 = CoD.ZMLaboratoryUtility.GetLabModel( f23_arg0 ) --[[ @ 0]]
	local f23_local1 = f23_local0:create( "animState" ) --[[ @ 0]]
	f23_local1:set( 0 ) --[[ @ 0]]
	f23_local1 = f23_local0:create( "firstBottleFilled" ) --[[ @ 0]]
	f23_local1:set( 0 ) --[[ @ 0]]
	f23_local1 = f23_local0:create( "shrinkLabelList" ) --[[ @ 0]]
	f23_local1:set( 0 ) --[[ @ 0]]
	f23_local1 = f23_local0:create( "disableInput" ) --[[ @ 0]]
	f23_local1:set( 0 ) --[[ @ 0]]
	f23_local1 = f23_local0:create( "skipReady" ) --[[ @ 0]]
	f23_local1:set( false ) --[[ @ 0]]
	f23_local0:create( "unhideFreeCursor" ) --[[ @ 0]]
	f23_local0:create( "timedOut" ) --[[ @ 0]]
	CoD.ZMLaboratoryUtility.ResetResults( f23_local0:create( "results" ) ) --[[ @ 0]]
	f23_arg1:appendEventHandler( "clip_over", function ()
		if not (f23_arg1.currentState ~= "DefaultState" or (f23_arg1.__lastClipPlayedState ~= "AnimStateMixAgainToNotPlaying" or f23_arg1.__lastClipPlayedName ~= "DefaultClip") and (f23_arg1.__lastClipPlayedState ~= "AnimStatePlaying" or f23_arg1.__lastClipPlayedName ~= "DefaultClip")) or f23_arg1.currentState == "AnimStateMixAgain" and f23_arg1.__lastClipPlayedState == "AnimStateMixAgain" and f23_arg1.__lastClipPlayedName == "DefaultClip" then
			Engine[@"ForceNotifyModelSubscriptions"]( f23_local0.unhideFreeCursor ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	Engine[@"SendClientScriptNotify"]( f23_arg0, "init_controller_model", {
		controller = f23_arg0
	} ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ZMLaboratoryUtility.CleanUpLaboratoryMenu = function ( f25_arg0 )
	local f25_local0 = CoD.ZMLaboratoryUtility.GetLabModel( f25_arg0 ) --[[ @ 0]]
	if f25_local0 then
		Engine[@"UnsubscribeAndFreeModel"]( f25_local0 ) --[[ @ 0]]
	end
	local f25_local1 = Engine[@"GetModelForController"]( f25_arg0 ) --[[ @ 0]]
	f25_local1 = f25_local1.ZMLaboratoryPlasmaItemList --[[ @ 0]]
	if f25_local1 then
		Engine[@"UnsubscribeAndFreeModel"]( f25_local1 ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
CoD.ZMLaboratoryUtility.SetListElementModelsWithDelay = function ( f26_arg0, f26_arg1, f26_arg2, f26_arg3, f26_arg4, f26_arg5 )
	local f26_local0 = f26_arg1:getItemAtPosition( 1, 1 ) --[[ @ 0]]
	if f26_local0 then
		local f26_local1 = f26_local0:getModel() --[[ @ 0]]
		f26_local1[f26_arg2]:set( f26_arg3 ) --[[ @ 0]]
	end
	if f26_arg5 then
		local f26_local2 = f26_arg5 --[[ @ 0]]
	end
	local f26_local1 = f26_local2 or f26_arg1:getTotalCount() --[[ @ 0]]
	for f26_local3 = 2 --[[ @ 0]], f26_local1, 1 do
		local f26_local6 = f26_local3 --[[ @ 0]]
		f26_arg1:addElement( LUI.UITimer.newElementTimer( f26_arg4 * (f26_local6 - 1), true, function ()
			local f27_local0 = f26_arg1:getItemAtPosition( 1, f26_local6 ) --[[ @ 0]]
			if f27_local0 then
				local f27_local1 = f27_local0:getModel() --[[ @ 0]]
				f27_local1[f26_arg2]:set( f26_arg3 ) --[[ @ 0]]
			end
		end ) ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
CoD.ZMLaboratoryUtility.MixAgain = function ( f28_arg0, f28_arg1, f28_arg2 )
	local f28_local0 = function ()
		Engine[@"SendClientScriptNotify"]( f28_arg2, "mix_again", {
			controller = f28_arg2,
			param1 = "1"
		} ) --[[ @ 0]]
		CoD.ZMLaboratoryUtility.AttemptLootQuery( f28_arg0, f28_arg0, f28_arg2, "", f28_arg1 ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	if CoD.isPC then
		CoD.PCUtility.DisplayPrePurchasePopup( f28_local0, f28_arg1, f28_arg2, {
			labElement = f28_arg1.lastSelectedOfferButton
		} ) --[[ @ 0]]
	else
		f28_local0() --[[ @ 0]]
	end
end
 --[[ @ 0]]
CoD.ZMLaboratoryUtility.CacheOfferButtonModel = function ( f30_arg0, f30_arg1, f30_arg2 )
	local f30_local0 = CoD.ZMLaboratoryUtility.GetPurchasePlasmaModel( f30_arg0 ) --[[ @ 0]]
	f30_local0.lastSelectedOfferButtonModel:set( f30_arg1:getModel() ) --[[ @ 0]]
	f30_arg2.lastSelectedOfferButton = f30_arg1 --[[ @ 0]]
	SetElementModelToFocusedElementModel( f30_arg0, f30_arg2, f30_arg1, "MixAgain" ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ZMLaboratoryUtility.RestoreFocusToCachedOfferButton = function ( f31_arg0, f31_arg1 )
	if f31_arg1.lastSelectedOfferButton then
		CoD.FreeCursorUtility.GiveFocusToElementsDefaultFocus( f31_arg1, f31_arg1.lastSelectedOfferButton, f31_arg0 ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
CoD.ZMLaboratoryUtility.CloseTimedOutPopup = function ( f32_arg0, f32_arg1, f32_arg2, f32_arg3, f32_arg4 )
	Engine[@"SendClientScriptNotify"]( f32_arg2, "timed_out_popup_closed", {
		controller = f32_arg2
	} ) --[[ @ 0]]
	GoBack( f32_arg4, f32_arg2 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ZMLaboratoryUtility.SetupEventCountdown = function ( f33_arg0, f33_arg1 )
	if f33_arg0:getModel() then
		local f33_local0 = f33_arg0:getModel() --[[ @ 0]]
		if not f33_local0.eventTimerModel then
			return 
		elseif f33_arg1.labTimerSubscription then
			f33_arg1:removeSubscription( f33_arg1.labTimerSubscription ) --[[ @ 0]]
		end
		f33_local0 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
		local f33_local1 = f33_local0 --[[ @ 0]]
		f33_local0 = f33_local0.create --[[ @ 0]]
		local f33_local2 = f33_arg0:getModel() --[[ @ 0]]
		f33_arg1.labTimerSubscription = f33_arg1:subscribeToModel( f33_local0( f33_local1, f33_local2.eventTimerModel:get() ), function ( model )
			if model then
				f33_arg1:setText( LocalizeIntoString( @"hash_67E9AAD95DB4B21E", model:get() ) ) --[[ @ 0]]
			end
		end, true ) --[[ @ 0]]
	end
	return 
end
 --[[ @ 0]]
CoD.ZMLaboratoryUtility.UpdateNPPurchaseDesc = function ( f35_arg0, f35_arg1, f35_arg2 )
	local f35_local0 = CoD.SafeGetModelValue( f35_arg0, "plasmaPrice" ) --[[ @ 0]]
	if f35_local0 then
		return Engine[@"hash_4F9F1239CFD921FE"]( @"hash_19A39FF477A7A0F", f35_local0 - Engine[@"hash_2F40679B550DCCA2"]( f35_arg1, CoD.Currencies.ZM_NEBULIUM_PLASMA ) )
	else
		return Engine[@"hash_4F9F1239CFD921FE"]( f35_arg2 )
	end
end
 --[[ @ 0]]
CoD.ZMLaboratoryUtility.GetColorSetForIndex = function ( f36_arg0 )
	local f36_local0 = CoD.ZMLaboratoryUtility.RarityColorSets[f36_arg0] --[[ @ 0]]
	if not f36_local0 then
		f36_local0 = ColorSet.T8__RED --[[ @ 0]]
	end
	return f36_local0.r, f36_local0.g, f36_local0.b
end
 --[[ @ 0]]
CoD.ZMLaboratoryUtility.GetRarityStringForIndex = function ( f37_arg0 )
	if CoD.ZMLaboratoryUtility.RarityStrings[f37_arg0] then
		return CoD.ZMLaboratoryUtility.RarityStrings[f37_arg0]
	else
		return @"hash_1E73A287484FA8DE"
	end
end
 --[[ @ 0]]
CoD.ZMLaboratoryUtility.GetLaboratoryBannerImage = function ( f38_arg0 )
	local f38_local0 = CoD.ZMLaboratoryUtility.GetLaboratoryBannerOffer() --[[ @ 0]]
	local f38_local1 = f38_local0 and Engine[@"hash_2E00B2F29271C60B"]( f38_local0 ) --[[ @ 0]]
	local f38_local2 --[[ @ 0]]
	if f38_local1 then
		f38_local2 = f38_local1[@"hash_63D716C17FF52F94"] --[[ @ 0]]
		if not f38_local2 then
		
		else
			return f38_local2
		end
	end
	f38_local2 = @"hash_0" --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ZMLaboratoryUtility.GetLaboratoryBannerTitle = function ( f39_arg0 )
	local f39_local0 = CoD.ZMLaboratoryUtility.GetLaboratoryBannerOffer() --[[ @ 0]]
	local f39_local1 = f39_local0 and Engine[@"hash_2E00B2F29271C60B"]( f39_local0 ) --[[ @ 0]]
	local f39_local2 --[[ @ 0]]
	if f39_local1 then
		f39_local2 = f39_local1[@"hash_268AE3DF36B788E7"] --[[ @ 0]]
		if not f39_local2 then
		
		else
			return f39_local2
		end
	end
	f39_local2 = @"hash_0" --[[ @ 0]]
end
 --[[ @ 0]]
DataSources.ZMLaboratoryResultsItemList = ListHelper_SetupDataSource( "Laboratory.bottles", function ( f40_arg0, f40_arg1 )
	local f40_local0 = {} --[[ @ 0]]
	if not f40_arg1.showResults then
		return f40_local0
	end
	local f40_local1 = {} --[[ @ 0]]
	if Dvar[@"hash_3659A867DE4952AA"]:exists() and tonumber( Dvar[@"hash_3659A867DE4952AA"]:get() ) > 0 then
		local f40_local2 = {
			@"zm_bgb_cache_back",
			@"zm_bgb_ctrl_z",
			@"zm_bgb_extra_credit",
			@"zm_bgb_free_fire",
			@"zm_bgb_immolation_liquidation",
			@"zm_bgb_kill_joy",
			@"zm_bgb_licensed_contractor",
			@"zm_bgb_shields_up",
			@"zm_bgb_undead_man_walking",
			@"zm_bgb_wall_power",
			@"zm_bgb_whos_keeping_score"
		} --[[ @ 0]]
		local f40_local3 = {
			@"talisman_box_guarantee_box_only",
			@"talisman_box_guarantee_lmg",
			@"talisman_coagulant",
			@"talisman_extra_claymore",
			@"talisman_extra_frag",
			@"talisman_extra_miniturret",
			@"talisman_extra_molotov",
			@"talisman_extra_semtex",
			@"talisman_impatient",
			@"talisman_perk_mod_single",
			@"talisman_perk_permanent_1",
			@"talisman_perk_permanent_2",
			@"talisman_perk_permanent_3",
			@"talisman_perk_permanent_4",
			@"talisman_perk_reducecost_1",
			@"talisman_perk_reducecost_2",
			@"talisman_perk_reducecost_3",
			@"talisman_perk_reducecost_4",
			@"talisman_perk_start_1",
			@"talisman_perk_start_2",
			@"talisman_perk_start_3",
			@"talisman_perk_start_4",
			@"talisman_shield_durability_legendary",
			@"talisman_shield_durability_rare",
			@"talisman_shield_price",
			@"talisman_special_startlv2",
			@"talisman_special_startlv3",
			@"talisman_special_xp_rate",
			@"talisman_start_weapon_ar",
			@"talisman_start_weapon_lmg",
			@"talisman_start_weapon_smg",
			@"talisman_weapon_reducepapcost"
		} --[[ @ 0]]
		f40_local1 = {
			{
				result = f40_local2[math.floor( math.random( 1, #f40_local2 ) )],
				quantity = math.random( 1, CoD.ZMLaboratoryUtility.MaxResults )
			},
			{
				result = f40_local2[math.floor( math.random( 1, #f40_local2 ) )],
				quantity = math.random( 1, CoD.ZMLaboratoryUtility.MaxResults )
			},
			{
				result = f40_local2[math.floor( math.random( 1, #f40_local2 ) )],
				quantity = math.random( 1, CoD.ZMLaboratoryUtility.MaxResults )
			}
		} --[[ @ 0]]
		if not Dvar[@"hash_749CD374D19822CB"]:exists() or tonumber( Dvar[@"hash_749CD374D19822CB"]:get() ) > math.random() then
			table.insert( f40_local1, {
				result = f40_local3[math.floor( math.random( 1, #f40_local3 ) )],
				quantity = math.random( 1, CoD.ZMLaboratoryUtility.MaxResults )
			} ) --[[ @ 0]]
		end
	else
		local f40_local2 = CoD.ZMLaboratoryUtility.GetLabModel( f40_arg0 ) --[[ @ 0]]
		f40_local1 = CoD.ZMLaboratoryUtility.GetResults( f40_local2.results ) --[[ @ 0]]
	end
	local f40_local2 = function ( f41_arg0 )
		return {
			models = {
				indexModel = 0,
				id = "",
				modelRef = @"hash_0",
				rarity = -1,
				visible = 0,
				quantity = 0
			},
			properties = {}
		}
	end
	 --[[ @ 0]]
	for f40_local3 = 1 --[[ @ 0]], 4, 1 do
		table.insert( f40_local0, f40_local2( f40_local3 ) ) --[[ @ 0]]
	end
	for f40_local3 = 1 --[[ @ 0]], #f40_local1, 1 do
		if f40_local1[f40_local3].result ~= @"hash_0" then
			local f40_local6 = Engine[@"hash_68FF94BB44442412"]( f40_local1[f40_local3].result, Enum[@"eModes"][@"hash_73723205FAE52C4A"] ) --[[ @ 0]]
			if f40_local6 ~= CoD.CACUtility.EmptyItemIndex then
				local f40_local7 = CoD.CACUtility.GetUnlockableItemInfo( f40_local6, Enum[@"eModes"][@"hash_73723205FAE52C4A"] ) --[[ @ 0]]
				local f40_local8 = @"hash_0" --[[ @ 0]]
				if f40_local7.itemGroup == "bubblegum_consumable" or f40_local7.itemGroup == "talisman" then
					f40_local8 = f40_local7[@"hash_B6404450C6BAEEF"] --[[ @ 0]]
				end
				f40_local0[f40_local3].models.indexModel = f40_local6 --[[ @ 0]]
				f40_local0[f40_local3].models.id = f40_local7.name --[[ @ 0]]
				f40_local0[f40_local3].models.modelRef = f40_local8 --[[ @ 0]]
				f40_local0[f40_local3].models.rarity = f40_local7.itemGroup and f40_local7[@"hash_571B3A5F87EA779F"] - Enum[@"hash_571B3A5F87EA779F"][@"hash_DB789CFA0F046FA"] or f40_local7[@"hash_4EAC0467BA97BCA9"] --[[ @ 0]]
				f40_local0[f40_local3].models.quantity = f40_local1[f40_local3].quantity --[[ @ 0]]
			end
		end
	end
	return f40_local0
end, true ) --[[ @ 0]]
DataSources.ZMLaboratoryNPItemList = {
	prepare = function ( f42_arg0, f42_arg1, f42_arg2 )
		local f42_local0 = function ( f43_arg0, f43_arg1, f43_arg2, f43_arg3, f43_arg4, f43_arg5, f43_arg6, f43_arg7, f43_arg8, f43_arg9 )
			local f43_local0 = f43_arg1[@"hash_4E2FEB7B0CEB9D9E"] or @"hash_0" --[[ @ 0]]
			if f43_arg1[@"hash_42E0C54A32852FA5"] and f43_arg1[@"hash_42E0C54A32852FA5"] == 1 and f43_local0 ~= @"hash_0" then
				f43_local0 = Engine[@"hash_4F9F1239CFD921FE"]( f43_local0, f43_arg1[@"hash_24C3F8DE7B651E1E"] or 0 ) --[[ @ 0]]
			end
			local f43_local1 = {} --[[ @ 0]]
			local f43_local2 = {
				skuID = f43_arg1[@"hash_16B65B4278C6C417"] or 0,
				dropType = f43_arg1[@"hash_2EDB75385C6DDD64"] or 0,
				icon = f43_arg1[@"hash_6E4B82BD24F5B464"] or @"blacktransparent",
				name = f43_local0,
				labelName = f43_arg1[@"hash_655AD41F50CB5DE5"] or @"hash_2C79EA24AB1A2BA",
				displayName = f43_arg1[@"hash_1291A06FDF27E479"] or 0,
				description = f43_arg1[@"hash_35B85280BBC19A6A"] or @"hash_2C79EA24AB1A2BA",
				plasmaPrice = f43_arg1[@"hash_2F7B25E757280D58"] or 0,
				price = f43_arg1[@"hash_14A555CF71B7907A"] or 0
			} --[[ @ 0]]
			local f43_local3 --[[ @ 0]]
			if f43_arg3 ~= nil then
				f43_local3 = f43_arg3 --[[ @ 0]]
			else
				f43_local3 = false --[[ @ 0]]
			end
			f43_local2.specialOffer = f43_local3 --[[ @ 0]]
			f43_local2.maxQuantity = f43_arg1[@"maxquantity"] --[[ @ 0]]
			f43_local2.offerAssetName = f43_arg2 --[[ @ 0]]
			f43_local2.eventTimerModel = f43_arg9 --[[ @ 0]]
			f43_local1.models = f43_local2 --[[ @ 0]]
			f43_local2 = {
				action = f43_arg4
			} --[[ @ 0]]
			if f43_arg5 then
				local f43_local4 = f43_arg5 --[[ @ 0]]
			end
			f43_local2.actionParam = f43_local4 or {} --[[ @ 0]]
			if f43_arg6 then
				local f43_local5 = f43_arg6 --[[ @ 0]]
			end
			f43_local2.widgetOverride = f43_local5 or CoD.LaboratoryListItem --[[ @ 0]]
			f43_local2.rowSpan = f43_arg7 --[[ @ 0]]
			f43_local2.columnSpan = f43_arg8 --[[ @ 0]]
			f43_local1.properties = f43_local2 --[[ @ 0]]
			if not f43_local1.properties.actionParam.price then
				f43_local1.properties.actionParam.price = f43_local1.models.price --[[ @ 0]]
			end
			if f43_arg1[@"hash_79D73ABDD04877EA"] and f43_arg1[@"hash_53302081973C2C4"] then
				f43_local1.properties.focusChangedNotifyParams = {
					centrifuge_color = f43_arg1[@"hash_79D73ABDD04877EA"],
					glob_state = f43_arg1[@"hash_53302081973C2C4"]
				} --[[ @ 0]]
			end
			table.insert( f43_arg0, f43_local1 ) --[[ @ 0]]
		end
		 --[[ @ 0]]
		local f42_local1 = function ( f44_arg0, f44_arg1 )
			f42_local0( f44_arg0, Engine[@"hash_2E00B2F29271C60B"]( f44_arg1 ), f44_arg1, false, CoD.ZMLaboratoryUtility.DoLootQueryAndSendClientScriptNotify ) --[[ @ 0]]
		end
		 --[[ @ 0]]
		local f42_local2 = {} --[[ @ 0]]
		local f42_local3 = CoD.ZMLaboratoryUtility.AddExperimentalConcoctions( f42_arg0 ) --[[ @ 0]]
		if not f42_local3 then
			f42_local3 = CoD.ZMLaboratoryUtility.DefaultConcoctions --[[ @ 0]]
		end
		for f42_local4 = 1 --[[ @ 0]], #f42_local3, 1 do
			f42_local1( f42_local2, f42_local3[f42_local4].assetName ) --[[ @ 0]]
		end
		if Dvar[@"hash_77880D40C777EDD4"]:exists() and Dvar[@"hash_77880D40C777EDD4"]:get() == "1" and IsBooleanDvarSet( "laboratory_show_special_offers" ) then
			for f42_local4 = 1 --[[ @ 0]], CoD.ZMLaboratoryUtility.MaxSpecialOffers, 1 do
				local f42_local7 = CoD.ZMLaboratoryUtility.GetLaboratorySpecialOffer( f42_local4 ) --[[ @ 0]]
				local f42_local8 = f42_local7 and Engine[@"hash_2E00B2F29271C60B"]( f42_local7 ) --[[ @ 0]]
				if f42_local8 then
					if f42_local8[@"hash_6221E7D2CD7EF58C"] and f42_local8[@"hash_6221E7D2CD7EF58C"] ~= 0 then
						f42_local0( f42_local2, f42_local8, f42_local7, true, CoD.ZMLaboratoryUtility.DoLootQueryAndSendClientScriptNotify ) --[[ @ 0]]
					else
						f42_local0( f42_local2, f42_local8, f42_local7, true, CoD.ZMLaboratoryUtility.PurchasePlasmaOrCoDPoints, {
							openedDirectly = true,
							amount = f42_local8[@"hash_1291A06FDF27E479"] or 0,
							image = f42_local8[@"hash_6E4B82BD24F5B464"] or @"blacktransparent"
						}, CoD.LaboratoryListItemNebuliumPlasmaDiscount, 1, 3, "AutoEvents.autoevent_laboratory_special_offer_" .. f42_local4 .. "_timer" ) --[[ @ 0]]
					end
				end
			end
		end
		f42_arg1.buttons = {} --[[ @ 0]]
		local f42_local4 = CoD.ZMLaboratoryUtility.GetLabModel( f42_arg0 ) --[[ @ 0]]
		f42_local4 = f42_local4:create( "ZMLaboratoryNPItemList" ) --[[ @ 0]]
		for f42_local7, f42_local8 in ipairs( f42_local2 ) --[[ @ 0]] do
			local f42_local11 = Engine[@"CreateModel"]( f42_local4, f42_local7 ) --[[ @ 0]]
			if f42_local8.models then
				LuaUtils.CreateModelsFromTable( f42_local11, f42_local8.models ) --[[ @ 0]]
				if not f42_arg1.eventCycledSubscription then
					local f42_local10 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
					f42_local10 = f42_local10:create( "AutoEvents.cycled" ) --[[ @ 0]]
					if f42_local10 then
						f42_arg1.eventCycledSubscription = f42_arg1:subscribeToModel( f42_local10, function ( model )
							f42_arg1:updateDataSource( false, false ) --[[ @ 0]]
						end, false ) --[[ @ 0]]
					end
				end
			end
			if not f42_arg2 or f42_arg2( f42_local11 ) then
				table.insert( f42_arg1.buttons, {
					model = f42_local11,
					properties = f42_local8.properties
				} ) --[[ @ 0]]
			end
		end
		f42_arg1.model = f42_local4 --[[ @ 0]]
	end,
	getCount = function ( f46_arg0 )
		return f46_arg0.buttons and #f46_arg0.buttons or 0
	end,
	getItem = function ( f47_arg0, f47_arg1, f47_arg2 )
		return f47_arg1.buttons[f47_arg2].model
	end,
	getCustomPropertiesForItem = function ( f48_arg0, f48_arg1 )
		return f48_arg0.buttons[f48_arg1].properties
	end,
	getWidgetTypeForItem = function ( f49_arg0, f49_arg1, f49_arg2 )
		return f49_arg0.buttons[f49_arg2].properties.widgetOverride
	end,
	cleanup = function ( f50_arg0, f50_arg1 )
		Engine[@"UnsubscribeAndFreeModel"]( f50_arg0.model ) --[[ @ 0]]
	end
} --[[ @ 0]]
CoD.ZMLaboratoryUtility.GetPurchasePlasmaModel = function ( f51_arg0 )
	local f51_local0 = CoD.ZMLaboratoryUtility.GetLabModel( f51_arg0 ) --[[ @ 0]]
	if not f51_local0.PurchasePlasmaInfo then
		local f51_local1 = f51_local0:create( "PurchasePlasmaInfo" ) --[[ @ 0]]
		f51_local1:create( "price" ) --[[ @ 0]]
		f51_local1:create( "lastSelectedOfferButtonModel" ) --[[ @ 0]]
	end
	return f51_local0.PurchasePlasmaInfo
end
 --[[ @ 0]]
CoD.ZMLaboratoryUtility.OpenCoDPointsPopoutConfirmation = function ( f52_arg0, f52_arg1, f52_arg2, f52_arg3, f52_arg4 )
	local f52_local0 = f52_arg4:openPopup( "PurchaseCodPoints", f52_arg2, CoD.ZMLaboratoryUtility.GetPurchasePlasmaModel( f52_arg2 ) ) --[[ @ 0]]
	f52_local0.dontCloseOnStoreOpen = true --[[ @ 0]]
	local f52_local1 = nil --[[ @ 0]]
	if CoD.isPC then
		local f52_local2 = Engine[@"GetModelForController"]( f52_arg2 ) --[[ @ 0]]
		f52_local1 = f52_local2:create( "battlenetCheckoutStatus" ) --[[ @ 0]]
	else
		local f52_local2 = Engine[@"GetModelForController"]( f52_arg2 ) --[[ @ 0]]
		f52_local2 = f52_local2:create( "LootStreamProgress" ) --[[ @ 0]]
		f52_local1 = f52_local2:create( "codPoints" ) --[[ @ 0]]
	end
	f52_local0:subscribeToModel( f52_local1, function ( model )
		local f53_local0 = nil --[[ @ 0]]
		if CoD.isPC then
			if model:get() ~= 1 then
				return 
			end
			local f53_local1 = Engine[@"GetModelForController"]( f52_arg2 ) --[[ @ 0]]
			f53_local1 = f53_local1:create( "LootStreamProgress" ) --[[ @ 0]]
			f53_local0 = f53_local1:create( "codPoints" ) --[[ @ 0]]
		else
			f53_local0 = model --[[ @ 0]]
		end
		if f53_local0:get() ~= nil and f52_arg3.model.price and f52_arg3.model.price:get() <= Engine[@"hash_2F40679B550DCCA2"]( f52_arg2, CoD.Currencies.COD_POINTS ) then
			local f53_local1 = CoD.ZMLaboratoryUtility.GetPurchasePlasmaModel( f52_arg2 ) --[[ @ 0]]
			local f53_local2 = f53_local1.lastSelectedOfferButtonModel:get() --[[ @ 0]]
			local f53_local3 = f52_arg3.model.offerAssetName --[[ @ 0]]
			if f53_local3 then
				f53_local3 = f52_arg3.model.offerAssetName:get() --[[ @ 0]]
			end
			if f53_local2 then
				f52_arg4 = GoBack( f52_local0, f52_arg2 ) --[[ @ 0]]
				if not f52_arg3.openedDirectly then
					OpenPopup( f52_arg4, "PurchasePlasma", f52_arg2, f53_local2 ) --[[ @ 0]]
				elseif not f53_local3 or f53_local3 == "" or f53_local3 == @"hash_0" or CoD.ZMLaboratoryUtility.IsOfferAvailable( f53_local3 ) then
					OpenPopup( f52_arg4, "LaboratoryPlasmaConfirmation", f52_arg2, {
						_model = f52_arg3.model,
						_properties = f52_arg3
					} ) --[[ @ 0]]
				end
			end
		end
	end, false ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ZMLaboratoryUtility.PurchasePlasmaOrCoDPoints = function ( f54_arg0, f54_arg1, f54_arg2, f54_arg3, f54_arg4 )
	if CanPurchaseItem( f54_arg2, f54_arg1 ) then
		CoD.ZMLaboratoryUtility.PurchasePlasmaAction( f54_arg0, f54_arg1, f54_arg2, f54_arg3, f54_arg4 ) --[[ @ 0]]
	else
		if not f54_arg3 then
			f54_arg3 = {} --[[ @ 0]]
		end
		if not f54_arg3.model then
			f54_arg3.model = f54_arg1:getModel() --[[ @ 0]]
		end
		local f54_local0 = f54_arg1:getModel() --[[ @ 0]]
		if f54_local0 and f54_local0.price then
			local f54_local1 = CoD.ZMLaboratoryUtility.GetPurchasePlasmaModel( f54_arg2 ) --[[ @ 0]]
			f54_local1.price:set( f54_local0.price:get() ) --[[ @ 0]]
		end
		local f54_local1 = f54_arg4 --[[ @ 0]]
		if not f54_arg3.openedDirectly then
			f54_local1 = GoBack( f54_arg4, f54_arg2 ) --[[ @ 0]]
		end
		CoD.ZMLaboratoryUtility.OpenCoDPointsPopoutConfirmation( f54_arg0, f54_arg1, f54_arg2, f54_arg3, f54_local1 ) --[[ @ 0]]
	end
end
 --[[ @ 0]]
CoD.ZMLaboratoryUtility.PurchasePlasmaAction = function ( f55_arg0, f55_arg1, f55_arg2, f55_arg3, f55_arg4 )
	local f55_local0 = f55_arg4 --[[ @ 0]]
	local f55_local1 = f55_arg1:getModel() --[[ @ 0]]
	if not f55_arg3.openedDirectly then
		f55_local0 = GoBack( f55_arg4, f55_arg2 ) --[[ @ 0]]
	end
	OpenPopup( f55_local0, "LaboratoryPlasmaConfirmation", f55_arg2, {
		_model = f55_local1,
		_properties = f55_arg3
	} ) --[[ @ 0]]
end
 --[[ @ 0]]
DataSources.ZMLaboratoryPlasmaItemList = ListHelper_SetupDataSource( "ZMLaboratoryPlasmaItemList", function ( f56_arg0, f56_arg1 )
	local f56_local0 = function ( f57_arg0, f57_arg1, f57_arg2, f57_arg3, f57_arg4, f57_arg5, f57_arg6, f57_arg7, f57_arg8 )
		table.insert( f57_arg0, {
			models = {
				skuID = f57_arg1,
				name = Engine[@"hash_4F9F1239CFD921FE"]( @"hash_4A7502A86996BD46", f57_arg4 ),
				amount = f57_arg4,
				icon = f57_arg3,
				price = f57_arg5,
				isFeatured = f57_arg6
			},
			properties = {
				action = f57_arg7,
				actionParam = {}
			}
		} ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	local f56_local1 = {} --[[ @ 0]]
	f56_local0( f56_local1, 500052, @"hash_78EB5BCEA98B4CF2", @"ui_icon_laboratory_nebulium_offer_large", 300, 2000, true, CoD.ZMLaboratoryUtility.PurchasePlasmaOrCoDPoints ) --[[ @ 0]]
	f56_local0( f56_local1, 500051, @"hash_1FF5560BC462E0F0", @"ui_icon_laboratory_nebulium_offer_medium", 75, 500, false, CoD.ZMLaboratoryUtility.PurchasePlasmaOrCoDPoints ) --[[ @ 0]]
	f56_local0( f56_local1, 500050, @"hash_78EB5BCEA98B4CF2", @"ui_icon_laboratory_nebulium_offer_small", 30, 200, false, CoD.ZMLaboratoryUtility.PurchasePlasmaOrCoDPoints ) --[[ @ 0]]
	return f56_local1
end ) --[[ @ 0]]
DataSources.PlasmaConfirmationButtonList = ListHelper_SetupDataSource( "PlasmaConfirmationButtonList", function ( f58_arg0, f58_arg1 )
	local f58_local0 = {} --[[ @ 0]]
	table.insert( f58_local0, {
		models = {
			displayText = @"hash_685952ACC6D0C1B0",
			displayImage = @"blacktransparent"
		},
		properties = {
			action = SetWorkingStateAndPurchaseDWSKU,
			actionParam = {
				controller = f58_arg0
			}
		}
	} ) --[[ @ 0]]
	table.insert( f58_local0, {
		models = {
			displayText = @"hash_7C2E92C54C2BE289",
			displayImage = @"blacktransparent"
		},
		properties = {
			action = function ( f59_arg0, f59_arg1, f59_arg2, f59_arg3, f59_arg4 )
				GoBack( f59_arg0, f59_arg2 ) --[[ @ 0]]
			end
		}
	} ) --[[ @ 0]]
	return f58_local0
end, true ) --[[ @ 0]]
local f0_local0 = CoD.OverlayUtility.AddSystemOverlay --[[ @ 0]]
local f0_local1 = "NotEnoughNPPopup" --[[ @ 0]]
local f0_local2 = {
	menuName = "SystemOverlay_Compact",
	title = @"hash_1DFE20BB2A710F9C",
	description = function ( f60_arg0, f60_arg1 )
		return Engine[@"hash_4F9F1239CFD921FE"]( @"hash_19A39FF477A7A0F", f60_arg1.npRequired - Engine[@"hash_2F40679B550DCCA2"]( f60_arg0, CoD.Currencies.ZM_NEBULIUM_PLASMA ) )
	end,
	categoryType = CoD.OverlayUtility.OverlayTypes.Error,
	[CoD.OverlayUtility.GoBackPropertyName] = CoD.OverlayUtility.DefaultGoBack,
	listDatasource = function ()
		DataSources.NotEnoughNPPopupButtonList = DataSourceHelpers.ListSetup( "NotEnoughNPPopupButtonList", function ( f62_arg0 )
			local f62_local0 = {} --[[ @ 0]]
			local f62_local1 = {} --[[ @ 0]]
			local f62_local2 = {} --[[ @ 0]]
			local f62_local3 = Engine[@"hash_4F9F1239CFD921FE"] --[[ @ 0]]
			local f62_local4 --[[ @ 0]]
			if not CoD.isPC then
				f62_local4 = @"hash_7C2E92C54C2BE289" --[[ @ 0]]
				if not f62_local4 then
				
				else
					f62_local2.displayText = f62_local3( f62_local4 ) --[[ @ 0]]
					f62_local1.models = f62_local2 --[[ @ 0]]
					f62_local1.properties = {
						action = function ( f63_arg0, f63_arg1, f63_arg2, f63_arg3, f63_arg4 )
							GoBack( f63_arg4, f63_arg2 ) --[[ @ 0]]
						end
					} --[[ @ 0]]
					f62_local0[1] = f62_local1 --[[ @ 0]]
					return f62_local0
				end
			end
			f62_local4 = @"hash_66C253CF816B40B5" --[[ @ 0]]
		end, true, nil ) --[[ @ 0]]
		return "NotEnoughNPPopupButtonList"
	end
} --[[ @ 0]]
local f0_local3 = CoD.OverlayUtility.aCrossPromptFn --[[ @ 0]]
if not CoD.isPC then
	
else
	
end
f0_local2[f0_local3] = function ( f64_arg0 )
	return function ( f65_arg0, f65_arg1 )
		GoBack( f65_arg0, f65_arg1 ) --[[ @ 0]]
	end
	
end
 --[[ @ 0]]
f0_local3 = CoD.OverlayUtility.aCrossPromptText --[[ @ 0]]
if not CoD.isPC then
	
else
	
end
f0_local2[f0_local3] = @"hash_66C253CF816B40B5" --[[ @ 0]]
f0_local0( f0_local1, f0_local2 ) --[[ @ 0]]
CoD.OverlayUtility.AddSystemOverlay( "LaboratoryTimedOutPopup", {
	menuName = "SystemOverlay_Compact",
	title = @"hash_1F541582676977C",
	description = @"hash_1DAB84E40ACA5331",
	categoryType = CoD.OverlayUtility.OverlayTypes.Error,
	[CoD.OverlayUtility.GoBackPropertyName] = function ()
		return function ( f67_arg0, f67_arg1 )
			CoD.ZMLaboratoryUtility.CloseTimedOutPopup( nil, nil, f67_arg1, nil, f67_arg0 ) --[[ @ 0]]
			GoBack( f67_arg0, f67_arg1 ) --[[ @ 0]]
		end
		
	end,
	listDatasource = function ()
		DataSources.LaboratoryTimedOutPopupList = DataSourceHelpers.ListSetup( "LaboratoryTimedOutPopupList", function ( f69_arg0 )
			return {
				{
					models = {
						displayText = Engine[@"hash_4F9F1239CFD921FE"]( @"hash_7C2E92C54C2BE289" )
					},
					properties = {
						action = function ( f70_arg0, f70_arg1, f70_arg2, f70_arg3, f70_arg4 )
							CoD.ZMLaboratoryUtility.CloseTimedOutPopup( f70_arg0, f70_arg1, f70_arg2, f70_arg3, f70_arg4 ) --[[ @ 0]]
							GoBack( f70_arg4, f70_arg2 ) --[[ @ 0]]
						end
						
					}
				}
			}
		end, true, nil ) --[[ @ 0]]
		return "LaboratoryTimedOutPopupList"
	end
} ) --[[ @ 0]]
