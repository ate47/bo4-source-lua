-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:33
require( "x64:32ba7e67fe4fa792" ) --[[ @ 0]]

CoD.NineBangReticle_Internal = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.NineBangReticle_Internal.__defaultWidth = 150 --[[ @ 0]]
CoD.NineBangReticle_Internal.__defaultHeight = 150 --[[ @ 0]]
CoD.NineBangReticle_Internal.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.NineBangReticle_Internal ) --[[ @ 0]]
	self.id = "NineBangReticle_Internal" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	
	local Backer = LUI.UIImage.new( 0, 0, 26.5, 126.5, 0, 0, 113, 143 ) --[[ @ 0]]
	Backer:setImage( RegisterImage( @"uie_ui_hud_flashbang_counter_backer" ) ) --[[ @ 0]]
	self:addElement( Backer ) --[[ @ 0]]
	self.Backer = Backer --[[ @ 0]]
	
	local Pip9 = CoD.NineBangReticle_Pip.new( f1_arg0, f1_arg1, 0, 0, 91, 121, 0, 0, 122, 133 ) --[[ @ 0]]
	Pip9:mergeStateConditions( {
		{
			stateName = "Active",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalDataSourceModelValueEqualTo( f1_arg1, "CurrentWeapon", "cookOffProgress", 1 )
			end
		}
	} ) --[[ @ 0]]
	local Pip3 = Pip9 --[[ @ 0]]
	local Pip6 = Pip9.subscribeToModel --[[ @ 0]]
	local Reticle = DataSources.CurrentWeapon.getModel( f1_arg1 ) --[[ @ 0]]
	Pip6( Pip3, Reticle.cookOffProgress, function ( f3_arg0 )
		f1_arg0:updateElementState( Pip9, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f3_arg0:get(),
			modelName = "cookOffProgress"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	Pip9:setZRot( 30 ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( Pip9, "setState", function ( element, controller, f4_arg2, f4_arg3, f4_arg4 )
		if IsElementInState( element, "Active" ) and IsElementPropertyValue( element, "_alreadyPlayedSound", false ) then
			PlaySoundAlias( "wpn_flashbang_button_3" ) --[[ @ 0]]
			SetElementProperty( element, "_alreadyPlayedSound", true ) --[[ @ 0]]
		elseif not IsElementInState( element, "Active" ) then
			SetElementProperty( element, "_alreadyPlayedSound", false ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Pip9 ) --[[ @ 0]]
	self.Pip9 = Pip9 --[[ @ 0]]
	
	Pip6 = CoD.NineBangReticle_Pip.new( f1_arg0, f1_arg1, 0, 0, 61.5, 92.5, 0, 0, 130, 141 ) --[[ @ 0]]
	Pip6:mergeStateConditions( {
		{
			stateName = "Active",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalDataSourceModelValueGreaterThan( f1_arg1, "CurrentWeapon", "cookOffProgress", 0.5 )
			end
		}
	} ) --[[ @ 0]]
	Reticle = Pip6 --[[ @ 0]]
	Pip3 = Pip6.subscribeToModel --[[ @ 0]]
	local f1_local6 = DataSources.CurrentWeapon.getModel( f1_arg1 ) --[[ @ 0]]
	Pip3( Reticle, f1_local6.cookOffProgress, function ( f6_arg0 )
		f1_arg0:updateElementState( Pip6, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f6_arg0:get(),
			modelName = "cookOffProgress"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( Pip6, "setState", function ( element, controller, f7_arg2, f7_arg3, f7_arg4 )
		if IsElementInState( element, "Active" ) and IsElementPropertyValue( element, "_alreadyPlayedSound", false ) then
			PlaySoundAlias( "wpn_flashbang_button_2" ) --[[ @ 0]]
			SetElementProperty( element, "_alreadyPlayedSound", true ) --[[ @ 0]]
		elseif not IsElementInState( element, "Active" ) then
			SetElementProperty( element, "_alreadyPlayedSound", false ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( Pip6 ) --[[ @ 0]]
	self.Pip6 = Pip6 --[[ @ 0]]
	
	Pip3 = CoD.NineBangReticle_Pip.new( f1_arg0, f1_arg1, 0, 0, 31.5, 62.5, 0, 0, 122, 133 ) --[[ @ 0]]
	Pip3:mergeStateConditions( {
		{
			stateName = "Active",
			condition = function ( menu, element, event )
				return AlwaysTrue()
			end
		}
	} ) --[[ @ 0]]
	Pip3:setZRot( -30 ) --[[ @ 0]]
	self:addElement( Pip3 ) --[[ @ 0]]
	self.Pip3 = Pip3 --[[ @ 0]]
	
	Reticle = LUI.UIImage.new( 0, 0, 60.5, 92.5, 0, 0, 59, 91 ) --[[ @ 0]]
	Reticle:setImage( RegisterImage( @"uie_ui_hud_reticle_flashbang" ) ) --[[ @ 0]]
	self:addElement( Reticle ) --[[ @ 0]]
	self.Reticle = Reticle --[[ @ 0]]
	
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.NineBangReticle_Internal.__onClose = function ( f9_arg0 )
	f9_arg0.Pip9:close() --[[ @ 0]]
	f9_arg0.Pip6:close() --[[ @ 0]]
	f9_arg0.Pip3:close() --[[ @ 0]]
end
 --[[ @ 0]]
