-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
CoD.ContractProgressBar = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.ContractProgressBar.__defaultWidth = 344 --[[ @ 0]]
CoD.ContractProgressBar.__defaultHeight = 18 --[[ @ 0]]
CoD.ContractProgressBar.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.ContractProgressBar ) --[[ @ 0]]
	self.id = "ContractProgressBar" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local Box = LUI.UIImage.new( 0, 0.79, 60, 60, 0, 0.5, 3.5, 3.5 ) --[[ @ 0]]
	Box:setRGB( 0.07, 0.07, 0.07 ) --[[ @ 0]]
	self:addElement( Box ) --[[ @ 0]]
	self.Box = Box --[[ @ 0]]
	
	local ProgressBarBacking = LUI.UIImage.new( 0, 0.78, 61, 61, 0, 0.33, 5, 5 ) --[[ @ 0]]
	ProgressBarBacking:setRGB( 0.28, 0.28, 0.28 ) --[[ @ 0]]
	ProgressBarBacking:setImage( RegisterImage( @"uie_hud_core_loadout_panel1" ) ) --[[ @ 0]]
	ProgressBarBacking:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_631E7B3C72564429" ) ) --[[ @ 0]]
	ProgressBarBacking:setShaderVector( 0, 0, 0, 0.55, 0.13 ) --[[ @ 0]]
	ProgressBarBacking:setShaderVector( 2, 0, 1, 0, 1 ) --[[ @ 0]]
	ProgressBarBacking:setupNineSliceShader( 25, 4 ) --[[ @ 0]]
	ProgressBarBacking:linkToElementModel( self, "totalRewardCount", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			ProgressBarBacking:setShaderVector( 1, SetVectorComponent( 2, 1, CoD.GetVectorComponentFromString( f2_local0, 1 ), CoD.GetVectorComponentFromString( f2_local0, 2 ), CoD.GetVectorComponentFromString( f2_local0, 3 ), CoD.GetVectorComponentFromString( f2_local0, 4 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( ProgressBarBacking ) --[[ @ 0]]
	self.ProgressBarBacking = ProgressBarBacking --[[ @ 0]]
	
	local ProgressBar = LUI.UIImage.new( 0, 0.78, 61, 61, 0, 0.33, 5, 5 ) --[[ @ 0]]
	ProgressBar:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	ProgressBar:setImage( RegisterImage( @"uie_hud_core_loadout_panel1" ) ) --[[ @ 0]]
	ProgressBar:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_631E7B3C72564429" ) ) --[[ @ 0]]
	ProgressBar:setShaderVector( 0, 0, 0, 0.55, 0.13 ) --[[ @ 0]]
	ProgressBar:setupNineSliceShader( 25, 4 ) --[[ @ 0]]
	ProgressBar:linkToElementModel( self, "totalRewardCount", true, function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			ProgressBar:setShaderVector( 1, SetVectorComponent( 2, 1, CoD.GetVectorComponentFromString( f3_local0, 1 ), CoD.GetVectorComponentFromString( f3_local0, 2 ), CoD.GetVectorComponentFromString( f3_local0, 3 ), CoD.GetVectorComponentFromString( f3_local0, 4 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	ProgressBar.__Wipe_X_Start_X_End_Y_Start_Y_End = function ( f4_arg0 )
		local f4_local0 = f4_arg0:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			ProgressBar:setShaderVector( 2, CoD.ContractUtility.GetContractProgessBarWipe( self:getModel(), f1_arg1, CoD.GetVectorComponentFromString( f4_local0, 1 ), CoD.GetVectorComponentFromString( f4_local0, 2 ), CoD.GetVectorComponentFromString( f4_local0, 3 ), CoD.GetVectorComponentFromString( f4_local0, 4 ) ) ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	ProgressBar:linkToElementModel( self, "earnedRewardCount", true, ProgressBar.__Wipe_X_Start_X_End_Y_Start_Y_End ) --[[ @ 0]]
	ProgressBar.__Wipe_X_Start_X_End_Y_Start_Y_End_FullPath = function ()
		local f5_local0 = self:getModel() --[[ @ 0]]
		if f5_local0 then
			f5_local0 = self:getModel() --[[ @ 0]]
			f5_local0 = f5_local0.earnedRewardCount --[[ @ 0]]
		end
		if f5_local0 then
			ProgressBar.__Wipe_X_Start_X_End_Y_Start_Y_End( f5_local0 ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	self:addElement( ProgressBar ) --[[ @ 0]]
	self.ProgressBar = ProgressBar --[[ @ 0]]
	
	local TiledShaderImage = LUI.UIImage.new( 0.18, 0.97, -3, -3, 0.28, 0.61, 1, 1 ) --[[ @ 0]]
	TiledShaderImage:setRGB( 0, 0, 0 ) --[[ @ 0]]
	TiledShaderImage:setImage( RegisterImage( @"uie_ui_menu_store_repeat_dot_pattern" ) ) --[[ @ 0]]
	TiledShaderImage:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_16CBE95C250C6D15" ) ) --[[ @ 0]]
	TiledShaderImage:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	TiledShaderImage:setupNineSliceShader( 24, 24 ) --[[ @ 0]]
	self:addElement( TiledShaderImage ) --[[ @ 0]]
	self.TiledShaderImage = TiledShaderImage --[[ @ 0]]
	
	local ProgressFraction = LUI.UIText.new( 0, 0, 0, 58, 0, 0, 0, 18 ) --[[ @ 0]]
	ProgressFraction:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	ProgressFraction:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	ProgressFraction:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	ProgressFraction:setAlignment( Enum[@"LUIAlignment"][@"hash_E821F0ECFF8D1C7"] ) --[[ @ 0]]
	ProgressFraction:linkToElementModel( self, "rewardFractionString", true, function ( model )
		local f6_local0 = model:get() --[[ @ 0]]
		if f6_local0 ~= nil then
			ProgressFraction:setText( f6_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( ProgressFraction ) --[[ @ 0]]
	self.ProgressFraction = ProgressFraction --[[ @ 0]]
	
	ProgressBar:linkToElementModel( self, "totalRewardCount", true, ProgressBar.__Wipe_X_Start_X_End_Y_Start_Y_End_FullPath ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.ContractProgressBar.__resetProperties = function ( f7_arg0 )
	f7_arg0.ProgressFraction:completeAnimation() --[[ @ 0]]
	f7_arg0.TiledShaderImage:completeAnimation() --[[ @ 0]]
	f7_arg0.ProgressBar:completeAnimation() --[[ @ 0]]
	f7_arg0.ProgressBarBacking:completeAnimation() --[[ @ 0]]
	f7_arg0.Box:completeAnimation() --[[ @ 0]]
	f7_arg0.ProgressFraction:setAlpha( 1 ) --[[ @ 0]]
	f7_arg0.TiledShaderImage:setAlpha( 1 ) --[[ @ 0]]
	f7_arg0.ProgressBar:setAlpha( 1 ) --[[ @ 0]]
	f7_arg0.ProgressBarBacking:setAlpha( 1 ) --[[ @ 0]]
	f7_arg0.Box:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ContractProgressBar.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f8_arg0, f8_arg1 )
			f8_arg0:__resetProperties() --[[ @ 0]]
			f8_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	Hidden = {
		DefaultClip = function ( f9_arg0, f9_arg1 )
			f9_arg0:__resetProperties() --[[ @ 0]]
			f9_arg0:setupElementClipCounter( 5 ) --[[ @ 0]]
			f9_arg0.Box:completeAnimation() --[[ @ 0]]
			f9_arg0.Box:setAlpha( 0 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.Box ) --[[ @ 0]]
			f9_arg0.ProgressBarBacking:completeAnimation() --[[ @ 0]]
			f9_arg0.ProgressBarBacking:setAlpha( 0 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.ProgressBarBacking ) --[[ @ 0]]
			f9_arg0.ProgressBar:completeAnimation() --[[ @ 0]]
			f9_arg0.ProgressBar:setAlpha( 0 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.ProgressBar ) --[[ @ 0]]
			f9_arg0.TiledShaderImage:completeAnimation() --[[ @ 0]]
			f9_arg0.TiledShaderImage:setAlpha( 0 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.TiledShaderImage ) --[[ @ 0]]
			f9_arg0.ProgressFraction:completeAnimation() --[[ @ 0]]
			f9_arg0.ProgressFraction:setAlpha( 0 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.ProgressFraction ) --[[ @ 0]]
		end
	},
	HideProgress = {
		DefaultClip = function ( f10_arg0, f10_arg1 )
			f10_arg0:__resetProperties() --[[ @ 0]]
			f10_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f10_arg0.ProgressFraction:completeAnimation() --[[ @ 0]]
			f10_arg0.ProgressFraction:setAlpha( 0 ) --[[ @ 0]]
			f10_arg0.clipFinished( f10_arg0.ProgressFraction ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.ContractProgressBar.__onClose = function ( f11_arg0 )
	f11_arg0.ProgressBarBacking:close() --[[ @ 0]]
	f11_arg0.ProgressBar:close() --[[ @ 0]]
	f11_arg0.ProgressFraction:close() --[[ @ 0]]
end
 --[[ @ 0]]
