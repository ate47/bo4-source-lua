-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:33
require( "ui/uieditor/widgets/bumperbuttonwithkeymousetext" ) --[[ @ 0]]
require( "x64:4ffc2c7e4adad795" ) --[[ @ 0]]
require( "x64:12d64ca9d3c705ce" ) --[[ @ 0]]
require( "x64:7877a413a004c441" ) --[[ @ 0]]
require( "x64:209e155239e6593c" ) --[[ @ 0]]
require( "x64:5330e1ef77701a18" ) --[[ @ 0]]
require( "x64:9d187b5785a45d7" ) --[[ @ 0]]
require( "x64:20a0021e04d224d" ) --[[ @ 0]]
require( "x64:74f8e5c53ea98803" ) --[[ @ 0]]
require( "x64:13e4f33ba044e8d1" ) --[[ @ 0]]

CoD.BountyHunterPackageSelect = InheritFrom( CoD.Menu ) --[[ @ 0]]
LUI.createMenu.BountyHunterPackageSelect = function ( f1_arg0, f1_arg1 )
	local self = CoD.Menu.NewForUIEditor( "BountyHunterPackageSelect", f1_arg0 ) --[[ @ 0]]
	local f1_local1 = self --[[ @ 0]]
	CoD.BaseUtility.SetAsPriority( f1_local1, f1_arg0 ) --[[ @ 0]]
	CoD.BaseUtility.SetPropertiesFromUserData( self, f1_arg1 ) --[[ @ 0]]
	self:setClass( CoD.BountyHunterPackageSelect ) --[[ @ 0]]
	self.soundSet = "CAC_PrimaryWeapon" --[[ @ 0]]
	self:setOwner( f1_arg0 ) --[[ @ 0]]
	self:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	self:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	self:playSound( "menu_open", f1_arg0 ) --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_local1:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local SceneBlur = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	SceneBlur:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_E2354BE557C4C7A" ) ) --[[ @ 0]]
	SceneBlur:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( SceneBlur ) --[[ @ 0]]
	self.SceneBlur = SceneBlur --[[ @ 0]]
	
	local DarkBG = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	DarkBG:setRGB( 0, 0, 0 ) --[[ @ 0]]
	DarkBG:setAlpha( 0.95 ) --[[ @ 0]]
	self:addElement( DarkBG ) --[[ @ 0]]
	self.DarkBG = DarkBG --[[ @ 0]]
	
	local CommonCornerBrackets = CoD.CommonCornerBrackets01.new( f1_local1, f1_arg0, 0.5, 0.5, -925, 925, 0, 0, 138, 1008 ) --[[ @ 0]]
	CommonCornerBrackets:setAlpha( 0.3 ) --[[ @ 0]]
	self:addElement( CommonCornerBrackets ) --[[ @ 0]]
	self.CommonCornerBrackets = CommonCornerBrackets --[[ @ 0]]
	
	local LinePattern01 = LUI.UIImage.new( 0.5, 0.5, -868.5, 868.5, 1, 1, -82, -70 ) --[[ @ 0]]
	LinePattern01:setAlpha( 0.02 ) --[[ @ 0]]
	LinePattern01:setImage( RegisterImage( @"uie_hud_common_stripe_pattern01" ) ) --[[ @ 0]]
	LinePattern01:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_16CBE95C250C6D15" ) ) --[[ @ 0]]
	LinePattern01:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	LinePattern01:setupNineSliceShader( 24, 12 ) --[[ @ 0]]
	self:addElement( LinePattern01 ) --[[ @ 0]]
	self.LinePattern01 = LinePattern01 --[[ @ 0]]
	
	local HorizAccentBR = LUI.UIImage.new( 0.5, 0.5, 874.5, 894.5, 1, 1, -93, -85 ) --[[ @ 0]]
	HorizAccentBR:setAlpha( 0.07 ) --[[ @ 0]]
	HorizAccentBR:setImage( RegisterImage( @"hash_2FE30A9AF719A400" ) ) --[[ @ 0]]
	HorizAccentBR:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_normal" ) ) --[[ @ 0]]
	HorizAccentBR:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	HorizAccentBR:setupNineSliceShader( 8, 4 ) --[[ @ 0]]
	self:addElement( HorizAccentBR ) --[[ @ 0]]
	self.HorizAccentBR = HorizAccentBR --[[ @ 0]]
	
	local HorizAccentBL = LUI.UIImage.new( 0.5, 0.5, -896, -876, 1, 1, -93, -85 ) --[[ @ 0]]
	HorizAccentBL:setAlpha( 0.07 ) --[[ @ 0]]
	HorizAccentBL:setImage( RegisterImage( @"hash_2FE30A9AF719A400" ) ) --[[ @ 0]]
	HorizAccentBL:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_normal" ) ) --[[ @ 0]]
	HorizAccentBL:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	HorizAccentBL:setupNineSliceShader( 8, 4 ) --[[ @ 0]]
	self:addElement( HorizAccentBL ) --[[ @ 0]]
	self.HorizAccentBL = HorizAccentBL --[[ @ 0]]
	
	local HorizAccentBtm = LUI.UIImage.new( 0.5, 0.5, -870, 870, 1, 1, -93, -85 ) --[[ @ 0]]
	HorizAccentBtm:setAlpha( 0.15 ) --[[ @ 0]]
	HorizAccentBtm:setImage( RegisterImage( @"hash_2FE30A9AF719A400" ) ) --[[ @ 0]]
	HorizAccentBtm:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_normal" ) ) --[[ @ 0]]
	HorizAccentBtm:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	HorizAccentBtm:setupNineSliceShader( 8, 4 ) --[[ @ 0]]
	self:addElement( HorizAccentBtm ) --[[ @ 0]]
	self.HorizAccentBtm = HorizAccentBtm --[[ @ 0]]
	
	local HorizAccentTR = LUI.UIImage.new( 0.5, 0.5, 874.5, 894.5, 0, 0, 152, 160 ) --[[ @ 0]]
	HorizAccentTR:setAlpha( 0.07 ) --[[ @ 0]]
	HorizAccentTR:setImage( RegisterImage( @"hash_2FE30A9AF719A400" ) ) --[[ @ 0]]
	HorizAccentTR:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_normal" ) ) --[[ @ 0]]
	HorizAccentTR:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	HorizAccentTR:setupNineSliceShader( 8, 4 ) --[[ @ 0]]
	self:addElement( HorizAccentTR ) --[[ @ 0]]
	self.HorizAccentTR = HorizAccentTR --[[ @ 0]]
	
	local HorizAccentTL = LUI.UIImage.new( 0.5, 0.5, -896, -876, 0, 0, 152, 160 ) --[[ @ 0]]
	HorizAccentTL:setAlpha( 0.07 ) --[[ @ 0]]
	HorizAccentTL:setImage( RegisterImage( @"hash_2FE30A9AF719A400" ) ) --[[ @ 0]]
	HorizAccentTL:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_normal" ) ) --[[ @ 0]]
	HorizAccentTL:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	HorizAccentTL:setupNineSliceShader( 8, 4 ) --[[ @ 0]]
	self:addElement( HorizAccentTL ) --[[ @ 0]]
	self.HorizAccentTL = HorizAccentTL --[[ @ 0]]
	
	local HorizAccentTop = LUI.UIImage.new( 0.5, 0.5, -870, 870, 0, 0, 152, 160 ) --[[ @ 0]]
	HorizAccentTop:setAlpha( 0.15 ) --[[ @ 0]]
	HorizAccentTop:setImage( RegisterImage( @"hash_2FE30A9AF719A400" ) ) --[[ @ 0]]
	HorizAccentTop:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_normal" ) ) --[[ @ 0]]
	HorizAccentTop:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	HorizAccentTop:setupNineSliceShader( 8, 4 ) --[[ @ 0]]
	self:addElement( HorizAccentTop ) --[[ @ 0]]
	self.HorizAccentTop = HorizAccentTop --[[ @ 0]]
	
	local NoiseTiledBacking = LUI.UIImage.new( 0.5, 0.5, -893.5, 893.5, 0, 0, 165.5, 980.5 ) --[[ @ 0]]
	NoiseTiledBacking:setRGB( 0.52, 0.52, 0.52 ) --[[ @ 0]]
	NoiseTiledBacking:setAlpha( 0.65 ) --[[ @ 0]]
	NoiseTiledBacking:setImage( RegisterImage( @"uie_ui_menu_specialist_hub_repeat_bg" ) ) --[[ @ 0]]
	NoiseTiledBacking:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_16CBE95C250C6D15" ) ) --[[ @ 0]]
	NoiseTiledBacking:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	NoiseTiledBacking:setupNineSliceShader( 196, 88 ) --[[ @ 0]]
	self:addElement( NoiseTiledBacking ) --[[ @ 0]]
	self.NoiseTiledBacking = NoiseTiledBacking --[[ @ 0]]
	
	local BarAccentRight = LUI.UIImage.new( 0.5, 0.5, 901, 945, 0.5, 0.5, 27.5, 40.5 ) --[[ @ 0]]
	BarAccentRight:setAlpha( 0.07 ) --[[ @ 0]]
	BarAccentRight:setImage( RegisterImage( @"hash_2FE30A9AF719A400" ) ) --[[ @ 0]]
	BarAccentRight:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_normal" ) ) --[[ @ 0]]
	BarAccentRight:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	BarAccentRight:setupNineSliceShader( 8, 2 ) --[[ @ 0]]
	self:addElement( BarAccentRight ) --[[ @ 0]]
	self.BarAccentRight = BarAccentRight --[[ @ 0]]
	
	local BarAccentLeft = LUI.UIImage.new( 0.5, 0.5, -949, -905, 0.5, 0.5, 27.5, 40.5 ) --[[ @ 0]]
	BarAccentLeft:setAlpha( 0.07 ) --[[ @ 0]]
	BarAccentLeft:setImage( RegisterImage( @"hash_2FE30A9AF719A400" ) ) --[[ @ 0]]
	BarAccentLeft:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_normal" ) ) --[[ @ 0]]
	BarAccentLeft:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	BarAccentLeft:setupNineSliceShader( 8, 2 ) --[[ @ 0]]
	self:addElement( BarAccentLeft ) --[[ @ 0]]
	self.BarAccentLeft = BarAccentLeft --[[ @ 0]]
	
	local weaponList = LUI.UIList.new( f1_local1, f1_arg0, 10, 0, nil, false, false, false, false ) --[[ @ 0]]
	weaponList:setLeftRight( 0.5, 0.5, -784, 382 ) --[[ @ 0]]
	weaponList:setTopBottom( 0, 0, 243, 973 ) --[[ @ 0]]
	weaponList:setWidgetType( CoD.BountyHunterPackageSingleTier ) --[[ @ 0]]
	weaponList:setHorizontalCount( 4 ) --[[ @ 0]]
	weaponList:setVerticalCount( 5 ) --[[ @ 0]]
	weaponList:setSpacing( 10 ) --[[ @ 0]]
	weaponList:setAlignment( Enum[@"LUIAlignment"][@"hash_1FEEB12BCB0D7041"] ) --[[ @ 0]]
	weaponList:setDataSource( "BountyHunterPackages" ) --[[ @ 0]]
	weaponList:registerEventHandler( "gain_focus", function ( element, event )
		local f2_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f2_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f2_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f2_local0
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( weaponList, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		CoD.BountyHunterUtility.BuyBountyHunterItem( self, controller, menu, element ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, "ui_confirm" ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	self:addElement( weaponList ) --[[ @ 0]]
	self.weaponList = weaponList --[[ @ 0]]
	
	local LB = CoD.BumperButtonWithKeyMouseText.new( f1_local1, f1_arg0, 0.5, 0.5, -1005, -805, 0, 0, 180, 214 ) --[[ @ 0]]
	LB.GamepadPrompt:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_5BDCD5292604F434" ) ) --[[ @ 0]]
	LB.GamepadPrompt:setAlignment( Enum[@"LUIAlignment"][@"hash_3830CFD395E6AA0A"] ) --[[ @ 0]]
	self:addElement( LB ) --[[ @ 0]]
	self.LB = LB --[[ @ 0]]
	
	local RB = CoD.BumperButtonWithKeyMouseText.new( f1_local1, f1_arg0, 0.5, 0.5, 405, 576, 0, 0, 180, 214 ) --[[ @ 0]]
	RB.GamepadPrompt:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_5BFED5292621DA9A" ) ) --[[ @ 0]]
	self:addElement( RB ) --[[ @ 0]]
	self.RB = RB --[[ @ 0]]
	
	local f1_local18 = nil --[[ @ 0]]
	f1_local18 = LUI.UIElement.createFake() --[[ @ 0]]
	self.FooterContainerFrontendRight = f1_local18 --[[ @ 0]]
	
	local CommonHeaderBG01 = CoD.CommonHeaderHUDBG01.new( f1_local1, f1_arg0, 0.5, 0.5, -337.5, 337.5, 0, 0, 29, 81 ) --[[ @ 0]]
	self:addElement( CommonHeaderBG01 ) --[[ @ 0]]
	self.CommonHeaderBG01 = CommonHeaderBG01 --[[ @ 0]]
	
	local CommonSubheaderBG = CoD.CommonSubHeaderBG01.new( f1_local1, f1_arg0, 0.5, 0.5, -337.5, 337.5, 0, 0, 86, 120 ) --[[ @ 0]]
	self:addElement( CommonSubheaderBG ) --[[ @ 0]]
	self.CommonSubheaderBG = CommonSubheaderBG --[[ @ 0]]
	
	local StageTitle = LUI.UIText.new( 0.5, 0.5, -335, 335, 0, 0, 34, 78 ) --[[ @ 0]]
	StageTitle:setRGB( 0, 0, 0 ) --[[ @ 0]]
	StageTitle:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_10E8E14CAAF997B8" ) ) --[[ @ 0]]
	StageTitle:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	StageTitle:setLetterSpacing( 8 ) --[[ @ 0]]
	StageTitle:setAlignment( Enum[@"LUIAlignment"][@"hash_1FEEB12BCB0D7041"] ) --[[ @ 0]]
	StageTitle:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	self:addElement( StageTitle ) --[[ @ 0]]
	self.StageTitle = StageTitle --[[ @ 0]]
	
	local RadialTimer = CoD.RadialTimer.new( f1_local1, f1_arg0, 0.5, 0.5, 828, 978, 0, 0, -21, 129 ) --[[ @ 0]]
	RadialTimer:mergeStateConditions( {
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return not CoD.ModelUtility.IsGlobalModelValueGreaterThan( "BountyHunterLoadout.timeRemaining", 0 )
			end
		}
	} ) --[[ @ 0]]
	local HorizAccentTop2 = RadialTimer --[[ @ 0]]
	local Bank = RadialTimer.subscribeToModel --[[ @ 0]]
	local weaponCategoryList = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	Bank( HorizAccentTop2, weaponCategoryList["BountyHunterLoadout.timeRemaining"], function ( f6_arg0 )
		f1_local1:updateElementState( RadialTimer, {
			name = "model_validation",
			menu = f1_local1,
			controller = f1_arg0,
			modelValue = f6_arg0:get(),
			modelName = "BountyHunterLoadout.timeRemaining"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	RadialTimer:subscribeToGlobalModel( f1_arg0, "BountyHunterLoadout", "timeRemaining", function ( model )
		local f7_local0 = model:get() --[[ @ 0]]
		if f7_local0 ~= nil then
			RadialTimer.Clock:setShaderVector( 0, CoD.BountyHunterUtility.TimeRemainingClockFraction( 0, 0, SetVectorComponent( 0, 0, CoD.GetVectorComponentFromString( f7_local0, 1 ), CoD.GetVectorComponentFromString( f7_local0, 2 ), CoD.GetVectorComponentFromString( f7_local0, 3 ), CoD.GetVectorComponentFromString( f7_local0, 4 ) ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	RadialTimer:subscribeToGlobalModel( f1_arg0, "BountyHunterLoadout", "timeRemaining", function ( model )
		local f8_local0 = model:get() --[[ @ 0]]
		if f8_local0 ~= nil then
			RadialTimer.TimeText:setText( CoD.BaseUtility.AlreadyLocalized( f8_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( RadialTimer ) --[[ @ 0]]
	self.RadialTimer = RadialTimer --[[ @ 0]]
	
	Bank = CoD.BountyHunterBank.new( f1_local1, f1_arg0, 0.5, 0.5, -138.5, 138.5, 0, 0, 86, 119 ) --[[ @ 0]]
	Bank:linkToElementModel( self, nil, false, function ( model )
		Bank:setModel( model, f1_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( Bank ) --[[ @ 0]]
	self.Bank = Bank --[[ @ 0]]
	
	HorizAccentTop2 = LUI.UIImage.new( 0.5, 0.5, -803, 401, 0, 0, 210, 218 ) --[[ @ 0]]
	HorizAccentTop2:setAlpha( 0.15 ) --[[ @ 0]]
	HorizAccentTop2:setImage( RegisterImage( @"hash_2FE30A9AF719A400" ) ) --[[ @ 0]]
	HorizAccentTop2:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_normal" ) ) --[[ @ 0]]
	HorizAccentTop2:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	HorizAccentTop2:setupNineSliceShader( 8, 4 ) --[[ @ 0]]
	self:addElement( HorizAccentTop2 ) --[[ @ 0]]
	self.HorizAccentTop2 = HorizAccentTop2 --[[ @ 0]]
	
	weaponCategoryList = LUI.GridLayout.new( f1_local1, f1_arg0, false, 0, 0, 0, 0, nil, nil, false, false, false, false ) --[[ @ 0]]
	weaponCategoryList:setLeftRight( 0.5, 0.5, -800, 400 ) --[[ @ 0]]
	weaponCategoryList:setTopBottom( 0, 0, 180, 215 ) --[[ @ 0]]
	weaponCategoryList:setWidgetType( CoD.CACTextTab ) --[[ @ 0]]
	weaponCategoryList:setHorizontalCount( 5 ) --[[ @ 0]]
	weaponCategoryList:setSpacing( 0 ) --[[ @ 0]]
	weaponCategoryList:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	weaponCategoryList:setDataSource( "BountyHunterWeaponGroups" ) --[[ @ 0]]
	weaponCategoryList:registerEventHandler( "list_active_changed", function ( element, event )
		local f10_local0 = nil --[[ @ 0]]
		if CoD.BaseUtility.IsWidgetVisible( element ) then
			SetStateByElementModel( self, element, f1_arg0, "state" ) --[[ @ 0]]
			SetProperty( self, "_itemGroup", element.category ) --[[ @ 0]]
			UpdateDataSource( self, self.weaponList, f1_arg0 ) --[[ @ 0]]
		end
		return f10_local0
	end ) --[[ @ 0]]
	self.__on_menuOpened_weaponCategoryList = function ( f11_arg0, f11_arg1, f11_arg2, f11_arg3 )
		local f11_local0 = weaponCategoryList --[[ @ 0]]
		if not IsElementPropertyValue( f11_local0, "_receivedMenuOpen", true ) then
			SetElementProperty( f11_local0, "_receivedMenuOpen", true ) --[[ @ 0]]
			CoD.BountyHunterUtility.SetActiveListItemForWeaponGroup( f11_arg2, f11_arg1, self.weaponCategoryList ) --[[ @ 0]]
			UpdateDataSource( self, self.weaponList, f11_arg1 ) --[[ @ 0]]
		end
	end
	 --[[ @ 0]]
	f1_local1:addMenuOpenedCallback( self.__on_menuOpened_weaponCategoryList ) --[[ @ 0]]
	self:addElement( weaponCategoryList ) --[[ @ 0]]
	self.weaponCategoryList = weaponCategoryList --[[ @ 0]]
	
	local PackagePreview = CoD.BountyHunterPackagePreview.new( f1_local1, f1_arg0, 0.5, 0.5, 488, 868, 0, 0, 191, 956 ) --[[ @ 0]]
	self:addElement( PackagePreview ) --[[ @ 0]]
	self.PackagePreview = PackagePreview --[[ @ 0]]
	
	local PCBackButton = nil --[[ @ 0]]
	
	PCBackButton = CoD.PC_BountyHunterBuy_BackButton.new( f1_local1, f1_arg0, 0.5, 0.5, -920, -720, 1, 1, -70, -10 ) --[[ @ 0]]
	PCBackButton.Button.ButtonContainer.Title:setText( LocalizeToUpperString( @"hash_370A9FDC87CD3D48" ) ) --[[ @ 0]]
	PCBackButton.GamepadTitle:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_370A9FDC87CD3D48" ) ) --[[ @ 0]]
	PCBackButton:registerEventHandler( "gain_focus", function ( element, event )
		local f12_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f12_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f12_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f12_local0
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( PCBackButton, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		GoBack( self, controller ) --[[ @ 0]]
		LockInput( self, controller, true ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_0", nil, "ui_confirm" ) --[[ @ 0]]
		return false
	end, false ) --[[ @ 0]]
	self:addElement( PCBackButton ) --[[ @ 0]]
	self.PCBackButton = PCBackButton --[[ @ 0]]
	
	PackagePreview:linkToElementModel( weaponList, nil, false, function ( model )
		PackagePreview:setModel( model, f1_arg0 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:mergeStateConditions( {
		{
			stateName = "NoCategories",
			condition = function ( menu, element, event )
				return not ListElementHasElements( self.weaponCategoryList )
			end
		}
	} ) --[[ @ 0]]
	self:appendEventHandler( "grid_updated", function ( f17_arg0, f17_arg1 )
		f17_arg1.menu = f17_arg1.menu or f1_local1 --[[ @ 0]]
		f1_local1:updateElementState( self, f17_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( self, f1_arg0, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"], nil, function ( element, menu, controller, model )
		GoBack( self, controller ) --[[ @ 0]]
		LockInput( self, controller, true ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"], @"hash_370A9FDC87CD3D48", nil, nil ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	weaponList.id = "weaponList" --[[ @ 0]]
	f1_local18:setModel( self.buttonModel, f1_arg0 ) --[[ @ 0]]
	weaponCategoryList.id = "weaponCategoryList" --[[ @ 0]]
	if CoD.isPC then
		PCBackButton.id = "PCBackButton" --[[ @ 0]]
	end
	self:processEvent( {
		name = "menu_loaded",
		controller = f1_arg0
	} ) --[[ @ 0]]
	self.__defaultFocus = weaponList --[[ @ 0]]
	if CoD.isPC and (IsKeyboard( f1_arg0 ) or self.ignoreCursor) then
		self:restoreState( f1_arg0 ) --[[ @ 0]]
	end
	self.__on_close_removeOverrides = function ()
		f1_local1:removeMenuOpenedCallback( self.__on_menuOpened_weaponCategoryList ) --[[ @ 0]]
	end
	 --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg0 ) --[[ @ 0]]
	end
	
	local f1_local28 = self --[[ @ 0]]
	CoD.BaseUtility.SetModelFromPropertyModel( f1_arg0, self, self ) --[[ @ 0]]
	CoD.GridAndListUtility.AddBumperNavigation( f1_local1, weaponCategoryList, f1_arg0 ) --[[ @ 0]]
	return self
end
 --[[ @ 0]]
CoD.BountyHunterPackageSelect.__resetProperties = function ( f21_arg0 )
	f21_arg0.weaponCategoryList:completeAnimation() --[[ @ 0]]
	f21_arg0.RB:completeAnimation() --[[ @ 0]]
	f21_arg0.LB:completeAnimation() --[[ @ 0]]
	f21_arg0.weaponCategoryList:setAlpha( 1 ) --[[ @ 0]]
	f21_arg0.RB:setAlpha( 1 ) --[[ @ 0]]
	f21_arg0.LB:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.BountyHunterPackageSelect.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f22_arg0, f22_arg1 )
			f22_arg0:__resetProperties() --[[ @ 0]]
			f22_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	NoCategories = {
		DefaultClip = function ( f23_arg0, f23_arg1 )
			f23_arg0:__resetProperties() --[[ @ 0]]
			f23_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f23_arg0.LB:completeAnimation() --[[ @ 0]]
			f23_arg0.LB:setAlpha( 0 ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.LB ) --[[ @ 0]]
			f23_arg0.RB:completeAnimation() --[[ @ 0]]
			f23_arg0.RB:setAlpha( 0 ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.RB ) --[[ @ 0]]
			f23_arg0.weaponCategoryList:completeAnimation() --[[ @ 0]]
			f23_arg0.weaponCategoryList:setAlpha( 0 ) --[[ @ 0]]
			f23_arg0.clipFinished( f23_arg0.weaponCategoryList ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.BountyHunterPackageSelect.__onClose = function ( f24_arg0 )
	f24_arg0.__on_close_removeOverrides() --[[ @ 0]]
	f24_arg0.PackagePreview:close() --[[ @ 0]]
	f24_arg0.CommonCornerBrackets:close() --[[ @ 0]]
	f24_arg0.weaponList:close() --[[ @ 0]]
	f24_arg0.LB:close() --[[ @ 0]]
	f24_arg0.RB:close() --[[ @ 0]]
	f24_arg0.FooterContainerFrontendRight:close() --[[ @ 0]]
	f24_arg0.CommonHeaderBG01:close() --[[ @ 0]]
	f24_arg0.CommonSubheaderBG:close() --[[ @ 0]]
	f24_arg0.RadialTimer:close() --[[ @ 0]]
	f24_arg0.Bank:close() --[[ @ 0]]
	f24_arg0.weaponCategoryList:close() --[[ @ 0]]
	f24_arg0.PCBackButton:close() --[[ @ 0]]
end
 --[[ @ 0]]
