-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:33
require( "ui/uieditor/widgets/footer/fe_footercontainer_notlobby" ) --[[ @ 0]]
require( "x64:2efb4937f8502f72" ) --[[ @ 0]]

CoD.LiveEventViewerQualities = InheritFrom( CoD.Menu ) --[[ @ 0]]
LUI.createMenu.LiveEventViewerQualities = function ( f1_arg0, f1_arg1 )
	local self = CoD.Menu.NewForUIEditor( "LiveEventViewerQualities", f1_arg0 ) --[[ @ 0]]
	local f1_local1 = self --[[ @ 0]]
	self:setClass( CoD.LiveEventViewerQualities ) --[[ @ 0]]
	self.soundSet = "Special_widgets" --[[ @ 0]]
	self:setOwner( f1_arg0 ) --[[ @ 0]]
	self:setLeftRight( 0, 1, 0, 0 ) --[[ @ 0]]
	self:setTopBottom( 0, 1, 0, 0 ) --[[ @ 0]]
	self:playSound( "menu_open", f1_arg0 ) --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	
	local backing = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	backing:setRGB( 0, 0, 0 ) --[[ @ 0]]
	backing:setAlpha( 0.5 ) --[[ @ 0]]
	self:addElement( backing ) --[[ @ 0]]
	self.backing = backing --[[ @ 0]]
	
	local qualityList = LUI.UIList.new( f1_local1, f1_arg0, 2, 0, nil, false, false, false, false ) --[[ @ 0]]
	qualityList:setLeftRight( 0, 0, 96, 636 ) --[[ @ 0]]
	qualityList:setTopBottom( 0, 0, 59, 597 ) --[[ @ 0]]
	qualityList:setWidgetType( CoD.ListButton ) --[[ @ 0]]
	qualityList:setVerticalCount( 10 ) --[[ @ 0]]
	qualityList:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	qualityList:setDataSource( "LiveEventViewerQualities" ) --[[ @ 0]]
	qualityList:registerEventHandler( "gain_focus", function ( element, event )
		local f2_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f2_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f2_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( element, f1_local1, f1_arg0, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"] ) --[[ @ 0]]
		return f2_local0
	end ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( qualityList, f1_arg0, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], nil, function ( element, menu, controller, model )
		GoBack( self, controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, nil ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	f1_local1:AddButtonCallbackFunction( qualityList, f1_arg0, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"], nil, function ( element, menu, controller, model )
		GoBack( self, controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_1805EFA15E9E7E5A"], @"hash_7C2E92C54C2BE289", nil, nil ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	self:addElement( qualityList ) --[[ @ 0]]
	self.qualityList = qualityList --[[ @ 0]]
	
	local footer = CoD.fe_FooterContainer_NOTLobby.new( f1_local1, f1_arg0, 0, 1, 2, -2, 1, 1, -100, 0 ) --[[ @ 0]]
	footer:registerEventHandler( "menu_loaded", function ( element, event )
		local f7_local0 = nil --[[ @ 0]]
		if element.menuLoaded then
			f7_local0 = element:menuLoaded( event ) --[[ @ 0]]
		elseif element.super.menuLoaded then
			f7_local0 = element.super:menuLoaded( event ) --[[ @ 0]]
		end
		SizeToSafeArea( element, f1_arg0 ) --[[ @ 0]]
		if not f7_local0 then
			f7_local0 = element:dispatchEventToChildren( event ) --[[ @ 0]]
		end
		return f7_local0
	end ) --[[ @ 0]]
	self:addElement( footer ) --[[ @ 0]]
	self.footer = footer --[[ @ 0]]
	
	qualityList.id = "qualityList" --[[ @ 0]]
	footer:setModel( self.buttonModel, f1_arg0 ) --[[ @ 0]]
	if CoD.isPC then
		footer.id = "footer" --[[ @ 0]]
	end
	self:processEvent( {
		name = "menu_loaded",
		controller = f1_arg0
	} ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.LiveEventViewerQualities.__onClose = function ( f8_arg0 )
	f8_arg0.qualityList:close() --[[ @ 0]]
	f8_arg0.footer:close() --[[ @ 0]]
end
 --[[ @ 0]]
