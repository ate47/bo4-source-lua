-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:35
require( "ui/uieditor/widgets/customgames/customgames_optioncategorybutton" ) --[[ @ 0]]
require( "ui/uieditor/widgets/customgames/customgames_settingslider" ) --[[ @ 0]]
require( "ui/uieditor/widgets/gamesettings/gamesettings_selectediteminfo" ) --[[ @ 0]]
require( "ui/uieditor/widgets/scrollbars/verticalcounter" ) --[[ @ 0]]

CoD.GameSettings_GearRestriction = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.GameSettings_GearRestriction.__defaultWidth = 1920 --[[ @ 0]]
CoD.GameSettings_GearRestriction.__defaultHeight = 877 --[[ @ 0]]
CoD.GameSettings_GearRestriction.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.GameSettings_GearRestriction ) --[[ @ 0]]
	self.id = "GameSettings_GearRestriction" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	local f1_local1 = nil --[[ @ 0]]
	
	local OptionCategoryGrid = LUI.GridLayout.new( f1_arg0, f1_arg1, false, 0, 0, 8, 0, nil, nil, false, false, false, false ) --[[ @ 0]]
	OptionCategoryGrid:setLeftRight( 0, 0, 100, 350 ) --[[ @ 0]]
	OptionCategoryGrid:setTopBottom( 0, 0, 10, 710 ) --[[ @ 0]]
	OptionCategoryGrid:setAlpha( 0 ) --[[ @ 0]]
	OptionCategoryGrid:setWidgetType( CoD.CustomGames_OptionCategoryButton ) --[[ @ 0]]
	OptionCategoryGrid:setVerticalCount( 6 ) --[[ @ 0]]
	OptionCategoryGrid:setSpacing( 8 ) --[[ @ 0]]
	OptionCategoryGrid:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	OptionCategoryGrid:setDataSource( "GearRestrictionOptionCategories" ) --[[ @ 0]]
	self:addElement( OptionCategoryGrid ) --[[ @ 0]]
	self.OptionCategoryGrid = OptionCategoryGrid --[[ @ 0]]
	
	local f1_local3 = nil --[[ @ 0]]
	
	local SlidersPC = LUI.UIList.new( f1_arg0, f1_arg1, 8, 0, nil, false, false, false, false ) --[[ @ 0]]
	SlidersPC:setLeftRight( 0, 0, 367, 1067 ) --[[ @ 0]]
	SlidersPC:setTopBottom( 0, 0, 10, 818 ) --[[ @ 0]]
	SlidersPC:setWidgetType( CoD.CustomGames_SettingSlider ) --[[ @ 0]]
	SlidersPC:setVerticalCount( 12 ) --[[ @ 0]]
	SlidersPC:setSpacing( 8 ) --[[ @ 0]]
	SlidersPC:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	SlidersPC:setVerticalCounter( CoD.verticalCounter ) --[[ @ 0]]
	SlidersPC:registerEventHandler( "list_item_gain_focus", function ( element, event )
		local f2_local0 = nil --[[ @ 0]]
		ProcessListAction( self, element, f1_arg1, f1_arg0 ) --[[ @ 0]]
		GameSettingsButtonGainFocus( self, element, f1_arg1 ) --[[ @ 0]]
		SetCurrentElementAsActive( self, element, f1_arg1 ) --[[ @ 0]]
		return f2_local0
	end ) --[[ @ 0]]
	SlidersPC:registerEventHandler( "gain_focus", function ( element, event )
		local f3_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f3_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f3_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		SetElementCanBeNavigatedTo( self.OptionCategoryGrid, false ) --[[ @ 0]]
		return f3_local0
	end ) --[[ @ 0]]
	SlidersPC:registerEventHandler( "lose_focus", function ( element, event )
		local f4_local0 = nil --[[ @ 0]]
		if element.loseFocus then
			f4_local0 = element:loseFocus( event ) --[[ @ 0]]
		elseif element.super.loseFocus then
			f4_local0 = element.super:loseFocus( event ) --[[ @ 0]]
		end
		SetElementCanBeNavigatedTo( self.OptionCategoryGrid, true ) --[[ @ 0]]
		return f4_local0
	end ) --[[ @ 0]]
	self:addElement( SlidersPC ) --[[ @ 0]]
	self.SlidersPC = SlidersPC --[[ @ 0]]
	
	local f1_local5 = nil --[[ @ 0]]
	f1_local5 = LUI.UIElement.createFake() --[[ @ 0]]
	self.OptionCategoryList = f1_local5 --[[ @ 0]]
	local f1_local6 = nil --[[ @ 0]]
	f1_local6 = LUI.UIElement.createFake() --[[ @ 0]]
	self.Sliders = f1_local6 --[[ @ 0]]
	
	local GameSettingsSelectedItemInfo = CoD.GameSettings_SelectedItemInfo.new( f1_arg0, f1_arg1, 0, 1, 0, 0, -0.5, 0.5, 234, 436 ) --[[ @ 0]]
	GameSettingsSelectedItemInfo.GameModeName:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( GameSettingsSelectedItemInfo ) --[[ @ 0]]
	self.GameSettingsSelectedItemInfo = GameSettingsSelectedItemInfo --[[ @ 0]]
	
	SlidersPC:linkToElementModel( OptionCategoryGrid, "optionsListDatasource", true, function ( model )
		local f5_local0 = model:get() --[[ @ 0]]
		if f5_local0 ~= nil then
			SlidersPC:setDataSource( f5_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	f1_local6:linkToElementModel( f1_local5, "optionsListDatasource", true, function ( model )
		local f6_local0 = model:get() --[[ @ 0]]
		if f6_local0 ~= nil then
			f1_local6:setDataSource( f6_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( self, "close", function ( element )
		SetControllerModelValue( f1_arg1, "customGamesEdit", false ) --[[ @ 0]]
	end ) --[[ @ 0]]
	OptionCategoryGrid.id = "OptionCategoryGrid" --[[ @ 0]]
	SlidersPC.id = "SlidersPC" --[[ @ 0]]
	f1_local5.id = "OptionCategoryList" --[[ @ 0]]
	f1_local6.id = "Sliders" --[[ @ 0]]
	self.__defaultFocus = f1_local6 --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PreLoadFunc then
		PreLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	local f1_local8 = self --[[ @ 0]]
	if IsPC() then
		ChangeDefaultFocus( self, self.SlidersPC ) --[[ @ 0]]
		ForceCheckDefaultPCFocus( self.SlidersPC, f1_arg0, f1_arg1 ) --[[ @ 0]]
	end
	f1_local8 = SlidersPC --[[ @ 0]]
	if IsPC() then
		SetElementCanBeNavigatedTo( f1_local8, false ) --[[ @ 0]]
		SetElementProperty( f1_local8, "ignoreSavedActive", true ) --[[ @ 0]]
	end
	SetElementCanBeNavigatedTo( f1_local6, false ) --[[ @ 0]]
	return self
end
 --[[ @ 0]]
CoD.GameSettings_GearRestriction.__onClose = function ( f8_arg0 )
	f8_arg0.SlidersPC:close() --[[ @ 0]]
	f8_arg0.Sliders:close() --[[ @ 0]]
	f8_arg0.OptionCategoryGrid:close() --[[ @ 0]]
	f8_arg0.OptionCategoryList:close() --[[ @ 0]]
	f8_arg0.GameSettingsSelectedItemInfo:close() --[[ @ 0]]
end
 --[[ @ 0]]
