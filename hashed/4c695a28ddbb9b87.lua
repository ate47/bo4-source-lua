-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:34
require( "x64:6bdc4956715f81d7" ) --[[ @ 0]]

CoD.ChangeLayerArrows = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.ChangeLayerArrows.__defaultWidth = 250 --[[ @ 0]]
CoD.ChangeLayerArrows.__defaultHeight = 45 --[[ @ 0]]
CoD.ChangeLayerArrows.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.ChangeLayerArrows ) --[[ @ 0]]
	self.id = "ChangeLayerArrows" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local Backing = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	Backing:setAlpha( 0.5 ) --[[ @ 0]]
	Backing:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_E2354BE557C4C7A" ) ) --[[ @ 0]]
	Backing:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( Backing ) --[[ @ 0]]
	self.Backing = Backing --[[ @ 0]]
	
	local NoiseTiledBacking = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	NoiseTiledBacking:setAlpha( 0.75 ) --[[ @ 0]]
	NoiseTiledBacking:setImage( RegisterImage( @"uie_ui_menu_specialist_hub_repeat_bg" ) ) --[[ @ 0]]
	NoiseTiledBacking:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_16CBE95C250C6D15" ) ) --[[ @ 0]]
	NoiseTiledBacking:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	NoiseTiledBacking:setupNineSliceShader( 196, 88 ) --[[ @ 0]]
	self:addElement( NoiseTiledBacking ) --[[ @ 0]]
	self.NoiseTiledBacking = NoiseTiledBacking --[[ @ 0]]
	
	local ViewName = LUI.UIText.new( 0.5, 0.5, -71, 71, 0.5, 0.5, -7.5, 7.5 ) --[[ @ 0]]
	ViewName:setRGB( ColorSet.T8__BIEGE.r, ColorSet.T8__BIEGE.g, ColorSet.T8__BIEGE.b ) --[[ @ 0]]
	ViewName:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_674E5E31461D378F" ) ) --[[ @ 0]]
	ViewName:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	ViewName:setLetterSpacing( 6 ) --[[ @ 0]]
	ViewName:setAlignment( Enum[@"LUIAlignment"][@"hash_1FEEB12BCB0D7041"] ) --[[ @ 0]]
	ViewName:setAlignment( Enum[@"LUIAlignment"][@"hash_6ED4298C93DC5ED"] ) --[[ @ 0]]
	self:addElement( ViewName ) --[[ @ 0]]
	self.ViewName = ViewName --[[ @ 0]]
	
	local ChangeViewRight = CoD.CyclingList_Arrow.new( f1_arg0, f1_arg1, 1, 1, -45, 0, 0.5, 0.5, -22.5, 22.5 ) --[[ @ 0]]
	ChangeViewRight.Image:setRGB( 1, 1, 1 ) --[[ @ 0]]
	local f1_local5 = ChangeViewRight --[[ @ 0]]
	local ChangeViewLeft = ChangeViewRight.subscribeToModel --[[ @ 0]]
	local f1_local7 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	ChangeViewLeft( f1_local5, f1_local7["Emblem.EmblemProperties.editorMode"], function ( f2_arg0, f2_arg1 )
		CoD.Menu.UpdateButtonShownState( f2_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ChangeViewRight:registerEventHandler( "gain_focus", function ( element, event )
		local f3_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f3_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f3_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f3_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( ChangeViewRight, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		if CoD.CraftUtility.IsEditMode( controller ) then
			CoD.CraftUtility.EmblemEditor_MoveLayer( self, menu, controller, "right" ) --[[ @ 0]]
			PlaySoundSetSound( self, "layer_switch" ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if CoD.CraftUtility.IsEditMode( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_0", nil, "ui_confirm" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( ChangeViewRight ) --[[ @ 0]]
	self.ChangeViewRight = ChangeViewRight --[[ @ 0]]
	
	ChangeViewLeft = CoD.CyclingList_Arrow.new( f1_arg0, f1_arg1, 0, 0, 0, 45, 0.5, 0.5, -22.5, 22.5 ) --[[ @ 0]]
	ChangeViewLeft:setZRot( 180 ) --[[ @ 0]]
	ChangeViewLeft.Image:setRGB( 1, 1, 1 ) --[[ @ 0]]
	f1_local7 = ChangeViewLeft --[[ @ 0]]
	f1_local5 = ChangeViewLeft.subscribeToModel --[[ @ 0]]
	local f1_local8 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local5( f1_local7, f1_local8["Emblem.EmblemProperties.editorMode"], function ( f6_arg0, f6_arg1 )
		CoD.Menu.UpdateButtonShownState( f6_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ChangeViewLeft:registerEventHandler( "gain_focus", function ( element, event )
		local f7_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f7_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f7_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f7_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( ChangeViewLeft, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		if CoD.CraftUtility.IsEditMode( controller ) then
			CoD.CraftUtility.EmblemEditor_MoveLayer( self, menu, controller, "left" ) --[[ @ 0]]
			PlaySoundSetSound( self, "layer_switch" ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if CoD.CraftUtility.IsEditMode( controller ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_0", nil, "ui_confirm" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( ChangeViewLeft ) --[[ @ 0]]
	self.ChangeViewLeft = ChangeViewLeft --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return not CoD.CraftUtility.IsEditMode( f1_arg1 )
			end
		}
	} ) --[[ @ 0]]
	f1_local7 = self --[[ @ 0]]
	f1_local5 = self.subscribeToModel --[[ @ 0]]
	f1_local8 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local5( f1_local7, f1_local8["Emblem.EmblemProperties.editorMode"], function ( f11_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f11_arg0:get(),
			modelName = "Emblem.EmblemProperties.editorMode"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	ChangeViewRight.id = "ChangeViewRight" --[[ @ 0]]
	ChangeViewLeft.id = "ChangeViewLeft" --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.ChangeLayerArrows.__resetProperties = function ( f12_arg0 )
	f12_arg0.ChangeViewLeft:completeAnimation() --[[ @ 0]]
	f12_arg0.ChangeViewRight:completeAnimation() --[[ @ 0]]
	f12_arg0.ViewName:completeAnimation() --[[ @ 0]]
	f12_arg0.NoiseTiledBacking:completeAnimation() --[[ @ 0]]
	f12_arg0.Backing:completeAnimation() --[[ @ 0]]
	f12_arg0.ChangeViewLeft:setAlpha( 1 ) --[[ @ 0]]
	f12_arg0.ChangeViewRight:setAlpha( 1 ) --[[ @ 0]]
	f12_arg0.ViewName:setAlpha( 1 ) --[[ @ 0]]
	f12_arg0.NoiseTiledBacking:setAlpha( 0.75 ) --[[ @ 0]]
	f12_arg0.Backing:setAlpha( 0.5 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ChangeLayerArrows.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f13_arg0, f13_arg1 )
			f13_arg0:__resetProperties() --[[ @ 0]]
			f13_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	Hidden = {
		DefaultClip = function ( f14_arg0, f14_arg1 )
			f14_arg0:__resetProperties() --[[ @ 0]]
			f14_arg0:setupElementClipCounter( 5 ) --[[ @ 0]]
			f14_arg0.Backing:completeAnimation() --[[ @ 0]]
			f14_arg0.Backing:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.Backing ) --[[ @ 0]]
			f14_arg0.NoiseTiledBacking:completeAnimation() --[[ @ 0]]
			f14_arg0.NoiseTiledBacking:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.NoiseTiledBacking ) --[[ @ 0]]
			f14_arg0.ViewName:completeAnimation() --[[ @ 0]]
			f14_arg0.ViewName:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.ViewName ) --[[ @ 0]]
			f14_arg0.ChangeViewRight:completeAnimation() --[[ @ 0]]
			f14_arg0.ChangeViewRight:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.ChangeViewRight ) --[[ @ 0]]
			f14_arg0.ChangeViewLeft:completeAnimation() --[[ @ 0]]
			f14_arg0.ChangeViewLeft:setAlpha( 0 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.ChangeViewLeft ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.ChangeLayerArrows.__onClose = function ( f15_arg0 )
	f15_arg0.ChangeViewRight:close() --[[ @ 0]]
	f15_arg0.ChangeViewLeft:close() --[[ @ 0]]
end
 --[[ @ 0]]
