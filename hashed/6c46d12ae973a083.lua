-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:50
CoD.ScoreInfoEscortBarProgress = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.ScoreInfoEscortBarProgress.__defaultWidth = 164 --[[ @ 0]]
CoD.ScoreInfoEscortBarProgress.__defaultHeight = 6 --[[ @ 0]]
CoD.ScoreInfoEscortBarProgress.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.ScoreInfoEscortBarProgress ) --[[ @ 0]]
	self.id = "ScoreInfoEscortBarProgress" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local meterBacking = LUI.UIImage.new( 0.5, 0.5, -133, 133, 0.5, 0.5, -8, 8 ) --[[ @ 0]]
	meterBacking:setRGB( 0.21, 0.21, 0.21 ) --[[ @ 0]]
	meterBacking:setAlpha( 0.8 ) --[[ @ 0]]
	meterBacking:setScale( 0.63, 0.63 ) --[[ @ 0]]
	meterBacking:setImage( RegisterImage( @"uie_wz_hud_map_danger_bar_empty" ) ) --[[ @ 0]]
	meterBacking:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_feather_edges" ) ) --[[ @ 0]]
	meterBacking:setShaderVector( 0, 0.01, 0.02, 0.01, 0.02 ) --[[ @ 0]]
	self:addElement( meterBacking ) --[[ @ 0]]
	self.meterBacking = meterBacking --[[ @ 0]]
	
	local ProgressBar = LUI.UIImage.new( 0, 1, 0, 0, 0, 0, -1, 7 ) --[[ @ 0]]
	ProgressBar:setImage( RegisterImage( @"uie_wz_hud_map_escort_bar" ) ) --[[ @ 0]]
	ProgressBar:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_wipe_normal" ) ) --[[ @ 0]]
	ProgressBar:setShaderVector( 1, 0, 0, 0, 0 ) --[[ @ 0]]
	ProgressBar:setShaderVector( 2, 1, 0, 0, 0 ) --[[ @ 0]]
	ProgressBar:setShaderVector( 3, 0, 0, 0, 0 ) --[[ @ 0]]
	ProgressBar:setShaderVector( 4, 0, 0, 0, 0 ) --[[ @ 0]]
	ProgressBar:subscribeToGlobalModel( f1_arg1, "Escort", "robotProgress", function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			ProgressBar:setShaderVector( 0, CoD.GetVectorComponentFromString( f2_local0, 1 ), CoD.GetVectorComponentFromString( f2_local0, 2 ), CoD.GetVectorComponentFromString( f2_local0, 3 ), CoD.GetVectorComponentFromString( f2_local0, 4 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	ProgressBar:linkToElementModel( self, "color", true, function ( model )
		local f3_local0 = model:get() --[[ @ 0]]
		if f3_local0 ~= nil then
			ProgressBar:setRGB( CoD.WaypointUtility.ConvertToBaseColor( f3_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( ProgressBar ) --[[ @ 0]]
	self.ProgressBar = ProgressBar --[[ @ 0]]
	
	local ProgressToBeat = LUI.UIImage.new( 0, 0, -5, 5, 0, 0, -2, 8 ) --[[ @ 0]]
	ProgressToBeat:setImage( RegisterImage( @"t7_hud_minimap_diamond" ) ) --[[ @ 0]]
	ProgressToBeat:subscribeToGlobalModel( f1_arg1, "Escort", "robotProgressToBeat", function ( model )
		local f4_local0 = model:get() --[[ @ 0]]
		if f4_local0 ~= nil then
			ProgressToBeat:setLeftPct( f4_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	ProgressToBeat:linkToElementModel( self, "color", true, function ( model )
		local f5_local0 = model:get() --[[ @ 0]]
		if f5_local0 ~= nil then
			ProgressToBeat:setRGB( CoD.WaypointUtility.ConvertToBrightColor( f5_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( ProgressToBeat ) --[[ @ 0]]
	self.ProgressToBeat = ProgressToBeat --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Overtime",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalModelValueGreaterThan( "Escort.robotProgressToBeat", 0 )
			end
		}
	} ) --[[ @ 0]]
	local f1_local4 = self --[[ @ 0]]
	local f1_local5 = self.subscribeToModel --[[ @ 0]]
	local f1_local6 = Engine[@"getglobalmodel"]() --[[ @ 0]]
	f1_local5( f1_local4, f1_local6["Escort.robotProgressToBeat"], function ( f7_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f7_arg0:get(),
			modelName = "Escort.robotProgressToBeat"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.ScoreInfoEscortBarProgress.__resetProperties = function ( f8_arg0 )
	f8_arg0.ProgressToBeat:completeAnimation() --[[ @ 0]]
	f8_arg0.ProgressToBeat:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ScoreInfoEscortBarProgress.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f9_arg0, f9_arg1 )
			f9_arg0:__resetProperties() --[[ @ 0]]
			f9_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f9_arg0.ProgressToBeat:completeAnimation() --[[ @ 0]]
			f9_arg0.ProgressToBeat:setAlpha( 0 ) --[[ @ 0]]
			f9_arg0.clipFinished( f9_arg0.ProgressToBeat ) --[[ @ 0]]
		end
	},
	Overtime = {
		DefaultClip = function ( f10_arg0, f10_arg1 )
			f10_arg0:__resetProperties() --[[ @ 0]]
			f10_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.ScoreInfoEscortBarProgress.__onClose = function ( f11_arg0 )
	f11_arg0.ProgressBar:close() --[[ @ 0]]
	f11_arg0.ProgressToBeat:close() --[[ @ 0]]
end
 --[[ @ 0]]
