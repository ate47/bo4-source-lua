-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:51
require( "ui/uieditor/widgets/cac/cac_labelnew" ) --[[ @ 0]]
require( "x64:55f8cf56752aa71b" ) --[[ @ 0]]

CoD.EmblemGroupNew_Internal = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.EmblemGroupNew_Internal.__defaultWidth = 144 --[[ @ 0]]
CoD.EmblemGroupNew_Internal.__defaultHeight = 144 --[[ @ 0]]
CoD.EmblemGroupNew_Internal.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.EmblemGroupNew_Internal ) --[[ @ 0]]
	self.id = "EmblemGroupNew_Internal" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local NoiseTiledBacking = LUI.UIImage.new( 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	NoiseTiledBacking:setAlpha( 0.8 ) --[[ @ 0]]
	NoiseTiledBacking:setImage( RegisterImage( @"uie_ui_menu_specialist_hub_repeat_bg" ) ) --[[ @ 0]]
	NoiseTiledBacking:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_16CBE95C250C6D15" ) ) --[[ @ 0]]
	NoiseTiledBacking:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	NoiseTiledBacking:setupNineSliceShader( 196, 88 ) --[[ @ 0]]
	self:addElement( NoiseTiledBacking ) --[[ @ 0]]
	self.NoiseTiledBacking = NoiseTiledBacking --[[ @ 0]]
	
	local SelectorOverlay = LUI.UIImage.new( 0.44, 1.44, -64, -64, 0.44, 1.44, -64, -64 ) --[[ @ 0]]
	SelectorOverlay:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	SelectorOverlay:setAlpha( 0.01 ) --[[ @ 0]]
	self:addElement( SelectorOverlay ) --[[ @ 0]]
	self.SelectorOverlay = SelectorOverlay --[[ @ 0]]
	
	local DrawGroupDecalByIndex = LUI.UIElement.new( 0, 0, 6, 138, 0, 0, 6, 138 ) --[[ @ 0]]
	self:addElement( DrawGroupDecalByIndex ) --[[ @ 0]]
	self.DrawGroupDecalByIndex = DrawGroupDecalByIndex --[[ @ 0]]
	
	local IconNew = CoD.cac_LabelNew.new( f1_arg0, f1_arg1, 0.5, 0.5, -81, 81, 0.5, 0.5, -17, 19 ) --[[ @ 0]]
	IconNew:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( IconNew ) --[[ @ 0]]
	self.IconNew = IconNew --[[ @ 0]]
	
	local FrontendFrame = LUI.UIImage.new( 0, 1, -1, 1, 0, 1, -1, 1 ) --[[ @ 0]]
	FrontendFrame:setAlpha( 0.2 ) --[[ @ 0]]
	FrontendFrame:setImage( RegisterImage( @"uie_ui_menu_store_common_frame" ) ) --[[ @ 0]]
	FrontendFrame:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_add" ) ) --[[ @ 0]]
	FrontendFrame:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	FrontendFrame:setupNineSliceShader( 12, 12 ) --[[ @ 0]]
	self:addElement( FrontendFrame ) --[[ @ 0]]
	self.FrontendFrame = FrontendFrame --[[ @ 0]]
	
	local groupIcon = LUI.UIImage.new( 0, 0, 6, 36, 0.5, 0.5, -66, -36 ) --[[ @ 0]]
	groupIcon:setImage( RegisterImage( @"uie_t7_menu_emblem_group" ) ) --[[ @ 0]]
	self:addElement( groupIcon ) --[[ @ 0]]
	self.groupIcon = groupIcon --[[ @ 0]]
	
	local layerNumber = LUI.UIText.new( 0, 0, 36, 57, 0.04, 0.24, 0, 0 ) --[[ @ 0]]
	layerNumber:setText( Engine[@"hash_4F9F1239CFD921FE"]( @"hash_76D1701FCBBE8ED8" ) ) --[[ @ 0]]
	layerNumber:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	layerNumber:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	self:addElement( layerNumber ) --[[ @ 0]]
	self.layerNumber = layerNumber --[[ @ 0]]
	
	local CommonButtonOutline = CoD.CommonButtonOutline.new( f1_arg0, f1_arg1, 0, 1, 0, 0, 0, 1, 0, 0 ) --[[ @ 0]]
	self:addElement( CommonButtonOutline ) --[[ @ 0]]
	self.CommonButtonOutline = CommonButtonOutline --[[ @ 0]]
	
	self.DrawGroupDecalByIndex:linkToElementModel( self, "emblemIndex", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			DrawGroupDecalByIndex:setupDecalGroupByIndex( GetDecalGroupIndexParams( f1_arg1, f2_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:mergeStateConditions( {
		{
			stateName = "BMClassified",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg1, "isBMClassified" )
			end
		},
		{
			stateName = "CantFit",
			condition = function ( menu, element, event )
				return not CoD.CraftUtility.EmblemChooseIcon_CanFitDecalGroup( self, element, f1_arg1 )
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "isBMClassified", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "isBMClassified"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	CommonButtonOutline.id = "CommonButtonOutline" --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.EmblemGroupNew_Internal.__resetProperties = function ( f6_arg0 )
	f6_arg0.SelectorOverlay:completeAnimation() --[[ @ 0]]
	f6_arg0.layerNumber:completeAnimation() --[[ @ 0]]
	f6_arg0.SelectorOverlay:setAlpha( 0.01 ) --[[ @ 0]]
	f6_arg0.layerNumber:setRGB( 1, 1, 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.EmblemGroupNew_Internal.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f7_arg0, f7_arg1 )
			f7_arg0:__resetProperties() --[[ @ 0]]
			f7_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end,
		ChildFocus = function ( f8_arg0, f8_arg1 )
			f8_arg0:__resetProperties() --[[ @ 0]]
			f8_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f8_arg0.SelectorOverlay:completeAnimation() --[[ @ 0]]
			f8_arg0.SelectorOverlay:setAlpha( 0.04 ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.SelectorOverlay ) --[[ @ 0]]
		end,
		GainChildFocus = function ( f9_arg0, f9_arg1 )
			f9_arg0:__resetProperties() --[[ @ 0]]
			f9_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f9_local0 = function ( f10_arg0 )
				f9_arg0.SelectorOverlay:beginAnimation( 200 ) --[[ @ 0]]
				f9_arg0.SelectorOverlay:setAlpha( 0.04 ) --[[ @ 0]]
				f9_arg0.SelectorOverlay:registerEventHandler( "interrupted_keyframe", f9_arg0.clipInterrupted ) --[[ @ 0]]
				f9_arg0.SelectorOverlay:registerEventHandler( "transition_complete_keyframe", f9_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f9_arg0.SelectorOverlay:completeAnimation() --[[ @ 0]]
			f9_arg0.SelectorOverlay:setAlpha( 0.01 ) --[[ @ 0]]
			f9_local0( f9_arg0.SelectorOverlay ) --[[ @ 0]]
		end,
		LoseChildFocus = function ( f11_arg0, f11_arg1 )
			f11_arg0:__resetProperties() --[[ @ 0]]
			f11_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			local f11_local0 = function ( f12_arg0 )
				f11_arg0.SelectorOverlay:beginAnimation( 200 ) --[[ @ 0]]
				f11_arg0.SelectorOverlay:setAlpha( 0.01 ) --[[ @ 0]]
				f11_arg0.SelectorOverlay:registerEventHandler( "interrupted_keyframe", f11_arg0.clipInterrupted ) --[[ @ 0]]
				f11_arg0.SelectorOverlay:registerEventHandler( "transition_complete_keyframe", f11_arg0.clipFinished ) --[[ @ 0]]
			end
			 --[[ @ 0]]
			f11_arg0.SelectorOverlay:completeAnimation() --[[ @ 0]]
			f11_arg0.SelectorOverlay:setAlpha( 0.04 ) --[[ @ 0]]
			f11_local0( f11_arg0.SelectorOverlay ) --[[ @ 0]]
		end
	},
	BMClassified = {
		DefaultClip = function ( f13_arg0, f13_arg1 )
			f13_arg0:__resetProperties() --[[ @ 0]]
			f13_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end,
		Focus = function ( f14_arg0, f14_arg1 )
			f14_arg0:__resetProperties() --[[ @ 0]]
			f14_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f14_arg0.SelectorOverlay:completeAnimation() --[[ @ 0]]
			f14_arg0.SelectorOverlay:setAlpha( 0.04 ) --[[ @ 0]]
			f14_arg0.clipFinished( f14_arg0.SelectorOverlay ) --[[ @ 0]]
		end
	},
	CantFit = {
		DefaultClip = function ( f15_arg0, f15_arg1 )
			f15_arg0:__resetProperties() --[[ @ 0]]
			f15_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f15_arg0.layerNumber:completeAnimation() --[[ @ 0]]
			f15_arg0.layerNumber:setRGB( ColorSet.ResistanceHigh.r, ColorSet.ResistanceHigh.g, ColorSet.ResistanceHigh.b ) --[[ @ 0]]
			f15_arg0.clipFinished( f15_arg0.layerNumber ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.EmblemGroupNew_Internal.__onClose = function ( f16_arg0 )
	f16_arg0.DrawGroupDecalByIndex:close() --[[ @ 0]]
	f16_arg0.IconNew:close() --[[ @ 0]]
	f16_arg0.CommonButtonOutline:close() --[[ @ 0]]
end
 --[[ @ 0]]
