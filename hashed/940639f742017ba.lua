-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:35
require( "x64:31bbde4283bb35f8" ) --[[ @ 0]]
require( "x64:14b67b3d78299a63" ) --[[ @ 0]]
require( "x64:c3fa19037d61cad" ) --[[ @ 0]]

CoD.WZPersonalizeCharacter_StandardFrameWidget = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.WZPersonalizeCharacter_StandardFrameWidget.__defaultWidth = 906 --[[ @ 0]]
CoD.WZPersonalizeCharacter_StandardFrameWidget.__defaultHeight = 800 --[[ @ 0]]
CoD.WZPersonalizeCharacter_StandardFrameWidget.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.WZPersonalizeCharacter_StandardFrameWidget ) --[[ @ 0]]
	self.id = "WZPersonalizeCharacter_StandardFrameWidget" --[[ @ 0]]
	self.soundSet = "FrontendMain" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	
	local Characters = LUI.UIList.new( f1_arg0, f1_arg1, 0, 0, nil, false, false, false, false ) --[[ @ 0]]
	Characters:setLeftRight( 0, 0, 0, 760 ) --[[ @ 0]]
	Characters:setTopBottom( 0, 0, 0, 865 ) --[[ @ 0]]
	Characters:setWidgetType( CoD.HubSpecialist_character ) --[[ @ 0]]
	Characters:setHorizontalCount( 5 ) --[[ @ 0]]
	Characters:setVerticalCount( 5 ) --[[ @ 0]]
	Characters:setSpacing( 0 ) --[[ @ 0]]
	Characters:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	Characters:linkToElementModel( self, "characterDatasource", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			Characters:setDataSource( f2_local0 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	Characters:linkToElementModel( Characters, "purchasable", true, function ( model, f3_arg1 )
		CoD.Menu.UpdateButtonShownState( f3_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	Characters:linkToElementModel( Characters, "disabled", true, function ( model, f4_arg1 )
		CoD.Menu.UpdateButtonShownState( f4_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	Characters:registerEventHandler( "list_item_gain_focus", function ( element, event )
		local f5_local0 = nil --[[ @ 0]]
		SetControllerModelValue( f1_arg1, "WZCharacterInfo.infoModel", element:getModel() ) --[[ @ 0]]
		CoD.ModelUtility.SetControllerModelValueToEnum( f1_arg1, "WZCharacterInfo.showInfoState", CoD.WZUtility.CharacterInfoShowState.SHOW ) --[[ @ 0]]
		return f5_local0
	end ) --[[ @ 0]]
	Characters:registerEventHandler( "list_item_lose_focus", function ( element, event )
		local f6_local0 = nil --[[ @ 0]]
		if not CoD.BaseUtility.DoesElementOrChildHaveFocus( self, "Characters" ) then
			CoD.ModelUtility.SetControllerModelValueToEnum( f1_arg1, "WZCharacterInfo.showInfoState", CoD.WZUtility.CharacterInfoShowState.HIDE ) --[[ @ 0]]
		end
		return f6_local0
	end ) --[[ @ 0]]
	Characters:registerEventHandler( "gain_focus", function ( element, event )
		local f7_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f7_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f7_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f7_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( Characters, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], "ui_confirm", function ( element, menu, controller, model )
		if CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "purchasable" ) and not IsGameTrial() then
			OpenOverlay( self, "Store", controller ) --[[ @ 0]]
			return true
		elseif not CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "disabled" ) and not IsGameTrial() then
			OpenOverlay( self, "WZPersonalizeCharacterInspect", controller, {
				model = element:getModel(),
				properties = {
					_sessionMode = menu._sessionMode,
					_storageLoadoutBuffer = menu._storageLoadoutBuffer
				}
			} ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "purchasable" ) and not IsGameTrial() then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_4191CDDA584B4408", nil, "ui_confirm" ) --[[ @ 0]]
			return true
		elseif not CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "disabled" ) and not IsGameTrial() then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, "ui_confirm" ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( Characters ) --[[ @ 0]]
	self.Characters = Characters --[[ @ 0]]
	
	Characters.id = "Characters" --[[ @ 0]]
	self.__defaultFocus = Characters --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	SetElementProperty( self, "_leftMostElement", self.Characters ) --[[ @ 0]]
	return self
end
 --[[ @ 0]]
CoD.WZPersonalizeCharacter_StandardFrameWidget.__onClose = function ( f10_arg0 )
	f10_arg0.Characters:close() --[[ @ 0]]
end
 --[[ @ 0]]
