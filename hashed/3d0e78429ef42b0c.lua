-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:33
require( "x64:1db56e8522ed782c" ) --[[ @ 0]]
require( "x64:3fcfc38ff6366a17" ) --[[ @ 0]]
require( "x64:6f76d24ca4263dc4" ) --[[ @ 0]]
require( "x64:479a2abecba85306" ) --[[ @ 0]]
require( "x64:75f1df1bb13a3d07" ) --[[ @ 0]]
require( "x64:15d80cb371475b19" ) --[[ @ 0]]
require( "x64:193604c7b6b216ac" ) --[[ @ 0]]
require( "ui/uieditor/widgets/director/directorpregamebutton" ) --[[ @ 0]]

CoD.ContractFrameInternal = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.ContractFrameInternal.__defaultWidth = 1071 --[[ @ 0]]
CoD.ContractFrameInternal.__defaultHeight = 851 --[[ @ 0]]
CoD.ContractFrameInternal.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.ContractFrameInternal ) --[[ @ 0]]
	self.id = "ContractFrameInternal" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	
	local PurchasedContractsButton = CoD.ItemShopButton.new( f1_arg0, f1_arg1, 0.5, 0.5, -314, 146, 1, 1, -227, -167 ) --[[ @ 0]]
	PurchasedContractsButton:mergeStateConditions( {
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return not CoD.ContractUtility.ShowPurchasedContractMenuButton( f1_arg1, 2 )
			end
		}
	} ) --[[ @ 0]]
	local Blur4 = PurchasedContractsButton --[[ @ 0]]
	local TransactionDeepLinkButton = PurchasedContractsButton.subscribeToModel --[[ @ 0]]
	local Blur3 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
	TransactionDeepLinkButton( Blur4, Blur3.ContractsForceUpdate, function ( f3_arg0 )
		f1_arg0:updateElementState( PurchasedContractsButton, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f3_arg0:get(),
			modelName = "ContractsForceUpdate"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	PurchasedContractsButton.DirectorSelectButtonMiniInternal.MiddleText:setText( LocalizeToUpperString( @"hash_7B501D2CF5C8B98A" ) ) --[[ @ 0]]
	PurchasedContractsButton.DirectorSelectButtonMiniInternal.MiddleTextFocus:setText( LocalizeToUpperString( @"hash_7B501D2CF5C8B98A" ) ) --[[ @ 0]]
	PurchasedContractsButton:registerEventHandler( "gain_focus", function ( element, event )
		local f4_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f4_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f4_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f4_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( PurchasedContractsButton, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], nil, function ( element, menu, controller, model )
		OpenOverlay( self, "PurchasedContractsMenu", controller ) --[[ @ 0]]
		PlaySoundAlias( "uin_press_generic" ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, nil ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	self:addElement( PurchasedContractsButton ) --[[ @ 0]]
	self.PurchasedContractsButton = PurchasedContractsButton --[[ @ 0]]
	
	TransactionDeepLinkButton = nil --[[ @ 0]]
	
	TransactionDeepLinkButton = CoD.DirectorPreGameButton.new( f1_arg0, f1_arg1, 0.88, 0.88, -936.5, -706.5, 0, 0, 781, 851 ) --[[ @ 0]]
	TransactionDeepLinkButton.DirectorCustomStartButton.MiddleText:setText( LocalizeToUpperString( @"hash_44031C820A02E7BA" ) ) --[[ @ 0]]
	TransactionDeepLinkButton.DirectorCustomStartButton.MiddleTextFocus:setText( LocalizeToUpperString( @"hash_44031C820A02E7BA" ) ) --[[ @ 0]]
	TransactionDeepLinkButton:registerEventHandler( "gain_focus", function ( element, event )
		local f7_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f7_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f7_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"] ) --[[ @ 0]]
		return f7_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( TransactionDeepLinkButton, f1_arg1, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], "ui_confirm", function ( element, menu, controller, model )
		if IsPC() and CoD.PCKoreaUtility.IsInKorea() then
			CoD.PCKoreaUtility.OpenTransactionsDeepLinkBlackmarket( controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsPC() and CoD.PCKoreaUtility.IsInKorea() then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], @"hash_0", nil, "ui_confirm" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( TransactionDeepLinkButton, f1_arg1, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], "MOUSE1", function ( element, menu, controller, model )
		if IsPC() and CoD.PCKoreaUtility.IsInKorea() then
			CoD.PCKoreaUtility.OpenTransactionsDeepLinkBlackmarket( controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if IsPC() and CoD.PCKoreaUtility.IsInKorea() then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3865DD2DB1EFE9F8"], @"hash_0", nil, "MOUSE1" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( TransactionDeepLinkButton ) --[[ @ 0]]
	self.TransactionDeepLinkButton = TransactionDeepLinkButton --[[ @ 0]]
	
	Blur4 = LUI.UIImage.new( 0, 0, 480, 898, 0, 0, 377, 565 ) --[[ @ 0]]
	Blur4:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_E2354BE557C4C7A" ) ) --[[ @ 0]]
	Blur4:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( Blur4 ) --[[ @ 0]]
	self.Blur4 = Blur4 --[[ @ 0]]
	
	Blur3 = LUI.UIImage.new( 0, 0, 5, 423, 0, 0, 377, 565 ) --[[ @ 0]]
	Blur3:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_E2354BE557C4C7A" ) ) --[[ @ 0]]
	Blur3:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( Blur3 ) --[[ @ 0]]
	self.Blur3 = Blur3 --[[ @ 0]]
	
	local Blur2 = LUI.UIImage.new( 0, 0, 480, 898, 0, 0, 81, 269 ) --[[ @ 0]]
	Blur2:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_E2354BE557C4C7A" ) ) --[[ @ 0]]
	Blur2:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( Blur2 ) --[[ @ 0]]
	self.Blur2 = Blur2 --[[ @ 0]]
	
	local Blur1 = LUI.UIImage.new( 0, 0, 5, 423, 0, 0, 81, 269 ) --[[ @ 0]]
	Blur1:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_E2354BE557C4C7A" ) ) --[[ @ 0]]
	Blur1:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( Blur1 ) --[[ @ 0]]
	self.Blur1 = Blur1 --[[ @ 0]]
	
	local ContractItemEmpty4 = CoD.ContractItemEmpty.new( f1_arg0, f1_arg1, 0, 0, 480, 898, 0, 0, 377, 565 ) --[[ @ 0]]
	ContractItemEmpty4:setAlpha( 0.27 ) --[[ @ 0]]
	self:addElement( ContractItemEmpty4 ) --[[ @ 0]]
	self.ContractItemEmpty4 = ContractItemEmpty4 --[[ @ 0]]
	
	local ContractItemEmpty3 = CoD.ContractItemEmpty.new( f1_arg0, f1_arg1, 0, 0, 5, 423, 0, 0, 377, 565 ) --[[ @ 0]]
	ContractItemEmpty3:setAlpha( 0.27 ) --[[ @ 0]]
	self:addElement( ContractItemEmpty3 ) --[[ @ 0]]
	self.ContractItemEmpty3 = ContractItemEmpty3 --[[ @ 0]]
	
	local ContractItemEmpty2 = CoD.ContractItemEmpty.new( f1_arg0, f1_arg1, 0, 0, 480, 898, 0, 0, 81, 269 ) --[[ @ 0]]
	ContractItemEmpty2:setAlpha( 0.27 ) --[[ @ 0]]
	self:addElement( ContractItemEmpty2 ) --[[ @ 0]]
	self.ContractItemEmpty2 = ContractItemEmpty2 --[[ @ 0]]
	
	local ContractItemEmpty = CoD.ContractItemEmpty.new( f1_arg0, f1_arg1, 0, 0, 5, 423, 0, 0, 81, 269 ) --[[ @ 0]]
	ContractItemEmpty:setAlpha( 0.27 ) --[[ @ 0]]
	self:addElement( ContractItemEmpty ) --[[ @ 0]]
	self.ContractItemEmpty = ContractItemEmpty --[[ @ 0]]
	
	local infoBracketBot = LUI.UIImage.new( 0, 0, 0, 903, 0, 0, 36, 44 ) --[[ @ 0]]
	infoBracketBot:setRGB( 0.98, 1, 0.89 ) --[[ @ 0]]
	infoBracketBot:setAlpha( 0.35 ) --[[ @ 0]]
	infoBracketBot:setZRot( 180 ) --[[ @ 0]]
	infoBracketBot:setImage( RegisterImage( @"hash_4C325BED3F226657" ) ) --[[ @ 0]]
	infoBracketBot:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_add" ) ) --[[ @ 0]]
	infoBracketBot:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	infoBracketBot:setupNineSliceShader( 16, 4 ) --[[ @ 0]]
	self:addElement( infoBracketBot ) --[[ @ 0]]
	self.infoBracketBot = infoBracketBot --[[ @ 0]]
	
	local infoBracketBot2 = LUI.UIImage.new( 0, 0, 0, 903, 0, 0, 360, 368 ) --[[ @ 0]]
	infoBracketBot2:setRGB( 0.98, 1, 0.89 ) --[[ @ 0]]
	infoBracketBot2:setAlpha( 0.35 ) --[[ @ 0]]
	infoBracketBot2:setZRot( 180 ) --[[ @ 0]]
	infoBracketBot2:setImage( RegisterImage( @"hash_4C325BED3F226657" ) ) --[[ @ 0]]
	infoBracketBot2:setMaterial( LUI.UIImage.GetCachedMaterial( @"uie_nineslice_add" ) ) --[[ @ 0]]
	infoBracketBot2:setShaderVector( 0, 0, 0, 0, 0 ) --[[ @ 0]]
	infoBracketBot2:setupNineSliceShader( 16, 4 ) --[[ @ 0]]
	self:addElement( infoBracketBot2 ) --[[ @ 0]]
	self.infoBracketBot2 = infoBracketBot2 --[[ @ 0]]
	
	local PurchasableContracts = CoD.ListLabel.new( f1_arg0, f1_arg1, 0.5, 0.5, -530.5, -175.5, 0.5, 0.5, -102.5, -52.5 ) --[[ @ 0]]
	PurchasableContracts.TextBox2:setRGB( ColorSet.T8__OFF__WHITE.r, ColorSet.T8__OFF__WHITE.g, ColorSet.T8__OFF__WHITE.b ) --[[ @ 0]]
	PurchasableContracts.TextBox2:setAlpha( 0 ) --[[ @ 0]]
	self:addElement( PurchasableContracts ) --[[ @ 0]]
	self.PurchasableContracts = PurchasableContracts --[[ @ 0]]
	
	local AvailableContracts = CoD.ListLabel.new( f1_arg0, f1_arg1, 0.5, 0.5, -530.5, -175.5, 0.5, 0.5, -425.5, -375.5 ) --[[ @ 0]]
	self:addElement( AvailableContracts ) --[[ @ 0]]
	self.AvailableContracts = AvailableContracts --[[ @ 0]]
	
	local PurchasedContractList = LUI.UIList.new( f1_arg0, f1_arg1, 57, 0, nil, false, false, false, false ) --[[ @ 0]]
	PurchasedContractList:setLeftRight( 0, 0, 5, 898 ) --[[ @ 0]]
	PurchasedContractList:setTopBottom( 0, 0, 376.5, 565.5 ) --[[ @ 0]]
	PurchasedContractList:setWidgetType( CoD.ContractItem ) --[[ @ 0]]
	PurchasedContractList:setHorizontalCount( 2 ) --[[ @ 0]]
	PurchasedContractList:setSpacing( 57 ) --[[ @ 0]]
	PurchasedContractList:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	PurchasedContractList:setDataSource( "PurchasedContracts" ) --[[ @ 0]]
	PurchasedContractList:registerEventHandler( "list_item_gain_focus", function ( element, event )
		local f12_local0 = nil --[[ @ 0]]
		SetElementModelToFocusedElementModel( f1_arg1, self, element, "SupplyChainDetails" ) --[[ @ 0]]
		SetElementModelToFocusedElementModel( f1_arg1, self, element, "ContractInfoPanel" ) --[[ @ 0]]
		CoD.BlackMarketUtility.CopySignatureWeaponProperty( f1_arg1, element, self.ContractInfoPanel ) --[[ @ 0]]
		CoD.BlackMarketUtility.ChangeSupplyChainCameraBySelection( f1_arg0, f1_arg1, element ) --[[ @ 0]]
		return f12_local0
	end ) --[[ @ 0]]
	PurchasedContractList:registerEventHandler( "gain_focus", function ( element, event )
		local f13_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f13_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f13_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f13_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( PurchasedContractList, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], nil, function ( element, menu, controller, model )
		PlaySoundAlias( "uin_toggle_generic" ) --[[ @ 0]]
		CoD.ContractUtility.OpenContractDetails( self, element, controller ) --[[ @ 0]]
		return true
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, nil ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	self:addElement( PurchasedContractList ) --[[ @ 0]]
	self.PurchasedContractList = PurchasedContractList --[[ @ 0]]
	
	local PurchasableContractList = LUI.UIList.new( f1_arg0, f1_arg1, 57, 0, nil, false, false, false, false ) --[[ @ 0]]
	PurchasableContractList:setLeftRight( 0, 0, 5, 898 ) --[[ @ 0]]
	PurchasableContractList:setTopBottom( 0, 0, 80.5, 269.5 ) --[[ @ 0]]
	PurchasableContractList:setWidgetType( CoD.ContractItem ) --[[ @ 0]]
	PurchasableContractList:setHorizontalCount( 2 ) --[[ @ 0]]
	PurchasableContractList:setSpacing( 57 ) --[[ @ 0]]
	PurchasableContractList:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	PurchasableContractList:setDataSource( "PurchasableContracts" ) --[[ @ 0]]
	PurchasableContractList:linkToElementModel( PurchasableContractList, "purchased", true, function ( model, f16_arg1 )
		CoD.Menu.UpdateButtonShownState( f16_arg1, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
	end ) --[[ @ 0]]
	PurchasableContractList:registerEventHandler( "list_item_gain_focus", function ( element, event )
		local f17_local0 = nil --[[ @ 0]]
		SetElementModelToFocusedElementModel( f1_arg1, self, element, "SupplyChainDetails" ) --[[ @ 0]]
		SetElementModelToFocusedElementModel( f1_arg1, self, element, "ContractInfoPanel" ) --[[ @ 0]]
		CoD.BlackMarketUtility.CopySignatureWeaponProperty( f1_arg1, element, self.ContractInfoPanel ) --[[ @ 0]]
		CoD.BlackMarketUtility.ChangeSupplyChainCameraBySelection( f1_arg0, f1_arg1, element ) --[[ @ 0]]
		return f17_local0
	end ) --[[ @ 0]]
	PurchasableContractList:registerEventHandler( "gain_focus", function ( element, event )
		local f18_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f18_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f18_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"] ) --[[ @ 0]]
		return f18_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( PurchasableContractList, f1_arg1, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], nil, function ( element, menu, controller, model )
		if not CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "purchased" ) then
			PlaySoundAlias( "uin_toggle_generic" ) --[[ @ 0]]
			CoD.ContractUtility.OpenContractDetails( self, element, controller ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not CoD.ModelUtility.IsSelfModelValueTrue( element, controller, "purchased" ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"LUIButton"][@"hash_3755DA1E2E7C263F"], @"hash_6D0BB36CD318F55F", nil, nil ) --[[ @ 0]]
			return true
		else
			return false
		end
	end, false ) --[[ @ 0]]
	self:addElement( PurchasableContractList ) --[[ @ 0]]
	self.PurchasableContractList = PurchasableContractList --[[ @ 0]]
	
	local ContractTimer1 = LUI.UIText.new( 0, 0, 6, 423, 0, 0, 52, 70 ) --[[ @ 0]]
	ContractTimer1:setRGB( ColorSet.StoreAvailabilityTimer.r, ColorSet.StoreAvailabilityTimer.g, ColorSet.StoreAvailabilityTimer.b ) --[[ @ 0]]
	ContractTimer1:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	ContractTimer1:setLetterSpacing( 2 ) --[[ @ 0]]
	ContractTimer1:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	ContractTimer1:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	ContractTimer1:subscribeToGlobalModel( f1_arg1, "AutoEvents", "autoevent_contract1_timer", function ( model )
		local f21_local0 = model:get() --[[ @ 0]]
		if f21_local0 ~= nil then
			ContractTimer1:setText( LocalizeIntoStringIfNotEmpty( @"hash_5AAA70C5480C51D2", f21_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( ContractTimer1 ) --[[ @ 0]]
	self.ContractTimer1 = ContractTimer1 --[[ @ 0]]
	
	local ContractTimer2 = LUI.UIText.new( 0, 0, 480, 897, 0, 0, 52, 70 ) --[[ @ 0]]
	ContractTimer2:setRGB( ColorSet.StoreAvailabilityTimer.r, ColorSet.StoreAvailabilityTimer.g, ColorSet.StoreAvailabilityTimer.b ) --[[ @ 0]]
	ContractTimer2:setTTF( "ttmussels_regular" ) --[[ @ 0]]
	ContractTimer2:setLetterSpacing( 2 ) --[[ @ 0]]
	ContractTimer2:setAlignment( Enum[@"LUIAlignment"][@"hash_558C8A85F2048829"] ) --[[ @ 0]]
	ContractTimer2:setAlignment( Enum[@"LUIAlignment"][@"hash_3F41D595A2B0EDF3"] ) --[[ @ 0]]
	ContractTimer2:subscribeToGlobalModel( f1_arg1, "AutoEvents", "autoevent_contract2_timer", function ( model )
		local f22_local0 = model:get() --[[ @ 0]]
		if f22_local0 ~= nil then
			ContractTimer2:setText( LocalizeIntoStringIfNotEmpty( @"hash_5AAA70C5480C51D2", f22_local0 ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( ContractTimer2 ) --[[ @ 0]]
	self.ContractTimer2 = ContractTimer2 --[[ @ 0]]
	
	local SupplyChainDetails = CoD.ContractSupplyChainDetails.new( f1_arg0, f1_arg1, 0.5, 0.5, 586, 1186, 0, 0, -167, 913 ) --[[ @ 0]]
	SupplyChainDetails:mergeStateConditions( {
		{
			stateName = "NoInfoPanel",
			condition = function ( menu, element, event )
				return AlwaysTrue()
			end
		}
	} ) --[[ @ 0]]
	SupplyChainDetails:linkToElementModel( SupplyChainDetails, "name", true, function ( model )
		f1_arg0:updateElementState( SupplyChainDetails, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "name"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	SupplyChainDetails:appendEventHandler( "input_source_changed", function ( f25_arg0, f25_arg1 )
		f25_arg1.menu = f25_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( SupplyChainDetails, f25_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	local f1_local20 = SupplyChainDetails --[[ @ 0]]
	local ContractInfoPanel = SupplyChainDetails.subscribeToModel --[[ @ 0]]
	local f1_local22 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	ContractInfoPanel( f1_local20, f1_local22.LastInput, function ( f26_arg0 )
		f1_arg0:updateElementState( SupplyChainDetails, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f26_arg0:get(),
			modelName = "LastInput"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	SupplyChainDetails:linkToElementModel( SupplyChainDetails, "character", true, function ( model )
		f1_arg0:updateElementState( SupplyChainDetails, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "character"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	SupplyChainDetails:linkToElementModel( SupplyChainDetails, "weaponRef", true, function ( model )
		f1_arg0:updateElementState( SupplyChainDetails, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "weaponRef"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( SupplyChainDetails ) --[[ @ 0]]
	self.SupplyChainDetails = SupplyChainDetails --[[ @ 0]]
	
	ContractInfoPanel = CoD.ContractSupplyChainDetails_InfoPanel.new( f1_arg0, f1_arg1, 0, 0, 1181, 1739, 0, 0, 575, 821 ) --[[ @ 0]]
	ContractInfoPanel:mergeStateConditions( {
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				return not CoD.ModelUtility.IsSelfModelValueNonEmptyString( element, f1_arg1, "name" )
			end
		}
	} ) --[[ @ 0]]
	ContractInfoPanel:linkToElementModel( ContractInfoPanel, "name", true, function ( model )
		f1_arg0:updateElementState( ContractInfoPanel, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "name"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	ContractInfoPanel:linkToElementModel( ContractInfoPanel, "itemCategory", true, function ( model )
		f1_arg0:updateElementState( ContractInfoPanel, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "itemCategory"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	ContractInfoPanel:appendEventHandler( "input_source_changed", function ( f32_arg0, f32_arg1 )
		f32_arg1.menu = f32_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( ContractInfoPanel, f32_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	f1_local22 = ContractInfoPanel --[[ @ 0]]
	f1_local20 = ContractInfoPanel.subscribeToModel --[[ @ 0]]
	local f1_local23 = Engine[@"GetModelForController"]( f1_arg1 ) --[[ @ 0]]
	f1_local20( f1_local22, f1_local23.LastInput, function ( f33_arg0 )
		f1_arg0:updateElementState( ContractInfoPanel, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f33_arg0:get(),
			modelName = "LastInput"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:addElement( ContractInfoPanel ) --[[ @ 0]]
	self.ContractInfoPanel = ContractInfoPanel --[[ @ 0]]
	
	PurchasedContractsButton.id = "PurchasedContractsButton" --[[ @ 0]]
	if CoD.isPC then
		TransactionDeepLinkButton.id = "TransactionDeepLinkButton" --[[ @ 0]]
	end
	PurchasedContractList.id = "PurchasedContractList" --[[ @ 0]]
	PurchasableContractList.id = "PurchasableContractList" --[[ @ 0]]
	if CoD.isPC then
		SupplyChainDetails.id = "SupplyChainDetails" --[[ @ 0]]
	end
	self.__defaultFocus = PurchasableContractList --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	f1_local20 = self --[[ @ 0]]
	f1_local20 = TransactionDeepLinkButton --[[ @ 0]]
	if IsPC() and not CoD.PCKoreaUtility.ShowTransactionHistoryButton() then
		ReplaceElementWithFake( self, "TransactionDeepLinkButton" ) --[[ @ 0]]
	end
	f1_local20 = PurchasedContractList --[[ @ 0]]
	SetElementProperty( f1_local20, "_maxShowContracts", 2 ) --[[ @ 0]]
	SetElementProperty( f1_local20, "_excludeCompletedContracts", true ) --[[ @ 0]]
	return self
end
 --[[ @ 0]]
CoD.ContractFrameInternal.__onClose = function ( f34_arg0 )
	f34_arg0.PurchasedContractsButton:close() --[[ @ 0]]
	f34_arg0.TransactionDeepLinkButton:close() --[[ @ 0]]
	f34_arg0.ContractItemEmpty4:close() --[[ @ 0]]
	f34_arg0.ContractItemEmpty3:close() --[[ @ 0]]
	f34_arg0.ContractItemEmpty2:close() --[[ @ 0]]
	f34_arg0.ContractItemEmpty:close() --[[ @ 0]]
	f34_arg0.PurchasableContracts:close() --[[ @ 0]]
	f34_arg0.AvailableContracts:close() --[[ @ 0]]
	f34_arg0.PurchasedContractList:close() --[[ @ 0]]
	f34_arg0.PurchasableContractList:close() --[[ @ 0]]
	f34_arg0.ContractTimer1:close() --[[ @ 0]]
	f34_arg0.ContractTimer2:close() --[[ @ 0]]
	f34_arg0.SupplyChainDetails:close() --[[ @ 0]]
	f34_arg0.ContractInfoPanel:close() --[[ @ 0]]
end
 --[[ @ 0]]
