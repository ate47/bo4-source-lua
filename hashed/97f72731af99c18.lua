-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 20-02-2025 19:35
require( "lua/lobby/common/lobbycore" ) --[[ @ 0]]
require( "lua/lobby/process/lobbyprocessnavigate" ) --[[ @ 0]]
require( "lua/lobby/process/lobbyprocess" ) --[[ @ 0]]
require( "lua/shared/lobbydata" ) --[[ @ 0]]

Lobby.JSON = {} --[[ @ 0]]
Lobby.JSON.BuildMapPackFlagsTable = function ( f1_arg0, f1_arg1, f1_arg2 )
	if f1_arg1 & Enum[@"ContentFlagBits"][@"hash_58F57745D21DF973"] > 0 then
		table.insert( f1_arg0, "MP_ORIGINAL_MAPS" ) --[[ @ 0]]
		Engine[@"PrintInfo"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], "MP_ORIGINAL_MAPS \n" ) --[[ @ 0]]
	end
	if f1_arg1 & Enum[@"ContentFlagBits"][@"hash_70D0159800EF882D"] > 0 then
		table.insert( f1_arg0, "DLC_1" ) --[[ @ 0]]
		Engine[@"PrintInfo"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], "DLC_1 \n" ) --[[ @ 0]]
	end
	if f1_arg1 & Enum[@"ContentFlagBits"][@"hash_29A60980B253C57"] > 0 or f1_arg2 then
		table.insert( f1_arg0, "DLC_2" ) --[[ @ 0]]
		Engine[@"PrintInfo"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], "DLC_2 \n" ) --[[ @ 0]]
	end
	if f1_arg1 & Enum[@"ContentFlagBits"][@"hash_78261E9804B77826"] > 0 then
		table.insert( f1_arg0, "DLC_3" ) --[[ @ 0]]
		Engine[@"PrintInfo"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], "DLC_3 \n" ) --[[ @ 0]]
	end
	if f1_arg1 & Enum[@"ContentFlagBits"][@"hash_A487F980F37C788"] > 0 or f1_arg2 then
		table.insert( f1_arg0, "DLC_4" ) --[[ @ 0]]
		Engine[@"PrintInfo"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], "DLC_4 \n" ) --[[ @ 0]]
	end
	if f1_arg1 & Enum[@"ContentFlagBits"][@"hash_2B943980B3FBB9F"] > 0 then
		table.insert( f1_arg0, "DLC_5" ) --[[ @ 0]]
		Engine[@"PrintInfo"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], "DLC_5 \n" ) --[[ @ 0]]
	end
	if f1_arg1 & Enum[@"ContentFlagBits"][@"hash_4CEE5E97EC437975"] > 0 or f1_arg2 then
		table.insert( f1_arg0, "DLC_6" ) --[[ @ 0]]
		Engine[@"PrintInfo"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], "DLC_6 \n" ) --[[ @ 0]]
	end
	if f1_arg1 & Enum[@"ContentFlagBits"][@"hash_A298C980F1D2D10"] > 0 then
		table.insert( f1_arg0, "DLC_7" ) --[[ @ 0]]
		Engine[@"PrintInfo"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], "DLC_7 \n" ) --[[ @ 0]]
	end
	if f1_arg1 & Enum[@"ContentFlagBits"][@"hash_57448D97F2981FCE"] > 0 or f1_arg2 then
		table.insert( f1_arg0, "DLC_8" ) --[[ @ 0]]
		Engine[@"PrintInfo"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], "DLC_8 \n" ) --[[ @ 0]]
	end
	if f1_arg1 & Enum[@"ContentFlagBits"][@"hash_4CAD7197EC0C02C9"] > 0 then
		table.insert( f1_arg0, "DLC_9" ) --[[ @ 0]]
		Engine[@"PrintInfo"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], "DLC_9 \n" ) --[[ @ 0]]
	end
	if f1_arg1 & Enum[@"ContentFlagBits"][@"hash_5EFFA497F6B527C3"] > 0 or f1_arg2 then
		table.insert( f1_arg0, "DLC_10" ) --[[ @ 0]]
		Engine[@"PrintInfo"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], "DLC_10 \n" ) --[[ @ 0]]
	end
	if f1_arg1 & Enum[@"ContentFlagBits"][@"hash_57699A97F2B75222"] > 0 then
		table.insert( f1_arg0, "DLC_11" ) --[[ @ 0]]
		Engine[@"PrintInfo"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], "DLC_11 \n" ) --[[ @ 0]]
	end
	return f1_arg0
end
 --[[ @ 0]]
Lobby.JSON.GetMappackBitsForName = function ( f2_arg0 )
	local f2_local0 = 0 --[[ @ 0]]
	if f2_arg0 == "MP_ORIGINAL_MAPS" then
		f2_local0 = Enum[@"ContentFlagBits"][@"hash_58F57745D21DF973"] --[[ @ 0]]
	elseif f2_arg0 == "DLC_1" then
		f2_local0 = Enum[@"ContentFlagBits"][@"hash_70D0159800EF882D"] --[[ @ 0]]
	elseif f2_arg0 == "DLC_2" then
		f2_local0 = Enum[@"ContentFlagBits"][@"hash_29A60980B253C57"] --[[ @ 0]]
	elseif f2_arg0 == "DLC_3" then
		f2_local0 = Enum[@"ContentFlagBits"][@"hash_78261E9804B77826"] --[[ @ 0]]
	elseif f2_arg0 == "DLC_4" then
		f2_local0 = Enum[@"ContentFlagBits"][@"hash_A487F980F37C788"] --[[ @ 0]]
	elseif f2_arg0 == "DLC_5" then
		f2_local0 = Enum[@"ContentFlagBits"][@"hash_2B943980B3FBB9F"] --[[ @ 0]]
	elseif f2_arg0 == "DLC_6" then
		f2_local0 = Enum[@"ContentFlagBits"][@"hash_4CEE5E97EC437975"] --[[ @ 0]]
	elseif f2_arg0 == "DLC_7" then
		f2_local0 = Enum[@"ContentFlagBits"][@"hash_A298C980F1D2D10"] --[[ @ 0]]
	elseif f2_arg0 == "DLC_8" then
		f2_local0 = Enum[@"ContentFlagBits"][@"hash_57448D97F2981FCE"] --[[ @ 0]]
	elseif f2_arg0 == "DLC_9" then
		f2_local0 = Enum[@"ContentFlagBits"][@"hash_4CAD7197EC0C02C9"] --[[ @ 0]]
	elseif f2_arg0 == "DLC_10" then
		f2_local0 = Enum[@"ContentFlagBits"][@"hash_5EFFA497F6B527C3"] --[[ @ 0]]
	elseif f2_arg0 == "DLC_11" then
		f2_local0 = Enum[@"ContentFlagBits"][@"hash_57699A97F2B75222"] --[[ @ 0]]
	end
	return f2_local0
end
 --[[ @ 0]]
Lobby.JSON.ErrorWrite = function ( f3_arg0, f3_arg1, f3_arg2 )
	Engine[@"PrintError"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], f3_arg1 .. ": " .. f3_arg2 .. "\n" ) --[[ @ 0]]
	if f3_arg0 ~= nil then
		f3_arg0:endWrite() --[[ @ 0]]
	end
	return nil
end
 --[[ @ 0]]
Lobby.JSON.ErrorParsing = function ( f4_arg0, f4_arg1, f4_arg2 )
	Engine[@"PrintError"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], f4_arg1 .. ": " .. f4_arg2 .. "\n" ) --[[ @ 0]]
	if f4_arg0 ~= nil then
		f4_arg0:endParse() --[[ @ 0]]
	end
	return nil
end
 --[[ @ 0]]
Lobby.JSON.CreateFieldAndAddToLocation = function ( f5_arg0, f5_arg1, f5_arg2 )
	local f5_local0 = f5_arg1:setField( f5_arg2, LuaEnum.JSON_TYPE.JSON_OBJECT ) --[[ @ 0]]
	if f5_local0 == nil then
		Engine[@"PrintError"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], "failed to set '" .. f5_arg2 .. "' field.\n" ) --[[ @ 0]]
		return nil
	else
		return f5_local0
	end
end
 --[[ @ 0]]
Lobby.JSON.CreateArrayAndAddToLocation = function ( f6_arg0, f6_arg1, f6_arg2 )
	local f6_local0 = f6_arg1:setField( f6_arg2, LuaEnum.JSON_TYPE.JSON_ARRAY ) --[[ @ 0]]
	if f6_local0 == nil then
		Engine[@"PrintError"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], "failed to set '" .. f6_arg2 .. "' array field.\n" ) --[[ @ 0]]
		return nil
	else
		return f6_local0
	end
end
 --[[ @ 0]]
Lobby.JSON.ParseLobbyHostDoc = function ( f7_arg0, f7_arg1 )
	local f7_local0 = "Lobby.JSON.ParseLobbyHostDoc" --[[ @ 0]]
	local f7_local1 = Engine[@"hash_1A4245AC303B4CD5"]() --[[ @ 0]]
	if f7_local1 == nil then
		return Lobby.JSON.ErrorParsing( nil, f7_local0, "failed to create JSON handle.\n" )
	elseif f7_local1:beginParse( "lobbyHostDoc", f7_arg0 .. " " ) == false then
		return Lobby.JSON.ErrorParsing( f7_local1, f7_local0, "failed to parse lobbyHostDoc JSON.\n" )
	end
	local f7_local2 = f7_local1:getRoot() --[[ @ 0]]
	if f7_local2 == nil then
		return Lobby.JSON.ErrorParsing( f7_local1, f7_local0, "failed to get root of lobbyHostDoc JSON.\n" )
	end
	local f7_local3 = f7_local2:getUInt64( "update_id" ) --[[ @ 0]]
	if f7_local3 == nil then
		Lobby.JSON.ErrorParsing( nil, f7_local0, "failed to read 'update_id'.\n" ) --[[ @ 0]]
		f7_local3 = 0 --[[ @ 0]]
	end
	local f7_local4 = f7_local2:getUInt64( "game_id" ) --[[ @ 0]]
	if f7_local4 == nil then
		Lobby.JSON.ErrorParsing( nil, f7_local0, "failed to read 'game_id'.\n" ) --[[ @ 0]]
		f7_local4 = 0 --[[ @ 0]]
	end
	local f7_local5 = f7_local2:getUInt64( "update_time" ) --[[ @ 0]]
	if f7_local5 == nil then
		Lobby.JSON.ErrorParsing( nil, f7_local0, "failed to read 'update_time'.\n" ) --[[ @ 0]]
		f7_local5 = 0 --[[ @ 0]]
	end
	local f7_local6 = f7_local2:getBool( "lobby_open_for_pres_join" ) --[[ @ 0]]
	if f7_local6 == nil then
		Lobby.JSON.ErrorParsing( nil, f7_local0, "failed to read 'lobby_open_for_pres_join'. Default to true\n" ) --[[ @ 0]]
		f7_local6 = true --[[ @ 0]]
	end
	local f7_local7 = "" --[[ @ 0]]
	local f7_local8 = 0 --[[ @ 0]]
	local f7_local9 = f7_local2:getFieldByKey( "listen_server" ) --[[ @ 0]]
	if f7_local9 ~= nil then
		f7_local7 = f7_local9:getString( "host_address" ) --[[ @ 0]]
		if f7_local7 == nil then
			Lobby.JSON.ErrorParsing( nil, f7_local0, "failed to read 'listen_server:host_address'." ) --[[ @ 0]]
		end
		f7_local8 = f7_local9:getUInt64( "host_player_id" ) --[[ @ 0]]
		if f7_local8 == nil then
			Lobby.JSON.ErrorParsing( nil, f7_local0, "failed to read 'listen_server:host_player_id'." ) --[[ @ 0]]
		end
		local f7_local10 = {
			host_player_id = f7_local8,
			host_address = f7_local7,
			hostAddress = Engine[@"hash_DF4C7BBB34DA21C"]( f7_local7 )
		} --[[ @ 0]]
		local f7_local11 = {} --[[ @ 0]]
		local f7_local12 = f7_local2:getFieldByKey( "player_state" ) --[[ @ 0]]
		if f7_local12 == nil then
			Engine[@"PrintError"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], "Lobby.JSON.ParseLobbyHostDoc: Missing current_player_state\n" ) --[[ @ 0]]
		else
			for f7_local17, f7_local18 in ipairs( f7_local12:getAllKeys() ) --[[ @ 0]] do
				local f7_local16 = f7_local12:getUInt64( f7_local18 ) --[[ @ 0]]
				if f7_local16 == nil then
					Engine[@"PrintError"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], "Lobby.JSON.ParseLobbyHostDoc: current_player_state[" .. f7_local18 .. "] failed to get connection state\n" ) --[[ @ 0]]
					f7_local16 = LuaEnum.LobbyMemberStatus.MEMBER_STATUS_UNACKNOWLEDGED --[[ @ 0]]
				end
				f7_local11[f7_local18] = f7_local16 --[[ @ 0]]
			end
		end
		local f7_local19 = "No Name" --[[ @ 0]]
		local f7_local13 = 0 --[[ @ 0]]
		local f7_local14 = f7_local2:getFieldByKey( "attachment" ) --[[ @ 0]]
		if f7_local14 ~= nil and f7_local14:hasData() then
			host_name = f7_local14:getString( "host_name" ) --[[ @ 0]]
			if nil == host_name then
				Lobby.JSON.ErrorParsing( nil, f7_local0, "failed to read 'host_name'." ) --[[ @ 0]]
				f7_local19 = "" --[[ @ 0]]
			end
			f7_local13 = f7_local14:getUInt( "host_menuID" ) --[[ @ 0]]
			if f7_local13 == nil then
				Lobby.JSON.ErrorParsing( nil, f7_local0, "failed to read 'host_menuID'.\n" ) --[[ @ 0]]
			end
		end
		local f7_local15 = {
			host_menuID = f7_local13,
			host_name = host_name
		} --[[ @ 0]]
		local f7_local17 = f7_local2:getBool( "lobby_open" ) --[[ @ 0]]
		if f7_local17 == nil then
			f7_local17 = false --[[ @ 0]]
		end
		local f7_local18 = f7_local2:getFieldByKey( "team_balance" ) --[[ @ 0]]
		local f7_local16 = false --[[ @ 0]]
		if f7_local18 ~= nil then
			f7_local16 = f7_local18:getBool( "can_change_teams" ) --[[ @ 0]]
			if f7_local16 == nil then
				Lobby.JSON.ErrorParsing( nil, f7_local0, "failed to read bool 'team_balance:can_change_teams'.\n" ) --[[ @ 0]]
			end
		else
			Lobby.JSON.ErrorParsing( nil, f7_local0, "failed to read field 'team_balance'.\n" ) --[[ @ 0]]
		end
		local f7_local20 = {
			can_change_teams = f7_local16
		} --[[ @ 0]]
		local f7_local21 = false --[[ @ 0]]
		local f7_local22 = false --[[ @ 0]]
		local f7_local23 = f7_local2:getFieldByKey( "ruleset_payload" ) --[[ @ 0]]
		if f7_local23 ~= nil and f7_local23:hasData() then
			if f7_local23:checkIfFieldHasData( "is_merge_src" ) and f7_local23:getBool( "is_merge_src" ) == nil then
				Lobby.JSON.ErrorParsing( f7_local1, f7_local0, "failed to read 'ruleset_payload:is_merge_src'.\n" ) --[[ @ 0]]
				f7_local21 = false --[[ @ 0]]
			end
			if f7_local23:checkIfFieldHasData( "is_merge_dst" ) then
				f7_local22 = f7_local23:getBool( "is_merge_dst" ) --[[ @ 0]]
				if f7_local22 == nil then
					Lobby.JSON.ErrorParsing( f7_local1, f7_local0, "failed to read 'ruleset_payload:is_merge_dst'.\n" ) --[[ @ 0]]
					f7_local22 = false --[[ @ 0]]
				end
			end
		else
			Lobby.JSON.ErrorParsing( nil, f7_local0, "failed to read field 'ruleset_payload'.\n" ) --[[ @ 0]]
		end
		if f7_local2:checkIfFieldHasData( "dedicated_server" ) == true then
			dedicated_server = f7_local2:getFieldByKey( "dedicated_server" ) --[[ @ 0]]
			if nil ~= dedicated_server then
				dedicated_server_user_id = dedicated_server:getUInt64( "user_id" ) --[[ @ 0]]
				if nil == dedicated_server_user_id then
					Lobby.JSON.ErrorParsing( nil, f7_local0, "failed to read 'dedicated_server:user_id'." ) --[[ @ 0]]
				end
				dedicated_server_data_center = dedicated_server:getString( "data_center" ) --[[ @ 0]]
				if nil == dedicated_server_data_center then
					Lobby.JSON.ErrorParsing( nil, f7_local0, "failed to read 'dedicated_server:data_center'." ) --[[ @ 0]]
				else
					
				end
			end
		end
		local f7_local24 = {} --[[ @ 0]]
		if nil ~= dedicated_server_user_id and nil ~= dedicated_server_data_center then
			f7_local24 = {
				user_id = dedicated_server_user_id,
				data_center = dedicated_server_data_center
			} --[[ @ 0]]
		end
		f7_local1:endParse() --[[ @ 0]]
		f7_local1 = nil --[[ @ 0]]
		local f7_local25 = {
			lobbyDoc = f7_arg0,
			update_id = f7_local3,
			update_time = f7_local5,
			game_id = f7_local4,
			listen_server = f7_local10,
			attachment = f7_local15,
			current_player_state = f7_local11,
			lobby_open = f7_local17,
			lobby_open_for_pres_join = f7_local6,
			is_merge_src = f7_local21,
			is_merge_dst = f7_local22,
			team_balance = f7_local20,
			dedicated_server = f7_local24
		} --[[ @ 0]]
		if f7_arg1 == nil then
			Engine[@"PrintInfo"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], f7_local0 .. "\n lobbyHostDoc: " .. f7_arg0 .. "\n lobbyHostXuid: " .. Engine[@"hash_64C599F1694E23EF"]( f7_local25.listen_server.host_player_id ) .. "\n hostAddressBase64Encoded: " .. f7_local25.listen_server.host_address .. ".\n" ) --[[ @ 0]]
		end
		return f7_local25
	end
	return Lobby.JSON.ErrorParsing( f7_local1, f7_local0, "failed to read 'listen_server'.\n" )
end
 --[[ @ 0]]
Lobby.JSON.CreateWritableDocFromString = function ( f8_arg0 )
	local f8_local0 = Engine[@"hash_61FCAFA688299BE3"]( f8_arg0 .. " " ) --[[ @ 0]]
	if f8_local0 == nil then
		Engine[@"PrintError"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], "Lobby.JSON.CreateWritableDocFromString: couldn't create json object\n" ) --[[ @ 0]]
		return nil
	else
		local f8_local1 = f8_local0:getRoot() --[[ @ 0]]
		if f8_local1 == nil then
			Engine[@"PrintError"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], "Lobby.JSON.CreateWritableDocFromString: failed to get root of lobbyHostDoc JSON\n" ) --[[ @ 0]]
			f8_local0:endWrite() --[[ @ 0]]
			return nil
		else
			return f8_local0, f8_local1
		end
	end
end
 --[[ @ 0]]
Lobby.JSON.CreateConvertJsonToStringAndCloseHandle = function ( f9_arg0, f9_arg1 )
	local f9_local0 = f9_arg0:getRepresentation() --[[ @ 0]]
	if f9_local0 == nil then
		Engine[@"PrintError"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], "Lobby.MatchmakingAsync.CreateConvertJsonToStringAndClose: failed (getRepresentation) to get JSON.\n" ) --[[ @ 0]]
	else
		f9_arg1.lobbyDoc = f9_local0 --[[ @ 0]]
	end
	f9_arg0:endWrite() --[[ @ 0]]
end
 --[[ @ 0]]
Lobby.JSON.setUpdateID = function ( f10_arg0, f10_arg1, f10_arg2, f10_arg3 )
	if f10_arg1:setUInt64( "update_id", f10_arg3 ) == false then
		Engine[@"PrintError"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], "Lobby.JSON.setUpdateID: failed setting the 'update_id' in the lobbyhostdoc.\n" ) --[[ @ 0]]
	end
	f10_arg2.update_id = f10_arg3 --[[ @ 0]]
	return f10_arg2
end
 --[[ @ 0]]
Lobby.JSON.setUpdateTime = function ( f11_arg0, f11_arg1, f11_arg2, f11_arg3 )
	if f11_arg1:setUInt64( "update_time", f11_arg3 ) == false then
		Engine[@"PrintError"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], "Lobby.JSON.setUpdateTime: failed setting the 'update_time' in the lobbyhostdoc.\n" ) --[[ @ 0]]
	end
	f11_arg2.update_time = f11_arg3 --[[ @ 0]]
	return f11_arg2
end
 --[[ @ 0]]
Lobby.JSON.setCanSplitTeam = function ( f12_arg0, f12_arg1, f12_arg2, f12_arg3 )
	local f12_local0 = f12_arg1:getFieldByKey( "team_balance" ) --[[ @ 0]]
	if f12_local0 ~= nil and f12_local0:setBool( "can_change_teams", f12_arg3 ) == false then
		Engine[@"PrintError"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], "Lobby.JSON.setCanSplitTeam: failed setting the 'game_is_in_progress' in the lobbyhostdoc.\n" ) --[[ @ 0]]
	end
	f12_arg2.team_balance.can_change_teams = f12_arg3 --[[ @ 0]]
	f12_arg2.needs_update = true --[[ @ 0]]
	return f12_arg2
end
 --[[ @ 0]]
Lobby.JSON.setLobbyOpen = function ( f13_arg0, f13_arg1, f13_arg2, f13_arg3 )
	if f13_arg1:getFieldByKey( "lobby_open" ) ~= nil and f13_arg1:setBool( "lobby_open", f13_arg3 ) == false then
		Engine[@"PrintError"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], "Lobby.JSON.setLobbyOpen: failed setting the 'lobby_open' in the lobbyhostdoc.\n" ) --[[ @ 0]]
	end
	f13_arg2.lobby_open = f13_arg3 --[[ @ 0]]
	f13_arg2.needs_update = true --[[ @ 0]]
	Engine[@"hash_1CD447775E2BE007"]( f13_arg3 ) --[[ @ 0]]
	Engine[@"PrintInfo"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], "Lobby.JSON.setLobbyOpen: Lobby.MMAsync.AdvertStatus was " .. tostring( Lobby.MMAsync.AdvertStatus ) .. " now it's " .. tostring( f13_arg3 ) .. "\n" ) --[[ @ 0]]
	Lobby.MMAsync.AdvertStatus = f13_arg3 --[[ @ 0]]
	return f13_arg2
end
 --[[ @ 0]]
Lobby.JSON.setAllowPresenseJoin = function ( f14_arg0, f14_arg1, f14_arg2, f14_arg3 )
	if f14_arg1:getFieldByKey( "lobby_open_for_pres_join" ) ~= nil and f14_arg1:setBool( "lobby_open_for_pres_join", f14_arg3 ) == false then
		Engine[@"PrintError"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], "Lobby.JSON.setLobbyOpen: failed setting the 'lobby_open_for_pres_join' in the lobbyhostdoc.\n" ) --[[ @ 0]]
	end
	f14_arg2.lobby_open_for_pres_join = f14_arg3 --[[ @ 0]]
	f14_arg2.needs_update = true --[[ @ 0]]
	return f14_arg2
end
 --[[ @ 0]]
Lobby.JSON.setGameID = function ( f15_arg0, f15_arg1, f15_arg2, f15_arg3 )
	if f15_arg1:setUInt64( "game_id", f15_arg3 ) == false then
		Engine[@"PrintError"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], "Lobby.JSON.setUpdateID: failed setting the 'game_id' in the lobbyhostdoc.\n" ) --[[ @ 0]]
	end
	f15_arg2.game_id = f15_arg3 --[[ @ 0]]
	return f15_arg2
end
 --[[ @ 0]]
Lobby.JSON.AddExpectedPlayersToLobbyHostDoc = function ( f16_arg0, f16_arg1, f16_arg2, f16_arg3, f16_arg4 )
	local f16_local0 = f16_arg1:getFieldByKey( "player_state" ) --[[ @ 0]]
	if f16_local0 == nil then
		Engine[@"PrintError"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], "Lobby.JSON.AddExpectedPlayersToLobbyHostDoc: failed to read 'current_player_state' field.\n" ) --[[ @ 0]]
		return nil
	end
	for f16_local4, f16_local5 in ipairs( f16_arg3.expectedPlayers ) --[[ @ 0]] do
		if f16_arg4[f16_local5.xuidstrnum] == nil then
			if f16_local0:getFieldByKey( f16_local5.xuidstrnum ) == nil then
				Engine[@"PrintInfo"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], "Lobby.JSON.AddExpectedPlayersToLobbyHostDoc: Player not found adding \n" ) --[[ @ 0]]
				f16_arg2.needs_update = true --[[ @ 0]]
				f16_arg2.current_player_state[f16_local5.xuidstrnum] = LuaEnum.LobbyMemberStatus.MEMBER_STATUS_MAY_CONNECT --[[ @ 0]]
				Lobby.MatchmakingAsync.AddReservation( f16_local5.xuidstrnum ) --[[ @ 0]]
				if f16_local0:setUInt64( f16_local5.xuidstrnum, Engine[@"hash_48506F73B393062F"]( LuaEnum.LobbyMemberStatus.MEMBER_STATUS_MAY_CONNECT ) ) == false then
					Engine[@"PrintError"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], "Lobby.JSON.AddExpectedPlayersToLobbyHostDoc: failed to write xuid(" .. f16_local5.xuidstrnum .. ") to 'current_player_state' Expecting player may connect.\n" ) --[[ @ 0]]
				end
			end
			Engine[@"PrintInfo"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], "Lobby.JSON.AddExpectedPlayersToLobbyHostDoc: Player found \n" ) --[[ @ 0]]
			if f16_arg2.current_player_state[f16_local5.xuidstrnum] == nil or f16_arg2.current_player_state[f16_local5.xuidstrnum] < LuaEnum.LobbyMemberStatus.MEMBER_STATUS_MAY_CONNECT then
				Engine[@"PrintInfo"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], "Lobby.JSON.AddExpectedPlayersToLobbyHostDoc: Player found Updating \n" ) --[[ @ 0]]
				f16_arg2.current_player_state[f16_local5.xuidstrnum] = LuaEnum.LobbyMemberStatus.MEMBER_STATUS_MAY_CONNECT --[[ @ 0]]
				f16_arg2.needs_update = true --[[ @ 0]]
				if f16_local0:setUInt64( f16_local5.xuidstrnum, Engine[@"hash_48506F73B393062F"]( LuaEnum.LobbyMemberStatus.MEMBER_STATUS_MAY_CONNECT ) ) == false then
					Engine[@"PrintError"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], "Lobby.JSON.AddExpectedPlayersToLobbyHostDoc: failed to write xuid(" .. f16_local5.xuidstrnum .. ") to 'current_player_state' Expecting player may connect.\n" ) --[[ @ 0]]
				end
				Lobby.MatchmakingAsync.AddReservation( f16_local5.xuidstrnum ) --[[ @ 0]]
			end
		end
	end
	return f16_arg2
end
 --[[ @ 0]]
Lobby.JSON.migrateHostData = function ( f17_arg0, f17_arg1, f17_arg2, f17_arg3 )
	local f17_local0 = f17_arg1:getFieldByKey( "listen_server" ) --[[ @ 0]]
	if f17_local0 then
		if f17_local0:setUInt64( "host_player_id", f17_arg3.hostXuid ) == false then
			Engine[@"PrintError"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], "Lobby.JSON.migrateHostData: failed to write 'lobby_host'.\n" ) --[[ @ 0]]
		end
		if f17_local0:setString( "host_address", f17_arg3.hostAddress ) == false then
			Engine[@"PrintError"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], "Lobby.JSON.migrateHostData: failed to write 'lobby_host_address'.\n" ) --[[ @ 0]]
		end
	end
	f17_arg2.listen_server.host_player_id = f17_arg3.hostXuid --[[ @ 0]]
	f17_arg2.listen_server.host_address = f17_arg3.hostAddress --[[ @ 0]]
	f17_arg2.listen_server.hostAddress = Engine[@"hash_DF4C7BBB34DA21C"]( f17_arg3.hostAddress ) --[[ @ 0]]
	local f17_local1 = f17_arg1:getFieldByKey( "attachment" ) --[[ @ 0]]
	if f17_local1 == nil then
		Engine[@"PrintError"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], "Lobby.JSON.migrateHostData: failed to get 'attachment' field from hostdoc.\n" ) --[[ @ 0]]
	else
		if f17_local1:setString( "host_name", f17_arg3.gamertag ) == false then
			Engine[@"PrintError"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], "Lobby.JSON.migrateHostData: failed to write 'host_name' in the attachment.\n" ) --[[ @ 0]]
		end
		f17_arg2.attachment.host_name = f17_arg3.gamertag --[[ @ 0]]
	end
	local f17_local2 = f17_arg1:getFieldByKey( "player_state" ) --[[ @ 0]]
	if f17_local2 == nil then
		Engine[@"PrintError"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], "Lobby.JSON.migrateHostData: failed to read 'current_player_state' field.\n" ) --[[ @ 0]]
	end
	for f17_local10, f17_local11 in ipairs( f17_local2:getAllKeys() ) --[[ @ 0]] do
		local f17_local6 = false --[[ @ 0]]
		for f17_local7, f17_local8 in ipairs( f17_arg3.sessionClients ) --[[ @ 0]] do
			if f17_local11 == f17_local8.xuidstrnum then
				f17_local6 = true --[[ @ 0]]
				break
			end
		end
		if f17_local6 == false then
			Engine[@"PrintInfo"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], "Lobby.JSON.migrateHostData: Migration Data setting XUID [" .. f17_local11 .. "] to MEMBER_STATUS_WONT_CONNECT\n" ) --[[ @ 0]]
			f17_local2:deleteField( f17_local11 ) --[[ @ 0]]
			f17_arg2.current_player_state[f17_local11] = nil --[[ @ 0]]
		end
	end
	f17_arg2.needs_update = true --[[ @ 0]]
	return f17_arg2
end
 --[[ @ 0]]
Lobby.JSON.RemoveClientsFromHostData = function ( f18_arg0, f18_arg1, f18_arg2, f18_arg3 )
	local f18_local0 = f18_arg1:getFieldByKey( "player_state" ) --[[ @ 0]]
	if f18_local0 == nil then
		Engine[@"PrintError"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], "Lobby.JSON.RemoveClientsFromHostData: failed to read 'current_player_state' field.\n" ) --[[ @ 0]]
		return nil
	end
	for f18_local4, f18_local5 in ipairs( f18_arg3.removeList ) --[[ @ 0]] do
		if f18_local0:deleteField( f18_local5.xuidstrnum ) then
			f18_arg2.needs_update = true --[[ @ 0]]
			f18_arg2.current_player_state[f18_local5.xuidstrnum] = nil --[[ @ 0]]
			Lobby.MatchmakingAsync.RemoveReservation( f18_local5.xuidstrnum ) --[[ @ 0]]
			Engine[@"PrintInfo"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], "Removed client xuid:" .. f18_local5.xuidstrnum .. "/" .. tostring( f18_local5.xuid ) .. ".\n" ) --[[ @ 0]]
		end
	end
	return f18_arg2
end
 --[[ @ 0]]
Lobby.JSON.AddClientsToHostData = function ( f19_arg0, f19_arg1, f19_arg2, f19_arg3 )
	local f19_local0 = f19_arg1:getFieldByKey( "player_state" ) --[[ @ 0]]
	if f19_local0 == nil then
		Engine[@"PrintError"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], "Lobby.JSON.AddClientsToHostData: failed to read 'current_player_state' field.\n" ) --[[ @ 0]]
		return nil
	end
	for f19_local4, f19_local5 in ipairs( f19_arg3.sessionClients ) --[[ @ 0]] do
		local f19_local6 = f19_arg2.current_player_state[f19_local5.xuidstrnum] --[[ @ 0]]
		if f19_local0:setUInt64( f19_local5.xuidstrnum, Engine[@"hash_48506F73B393062F"]( LuaEnum.LobbyMemberStatus.MEMBER_STATUS_CONNECTED ) ) == false then
			Engine[@"PrintError"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], "Lobby.JSON.AddClientsToHostData: failed to write xuid(" .. f19_local5.xuidstrnum .. ") to 'current_player_state' .\n" ) --[[ @ 0]]
		end
		Lobby.MatchmakingAsync.RemoveReservation( f19_local5.xuidstrnum ) --[[ @ 0]]
		f19_arg2.current_player_state[f19_local5.xuidstrnum] = LuaEnum.LobbyMemberStatus.MEMBER_STATUS_CONNECTED --[[ @ 0]]
		if f19_local6 ~= LuaEnum.LobbyMemberStatus.MEMBER_STATUS_CONNECTED then
			f19_arg2.needs_update = true --[[ @ 0]]
		end
	end
	return f19_arg2
end
 --[[ @ 0]]
Lobby.JSON.UpdateMergeRules = function ( f20_arg0, f20_arg1, f20_arg2, f20_arg3 )
	local f20_local0 = f20_arg1:getFieldByKey( "ruleset_payload" ) --[[ @ 0]]
	if f20_local0 then
		if f20_local0:setBool( "is_merge_src", f20_arg3.src ) == false then
			Engine[@"PrintError"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], "Lobby.JSON.UpdateMergeRules: failed to write 'is_merge_src'\n" ) --[[ @ 0]]
		end
		if f20_local0:setBool( "is_merge_dst", f20_arg3.dst ) == false then
			Engine[@"PrintError"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], "Lobby.JSON.UpdateMergeRules: failed to write 'is_merge_dst'\n" ) --[[ @ 0]]
		end
	end
	f20_arg2.is_merge_src = f20_arg3.src --[[ @ 0]]
	f20_arg2.is_merge_dst = f20_arg3.dst --[[ @ 0]]
	f20_arg2.needs_update = true --[[ @ 0]]
	return f20_arg2
end
 --[[ @ 0]]
Lobby.JSON.AddHostAttachmentInfo = function ( f21_arg0, f21_arg1, f21_arg2, f21_arg3 )
	local f21_local0 = f21_arg1:setField( "attachment", LuaEnum.JSON_TYPE.JSON_OBJECT ) --[[ @ 0]]
	if f21_local0 == nil then
		Engine[@"PrintError"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], "Lobby.JSON.AddHostData: failed to add 'attachment' Array field to hostdoc.\n" ) --[[ @ 0]]
		return nil
	elseif f21_local0:setString( "host_name", f21_arg3.hostName ) == false then
		Engine[@"PrintError"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], "Lobby.JSON.AddHostData: failed to write 'host_name' in the attachment.\n" ) --[[ @ 0]]
		return nil
	elseif f21_local0:setUInt( "host_menuID", f21_arg3.menuID ) == false then
		Engine[@"PrintError"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], "Lobby.JSON.AddHostData: failed to write 'host_menuID' in the attachment.\n" ) --[[ @ 0]]
		return nil
	else
		f21_arg2.attachment = {
			host_name = f21_arg3.hostName,
			host_menuID = f21_arg3.menuID
		} --[[ @ 0]]
		f21_arg2.needs_update = true --[[ @ 0]]
		return f21_arg2
	end
end
 --[[ @ 0]]
Lobby.JSON.markDedicatedToShutdown = function ( f22_arg0, f22_arg1, f22_arg2 )
	local f22_local0 = f22_arg1:getFieldByKey( "dedicated_server" ) --[[ @ 0]]
	if f22_local0 ~= nil and f22_local0:setBool( "shutting_down", true ) == false then
		Engine[@"PrintError"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], "Lobby.JSON.markDedicatedToShutdown: failed setting the 'dedicated_server.shutting_down' in the lobbyhostdoc.\n" ) --[[ @ 0]]
	end
	f22_arg2.dedicated_server.shutting_down = true --[[ @ 0]]
	f22_arg2.needs_update = true --[[ @ 0]]
	return f22_arg2
end
 --[[ @ 0]]
Lobby.JSON.ParseLobbyBackendDoc = function ( f23_arg0 )
	local f23_local0, f23_local1 = nil --[[ @ 0]]
	local f23_local2 = 0 --[[ @ 0]]
	while f23_local0 == nil and f23_local2 < 3 do
		f23_local0, f23_local1 = Lobby.JSON.ParseLobbyBackendDocInternal( f23_arg0 ) --[[ @ 0]]
		if f23_local0 == nil then
			local f23_local3 = false --[[ @ 0]]
			if f23_local1 ~= nil and string.find( f23_arg0, f23_local1 ) == nil then
				f23_local3 = true --[[ @ 0]]
			end
			Engine[@"hash_30DE279ECDDDD966"]( 0, "dlog_event_backend_doc_parse_failure", {
				lobby_backend_doc = f23_arg0,
				error_on_reading = f23_local1,
				missing_entry = f23_local3
			} ) --[[ @ 0]]
			Engine[@"PrintError"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], "Lobby.JSON.ParseLobbyBackendDoc: Failed to parse lobbyBackendDoc try# [" .. tostring( f23_local2 ) .. "] is missing entry " .. tostring( f23_local3 ) .. "\n" ) --[[ @ 0]]
			if f23_local3 == true then
				f23_local2 = 4 --[[ @ 0]]
			end
		end
		f23_local2 = f23_local2 + 1 --[[ @ 0]]
	end
	if f23_local0 == nil then
		Engine[@"PrintError"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], "Lobby.JSON.ParseLobbyBackendDoc: Failed to parse lobbyBackendDoc 3 times throwing com error \n" ) --[[ @ 0]]
		Engine[@"hash_5BC42C678E40DBE8"]( Enum[@"errorCode"][@"hash_12FD312C2C06EC11"], "Lobby.JSON.ParseLobbyBackendDoc has failed, please email your logs to codcoreonline@treyarch.com" ) --[[ @ 0]]
	end
	return f23_local0
end
 --[[ @ 0]]
Lobby.JSON.ParseLobbyBackendDocInternal = function ( f24_arg0 )
	local f24_local0 = "Lobby.JSON.ParseLobbyBackendDocInternal" --[[ @ 0]]
	local f24_local1 = Engine[@"hash_1A4245AC303B4CD5"]() --[[ @ 0]]
	if f24_local1 == nil then
		return Lobby.JSON.ErrorParsing( nil, f24_local0, "failed to create JSON handle.\n" ), nil
	elseif f24_local1:beginParse( "lobbyBackendDoc", f24_arg0 .. " " ) == false then
		return Lobby.JSON.ErrorParsing( f24_local1, f24_local0, "failed to parse lobbyBackendDoc JSON.\n" ), "docHandle"
	end
	local f24_local2 = f24_local1:getRoot() --[[ @ 0]]
	if f24_local2 == nil then
		return Lobby.JSON.ErrorParsing( f24_local1, f24_local0, "failed to get root of lobbyBackendDoc JSON.\n" ), "no root"
	end
	local f24_local3 = f24_local2:getUInt64( "lobby_id" ) --[[ @ 0]]
	if f24_local3 == nil then
		return Lobby.JSON.ErrorParsing( f24_local1, f24_local0, "failed to read 'lobby_id'.\n" ), "lobby_id"
	end
	local f24_local4 = f24_local2:getUInt64( "create_time" ) --[[ @ 0]]
	if f24_local4 == nil then
		return Lobby.JSON.ErrorParsing( f24_local1, f24_local0, "failed to read 'create_time'.\n" ), "create_time"
	end
	local f24_local5 = f24_local2:getUInt64( "update_time" ) --[[ @ 0]]
	if f24_local5 == nil then
		return Lobby.JSON.ErrorParsing( f24_local1, f24_local0, "failed to read 'update_time'.\n" ), "update_time"
	end
	local f24_local6 = f24_local2:getUInt64( "update_id" ) --[[ @ 0]]
	if f24_local6 == nil then
		return Lobby.JSON.ErrorParsing( f24_local1, f24_local0, "failed to read 'update_id'.\n" ), "update_id"
	end
	local f24_local7 = "" --[[ @ 0]]
	local f24_local8 = "" --[[ @ 0]]
	local f24_local9 = f24_local2:getFieldByKey( "dtls" ) --[[ @ 0]]
	if f24_local9 then
		f24_local7 = f24_local9:getString( "security_id" ) --[[ @ 0]]
		if f24_local7 == nil then
			return Lobby.JSON.ErrorParsing( f24_local1, f24_local0, "failed to read 'security_id'.\n" ), "security_id"
		end
		f24_local8 = f24_local9:getString( "security_key" ) --[[ @ 0]]
		if f24_local8 == nil then
			return Lobby.JSON.ErrorParsing( f24_local1, f24_local0, "failed to read 'security_key'.\n" ), "security_key"
		end
		local f24_local10 = f24_local2:getFieldByKey( "lobby_size" ) --[[ @ 0]]
		local f24_local11 = 0 --[[ @ 0]]
		local f24_local12 = 0 --[[ @ 0]]
		if f24_local10 then
			local f24_local13 = f24_local10:getUInt( "min" ) --[[ @ 0]]
			if f24_local13 == nil then
				return Lobby.JSON.ErrorParsing( f24_local1, f24_local0, "failed to read 'lobby_size:min'.\n" ), "lobby_size:min"
			end
			f24_local11 = f24_local13 --[[ @ 0]]
			local f24_local14 = f24_local10:getUInt( "max" ) --[[ @ 0]]
			if f24_local14 == nil then
				return Lobby.JSON.ErrorParsing( f24_local1, f24_local0, "failed to read 'lobby_size:max'.\n" ), "lobby_size:man"
			end
			f24_local13 = {
				min = f24_local11,
				max = f24_local14
			} --[[ @ 0]]
			f24_local14 = {} --[[ @ 0]]
			local f24_local15 = f24_local2:getFieldByKey( "team_balance" ) --[[ @ 0]]
			if f24_local15 then
				local f24_local16 = f24_local15:getUInt( "num" ) --[[ @ 0]]
				if f24_local16 == nil then
					return Lobby.JSON.ErrorParsing( f24_local1, f24_local0, "failed to read 'team_balance:num'.\n" ), "team_balance:num"
				end
				local f24_local17 = f24_local15:getFieldByKey( "teams" ) --[[ @ 0]]
				if f24_local17 == nil then
					return Lobby.JSON.ErrorParsing( f24_local1, f24_local0, "failed to read 'teams'.\n" ), "team_balance:teams"
				end
				local f24_local18 = 0 --[[ @ 0]]
				while f24_local18 < f24_local16 do
					local f24_local19 = f24_local17:getFieldByKey( tostring( f24_local18 ) ) --[[ @ 0]]
					local f24_local20 = f24_local19:getFieldSize() --[[ @ 0]]
					if f24_local20 ~= nil then
						local f24_local21 = #f24_local14 --[[ @ 0]]
						f24_local14[f24_local21 + 1] = {} --[[ @ 0]]
						for f24_local22 = 1 --[[ @ 0]], f24_local20, 1 do
							f24_local14[f24_local21 + 1][f24_local22] = f24_local19:getUInt64ByIndex( f24_local22 - 1 ) --[[ @ 0]]
						end
					end
					f24_local18 = f24_local18 + 1 --[[ @ 0]]
				end
			end
			local f24_local16 = "" --[[ @ 0]]
			local f24_local17 = "" --[[ @ 0]]
			local f24_local18 = f24_local2:getFieldByKey( "dedicated_server" ) --[[ @ 0]]
			if f24_local18 then
				f24_local17 = f24_local18:getString( "build_name" ) --[[ @ 0]]
				if f24_local17 == nil then
					return Lobby.JSON.ErrorParsing( f24_local1, f24_local0, "failed to read 'build_name'.\n" ), "dedicated_server:build_name"
				end
				f24_local16 = f24_local18:getString( "need_for_dedicated_server" ) --[[ @ 0]]
				if f24_local16 == nil then
					return Lobby.JSON.ErrorParsing( f24_local1, f24_local0, "failed to read 'need_for_dedicated_server'.\n" ), "dedicated_server:need_for_dedicated_server"
				end
			end
			local f24_local19 = f24_local2:getFieldByKey( "players" ) --[[ @ 0]]
			if f24_local19 == nil then
				return Lobby.JSON.ErrorParsing( f24_local1, f24_local0, "failed to read 'expected_players' field.\n" ), "players"
			end
			local f24_local20 = {} --[[ @ 0]]
			for f24_local25, f24_local26 in ipairs( f24_local19:getAllKeys() ) --[[ @ 0]] do
				f24_local20[#f24_local20 + 1] = {
					xuid = Engine[@"StringToXUIDDecimal"]( f24_local26 ),
					xuidstrnum = f24_local26
				} --[[ @ 0]]
			end
			f24_local22 = 0 --[[ @ 0]]
			f24_local23 = false --[[ @ 0]]
			f24_local24 = f24_local2:getFieldByKey( "ruleset_payload" ) --[[ @ 0]]
			if f24_local24 then
				f24_local25 = f24_local24:getFieldByKey( "filter" ) --[[ @ 0]]
				if f24_local25 then
					f24_local22 = f24_local25:getInt( "playlist_id" ) --[[ @ 0]]
					if f24_local22 == nil then
						return Lobby.JSON.ErrorParsing( f24_local1, f24_local0, "failed to read 'ruleset_payload.filter.playlist_id'.\n" ), "ruleset_payload:playlist_id"
					end
					f24_local23 = f24_local24:getBool( "forced_empty" ) --[[ @ 0]]
					f24_local25 = {} --[[ @ 0]]
					f24_local26 = 0 --[[ @ 0]]
					local f24_local27 = "" --[[ @ 0]]
					local f24_local28 = f24_local2:getFieldByKey( "game_state" ) --[[ @ 0]]
					if f24_local28 then
						local f24_local29 = f24_local28:getFieldByKey( "valid_map_packs" ) --[[ @ 0]]
						if f24_local29 then
							local f24_local30 = f24_local29:getFieldSize() --[[ @ 0]]
							for f24_local31 = 0 --[[ @ 0]], f24_local30 - 1, 1 do
								f24_local27 = f24_local29:getStringByIndex( f24_local31 ) --[[ @ 0]]
								table.insert( f24_local25, f24_local27 ) --[[ @ 0]]
								f24_local26 = f24_local26 | Lobby.JSON.GetMappackBitsForName( f24_local27 ) --[[ @ 0]]
							end
						end
					end
					f24_local1:endParse() --[[ @ 0]]
					local f24_local29 = Engine[@"hash_6E46D712FE84AF13"]( f24_local7, f24_local8 ) --[[ @ 0]]
					local f24_local30 = {
						lobbyDoc = f24_arg0,
						lobbyID = f24_local3,
						create_time = f24_local4,
						update_id = f24_local6,
						update_time = f24_local5,
						secIdKey = f24_local29,
						secId = f24_local29.secId,
						secKey = f24_local29.secKey,
						secIdBase64Encoded = f24_local7,
						secKeyBase64Encoded = f24_local8,
						expectedPlayers = f24_local20,
						teams = f24_local14,
						lobby_size = f24_local13,
						num_teams = num_teams,
						build_name = f24_local17,
						need_for_dedicated_server = f24_local16,
						playlist_id = f24_local22,
						forced_empty = f24_local23,
						valid_map_pack_bits = f24_local26,
						valid_map_packs = f24_local25
					} --[[ @ 0]]
					Engine[@"PrintInfo"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], "Lobby.MatchmakingAsync.ParseLobbyBackendDoc:" .. "\n lobbyBackendDoc: " .. f24_local30.lobbyDoc .. "\n lobbyID: " .. Engine[@"hash_64C599F1694E23EF"]( f24_local30.lobbyID ) .. "\n updateID: " .. Engine[@"hash_64C599F1694E23EF"]( f24_local30.update_id ) .. "\n secIdBase64Encoded: " .. f24_local30.secIdBase64Encoded .. "\n secKeyBase64Encoded: " .. f24_local30.secKeyBase64Encoded .. "\n playlistID: " .. tostring( f24_local30.playlist_id ) .. "\n" ) --[[ @ 0]]
					return f24_local30, nil
				end
				return Lobby.JSON.ErrorParsing( f24_local1, f24_local0, "failed to read 'ruleset_payload.filter'.\n" ), "ruleset_payload:filter"
			end
			return Lobby.JSON.ErrorParsing( f24_local1, f24_local0, "failed to read 'ruleset_payload' field.\n" ), "ruleset_payload"
		end
		return Lobby.JSON.ErrorParsing( f24_local1, f24_local0, "failed to read 'lobby_size'.\n" ), "lobby_size"
	end
	return Lobby.JSON.ErrorParsing( f24_local1, f24_local0, "failed to read 'dtls' field.\n" ), "dtls"
end
 --[[ @ 0]]
Lobby.JSON.ParseDCQoSInfo = function ( f25_arg0 )
	local f25_local0 = function ( f26_arg0, f26_arg1 )
		Engine[@"PrintError"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], "Lobby.JSON.ParseDCQoSInfo: " .. f26_arg1 ) --[[ @ 0]]
		if f26_arg0 ~= nil then
			f26_arg0:endParse() --[[ @ 0]]
		end
		return nil
	end
	 --[[ @ 0]]
	local f25_local1 = Engine[@"hash_1A4245AC303B4CD5"]() --[[ @ 0]]
	if f25_local1 == nil then
		return f25_local0( nil, "failed to create JSON handle.\n" )
	elseif f25_local1:beginParse( "dcQoSInfo", f25_arg0 .. " " ) == false then
		return f25_local0( f25_local1, "failed to parse dcQoSInfo JSON.\n" )
	end
	local f25_local2 = f25_local1:getRoot() --[[ @ 0]]
	if f25_local2 == nil then
		return f25_local0( f25_local1, "failed to get root of dcQoSInfo JSON.\n" )
	end
	local f25_local3 = f25_local2:getUInt( "num_probes" ) --[[ @ 0]]
	if f25_local3 == nil then
		return f25_local0( f25_local1, "failed to read 'num_probes'.\n" )
	end
	local f25_local4 = f25_local2:getUInt64( "transaction_id" ) --[[ @ 0]]
	if f25_local4 == nil then
		return f25_local0( f25_local1, "failed to read 'transaction_id'.\n" )
	end
	local f25_local5 = f25_local2:getFieldByKey( "hosts" ) --[[ @ 0]]
	if f25_local5 == nil then
		return f25_local0( f25_local1, "failed to read 'hosts' field.\n" )
	end
	local f25_local6 = f25_local5:getFieldSize() --[[ @ 0]]
	if f25_local6 == nil then
		return f25_local0( f25_local1, "failed to read 'hosts' field size.\n" )
	end
	local f25_local7 = {} --[[ @ 0]]
	for f25_local8 = 1 --[[ @ 0]], f25_local6, 1 do
		local f25_local11 = f25_local5:getFieldByIndex( f25_local8 - 1 ) --[[ @ 0]]
		if f25_local11 == nil then
			return f25_local0( f25_local1, "failed to read host field at index " .. tostring( f25_local8 - 1 ) .. " from 'hosts'.\n" )
		end
		local f25_local12 = f25_local11:getString( "security_id" ) --[[ @ 0]]
		if f25_local12 == nil then
			return f25_local0( f25_local1, "failed to read 'security_id'.\n" )
		end
		local f25_local13 = f25_local11:getString( "security_key" ) --[[ @ 0]]
		if f25_local13 == nil then
			return f25_local0( f25_local1, "failed to read 'security_key'.\n" )
		end
		local f25_local14 = f25_local11:getString( "address" ) --[[ @ 0]]
		if f25_local14 == nil then
			return f25_local0( f25_local1, "failed to read 'address'.\n" )
		end
		local f25_local15 = "" --[[ @ 0]]
		if f25_local11:checkIfFieldHasData( "datacenter" ) then
			f25_local15 = f25_local11:getString( "datacenter" ) --[[ @ 0]]
			if f25_local15 == nil then
				Engine[@"PrintError"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], "No datacenter in json, skipping\n" ) --[[ @ 0]]
			end
		end
		local f25_local16 = Engine[@"hash_6E46D712FE84AF13"]( f25_local12, f25_local13 ) --[[ @ 0]]
		local f25_local17 = Engine[@"hash_DF4C7BBB34DA21C"]( f25_local14 ) --[[ @ 0]]
		f25_local3 = tonumber( Engine[@"hash_64C599F1694E23EF"]( f25_local3 ) ) --[[ @ 0]]
		table.insert( f25_local7, {
			secIdKey = f25_local16,
			secId = f25_local16.secId,
			secIdInt64 = f25_local16.secIdInt64,
			secKey = f25_local16.secKey,
			secIdBase64Encoded = f25_local12,
			secKeyBase64Encoded = f25_local13,
			serializedAdr = f25_local17.serializedAdr,
			addressBase64Encoded = f25_local14,
			datacenterBase64Encoded = f25_local15,
			numProbes = f25_local3
		} ) --[[ @ 0]]
	end
	f25_local1:endParse() --[[ @ 0]]
	local f25_local8 = {
		dcQoSInfo = f25_arg0,
		numProbes = f25_local3,
		transactionID = f25_local4,
		qosHosts = f25_local7
	} --[[ @ 0]]
	Engine[@"PrintInfo"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], "Lobby.JSON.ParseDCQoSInfo:" .. "\n dcQoSInfo: " .. f25_local8.dcQoSInfo .. "\n numProbes: " .. tostring( f25_local8.numProbes ) .. "\n transactionID: " .. Engine[@"hash_64C599F1694E23EF"]( f25_local8.transactionID ) .. "\n hosts: cannot display info" .. "\n" ) --[[ @ 0]]
	return f25_local8
end
 --[[ @ 0]]
Lobby.JSON.CreatePlayerInfoDoc = function ( f27_arg0 )
	local f27_local0 = function ( f28_arg0, f28_arg1 )
		Engine[@"PrintError"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], "Lobby.JSON.CreatePlayerInfoDoc: " .. f28_arg1 ) --[[ @ 0]]
		if f28_arg0 ~= nil then
			f28_arg0:endWrite() --[[ @ 0]]
		end
		return nil
	end
	 --[[ @ 0]]
	local f27_local1 = f27_arg0.encodedAddr --[[ @ 0]]
	local f27_local2 = f27_arg0.encodedSecId --[[ @ 0]]
	local f27_local3 = f27_arg0.encodeSecKey --[[ @ 0]]
	local f27_local4 = "" --[[ @ 0]]
	local f27_local5 = "" --[[ @ 0]]
	local f27_local6 = Engine[@"GetNatType"]() --[[ @ 0]]
	if Dvar[@"hash_76C1A042EF5D6CEC"]:exists() then
		local f27_local7 = tonumber( Dvar[@"hash_76C1A042EF5D6CEC"]:get() ) --[[ @ 0]]
		if f27_local7 < 4 then
			f27_local6 = f27_local7 --[[ @ 0]]
			Engine[@"PrintInfo"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], "Lobby.JSON.CreatePlayerInfoDoc: forcing nat type to " .. f27_local6 .. "\n" ) --[[ @ 0]]
		end
	end
	local f27_local7 = Engine[@"GetConnectionType"]() == Enum[@"connectionType_e"][@"hash_4EFC42E21A350493"] --[[ @ 0]]
	local f27_local8 = "" --[[ @ 0]]
	local f27_local9 = "" --[[ @ 0]]
	local f27_local10 = {} --[[ @ 0]]
	local f27_local11 = "t8echoserver" --[[ @ 0]]
	local f27_local12 = "t8echoserver-all-all-all-0" --[[ @ 0]]
	local f27_local13 = Lobby.MatchmakingAsync.GetFullBuildName() --[[ @ 0]]
	Engine[@"PrintInfo"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], "Getting Table of owned mappacks:\n" ) --[[ @ 0]]
	Lobby.JSON.BuildMapPackFlagsTable( f27_local10, Engine[@"hash_FD1E02C14853724"](), Engine[@"OwnSeasonPass"]( Engine[@"GetPrimaryController"]() ) ) --[[ @ 0]]
	Engine[@"hash_2A8F0FED295F69CD"]( f27_arg0.secIdKey.secId, f27_arg0.secIdKey.secKey ) --[[ @ 0]]
	Engine[@"PrintInfo"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], "Enable QoS listener for client: " .. f27_arg0.gamertag .. ", with Sec Id: " .. tostring( f27_arg0.secIdKey.secIdInt64 ) .. ".\n" ) --[[ @ 0]]
	Engine[@"hash_395245C472113FE7"]( true, f27_arg0.secIdKey.secIdInt64 ) --[[ @ 0]]
	local f27_local14 = Engine[@"hash_1A4245AC303B4CD5"]() --[[ @ 0]]
	if f27_local14 == nil then
		return f27_local0( nil, "failed to create JSON handle.\n" )
	elseif f27_local14:beginWrite( "playerInfoDoc" ) == false then
		return f27_local0( f27_local14, "failed to create playerInfoDoc JSON.\n" )
	end
	local f27_local15 = f27_local14:getRoot() --[[ @ 0]]
	if f27_local15 == nil then
		return f27_local0( f27_local14, "failed to get root of playerInfoDoc JSON.\n" )
	elseif f27_local15:setString( "host_address", f27_local1 ) == false then
		return f27_local0( f27_local14, "failed to write 'host_address'.\n" )
	elseif f27_local15:setString( "host_security_id", f27_local2 ) == false then
		return f27_local0( f27_local14, "failed to write 'host_security_id'.\n" )
	elseif f27_local15:setString( "host_security_key", f27_local3 ) == false then
		return f27_local0( f27_local14, "failed to write 'host_security_key'.\n" )
	elseif f27_local15:setString( "build_name", f27_local13 ) == false then
		return f27_local0( f27_local14, "failed to write 'build_name'.\n" )
	elseif f27_local4 ~= nil and string.len( f27_local4 ) > 0 and f27_local15:setString( "build_name_context", f27_local4 ) == false then
		return f27_local0( f27_local14, "failed to write 'build_name_context'.\n" )
	elseif f27_local12 ~= nil and string.len( f27_local12 ) > 0 and f27_local15:setString( "qos_build_name", f27_local12 ) == false then
		return f27_local0( f27_local14, "failed to write 'qos_build_name'.\n" )
	elseif f27_local11 ~= nil and string.len( f27_local11 ) > 0 and f27_local15:setString( "qos_build_name_context", f27_local11 ) == false then
		return f27_local0( f27_local14, "failed to write 'build_name_context'.\n" )
	elseif f27_local5 ~= nil and string.len( f27_local5 ) > 0 and f27_local15:setString( "partial", f27_local5 ) == false then
		return f27_local0( f27_local14, "failed to write 'partial'.\n" )
	elseif f27_local15:setUInt( "nat", f27_local6 ) == false then
		return f27_local0( f27_local14, "failed to write 'nat'.\n" )
	elseif f27_local7 ~= nil and f27_local15:setBool( "wifi", f27_local7 ) == false then
		return f27_local0( f27_local14, "failed to write 'wifi'.\n" )
	elseif f27_local8 ~= nil and string.len( f27_local8 ) > 0 and f27_local15:setString( "mb_ram", f27_local8 ) == false then
		return f27_local0( f27_local14, "failed to write 'mb_ram'.\n" )
	elseif f27_local9 ~= nil and string.len( f27_local9 ) > 0 and f27_local15:setString( "cpu_mhz", f27_local9 ) == false then
		return f27_local0( f27_local14, "failed to write 'cpu_mhz'.\n" )
	end
	local f27_local16 = f27_local15:setField( "maps", LuaEnum.JSON_TYPE.JSON_ARRAY ) --[[ @ 0]]
	if f27_local16 == nil then
		return f27_local0( f27_local14, "failed to set 'maps' field.\n" )
	end
	for f27_local20, f27_local21 in ipairs( f27_local10 ) --[[ @ 0]] do
		if f27_local16:addString( f27_local21 ) == false then
			return f27_local0( f27_local14, "failed to add map( " .. f27_local21 .. " ) to 'maps' field.\n" )
		end
	end
	f27_local17 = f27_local14:getRepresentation() --[[ @ 0]]
	if f27_local17 == nil then
		return f27_local0( f27_local14, "failed (getRepresentation) to get JSON.\n" )
	end
	f27_local14:endWrite() --[[ @ 0]]
	return f27_local17
end
 --[[ @ 0]]
Lobby.JSON.CreateStartSearchParamDoc = function ( f29_arg0 )
	local f29_local0 = "Lobby.JSON.CreateStartSearchParamDoc" --[[ @ 0]]
	local f29_local1 = {} --[[ @ 0]]
	local f29_local2 = "2.0" --[[ @ 0]]
	local f29_local3 = Engine[@"hash_25E804BED092329B"]() --[[ @ 0]]
	local f29_local4 = Engine[@"hash_2B15BEE2BE53060A"]() --[[ @ 0]]
	local f29_local5 = Engine[@"hash_17B3B2B73B53EB34"]() --[[ @ 0]]
	local f29_local6 = Dvar[@"hash_1E20802F756EFAF"]:exists() --[[ @ 0]]
	if f29_local6 then
		f29_local6 = Dvar[@"hash_1E20802F756EFAF"]:get() --[[ @ 0]]
	end
	local f29_local7 = {} --[[ @ 0]]
	local f29_local8, f29_local9 = nil --[[ @ 0]]
	if f29_local6 then
		local f29_local10 = Engine[@"GetGlobalModel"]() --[[ @ 0]]
		f29_local10 = f29_local10.lobbyRoot.searchPlaylistIDs --[[ @ 0]]
		if f29_local10 then
			local f29_local11 = f29_local10.count:get() --[[ @ 0]]
			for f29_local12 = 1 --[[ @ 0]], f29_local11, 1 do
				table.insert( f29_local7, Engine[@"hash_63ACB99DBAD24D55"]( f29_local10[f29_local12]:get() ) ) --[[ @ 0]]
			end
			if #f29_local7 > 0 then
				f29_local5 = f29_local7[1].id --[[ @ 0]]
			end
		end
	end
	local f29_local10 = #f29_local7 > 1 --[[ @ 0]]
	local f29_local11 = Engine[@"hash_63ACB99DBAD24D55"]( f29_local5 ) --[[ @ 0]]
	local f29_local12 = f29_local11.minPlayersToCreate --[[ @ 0]]
	local f29_local13 = f29_local11.maxPlayers --[[ @ 0]]
	local f29_local14 = "" --[[ @ 0]]
	local f29_local15 = false --[[ @ 0]]
	local f29_local16 = 0 --[[ @ 0]]
	local f29_local17 = Engine[@"CurrentSessionMode"]() --[[ @ 0]]
	local f29_local18 = false --[[ @ 0]]
	local f29_local19 = Engine[@"hash_4F75734A98C53D1B"]( f29_local5 ) --[[ @ 0]]
	if f29_local19[@"hash_3378F6E813F4494A"] and not f29_local10 then
		f29_local18 = true --[[ @ 0]]
	end
	if Dvar[@"hash_4E0FB96935DF872D"]:exists() and Dvar[@"hash_4E0FB96935DF872D"]:get() > 0 then
		f29_local16 = Dvar[@"hash_4E0FB96935DF872D"]:get() --[[ @ 0]]
	end
	if Dvar[@"hash_6B0353CA54760727"]:exists() and Dvar[@"hash_6B0353CA54760727"]:get() > 0 and Dvar[@"hash_6B0353CA54760727"]:get() <= #LuaEnum.NeedForDedicatedServerString then
		f29_local9 = Dvar[@"hash_6B0353CA54760727"]:get() --[[ @ 0]]
	end
	local f29_local20 = LobbyData.GetCurrentMenuTarget() --[[ @ 0]]
	local f29_local21 = Engine[@"hash_2786FFC9E621CAB7"]() --[[ @ 0]]
	Lobby.MatchmakingAsync.MatchmakingSearchSummaryLog[@"hash_522C2D85063EC515"] = f29_local21 --[[ @ 0]]
	Lobby.MatchmakingAsync.PartyToMatchSummary[@"hash_522C2D85063EC515"] = f29_local21 --[[ @ 0]]
	if f29_arg0 == nil and f29_local11.mainMode ~= f29_local20[@"hash_EB7DDC7F079D51B"] then
		Lobby.JSON.ErrorWrite( nil, f29_local0, "Playlist entry mainMode and lobby mainMode Don't match!!" ) --[[ @ 0]]
		return nil
	elseif f29_local20[@"hash_EB7DDC7F079D51B"] == Enum[@"LobbyMainMode"][@"hash_379D01499920B292"] or f29_local20[@"hash_EB7DDC7F079D51B"] == Enum[@"LobbyMainMode"][@"hash_37B50049993542C0"] then
		f29_local8 = 1 --[[ @ 0]]
	elseif f29_local20[@"hash_EB7DDC7F079D51B"] == Enum[@"LobbyMainMode"][@"hash_378C124999125C42"] then
		f29_local8 = 1 --[[ @ 0]]
		if Dvar[@"hash_2A546240BBE08638"]:exists() and Dvar[@"hash_2A546240BBE08638"]:get() then
			f29_local9 = LuaEnum.NeedForDedicatedServer.NOT_NEEDED --[[ @ 0]]
		end
		local f29_local22 = Engine[@"hash_E00882E35AF63D2"]( Enum[@"LobbyModule"][@"hash_298EA1BB7164D103"], Enum[@"LobbyType"][@"hash_20A1647599284110"] ) --[[ @ 0]]
		if f29_local22 ~= nil then
			f29_local15 = f29_local22.fillParty --[[ @ 0]]
		end
	end
	if LuaDefine.isPCClient and f29_local20[@"hash_EB7DDC7F079D51B"] == Enum[@"LobbyMainMode"][@"hash_37E41449995CD57E"] and Dvar[@"hash_203617F20591CC64"]:exists() and Dvar[@"hash_203617F20591CC64"]:get() then
		f29_local9 = LuaEnum.NeedForDedicatedServer.REQUIRED --[[ @ 0]]
	end
	if f29_local20[@"LobbyMode"] == Enum[@"LobbyMode"][@"hash_6D42D003CEEA3F87"] then
		if Dvar[@"hash_7AAD4C8A3747B359"]:exists() and Dvar[@"hash_7AAD4C8A3747B359"]:get() then
			f29_local9 = LuaEnum.NeedForDedicatedServer.NOT_NEEDED --[[ @ 0]]
		end
		if Dvar[@"hash_2781206C11C8B523"]:exists() then
			f29_local17 = f29_local17 + Dvar[@"hash_2781206C11C8B523"]:get() --[[ @ 0]]
		end
	end
	local f29_local22 = f29_local8 --[[ @ 0]]
	if f29_local22 == nil then
		if f29_local13 > 18 then
			local f29_local23 = 1 --[[ @ 0]]
		end
		f29_local22 = f29_local23 or 2 --[[ @ 0]]
	end
	if f29_local9 == nil then
		local f29_local24 = f29_local11.searchType --[[ @ 0]]
	end
	if Dvar[@"hash_E4D6FF240788F81"]:exists() and Dvar[@"hash_E4D6FF240788F81"]:get() then
		f29_local14 = LuaDefine.T8_BUILD_NAME --[[ @ 0]]
		if LuaDefine.isPS4Client then
			f29_local14 = f29_local14 .. "-ps4" --[[ @ 0]]
		elseif LuaDefine.isXboxClient then
			f29_local14 = f29_local14 .. "-xb1" --[[ @ 0]]
		elseif LuaDefine.isPCClient then
			f29_local14 = f29_local14 .. "-pc" --[[ @ 0]]
		else
			error( "Unsupported platform" ) --[[ @ 0]]
		end
		if f29_local20[@"hash_EB7DDC7F079D51B"] == Enum[@"LobbyMainMode"][@"hash_378C124999125C42"] then
			f29_local14 = f29_local14 .. "-wz" --[[ @ 0]]
			if Dvar[@"hash_1AFE8B91B7B953C3"]:exists() then
				suffix = "100" --[[ @ 0]]
				f29_local14 = f29_local14 .. "-" .. suffix --[[ @ 0]]
			end
		elseif f29_local20[@"hash_EB7DDC7F079D51B"] == Enum[@"LobbyMainMode"][@"hash_37E41449995CD57E"] then
			f29_local14 = f29_local14 .. "-mp" --[[ @ 0]]
		end
	end
	Engine[@"PrintInfo"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], f29_local0 .. "\n buildNameContext: " .. f29_local14 .. "\n" ) --[[ @ 0]]
	local f29_local25 = "" --[[ @ 0]]
	if Dvar[@"hash_15909CF2A6D2C500"]:exists() and Dvar[@"hash_15909CF2A6D2C500"]:get() then
		f29_local25 = Lobby.MatchmakingAsync.GetFullBuildName() .. " - " .. f29_local14 --[[ @ 0]]
	end
	Engine[@"SetModelValue"]( Engine[@"CreateModel"]( Engine[@"GetGlobalModel"](), "fullBuildNameContext" ), f29_local25 ) --[[ @ 0]]
	local f29_local26 = f29_local11.usedDLCMask --[[ @ 0]]
	local f29_local27 = false --[[ @ 0]]
	local f29_local28 = Engine[@"hash_69882F293C327557"]() --[[ @ 0]]
	local f29_local29 = Engine[@"hash_1A4245AC303B4CD5"]() --[[ @ 0]]
	if f29_local29 == nil then
		return Lobby.JSON.ErrorWrite( f29_local29, f29_local0, "failed to create JSON handle." )
	elseif f29_local29:beginWrite( "playerInfoDoc" ) == false then
		return Lobby.JSON.ErrorWrite( f29_local29, f29_local0, "failed to create playerInfoDoc JSON." )
	end
	local f29_local30 = f29_local29:getRoot() --[[ @ 0]]
	if f29_local30 == nil then
		return Lobby.JSON.ErrorWrite( f29_local29, f29_local0, "failed to get root of playerInfoDoc JSON." )
	end
	local f29_local31 = Lobby.JSON.CreateArrayAndAddToLocation( f29_local29, f29_local30, "members" ) --[[ @ 0]]
	local f29_local32 = Lobby.JSON.CreateArrayAndAddToLocation( f29_local29, f29_local30, "tokens" ) --[[ @ 0]]
	if f29_local31 == nil or f29_local32 == nil then
		return Lobby.JSON.ErrorWrite( f29_local29, f29_local0, "failed to create arrays for 'members' or 'tokens' array field." )
	end
	local f29_local33 = Engine[@"hash_4755D55B3813D249"]( Enum[@"LobbyModule"][@"hash_298EA1BB7164D103"], Enum[@"LobbyType"][@"hash_20A1647599284110"] ) --[[ @ 0]]
	local f29_local34 = {} --[[ @ 0]]
	for f29_local38, f29_local39 in ipairs( f29_local33.sessionClients ) --[[ @ 0]] do
		f29_local31:addUInt64( f29_local39.xuid ) --[[ @ 0]]
		f29_local32:addUInt64( f29_local39.asyncMatchmakingToken ) --[[ @ 0]]
		f29_local34[#f29_local34 + 1] = f29_local39.xuid --[[ @ 0]]
	end
	if f29_arg0 ~= nil then
		if f29_local30:setUInt64( "user_to_join", f29_arg0 ) == false then
			return Lobby.JSON.ErrorWrite( f29_local29, f29_local0, "failed to write 'user_to_join'.\n" )
		end
	else
		if f29_local6 then
			f29_local35 = Lobby.JSON.CreateArrayAndAddToLocation( f29_local29, f29_local30, "playlist_config" ) --[[ @ 0]]
			if f29_local35 == nil then
				return Lobby.JSON.ErrorWrite( f29_local29, f29_local0, "Failed to create playlist_config array." )
			end
			for f29_local39, f29_local44 in ipairs( f29_local7 ) --[[ @ 0]] do
				local f29_local41 = f29_local8 --[[ @ 0]]
				if f29_local41 == nil then
					if f29_local44.maxPlayers > 18 then
						local f29_local40 = 1 --[[ @ 0]]
					end
					f29_local41 = f29_local40 or 2 --[[ @ 0]]
				end
				if f29_local9 == nil and (f29_local44.searchType == LuaEnum.NeedForDedicatedServer.REQUIRED or f29_local44.searchType == LuaEnum.NeedForDedicatedServer.BEST_EFFORT and f29_local24 == LuaEnum.NeedForDedicatedServer.NOT_NEEDED) then
					local f29_local24 = f29_local44.searchType --[[ @ 0]]
				end
				f29_local26 = f29_local26 | f29_local44.usedDLCMask --[[ @ 0]]
				local f29_local42 = f29_local35:addField( LuaEnum.JSON_TYPE.JSON_OBJECT ) --[[ @ 0]]
				if f29_local42 == nil then
					return Lobby.JSON.ErrorWrite( f29_local29, f29_local0, "Failed to add field to playlist_config array." )
				end
				local f29_local43 = Lobby.JSON.CreateArrayAndAddToLocation( f29_local29, f29_local42, "playlist_ids" ) --[[ @ 0]]
				if f29_local43 == nil then
					return Lobby.JSON.ErrorWrite( f29_local29, f29_local0, "Failed to create playlist_ids array in playlist_config." )
				elseif f29_local43:addUInt( f29_local44.id ) == false then
					return Lobby.JSON.ErrorWrite( f29_local29, f29_local0, "Failed to add id " .. f29_local44.id .. " to playlist_ids array." )
				elseif f29_local42:setUInt( "min_slots", f29_local44.minPlayersToCreate ) == false then
					return Lobby.JSON.ErrorWrite( f29_local29, f29_local0, "Failed to set min_slots to " .. f29_local44.minPlayersToCreate .. " in playlist_config." )
				elseif f29_local42:setUInt( "max_slots", f29_local44.maxPlayers ) == false then
					return Lobby.JSON.ErrorWrite( f29_local29, f29_local0, "Failed to set max_slots to " .. f29_local44.maxPlayers .. " in playlist_config." )
				elseif f29_local42:setUInt( "num_teams", f29_local41 ) == false then
					return Lobby.JSON.ErrorWrite( f29_local29, f29_local0, "Failed to set num_teams to " .. f29_local41 .. " in playlist_config." )
				end
			end
		end
		f29_local35 = Lobby.JSON.CreateFieldAndAddToLocation( f29_local29, f29_local30, "lobby_slots" ) --[[ @ 0]]
		if f29_local35 == nil then
			return Lobby.JSON.ErrorWrite( f29_local29, f29_local0, "Failed to create Lobby_slots" )
		elseif f29_local35:setUInt( "max", f29_local13 ) == false then
			return Lobby.JSON.ErrorWrite( f29_local29, f29_local0, "Failed to set lobby_slots.max" )
		elseif f29_local35:setUInt( "min", f29_local12 ) == false then
			return Lobby.JSON.ErrorWrite( f29_local29, f29_local0, "Failed to set lobby_slots.max" )
		end
		f29_local36 = Lobby.JSON.CreateFieldAndAddToLocation( f29_local29, f29_local30, "dedicated_server" ) --[[ @ 0]]
		if f29_local36 == nil then
			return Lobby.JSON.ErrorWrite( f29_local29, f29_local0, "Failed to create dedicated_server" )
		elseif f29_local36:setString( "request_level", LuaEnum.NeedForDedicatedServerString[f29_local24] ) == false then
			return Lobby.JSON.ErrorWrite( f29_local29, f29_local0, "Failed to set 'request_level'" )
		elseif f29_local36:setString( "build_name_context", f29_local14 ) == false then
			return Lobby.JSON.ErrorWrite( f29_local29, f29_local0, "failed to write 'build_name_context'." )
		end
		f29_local38 = Lobby.JSON.CreateFieldAndAddToLocation( f29_local29, f29_local30, "team_balance" ) --[[ @ 0]]
		if f29_local38 == nil then
			return Lobby.JSON.ErrorWrite( f29_local29, f29_local0, "Failed to create team_balance" )
		elseif f29_local38:setUInt( "num_teams", f29_local22 ) == false then
			return Lobby.JSON.ErrorWrite( f29_local29, f29_local0, "Failed to set 'num_teams'" )
		end
		f29_local39 = Lobby.JSON.CreateFieldAndAddToLocation( f29_local29, f29_local30, "ruleset_payload" ) --[[ @ 0]]
		if f29_local39 == nil then
			return Lobby.JSON.ErrorWrite( f29_local29, f29_local0, "Failed to create ruleset_payload" )
		end
		local f29_local44 = Lobby.JSON.CreateFieldAndAddToLocation( f29_local29, f29_local39, "filter" ) --[[ @ 0]]
		if f29_local44 == nil then
			return Lobby.JSON.ErrorWrite( f29_local29, f29_local0, "Failed to create 'filter'" )
		elseif Dvar[@"hash_24BAF85486280784"]:get() == true or Dvar[@"hash_717148A4FB179B6C"]:get() == true then
			Dvar[@"hash_24BAF85486280784"]:set( false ) --[[ @ 0]]
			if Dvar[@"hash_717148A4FB179B6C"]:get() == false then
				Dvar[@"hash_2A546240BBE08638"]:set( false ) --[[ @ 0]]
			end
			if f29_local39:setBool( "force_host_of_empty_new_lobby", true ) == false then
				return Lobby.JSON.ErrorWrite( f29_local29, f29_local0, "Failed to set 'force_host_of_empty_new_lobby'" )
			end
		end
		if f29_local44:setString( "matchmaking_version", f29_local2 ) == false then
			return Lobby.JSON.ErrorWrite( f29_local29, f29_local0, "Failed to set 'matchmaking_version'" )
		elseif f29_local44:setUInt64( "netcode_version", f29_local3 ) == false then
			return Lobby.JSON.ErrorWrite( f29_local29, f29_local0, "failed to write 'netcode_version'." )
		elseif f29_local44:setUInt( "playlist_version", f29_local4 ) == false then
			return Lobby.JSON.ErrorWrite( f29_local29, f29_local0, "failed to write 'playlist_version'." )
		end
		local f29_local42 = f29_local44 --[[ @ 0]]
		local f29_local41 = f29_local44.setUInt --[[ @ 0]]
		local f29_local43 = "playlist_id" --[[ @ 0]]
		local f29_local45 --[[ @ 0]]
		if f29_local10 then
			f29_local45 = 0 --[[ @ 0]]
			if not f29_local45 then
			
			else
				if f29_local41( f29_local42, f29_local43, f29_local45 ) == false then
					return Lobby.JSON.ErrorWrite( f29_local29, f29_local0, "failed to write 'playlist_id'." )
				elseif LuaDefine.isPC and Dvar[@"hash_2C8DE5D729904677"]:get() and f29_local44:setString( "online_matchmaking_restrict", Engine[@"hash_69A70B14679D905C"]() ) == false then
					return Lobby.JSON.ErrorWrite( f29_local29, f29_local0, "failed to write 'bnet_region'." )
				end
				f29_local41 = Lobby.JSON.CreateArrayAndAddToLocation( f29_local29, f29_local39, "playlist_map_packs" ) --[[ @ 0]]
				if f29_local41 == nil then
					return Lobby.JSON.ErrorWrite( f29_local29, f29_local0, "failed to write 'playlist_map_packs'." )
				end
				Engine[@"PrintInfo"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], "Getting Table of mappacks in the Playlist:\n" ) --[[ @ 0]]
				f29_local42 = {} --[[ @ 0]]
				Lobby.JSON.BuildMapPackFlagsTable( f29_local42, f29_local26 ) --[[ @ 0]]
				for f29_local47, f29_local48 in ipairs( f29_local42 ) --[[ @ 0]] do
					if f29_local41:addString( f29_local48 ) == false then
						return Lobby.JSON.ErrorWrite( f29_local29, f29_local0, "failed to add map( " .. f29_local48 .. " ) to 'playlist_map_packs' field." )
					end
				end
				for f29_local47, f29_local48 in ipairs( f29_local11.rules ) --[[ @ 0]] do
					if f29_local48.name == @"hash_6E535D66F4F89AE5" then
						if #f29_local48.value > 0 then
							local f29_local49 = f29_local48.value --[[ @ 0]]
							local f29_local50 = Lobby.JSON.CreateArrayAndAddToLocation( f29_local29, f29_local39, "force_datacenters" ) --[[ @ 0]]
							if f29_local50 == nil then
								return Lobby.JSON.ErrorWrite( f29_local29, f29_local0, "failed to write 'force_datacenters'." )
							elseif f29_local50:addString( f29_local49 ) == false then
							
							else
								Engine[@"PrintInfo"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], "asyncMatchmakingStartDoc: forcing datacenter to  " .. f29_local49 .. "\n" ) --[[ @ 0]]
								break
							end
							return Lobby.JSON.ErrorWrite( f29_local29, f29_local0, "failed to add forcedc( " .. f29_local49 .. " ) to 'force_datacenters' field." )
						end
					end
				end
				if f29_local39:setBool( "fill_party", f29_local15 ) == false then
					Lobby.JSON.ErrorWrite( nil, f29_local0, "Failed to set 'fill_party'" ) --[[ @ 0]]
				end
				if f29_local39:setUInt( "affinity_id", f29_local16 ) == false then
					Lobby.JSON.ErrorWrite( nil, f29_local0, "Failed to set 'affinity_id'" ) --[[ @ 0]]
				end
				if f29_local18 == true and f29_local39:setBool( "use_skill", true ) == false then
					Lobby.JSON.ErrorWrite( nil, f29_local0, "Failed to set 'use_skill'" ) --[[ @ 0]]
				end
				if f29_local39:setUInt( "game_type", f29_local17 ) == false then
					Lobby.JSON.ErrorWrite( nil, f29_local0, "Failed to set 'game_type'" ) --[[ @ 0]]
				end
				f29_local43 = Lobby.JSON.CreateFieldAndAddToLocation( f29_local29, f29_local30, "player_ruleset_payloads" ) --[[ @ 0]]
				if f29_local43 == nil then
					return Lobby.JSON.ErrorWrite( f29_local29, f29_local0, "Failed to create player_ruleset_payload" )
				end
				for f29_local48, f29_local49 in ipairs( f29_local33.sessionClients ) --[[ @ 0]] do
					local f29_local54 = Lobby.JSON.CreateFieldAndAddToLocation( f29_local29, f29_local43, Engine[@"hash_64C599F1694E23EF"]( f29_local49.xuid ) ) --[[ @ 0]]
					f29_local54:setBool( "mic", f29_local49.VOIPStatus == Enum[@"eVoipStatus"][@"hash_3ABB324E88F12789"] ) --[[ @ 0]]
					f29_local54:setBool( "splitscreen", f29_local49.isSplitscreenClient ) --[[ @ 0]]
					if f29_local48 == 1 then
						local f29_local51 = Engine[@"GetPrimaryController"]() --[[ @ 0]]
						local f29_local52 = nil --[[ @ 0]]
						if f29_local20[@"hash_EB7DDC7F079D51B"] == Enum[@"LobbyMainMode"][@"hash_379D01499920B292"] then
							f29_local52 = Engine[@"StorageGetBuffer"]( f29_local51, Enum[@"StorageFileType"][@"hash_2EC77AD28A19F8E0"] ) --[[ @ 0]]
						elseif f29_local20[@"hash_EB7DDC7F079D51B"] == Enum[@"LobbyMainMode"][@"hash_37E41449995CD57E"] then
							f29_local52 = Engine[@"StorageGetBuffer"]( f29_local51, Enum[@"StorageFileType"][@"hash_6FDE358A242AFA2C"] ) --[[ @ 0]]
						end
						if f29_local52 then
							local f29_local53 = Lobby.JSON.CreateFieldAndAddToLocation( f29_local29, f29_local54, "match_participation_history" ) --[[ @ 0]]
							if f29_local53 then
								f29_local53:setUInt( "host_total_match_count_from_go", f29_local52.match_participation_history.host_total_match_count_from_go:get() ) --[[ @ 0]]
								f29_local53:setUInt( "host_disrupted_match_count_from_go", f29_local52.match_participation_history.host_disrupted_match_count_from_go:get() ) --[[ @ 0]]
								f29_local53:setUInt( "host_consecutive_success_count_from_go", f29_local52.match_participation_history.host_consecutive_success_count_from_go:get() ) --[[ @ 0]]
								f29_local53:setUInt( "host_consecutive_disrupted_count_from_go", f29_local52.match_participation_history.host_consecutive_disrupted_count_from_go:get() ) --[[ @ 0]]
								f29_local53:setUInt( "host_migration_attempted_count_from_go", f29_local52.match_participation_history.host_migration_attempted_count_from_go:get() ) --[[ @ 0]]
								f29_local53:setUInt( "host_migration_successful_count_from_go", f29_local52.match_participation_history.host_migration_successful_count_from_go:get() ) --[[ @ 0]]
							end
						end
					end
				end
				f29_local45 = Lobby.JSON.CreateFieldAndAddToLocation( f29_local29, f29_local30, "performance" ) --[[ @ 0]]
				if f29_local45 == nil then
					return Lobby.JSON.ErrorWrite( f29_local29, f29_local0, "Failed to create performance" )
				elseif f29_local45:setUInt( "game_type", f29_local17 ) == false then
					Lobby.JSON.ErrorWrite( nil, f29_local0, "Failed to set 'game_type'" ) --[[ @ 0]]
				end
			end
		end
		f29_local45 = f29_local5 --[[ @ 0]]
	end
	f29_local35 = f29_local29:getRepresentation() --[[ @ 0]]
	if f29_local35 == nil then
		return Lobby.JSON.ErrorWrite( f29_local29, f29_local0, "failed (getRepresentation) to get JSON.\n" )
	end
	f29_local29:endWrite() --[[ @ 0]]
	Engine[@"PrintInfo"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], f29_local0 .. "\n asyncMatchmakingStartDoc: " .. f29_local35 .. "\n" ) --[[ @ 0]]
	return f29_local35, f29_local34
end
 --[[ @ 0]]
Lobby.JSON.ParseAsyncMatchmakingStartDoc = function ( f30_arg0 )
	local f30_local0 = "Lobby.JSON.ParseAsyncMatchmakingStartDoc" --[[ @ 0]]
	local f30_local1 = Engine[@"hash_1A4245AC303B4CD5"]() --[[ @ 0]]
	if f30_local1 == nil then
		return Lobby.JSON.ErrorParsing( nil, f30_local0, "failed to create JSON handle.\n" )
	elseif f30_local1:beginParse( "asyncMatchmakingStartDoc", f30_arg0 .. " " ) == false then
		return Lobby.JSON.ErrorParsing( f30_local1, f30_local0, "failed to parse dcQoSInfo JSON.\n" )
	else
		local f30_local2 = f30_local1:getRoot() --[[ @ 0]]
		if f30_local2 == nil then
			return Lobby.JSON.ErrorParsing( f30_local1, f30_local0, "failed to get root of dcQoSInfo JSON.\n" )
		else
			local f30_local3 = f30_local2:getUInt( "estimated_wait_time" ) --[[ @ 0]]
			if f30_local3 == nil then
				return Lobby.JSON.ErrorParsing( f30_local1, f30_local0, "failed to read 'estimated_wait_time'.\n" )
			else
				local f30_local4 = f30_local2:getUInt64( "mm_id" ) --[[ @ 0]]
				if f30_local4 == nil then
					return Lobby.JSON.ErrorParsing( f30_local1, f30_local0, "failed to read 'mm_id'.\n" )
				else
					f30_local1:endParse() --[[ @ 0]]
					local f30_local5 = {
						asyncMatchmakingStartDoc = f30_arg0,
						estimatedWaitTime = tonumber( Engine[@"hash_64C599F1694E23EF"]( f30_local3 ) ),
						mm_id = f30_local4
					} --[[ @ 0]]
					Engine[@"PrintInfo"]( Enum[@"hash_77A63DCD561B0FA8"][@"hash_78E4EED9A90F9B5E"], "Lobby.JSON.ParseAsyncMatchmakingStartDoc:" .. "\n asyncMatchmakingStartDoc: " .. f30_local5.asyncMatchmakingStartDoc .. "\n estimatedWaitTime: " .. tostring( f30_local5.estimatedWaitTime ) .. "\n MatchmakindID: " .. Engine[@"hash_64C599F1694E23EF"]( f30_local4 ) .. "\n" ) --[[ @ 0]]
					return f30_local5
				end
			end
		end
	end
end
 --[[ @ 0]]
