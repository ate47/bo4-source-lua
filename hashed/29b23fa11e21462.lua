-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:49
CoD.DirectorTagsUI3DPlayer = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.DirectorTagsUI3DPlayer.__defaultWidth = 100 --[[ @ 0]]
CoD.DirectorTagsUI3DPlayer.__defaultHeight = 100 --[[ @ 0]]
CoD.DirectorTagsUI3DPlayer.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.DirectorTagsUI3DPlayer ) --[[ @ 0]]
	self.id = "DirectorTagsUI3DPlayer" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local tag = LUI.UIImage.new( 0, 1, 5, -5, 0, 1, 5, -5 ) --[[ @ 0]]
	tag:linkToElementModel( self, "sprayGestureIndex", true, function ( model )
		local f2_local0 = model:get() --[[ @ 0]]
		if f2_local0 ~= nil then
			tag:setImage( RegisterImage( CoD.PlayerRoleUtility.GetTagIconFromIndex( f2_local0 ) ) ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( tag ) --[[ @ 0]]
	self.tag = tag --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "Hidden",
			condition = function ( menu, element, event )
				local f3_local0 --[[ @ 0]]
				if not CoD.ModelUtility.IsSelfModelValueTrue( element, f1_arg1, "visible" ) then
					f3_local0 = CoD.ModelUtility.IsSelfModelValueGreaterThanOrEqualTo( element, f1_arg1, "sprayGestureIndex", 0 ) --[[ @ 0]]
				else
					f3_local0 = false --[[ @ 0]]
				end
				return f3_local0
			end
		}
	} ) --[[ @ 0]]
	self:linkToElementModel( self, "visible", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "visible"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:linkToElementModel( self, "sprayGestureIndex", true, function ( model )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = model:get(),
			modelName = "sprayGestureIndex"
		} ) --[[ @ 0]]
	end ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.DirectorTagsUI3DPlayer.__resetProperties = function ( f6_arg0 )
	f6_arg0.tag:completeAnimation() --[[ @ 0]]
	f6_arg0.tag:setAlpha( 1 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.DirectorTagsUI3DPlayer.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f7_arg0, f7_arg1 )
			f7_arg0:__resetProperties() --[[ @ 0]]
			f7_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	Hidden = {
		DefaultClip = function ( f8_arg0, f8_arg1 )
			f8_arg0:__resetProperties() --[[ @ 0]]
			f8_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f8_arg0.tag:completeAnimation() --[[ @ 0]]
			f8_arg0.tag:setAlpha( 0 ) --[[ @ 0]]
			f8_arg0.clipFinished( f8_arg0.tag ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.DirectorTagsUI3DPlayer.__onClose = function ( f9_arg0 )
	f9_arg0.tag:close() --[[ @ 0]]
end
 --[[ @ 0]]
