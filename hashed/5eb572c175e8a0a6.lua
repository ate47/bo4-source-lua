-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:50
require( "x64:be52530c0ca57a1" ) --[[ @ 0]]
require( "x64:187b99331f9f0f2e" ) --[[ @ 0]]
require( "x64:5faa5e2f0fd53709" ) --[[ @ 0]]
require( "x64:35653ef4ad2299d" ) --[[ @ 0]]
require( "x64:4b1b346e32476a2e" ) --[[ @ 0]]

CoD.ReservesCrateCarousel = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.ReservesCrateCarousel.__defaultWidth = 248 --[[ @ 0]]
CoD.ReservesCrateCarousel.__defaultHeight = 462 --[[ @ 0]]
CoD.ReservesCrateCarousel.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	CoD.BaseUtility.InitControllerModelIfNotSet( f1_arg1, "updateCrateBundleOffers", 0 ) --[[ @ 0]]
	self:setClass( CoD.ReservesCrateCarousel ) --[[ @ 0]]
	self.id = "ReservesCrateCarousel" --[[ @ 0]]
	self.soundSet = "default" --[[ @ 0]]
	self.onlyChildrenFocusable = true --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local CrateCarousel = LUI.UIList.new( f1_arg0, f1_arg1, 12, 0, nil, true, false, false, false ) --[[ @ 0]]
	CrateCarousel:setLeftRight( 0.5, 0.5, -124, 124 ) --[[ @ 0]]
	CrateCarousel:setTopBottom( 0.5, 0.5, -231, 231 ) --[[ @ 0]]
	CrateCarousel:setWidgetType( CoD.ReservesLootCrateButtonContainer ) --[[ @ 0]]
	CrateCarousel:setSpacing( 12 ) --[[ @ 0]]
	CrateCarousel:setAlignment( Enum[@"luialignment"][@"lui_alignment_left"] ) --[[ @ 0]]
	CrateCarousel:setHorizontalCounter( CoD.horizontalCounterTriggerPrompts ) --[[ @ 0]]
	CrateCarousel:setDataSource( "ReservesLootPurchaseItems" ) --[[ @ 0]]
	local f1_local2 = CrateCarousel --[[ @ 0]]
	local f1_local3 = CrateCarousel.subscribeToModel --[[ @ 0]]
	local f1_local4 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local3( f1_local2, f1_local4["LootStreamProgress.allRngUnlocked"], function ( f2_arg0, f2_arg1 )
		CoD.Menu.UpdateButtonShownState( f2_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	f1_local2 = CrateCarousel --[[ @ 0]]
	f1_local3 = CrateCarousel.subscribeToModel --[[ @ 0]]
	f1_local4 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local3( f1_local2, f1_local4["LootStreamProgress.codPoints"], function ( f3_arg0, f3_arg1 )
		CoD.Menu.UpdateButtonShownState( f3_arg1, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	CrateCarousel:registerEventHandler( "gain_list_focus", function ( element, event )
		local f4_local0 = nil --[[ @ 0]]
		SetControllerModelValue( f1_arg1, "reservesViewingCrates", false ) --[[ @ 0]]
		CoD.GridAndListUtility.DisableAutoScrolling( f1_arg1, element ) --[[ @ 0]]
		return f4_local0
	end ) --[[ @ 0]]
	CrateCarousel:registerEventHandler( "lose_list_focus", function ( element, event )
		local f5_local0 = nil --[[ @ 0]]
		SetControllerModelValue( f1_arg1, "reservesViewingCrates", true ) --[[ @ 0]]
		CoD.GridAndListUtility.ReEnableAutoScrolling( f1_arg1, element ) --[[ @ 0]]
		return f5_local0
	end ) --[[ @ 0]]
	CrateCarousel:registerEventHandler( "gain_focus", function ( element, event )
		local f6_local0 = nil --[[ @ 0]]
		if element.gainFocus then
			f6_local0 = element:gainFocus( event ) --[[ @ 0]]
		elseif element.super.gainFocus then
			f6_local0 = element.super:gainFocus( event ) --[[ @ 0]]
		end
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_rtrig"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_ltrig"] ) --[[ @ 0]]
		CoD.Menu.UpdateButtonShownState( element, f1_arg0, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"] ) --[[ @ 0]]
		return f6_local0
	end ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( CrateCarousel, f1_arg1, Enum[@"luibutton"][@"lui_key_rtrig"], "MWHEELDOWN", function ( element, menu, controller, model )
		if not IsRepeatButtonPress( model ) then
			CoD.GridAndListUtility.NavigateGridItemOnParentGridOrList( element, controller, true ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsRepeatButtonPress( nil ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_rtrig"], @"hash_0", nil, "MWHEELDOWN" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( CrateCarousel, f1_arg1, Enum[@"luibutton"][@"lui_key_ltrig"], "MWHEELUP", function ( element, menu, controller, model )
		if not IsRepeatButtonPress( model ) then
			CoD.GridAndListUtility.NavigateGridItemOnParentGridOrList( element, controller, false ) --[[ @ 0]]
			return true
		else
			
		end
	end, function ( element, menu, controller )
		if not IsRepeatButtonPress( nil ) then
			CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_ltrig"], @"hash_0", nil, "MWHEELUP" ) --[[ @ 0]]
			return false
		else
			return false
		end
	end, false ) --[[ @ 0]]
	f1_arg0:AddButtonCallbackFunction( CrateCarousel, f1_arg1, Enum[@"luibutton"][@"lui_key_xba_pscross"], nil, function ( element, menu, controller, model )
		if CoD.ModelUtility.IsControllerModelValueTrue( controller, "LootStreamProgress.allRngUnlocked" ) then
			CoD.BlackMarketUtility.OpenAllReservesOwnedDialog( menu, controller ) --[[ @ 0]]
			return true
		elseif CanPurchaseItem( controller, element ) then
			OpenOverlay( self, "PurchaseReservesItem", controller, {
				_model = element:getModel()
			} ) --[[ @ 0]]
			PlaySoundAlias( "uin_toggle_generic" ) --[[ @ 0]]
			return true
		else
			OpenPopup( self, "PurchaseCodPoints", controller, element:getModel() ) --[[ @ 0]]
			return true
		end
	end, function ( element, menu, controller )
		CoD.Menu.SetButtonLabel( menu, Enum[@"luibutton"][@"lui_key_xba_pscross"], @"menu/purchase", nil, nil ) --[[ @ 0]]
		return true
	end, false ) --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalFirst( CrateCarousel, "updateDataSource", function ( element, controller, f13_arg2, f13_arg3 )
		CoD.GridAndListUtility.SetFocusToFirstSelectableItem( element ) --[[ @ 0]]
	end ) --[[ @ 0]]
	CrateCarousel:subscribeToGlobalModel( f1_arg1, "PerController", "updateCrateBundleOffers", function ( model )
		CoD.GridAndListUtility.UpdateDataSource( CrateCarousel, false, true, true ) --[[ @ 0]]
	end ) --[[ @ 0]]
	self:addElement( CrateCarousel ) --[[ @ 0]]
	self.CrateCarousel = CrateCarousel --[[ @ 0]]
	
	self:mergeStateConditions( {
		{
			stateName = "KBM",
			condition = function ( menu, element, event )
				return IsPC() and IsMouseOrKeyboard( f1_arg1 )
			end
		}
	} ) --[[ @ 0]]
	self:appendEventHandler( "input_source_changed", function ( f16_arg0, f16_arg1 )
		f16_arg1.menu = f16_arg1.menu or f1_arg0 --[[ @ 0]]
		f1_arg0:updateElementState( self, f16_arg1 ) --[[ @ 0]]
	end ) --[[ @ 0]]
	f1_local2 = self --[[ @ 0]]
	f1_local3 = self.subscribeToModel --[[ @ 0]]
	f1_local4 = Engine[@"getmodelforcontroller"]( f1_arg1 ) --[[ @ 0]]
	f1_local3( f1_local2, f1_local4.LastInput, function ( f17_arg0 )
		f1_arg0:updateElementState( self, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f17_arg0:get(),
			modelName = "LastInput"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	CrateCarousel.id = "CrateCarousel" --[[ @ 0]]
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	f1_local3 = self --[[ @ 0]]
	f1_local3 = CrateCarousel --[[ @ 0]]
	CoD.BaseUtility.DisableNavigation( f1_local3 ) --[[ @ 0]]
	SetElementProperty( f1_local3, "__loopOnSameRow", true ) --[[ @ 0]]
	SetElementProperty( f1_local3, "__allowCreateOnLoop", true ) --[[ @ 0]]
	CoD.BlackMarketUtility.InitialHideScrollPrompts( self, f1_arg1, f1_local3 ) --[[ @ 0]]
	CoD.BlackMarketUtility.ShopCycleThroughItems( f1_arg0, f1_arg1, f1_local3, 0.5 ) --[[ @ 0]]
	CoD.GridAndListUtility.SetFocusToFirstSelectableItem( f1_local3 ) --[[ @ 0]]
	return self
end
 --[[ @ 0]]
CoD.ReservesCrateCarousel.__resetProperties = function ( f18_arg0 )
	f18_arg0.CrateCarousel:completeAnimation() --[[ @ 0]]
	f18_arg0.CrateCarousel:setHorizontalCounter( CoD.horizontalCounterTriggerPrompts ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.ReservesCrateCarousel.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f19_arg0, f19_arg1 )
			f19_arg0:__resetProperties() --[[ @ 0]]
			f19_arg0:setupElementClipCounter( 0 ) --[[ @ 0]]
		end
	},
	KBM = {
		DefaultClip = function ( f20_arg0, f20_arg1 )
			f20_arg0:__resetProperties() --[[ @ 0]]
			f20_arg0:setupElementClipCounter( 1 ) --[[ @ 0]]
			f20_arg0.CrateCarousel:completeAnimation() --[[ @ 0]]
			f20_arg0.CrateCarousel:setHorizontalCounter( CoD.horizontalCounter ) --[[ @ 0]]
			f20_arg0.clipFinished( f20_arg0.CrateCarousel ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.ReservesCrateCarousel.__onClose = function ( f21_arg0 )
	f21_arg0.CrateCarousel:close() --[[ @ 0]]
end
 --[[ @ 0]]
