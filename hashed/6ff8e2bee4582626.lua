-- Generated by CoDLuaDecompiler
-- Version: 2.4.2
-- Date: 21-02-2025 19:50
require( "x64:7c4a8b36078c59aa" ) --[[ @ 0]]
require( "x64:56180207311bd274" ) --[[ @ 0]]
require( "x64:4719aa631150ffd4" ) --[[ @ 0]]
require( "x64:501801e1cb1abba2" ) --[[ @ 0]]
require( "x64:55c396528ce30caa" ) --[[ @ 0]]
require( "x64:2225dbf4685ca8f6" ) --[[ @ 0]]

CoD.TabletTak5 = InheritFrom( LUI.UIElement ) --[[ @ 0]]
CoD.TabletTak5.__defaultWidth = 500 --[[ @ 0]]
CoD.TabletTak5.__defaultHeight = 500 --[[ @ 0]]
CoD.TabletTak5.new = function ( f1_arg0, f1_arg1, f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 )
	local self = LUI.UIElement.new( f1_arg2, f1_arg3, f1_arg4, f1_arg5, f1_arg6, f1_arg7, f1_arg8, f1_arg9 ) --[[ @ 0]]
	self:setClass( CoD.TabletTak5 ) --[[ @ 0]]
	self.id = "TabletTak5" --[[ @ 0]]
	self.soundSet = "none" --[[ @ 0]]
	Engine[@"setupui3dwindow"]( f1_arg1, 3, 500, 500 ) --[[ @ 0]]
	self:setUI3DWindow( 3 ) --[[ @ 0]]
	self.anyChildUsesUpdateState = true --[[ @ 0]]
	f1_arg0:addElementToPendingUpdateStateList( self ) --[[ @ 0]]
	
	local background = LUI.UIImage.new( 0.5, 0.5, -250, 250, 0.5, 0.5, -140, 140 ) --[[ @ 0]]
	background:setRGB( 0, 0, 0 ) --[[ @ 0]]
	background:setAlpha( 0.75 ) --[[ @ 0]]
	self:addElement( background ) --[[ @ 0]]
	self.background = background --[[ @ 0]]
	
	local GridBackground = LUI.UIImage.new( 0, 0, -30, 530, 0, 0, 108, 392 ) --[[ @ 0]]
	GridBackground:setImage( RegisterImage( @"uie_ui_hud_tak5_bg_grid" ) ) --[[ @ 0]]
	GridBackground:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_31CC85D0A86303B0" ) ) --[[ @ 0]]
	GridBackground:setShaderVector( 0, 2, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( GridBackground ) --[[ @ 0]]
	self.GridBackground = GridBackground --[[ @ 0]]
	
	local GridPlusGrid = CoD.TabletTak5Grid.new( f1_arg0, f1_arg1, 0, 0, 146, 355, 0, 0, 194, 304 ) --[[ @ 0]]
	self:addElement( GridPlusGrid ) --[[ @ 0]]
	self.GridPlusGrid = GridPlusGrid --[[ @ 0]]
	
	local SelfPlayerInfo = CoD.TabletTak5_PlayerInfo.new( f1_arg0, f1_arg1, 0, 0, 8, 132, 0.5, 0.5, -123, 107 ) --[[ @ 0]]
	SelfPlayerInfo:mergeStateConditions( {
		{
			stateName = "Self",
			condition = function ( menu, element, event )
				return AlwaysTrue()
			end
		},
		{
			stateName = "MaxedOut",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		},
		{
			stateName = "NoTarget",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		}
	} ) --[[ @ 0]]
	SelfPlayerInfo:setScale( 0.9, 0.9 ) --[[ @ 0]]
	SelfPlayerInfo:subscribeToGlobalModel( f1_arg1, "PerController", "predictedClientModel", function ( model )
		local f5_local0 = model:get() --[[ @ 0]]
		if f5_local0 ~= nil then
			SelfPlayerInfo:setModel( f5_local0, f1_arg1 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( SelfPlayerInfo ) --[[ @ 0]]
	self.SelfPlayerInfo = SelfPlayerInfo --[[ @ 0]]
	
	local TargetPlayerInfo = CoD.TabletTak5_PlayerInfo.new( f1_arg0, f1_arg1, 1, 1, -132, -8, 0.5, 0.5, -123, 107 ) --[[ @ 0]]
	TargetPlayerInfo:mergeStateConditions( {
		{
			stateName = "Self",
			condition = function ( menu, element, event )
				return AlwaysFalse()
			end
		}
	} ) --[[ @ 0]]
	local AmmoPip1 = TargetPlayerInfo --[[ @ 0]]
	local ConnectionText = TargetPlayerInfo.subscribeToModel --[[ @ 0]]
	local AmmoPip2 = DataSources.TeammateHealTargeting.getModel( f1_arg1 ) --[[ @ 0]]
	ConnectionText( AmmoPip1, AmmoPip2.status, function ( f7_arg0 )
		f1_arg0:updateElementState( TargetPlayerInfo, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f7_arg0:get(),
			modelName = "status"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoPip1 = TargetPlayerInfo --[[ @ 0]]
	ConnectionText = TargetPlayerInfo.subscribeToModel --[[ @ 0]]
	AmmoPip2 = DataSources.TeammateHealTargeting.getModel( f1_arg1 ) --[[ @ 0]]
	ConnectionText( AmmoPip1, AmmoPip2.targetClientNum, function ( f8_arg0 )
		f1_arg0:updateElementState( TargetPlayerInfo, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f8_arg0:get(),
			modelName = "targetClientNum"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	TargetPlayerInfo:setScale( 0.9, 0.9 ) --[[ @ 0]]
	TargetPlayerInfo:subscribeToGlobalModel( f1_arg1, "TeammateHealTargeting", "targetClient", function ( model )
		local f9_local0 = model:get() --[[ @ 0]]
		if f9_local0 ~= nil then
			TargetPlayerInfo:setModel( f9_local0, f1_arg1 ) --[[ @ 0]]
		end
	end ) --[[ @ 0]]
	self:addElement( TargetPlayerInfo ) --[[ @ 0]]
	self.TargetPlayerInfo = TargetPlayerInfo --[[ @ 0]]
	
	ConnectionText = CoD.TabletTak5_ConnectionText.new( f1_arg0, f1_arg1, 0.5, 0.5, -80, 80, 0, 0, 122, 152 ) --[[ @ 0]]
	self:addElement( ConnectionText ) --[[ @ 0]]
	self.ConnectionText = ConnectionText --[[ @ 0]]
	
	AmmoPip1 = CoD.TabletTak5_AmmoPip.new( f1_arg0, f1_arg1, 0, 0, 304.5, 344.5, 0, 0, 152, 232 ) --[[ @ 0]]
	AmmoPip1:mergeStateConditions( {
		{
			stateName = "Full",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalDataSourceModelValueGreaterThanOrEqualTo( f1_arg1, "CurrentWeapon", "ammoInClip", 4 )
			end
		}
	} ) --[[ @ 0]]
	local AmmoPip3 = AmmoPip1 --[[ @ 0]]
	AmmoPip2 = AmmoPip1.subscribeToModel --[[ @ 0]]
	local AmmoPip4 = DataSources.CurrentWeapon.getModel( f1_arg1 ) --[[ @ 0]]
	AmmoPip2( AmmoPip3, AmmoPip4.ammoInClip, function ( f11_arg0 )
		f1_arg0:updateElementState( AmmoPip1, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f11_arg0:get(),
			modelName = "ammoInClip"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:addElement( AmmoPip1 ) --[[ @ 0]]
	self.AmmoPip1 = AmmoPip1 --[[ @ 0]]
	
	AmmoPip2 = CoD.TabletTak5_AmmoPip.new( f1_arg0, f1_arg1, 0, 0, 255, 295, 0, 0, 152, 232 ) --[[ @ 0]]
	AmmoPip2:mergeStateConditions( {
		{
			stateName = "Full",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalDataSourceModelValueGreaterThanOrEqualTo( f1_arg1, "CurrentWeapon", "ammoInClip", 3 )
			end
		}
	} ) --[[ @ 0]]
	AmmoPip4 = AmmoPip2 --[[ @ 0]]
	AmmoPip3 = AmmoPip2.subscribeToModel --[[ @ 0]]
	local AmmoPipBonus = DataSources.CurrentWeapon.getModel( f1_arg1 ) --[[ @ 0]]
	AmmoPip3( AmmoPip4, AmmoPipBonus.ammoInClip, function ( f13_arg0 )
		f1_arg0:updateElementState( AmmoPip2, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f13_arg0:get(),
			modelName = "ammoInClip"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:addElement( AmmoPip2 ) --[[ @ 0]]
	self.AmmoPip2 = AmmoPip2 --[[ @ 0]]
	
	AmmoPip3 = CoD.TabletTak5_AmmoPip.new( f1_arg0, f1_arg1, 0, 0, 203, 243, 0, 0, 152, 232 ) --[[ @ 0]]
	AmmoPip3:mergeStateConditions( {
		{
			stateName = "Full",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalDataSourceModelValueGreaterThanOrEqualTo( f1_arg1, "CurrentWeapon", "ammoInClip", 2 )
			end
		}
	} ) --[[ @ 0]]
	AmmoPipBonus = AmmoPip3 --[[ @ 0]]
	AmmoPip4 = AmmoPip3.subscribeToModel --[[ @ 0]]
	local takNumber01 = DataSources.CurrentWeapon.getModel( f1_arg1 ) --[[ @ 0]]
	AmmoPip4( AmmoPipBonus, takNumber01.ammoInClip, function ( f15_arg0 )
		f1_arg0:updateElementState( AmmoPip3, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f15_arg0:get(),
			modelName = "ammoInClip"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:addElement( AmmoPip3 ) --[[ @ 0]]
	self.AmmoPip3 = AmmoPip3 --[[ @ 0]]
	
	AmmoPip4 = CoD.TabletTak5_AmmoPip.new( f1_arg0, f1_arg1, 0, 0, 153, 193, 0, 0, 152, 232 ) --[[ @ 0]]
	AmmoPip4:mergeStateConditions( {
		{
			stateName = "Full",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalDataSourceModelValueGreaterThanOrEqualTo( f1_arg1, "CurrentWeapon", "ammoInClip", 1 )
			end
		}
	} ) --[[ @ 0]]
	takNumber01 = AmmoPip4 --[[ @ 0]]
	AmmoPipBonus = AmmoPip4.subscribeToModel --[[ @ 0]]
	local takNumber02 = DataSources.CurrentWeapon.getModel( f1_arg1 ) --[[ @ 0]]
	AmmoPipBonus( takNumber01, takNumber02.ammoInClip, function ( f17_arg0 )
		f1_arg0:updateElementState( AmmoPip4, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f17_arg0:get(),
			modelName = "ammoInClip"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	self:addElement( AmmoPip4 ) --[[ @ 0]]
	self.AmmoPip4 = AmmoPip4 --[[ @ 0]]
	
	AmmoPipBonus = CoD.TabletTak5_AmmoPip.new( f1_arg0, f1_arg1, 0, 0, 153, 193, 0, 0, 237.5, 317.5 ) --[[ @ 0]]
	AmmoPipBonus:mergeStateConditions( {
		{
			stateName = "Full",
			condition = function ( menu, element, event )
				return CoD.ModelUtility.IsGlobalDataSourceModelValueGreaterThanOrEqualTo( f1_arg1, "CurrentWeapon", "ammoInClip", 1 )
			end
		}
	} ) --[[ @ 0]]
	takNumber02 = AmmoPipBonus --[[ @ 0]]
	takNumber01 = AmmoPipBonus.subscribeToModel --[[ @ 0]]
	local takNumber03 = DataSources.CurrentWeapon.getModel( f1_arg1 ) --[[ @ 0]]
	takNumber01( takNumber02, takNumber03.ammoInClip, function ( f19_arg0 )
		f1_arg0:updateElementState( AmmoPipBonus, {
			name = "model_validation",
			menu = f1_arg0,
			controller = f1_arg1,
			modelValue = f19_arg0:get(),
			modelName = "ammoInClip"
		} ) --[[ @ 0]]
	end, false ) --[[ @ 0]]
	AmmoPipBonus:setZRot( 180 ) --[[ @ 0]]
	self:addElement( AmmoPipBonus ) --[[ @ 0]]
	self.AmmoPipBonus = AmmoPipBonus --[[ @ 0]]
	
	takNumber01 = LUI.UIText.new( 0, 0, 309, 340, 0, 0, 216.5, 224.5 ) --[[ @ 0]]
	takNumber01:setText( 1 ) --[[ @ 0]]
	takNumber01:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	takNumber01:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	takNumber01:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	self:addElement( takNumber01 ) --[[ @ 0]]
	self.takNumber01 = takNumber01 --[[ @ 0]]
	
	takNumber02 = LUI.UIText.new( 0, 0, 258.5, 289.5, 0, 0, 216.5, 224.5 ) --[[ @ 0]]
	takNumber02:setText( 2 ) --[[ @ 0]]
	takNumber02:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	takNumber02:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	takNumber02:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	self:addElement( takNumber02 ) --[[ @ 0]]
	self.takNumber02 = takNumber02 --[[ @ 0]]
	
	takNumber03 = LUI.UIText.new( 0, 0, 207.5, 238.5, 0, 0, 216.5, 224.5 ) --[[ @ 0]]
	takNumber03:setText( 3 ) --[[ @ 0]]
	takNumber03:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	takNumber03:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	takNumber03:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	self:addElement( takNumber03 ) --[[ @ 0]]
	self.takNumber03 = takNumber03 --[[ @ 0]]
	
	local takNumber04 = LUI.UIText.new( 0, 0, 157.5, 188.5, 0, 0, 216.5, 224.5 ) --[[ @ 0]]
	takNumber04:setText( 4 ) --[[ @ 0]]
	takNumber04:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	takNumber04:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	takNumber04:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	self:addElement( takNumber04 ) --[[ @ 0]]
	self.takNumber04 = takNumber04 --[[ @ 0]]
	
	local takNumber05 = LUI.UIText.new( 0, 0, 157.5, 188.5, 0, 0, 245, 253 ) --[[ @ 0]]
	takNumber05:setText( 5 ) --[[ @ 0]]
	takNumber05:setTTF( "ttmussels_demibold" ) --[[ @ 0]]
	takNumber05:setAlignment( Enum[@"luialignment"][@"lui_alignment_center"] ) --[[ @ 0]]
	takNumber05:setAlignment( Enum[@"luialignment"][@"lui_alignment_top"] ) --[[ @ 0]]
	self:addElement( takNumber05 ) --[[ @ 0]]
	self.takNumber05 = takNumber05 --[[ @ 0]]
	
	local HealthBonus = CoD.TabletTak5_HealthBonus.new( f1_arg0, f1_arg1, 0, 0, 150, 200, 0, 0, 335, 375 ) --[[ @ 0]]
	self:addElement( HealthBonus ) --[[ @ 0]]
	self.HealthBonus = HealthBonus --[[ @ 0]]
	
	local BorderTop = LUI.UIImage.new( 0, 0, 0, 500, 0, 0, 0, 110 ) --[[ @ 0]]
	BorderTop:setRGB( 0, 0, 0 ) --[[ @ 0]]
	self:addElement( BorderTop ) --[[ @ 0]]
	self.BorderTop = BorderTop --[[ @ 0]]
	
	local BorderBottom = LUI.UIImage.new( 0, 0, 0, 500, 1, 1, -110, 0 ) --[[ @ 0]]
	BorderBottom:setRGB( 0, 0, 0 ) --[[ @ 0]]
	self:addElement( BorderBottom ) --[[ @ 0]]
	self.BorderBottom = BorderBottom --[[ @ 0]]
	
	local Tak5Version = LUI.UIImage.new( 0, 0, 246, 350, 0, 0, 242, 264 ) --[[ @ 0]]
	Tak5Version:setAlpha( 0.25 ) --[[ @ 0]]
	Tak5Version:setImage( RegisterImage( @"uie_ui_hud_tak5_module_version" ) ) --[[ @ 0]]
	Tak5Version:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_31CC85D0A86303B0" ) ) --[[ @ 0]]
	Tak5Version:setShaderVector( 0, 2, 0, 0, 0 ) --[[ @ 0]]
	self:addElement( Tak5Version ) --[[ @ 0]]
	self.Tak5Version = Tak5Version --[[ @ 0]]
	
	local tak5LinkAll = CoD.TabletTak5_LinkAll.new( f1_arg0, f1_arg1, 0, 0, 119.5, 382.5, 0, 0, 176, 371 ) --[[ @ 0]]
	self:addElement( tak5LinkAll ) --[[ @ 0]]
	self.tak5LinkAll = tak5LinkAll --[[ @ 0]]
	
	LUI.OverrideFunction_CallOriginalSecond( self, "close", self.__onClose ) --[[ @ 0]]
	
	if PostLoadFunc then
		PostLoadFunc( self, f1_arg1, f1_arg0 ) --[[ @ 0]]
	end
	
	return self
end
 --[[ @ 0]]
CoD.TabletTak5.__resetProperties = function ( f20_arg0 )
	f20_arg0.BorderTop:completeAnimation() --[[ @ 0]]
	f20_arg0.BorderBottom:completeAnimation() --[[ @ 0]]
	f20_arg0.GridBackground:completeAnimation() --[[ @ 0]]
	f20_arg0.BorderTop:setAlpha( 1 ) --[[ @ 0]]
	f20_arg0.BorderBottom:setAlpha( 1 ) --[[ @ 0]]
	f20_arg0.GridBackground:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_31CC85D0A86303B0" ) ) --[[ @ 0]]
	f20_arg0.GridBackground:setShaderVector( 0, 2, 0, 0, 0 ) --[[ @ 0]]
end
 --[[ @ 0]]
CoD.TabletTak5.__clipsPerState = {
	DefaultState = {
		DefaultClip = function ( f21_arg0, f21_arg1 )
			f21_arg0:__resetProperties() --[[ @ 0]]
			f21_arg0:setupElementClipCounter( 3 ) --[[ @ 0]]
			f21_arg0.GridBackground:completeAnimation() --[[ @ 0]]
			f21_arg0.GridBackground:setMaterial( LUI.UIImage.GetCachedMaterial( @"hash_31CC85D0A86303B0" ) ) --[[ @ 0]]
			f21_arg0.GridBackground:setShaderVector( 0, 2.2, 0, 0, 0 ) --[[ @ 0]]
			f21_arg0.clipFinished( f21_arg0.GridBackground ) --[[ @ 0]]
			f21_arg0.BorderTop:completeAnimation() --[[ @ 0]]
			f21_arg0.BorderTop:setAlpha( 1 ) --[[ @ 0]]
			f21_arg0.clipFinished( f21_arg0.BorderTop ) --[[ @ 0]]
			f21_arg0.BorderBottom:completeAnimation() --[[ @ 0]]
			f21_arg0.BorderBottom:setAlpha( 0 ) --[[ @ 0]]
			f21_arg0.clipFinished( f21_arg0.BorderBottom ) --[[ @ 0]]
		end
	}
} --[[ @ 0]]
CoD.TabletTak5.__onClose = function ( f22_arg0 )
	f22_arg0.GridPlusGrid:close() --[[ @ 0]]
	f22_arg0.SelfPlayerInfo:close() --[[ @ 0]]
	f22_arg0.TargetPlayerInfo:close() --[[ @ 0]]
	f22_arg0.ConnectionText:close() --[[ @ 0]]
	f22_arg0.AmmoPip1:close() --[[ @ 0]]
	f22_arg0.AmmoPip2:close() --[[ @ 0]]
	f22_arg0.AmmoPip3:close() --[[ @ 0]]
	f22_arg0.AmmoPip4:close() --[[ @ 0]]
	f22_arg0.AmmoPipBonus:close() --[[ @ 0]]
	f22_arg0.HealthBonus:close() --[[ @ 0]]
	f22_arg0.tak5LinkAll:close() --[[ @ 0]]
end
 --[[ @ 0]]
